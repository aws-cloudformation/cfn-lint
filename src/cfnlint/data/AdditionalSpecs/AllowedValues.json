{
  "ResourceTypes": {
    "AWS::AmazonMQ::Broker": {
      "Properties": {
        "EngineVersion": {
          "AllowedValues": [
            "5.15.0"
          ]
        },
        "DeploymentMode": {
          "AllowedValues": [
            "SINGLE_INSTANCE",
            "ACTIVE_STANDBY_MULTI_AZ"
          ]
        },
        "EngineType": {
          "AllowedValues": [
            "ACTIVEMQ"
          ]
        }
      }
    },
    "AWS::AmazonMQ::Configuration": {
      "Properties": {
        "EngineVersion": {
          "AllowedValues": [
            "5.15.0"
          ]
        },
        "EngineType": {
          "AllowedValues": [
            "ACTIVEMQ"
          ]
        }
      }
    },
    "AWS::DMS::Endpoint": {
      "Properties": {
        "SslMode": {
          "AllowedValues": [
            "none",
            "require",
            "verify-ca",
            "verify-full"
          ]
        }
      }
    },
    "AWS::EC2::Volume": {
      "Properties": {
        "VolumeType": {
          "AllowedValues": [
            "gp2",
            "io1",
            "sc1",
            "st1",
            "standard"
          ]
        }
      }
    },
    "AWS::EC2::VPC": {
      "Properties": {
        "InstanceTenancy": {
          "AllowedValues": [
            "dedicated",
            "default"
          ]
        }
      }
    },
    "AWS::Lambda::Function": {
      "Properties": {
        "Runtime": {
          "AllowedValues": [
            "nodejs",
            "nodejs4.3",
            "nodejs6.10",
            "nodejs8.10",
            "java8",
            "python2.7",
            "python3.6",
            "dotnetcore1.0",
            "dotnetcore2.0",
            "dotnetcore2.1",
            "nodejs4.3-edge",
            "go1.x"
          ]
        }
      }
    },
    "AWS::RDS::DBCluster": {
      "Properties": {
        "Engine": {
          "AllowedValues": [
            "aurora",
            "aurora-mysql",
            "aurora-postgresql"
          ]
        },
        "EngineMode": {
          "AllowedValues": [
            "provisioned",
            "serverless"
          ]
        }
      }
    },
    "AWS::Route53::RecordSet": {
      "Properties": {
        "Type": {
          "AllowedValues": [
            "A",
            "AAAA",
            "CAA",
            "CNAME",
            "MX",
            "NAPTR",
            "NS",
            "PTR",
            "SOA",
            "SPF",
            "SRV",
            "TXT"
          ]
        }
      }
    }
  },
  "PropertyTypes": {
    "AWS::AutoScaling::LaunchConfiguration.BlockDevice": {
      "Properties": {
        "VolumeType": {
          "AllowedValues": [
            "gp2",
            "io1",
            "sc1",
            "st1",
            "standard"
          ]
        }
      }
    },
    "AWS::EC2::SpotFleet.EbsBlockDevice": {
      "Properties": {
        "VolumeType": {
          "AllowedValues": [
            "gp2",
            "io1",
            "sc1",
            "st1",
            "standard"
          ]
        }
      }
    },
    "AWS::Glue::Connection.ConnectionInput": {
      "Properties": {
        "ConnectionType": {
          "AllowedValues": [
            "JDBC",
            "SFTP"
          ]
        }
      }
    },
    "AWS::OpsWorks::Instance.EbsBlockDevice": {
      "Properties": {
        "VolumeType": {
          "AllowedValues": [
            "gp2",
            "io1",
            "sc1",
            "st1",
            "standard"
          ]
        }
      }
    },
    "AWS::OpsWorks::Layer.VolumeConfiguration": {
      "Properties": {
        "VolumeType": {
          "AllowedValues": [
            "gp2",
            "io1",
            "sc1",
            "st1",
            "standard"
          ]
        }
      }
    },
    "AWS::Route53::RecordSetGroup.RecordSet": {
      "Properties": {
        "Type": {
          "AllowedValues": [
            "A",
            "AAAA",
            "CAA",
            "CNAME",
            "MX",
            "NAPTR",
            "NS",
            "PTR",
            "SOA",
            "SPF",
            "SRV",
            "TXT"
          ]
        }
      }
    },
    "AWS::S3::Bucket.VersioningConfiguration": {
      "Properties": {
        "Status": {
          "AllowedValues": [
            "Enabled",
            "Suspended"
          ]
        }
      }
    },
    "AWS::WAF::Rule.Predicate": {
      "Properties": {
        "Type": {
          "AllowedValues": [
            "ByteMatch",
            "GeoMatch",
            "IPMatch",
            "RegexMatch",
            "SizeConstraint",
            "SqlInjectionMatch",
            "XssMatch"
          ]
        }
      }
    }
  }
}
