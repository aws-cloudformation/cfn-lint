{
 "a2c": {
  "Actions": {
   "getcontainerizationjobdetails": {},
   "getdeploymentjobdetails": {},
   "startcontainerizationjob": {},
   "startdeploymentjob": {}
  },
  "Resources": {}
 },
 "a4b": {
  "Actions": {
   "approveskill": {},
   "associatecontactwithaddressbook": {
    "Resources": [
     "addressbook",
     "contact"
    ]
   },
   "associatedevicewithnetworkprofile": {
    "Resources": [
     "device",
     "networkprofile"
    ]
   },
   "associatedevicewithroom": {
    "Resources": [
     "device",
     "room"
    ]
   },
   "associateskillgroupwithroom": {
    "Resources": [
     "room",
     "skillgroup"
    ]
   },
   "associateskillwithskillgroup": {
    "Resources": [
     "skillgroup"
    ]
   },
   "associateskillwithusers": {},
   "completeregistration": {},
   "createaddressbook": {},
   "createbusinessreportschedule": {},
   "createconferenceprovider": {},
   "createcontact": {},
   "creategatewaygroup": {},
   "createnetworkprofile": {},
   "createprofile": {},
   "createroom": {
    "Resources": [
     "profile"
    ]
   },
   "createskillgroup": {},
   "createuser": {
    "Resources": [
     "user"
    ]
   },
   "deleteaddressbook": {
    "Resources": [
     "addressbook"
    ]
   },
   "deletebusinessreportschedule": {
    "Resources": [
     "schedule"
    ]
   },
   "deleteconferenceprovider": {
    "Resources": [
     "conferenceprovider"
    ]
   },
   "deletecontact": {
    "Resources": [
     "contact"
    ]
   },
   "deletedevice": {
    "Resources": [
     "device"
    ]
   },
   "deletedeviceusagedata": {
    "Resources": [
     "device"
    ]
   },
   "deletegatewaygroup": {
    "Resources": [
     "gatewaygroup"
    ]
   },
   "deletenetworkprofile": {
    "Resources": [
     "networkprofile"
    ]
   },
   "deleteprofile": {
    "Resources": [
     "profile"
    ]
   },
   "deleteroom": {
    "Resources": [
     "room"
    ]
   },
   "deleteroomskillparameter": {
    "Resources": [
     "room"
    ]
   },
   "deleteskillauthorization": {
    "Resources": [
     "room"
    ]
   },
   "deleteskillgroup": {
    "Resources": [
     "skillgroup"
    ]
   },
   "deleteuser": {
    "Resources": [
     "user"
    ]
   },
   "disassociatecontactfromaddressbook": {
    "Resources": [
     "addressbook",
     "contact"
    ]
   },
   "disassociatedevicefromroom": {
    "Resources": [
     "device"
    ]
   },
   "disassociateskillfromskillgroup": {
    "Resources": [
     "skillgroup"
    ]
   },
   "disassociateskillfromusers": {
    "Resources": [
     "user"
    ]
   },
   "disassociateskillgroupfromroom": {
    "Resources": [
     "room",
     "skillgroup"
    ]
   },
   "forgetsmarthomeappliances": {
    "Resources": [
     "room"
    ]
   },
   "getaddressbook": {
    "Resources": [
     "addressbook"
    ]
   },
   "getconferencepreference": {},
   "getconferenceprovider": {
    "Resources": [
     "conferenceprovider"
    ]
   },
   "getcontact": {
    "Resources": [
     "contact"
    ]
   },
   "getdevice": {
    "Resources": [
     "device"
    ]
   },
   "getgateway": {
    "Resources": [
     "gateway"
    ]
   },
   "getgatewaygroup": {
    "Resources": [
     "gatewaygroup"
    ]
   },
   "getinvitationconfiguration": {},
   "getnetworkprofile": {
    "Resources": [
     "networkprofile"
    ]
   },
   "getprofile": {
    "Resources": [
     "profile"
    ]
   },
   "getroom": {
    "Resources": [
     "room"
    ]
   },
   "getroomskillparameter": {
    "Resources": [
     "room"
    ]
   },
   "getskillgroup": {
    "Resources": [
     "skillgroup"
    ]
   },
   "listbusinessreportschedules": {},
   "listconferenceproviders": {},
   "listdeviceevents": {
    "Resources": [
     "device"
    ]
   },
   "listgatewaygroups": {},
   "listgateways": {
    "Resources": [
     "gatewaygroup"
    ]
   },
   "listskills": {},
   "listskillsstorecategories": {},
   "listskillsstoreskillsbycategory": {},
   "listsmarthomeappliances": {
    "Resources": [
     "room"
    ]
   },
   "listtags": {
    "Resources": [
     "device",
     "room",
     "user"
    ]
   },
   "putconferencepreference": {},
   "putdevicesetupevents": {},
   "putinvitationconfiguration": {},
   "putroomskillparameter": {
    "Resources": [
     "room"
    ]
   },
   "putskillauthorization": {
    "Resources": [
     "room"
    ]
   },
   "registeravsdevice": {},
   "registerdevice": {},
   "rejectskill": {},
   "resolveroom": {},
   "revokeinvitation": {
    "Resources": [
     "user"
    ]
   },
   "searchaddressbooks": {},
   "searchcontacts": {},
   "searchdevices": {},
   "searchnetworkprofiles": {},
   "searchprofiles": {},
   "searchrooms": {},
   "searchskillgroups": {},
   "searchusers": {},
   "sendannouncement": {},
   "sendinvitation": {
    "Resources": [
     "user"
    ]
   },
   "startdevicesync": {},
   "startsmarthomeappliancediscovery": {
    "Resources": [
     "room"
    ]
   },
   "tagresource": {
    "Resources": [
     "device",
     "room",
     "user"
    ]
   },
   "untagresource": {
    "Resources": [
     "device",
     "room",
     "user"
    ]
   },
   "updateaddressbook": {
    "Resources": [
     "addressbook"
    ]
   },
   "updatebusinessreportschedule": {
    "Resources": [
     "schedule"
    ]
   },
   "updateconferenceprovider": {
    "Resources": [
     "conferenceprovider"
    ]
   },
   "updatecontact": {
    "Resources": [
     "contact"
    ]
   },
   "updatedevice": {
    "Resources": [
     "device"
    ]
   },
   "updategateway": {
    "Resources": [
     "gateway"
    ]
   },
   "updategatewaygroup": {
    "Resources": [
     "gatewaygroup"
    ]
   },
   "updatenetworkprofile": {
    "Resources": [
     "networkprofile"
    ]
   },
   "updateprofile": {
    "Resources": [
     "profile"
    ]
   },
   "updateroom": {
    "Resources": [
     "room"
    ]
   },
   "updateskillgroup": {
    "Resources": [
     "skillgroup"
    ]
   }
  },
  "Resources": {
   "addressbook": {
    "ARNFormats": [
     "arn:${Partition}:a4b:${Region}:${Account}:address-book/.*"
    ]
   },
   "conferenceprovider": {
    "ARNFormats": [
     "arn:${Partition}:a4b:${Region}:${Account}:conference-provider/.*"
    ]
   },
   "contact": {
    "ARNFormats": [
     "arn:${Partition}:a4b:${Region}:${Account}:contact/.*"
    ]
   },
   "device": {
    "ARNFormats": [
     "arn:${Partition}:a4b:${Region}:${Account}:device/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "gateway": {
    "ARNFormats": [
     "arn:${Partition}:a4b:${Region}:${Account}:gateway/.*"
    ]
   },
   "gatewaygroup": {
    "ARNFormats": [
     "arn:${Partition}:a4b:${Region}:${Account}:gateway-group/.*"
    ]
   },
   "networkprofile": {
    "ARNFormats": [
     "arn:${Partition}:a4b:${Region}:${Account}:network-profile/.*"
    ]
   },
   "profile": {
    "ARNFormats": [
     "arn:${Partition}:a4b:${Region}:${Account}:profile/.*"
    ]
   },
   "room": {
    "ARNFormats": [
     "arn:${Partition}:a4b:${Region}:${Account}:room/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "schedule": {
    "ARNFormats": [
     "arn:${Partition}:a4b:${Region}:${Account}:schedule/.*"
    ]
   },
   "skillgroup": {
    "ARNFormats": [
     "arn:${Partition}:a4b:${Region}:${Account}:skill-group/.*"
    ]
   },
   "user": {
    "ARNFormats": [
     "arn:${Partition}:a4b:${Region}:${Account}:user/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "access-analyzer": {
  "Actions": {
   "applyarchiverule": {
    "Resources": [
     "Analyzer"
    ]
   },
   "cancelpolicygeneration": {},
   "checkaccessnotgranted": {},
   "checknonewaccess": {},
   "checknopublicaccess": {},
   "createaccesspreview": {
    "Resources": [
     "Analyzer"
    ]
   },
   "createanalyzer": {
    "Resources": [
     "Analyzer"
    ]
   },
   "createarchiverule": {
    "Resources": [
     "ArchiveRule"
    ]
   },
   "deleteanalyzer": {
    "Resources": [
     "Analyzer"
    ]
   },
   "deletearchiverule": {
    "Resources": [
     "ArchiveRule"
    ]
   },
   "generatefindingrecommendation": {
    "Resources": [
     "Analyzer"
    ]
   },
   "getaccesspreview": {
    "Resources": [
     "Analyzer"
    ]
   },
   "getanalyzedresource": {
    "Resources": [
     "Analyzer"
    ]
   },
   "getanalyzer": {
    "Resources": [
     "Analyzer"
    ]
   },
   "getarchiverule": {
    "Resources": [
     "ArchiveRule"
    ]
   },
   "getfinding": {
    "Resources": [
     "Analyzer"
    ]
   },
   "getfindingrecommendation": {
    "Resources": [
     "Analyzer"
    ]
   },
   "getfindingsstatistics": {
    "Resources": [
     "Analyzer"
    ]
   },
   "getgeneratedpolicy": {},
   "listaccesspreviewfindings": {
    "Resources": [
     "Analyzer"
    ]
   },
   "listaccesspreviews": {
    "Resources": [
     "Analyzer"
    ]
   },
   "listanalyzedresources": {
    "Resources": [
     "Analyzer"
    ]
   },
   "listanalyzers": {},
   "listarchiverules": {
    "Resources": [
     "Analyzer"
    ]
   },
   "listfindings": {
    "Resources": [
     "Analyzer"
    ]
   },
   "listpolicygenerations": {},
   "listtagsforresource": {
    "Resources": [
     "Analyzer"
    ]
   },
   "startpolicygeneration": {},
   "startresourcescan": {
    "Resources": [
     "Analyzer"
    ]
   },
   "tagresource": {
    "Resources": [
     "Analyzer"
    ]
   },
   "untagresource": {
    "Resources": [
     "Analyzer"
    ]
   },
   "updateanalyzer": {
    "Resources": [
     "Analyzer"
    ]
   },
   "updatearchiverule": {
    "Resources": [
     "ArchiveRule"
    ]
   },
   "updatefindings": {
    "Resources": [
     "Analyzer"
    ]
   },
   "validatepolicy": {}
  },
  "Resources": {
   "analyzer": {
    "ARNFormats": [
     "arn:${Partition}:access-analyzer:${Region}:${Account}:analyzer/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "archiverule": {
    "ARNFormats": [
     "arn:${Partition}:access-analyzer:${Region}:${Account}:analyzer/.*"
    ]
   }
  }
 },
 "account": {
  "Actions": {
   "acceptprimaryemailupdate": {
    "Resources": [
     "accountInOrganization"
    ]
   },
   "closeaccount": {
    "Resources": [
     "account"
    ]
   },
   "deletealternatecontact": {
    "Resources": [
     "account",
     "accountInOrganization"
    ]
   },
   "disableregion": {
    "Resources": [
     "account",
     "accountInOrganization"
    ]
   },
   "enableregion": {
    "Resources": [
     "account",
     "accountInOrganization"
    ]
   },
   "getaccountinformation": {
    "Resources": [
     "account"
    ]
   },
   "getalternatecontact": {
    "Resources": [
     "account",
     "accountInOrganization"
    ]
   },
   "getcontactinformation": {
    "Resources": [
     "account",
     "accountInOrganization"
    ]
   },
   "getprimaryemail": {
    "Resources": [
     "accountInOrganization"
    ]
   },
   "getregionoptstatus": {
    "Resources": [
     "account",
     "accountInOrganization"
    ]
   },
   "listregions": {
    "Resources": [
     "account",
     "accountInOrganization"
    ]
   },
   "putalternatecontact": {
    "Resources": [
     "account",
     "accountInOrganization"
    ]
   },
   "putcontactinformation": {
    "Resources": [
     "account",
     "accountInOrganization"
    ]
   },
   "startprimaryemailupdate": {
    "Resources": [
     "accountInOrganization"
    ]
   }
  },
  "Resources": {
   "account": {
    "ARNFormats": [
     "arn:${Partition}:account::${Account}:account"
    ]
   },
   "accountinorganization": {
    "ARNFormats": [
     "arn:${Partition}:account::${ManagementAccountId}:account/.*"
    ]
   }
  }
 },
 "acm": {
  "Actions": {
   "addtagstocertificate": {
    "Resources": [
     "certificate"
    ]
   },
   "deletecertificate": {
    "Resources": [
     "certificate"
    ]
   },
   "describecertificate": {
    "Resources": [
     "certificate"
    ]
   },
   "exportcertificate": {
    "Resources": [
     "certificate"
    ]
   },
   "getaccountconfiguration": {},
   "getcertificate": {
    "Resources": [
     "certificate"
    ]
   },
   "importcertificate": {
    "Resources": [
     "certificate"
    ]
   },
   "listcertificates": {},
   "listtagsforcertificate": {
    "Resources": [
     "certificate"
    ]
   },
   "putaccountconfiguration": {},
   "removetagsfromcertificate": {
    "Resources": [
     "certificate"
    ]
   },
   "renewcertificate": {
    "Resources": [
     "certificate"
    ]
   },
   "requestcertificate": {},
   "resendvalidationemail": {
    "Resources": [
     "certificate"
    ]
   },
   "updatecertificateoptions": {
    "Resources": [
     "certificate"
    ]
   }
  },
  "Resources": {
   "certificate": {
    "ARNFormats": [
     "arn:${Partition}:acm:${Region}:${Account}:certificate/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "acm-pca": {
  "Actions": {
   "createcertificateauthority": {},
   "createcertificateauthorityauditreport": {
    "Resources": [
     "certificate-authority"
    ]
   },
   "createpermission": {
    "Resources": [
     "certificate-authority"
    ]
   },
   "deletecertificateauthority": {
    "Resources": [
     "certificate-authority"
    ]
   },
   "deletepermission": {
    "Resources": [
     "certificate-authority"
    ]
   },
   "deletepolicy": {
    "Resources": [
     "certificate-authority"
    ]
   },
   "describecertificateauthority": {
    "Resources": [
     "certificate-authority"
    ]
   },
   "describecertificateauthorityauditreport": {
    "Resources": [
     "certificate-authority"
    ]
   },
   "getcertificate": {
    "Resources": [
     "certificate-authority"
    ]
   },
   "getcertificateauthoritycertificate": {
    "Resources": [
     "certificate-authority"
    ]
   },
   "getcertificateauthoritycsr": {
    "Resources": [
     "certificate-authority"
    ]
   },
   "getpolicy": {
    "Resources": [
     "certificate-authority"
    ]
   },
   "importcertificateauthoritycertificate": {
    "Resources": [
     "certificate-authority"
    ]
   },
   "issuecertificate": {
    "Resources": [
     "certificate-authority"
    ]
   },
   "listcertificateauthorities": {},
   "listpermissions": {
    "Resources": [
     "certificate-authority"
    ]
   },
   "listtags": {
    "Resources": [
     "certificate-authority"
    ]
   },
   "putpolicy": {
    "Resources": [
     "certificate-authority"
    ]
   },
   "restorecertificateauthority": {
    "Resources": [
     "certificate-authority"
    ]
   },
   "revokecertificate": {
    "Resources": [
     "certificate-authority"
    ]
   },
   "tagcertificateauthority": {
    "Resources": [
     "certificate-authority"
    ]
   },
   "untagcertificateauthority": {
    "Resources": [
     "certificate-authority"
    ]
   },
   "updatecertificateauthority": {
    "Resources": [
     "certificate-authority"
    ]
   }
  },
  "Resources": {
   "certificate-authority": {
    "ARNFormats": [
     "arn:${Partition}:acm-pca:${Region}:${Account}:certificate-authority/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "activate": {
  "Actions": {
   "createform": {},
   "getaccountcontact": {},
   "getcontentinfo": {},
   "getcosts": {},
   "getcredits": {},
   "getmemberinfo": {},
   "getprogram": {},
   "putmemberinfo": {}
  },
  "Resources": {}
 },
 "aiops": {
  "Actions": {
   "createinvestigation": {
    "Resources": [
     "investigation-group"
    ]
   },
   "createinvestigationevent": {
    "Resources": [
     "investigation-group"
    ]
   },
   "createinvestigationgroup": {},
   "createinvestigationresource": {
    "Resources": [
     "investigation-group"
    ]
   },
   "deleteinvestigation": {
    "Resources": [
     "investigation-group"
    ]
   },
   "deleteinvestigationgroup": {
    "Resources": [
     "investigation-group"
    ]
   },
   "deleteinvestigationgrouppolicy": {
    "Resources": [
     "investigation-group"
    ]
   },
   "getinvestigation": {
    "Resources": [
     "investigation-group"
    ]
   },
   "getinvestigationevent": {
    "Resources": [
     "investigation-group"
    ]
   },
   "getinvestigationgroup": {
    "Resources": [
     "investigation-group"
    ]
   },
   "getinvestigationgrouppolicy": {
    "Resources": [
     "investigation-group"
    ]
   },
   "getinvestigationresource": {
    "Resources": [
     "investigation-group"
    ]
   },
   "listinvestigationevents": {
    "Resources": [
     "investigation-group"
    ]
   },
   "listinvestigationgroups": {},
   "listinvestigations": {
    "Resources": [
     "investigation-group"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "investigation-group"
    ]
   },
   "putinvestigationgrouppolicy": {
    "Resources": [
     "investigation-group"
    ]
   },
   "tagresource": {
    "Resources": [
     "investigation-group"
    ]
   },
   "untagresource": {
    "Resources": [
     "investigation-group"
    ]
   },
   "updateinvestigation": {
    "Resources": [
     "investigation-group"
    ]
   },
   "updateinvestigationevent": {
    "Resources": [
     "investigation-group"
    ]
   },
   "updateinvestigationgroup": {
    "Resources": [
     "investigation-group"
    ]
   }
  },
  "Resources": {
   "investigation-group": {
    "ARNFormats": [
     "arn:${Partition}:aiops:${Region}:${Account}:investigation-group/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "airflow": {
  "Actions": {
   "createclitoken": {
    "Resources": [
     "environment"
    ]
   },
   "createenvironment": {
    "Resources": [
     "environment"
    ]
   },
   "createweblogintoken": {
    "Resources": [
     "rbac-role"
    ]
   },
   "deleteenvironment": {
    "Resources": [
     "environment"
    ]
   },
   "getenvironment": {
    "Resources": [
     "environment"
    ]
   },
   "invokerestapi": {
    "Resources": [
     "rbac-role"
    ]
   },
   "listenvironments": {},
   "listtagsforresource": {
    "Resources": [
     "environment"
    ]
   },
   "publishmetrics": {
    "Resources": [
     "environment"
    ]
   },
   "tagresource": {
    "Resources": [
     "environment"
    ]
   },
   "untagresource": {
    "Resources": [
     "environment"
    ]
   },
   "updateenvironment": {
    "Resources": [
     "environment"
    ]
   }
  },
  "Resources": {
   "environment": {
    "ARNFormats": [
     "arn:${Partition}:airflow:${Region}:${Account}:environment/.*"
    ]
   },
   "rbac-role": {
    "ARNFormats": [
     "arn:${Partition}:airflow:${Region}:${Account}:role/.*"
    ]
   }
  }
 },
 "amplify": {
  "Actions": {
   "associatewebacl": {
    "Resources": [
     "apps"
    ]
   },
   "createapp": {
    "Resources": [
     "apps"
    ]
   },
   "createbackendenvironment": {
    "Resources": [
     "apps"
    ]
   },
   "createbranch": {
    "Resources": [
     "branches"
    ]
   },
   "createdeployment": {
    "Resources": [
     "branches"
    ]
   },
   "createdomainassociation": {
    "Resources": [
     "domains"
    ]
   },
   "createwebhook": {
    "Resources": [
     "branches"
    ]
   },
   "deleteapp": {
    "Resources": [
     "apps"
    ]
   },
   "deletebackendenvironment": {
    "Resources": [
     "apps"
    ]
   },
   "deletebranch": {
    "Resources": [
     "branches"
    ]
   },
   "deletedomainassociation": {
    "Resources": [
     "domains"
    ]
   },
   "deletejob": {
    "Resources": [
     "jobs"
    ]
   },
   "deletewebhook": {
    "Resources": [
     "webhooks"
    ]
   },
   "disassociatewebacl": {
    "Resources": [
     "apps"
    ]
   },
   "generateaccesslogs": {
    "Resources": [
     "apps"
    ]
   },
   "getapp": {
    "Resources": [
     "apps"
    ]
   },
   "getartifacturl": {
    "Resources": [
     "apps"
    ]
   },
   "getbackendenvironment": {
    "Resources": [
     "apps"
    ]
   },
   "getbranch": {
    "Resources": [
     "branches"
    ]
   },
   "getdomainassociation": {
    "Resources": [
     "domains"
    ]
   },
   "getjob": {
    "Resources": [
     "jobs"
    ]
   },
   "getwebaclforresource": {
    "Resources": [
     "apps"
    ]
   },
   "getwebhook": {
    "Resources": [
     "webhooks"
    ]
   },
   "listapps": {},
   "listartifacts": {
    "Resources": [
     "apps"
    ]
   },
   "listbackendenvironments": {
    "Resources": [
     "apps"
    ]
   },
   "listbranches": {
    "Resources": [
     "apps"
    ]
   },
   "listdomainassociations": {
    "Resources": [
     "apps"
    ]
   },
   "listjobs": {
    "Resources": [
     "branches"
    ]
   },
   "listresourcesforwebacl": {},
   "listtagsforresource": {
    "Resources": [
     "apps",
     "branches",
     "domains",
     "webhooks"
    ]
   },
   "listwebhooks": {
    "Resources": [
     "apps"
    ]
   },
   "startdeployment": {
    "Resources": [
     "branches"
    ]
   },
   "startjob": {
    "Resources": [
     "jobs"
    ]
   },
   "stopjob": {
    "Resources": [
     "jobs"
    ]
   },
   "tagresource": {
    "Resources": [
     "apps",
     "branches",
     "domains",
     "webhooks"
    ]
   },
   "untagresource": {
    "Resources": [
     "apps",
     "branches",
     "domains",
     "webhooks"
    ]
   },
   "updateapp": {
    "Resources": [
     "apps"
    ]
   },
   "updatebranch": {
    "Resources": [
     "branches"
    ]
   },
   "updatedomainassociation": {
    "Resources": [
     "domains"
    ]
   },
   "updatewebhook": {
    "Resources": [
     "webhooks"
    ]
   }
  },
  "Resources": {
   "apps": {
    "ARNFormats": [
     "arn:${Partition}:amplify:${Region}:${Account}:apps/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "branches": {
    "ARNFormats": [
     "arn:${Partition}:amplify:${Region}:${Account}:apps/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "domains": {
    "ARNFormats": [
     "arn:${Partition}:amplify:${Region}:${Account}:apps/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "jobs": {
    "ARNFormats": [
     "arn:${Partition}:amplify:${Region}:${Account}:apps/.*"
    ]
   },
   "webhooks": {
    "ARNFormats": [
     "arn:${Partition}:amplify:${Region}:${Account}:webhooks/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "amplifybackend": {
  "Actions": {
   "clonebackend": {
    "Resources": [
     "backend"
    ]
   },
   "createbackend": {
    "Resources": [
     "created-backend"
    ]
   },
   "createbackendapi": {
    "Resources": [
     "api",
     "backend",
     "environment"
    ]
   },
   "createbackendauth": {
    "Resources": [
     "auth",
     "backend",
     "environment"
    ]
   },
   "createbackendconfig": {
    "Resources": [
     "config"
    ]
   },
   "createbackendstorage": {
    "Resources": [
     "backend",
     "environment",
     "storage"
    ]
   },
   "createtoken": {
    "Resources": [
     "backend",
     "token"
    ]
   },
   "deletebackend": {
    "Resources": [
     "backend",
     "environment"
    ]
   },
   "deletebackendapi": {
    "Resources": [
     "api",
     "backend",
     "environment"
    ]
   },
   "deletebackendauth": {
    "Resources": [
     "auth",
     "backend",
     "environment"
    ]
   },
   "deletebackendstorage": {
    "Resources": [
     "backend",
     "environment",
     "storage"
    ]
   },
   "deletetoken": {
    "Resources": [
     "backend",
     "token"
    ]
   },
   "generatebackendapimodels": {
    "Resources": [
     "api",
     "backend",
     "environment"
    ]
   },
   "getbackend": {
    "Resources": [
     "backend",
     "environment"
    ]
   },
   "getbackendapi": {
    "Resources": [
     "api",
     "backend",
     "environment"
    ]
   },
   "getbackendapimodels": {
    "Resources": [
     "api",
     "backend",
     "environment"
    ]
   },
   "getbackendauth": {
    "Resources": [
     "auth",
     "backend",
     "environment"
    ]
   },
   "getbackendjob": {
    "Resources": [
     "backend",
     "job"
    ]
   },
   "getbackendstorage": {
    "Resources": [
     "backend",
     "environment"
    ]
   },
   "gettoken": {
    "Resources": [
     "backend",
     "token"
    ]
   },
   "importbackendauth": {
    "Resources": [
     "auth",
     "backend",
     "environment"
    ]
   },
   "importbackendstorage": {
    "Resources": [
     "backend",
     "environment",
     "storage"
    ]
   },
   "listbackendjobs": {
    "Resources": [
     "backend",
     "job"
    ]
   },
   "lists3buckets": {},
   "removeallbackends": {
    "Resources": [
     "backend",
     "environment"
    ]
   },
   "removebackendconfig": {
    "Resources": [
     "config"
    ]
   },
   "updatebackendapi": {
    "Resources": [
     "api",
     "backend",
     "environment"
    ]
   },
   "updatebackendauth": {
    "Resources": [
     "auth",
     "backend",
     "environment"
    ]
   },
   "updatebackendconfig": {
    "Resources": [
     "config"
    ]
   },
   "updatebackendjob": {
    "Resources": [
     "backend",
     "job"
    ]
   },
   "updatebackendstorage": {
    "Resources": [
     "backend",
     "environment",
     "storage"
    ]
   }
  },
  "Resources": {
   "api": {
    "ARNFormats": [
     "arn:${Partition}:amplifybackend:${Region}:${Account}:/backend/.*"
    ]
   },
   "auth": {
    "ARNFormats": [
     "arn:${Partition}:amplifybackend:${Region}:${Account}:/backend/.*"
    ]
   },
   "backend": {
    "ARNFormats": [
     "arn:${Partition}:amplifybackend:${Region}:${Account}:/backend/.*"
    ]
   },
   "config": {
    "ARNFormats": [
     "arn:${Partition}:amplifybackend:${Region}:${Account}:/backend/.*"
    ]
   },
   "created-backend": {
    "ARNFormats": [
     "arn:${Partition}:amplifybackend:${Region}:${Account}:/backend/*"
    ]
   },
   "environment": {
    "ARNFormats": [
     "arn:${Partition}:amplifybackend:${Region}:${Account}:/backend/.*"
    ]
   },
   "job": {
    "ARNFormats": [
     "arn:${Partition}:amplifybackend:${Region}:${Account}:/backend/.*"
    ]
   },
   "storage": {
    "ARNFormats": [
     "arn:${Partition}:amplifybackend:${Region}:${Account}:/backend/.*"
    ]
   },
   "token": {
    "ARNFormats": [
     "arn:${Partition}:amplifybackend:${Region}:${Account}:/backend/.*"
    ]
   }
  }
 },
 "amplifyuibuilder": {
  "Actions": {
   "createcomponent": {},
   "createform": {},
   "createtheme": {},
   "deletecomponent": {
    "Resources": [
     "ComponentResource"
    ]
   },
   "deleteform": {
    "Resources": [
     "FormResource"
    ]
   },
   "deletetheme": {
    "Resources": [
     "ThemeResource"
    ]
   },
   "exchangecodefortoken": {},
   "exportcomponents": {},
   "exportforms": {},
   "exportthemes": {},
   "getcodegenjob": {
    "Resources": [
     "CodegenJobResource"
    ]
   },
   "getcomponent": {
    "Resources": [
     "ComponentResource"
    ]
   },
   "getform": {
    "Resources": [
     "FormResource"
    ]
   },
   "getmetadata": {},
   "gettheme": {
    "Resources": [
     "ThemeResource"
    ]
   },
   "listcodegenjobs": {},
   "listcomponents": {},
   "listforms": {},
   "listtagsforresource": {
    "Resources": [
     "CodegenJobResource",
     "ComponentResource",
     "FormResource",
     "ThemeResource"
    ]
   },
   "listthemes": {},
   "putmetadataflag": {},
   "refreshtoken": {},
   "resetmetadataflag": {},
   "startcodegenjob": {},
   "tagresource": {
    "Resources": [
     "CodegenJobResource",
     "ComponentResource",
     "FormResource",
     "ThemeResource"
    ]
   },
   "untagresource": {
    "Resources": [
     "CodegenJobResource",
     "ComponentResource",
     "FormResource",
     "ThemeResource"
    ]
   },
   "updatecomponent": {
    "Resources": [
     "ComponentResource"
    ]
   },
   "updateform": {
    "Resources": [
     "FormResource"
    ]
   },
   "updatetheme": {
    "Resources": [
     "ThemeResource"
    ]
   }
  },
  "Resources": {
   "codegenjobresource": {
    "ARNFormats": [
     "arn:${Partition}:amplifyuibuilder:${Region}:${Account}:app/.*"
    ],
    "ConditionKeys": [
     "amplifyuibuilder:CodegenJobResourceAppId",
     "amplifyuibuilder:CodegenJobResourceEnvironmentName",
     "amplifyuibuilder:CodegenJobResourceId",
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "componentresource": {
    "ARNFormats": [
     "arn:${Partition}:amplifyuibuilder:${Region}:${Account}:app/.*"
    ],
    "ConditionKeys": [
     "amplifyuibuilder:ComponentResourceAppId",
     "amplifyuibuilder:ComponentResourceEnvironmentName",
     "amplifyuibuilder:ComponentResourceId",
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "formresource": {
    "ARNFormats": [
     "arn:${Partition}:amplifyuibuilder:${Region}:${Account}:app/.*"
    ],
    "ConditionKeys": [
     "amplifyuibuilder:FormResourceAppId",
     "amplifyuibuilder:FormResourceEnvironmentName",
     "amplifyuibuilder:FormResourceId",
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "themeresource": {
    "ARNFormats": [
     "arn:${Partition}:amplifyuibuilder:${Region}:${Account}:app/.*"
    ],
    "ConditionKeys": [
     "amplifyuibuilder:ThemeResourceAppId",
     "amplifyuibuilder:ThemeResourceEnvironmentName",
     "amplifyuibuilder:ThemeResourceId",
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "aoss": {
  "Actions": {
   "apiaccessall": {
    "Resources": [
     "Collection"
    ]
   },
   "batchgetcollection": {},
   "batchgeteffectivelifecyclepolicy": {},
   "batchgetlifecyclepolicy": {},
   "batchgetvpcendpoint": {},
   "createaccesspolicy": {},
   "createcollection": {},
   "createlifecyclepolicy": {},
   "createsecurityconfig": {},
   "createsecuritypolicy": {},
   "createvpcendpoint": {},
   "dashboardsaccessall": {
    "Resources": [
     "Dashboards"
    ]
   },
   "deleteaccesspolicy": {},
   "deletecollection": {
    "Resources": [
     "Collection"
    ]
   },
   "deletelifecyclepolicy": {},
   "deletesecurityconfig": {},
   "deletesecuritypolicy": {},
   "deletevpcendpoint": {},
   "getaccesspolicy": {},
   "getaccountsettings": {},
   "getpoliciesstats": {},
   "getsecurityconfig": {},
   "getsecuritypolicy": {},
   "listaccesspolicies": {},
   "listcollections": {},
   "listlifecyclepolicies": {},
   "listsecurityconfigs": {},
   "listsecuritypolicies": {},
   "listtagsforresource": {},
   "listvpcendpoints": {},
   "tagresource": {},
   "untagresource": {},
   "updateaccesspolicy": {},
   "updateaccountsettings": {},
   "updatecollection": {
    "Resources": [
     "Collection"
    ]
   },
   "updatelifecyclepolicy": {},
   "updatesecurityconfig": {},
   "updatesecuritypolicy": {},
   "updatevpcendpoint": {}
  },
  "Resources": {
   "collection": {
    "ARNFormats": [
     "arn:${Partition}:aoss:${Region}:${Account}:collection/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "dashboards": {
    "ARNFormats": [
     "arn:${Partition}:aoss:${Region}:${Account}:dashboards/default"
    ]
   }
  }
 },
 "apigateway": {
  "Actions": {
   "addcertificatetodomain": {
    "Resources": [
     "DomainName",
     "DomainNames"
    ]
   },
   "createaccessassociation": {
    "Resources": [
     "PrivateDomainName"
    ]
   },
   "delete": {
    "Resources": [
     "AccessLogSettings",
     "Api",
     "ApiKey",
     "ApiMapping",
     "Authorizer",
     "AuthorizersCache",
     "BasePathMapping",
     "ClientCertificate",
     "Cors",
     "Deployment",
     "DocumentationPart",
     "DocumentationVersion",
     "DomainName",
     "DomainNameAccessAssociation",
     "GatewayResponse",
     "Integration",
     "IntegrationResponse",
     "Method",
     "MethodResponse",
     "Model",
     "PrivateBasePathMapping",
     "PrivateDomainName",
     "RequestValidator",
     "Resource",
     "RestApi",
     "Route",
     "RouteRequestParameter",
     "RouteResponse",
     "RouteSettings",
     "Stage",
     "Tags",
     "Template",
     "UsagePlan",
     "UsagePlanKey",
     "VpcLink"
    ]
   },
   "get": {
    "Resources": [
     "AccessLogSettings",
     "Account",
     "Api",
     "ApiKey",
     "ApiKeys",
     "ApiMapping",
     "ApiMappings",
     "Apis",
     "Authorizer",
     "Authorizers",
     "AuthorizersCache",
     "BasePathMapping",
     "BasePathMappings",
     "ClientCertificate",
     "ClientCertificates",
     "Cors",
     "Deployment",
     "Deployments",
     "DocumentationPart",
     "DocumentationParts",
     "DocumentationVersion",
     "DocumentationVersions",
     "DomainName",
     "DomainNameAccessAssociations",
     "DomainNames",
     "ExportedAPI",
     "GatewayResponse",
     "GatewayResponses",
     "Integration",
     "IntegrationResponse",
     "IntegrationResponses",
     "Integrations",
     "Method",
     "MethodResponse",
     "Model",
     "ModelTemplate",
     "Models",
     "PrivateBasePathMapping",
     "PrivateBasePathMappings",
     "PrivateDomainName",
     "RequestValidator",
     "RequestValidators",
     "Resource",
     "Resources",
     "RestApi",
     "RestApis",
     "Route",
     "RouteRequestParameter",
     "RouteResponse",
     "RouteResponses",
     "RouteSettings",
     "Routes",
     "Sdk",
     "Stage",
     "Stages",
     "Tags",
     "UsagePlan",
     "UsagePlanKey",
     "UsagePlanKeys",
     "UsagePlans",
     "VpcLink",
     "VpcLinks"
    ]
   },
   "patch": {
    "Resources": [
     "Account",
     "Api",
     "ApiKey",
     "ApiMapping",
     "Authorizer",
     "BasePathMapping",
     "ClientCertificate",
     "Deployment",
     "DocumentationPart",
     "DocumentationVersion",
     "DomainName",
     "GatewayResponse",
     "Integration",
     "IntegrationResponse",
     "Method",
     "MethodResponse",
     "Model",
     "PrivateBasePathMapping",
     "PrivateDomainName",
     "RequestValidator",
     "Resource",
     "RestApi",
     "Route",
     "RouteRequestParameter",
     "RouteResponse",
     "Stage",
     "Template",
     "UsagePlan",
     "UsagePlanKey",
     "VpcLink"
    ]
   },
   "post": {
    "Resources": [
     "ApiKeys",
     "ApiMappings",
     "Apis",
     "Authorizers",
     "BasePathMappings",
     "ClientCertificates",
     "Deployments",
     "DocumentationParts",
     "DocumentationVersions",
     "DomainNameAccessAssociations",
     "DomainNames",
     "GatewayResponses",
     "IntegrationResponse",
     "IntegrationResponses",
     "Integrations",
     "MethodResponse",
     "Models",
     "PrivateBasePathMappings",
     "RequestValidators",
     "Resources",
     "RestApis",
     "RouteResponses",
     "Routes",
     "Stages",
     "UsagePlanKeys",
     "UsagePlans",
     "VpcLinks"
    ]
   },
   "put": {
    "Resources": [
     "Api",
     "Apis",
     "DocumentationPart",
     "GatewayResponse",
     "IntegrationResponse",
     "MethodResponse",
     "RestApi",
     "Tags"
    ]
   },
   "rejectaccessassociation": {
    "Resources": [
     "PrivateDomainName"
    ]
   },
   "removecertificatefromdomain": {
    "Resources": [
     "DomainName",
     "DomainNames"
    ]
   },
   "setwebacl": {
    "Resources": [
     "Stage",
     "Stages"
    ]
   },
   "updatedomainnamemanagementpolicy": {
    "Resources": [
     "PrivateDomainName"
    ]
   },
   "updatedomainnamepolicy": {
    "Resources": [
     "DomainNames",
     "PrivateDomainName"
    ]
   },
   "updaterestapipolicy": {
    "Resources": [
     "RestApi",
     "RestApis"
    ]
   }
  },
  "Resources": {
   "accesslogsettings": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/apis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "account": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/account"
    ]
   },
   "api": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/apis/.*"
    ],
    "ConditionKeys": [
     "apigateway:Request/ApiKeyRequired",
     "apigateway:Request/ApiName",
     "apigateway:Request/AuthorizerType",
     "apigateway:Request/AuthorizerUri",
     "apigateway:Request/DisableExecuteApiEndpoint",
     "apigateway:Request/EndpointType",
     "apigateway:Request/RouteAuthorizationType",
     "apigateway:Resource/ApiKeyRequired",
     "apigateway:Resource/ApiName",
     "apigateway:Resource/AuthorizerType",
     "apigateway:Resource/AuthorizerUri",
     "apigateway:Resource/DisableExecuteApiEndpoint",
     "apigateway:Resource/EndpointType",
     "apigateway:Resource/RouteAuthorizationType",
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "apikey": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/apikeys/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "apikeys": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/apikeys"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "apimapping": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/domainnames/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "apimappings": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/domainnames/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "apis": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/apis"
    ],
    "ConditionKeys": [
     "apigateway:Request/ApiKeyRequired",
     "apigateway:Request/ApiName",
     "apigateway:Request/AuthorizerType",
     "apigateway:Request/AuthorizerUri",
     "apigateway:Request/DisableExecuteApiEndpoint",
     "apigateway:Request/EndpointType",
     "apigateway:Request/RouteAuthorizationType",
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "authorizer": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/apis/.*",
     "arn:${Partition}:apigateway:${Region}::/restapis/.*"
    ],
    "ConditionKeys": [
     "apigateway:Request/AuthorizerType",
     "apigateway:Request/AuthorizerUri",
     "apigateway:Resource/AuthorizerType",
     "apigateway:Resource/AuthorizerUri",
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "authorizers": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/apis/.*",
     "arn:${Partition}:apigateway:${Region}::/restapis/.*"
    ],
    "ConditionKeys": [
     "apigateway:Request/AuthorizerType",
     "apigateway:Request/AuthorizerUri",
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "authorizerscache": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/apis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "basepathmapping": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/domainnames/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "basepathmappings": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/domainnames/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "clientcertificate": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/clientcertificates/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "clientcertificates": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/clientcertificates"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "cors": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/apis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "deployment": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/apis/.*",
     "arn:${Partition}:apigateway:${Region}::/restapis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "deployments": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/apis/.*",
     "arn:${Partition}:apigateway:${Region}::/restapis/.*"
    ],
    "ConditionKeys": [
     "apigateway:Request/StageName",
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "documentationpart": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/restapis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "documentationparts": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/restapis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "documentationversion": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/restapis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "documentationversions": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/restapis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "domainname": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/domainnames/.*"
    ],
    "ConditionKeys": [
     "apigateway:Request/EndpointType",
     "apigateway:Request/MtlsTrustStoreUri",
     "apigateway:Request/MtlsTrustStoreVersion",
     "apigateway:Request/SecurityPolicy",
     "apigateway:Resource/EndpointType",
     "apigateway:Resource/MtlsTrustStoreUri",
     "apigateway:Resource/MtlsTrustStoreVersion",
     "apigateway:Resource/SecurityPolicy",
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "domainnameaccessassociation": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}:${Account}:/domainnameaccessassociations/domainname/.*"
    ]
   },
   "domainnameaccessassociations": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}:${Account}:/domainnameaccessassociations"
    ],
    "ConditionKeys": [
     "apigateway:Request/AccessAssociationSource",
     "apigateway:Request/DomainNameArn",
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "domainnames": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/domainnames"
    ],
    "ConditionKeys": [
     "apigateway:Request/EndpointType",
     "apigateway:Request/MtlsTrustStoreUri",
     "apigateway:Request/MtlsTrustStoreVersion",
     "apigateway:Request/SecurityPolicy",
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "exportedapi": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/apis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "gatewayresponse": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/restapis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "gatewayresponses": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/restapis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "integration": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/apis/.*",
     "arn:${Partition}:apigateway:${Region}::/restapis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "integrationresponse": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/apis/.*",
     "arn:${Partition}:apigateway:${Region}::/restapis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "integrationresponses": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/apis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "integrations": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/apis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "method": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/restapis/.*"
    ],
    "ConditionKeys": [
     "apigateway:Request/ApiKeyRequired",
     "apigateway:Request/RouteAuthorizationType",
     "apigateway:Resource/ApiKeyRequired",
     "apigateway:Resource/RouteAuthorizationType",
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "methodresponse": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/restapis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "model": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/apis/.*",
     "arn:${Partition}:apigateway:${Region}::/restapis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "models": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/apis/.*",
     "arn:${Partition}:apigateway:${Region}::/restapis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "modeltemplate": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/apis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "privatebasepathmapping": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/domainnames/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "privatebasepathmappings": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/domainnames/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "privatedomainname": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}:${Account}:/domainnames/.*"
    ],
    "ConditionKeys": [
     "apigateway:Request/EndpointType",
     "apigateway:Resource/EndpointType",
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "requestvalidator": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/restapis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "requestvalidators": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/restapis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "resource": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/restapis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "resources": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/restapis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "restapi": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/restapis/.*"
    ],
    "ConditionKeys": [
     "apigateway:Request/ApiKeyRequired",
     "apigateway:Request/ApiName",
     "apigateway:Request/AuthorizerType",
     "apigateway:Request/AuthorizerUri",
     "apigateway:Request/DisableExecuteApiEndpoint",
     "apigateway:Request/EndpointType",
     "apigateway:Request/RouteAuthorizationType",
     "apigateway:Resource/ApiKeyRequired",
     "apigateway:Resource/ApiName",
     "apigateway:Resource/AuthorizerType",
     "apigateway:Resource/AuthorizerUri",
     "apigateway:Resource/DisableExecuteApiEndpoint",
     "apigateway:Resource/EndpointType",
     "apigateway:Resource/RouteAuthorizationType",
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "restapis": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/restapis"
    ],
    "ConditionKeys": [
     "apigateway:Request/ApiKeyRequired",
     "apigateway:Request/ApiName",
     "apigateway:Request/AuthorizerType",
     "apigateway:Request/AuthorizerUri",
     "apigateway:Request/DisableExecuteApiEndpoint",
     "apigateway:Request/EndpointType",
     "apigateway:Request/RouteAuthorizationType",
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "route": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/apis/.*"
    ],
    "ConditionKeys": [
     "apigateway:Request/ApiKeyRequired",
     "apigateway:Request/RouteAuthorizationType",
     "apigateway:Resource/ApiKeyRequired",
     "apigateway:Resource/RouteAuthorizationType",
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "routerequestparameter": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/apis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "routeresponse": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/apis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "routeresponses": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/apis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "routes": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/apis/.*"
    ],
    "ConditionKeys": [
     "apigateway:Request/ApiKeyRequired",
     "apigateway:Request/RouteAuthorizationType",
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "routesettings": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/apis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "sdk": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/restapis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "stage": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/apis/.*",
     "arn:${Partition}:apigateway:${Region}::/restapis/.*"
    ],
    "ConditionKeys": [
     "apigateway:Request/AccessLoggingDestination",
     "apigateway:Request/AccessLoggingFormat",
     "apigateway:Resource/AccessLoggingDestination",
     "apigateway:Resource/AccessLoggingFormat",
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "stages": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/apis/.*",
     "arn:${Partition}:apigateway:${Region}::/restapis/.*"
    ],
    "ConditionKeys": [
     "apigateway:Request/AccessLoggingDestination",
     "apigateway:Request/AccessLoggingFormat",
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "tags": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/tags/.*"
    ]
   },
   "template": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/restapis/models/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "usageplan": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/usageplans/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "usageplankey": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/usageplans/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "usageplankeys": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/usageplans/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "usageplans": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/usageplans"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "vpclink": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/vpclinks/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "vpclinks": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/vpclinks"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "app-integrations": {
  "Actions": {
   "createapplication": {
    "Resources": [
     "application"
    ]
   },
   "createapplicationassociation": {
    "Resources": [
     "application"
    ]
   },
   "createdataintegration": {
    "Resources": [
     "data-integration"
    ]
   },
   "createdataintegrationassociation": {
    "Resources": [
     "data-integration"
    ]
   },
   "createeventintegration": {
    "Resources": [
     "event-integration"
    ]
   },
   "createeventintegrationassociation": {
    "Resources": [
     "event-integration"
    ]
   },
   "deleteapplication": {
    "Resources": [
     "application"
    ]
   },
   "deleteapplicationassociation": {
    "Resources": [
     "application-association"
    ]
   },
   "deletedataintegration": {
    "Resources": [
     "data-integration"
    ]
   },
   "deletedataintegrationassociation": {
    "Resources": [
     "data-integration-association"
    ]
   },
   "deleteeventintegration": {
    "Resources": [
     "event-integration"
    ]
   },
   "deleteeventintegrationassociation": {
    "Resources": [
     "event-integration-association"
    ]
   },
   "getapplication": {
    "Resources": [
     "application"
    ]
   },
   "getdataintegration": {
    "Resources": [
     "data-integration"
    ]
   },
   "geteventintegration": {
    "Resources": [
     "event-integration"
    ]
   },
   "listapplicationassociations": {},
   "listapplications": {},
   "listdataintegrationassociations": {},
   "listdataintegrations": {},
   "listeventintegrationassociations": {},
   "listeventintegrations": {},
   "listtagsforresource": {
    "Resources": [
     "application",
     "data-integration",
     "data-integration-association",
     "event-integration",
     "event-integration-association"
    ]
   },
   "tagresource": {
    "Resources": [
     "application",
     "application-association",
     "data-integration",
     "data-integration-association",
     "event-integration",
     "event-integration-association"
    ]
   },
   "untagresource": {
    "Resources": [
     "application",
     "application-association",
     "data-integration",
     "data-integration-association",
     "event-integration",
     "event-integration-association"
    ]
   },
   "updateapplication": {
    "Resources": [
     "application"
    ]
   },
   "updatedataintegration": {
    "Resources": [
     "data-integration"
    ]
   },
   "updatedataintegrationassociation": {
    "Resources": [
     "data-integration-association"
    ]
   },
   "updateeventintegration": {
    "Resources": [
     "event-integration"
    ]
   }
  },
  "Resources": {
   "application": {
    "ARNFormats": [
     "arn:${Partition}:app-integrations:${Region}:${Account}:application/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "application-association": {
    "ARNFormats": [
     "arn:${Partition}:app-integrations:${Region}:${Account}:application-association/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "data-integration": {
    "ARNFormats": [
     "arn:${Partition}:app-integrations:${Region}:${Account}:data-integration/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "data-integration-association": {
    "ARNFormats": [
     "arn:${Partition}:app-integrations:${Region}:${Account}:data-integration-association/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "event-integration": {
    "ARNFormats": [
     "arn:${Partition}:app-integrations:${Region}:${Account}:event-integration/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "event-integration-association": {
    "ARNFormats": [
     "arn:${Partition}:app-integrations:${Region}:${Account}:event-integration-association/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "appconfig": {
  "Actions": {
   "createapplication": {},
   "createconfigurationprofile": {
    "Resources": [
     "application"
    ]
   },
   "createdeploymentstrategy": {},
   "createenvironment": {
    "Resources": [
     "application"
    ]
   },
   "createextension": {},
   "createextensionassociation": {},
   "createhostedconfigurationversion": {
    "Resources": [
     "application",
     "configurationprofile"
    ]
   },
   "deleteapplication": {
    "Resources": [
     "application"
    ]
   },
   "deleteconfigurationprofile": {
    "Resources": [
     "application",
     "configurationprofile"
    ]
   },
   "deletedeploymentstrategy": {
    "Resources": [
     "deploymentstrategy"
    ]
   },
   "deleteenvironment": {
    "Resources": [
     "application",
     "environment"
    ]
   },
   "deleteextension": {
    "Resources": [
     "extension"
    ]
   },
   "deleteextensionassociation": {
    "Resources": [
     "extensionassociation"
    ]
   },
   "deletehostedconfigurationversion": {
    "Resources": [
     "application",
     "configurationprofile",
     "hostedconfigurationversion"
    ]
   },
   "getaccountsettings": {},
   "getapplication": {
    "Resources": [
     "application"
    ]
   },
   "getconfiguration": {
    "Resources": [
     "application",
     "configurationprofile",
     "environment"
    ]
   },
   "getconfigurationprofile": {
    "Resources": [
     "application",
     "configurationprofile"
    ]
   },
   "getdeployment": {
    "Resources": [
     "application",
     "deployment",
     "environment"
    ]
   },
   "getdeploymentstrategy": {
    "Resources": [
     "deploymentstrategy"
    ]
   },
   "getenvironment": {
    "Resources": [
     "application",
     "environment"
    ]
   },
   "getextension": {
    "Resources": [
     "extension"
    ]
   },
   "getextensionassociation": {
    "Resources": [
     "extensionassociation"
    ]
   },
   "gethostedconfigurationversion": {
    "Resources": [
     "application",
     "configurationprofile",
     "hostedconfigurationversion"
    ]
   },
   "getlatestconfiguration": {
    "Resources": [
     "configuration"
    ]
   },
   "listapplications": {},
   "listconfigurationprofiles": {
    "Resources": [
     "application"
    ]
   },
   "listdeployments": {
    "Resources": [
     "application",
     "environment"
    ]
   },
   "listdeploymentstrategies": {},
   "listenvironments": {
    "Resources": [
     "application"
    ]
   },
   "listextensionassociations": {},
   "listextensions": {},
   "listhostedconfigurationversions": {
    "Resources": [
     "application",
     "configurationprofile"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "application",
     "configurationprofile",
     "deployment",
     "deploymentstrategy",
     "environment",
     "extension",
     "extensionassociation"
    ]
   },
   "startconfigurationsession": {
    "Resources": [
     "configuration"
    ]
   },
   "startdeployment": {
    "Resources": [
     "application",
     "configurationprofile",
     "deploymentstrategy",
     "environment"
    ]
   },
   "stopdeployment": {
    "Resources": [
     "application",
     "deployment",
     "environment"
    ]
   },
   "tagresource": {
    "Resources": [
     "application",
     "configuration",
     "configurationprofile",
     "deployment",
     "deploymentstrategy",
     "environment",
     "extension",
     "extensionassociation"
    ]
   },
   "untagresource": {
    "Resources": [
     "application",
     "configuration",
     "configurationprofile",
     "deployment",
     "deploymentstrategy",
     "environment",
     "extension",
     "extensionassociation"
    ]
   },
   "updateaccountsettings": {},
   "updateapplication": {
    "Resources": [
     "application"
    ]
   },
   "updateconfigurationprofile": {
    "Resources": [
     "application",
     "configurationprofile"
    ]
   },
   "updatedeploymentstrategy": {
    "Resources": [
     "deploymentstrategy"
    ]
   },
   "updateenvironment": {
    "Resources": [
     "application",
     "environment"
    ]
   },
   "updateextension": {
    "Resources": [
     "extension"
    ]
   },
   "updateextensionassociation": {
    "Resources": [
     "extensionassociation"
    ]
   },
   "validateconfiguration": {
    "Resources": [
     "application",
     "configurationprofile"
    ]
   }
  },
  "Resources": {
   "application": {
    "ARNFormats": [
     "arn:${Partition}:appconfig:${Region}:${Account}:application/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "configuration": {
    "ARNFormats": [
     "arn:${Partition}:appconfig:${Region}:${Account}:application/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "configurationprofile": {
    "ARNFormats": [
     "arn:${Partition}:appconfig:${Region}:${Account}:application/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "deployment": {
    "ARNFormats": [
     "arn:${Partition}:appconfig:${Region}:${Account}:application/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "deploymentstrategy": {
    "ARNFormats": [
     "arn:${Partition}:appconfig:${Region}:${Account}:deploymentstrategy/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "environment": {
    "ARNFormats": [
     "arn:${Partition}:appconfig:${Region}:${Account}:application/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "extension": {
    "ARNFormats": [
     "arn:${Partition}:appconfig:${Region}:${Account}:extension/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "extensionassociation": {
    "ARNFormats": [
     "arn:${Partition}:appconfig:${Region}:${Account}:extensionassociation/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "hostedconfigurationversion": {
    "ARNFormats": [
     "arn:${Partition}:appconfig:${Region}:${Account}:application/.*"
    ]
   }
  }
 },
 "appfabric": {
  "Actions": {
   "batchgetuseraccesstasks": {
    "Resources": [
     "appbundle"
    ]
   },
   "connectappauthorization": {
    "Resources": [
     "appauthorization",
     "appbundle"
    ]
   },
   "createappauthorization": {
    "Resources": [
     "appbundle"
    ]
   },
   "createappbundle": {},
   "createingestion": {
    "Resources": [
     "appbundle"
    ]
   },
   "createingestiondestination": {
    "Resources": [
     "appbundle",
     "ingestion"
    ]
   },
   "deleteappauthorization": {
    "Resources": [
     "appauthorization",
     "appbundle"
    ]
   },
   "deleteappbundle": {
    "Resources": [
     "appbundle"
    ]
   },
   "deleteingestion": {
    "Resources": [
     "appbundle",
     "ingestion"
    ]
   },
   "deleteingestiondestination": {
    "Resources": [
     "appbundle",
     "ingestion",
     "ingestiondestination"
    ]
   },
   "getappauthorization": {
    "Resources": [
     "appauthorization",
     "appbundle"
    ]
   },
   "getappbundle": {
    "Resources": [
     "appbundle"
    ]
   },
   "getingestion": {
    "Resources": [
     "appbundle",
     "ingestion"
    ]
   },
   "getingestiondestination": {
    "Resources": [
     "appbundle",
     "ingestion",
     "ingestiondestination"
    ]
   },
   "listappauthorizations": {
    "Resources": [
     "appbundle"
    ]
   },
   "listappbundles": {},
   "listingestiondestinations": {
    "Resources": [
     "appbundle",
     "ingestion"
    ]
   },
   "listingestions": {
    "Resources": [
     "appbundle"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "appauthorization",
     "appbundle",
     "ingestion",
     "ingestiondestination"
    ]
   },
   "startingestion": {
    "Resources": [
     "appbundle",
     "ingestion"
    ]
   },
   "startuseraccesstasks": {
    "Resources": [
     "appbundle"
    ]
   },
   "stopingestion": {
    "Resources": [
     "appbundle",
     "ingestion"
    ]
   },
   "tagresource": {
    "Resources": [
     "appauthorization",
     "appbundle",
     "ingestion",
     "ingestiondestination"
    ]
   },
   "untagresource": {
    "Resources": [
     "appauthorization",
     "appbundle",
     "ingestion",
     "ingestiondestination"
    ]
   },
   "updateappauthorization": {
    "Resources": [
     "appauthorization",
     "appbundle"
    ]
   },
   "updateingestiondestination": {
    "Resources": [
     "appbundle",
     "ingestion",
     "ingestiondestination"
    ]
   }
  },
  "Resources": {
   "appauthorization": {
    "ARNFormats": [
     "arn:${Partition}:appfabric:${Region}:${Account}:appbundle/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "appbundle": {
    "ARNFormats": [
     "arn:${Partition}:appfabric:${Region}:${Account}:appbundle/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "ingestion": {
    "ARNFormats": [
     "arn:${Partition}:appfabric:${Region}:${Account}:appbundle/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "ingestiondestination": {
    "ARNFormats": [
     "arn:${Partition}:appfabric:${Region}:${Account}:appbundle/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "appflow": {
  "Actions": {
   "cancelflowexecutions": {
    "Resources": [
     "flow"
    ]
   },
   "createconnectorprofile": {},
   "createflow": {},
   "deleteconnectorprofile": {
    "Resources": [
     "connectorprofile"
    ]
   },
   "deleteflow": {
    "Resources": [
     "flow"
    ]
   },
   "describeconnector": {
    "Resources": [
     "connector"
    ]
   },
   "describeconnectorentity": {
    "Resources": [
     "connectorprofile"
    ]
   },
   "describeconnectorfields": {
    "Resources": [
     "connectorprofile"
    ]
   },
   "describeconnectorprofiles": {},
   "describeconnectors": {},
   "describeflow": {
    "Resources": [
     "flow"
    ]
   },
   "describeflowexecution": {
    "Resources": [
     "flow"
    ]
   },
   "describeflowexecutionrecords": {
    "Resources": [
     "flow"
    ]
   },
   "describeflows": {},
   "listconnectorentities": {
    "Resources": [
     "connectorprofile"
    ]
   },
   "listconnectorfields": {
    "Resources": [
     "connectorprofile"
    ]
   },
   "listconnectors": {
    "Resources": [
     "connector"
    ]
   },
   "listflows": {
    "Resources": [
     "flow"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "flow"
    ]
   },
   "registerconnector": {},
   "resetconnectormetadatacache": {
    "Resources": [
     "connectorprofile"
    ]
   },
   "runflow": {
    "Resources": [
     "flow"
    ]
   },
   "startflow": {
    "Resources": [
     "flow"
    ]
   },
   "stopflow": {
    "Resources": [
     "flow"
    ]
   },
   "tagresource": {
    "Resources": [
     "connector",
     "flow"
    ]
   },
   "unregisterconnector": {
    "Resources": [
     "connector"
    ]
   },
   "untagresource": {
    "Resources": [
     "connector",
     "flow"
    ]
   },
   "updateconnectorprofile": {
    "Resources": [
     "connectorprofile"
    ]
   },
   "updateconnectorregistration": {
    "Resources": [
     "connector"
    ]
   },
   "updateflow": {
    "Resources": [
     "flow"
    ]
   },
   "useconnectorprofile": {
    "Resources": [
     "connectorprofile"
    ]
   }
  },
  "Resources": {
   "connector": {
    "ARNFormats": [
     "arn:${Partition}:appflow:${Region}:${Account}:connector/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "connectorprofile": {
    "ARNFormats": [
     "arn:${Partition}:appflow:${Region}:${Account}:connectorprofile/.*"
    ]
   },
   "flow": {
    "ARNFormats": [
     "arn:${Partition}:appflow:${Region}:${Account}:flow/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "application-autoscaling": {
  "Actions": {
   "deletescalingpolicy": {
    "Resources": [
     "ScalableTarget"
    ]
   },
   "deletescheduledaction": {
    "Resources": [
     "ScalableTarget"
    ]
   },
   "deregisterscalabletarget": {
    "Resources": [
     "ScalableTarget"
    ]
   },
   "describescalabletargets": {},
   "describescalingactivities": {},
   "describescalingpolicies": {},
   "describescheduledactions": {},
   "getpredictivescalingforecast": {},
   "listtagsforresource": {
    "Resources": [
     "ScalableTarget"
    ]
   },
   "putscalingpolicy": {
    "Resources": [
     "ScalableTarget"
    ]
   },
   "putscheduledaction": {
    "Resources": [
     "ScalableTarget"
    ]
   },
   "registerscalabletarget": {
    "Resources": [
     "ScalableTarget"
    ]
   },
   "tagresource": {
    "Resources": [
     "ScalableTarget"
    ]
   },
   "untagresource": {
    "Resources": [
     "ScalableTarget"
    ]
   }
  },
  "Resources": {
   "scalabletarget": {
    "ARNFormats": [
     "arn:${Partition}:application-autoscaling:${Region}:${Account}:scalable-target/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "application-cost-profiler": {
  "Actions": {
   "deletereportdefinition": {},
   "getreportdefinition": {},
   "importapplicationusage": {},
   "listreportdefinitions": {},
   "putreportdefinition": {},
   "updatereportdefinition": {}
  },
  "Resources": {}
 },
 "application-signals": {
  "Actions": {
   "batchgetservicelevelobjectivebudgetreport": {
    "Resources": [
     "slo"
    ]
   },
   "batchupdateexclusionwindows": {
    "Resources": [
     "slo"
    ]
   },
   "createservicelevelobjective": {},
   "deleteservicelevelobjective": {
    "Resources": [
     "slo"
    ]
   },
   "getservice": {},
   "getservicelevelobjective": {
    "Resources": [
     "slo"
    ]
   },
   "link": {},
   "listobservedentities": {},
   "listservicedependencies": {},
   "listservicedependents": {},
   "listservicelevelobjectiveexclusionwindows": {
    "Resources": [
     "slo"
    ]
   },
   "listservicelevelobjectives": {},
   "listserviceoperations": {},
   "listservices": {},
   "listtagsforresource": {
    "Resources": [
     "slo"
    ]
   },
   "startdiscovery": {},
   "tagresource": {
    "Resources": [
     "slo"
    ]
   },
   "untagresource": {
    "Resources": [
     "slo"
    ]
   },
   "updateservicelevelobjective": {
    "Resources": [
     "slo"
    ]
   }
  },
  "Resources": {
   "slo": {
    "ARNFormats": [
     "arn:${Partition}:application-signals:${Region}:${Account}:slo/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "application-transformation": {
  "Actions": {
   "getcontainerization": {},
   "getdeployment": {},
   "getgroupingassessment": {},
   "getportingcompatibilityassessment": {},
   "getportingrecommendationassessment": {},
   "getruntimeassessment": {},
   "putlogdata": {},
   "putmetricdata": {},
   "startcontainerization": {},
   "startdeployment": {},
   "startgroupingassessment": {},
   "startportingcompatibilityassessment": {},
   "startportingrecommendationassessment": {},
   "startruntimeassessment": {}
  },
  "Resources": {}
 },
 "applicationinsights": {
  "Actions": {
   "addworkload": {},
   "createapplication": {},
   "createcomponent": {},
   "createlogpattern": {},
   "deleteapplication": {},
   "deletecomponent": {},
   "deletelogpattern": {},
   "describeapplication": {},
   "describecomponent": {},
   "describecomponentconfiguration": {},
   "describecomponentconfigurationrecommendation": {},
   "describelogpattern": {},
   "describeobservation": {},
   "describeproblem": {},
   "describeproblemobservations": {},
   "describeworkload": {},
   "link": {},
   "listapplications": {},
   "listcomponents": {},
   "listconfigurationhistory": {},
   "listlogpatterns": {},
   "listlogpatternsets": {},
   "listproblems": {},
   "listtagsforresource": {},
   "listworkloads": {},
   "removeworkload": {},
   "tagresource": {},
   "untagresource": {},
   "updateapplication": {},
   "updatecomponent": {},
   "updatecomponentconfiguration": {},
   "updatelogpattern": {},
   "updateproblem": {},
   "updateworkload": {}
  },
  "Resources": {}
 },
 "appmesh": {
  "Actions": {
   "creategatewayroute": {
    "Resources": [
     "gatewayRoute",
     "virtualService"
    ]
   },
   "createmesh": {
    "Resources": [
     "mesh"
    ]
   },
   "createroute": {
    "Resources": [
     "route",
     "virtualNode"
    ]
   },
   "createvirtualgateway": {
    "Resources": [
     "virtualGateway"
    ]
   },
   "createvirtualnode": {
    "Resources": [
     "virtualNode",
     "virtualService"
    ]
   },
   "createvirtualrouter": {
    "Resources": [
     "virtualRouter"
    ]
   },
   "createvirtualservice": {
    "Resources": [
     "virtualNode",
     "virtualRouter",
     "virtualService"
    ]
   },
   "deletegatewayroute": {
    "Resources": [
     "gatewayRoute"
    ]
   },
   "deletemesh": {
    "Resources": [
     "mesh"
    ]
   },
   "deletemeshpolicy": {
    "Resources": [
     "mesh"
    ]
   },
   "deleteroute": {
    "Resources": [
     "route"
    ]
   },
   "deletevirtualgateway": {
    "Resources": [
     "virtualGateway"
    ]
   },
   "deletevirtualnode": {
    "Resources": [
     "virtualNode"
    ]
   },
   "deletevirtualrouter": {
    "Resources": [
     "virtualRouter"
    ]
   },
   "deletevirtualservice": {
    "Resources": [
     "virtualService"
    ]
   },
   "describegatewayroute": {
    "Resources": [
     "gatewayRoute"
    ]
   },
   "describemesh": {
    "Resources": [
     "mesh"
    ]
   },
   "describeroute": {
    "Resources": [
     "route"
    ]
   },
   "describevirtualgateway": {
    "Resources": [
     "virtualGateway"
    ]
   },
   "describevirtualnode": {
    "Resources": [
     "virtualNode"
    ]
   },
   "describevirtualrouter": {
    "Resources": [
     "virtualRouter"
    ]
   },
   "describevirtualservice": {
    "Resources": [
     "virtualService"
    ]
   },
   "getmeshpolicy": {
    "Resources": [
     "mesh"
    ]
   },
   "listgatewayroutes": {
    "Resources": [
     "virtualGateway"
    ]
   },
   "listmeshes": {},
   "listroutes": {
    "Resources": [
     "virtualRouter"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "gatewayRoute",
     "mesh",
     "route",
     "virtualGateway",
     "virtualNode",
     "virtualRouter",
     "virtualService"
    ]
   },
   "listvirtualgateways": {
    "Resources": [
     "mesh"
    ]
   },
   "listvirtualnodes": {
    "Resources": [
     "mesh"
    ]
   },
   "listvirtualrouters": {
    "Resources": [
     "mesh"
    ]
   },
   "listvirtualservices": {
    "Resources": [
     "mesh"
    ]
   },
   "putmeshpolicy": {
    "Resources": [
     "mesh"
    ]
   },
   "streamaggregatedresources": {
    "Resources": [
     "virtualGateway",
     "virtualNode"
    ]
   },
   "tagresource": {
    "Resources": [
     "gatewayRoute",
     "mesh",
     "route",
     "virtualGateway",
     "virtualNode",
     "virtualRouter",
     "virtualService"
    ]
   },
   "untagresource": {
    "Resources": [
     "gatewayRoute",
     "mesh",
     "route",
     "virtualGateway",
     "virtualNode",
     "virtualRouter",
     "virtualService"
    ]
   },
   "updategatewayroute": {
    "Resources": [
     "gatewayRoute",
     "virtualService"
    ]
   },
   "updatemesh": {
    "Resources": [
     "mesh"
    ]
   },
   "updateroute": {
    "Resources": [
     "route",
     "virtualNode"
    ]
   },
   "updatevirtualgateway": {
    "Resources": [
     "virtualGateway"
    ]
   },
   "updatevirtualnode": {
    "Resources": [
     "virtualNode"
    ]
   },
   "updatevirtualrouter": {
    "Resources": [
     "virtualRouter"
    ]
   },
   "updatevirtualservice": {
    "Resources": [
     "virtualNode",
     "virtualRouter",
     "virtualService"
    ]
   }
  },
  "Resources": {
   "gatewayroute": {
    "ARNFormats": [
     "arn:${Partition}:appmesh:${Region}:${Account}:mesh/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "mesh": {
    "ARNFormats": [
     "arn:${Partition}:appmesh:${Region}:${Account}:mesh/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "route": {
    "ARNFormats": [
     "arn:${Partition}:appmesh:${Region}:${Account}:mesh/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "virtualgateway": {
    "ARNFormats": [
     "arn:${Partition}:appmesh:${Region}:${Account}:mesh/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "virtualnode": {
    "ARNFormats": [
     "arn:${Partition}:appmesh:${Region}:${Account}:mesh/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "virtualrouter": {
    "ARNFormats": [
     "arn:${Partition}:appmesh:${Region}:${Account}:mesh/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "virtualservice": {
    "ARNFormats": [
     "arn:${Partition}:appmesh:${Region}:${Account}:mesh/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "appmesh-preview": {
  "Actions": {
   "creategatewayroute": {
    "Resources": [
     "gatewayRoute",
     "virtualService"
    ]
   },
   "createmesh": {
    "Resources": [
     "mesh"
    ]
   },
   "createroute": {
    "Resources": [
     "route",
     "virtualNode"
    ]
   },
   "createvirtualgateway": {
    "Resources": [
     "virtualGateway"
    ]
   },
   "createvirtualnode": {
    "Resources": [
     "virtualNode",
     "virtualService"
    ]
   },
   "createvirtualrouter": {
    "Resources": [
     "virtualRouter"
    ]
   },
   "createvirtualservice": {
    "Resources": [
     "virtualNode",
     "virtualRouter",
     "virtualService"
    ]
   },
   "deletegatewayroute": {
    "Resources": [
     "gatewayRoute"
    ]
   },
   "deletemesh": {
    "Resources": [
     "mesh"
    ]
   },
   "deletemeshpolicy": {
    "Resources": [
     "mesh"
    ]
   },
   "deleteroute": {
    "Resources": [
     "route"
    ]
   },
   "deletevirtualgateway": {
    "Resources": [
     "virtualGateway"
    ]
   },
   "deletevirtualnode": {
    "Resources": [
     "virtualNode"
    ]
   },
   "deletevirtualrouter": {
    "Resources": [
     "virtualRouter"
    ]
   },
   "deletevirtualservice": {
    "Resources": [
     "virtualService"
    ]
   },
   "describegatewayroute": {
    "Resources": [
     "gatewayRoute"
    ]
   },
   "describemesh": {
    "Resources": [
     "mesh"
    ]
   },
   "describeroute": {
    "Resources": [
     "route"
    ]
   },
   "describevirtualgateway": {
    "Resources": [
     "virtualGateway"
    ]
   },
   "describevirtualnode": {
    "Resources": [
     "virtualNode"
    ]
   },
   "describevirtualrouter": {
    "Resources": [
     "virtualRouter"
    ]
   },
   "describevirtualservice": {
    "Resources": [
     "virtualService"
    ]
   },
   "getmeshpolicy": {
    "Resources": [
     "mesh"
    ]
   },
   "listgatewayroutes": {
    "Resources": [
     "virtualGateway"
    ]
   },
   "listmeshes": {},
   "listroutes": {
    "Resources": [
     "virtualRouter"
    ]
   },
   "listvirtualgateways": {
    "Resources": [
     "mesh"
    ]
   },
   "listvirtualnodes": {
    "Resources": [
     "mesh"
    ]
   },
   "listvirtualrouters": {
    "Resources": [
     "mesh"
    ]
   },
   "listvirtualservices": {
    "Resources": [
     "mesh"
    ]
   },
   "putmeshpolicy": {
    "Resources": [
     "mesh"
    ]
   },
   "streamaggregatedresources": {
    "Resources": [
     "virtualGateway",
     "virtualNode"
    ]
   },
   "updategatewayroute": {
    "Resources": [
     "gatewayRoute",
     "virtualService"
    ]
   },
   "updatemesh": {
    "Resources": [
     "mesh"
    ]
   },
   "updateroute": {
    "Resources": [
     "route",
     "virtualNode"
    ]
   },
   "updatevirtualgateway": {
    "Resources": [
     "virtualGateway"
    ]
   },
   "updatevirtualnode": {
    "Resources": [
     "virtualNode"
    ]
   },
   "updatevirtualrouter": {
    "Resources": [
     "virtualRouter"
    ]
   },
   "updatevirtualservice": {
    "Resources": [
     "virtualNode",
     "virtualRouter",
     "virtualService"
    ]
   }
  },
  "Resources": {
   "gatewayroute": {
    "ARNFormats": [
     "arn:${Partition}:appmesh-preview:${Region}:${Account}:mesh/.*"
    ]
   },
   "mesh": {
    "ARNFormats": [
     "arn:${Partition}:appmesh-preview:${Region}:${Account}:mesh/.*"
    ]
   },
   "route": {
    "ARNFormats": [
     "arn:${Partition}:appmesh-preview:${Region}:${Account}:mesh/.*"
    ]
   },
   "virtualgateway": {
    "ARNFormats": [
     "arn:${Partition}:appmesh-preview:${Region}:${Account}:mesh/.*"
    ]
   },
   "virtualnode": {
    "ARNFormats": [
     "arn:${Partition}:appmesh-preview:${Region}:${Account}:mesh/.*"
    ]
   },
   "virtualrouter": {
    "ARNFormats": [
     "arn:${Partition}:appmesh-preview:${Region}:${Account}:mesh/.*"
    ]
   },
   "virtualservice": {
    "ARNFormats": [
     "arn:${Partition}:appmesh-preview:${Region}:${Account}:mesh/.*"
    ]
   }
  }
 },
 "apprunner": {
  "Actions": {
   "associatecustomdomain": {
    "Resources": [
     "service"
    ]
   },
   "associatewebacl": {
    "Resources": [
     "service",
     "webacl"
    ]
   },
   "createautoscalingconfiguration": {
    "Resources": [
     "autoscalingconfiguration"
    ]
   },
   "createconnection": {
    "Resources": [
     "connection"
    ]
   },
   "createobservabilityconfiguration": {
    "Resources": [
     "observabilityconfiguration"
    ]
   },
   "createservice": {
    "Resources": [
     "autoscalingconfiguration",
     "connection",
     "observabilityconfiguration",
     "service",
     "vpcconnector"
    ]
   },
   "createvpcconnector": {
    "Resources": [
     "vpcconnector"
    ]
   },
   "createvpcingressconnection": {
    "Resources": [
     "vpcingressconnection"
    ]
   },
   "deleteautoscalingconfiguration": {
    "Resources": [
     "autoscalingconfiguration"
    ]
   },
   "deleteconnection": {
    "Resources": [
     "connection"
    ]
   },
   "deleteobservabilityconfiguration": {
    "Resources": [
     "observabilityconfiguration"
    ]
   },
   "deleteservice": {
    "Resources": [
     "service"
    ]
   },
   "deletevpcconnector": {
    "Resources": [
     "vpcconnector"
    ]
   },
   "deletevpcingressconnection": {
    "Resources": [
     "vpcingressconnection"
    ]
   },
   "describeautoscalingconfiguration": {
    "Resources": [
     "autoscalingconfiguration"
    ]
   },
   "describecustomdomains": {
    "Resources": [
     "service"
    ]
   },
   "describeobservabilityconfiguration": {
    "Resources": [
     "observabilityconfiguration"
    ]
   },
   "describeoperation": {
    "Resources": [
     "service"
    ]
   },
   "describeservice": {
    "Resources": [
     "service"
    ]
   },
   "describevpcconnector": {
    "Resources": [
     "vpcconnector"
    ]
   },
   "describevpcingressconnection": {
    "Resources": [
     "vpcingressconnection"
    ]
   },
   "describewebaclforservice": {
    "Resources": [
     "service"
    ]
   },
   "disassociatecustomdomain": {
    "Resources": [
     "service"
    ]
   },
   "disassociatewebacl": {
    "Resources": [
     "service"
    ]
   },
   "listassociatedservicesforwebacl": {
    "Resources": [
     "webacl"
    ]
   },
   "listautoscalingconfigurations": {},
   "listconnections": {},
   "listobservabilityconfigurations": {},
   "listoperations": {
    "Resources": [
     "service"
    ]
   },
   "listservices": {},
   "listservicesforautoscalingconfiguration": {
    "Resources": [
     "autoscalingconfiguration"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "autoscalingconfiguration",
     "connection",
     "observabilityconfiguration",
     "service",
     "vpcconnector"
    ]
   },
   "listvpcconnectors": {},
   "listvpcingressconnections": {},
   "pauseservice": {
    "Resources": [
     "service"
    ]
   },
   "resumeservice": {
    "Resources": [
     "service"
    ]
   },
   "startdeployment": {
    "Resources": [
     "service"
    ]
   },
   "tagresource": {
    "Resources": [
     "autoscalingconfiguration",
     "connection",
     "observabilityconfiguration",
     "service",
     "vpcconnector",
     "vpcingressconnection"
    ]
   },
   "untagresource": {
    "Resources": [
     "autoscalingconfiguration",
     "connection",
     "observabilityconfiguration",
     "service",
     "vpcconnector",
     "vpcingressconnection"
    ]
   },
   "updatedefaultautoscalingconfiguration": {
    "Resources": [
     "autoscalingconfiguration"
    ]
   },
   "updateservice": {
    "Resources": [
     "autoscalingconfiguration",
     "connection",
     "observabilityconfiguration",
     "service",
     "vpcconnector"
    ]
   },
   "updatevpcingressconnection": {
    "Resources": [
     "vpcingressconnection"
    ]
   }
  },
  "Resources": {
   "autoscalingconfiguration": {
    "ARNFormats": [
     "arn:${Partition}:apprunner:${Region}:${Account}:autoscalingconfiguration/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "connection": {
    "ARNFormats": [
     "arn:${Partition}:apprunner:${Region}:${Account}:connection/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "observabilityconfiguration": {
    "ARNFormats": [
     "arn:${Partition}:apprunner:${Region}:${Account}:observabilityconfiguration/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "service": {
    "ARNFormats": [
     "arn:${Partition}:apprunner:${Region}:${Account}:service/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "vpcconnector": {
    "ARNFormats": [
     "arn:${Partition}:apprunner:${Region}:${Account}:vpcconnector/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "vpcingressconnection": {
    "ARNFormats": [
     "arn:${Partition}:apprunner:${Region}:${Account}:vpcingressconnection/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "webacl": {
    "ARNFormats": [
     "arn:${Partition}:wafv2:${Region}:${Account}:.*"
    ]
   }
  }
 },
 "appstream": {
  "Actions": {
   "associateappblockbuilderappblock": {
    "Resources": [
     "app-block",
     "app-block-builder"
    ]
   },
   "associateapplicationfleet": {
    "Resources": [
     "application",
     "fleet"
    ]
   },
   "associateapplicationtoentitlement": {
    "Resources": [
     "stack"
    ]
   },
   "associatefleet": {
    "Resources": [
     "fleet",
     "stack"
    ]
   },
   "batchassociateuserstack": {
    "Resources": [
     "stack"
    ]
   },
   "batchdisassociateuserstack": {
    "Resources": [
     "stack"
    ]
   },
   "copyimage": {
    "Resources": [
     "image"
    ]
   },
   "createappblock": {},
   "createappblockbuilder": {
    "Resources": [
     "app-block-builder"
    ]
   },
   "createappblockbuilderstreamingurl": {
    "Resources": [
     "app-block-builder"
    ]
   },
   "createapplication": {
    "Resources": [
     "app-block"
    ]
   },
   "createdirectoryconfig": {},
   "createentitlement": {
    "Resources": [
     "stack"
    ]
   },
   "createfleet": {
    "Resources": [
     "fleet",
     "image"
    ]
   },
   "createimagebuilder": {
    "Resources": [
     "image",
     "image-builder"
    ]
   },
   "createimagebuilderstreamingurl": {
    "Resources": [
     "image-builder"
    ]
   },
   "createstack": {
    "Resources": [
     "stack"
    ]
   },
   "createstreamingurl": {
    "Resources": [
     "fleet",
     "stack"
    ]
   },
   "createthemeforstack": {
    "Resources": [
     "stack"
    ]
   },
   "createupdatedimage": {
    "Resources": [
     "image"
    ]
   },
   "createusagereportsubscription": {},
   "createuser": {},
   "deleteappblock": {
    "Resources": [
     "app-block"
    ]
   },
   "deleteappblockbuilder": {
    "Resources": [
     "app-block-builder"
    ]
   },
   "deleteapplication": {
    "Resources": [
     "application"
    ]
   },
   "deletedirectoryconfig": {},
   "deleteentitlement": {
    "Resources": [
     "stack"
    ]
   },
   "deletefleet": {
    "Resources": [
     "fleet"
    ]
   },
   "deleteimage": {
    "Resources": [
     "image"
    ]
   },
   "deleteimagebuilder": {
    "Resources": [
     "image-builder"
    ]
   },
   "deleteimagepermissions": {
    "Resources": [
     "image"
    ]
   },
   "deletestack": {
    "Resources": [
     "stack"
    ]
   },
   "deletethemeforstack": {
    "Resources": [
     "stack"
    ]
   },
   "deleteusagereportsubscription": {},
   "deleteuser": {},
   "describeappblockbuilderappblockassociations": {
    "Resources": [
     "app-block",
     "app-block-builder"
    ]
   },
   "describeappblockbuilders": {
    "Resources": [
     "app-block-builder"
    ]
   },
   "describeappblocks": {
    "Resources": [
     "app-block"
    ]
   },
   "describeapplicationfleetassociations": {
    "Resources": [
     "application",
     "fleet"
    ]
   },
   "describeapplications": {
    "Resources": [
     "application"
    ]
   },
   "describedirectoryconfigs": {},
   "describeentitlements": {
    "Resources": [
     "stack"
    ]
   },
   "describefleets": {
    "Resources": [
     "fleet"
    ]
   },
   "describeimagebuilders": {
    "Resources": [
     "image-builder"
    ]
   },
   "describeimagepermissions": {
    "Resources": [
     "image"
    ]
   },
   "describeimages": {
    "Resources": [
     "image"
    ]
   },
   "describesessions": {
    "Resources": [
     "fleet",
     "stack"
    ]
   },
   "describestacks": {
    "Resources": [
     "stack"
    ]
   },
   "describethemeforstack": {
    "Resources": [
     "stack"
    ]
   },
   "describeusagereportsubscriptions": {},
   "describeusers": {},
   "describeuserstackassociations": {
    "Resources": [
     "stack"
    ]
   },
   "disableuser": {},
   "disassociateappblockbuilderappblock": {
    "Resources": [
     "app-block",
     "app-block-builder"
    ]
   },
   "disassociateapplicationfleet": {
    "Resources": [
     "application",
     "fleet"
    ]
   },
   "disassociateapplicationfromentitlement": {
    "Resources": [
     "stack"
    ]
   },
   "disassociatefleet": {
    "Resources": [
     "fleet",
     "stack"
    ]
   },
   "enableuser": {},
   "expiresession": {},
   "listassociatedfleets": {
    "Resources": [
     "stack"
    ]
   },
   "listassociatedstacks": {
    "Resources": [
     "fleet"
    ]
   },
   "listentitledapplications": {
    "Resources": [
     "stack"
    ]
   },
   "listtagsforresource": {},
   "startappblockbuilder": {
    "Resources": [
     "app-block-builder"
    ]
   },
   "startfleet": {
    "Resources": [
     "fleet"
    ]
   },
   "startimagebuilder": {
    "Resources": [
     "image-builder"
    ]
   },
   "stopappblockbuilder": {
    "Resources": [
     "app-block-builder"
    ]
   },
   "stopfleet": {
    "Resources": [
     "fleet"
    ]
   },
   "stopimagebuilder": {
    "Resources": [
     "image-builder"
    ]
   },
   "stream": {
    "Resources": [
     "stack"
    ]
   },
   "tagresource": {
    "Resources": [
     "app-block",
     "app-block-builder",
     "application",
     "fleet",
     "image",
     "image-builder",
     "stack"
    ]
   },
   "untagresource": {
    "Resources": [
     "app-block",
     "app-block-builder",
     "application",
     "fleet",
     "image",
     "image-builder",
     "stack"
    ]
   },
   "updateappblockbuilder": {
    "Resources": [
     "app-block-builder"
    ]
   },
   "updateapplication": {
    "Resources": [
     "app-block",
     "application"
    ]
   },
   "updatedirectoryconfig": {},
   "updateentitlement": {
    "Resources": [
     "stack"
    ]
   },
   "updatefleet": {
    "Resources": [
     "fleet",
     "image"
    ]
   },
   "updateimagepermissions": {
    "Resources": [
     "image"
    ]
   },
   "updatestack": {
    "Resources": [
     "stack"
    ]
   },
   "updatethemeforstack": {
    "Resources": [
     "stack"
    ]
   }
  },
  "Resources": {
   "app-block": {
    "ARNFormats": [
     "arn:${Partition}:appstream:${Region}:${Account}:app-block/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "app-block-builder": {
    "ARNFormats": [
     "arn:${Partition}:appstream:${Region}:${Account}:app-block-builder/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "application": {
    "ARNFormats": [
     "arn:${Partition}:appstream:${Region}:${Account}:application/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "fleet": {
    "ARNFormats": [
     "arn:${Partition}:appstream:${Region}:${Account}:fleet/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "image": {
    "ARNFormats": [
     "arn:${Partition}:appstream:${Region}:${Account}:image/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "image-builder": {
    "ARNFormats": [
     "arn:${Partition}:appstream:${Region}:${Account}:image-builder/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "stack": {
    "ARNFormats": [
     "arn:${Partition}:appstream:${Region}:${Account}:stack/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "appstudio": {
  "Actions": {
   "getaccountstatus": {},
   "getenablementjobstatus": {},
   "startenablementjob": {},
   "startrollbackenablementjob": {},
   "startteamdeployment": {}
  },
  "Resources": {}
 },
 "appsync": {
  "Actions": {
   "associateapi": {
    "Resources": [
     "domain"
    ]
   },
   "associatemergedgraphqlapi": {
    "Resources": [
     "graphqlapi"
    ]
   },
   "associatesourcegraphqlapi": {
    "Resources": [
     "graphqlapi"
    ]
   },
   "createapi": {},
   "createapicache": {},
   "createapikey": {},
   "createchannelnamespace": {
    "Resources": [
     "channelNamespace"
    ]
   },
   "createdatasource": {},
   "createdomainname": {},
   "createfunction": {},
   "creategraphqlapi": {},
   "createresolver": {},
   "createtype": {},
   "deleteapi": {
    "Resources": [
     "api"
    ]
   },
   "deleteapicache": {},
   "deleteapikey": {},
   "deletechannelnamespace": {
    "Resources": [
     "channelNamespace"
    ]
   },
   "deletedatasource": {},
   "deletedomainname": {
    "Resources": [
     "domain"
    ]
   },
   "deletefunction": {},
   "deletegraphqlapi": {
    "Resources": [
     "graphqlapi"
    ]
   },
   "deleteresolver": {},
   "deleteresourcepolicy": {},
   "deletetype": {},
   "disassociateapi": {
    "Resources": [
     "domain"
    ]
   },
   "disassociatemergedgraphqlapi": {
    "Resources": [
     "mergedApiAssociation"
    ]
   },
   "disassociatesourcegraphqlapi": {
    "Resources": [
     "sourceApiAssociation"
    ]
   },
   "evaluatecode": {},
   "evaluatemappingtemplate": {},
   "eventconnect": {
    "Resources": [
     "api"
    ]
   },
   "eventpublish": {
    "Resources": [
     "channelNamespace"
    ]
   },
   "eventsubscribe": {
    "Resources": [
     "channelNamespace"
    ]
   },
   "flushapicache": {},
   "getapi": {
    "Resources": [
     "api"
    ]
   },
   "getapiassociation": {
    "Resources": [
     "domain"
    ]
   },
   "getapicache": {},
   "getchannelnamespace": {
    "Resources": [
     "channelNamespace"
    ]
   },
   "getdatasource": {},
   "getdatasourceintrospection": {},
   "getdomainname": {
    "Resources": [
     "domain"
    ]
   },
   "getfunction": {},
   "getgraphqlapi": {
    "Resources": [
     "graphqlapi"
    ]
   },
   "getgraphqlapienvironmentvariables": {},
   "getintrospectionschema": {},
   "getresolver": {},
   "getresourcepolicy": {},
   "getschemacreationstatus": {},
   "getsourceapiassociation": {
    "Resources": [
     "sourceApiAssociation"
    ]
   },
   "gettype": {},
   "graphql": {
    "Resources": [
     "field",
     "graphqlapi"
    ]
   },
   "listapikeys": {},
   "listapis": {},
   "listchannelnamespaces": {
    "Resources": [
     "api"
    ]
   },
   "listdatasources": {},
   "listdomainnames": {},
   "listfunctions": {},
   "listgraphqlapis": {},
   "listresolvers": {},
   "listresolversbyfunction": {},
   "listsourceapiassociations": {},
   "listtagsforresource": {
    "Resources": [
     "api",
     "channelNamespace",
     "domain",
     "graphqlapi"
    ]
   },
   "listtypes": {},
   "listtypesbyassociation": {},
   "putgraphqlapienvironmentvariables": {},
   "putresourcepolicy": {},
   "setwebacl": {},
   "sourcegraphql": {
    "Resources": [
     "field",
     "graphqlapi"
    ]
   },
   "startdatasourceintrospection": {},
   "startschemacreation": {},
   "startschemamerge": {
    "Resources": [
     "sourceApiAssociation"
    ]
   },
   "tagresource": {
    "Resources": [
     "api",
     "channelNamespace",
     "domain",
     "graphqlapi"
    ]
   },
   "untagresource": {
    "Resources": [
     "api",
     "channelNamespace",
     "domain",
     "graphqlapi"
    ]
   },
   "updateapi": {
    "Resources": [
     "api"
    ]
   },
   "updateapicache": {},
   "updateapikey": {},
   "updatechannelnamespace": {
    "Resources": [
     "channelNamespace"
    ]
   },
   "updatedatasource": {},
   "updatedomainname": {
    "Resources": [
     "domain"
    ]
   },
   "updatefunction": {},
   "updategraphqlapi": {
    "Resources": [
     "graphqlapi"
    ]
   },
   "updateresolver": {},
   "updatesourceapiassociation": {
    "Resources": [
     "sourceApiAssociation"
    ]
   },
   "updatetype": {}
  },
  "Resources": {
   "api": {
    "ARNFormats": [
     "arn:${Partition}:appsync:${Region}:${Account}:apis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "channelnamespace": {
    "ARNFormats": [
     "arn:${Partition}:appsync:${Region}:${Account}:apis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "datasource": {
    "ARNFormats": [
     "arn:${Partition}:appsync:${Region}:${Account}:apis/.*"
    ]
   },
   "domain": {
    "ARNFormats": [
     "arn:${Partition}:appsync:${Region}:${Account}:domainnames/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "field": {
    "ARNFormats": [
     "arn:${Partition}:appsync:${Region}:${Account}:apis/.*"
    ]
   },
   "function": {
    "ARNFormats": [
     "arn:${Partition}:appsync:${Region}:${Account}:apis/.*"
    ]
   },
   "graphqlapi": {
    "ARNFormats": [
     "arn:${Partition}:appsync:${Region}:${Account}:apis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "mergedapiassociation": {
    "ARNFormats": [
     "arn:${Partition}:appsync:${Region}:${Account}:apis/.*"
    ]
   },
   "sourceapiassociation": {
    "ARNFormats": [
     "arn:${Partition}:appsync:${Region}:${Account}:apis/.*"
    ]
   },
   "type": {
    "ARNFormats": [
     "arn:${Partition}:appsync:${Region}:${Account}:apis/.*"
    ]
   }
  }
 },
 "apptest": {
  "Actions": {
   "createtestcase": {},
   "createtestconfiguration": {},
   "createtestsuite": {},
   "deletetestcase": {
    "Resources": [
     "TestCase"
    ]
   },
   "deletetestconfiguration": {
    "Resources": [
     "TestConfiguration"
    ]
   },
   "deletetestrun": {
    "Resources": [
     "TestRun"
    ]
   },
   "deletetestsuite": {
    "Resources": [
     "TestSuite"
    ]
   },
   "gettestcase": {
    "Resources": [
     "TestCase"
    ]
   },
   "gettestconfiguration": {
    "Resources": [
     "TestConfiguration"
    ]
   },
   "gettestrunstep": {
    "Resources": [
     "TestRun"
    ]
   },
   "gettestsuite": {
    "Resources": [
     "TestSuite"
    ]
   },
   "listtagsforresource": {},
   "listtestcases": {},
   "listtestconfigurations": {},
   "listtestruns": {},
   "listtestrunsteps": {
    "Resources": [
     "TestRun"
    ]
   },
   "listtestruntestcases": {
    "Resources": [
     "TestRun"
    ]
   },
   "listtestsuites": {},
   "starttestrun": {},
   "tagresource": {
    "Resources": [
     "TestCase",
     "TestConfiguration",
     "TestRun",
     "TestSuite"
    ]
   },
   "untagresource": {
    "Resources": [
     "TestCase",
     "TestConfiguration",
     "TestRun",
     "TestSuite"
    ]
   },
   "updatetestcase": {
    "Resources": [
     "TestCase"
    ]
   },
   "updatetestconfiguration": {
    "Resources": [
     "TestConfiguration"
    ]
   },
   "updatetestsuite": {
    "Resources": [
     "TestSuite"
    ]
   }
  },
  "Resources": {
   "testcase": {
    "ARNFormats": [
     "arn:${Partition}:apptest:${Region}:${Account}:testcase/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "testconfiguration": {
    "ARNFormats": [
     "arn:${Partition}:apptest:${Region}:${Account}:testconfiguration/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "testrun": {
    "ARNFormats": [
     "arn:${Partition}:apptest:${Region}:${Account}:testrun/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "testsuite": {
    "ARNFormats": [
     "arn:${Partition}:apptest:${Region}:${Account}:testsuite/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "aps": {
  "Actions": {
   "createalertmanageralerts": {
    "Resources": [
     "workspace"
    ]
   },
   "createalertmanagerdefinition": {
    "Resources": [
     "workspace"
    ]
   },
   "createloggingconfiguration": {
    "Resources": [
     "workspace"
    ]
   },
   "createrulegroupsnamespace": {
    "Resources": [
     "rulegroupsnamespace"
    ]
   },
   "createscraper": {
    "Resources": [
     "cluster",
     "workspace"
    ]
   },
   "createworkspace": {},
   "deletealertmanagerdefinition": {
    "Resources": [
     "workspace"
    ]
   },
   "deletealertmanagersilence": {
    "Resources": [
     "workspace"
    ]
   },
   "deleteloggingconfiguration": {
    "Resources": [
     "workspace"
    ]
   },
   "deleterulegroupsnamespace": {
    "Resources": [
     "rulegroupsnamespace"
    ]
   },
   "deletescraper": {
    "Resources": [
     "scraper"
    ]
   },
   "deleteworkspace": {
    "Resources": [
     "workspace"
    ]
   },
   "describealertmanagerdefinition": {
    "Resources": [
     "workspace"
    ]
   },
   "describeloggingconfiguration": {
    "Resources": [
     "workspace"
    ]
   },
   "describerulegroupsnamespace": {
    "Resources": [
     "rulegroupsnamespace"
    ]
   },
   "describescraper": {
    "Resources": [
     "scraper"
    ]
   },
   "describeworkspace": {
    "Resources": [
     "workspace"
    ]
   },
   "getalertmanagersilence": {
    "Resources": [
     "workspace"
    ]
   },
   "getalertmanagerstatus": {
    "Resources": [
     "workspace"
    ]
   },
   "getdefaultscraperconfiguration": {},
   "getlabels": {
    "Resources": [
     "workspace"
    ]
   },
   "getmetricmetadata": {
    "Resources": [
     "workspace"
    ]
   },
   "getseries": {
    "Resources": [
     "workspace"
    ]
   },
   "listalertmanageralertgroups": {
    "Resources": [
     "workspace"
    ]
   },
   "listalertmanageralerts": {
    "Resources": [
     "workspace"
    ]
   },
   "listalertmanagerreceivers": {
    "Resources": [
     "workspace"
    ]
   },
   "listalertmanagersilences": {
    "Resources": [
     "workspace"
    ]
   },
   "listalerts": {
    "Resources": [
     "workspace"
    ]
   },
   "listrulegroupsnamespaces": {
    "Resources": [
     "workspace"
    ]
   },
   "listrules": {
    "Resources": [
     "workspace"
    ]
   },
   "listscrapers": {},
   "listtagsforresource": {
    "Resources": [
     "rulegroupsnamespace",
     "scraper",
     "workspace"
    ]
   },
   "listworkspaces": {},
   "putalertmanagerdefinition": {
    "Resources": [
     "workspace"
    ]
   },
   "putalertmanagersilences": {
    "Resources": [
     "workspace"
    ]
   },
   "putrulegroupsnamespace": {
    "Resources": [
     "rulegroupsnamespace"
    ]
   },
   "querymetrics": {
    "Resources": [
     "workspace"
    ]
   },
   "remotewrite": {
    "Resources": [
     "workspace"
    ]
   },
   "tagresource": {
    "Resources": [
     "rulegroupsnamespace",
     "scraper",
     "workspace"
    ]
   },
   "untagresource": {
    "Resources": [
     "rulegroupsnamespace",
     "scraper",
     "workspace"
    ]
   },
   "updateloggingconfiguration": {
    "Resources": [
     "workspace"
    ]
   },
   "updatescraper": {
    "Resources": [
     "scraper",
     "workspace"
    ]
   },
   "updateworkspacealias": {
    "Resources": [
     "workspace"
    ]
   }
  },
  "Resources": {
   "cluster": {
    "ARNFormats": [
     "arn:${Partition}:eks:${Region}:${Account}:cluster/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "rulegroupsnamespace": {
    "ARNFormats": [
     "arn:${Partition}:aps:${Region}:${Account}:rulegroupsnamespace/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys"
    ]
   },
   "scraper": {
    "ARNFormats": [
     "arn:${Partition}:aps:${Region}:${Account}:scraper/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys"
    ]
   },
   "workspace": {
    "ARNFormats": [
     "arn:${Partition}:aps:${Region}:${Account}:workspace/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys"
    ]
   }
  }
 },
 "arc-zonal-shift": {
  "Actions": {
   "cancelzonalshift": {
    "Resources": [
     "ALB",
     "NLB"
    ]
   },
   "createpracticerunconfiguration": {
    "Resources": [
     "ALB",
     "NLB"
    ]
   },
   "deletepracticerunconfiguration": {
    "Resources": [
     "ALB",
     "NLB"
    ]
   },
   "getautoshiftobservernotificationstatus": {},
   "getmanagedresource": {
    "Resources": [
     "ALB",
     "NLB"
    ]
   },
   "listautoshifts": {},
   "listmanagedresources": {},
   "listzonalshifts": {},
   "startzonalshift": {
    "Resources": [
     "ALB",
     "NLB"
    ]
   },
   "updateautoshiftobservernotificationstatus": {},
   "updatepracticerunconfiguration": {
    "Resources": [
     "ALB",
     "NLB"
    ]
   },
   "updatezonalautoshiftconfiguration": {
    "Resources": [
     "ALB",
     "NLB"
    ]
   },
   "updatezonalshift": {
    "Resources": [
     "ALB",
     "NLB"
    ]
   }
  },
  "Resources": {
   "alb": {
    "ARNFormats": [
     "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:loadbalancer/app/.*"
    ],
    "ConditionKeys": [
     "arc-zonal-shift:ResourceIdentifier",
     "aws:ResourceTag/${TagKey}",
     "elasticloadbalancing:ResourceTag/${TagKey}"
    ]
   },
   "nlb": {
    "ARNFormats": [
     "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:loadbalancer/net/.*"
    ],
    "ConditionKeys": [
     "arc-zonal-shift:ResourceIdentifier",
     "aws:ResourceTag/${TagKey}",
     "elasticloadbalancing:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "arsenal": {
  "Actions": {
   "registeronpremisesagent": {}
  },
  "Resources": {}
 },
 "artifact": {
  "Actions": {
   "acceptagreement": {
    "Resources": [
     "agreement"
    ]
   },
   "acceptndaforagreement": {
    "Resources": [
     "agreement"
    ]
   },
   "downloadagreement": {
    "Resources": [
     "agreement",
     "customer-agreement"
    ]
   },
   "get": {
    "Resources": [
     "report-package"
    ]
   },
   "getaccountsettings": {},
   "getagreement": {
    "Resources": [
     "agreement"
    ]
   },
   "getcustomeragreement": {
    "Resources": [
     "customer-agreement"
    ]
   },
   "getndaforagreement": {
    "Resources": [
     "agreement"
    ]
   },
   "getreport": {
    "Resources": [
     "report"
    ]
   },
   "getreportmetadata": {
    "Resources": [
     "report"
    ]
   },
   "gettermforreport": {
    "Resources": [
     "report"
    ]
   },
   "listagreements": {},
   "listcustomeragreements": {},
   "listreports": {},
   "putaccountsettings": {},
   "terminateagreement": {
    "Resources": [
     "customer-agreement"
    ]
   }
  },
  "Resources": {
   "agreement": {
    "ARNFormats": [
     "arn:${Partition}:artifact:::agreement/*"
    ]
   },
   "customer-agreement": {
    "ARNFormats": [
     "arn:${Partition}:artifact::${Account}:customer-agreement/*"
    ]
   },
   "report": {
    "ARNFormats": [
     "arn:${Partition}:artifact:${Region}::.*"
    ]
   },
   "report-package": {
    "ARNFormats": [
     "arn:${Partition}:artifact:::report-package/*"
    ]
   }
  }
 },
 "athena": {
  "Actions": {
   "batchgetnamedquery": {
    "Resources": [
     "workgroup"
    ]
   },
   "batchgetpreparedstatement": {
    "Resources": [
     "workgroup"
    ]
   },
   "batchgetqueryexecution": {
    "Resources": [
     "workgroup"
    ]
   },
   "cancelcapacityreservation": {
    "Resources": [
     "capacity-reservation"
    ]
   },
   "cancelqueryexecution": {
    "Resources": [
     "workgroup"
    ]
   },
   "createcapacityreservation": {
    "Resources": [
     "capacity-reservation"
    ]
   },
   "createdatacatalog": {
    "Resources": [
     "datacatalog"
    ]
   },
   "createnamedquery": {
    "Resources": [
     "workgroup"
    ]
   },
   "createnotebook": {
    "Resources": [
     "workgroup"
    ]
   },
   "createpreparedstatement": {
    "Resources": [
     "workgroup"
    ]
   },
   "createpresignednotebookurl": {
    "Resources": [
     "workgroup"
    ]
   },
   "createworkgroup": {
    "Resources": [
     "workgroup"
    ]
   },
   "deletecapacityreservation": {
    "Resources": [
     "capacity-reservation"
    ]
   },
   "deletedatacatalog": {
    "Resources": [
     "datacatalog"
    ]
   },
   "deletenamedquery": {
    "Resources": [
     "workgroup"
    ]
   },
   "deletenotebook": {
    "Resources": [
     "workgroup"
    ]
   },
   "deletepreparedstatement": {
    "Resources": [
     "workgroup"
    ]
   },
   "deleteworkgroup": {
    "Resources": [
     "workgroup"
    ]
   },
   "exportnotebook": {
    "Resources": [
     "workgroup"
    ]
   },
   "getcalculationexecution": {
    "Resources": [
     "workgroup"
    ]
   },
   "getcalculationexecutioncode": {
    "Resources": [
     "workgroup"
    ]
   },
   "getcalculationexecutionstatus": {
    "Resources": [
     "workgroup"
    ]
   },
   "getcapacityassignmentconfiguration": {
    "Resources": [
     "capacity-reservation"
    ]
   },
   "getcapacityreservation": {
    "Resources": [
     "capacity-reservation"
    ]
   },
   "getcatalogs": {},
   "getdatabase": {
    "Resources": [
     "datacatalog"
    ]
   },
   "getdatacatalog": {
    "Resources": [
     "datacatalog"
    ]
   },
   "getexecutionengine": {},
   "getexecutionengines": {},
   "getnamedquery": {
    "Resources": [
     "workgroup"
    ]
   },
   "getnamespace": {},
   "getnamespaces": {},
   "getnotebookmetadata": {
    "Resources": [
     "workgroup"
    ]
   },
   "getpreparedstatement": {
    "Resources": [
     "workgroup"
    ]
   },
   "getqueryexecution": {
    "Resources": [
     "workgroup"
    ]
   },
   "getqueryexecutions": {},
   "getqueryresults": {
    "Resources": [
     "workgroup"
    ]
   },
   "getqueryresultsstream": {
    "Resources": [
     "workgroup"
    ]
   },
   "getqueryruntimestatistics": {
    "Resources": [
     "workgroup"
    ]
   },
   "getsession": {
    "Resources": [
     "workgroup"
    ]
   },
   "getsessionstatus": {
    "Resources": [
     "workgroup"
    ]
   },
   "gettable": {},
   "gettablemetadata": {
    "Resources": [
     "datacatalog"
    ]
   },
   "gettables": {},
   "getworkgroup": {
    "Resources": [
     "workgroup"
    ]
   },
   "importnotebook": {
    "Resources": [
     "workgroup"
    ]
   },
   "listapplicationdpusizes": {},
   "listcalculationexecutions": {
    "Resources": [
     "workgroup"
    ]
   },
   "listcapacityreservations": {},
   "listdatabases": {
    "Resources": [
     "datacatalog"
    ]
   },
   "listdatacatalogs": {},
   "listengineversions": {},
   "listexecutors": {},
   "listnamedqueries": {
    "Resources": [
     "workgroup"
    ]
   },
   "listnotebookmetadata": {
    "Resources": [
     "workgroup"
    ]
   },
   "listnotebooksessions": {
    "Resources": [
     "workgroup"
    ]
   },
   "listpreparedstatements": {
    "Resources": [
     "workgroup"
    ]
   },
   "listqueryexecutions": {
    "Resources": [
     "workgroup"
    ]
   },
   "listsessions": {
    "Resources": [
     "workgroup"
    ]
   },
   "listtablemetadata": {
    "Resources": [
     "datacatalog"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "capacity-reservation",
     "datacatalog",
     "workgroup"
    ]
   },
   "listworkgroups": {},
   "putcapacityassignmentconfiguration": {
    "Resources": [
     "capacity-reservation",
     "workgroup"
    ]
   },
   "runquery": {},
   "startcalculationexecution": {
    "Resources": [
     "workgroup"
    ]
   },
   "startqueryexecution": {
    "Resources": [
     "workgroup"
    ]
   },
   "startsession": {
    "Resources": [
     "workgroup"
    ]
   },
   "stopcalculationexecution": {
    "Resources": [
     "workgroup"
    ]
   },
   "stopqueryexecution": {
    "Resources": [
     "workgroup"
    ]
   },
   "tagresource": {
    "Resources": [
     "capacity-reservation",
     "datacatalog",
     "workgroup"
    ]
   },
   "terminatesession": {
    "Resources": [
     "workgroup"
    ]
   },
   "untagresource": {
    "Resources": [
     "capacity-reservation",
     "datacatalog",
     "workgroup"
    ]
   },
   "updatecapacityreservation": {
    "Resources": [
     "capacity-reservation"
    ]
   },
   "updatedatacatalog": {
    "Resources": [
     "datacatalog"
    ]
   },
   "updatenamedquery": {
    "Resources": [
     "workgroup"
    ]
   },
   "updatenotebook": {
    "Resources": [
     "workgroup"
    ]
   },
   "updatenotebookmetadata": {
    "Resources": [
     "workgroup"
    ]
   },
   "updatepreparedstatement": {
    "Resources": [
     "workgroup"
    ]
   },
   "updateworkgroup": {
    "Resources": [
     "workgroup"
    ]
   }
  },
  "Resources": {
   "capacity-reservation": {
    "ARNFormats": [
     "arn:${Partition}:athena:${Region}:${Account}:capacity-reservation/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "datacatalog": {
    "ARNFormats": [
     "arn:${Partition}:athena:${Region}:${Account}:datacatalog/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "workgroup": {
    "ARNFormats": [
     "arn:${Partition}:athena:${Region}:${Account}:workgroup/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "auditmanager": {
  "Actions": {
   "associateassessmentreportevidencefolder": {
    "Resources": [
     "assessment"
    ]
   },
   "batchassociateassessmentreportevidence": {
    "Resources": [
     "assessment"
    ]
   },
   "batchcreatedelegationbyassessment": {
    "Resources": [
     "assessment"
    ]
   },
   "batchdeletedelegationbyassessment": {
    "Resources": [
     "assessment"
    ]
   },
   "batchdisassociateassessmentreportevidence": {
    "Resources": [
     "assessment"
    ]
   },
   "batchimportevidencetoassessmentcontrol": {
    "Resources": [
     "assessmentControlSet"
    ]
   },
   "createassessment": {},
   "createassessmentframework": {},
   "createassessmentreport": {
    "Resources": [
     "assessment"
    ]
   },
   "createcontrol": {},
   "deleteassessment": {
    "Resources": [
     "assessment"
    ]
   },
   "deleteassessmentframework": {
    "Resources": [
     "assessmentFramework"
    ]
   },
   "deleteassessmentframeworkshare": {},
   "deleteassessmentreport": {
    "Resources": [
     "assessment"
    ]
   },
   "deletecontrol": {
    "Resources": [
     "control"
    ]
   },
   "deregisteraccount": {},
   "deregisterorganizationadminaccount": {},
   "disassociateassessmentreportevidencefolder": {
    "Resources": [
     "assessment"
    ]
   },
   "getaccountstatus": {},
   "getassessment": {
    "Resources": [
     "assessment"
    ]
   },
   "getassessmentframework": {
    "Resources": [
     "assessmentFramework"
    ]
   },
   "getassessmentreporturl": {
    "Resources": [
     "assessment"
    ]
   },
   "getchangelogs": {
    "Resources": [
     "assessment"
    ]
   },
   "getcontrol": {
    "Resources": [
     "control"
    ]
   },
   "getdelegations": {},
   "getevidence": {
    "Resources": [
     "assessmentControlSet"
    ]
   },
   "getevidencebyevidencefolder": {
    "Resources": [
     "assessmentControlSet"
    ]
   },
   "getevidencefileuploadurl": {},
   "getevidencefolder": {
    "Resources": [
     "assessmentControlSet"
    ]
   },
   "getevidencefoldersbyassessment": {
    "Resources": [
     "assessment"
    ]
   },
   "getevidencefoldersbyassessmentcontrol": {
    "Resources": [
     "assessmentControlSet"
    ]
   },
   "getinsights": {},
   "getinsightsbyassessment": {},
   "getorganizationadminaccount": {},
   "getservicesinscope": {},
   "getsettings": {},
   "listassessmentcontrolinsightsbycontroldomain": {},
   "listassessmentframeworks": {},
   "listassessmentframeworksharerequests": {},
   "listassessmentreports": {},
   "listassessments": {},
   "listcontroldomaininsights": {},
   "listcontroldomaininsightsbyassessment": {},
   "listcontrolinsightsbycontroldomain": {},
   "listcontrols": {},
   "listkeywordsfordatasource": {},
   "listnotifications": {},
   "listtagsforresource": {
    "Resources": [
     "assessment",
     "control"
    ]
   },
   "registeraccount": {},
   "registerorganizationadminaccount": {},
   "startassessmentframeworkshare": {
    "Resources": [
     "assessmentFramework"
    ]
   },
   "tagresource": {
    "Resources": [
     "assessment",
     "control"
    ]
   },
   "untagresource": {
    "Resources": [
     "assessment",
     "control"
    ]
   },
   "updateassessment": {
    "Resources": [
     "assessment"
    ]
   },
   "updateassessmentcontrol": {
    "Resources": [
     "assessmentControlSet"
    ]
   },
   "updateassessmentcontrolsetstatus": {
    "Resources": [
     "assessmentControlSet"
    ]
   },
   "updateassessmentframework": {
    "Resources": [
     "assessmentFramework"
    ]
   },
   "updateassessmentframeworkshare": {},
   "updateassessmentstatus": {
    "Resources": [
     "assessment"
    ]
   },
   "updatecontrol": {
    "Resources": [
     "control"
    ]
   },
   "updatesettings": {},
   "validateassessmentreportintegrity": {}
  },
  "Resources": {
   "assessment": {
    "ARNFormats": [
     "arn:${Partition}:auditmanager:${Region}:${Account}:assessment/.*"
    ]
   },
   "assessmentcontrolset": {
    "ARNFormats": [
     "arn:${Partition}:auditmanager:${Region}:${Account}:assessment/.*"
    ]
   },
   "assessmentframework": {
    "ARNFormats": [
     "arn:${Partition}:auditmanager:${Region}:${Account}:assessmentFramework/.*"
    ]
   },
   "control": {
    "ARNFormats": [
     "arn:${Partition}:auditmanager:${Region}:${Account}:control/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "autoscaling": {
  "Actions": {
   "attachinstances": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "attachloadbalancers": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "attachloadbalancertargetgroups": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "attachtrafficsources": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "batchdeletescheduledaction": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "batchputscheduledupdategroupaction": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "cancelinstancerefresh": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "completelifecycleaction": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "createautoscalinggroup": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "createlaunchconfiguration": {
    "Resources": [
     "launchConfiguration"
    ]
   },
   "createorupdatetags": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "deleteautoscalinggroup": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "deletelaunchconfiguration": {
    "Resources": [
     "launchConfiguration"
    ]
   },
   "deletelifecyclehook": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "deletenotificationconfiguration": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "deletepolicy": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "deletescheduledaction": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "deletetags": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "deletewarmpool": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "describeaccountlimits": {},
   "describeadjustmenttypes": {},
   "describeautoscalinggroups": {},
   "describeautoscalinginstances": {},
   "describeautoscalingnotificationtypes": {},
   "describeinstancerefreshes": {},
   "describelaunchconfigurations": {},
   "describelifecyclehooks": {},
   "describelifecyclehooktypes": {},
   "describeloadbalancers": {},
   "describeloadbalancertargetgroups": {},
   "describemetriccollectiontypes": {},
   "describenotificationconfigurations": {},
   "describepolicies": {},
   "describescalingactivities": {},
   "describescalingprocesstypes": {},
   "describescheduledactions": {},
   "describetags": {},
   "describeterminationpolicytypes": {},
   "describetrafficsources": {},
   "describewarmpool": {},
   "detachinstances": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "detachloadbalancers": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "detachloadbalancertargetgroups": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "detachtrafficsources": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "disablemetricscollection": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "enablemetricscollection": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "enterstandby": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "executepolicy": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "exitstandby": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "getpredictivescalingforecast": {},
   "putlifecyclehook": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "putnotificationconfiguration": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "putscalingpolicy": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "putscheduledupdategroupaction": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "putwarmpool": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "recordlifecycleactionheartbeat": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "resumeprocesses": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "rollbackinstancerefresh": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "setdesiredcapacity": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "setinstancehealth": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "setinstanceprotection": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "startinstancerefresh": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "suspendprocesses": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "terminateinstanceinautoscalinggroup": {
    "Resources": [
     "autoScalingGroup"
    ]
   },
   "updateautoscalinggroup": {
    "Resources": [
     "autoScalingGroup"
    ]
   }
  },
  "Resources": {
   "autoscalinggroup": {
    "ARNFormats": [
     "arn:${Partition}:autoscaling:${Region}:${Account}:autoScalingGroup:.*"
    ],
    "ConditionKeys": [
     "autoscaling:ResourceTag/${TagKey}",
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "launchconfiguration": {
    "ARNFormats": [
     "arn:${Partition}:autoscaling:${Region}:${Account}:launchConfiguration:.*"
    ]
   }
  }
 },
 "autoscaling-plans": {
  "Actions": {
   "createscalingplan": {},
   "deletescalingplan": {},
   "describescalingplanresources": {},
   "describescalingplans": {},
   "getscalingplanresourceforecastdata": {},
   "updatescalingplan": {}
  },
  "Resources": {}
 },
 "aws-marketplace": {
  "Actions": {
   "acceptagreementapprovalrequest": {},
   "acceptagreementrequest": {},
   "associateproductswithprivatemarketplace": {},
   "batchmeterusage": {},
   "cancelagreement": {},
   "cancelagreementrequest": {},
   "cancelchangeset": {
    "Resources": [
     "ChangeSet"
    ]
   },
   "completetask": {},
   "createagreementrequest": {},
   "createprivatemarketplacerequests": {},
   "deleteresourcepolicy": {
    "Resources": [
     "Entity"
    ]
   },
   "describeagreement": {},
   "describeassessment": {},
   "describebuilds": {},
   "describechangeset": {
    "Resources": [
     "ChangeSet"
    ]
   },
   "describeentity": {
    "Resources": [
     "Entity"
    ]
   },
   "describeprivatemarketplacerequests": {},
   "describeprocurementsystemconfiguration": {},
   "describetask": {},
   "disassociateproductsfromprivatemarketplace": {},
   "getagreementapprovalrequest": {},
   "getagreementrequest": {},
   "getagreementterms": {},
   "getbuyerdashboard": {
    "Resources": [
     "Dashboard"
    ]
   },
   "getentitlements": {},
   "getresourcepolicy": {
    "Resources": [
     "Entity"
    ]
   },
   "getsellerdashboard": {
    "Resources": [
     "SellerDashboard"
    ]
   },
   "listagreementapprovalrequests": {},
   "listagreementcharges": {},
   "listagreementrequests": {},
   "listassessments": {},
   "listbuilds": {},
   "listchangesets": {},
   "listentities": {},
   "listentitlementdetails": {},
   "listprivatelistings": {},
   "listprivatemarketplacerequests": {},
   "listtagsforresource": {
    "Resources": [
     "ChangeSet",
     "DeploymentParameter",
     "Entity"
    ]
   },
   "listtasks": {},
   "meterusage": {},
   "putdeploymentparameter": {
    "Resources": [
     "DeploymentParameter"
    ]
   },
   "putprocurementsystemconfiguration": {},
   "putresourcepolicy": {
    "Resources": [
     "Entity"
    ]
   },
   "registerusage": {},
   "rejectagreementapprovalrequest": {},
   "resolvecustomer": {},
   "searchagreements": {},
   "startbuild": {},
   "startchangeset": {
    "Resources": [
     "Entity"
    ]
   },
   "subscribe": {},
   "tagresource": {
    "Resources": [
     "ChangeSet",
     "DeploymentParameter",
     "Entity"
    ]
   },
   "unsubscribe": {},
   "untagresource": {
    "Resources": [
     "ChangeSet",
     "DeploymentParameter",
     "Entity"
    ]
   },
   "updateagreementapprovalrequest": {},
   "updatepurchaseorders": {},
   "updatetask": {},
   "viewsubscriptions": {}
  },
  "Resources": {
   "changeset": {
    "ARNFormats": [
     "arn:${Partition}:aws-marketplace:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "catalog:ChangeType"
    ]
   },
   "dashboard": {
    "ARNFormats": [
     "arn:${Partition}:aws-marketplace::${Account}:.*"
    ]
   },
   "deploymentparameter": {
    "ARNFormats": [
     "arn:${Partition}:aws-marketplace:${Region}:${Account}:DeploymentParameter:.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys"
    ]
   },
   "entity": {
    "ARNFormats": [
     "arn:${Partition}:aws-marketplace:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "catalog:ChangeType"
    ]
   },
   "sellerdashboard": {
    "ARNFormats": [
     "arn:${Partition}:aws-marketplace::${Account}:.*"
    ]
   }
  }
 },
 "aws-marketplace-management": {
  "Actions": {
   "getadditionalsellernotificationrecipients": {},
   "getbankaccountverificationdetails": {},
   "getsecondaryuserverificationdetails": {},
   "getsellerverificationdetails": {},
   "putadditionalsellernotificationrecipients": {},
   "putbankaccountverificationdetails": {},
   "putsecondaryuserverificationdetails": {},
   "putsellerverificationdetails": {},
   "uploadfiles": {},
   "viewmarketing": {},
   "viewreports": {},
   "viewsettings": {},
   "viewsupport": {}
  },
  "Resources": {}
 },
 "aws-portal": {
  "Actions": {
   "getconsoleactionsetenforced": {},
   "modifyaccount": {},
   "modifybilling": {},
   "modifypaymentmethods": {},
   "updateconsoleactionsetenforced": {},
   "viewaccount": {},
   "viewbilling": {},
   "viewpaymentmethods": {},
   "viewusage": {}
  },
  "Resources": {}
 },
 "awsconnector": {
  "Actions": {
   "getconnectorhealth": {},
   "registerconnector": {},
   "validateconnectorid": {}
  },
  "Resources": {}
 },
 "b2bi": {
  "Actions": {
   "createcapability": {
    "Resources": [
     "transformer"
    ]
   },
   "createpartnership": {
    "Resources": [
     "capability",
     "profile"
    ]
   },
   "createprofile": {},
   "createstartermappingtemplate": {
    "Resources": [
     "transformer"
    ]
   },
   "createtransformer": {},
   "deletecapability": {
    "Resources": [
     "capability"
    ]
   },
   "deletepartnership": {
    "Resources": [
     "partnership"
    ]
   },
   "deleteprofile": {
    "Resources": [
     "profile"
    ]
   },
   "deletetransformer": {
    "Resources": [
     "transformer"
    ]
   },
   "generatemapping": {
    "Resources": [
     "transformer"
    ]
   },
   "getcapability": {
    "Resources": [
     "capability"
    ]
   },
   "getpartnership": {
    "Resources": [
     "partnership"
    ]
   },
   "getprofile": {
    "Resources": [
     "profile"
    ]
   },
   "gettransformer": {
    "Resources": [
     "transformer"
    ]
   },
   "gettransformerjob": {
    "Resources": [
     "transformer"
    ]
   },
   "listcapabilities": {},
   "listpartnerships": {},
   "listprofiles": {},
   "listtagsforresource": {
    "Resources": [
     "capability",
     "partnership",
     "profile",
     "transformer"
    ]
   },
   "listtransformers": {},
   "starttransformerjob": {
    "Resources": [
     "transformer"
    ]
   },
   "tagresource": {
    "Resources": [
     "capability",
     "partnership",
     "profile",
     "transformer"
    ]
   },
   "testconversion": {
    "Resources": [
     "transformer"
    ]
   },
   "testmapping": {
    "Resources": [
     "transformer"
    ]
   },
   "testparsing": {
    "Resources": [
     "transformer"
    ]
   },
   "untagresource": {
    "Resources": [
     "capability",
     "partnership",
     "profile",
     "transformer"
    ]
   },
   "updatecapability": {
    "Resources": [
     "capability",
     "transformer"
    ]
   },
   "updatepartnership": {
    "Resources": [
     "capability",
     "partnership"
    ]
   },
   "updateprofile": {
    "Resources": [
     "profile"
    ]
   },
   "updatetransformer": {
    "Resources": [
     "transformer"
    ]
   }
  },
  "Resources": {
   "capability": {
    "ARNFormats": [
     "arn:${Partition}:b2bi:${Region}:${Account}:capability/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "partnership": {
    "ARNFormats": [
     "arn:${Partition}:b2bi:${Region}:${Account}:partnership/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "profile": {
    "ARNFormats": [
     "arn:${Partition}:b2bi:${Region}:${Account}:profile/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "transformer": {
    "ARNFormats": [
     "arn:${Partition}:b2bi:${Region}:${Account}:transformer/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "backup": {
  "Actions": {
   "cancellegalhold": {
    "Resources": [
     "legalHold"
    ]
   },
   "copyfrombackupvault": {
    "Resources": [
     "recoveryPoint"
    ]
   },
   "copyintobackupvault": {
    "Resources": [
     "backupVault"
    ]
   },
   "createbackupplan": {
    "Resources": [
     "backupPlan"
    ]
   },
   "createbackupselection": {
    "Resources": [
     "backupPlan"
    ]
   },
   "createbackupvault": {
    "Resources": [
     "backupVault"
    ]
   },
   "createframework": {
    "Resources": [
     "framework"
    ]
   },
   "createlegalhold": {
    "Resources": [
     "legalHold"
    ]
   },
   "createlogicallyairgappedbackupvault": {
    "Resources": [
     "backupVault"
    ]
   },
   "createreportplan": {
    "Resources": [
     "reportPlan"
    ]
   },
   "createrestoretestingplan": {
    "Resources": [
     "restoreTestingPlan"
    ]
   },
   "createrestoretestingselection": {
    "Resources": [
     "restoreTestingPlan"
    ]
   },
   "deletebackupplan": {
    "Resources": [
     "backupPlan"
    ]
   },
   "deletebackupselection": {
    "Resources": [
     "backupPlan"
    ]
   },
   "deletebackupvault": {
    "Resources": [
     "backupVault"
    ]
   },
   "deletebackupvaultaccesspolicy": {
    "Resources": [
     "backupVault"
    ]
   },
   "deletebackupvaultlockconfiguration": {
    "Resources": [
     "backupVault"
    ]
   },
   "deletebackupvaultnotifications": {
    "Resources": [
     "backupVault"
    ]
   },
   "deletebackupvaultsharingpolicy": {
    "Resources": [
     "backupVault"
    ]
   },
   "deleteframework": {
    "Resources": [
     "framework"
    ]
   },
   "deleterecoverypoint": {
    "Resources": [
     "recoveryPoint"
    ]
   },
   "deletereportplan": {
    "Resources": [
     "reportPlan"
    ]
   },
   "deleterestoretestingplan": {
    "Resources": [
     "restoreTestingPlan"
    ]
   },
   "deleterestoretestingselection": {
    "Resources": [
     "restoreTestingPlan"
    ]
   },
   "describebackupjob": {},
   "describebackupvault": {
    "Resources": [
     "backupVault"
    ]
   },
   "describecopyjob": {},
   "describeframework": {
    "Resources": [
     "framework"
    ]
   },
   "describeglobalsettings": {},
   "describeprotectedresource": {},
   "describerecoverypoint": {
    "Resources": [
     "recoveryPoint"
    ]
   },
   "describeregionsettings": {},
   "describereportjob": {},
   "describereportplan": {
    "Resources": [
     "reportPlan"
    ]
   },
   "describerestorejob": {},
   "disassociaterecoverypoint": {
    "Resources": [
     "recoveryPoint"
    ]
   },
   "disassociaterecoverypointfromparent": {
    "Resources": [
     "recoveryPoint"
    ]
   },
   "exportbackupplantemplate": {},
   "getbackupplan": {
    "Resources": [
     "backupPlan"
    ]
   },
   "getbackupplanfromjson": {},
   "getbackupplanfromtemplate": {},
   "getbackupselection": {
    "Resources": [
     "backupPlan"
    ]
   },
   "getbackupvaultaccesspolicy": {
    "Resources": [
     "backupVault"
    ]
   },
   "getbackupvaultnotifications": {
    "Resources": [
     "backupVault"
    ]
   },
   "getbackupvaultsharingpolicy": {
    "Resources": [
     "backupVault"
    ]
   },
   "getlegalhold": {
    "Resources": [
     "legalHold"
    ]
   },
   "getrecoverypointindexdetails": {
    "Resources": [
     "recoveryPoint"
    ]
   },
   "getrecoverypointrestoremetadata": {
    "Resources": [
     "recoveryPoint"
    ]
   },
   "getrestorejobmetadata": {},
   "getrestoretestinginferredmetadata": {},
   "getrestoretestingplan": {
    "Resources": [
     "restoreTestingPlan"
    ]
   },
   "getrestoretestingselection": {
    "Resources": [
     "restoreTestingPlan"
    ]
   },
   "getsupportedresourcetypes": {},
   "listbackupjobs": {},
   "listbackupjobsummaries": {},
   "listbackupplans": {},
   "listbackupplantemplates": {},
   "listbackupplanversions": {
    "Resources": [
     "backupPlan"
    ]
   },
   "listbackupselections": {
    "Resources": [
     "backupPlan"
    ]
   },
   "listbackupvaults": {},
   "listcopyjobs": {},
   "listcopyjobsummaries": {},
   "listframeworks": {},
   "listindexedrecoverypoints": {},
   "listindexedrecoverypointsforsearch": {},
   "listlegalholds": {},
   "listprotectedresources": {},
   "listprotectedresourcesbybackupvault": {
    "Resources": [
     "backupVault"
    ]
   },
   "listrecoverypointsbybackupvault": {
    "Resources": [
     "backupVault"
    ]
   },
   "listrecoverypointsbylegalhold": {
    "Resources": [
     "legalHold"
    ]
   },
   "listrecoverypointsbyresource": {},
   "listreportjobs": {},
   "listreportplans": {},
   "listrestorejobs": {},
   "listrestorejobsbyprotectedresource": {},
   "listrestorejobsummaries": {},
   "listrestoretestingplans": {},
   "listrestoretestingselections": {
    "Resources": [
     "restoreTestingPlan"
    ]
   },
   "listtags": {
    "Resources": [
     "backupPlan",
     "backupVault",
     "framework",
     "legalHold",
     "recoveryPoint",
     "reportPlan",
     "restoreTestingPlan"
    ]
   },
   "putbackupvaultaccesspolicy": {
    "Resources": [
     "backupVault"
    ]
   },
   "putbackupvaultlockconfiguration": {
    "Resources": [
     "backupVault"
    ]
   },
   "putbackupvaultnotifications": {
    "Resources": [
     "backupVault"
    ]
   },
   "putbackupvaultsharingpolicy": {
    "Resources": [
     "backupVault"
    ]
   },
   "putrestorevalidationresult": {},
   "searchrecoverypoint": {
    "Resources": [
     "recoveryPoint"
    ]
   },
   "startbackupjob": {
    "Resources": [
     "backupVault"
    ]
   },
   "startcopyjob": {
    "Resources": [
     "recoveryPoint"
    ]
   },
   "startreportjob": {
    "Resources": [
     "reportPlan"
    ]
   },
   "startrestorejob": {
    "Resources": [
     "recoveryPoint"
    ]
   },
   "stopbackupjob": {},
   "tagresource": {
    "Resources": [
     "backupPlan",
     "backupVault",
     "framework",
     "legalHold",
     "recoveryPoint",
     "reportPlan",
     "restoreTestingPlan"
    ]
   },
   "untagresource": {
    "Resources": [
     "backupPlan",
     "backupVault",
     "framework",
     "legalHold",
     "recoveryPoint",
     "reportPlan",
     "restoreTestingPlan"
    ]
   },
   "updatebackupplan": {
    "Resources": [
     "backupPlan"
    ]
   },
   "updateframework": {
    "Resources": [
     "framework"
    ]
   },
   "updateglobalsettings": {},
   "updaterecoverypointindexsettings": {
    "Resources": [
     "recoveryPoint"
    ]
   },
   "updaterecoverypointlifecycle": {
    "Resources": [
     "recoveryPoint"
    ]
   },
   "updateregionsettings": {},
   "updatereportplan": {
    "Resources": [
     "reportPlan"
    ]
   },
   "updaterestoretestingplan": {
    "Resources": [
     "restoreTestingPlan"
    ]
   },
   "updaterestoretestingselection": {
    "Resources": [
     "restoreTestingPlan"
    ]
   }
  },
  "Resources": {
   "backupplan": {
    "ARNFormats": [
     "arn:${Partition}:backup:${Region}:${Account}:backup-plan:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "backupvault": {
    "ARNFormats": [
     "arn:${Partition}:backup:${Region}:${Account}:backup-vault:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "framework": {
    "ARNFormats": [
     "arn:${Partition}:backup:${Region}:${Account}:framework:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "legalhold": {
    "ARNFormats": [
     "arn:${Partition}:backup:${Region}:${Account}:legal-hold:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "recoverypoint": {
    "ARNFormats": [
     "arn:${Partition}:${Vendor}:${Region}:*:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "reportplan": {
    "ARNFormats": [
     "arn:${Partition}:backup:${Region}:${Account}:report-plan:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "restoretestingplan": {
    "ARNFormats": [
     "arn:${Partition}:backup:${Region}:${Account}:restore-testing-plan:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "backup-gateway": {
  "Actions": {
   "associategatewaytoserver": {
    "Resources": [
     "gateway",
     "hypervisor"
    ]
   },
   "backup": {
    "Resources": [
     "virtualmachine"
    ]
   },
   "creategateway": {},
   "deletegateway": {
    "Resources": [
     "gateway"
    ]
   },
   "deletehypervisor": {
    "Resources": [
     "hypervisor"
    ]
   },
   "disassociategatewayfromserver": {
    "Resources": [
     "gateway"
    ]
   },
   "getbandwidthratelimitschedule": {
    "Resources": [
     "gateway"
    ]
   },
   "getgateway": {
    "Resources": [
     "gateway"
    ]
   },
   "gethypervisor": {
    "Resources": [
     "hypervisor"
    ]
   },
   "gethypervisorpropertymappings": {
    "Resources": [
     "hypervisor"
    ]
   },
   "getvirtualmachine": {
    "Resources": [
     "virtualmachine"
    ]
   },
   "importhypervisorconfiguration": {},
   "listgateways": {},
   "listhypervisors": {},
   "listtagsforresource": {
    "Resources": [
     "gateway",
     "hypervisor",
     "virtualmachine"
    ]
   },
   "listvirtualmachines": {},
   "putbandwidthratelimitschedule": {
    "Resources": [
     "gateway"
    ]
   },
   "puthypervisorpropertymappings": {
    "Resources": [
     "hypervisor"
    ]
   },
   "putmaintenancestarttime": {
    "Resources": [
     "gateway"
    ]
   },
   "restore": {
    "Resources": [
     "hypervisor"
    ]
   },
   "startvirtualmachinesmetadatasync": {
    "Resources": [
     "hypervisor"
    ]
   },
   "tagresource": {
    "Resources": [
     "gateway",
     "hypervisor",
     "virtualmachine"
    ]
   },
   "testhypervisorconfiguration": {
    "Resources": [
     "gateway"
    ]
   },
   "untagresource": {
    "Resources": [
     "gateway",
     "hypervisor",
     "virtualmachine"
    ]
   },
   "updategatewayinformation": {
    "Resources": [
     "gateway"
    ]
   },
   "updategatewaysoftwarenow": {
    "Resources": [
     "gateway"
    ]
   },
   "updatehypervisor": {
    "Resources": [
     "gateway"
    ]
   }
  },
  "Resources": {
   "gateway": {
    "ARNFormats": [
     "arn:${Partition}:backup-gateway::${Account}:gateway/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "hypervisor": {
    "ARNFormats": [
     "arn:${Partition}:backup-gateway::${Account}:hypervisor/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "virtualmachine": {
    "ARNFormats": [
     "arn:${Partition}:backup-gateway::${Account}:vm/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "backup-search": {
  "Actions": {
   "getsearchjob": {
    "Resources": [
     "searchJob"
    ]
   },
   "getsearchresultexportjob": {
    "Resources": [
     "searchExportJob"
    ]
   },
   "listsearchjobbackups": {
    "Resources": [
     "searchJob"
    ]
   },
   "listsearchjobresults": {
    "Resources": [
     "searchJob"
    ]
   },
   "listsearchjobs": {},
   "listsearchresultexportjobs": {},
   "listtagsforresource": {
    "Resources": [
     "searchExportJob",
     "searchJob"
    ]
   },
   "startsearchjob": {},
   "startsearchresultexportjob": {
    "Resources": [
     "searchJob"
    ]
   },
   "stopsearchjob": {
    "Resources": [
     "searchJob"
    ]
   },
   "tagresource": {
    "Resources": [
     "searchExportJob",
     "searchJob"
    ]
   },
   "untagresource": {
    "Resources": [
     "searchExportJob",
     "searchJob"
    ]
   }
  },
  "Resources": {
   "searchexportjob": {
    "ARNFormats": [
     "arn:${Partition}:backup-search:${Region}:${Account}:search-export-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "searchjob": {
    "ARNFormats": [
     "arn:${Partition}:backup-search:${Region}:${Account}:search-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "backup-storage": {
  "Actions": {
   "commitbackupjob": {},
   "deleteobjects": {},
   "describebackupjob": {},
   "getbasebackup": {},
   "getchunk": {},
   "getincrementalbasebackup": {},
   "getobjectmetadata": {},
   "listchunks": {},
   "listobjects": {},
   "mountcapsule": {},
   "notifyobjectcomplete": {},
   "putchunk": {},
   "putobject": {},
   "startobject": {},
   "updateobjectcomplete": {}
  },
  "Resources": {}
 },
 "batch": {
  "Actions": {
   "canceljob": {
    "Resources": [
     "job"
    ]
   },
   "createcomputeenvironment": {
    "Resources": [
     "compute-environment"
    ]
   },
   "createconsumableresource": {
    "Resources": [
     "consumable-resource"
    ]
   },
   "createjobqueue": {
    "Resources": [
     "compute-environment",
     "job-queue",
     "scheduling-policy"
    ]
   },
   "createschedulingpolicy": {
    "Resources": [
     "scheduling-policy"
    ]
   },
   "deletecomputeenvironment": {
    "Resources": [
     "compute-environment"
    ]
   },
   "deleteconsumableresource": {
    "Resources": [
     "consumable-resource"
    ]
   },
   "deletejobqueue": {
    "Resources": [
     "job-queue"
    ]
   },
   "deleteschedulingpolicy": {
    "Resources": [
     "scheduling-policy"
    ]
   },
   "deregisterjobdefinition": {
    "Resources": [
     "job-definition-revision"
    ]
   },
   "describecomputeenvironments": {},
   "describeconsumableresource": {
    "Resources": [
     "consumable-resource"
    ]
   },
   "describejobdefinitions": {},
   "describejobqueues": {},
   "describejobs": {},
   "describeschedulingpolicies": {},
   "getjobqueuesnapshot": {
    "Resources": [
     "job-queue"
    ]
   },
   "listconsumableresources": {},
   "listjobs": {},
   "listjobsbyconsumableresource": {
    "Resources": [
     "consumable-resource"
    ]
   },
   "listschedulingpolicies": {},
   "listtagsforresource": {
    "Resources": [
     "compute-environment",
     "consumable-resource",
     "job",
     "job-definition-revision",
     "job-queue",
     "scheduling-policy"
    ]
   },
   "registerjobdefinition": {
    "Resources": [
     "consumable-resource",
     "job-definition"
    ]
   },
   "submitjob": {
    "Resources": [
     "consumable-resource",
     "job",
     "job-definition",
     "job-queue"
    ]
   },
   "tagresource": {
    "Resources": [
     "compute-environment",
     "consumable-resource",
     "job",
     "job-definition-revision",
     "job-queue",
     "scheduling-policy"
    ]
   },
   "terminatejob": {
    "Resources": [
     "job"
    ]
   },
   "untagresource": {
    "Resources": [
     "compute-environment",
     "consumable-resource",
     "job",
     "job-definition-revision",
     "job-queue",
     "scheduling-policy"
    ]
   },
   "updatecomputeenvironment": {
    "Resources": [
     "compute-environment"
    ]
   },
   "updateconsumableresource": {
    "Resources": [
     "consumable-resource"
    ]
   },
   "updatejobqueue": {
    "Resources": [
     "compute-environment",
     "job-queue",
     "scheduling-policy"
    ]
   },
   "updateschedulingpolicy": {
    "Resources": [
     "scheduling-policy"
    ]
   }
  },
  "Resources": {
   "compute-environment": {
    "ARNFormats": [
     "arn:${Partition}:batch:${Region}:${Account}:compute-environment/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "consumable-resource": {
    "ARNFormats": [
     "arn:${Partition}:batch:${Region}:${Account}:consumable-resource/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "job": {
    "ARNFormats": [
     "arn:${Partition}:batch:${Region}:${Account}:job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "job-definition": {
    "ARNFormats": [
     "arn:${Partition}:batch:${Region}:${Account}:job-definition/.*"
    ]
   },
   "job-definition-revision": {
    "ARNFormats": [
     "arn:${Partition}:batch:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "job-queue": {
    "ARNFormats": [
     "arn:${Partition}:batch:${Region}:${Account}:job-queue/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "scheduling-policy": {
    "ARNFormats": [
     "arn:${Partition}:batch:${Region}:${Account}:scheduling-policy/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "bcm-data-exports": {
  "Actions": {
   "createexport": {
    "Resources": [
     "table"
    ]
   },
   "deleteexport": {
    "Resources": [
     "export"
    ]
   },
   "getexecution": {
    "Resources": [
     "export"
    ]
   },
   "getexport": {
    "Resources": [
     "export"
    ]
   },
   "gettable": {
    "Resources": [
     "table"
    ]
   },
   "listexecutions": {
    "Resources": [
     "export"
    ]
   },
   "listexports": {},
   "listtables": {},
   "listtagsforresource": {
    "Resources": [
     "export"
    ]
   },
   "tagresource": {
    "Resources": [
     "export"
    ]
   },
   "untagresource": {
    "Resources": [
     "export"
    ]
   },
   "updateexport": {
    "Resources": [
     "export",
     "table"
    ]
   }
  },
  "Resources": {
   "export": {
    "ARNFormats": [
     "arn:${Partition}:bcm-data-exports:${Region}:${Account}:export/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "table": {
    "ARNFormats": [
     "arn:${Partition}:bcm-data-exports:${Region}:${Account}:table/.*"
    ]
   }
  }
 },
 "bcm-pricing-calculator": {
  "Actions": {
   "createbillestimate": {
    "Resources": [
     "bill-scenario"
    ]
   },
   "createbillscenario": {},
   "createbillscenariocommitmentmodification": {
    "Resources": [
     "bill-scenario"
    ]
   },
   "createbillscenariousagemodification": {
    "Resources": [
     "bill-scenario"
    ]
   },
   "createworkloadestimate": {},
   "createworkloadestimateusage": {
    "Resources": [
     "workload-estimate"
    ]
   },
   "deletebillestimate": {
    "Resources": [
     "bill-estimate"
    ]
   },
   "deletebillscenario": {
    "Resources": [
     "bill-scenario"
    ]
   },
   "deletebillscenariocommitmentmodification": {
    "Resources": [
     "bill-scenario"
    ]
   },
   "deletebillscenariousagemodification": {
    "Resources": [
     "bill-scenario"
    ]
   },
   "deleteworkloadestimate": {
    "Resources": [
     "workload-estimate"
    ]
   },
   "deleteworkloadestimateusage": {
    "Resources": [
     "workload-estimate"
    ]
   },
   "getbillestimate": {
    "Resources": [
     "bill-estimate"
    ]
   },
   "getbillscenario": {
    "Resources": [
     "bill-scenario"
    ]
   },
   "getpreferences": {},
   "getworkloadestimate": {
    "Resources": [
     "workload-estimate"
    ]
   },
   "listbillestimatecommitments": {
    "Resources": [
     "bill-estimate"
    ]
   },
   "listbillestimateinputcommitmentmodifications": {
    "Resources": [
     "bill-estimate"
    ]
   },
   "listbillestimateinputusagemodifications": {
    "Resources": [
     "bill-estimate"
    ]
   },
   "listbillestimatelineitems": {
    "Resources": [
     "bill-estimate"
    ]
   },
   "listbillestimates": {},
   "listbillscenariocommitmentmodifications": {
    "Resources": [
     "bill-scenario"
    ]
   },
   "listbillscenarios": {},
   "listbillscenariousagemodifications": {
    "Resources": [
     "bill-scenario"
    ]
   },
   "listtagsforresource": {},
   "listworkloadestimates": {},
   "listworkloadestimateusage": {
    "Resources": [
     "workload-estimate"
    ]
   },
   "tagresource": {},
   "untagresource": {},
   "updatebillestimate": {
    "Resources": [
     "bill-estimate"
    ]
   },
   "updatebillscenario": {
    "Resources": [
     "bill-scenario"
    ]
   },
   "updatebillscenariocommitmentmodification": {
    "Resources": [
     "bill-scenario"
    ]
   },
   "updatebillscenariousagemodification": {
    "Resources": [
     "bill-scenario"
    ]
   },
   "updatepreferences": {},
   "updateworkloadestimate": {
    "Resources": [
     "workload-estimate"
    ]
   },
   "updateworkloadestimateusage": {
    "Resources": [
     "workload-estimate"
    ]
   }
  },
  "Resources": {
   "bill-estimate": {
    "ARNFormats": [
     "arn:${Partition}:bcm-pricing-calculator:${Region}:${Account}:bill-estimate/.*"
    ]
   },
   "bill-scenario": {
    "ARNFormats": [
     "arn:${Partition}:bcm-pricing-calculator:${Region}:${Account}:bill-scenario/.*"
    ]
   },
   "workload-estimate": {
    "ARNFormats": [
     "arn:${Partition}:bcm-pricing-calculator:${Region}:${Account}:workload-estimate/.*"
    ]
   }
  }
 },
 "bedrock": {
  "Actions": {
   "allowvendedlogdeliveryforresource": {
    "Resources": [
     "knowledge-base"
    ]
   },
   "applyguardrail": {
    "Resources": [
     "guardrail"
    ]
   },
   "associateagentcollaborator": {
    "Resources": [
     "agent"
    ]
   },
   "associateagentknowledgebase": {
    "Resources": [
     "agent",
     "knowledge-base"
    ]
   },
   "associatethirdpartyknowledgebase": {},
   "batchdeleteevaluationjob": {
    "Resources": [
     "evaluation-job"
    ]
   },
   "createagent": {},
   "createagentactiongroup": {
    "Resources": [
     "agent"
    ]
   },
   "createagentalias": {
    "Resources": [
     "agent"
    ]
   },
   "createblueprint": {},
   "createblueprintversion": {
    "Resources": [
     "blueprint"
    ]
   },
   "createdataautomationproject": {
    "Resources": [
     "blueprint"
    ]
   },
   "createdatasource": {
    "Resources": [
     "knowledge-base"
    ]
   },
   "createevaluationjob": {
    "Resources": [
     "custom-model",
     "default-prompt-router",
     "foundation-model",
     "prompt-router"
    ]
   },
   "createflow": {},
   "createflowalias": {
    "Resources": [
     "flow"
    ]
   },
   "createflowversion": {
    "Resources": [
     "flow"
    ]
   },
   "createfoundationmodelagreement": {},
   "createguardrail": {},
   "createguardrailversion": {
    "Resources": [
     "guardrail"
    ]
   },
   "createinferenceprofile": {
    "Resources": [
     "application-inference-profile",
     "foundation-model",
     "inference-profile"
    ]
   },
   "createinvocation": {
    "Resources": [
     "session"
    ]
   },
   "createknowledgebase": {},
   "createmarketplacemodelendpoint": {},
   "createmodelcopyjob": {
    "Resources": [
     "custom-model"
    ]
   },
   "createmodelcustomizationjob": {
    "Resources": [
     "custom-model",
     "foundation-model"
    ]
   },
   "createmodelevaluationjob": {
    "Resources": [
     "custom-model",
     "foundation-model"
    ]
   },
   "createmodelimportjob": {},
   "createmodelinvocationjob": {
    "Resources": [
     "custom-model",
     "foundation-model",
     "model-invocation-job"
    ]
   },
   "createprompt": {},
   "createpromptrouter": {
    "Resources": [
     "application-inference-profile",
     "foundation-model",
     "inference-profile"
    ]
   },
   "createpromptversion": {
    "Resources": [
     "prompt"
    ]
   },
   "createprovisionedmodelthroughput": {
    "Resources": [
     "custom-model",
     "foundation-model"
    ]
   },
   "createsession": {},
   "deleteagent": {
    "Resources": [
     "agent"
    ]
   },
   "deleteagentactiongroup": {
    "Resources": [
     "agent"
    ]
   },
   "deleteagentalias": {
    "Resources": [
     "agent-alias"
    ]
   },
   "deleteagentmemory": {
    "Resources": [
     "agent-alias"
    ]
   },
   "deleteagentversion": {
    "Resources": [
     "agent"
    ]
   },
   "deleteblueprint": {
    "Resources": [
     "blueprint"
    ]
   },
   "deletecustommodel": {
    "Resources": [
     "custom-model"
    ]
   },
   "deletedataautomationproject": {
    "Resources": [
     "data-automation-project"
    ]
   },
   "deletedatasource": {
    "Resources": [
     "knowledge-base"
    ]
   },
   "deleteflow": {
    "Resources": [
     "flow"
    ]
   },
   "deleteflowalias": {
    "Resources": [
     "flow-alias"
    ]
   },
   "deleteflowversion": {
    "Resources": [
     "flow"
    ]
   },
   "deletefoundationmodelagreement": {},
   "deleteguardrail": {
    "Resources": [
     "guardrail"
    ]
   },
   "deleteimportedmodel": {
    "Resources": [
     "imported-model"
    ]
   },
   "deleteinferenceprofile": {
    "Resources": [
     "application-inference-profile"
    ]
   },
   "deleteknowledgebase": {
    "Resources": [
     "knowledge-base"
    ]
   },
   "deleteknowledgebasedocuments": {
    "Resources": [
     "knowledge-base"
    ]
   },
   "deletemarketplacemodelagreement": {},
   "deletemarketplacemodelendpoint": {
    "Resources": [
     "bedrock-marketplace-model-endpoint"
    ]
   },
   "deletemodelinvocationloggingconfiguration": {},
   "deleteprompt": {
    "Resources": [
     "prompt",
     "prompt-version"
    ]
   },
   "deletepromptrouter": {
    "Resources": [
     "prompt-router"
    ]
   },
   "deleteprovisionedmodelthroughput": {
    "Resources": [
     "provisioned-model"
    ]
   },
   "deleteresourcepolicy": {
    "Resources": [
     "custom-model"
    ]
   },
   "deletesession": {
    "Resources": [
     "session"
    ]
   },
   "deregistermarketplacemodelendpoint": {
    "Resources": [
     "bedrock-marketplace-model-endpoint"
    ]
   },
   "detectgeneratedcontent": {
    "Resources": [
     "foundation-model"
    ]
   },
   "disassociateagentcollaborator": {
    "Resources": [
     "agent"
    ]
   },
   "disassociateagentknowledgebase": {
    "Resources": [
     "agent",
     "knowledge-base"
    ]
   },
   "endsession": {
    "Resources": [
     "session"
    ]
   },
   "generatequery": {},
   "getagent": {
    "Resources": [
     "agent"
    ]
   },
   "getagentactiongroup": {
    "Resources": [
     "agent"
    ]
   },
   "getagentalias": {
    "Resources": [
     "agent-alias"
    ]
   },
   "getagentcollaborator": {
    "Resources": [
     "agent"
    ]
   },
   "getagentknowledgebase": {
    "Resources": [
     "agent",
     "knowledge-base"
    ]
   },
   "getagentmemory": {
    "Resources": [
     "agent-alias"
    ]
   },
   "getagentversion": {
    "Resources": [
     "agent"
    ]
   },
   "getasyncinvoke": {
    "Resources": [
     "async-invoke"
    ]
   },
   "getblueprint": {
    "Resources": [
     "blueprint"
    ]
   },
   "getblueprintrecommendation": {},
   "getcustommodel": {
    "Resources": [
     "custom-model"
    ]
   },
   "getdataautomationproject": {
    "Resources": [
     "data-automation-project"
    ]
   },
   "getdataautomationstatus": {
    "Resources": [
     "data-automation-invocation-job"
    ]
   },
   "getdatasource": {
    "Resources": [
     "knowledge-base"
    ]
   },
   "getevaluationjob": {
    "Resources": [
     "evaluation-job"
    ]
   },
   "getflow": {
    "Resources": [
     "flow"
    ]
   },
   "getflowalias": {
    "Resources": [
     "flow-alias"
    ]
   },
   "getflowversion": {
    "Resources": [
     "flow"
    ]
   },
   "getfoundationmodel": {
    "Resources": [
     "foundation-model"
    ]
   },
   "getfoundationmodelavailability": {},
   "getguardrail": {
    "Resources": [
     "guardrail"
    ]
   },
   "getimportedmodel": {
    "Resources": [
     "imported-model"
    ]
   },
   "getinferenceprofile": {
    "Resources": [
     "application-inference-profile",
     "inference-profile"
    ]
   },
   "getingestionjob": {
    "Resources": [
     "knowledge-base"
    ]
   },
   "getinvocationstep": {
    "Resources": [
     "session"
    ]
   },
   "getknowledgebase": {
    "Resources": [
     "knowledge-base"
    ]
   },
   "getknowledgebasedocuments": {
    "Resources": [
     "knowledge-base"
    ]
   },
   "getmarketplacemodelendpoint": {
    "Resources": [
     "bedrock-marketplace-model-endpoint"
    ]
   },
   "getmodelcopyjob": {
    "Resources": [
     "model-copy-job"
    ]
   },
   "getmodelcustomizationjob": {
    "Resources": [
     "model-customization-job"
    ]
   },
   "getmodelevaluationjob": {
    "Resources": [
     "model-evaluation-job"
    ]
   },
   "getmodelimportjob": {
    "Resources": [
     "model-import-job"
    ]
   },
   "getmodelinvocationjob": {
    "Resources": [
     "model-invocation-job"
    ]
   },
   "getmodelinvocationloggingconfiguration": {},
   "getprompt": {
    "Resources": [
     "prompt",
     "prompt-version"
    ]
   },
   "getpromptrouter": {
    "Resources": [
     "default-prompt-router",
     "prompt-router"
    ]
   },
   "getprovisionedmodelthroughput": {
    "Resources": [
     "provisioned-model"
    ]
   },
   "getresourcepolicy": {
    "Resources": [
     "custom-model"
    ]
   },
   "getsession": {
    "Resources": [
     "session"
    ]
   },
   "getusecaseformodelaccess": {},
   "ingestknowledgebasedocuments": {
    "Resources": [
     "knowledge-base"
    ]
   },
   "invokeagent": {
    "Resources": [
     "agent-alias"
    ]
   },
   "invokeblueprintrecommendationasync": {
    "Resources": [
     "data-automation-profile"
    ]
   },
   "invokebuilder": {},
   "invokedataautomationasync": {
    "Resources": [
     "blueprint",
     "data-automation-profile",
     "data-automation-project"
    ]
   },
   "invokeflow": {
    "Resources": [
     "flow-alias"
    ]
   },
   "invokeinlineagent": {},
   "invokemodel": {
    "Resources": [
     "application-inference-profile",
     "async-invoke",
     "bedrock-marketplace-model-endpoint",
     "default-prompt-router",
     "foundation-model",
     "imported-model",
     "inference-profile",
     "prompt-router",
     "provisioned-model"
    ]
   },
   "invokemodelwithresponsestream": {
    "Resources": [
     "application-inference-profile",
     "bedrock-marketplace-model-endpoint",
     "default-prompt-router",
     "foundation-model",
     "imported-model",
     "inference-profile",
     "prompt-router",
     "provisioned-model"
    ]
   },
   "listagentactiongroups": {
    "Resources": [
     "agent"
    ]
   },
   "listagentaliases": {
    "Resources": [
     "agent"
    ]
   },
   "listagentcollaborators": {
    "Resources": [
     "agent"
    ]
   },
   "listagentknowledgebases": {
    "Resources": [
     "agent"
    ]
   },
   "listagents": {},
   "listagentversions": {
    "Resources": [
     "agent"
    ]
   },
   "listasyncinvokes": {},
   "listblueprints": {
    "Resources": [
     "data-automation-project"
    ]
   },
   "listcustommodels": {},
   "listdataautomationprojects": {
    "Resources": [
     "blueprint"
    ]
   },
   "listdatasources": {
    "Resources": [
     "knowledge-base"
    ]
   },
   "listevaluationjobs": {},
   "listflowaliases": {
    "Resources": [
     "flow"
    ]
   },
   "listflows": {},
   "listflowversions": {
    "Resources": [
     "flow"
    ]
   },
   "listfoundationmodelagreementoffers": {},
   "listfoundationmodels": {},
   "listguardrails": {
    "Resources": [
     "guardrail"
    ]
   },
   "listimportedmodels": {},
   "listinferenceprofiles": {},
   "listingestionjobs": {
    "Resources": [
     "knowledge-base"
    ]
   },
   "listinvocations": {
    "Resources": [
     "session"
    ]
   },
   "listinvocationsteps": {
    "Resources": [
     "session"
    ]
   },
   "listknowledgebasedocuments": {
    "Resources": [
     "knowledge-base"
    ]
   },
   "listknowledgebases": {},
   "listmarketplacemodelendpoints": {},
   "listmodelcopyjobs": {},
   "listmodelcustomizationjobs": {},
   "listmodelevaluationjobs": {},
   "listmodelimportjobs": {},
   "listmodelinvocationjobs": {},
   "listpromptrouters": {},
   "listprompts": {
    "Resources": [
     "prompt"
    ]
   },
   "listprovisionedmodelthroughputs": {},
   "listsessions": {},
   "listtagsforresource": {
    "Resources": [
     "agent",
     "agent-alias",
     "application-inference-profile",
     "async-invoke",
     "blueprint",
     "custom-model",
     "data-automation-invocation-job",
     "data-automation-project",
     "evaluation-job",
     "flow",
     "flow-alias",
     "guardrail",
     "imported-model",
     "knowledge-base",
     "model-copy-job",
     "model-customization-job",
     "model-evaluation-job",
     "model-import-job",
     "model-invocation-job",
     "prompt",
     "prompt-router",
     "prompt-version",
     "provisioned-model",
     "session"
    ]
   },
   "optimizeprompt": {},
   "prepareagent": {
    "Resources": [
     "agent"
    ]
   },
   "prepareflow": {
    "Resources": [
     "flow"
    ]
   },
   "putfoundationmodelentitlement": {},
   "putinvocationstep": {
    "Resources": [
     "session"
    ]
   },
   "putmodelinvocationloggingconfiguration": {},
   "putresourcepolicy": {
    "Resources": [
     "custom-model"
    ]
   },
   "putusecaseformodelaccess": {},
   "registermarketplacemodelendpoint": {
    "Resources": [
     "bedrock-marketplace-model-endpoint"
    ]
   },
   "renderprompt": {
    "Resources": [
     "prompt",
     "prompt-version"
    ]
   },
   "rerank": {},
   "retrieve": {
    "Resources": [
     "knowledge-base"
    ]
   },
   "retrieveandgenerate": {},
   "startingestionjob": {
    "Resources": [
     "knowledge-base"
    ]
   },
   "stopevaluationjob": {
    "Resources": [
     "evaluation-job"
    ]
   },
   "stopingestionjob": {
    "Resources": [
     "knowledge-base"
    ]
   },
   "stopmodelcustomizationjob": {
    "Resources": [
     "model-customization-job"
    ]
   },
   "stopmodelinvocationjob": {
    "Resources": [
     "model-invocation-job"
    ]
   },
   "tagresource": {
    "Resources": [
     "agent",
     "agent-alias",
     "application-inference-profile",
     "async-invoke",
     "blueprint",
     "custom-model",
     "data-automation-invocation-job",
     "data-automation-project",
     "evaluation-job",
     "flow",
     "flow-alias",
     "guardrail",
     "imported-model",
     "knowledge-base",
     "model-copy-job",
     "model-customization-job",
     "model-evaluation-job",
     "model-import-job",
     "model-invocation-job",
     "prompt",
     "prompt-router",
     "prompt-version",
     "provisioned-model",
     "session"
    ]
   },
   "untagresource": {
    "Resources": [
     "agent",
     "agent-alias",
     "application-inference-profile",
     "async-invoke",
     "blueprint",
     "custom-model",
     "data-automation-invocation-job",
     "data-automation-project",
     "evaluation-job",
     "flow",
     "flow-alias",
     "guardrail",
     "imported-model",
     "knowledge-base",
     "model-copy-job",
     "model-customization-job",
     "model-evaluation-job",
     "model-import-job",
     "model-invocation-job",
     "prompt",
     "prompt-router",
     "prompt-version",
     "provisioned-model",
     "session"
    ]
   },
   "updateagent": {
    "Resources": [
     "agent"
    ]
   },
   "updateagentactiongroup": {
    "Resources": [
     "agent"
    ]
   },
   "updateagentalias": {
    "Resources": [
     "agent-alias"
    ]
   },
   "updateagentcollaborator": {
    "Resources": [
     "agent"
    ]
   },
   "updateagentknowledgebase": {
    "Resources": [
     "agent",
     "knowledge-base"
    ]
   },
   "updateblueprint": {
    "Resources": [
     "blueprint"
    ]
   },
   "updatedataautomationproject": {
    "Resources": [
     "blueprint",
     "data-automation-project"
    ]
   },
   "updatedatasource": {
    "Resources": [
     "knowledge-base"
    ]
   },
   "updateflow": {
    "Resources": [
     "flow"
    ]
   },
   "updateflowalias": {
    "Resources": [
     "flow-alias"
    ]
   },
   "updateguardrail": {
    "Resources": [
     "guardrail"
    ]
   },
   "updateknowledgebase": {
    "Resources": [
     "knowledge-base"
    ]
   },
   "updatemarketplacemodelendpoint": {
    "Resources": [
     "bedrock-marketplace-model-endpoint"
    ]
   },
   "updateprompt": {
    "Resources": [
     "prompt"
    ]
   },
   "updateprovisionedmodelthroughput": {
    "Resources": [
     "custom-model",
     "foundation-model",
     "provisioned-model"
    ]
   },
   "updatesession": {
    "Resources": [
     "session"
    ]
   },
   "validateflowdefinition": {}
  },
  "Resources": {
   "agent": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}:${Account}:agent/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "agent-alias": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}:${Account}:agent-alias/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "application-inference-profile": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}:${Account}:application-inference-profile/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "async-invoke": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}:${Account}:async-invoke/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "bedrock-marketplace-model-endpoint": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}:${Account}:marketplace/model-endpoint/all-access"
    ]
   },
   "blueprint": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}:${Account}:blueprint/.*"
    ]
   },
   "custom-model": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}:${Account}:custom-model/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "data-automation-invocation-job": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}:${Account}:data-automation-invocation/.*"
    ]
   },
   "data-automation-profile": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}:${Account}:data-automation-profile/.*"
    ]
   },
   "data-automation-project": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}:${Account}:data-automation-project/.*"
    ]
   },
   "default-prompt-router": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}:${Account}:default-prompt-router/.*"
    ]
   },
   "evaluation-job": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}:${Account}:evaluation-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "flow": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}:${Account}:flow/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "flow-alias": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}:${Account}:flow/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "foundation-model": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}::foundation-model/.*"
    ]
   },
   "guardrail": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}:${Account}:guardrail/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "imported-model": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}:${Account}:imported-model/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "inference-profile": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}:${Account}:inference-profile/.*"
    ]
   },
   "knowledge-base": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}:${Account}:knowledge-base/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "model-copy-job": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}:${Account}:model-copy-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "model-customization-job": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}:${Account}:model-customization-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "model-evaluation-job": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}:${Account}:model-evaluation-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "model-import-job": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}:${Account}:model-import-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "model-invocation-job": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}:${Account}:model-invocation-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "prompt": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}:${Account}:prompt/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "prompt-router": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}:${Account}:prompt-router/.*"
    ]
   },
   "prompt-version": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "provisioned-model": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}:${Account}:provisioned-model/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "session": {
    "ARNFormats": [
     "arn:${Partition}:bedrock:${Region}:${Account}:session/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "billing": {
  "Actions": {
   "createbillingview": {
    "Resources": [
     "billingview"
    ]
   },
   "deletebillingview": {
    "Resources": [
     "billingview"
    ]
   },
   "deleteresourcepolicy": {
    "Resources": [
     "billingview"
    ]
   },
   "getbillingdata": {},
   "getbillingdetails": {},
   "getbillingnotifications": {},
   "getbillingpreferences": {},
   "getbillingview": {
    "Resources": [
     "billingview"
    ]
   },
   "getcontractinformation": {},
   "getcredits": {},
   "getiamaccesspreference": {},
   "getresourcepolicy": {
    "Resources": [
     "billingview"
    ]
   },
   "getsellerofrecord": {},
   "listbillingviews": {},
   "listsourceviewsforbillingview": {
    "Resources": [
     "billingview"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "billingview"
    ]
   },
   "putcontractinformation": {},
   "putresourcepolicy": {
    "Resources": [
     "billingview"
    ]
   },
   "redeemcredits": {},
   "tagresource": {
    "Resources": [
     "billingview"
    ]
   },
   "untagresource": {
    "Resources": [
     "billingview"
    ]
   },
   "updatebillingpreferences": {},
   "updatebillingview": {
    "Resources": [
     "billingview"
    ]
   },
   "updateiamaccesspreference": {}
  },
  "Resources": {
   "billingview": {
    "ARNFormats": [
     "arn:${Partition}:billing::${Account}:billingview/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "billingconductor": {
  "Actions": {
   "associateaccounts": {
    "Resources": [
     "billinggroup"
    ]
   },
   "associatepricingrules": {
    "Resources": [
     "pricingplan",
     "pricingrule"
    ]
   },
   "batchassociateresourcestocustomlineitem": {
    "Resources": [
     "customlineitem"
    ]
   },
   "batchdisassociateresourcesfromcustomlineitem": {
    "Resources": [
     "customlineitem"
    ]
   },
   "createbillinggroup": {
    "Resources": [
     "pricingplan"
    ]
   },
   "createcustomlineitem": {
    "Resources": [
     "billinggroup"
    ]
   },
   "createpricingplan": {
    "Resources": [
     "pricingrule"
    ]
   },
   "createpricingrule": {},
   "deletebillinggroup": {
    "Resources": [
     "billinggroup"
    ]
   },
   "deletecustomlineitem": {
    "Resources": [
     "customlineitem"
    ]
   },
   "deletepricingplan": {
    "Resources": [
     "pricingplan"
    ]
   },
   "deletepricingrule": {
    "Resources": [
     "pricingrule"
    ]
   },
   "disassociateaccounts": {
    "Resources": [
     "billinggroup"
    ]
   },
   "disassociatepricingrules": {
    "Resources": [
     "pricingplan",
     "pricingrule"
    ]
   },
   "getbillinggroupcostreport": {
    "Resources": [
     "billinggroup"
    ]
   },
   "listaccountassociations": {},
   "listbillinggroupcostreports": {},
   "listbillinggroups": {},
   "listcustomlineitems": {},
   "listcustomlineitemversions": {
    "Resources": [
     "customlineitem"
    ]
   },
   "listpricingplans": {},
   "listpricingplansassociatedwithpricingrule": {
    "Resources": [
     "pricingrule"
    ]
   },
   "listpricingrules": {},
   "listpricingrulesassociatedtopricingplan": {
    "Resources": [
     "pricingplan"
    ]
   },
   "listresourcesassociatedtocustomlineitem": {
    "Resources": [
     "customlineitem"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "billinggroup",
     "customlineitem",
     "pricingplan",
     "pricingrule"
    ]
   },
   "tagresource": {
    "Resources": [
     "billinggroup",
     "customlineitem",
     "pricingplan",
     "pricingrule"
    ]
   },
   "untagresource": {
    "Resources": [
     "billinggroup",
     "customlineitem",
     "pricingplan",
     "pricingrule"
    ]
   },
   "updatebillinggroup": {
    "Resources": [
     "billinggroup"
    ]
   },
   "updatecustomlineitem": {
    "Resources": [
     "customlineitem"
    ]
   },
   "updatepricingplan": {
    "Resources": [
     "pricingplan"
    ]
   },
   "updatepricingrule": {
    "Resources": [
     "pricingrule"
    ]
   }
  },
  "Resources": {
   "billinggroup": {
    "ARNFormats": [
     "arn:${Partition}:billingconductor::${Account}:billinggroup/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "customlineitem": {
    "ARNFormats": [
     "arn:${Partition}:billingconductor::${Account}:customlineitem/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "pricingplan": {
    "ARNFormats": [
     "arn:${Partition}:billingconductor::${Account}:pricingplan/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "pricingrule": {
    "ARNFormats": [
     "arn:${Partition}:billingconductor::${Account}:pricingrule/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "braket": {
  "Actions": {
   "acceptuseragreement": {},
   "accessbraketfeature": {},
   "canceljob": {
    "Resources": [
     "job"
    ]
   },
   "cancelquantumtask": {
    "Resources": [
     "quantum-task"
    ]
   },
   "createjob": {},
   "createquantumtask": {},
   "getdevice": {},
   "getjob": {
    "Resources": [
     "job"
    ]
   },
   "getquantumtask": {
    "Resources": [
     "quantum-task"
    ]
   },
   "getservicelinkedrolestatus": {},
   "getuseragreementstatus": {},
   "listtagsforresource": {
    "Resources": [
     "job",
     "quantum-task"
    ]
   },
   "searchdevices": {},
   "searchjobs": {},
   "searchquantumtasks": {},
   "tagresource": {
    "Resources": [
     "job",
     "quantum-task"
    ]
   },
   "untagresource": {
    "Resources": [
     "job",
     "quantum-task"
    ]
   }
  },
  "Resources": {
   "job": {
    "ARNFormats": [
     "arn:${Partition}:braket:${Region}:${Account}:job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "quantum-task": {
    "ARNFormats": [
     "arn:${Partition}:braket:${Region}:${Account}:quantum-task/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "budgets": {
  "Actions": {
   "createbudgetaction": {
    "Resources": [
     "budgetAction"
    ]
   },
   "deletebudgetaction": {
    "Resources": [
     "budgetAction"
    ]
   },
   "describebudgetaction": {
    "Resources": [
     "budgetAction"
    ]
   },
   "describebudgetactionhistories": {
    "Resources": [
     "budgetAction"
    ]
   },
   "describebudgetactionsforaccount": {},
   "describebudgetactionsforbudget": {
    "Resources": [
     "budget"
    ]
   },
   "executebudgetaction": {
    "Resources": [
     "budgetAction"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "budget",
     "budgetAction"
    ]
   },
   "modifybudget": {
    "Resources": [
     "budget"
    ]
   },
   "tagresource": {
    "Resources": [
     "budget",
     "budgetAction"
    ]
   },
   "untagresource": {
    "Resources": [
     "budget",
     "budgetAction"
    ]
   },
   "updatebudgetaction": {
    "Resources": [
     "budgetAction"
    ]
   },
   "viewbudget": {
    "Resources": [
     "budget"
    ]
   }
  },
  "Resources": {
   "budget": {
    "ARNFormats": [
     "arn:${Partition}:budgets::${Account}:budget/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys"
    ]
   },
   "budgetaction": {
    "ARNFormats": [
     "arn:${Partition}:budgets::${Account}:budget/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys"
    ]
   }
  }
 },
 "bugbust": {
  "Actions": {
   "createevent": {},
   "evaluateprofilinggroups": {
    "Resources": [
     "Event"
    ]
   },
   "getevent": {
    "Resources": [
     "Event"
    ]
   },
   "getjoineventstatus": {
    "Resources": [
     "Event"
    ]
   },
   "joinevent": {
    "Resources": [
     "Event"
    ]
   },
   "listbugs": {
    "Resources": [
     "Event"
    ]
   },
   "listeventparticipants": {
    "Resources": [
     "Event"
    ]
   },
   "listevents": {},
   "listeventscores": {
    "Resources": [
     "Event"
    ]
   },
   "listprofilinggroups": {
    "Resources": [
     "Event"
    ]
   },
   "listpullrequests": {
    "Resources": [
     "Event"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "Event"
    ]
   },
   "tagresource": {
    "Resources": [
     "Event"
    ]
   },
   "untagresource": {
    "Resources": [
     "Event"
    ]
   },
   "updateevent": {
    "Resources": [
     "Event"
    ]
   },
   "updateworkitem": {
    "Resources": [
     "Event"
    ]
   },
   "updateworkitemadmin": {
    "Resources": [
     "Event"
    ]
   }
  },
  "Resources": {
   "event": {
    "ARNFormats": [
     "arn:${Partition}:bugbust:${Region}:${Account}:events/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "cases": {
  "Actions": {
   "batchgetcaserule": {
    "Resources": [
     "CaseRule",
     "Domain"
    ]
   },
   "batchgetfield": {
    "Resources": [
     "Domain",
     "Field"
    ]
   },
   "batchputfieldoptions": {
    "Resources": [
     "Domain",
     "Field"
    ]
   },
   "createcase": {
    "Resources": [
     "Case",
     "Domain",
     "Field",
     "Template"
    ]
   },
   "createcaserule": {
    "Resources": [
     "CaseRule",
     "Domain"
    ]
   },
   "createdomain": {},
   "createfield": {
    "Resources": [
     "Domain",
     "Field"
    ]
   },
   "createlayout": {
    "Resources": [
     "Domain",
     "Layout"
    ]
   },
   "createrelateditem": {
    "Resources": [
     "Case",
     "Domain",
     "RelatedItem"
    ]
   },
   "createtemplate": {
    "Resources": [
     "Domain",
     "Layout",
     "Template"
    ]
   },
   "deletecaserule": {
    "Resources": [
     "CaseRule",
     "Domain"
    ]
   },
   "deletedomain": {
    "Resources": [
     "Domain"
    ]
   },
   "deletefield": {
    "Resources": [
     "Domain",
     "Field"
    ]
   },
   "deletelayout": {
    "Resources": [
     "Domain",
     "Layout"
    ]
   },
   "deleterelateditem": {
    "Resources": [
     "Case",
     "Domain",
     "RelatedItem"
    ]
   },
   "deletetemplate": {
    "Resources": [
     "Domain",
     "Template"
    ]
   },
   "getcase": {
    "Resources": [
     "Case",
     "Domain",
     "Field"
    ]
   },
   "getcaseauditevents": {
    "Resources": [
     "Case",
     "Domain"
    ]
   },
   "getcaseeventconfiguration": {
    "Resources": [
     "Domain"
    ]
   },
   "getdomain": {
    "Resources": [
     "Domain"
    ]
   },
   "getlayout": {
    "Resources": [
     "Domain",
     "Layout"
    ]
   },
   "gettemplate": {
    "Resources": [
     "Domain",
     "Template"
    ]
   },
   "listcaserules": {
    "Resources": [
     "Domain"
    ]
   },
   "listcasesforcontact": {
    "Resources": [
     "Domain"
    ]
   },
   "listdomains": {},
   "listfieldoptions": {
    "Resources": [
     "Domain",
     "Field"
    ]
   },
   "listfields": {
    "Resources": [
     "Domain"
    ]
   },
   "listlayouts": {
    "Resources": [
     "Domain"
    ]
   },
   "listtagsforresource": {},
   "listtemplates": {
    "Resources": [
     "Domain"
    ]
   },
   "putcaseeventconfiguration": {
    "Resources": [
     "Domain"
    ]
   },
   "searchcases": {
    "Resources": [
     "Domain"
    ]
   },
   "searchrelateditems": {
    "Resources": [
     "Case",
     "Domain"
    ]
   },
   "tagresource": {
    "Resources": [
     "Case",
     "CaseRule",
     "Domain",
     "Field",
     "Layout",
     "RelatedItem",
     "Template"
    ]
   },
   "untagresource": {
    "Resources": [
     "Case",
     "CaseRule",
     "Domain",
     "Field",
     "Layout",
     "RelatedItem",
     "Template"
    ]
   },
   "updatecase": {
    "Resources": [
     "Case",
     "Domain",
     "Field"
    ]
   },
   "updatecaserule": {
    "Resources": [
     "CaseRule",
     "Domain"
    ]
   },
   "updatefield": {
    "Resources": [
     "Domain",
     "Field"
    ]
   },
   "updatelayout": {
    "Resources": [
     "Domain",
     "Layout"
    ]
   },
   "updatetemplate": {
    "Resources": [
     "Domain",
     "Template"
    ]
   }
  },
  "Resources": {
   "case": {
    "ARNFormats": [
     "arn:${Partition}:cases:${Region}:${Account}:domain/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "caserule": {
    "ARNFormats": [
     "arn:${Partition}:cases:${Region}:${Account}:domain/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "domain": {
    "ARNFormats": [
     "arn:${Partition}:cases:${Region}:${Account}:domain/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "field": {
    "ARNFormats": [
     "arn:${Partition}:cases:${Region}:${Account}:domain/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "layout": {
    "ARNFormats": [
     "arn:${Partition}:cases:${Region}:${Account}:domain/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "relateditem": {
    "ARNFormats": [
     "arn:${Partition}:cases:${Region}:${Account}:domain/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "template": {
    "ARNFormats": [
     "arn:${Partition}:cases:${Region}:${Account}:domain/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "cassandra": {
  "Actions": {
   "alter": {
    "Resources": [
     "keyspace",
     "table"
    ]
   },
   "altermultiregionresource": {
    "Resources": [
     "keyspace",
     "table"
    ]
   },
   "create": {
    "Resources": [
     "keyspace",
     "table"
    ]
   },
   "createmultiregionresource": {
    "Resources": [
     "keyspace",
     "table"
    ]
   },
   "drop": {
    "Resources": [
     "keyspace",
     "table"
    ]
   },
   "dropmultiregionresource": {
    "Resources": [
     "keyspace",
     "table"
    ]
   },
   "modify": {
    "Resources": [
     "table"
    ]
   },
   "modifymultiregionresource": {
    "Resources": [
     "table"
    ]
   },
   "restore": {
    "Resources": [
     "table"
    ]
   },
   "restoremultiregiontable": {
    "Resources": [
     "table"
    ]
   },
   "select": {
    "Resources": [
     "table"
    ]
   },
   "selectmultiregionresource": {
    "Resources": [
     "table"
    ]
   },
   "tagmultiregionresource": {
    "Resources": [
     "keyspace",
     "table"
    ]
   },
   "tagresource": {
    "Resources": [
     "keyspace",
     "table"
    ]
   },
   "untagmultiregionresource": {
    "Resources": [
     "keyspace",
     "table"
    ]
   },
   "untagresource": {
    "Resources": [
     "keyspace",
     "table"
    ]
   },
   "updatepartitioner": {
    "Resources": [
     "table"
    ]
   }
  },
  "Resources": {
   "keyspace": {
    "ARNFormats": [
     "arn:${Partition}:cassandra:${Region}:${Account}:/keyspace/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "table": {
    "ARNFormats": [
     "arn:${Partition}:cassandra:${Region}:${Account}:/keyspace/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "ce": {
  "Actions": {
   "createanomalymonitor": {},
   "createanomalysubscription": {},
   "createcostcategorydefinition": {},
   "createnotificationsubscription": {},
   "createreport": {},
   "deleteanomalymonitor": {
    "Resources": [
     "anomalymonitor"
    ]
   },
   "deleteanomalysubscription": {
    "Resources": [
     "anomalysubscription"
    ]
   },
   "deletecostcategorydefinition": {
    "Resources": [
     "costcategory"
    ]
   },
   "deletenotificationsubscription": {},
   "deletereport": {},
   "describecostcategorydefinition": {
    "Resources": [
     "costcategory"
    ]
   },
   "describenotificationsubscription": {},
   "describereport": {},
   "getanomalies": {
    "Resources": [
     "anomalymonitor"
    ]
   },
   "getanomalymonitors": {
    "Resources": [
     "anomalymonitor"
    ]
   },
   "getanomalysubscriptions": {
    "Resources": [
     "anomalysubscription"
    ]
   },
   "getapproximateusagerecords": {},
   "getcommitmentpurchaseanalysis": {},
   "getconsoleactionsetenforced": {},
   "getcostandusage": {
    "Resources": [
     "billingview"
    ]
   },
   "getcostandusagewithresources": {
    "Resources": [
     "billingview"
    ]
   },
   "getcostcategories": {
    "Resources": [
     "billingview"
    ]
   },
   "getcostforecast": {
    "Resources": [
     "billingview"
    ]
   },
   "getdimensionvalues": {
    "Resources": [
     "billingview"
    ]
   },
   "getpreferences": {},
   "getreservationcoverage": {},
   "getreservationpurchaserecommendation": {},
   "getreservationutilization": {},
   "getrightsizingrecommendation": {},
   "getsavingsplanpurchaserecommendationdetails": {},
   "getsavingsplanscoverage": {},
   "getsavingsplanspurchaserecommendation": {},
   "getsavingsplansutilization": {},
   "getsavingsplansutilizationdetails": {},
   "gettags": {
    "Resources": [
     "billingview"
    ]
   },
   "getusageforecast": {
    "Resources": [
     "billingview"
    ]
   },
   "listcommitmentpurchaseanalyses": {},
   "listcostallocationtagbackfillhistory": {},
   "listcostallocationtags": {},
   "listcostcategorydefinitions": {},
   "listsavingsplanspurchaserecommendationgeneration": {},
   "listtagsforresource": {
    "Resources": [
     "anomalymonitor",
     "anomalysubscription",
     "costcategory"
    ]
   },
   "provideanomalyfeedback": {},
   "startcommitmentpurchaseanalysis": {},
   "startcostallocationtagbackfill": {},
   "startsavingsplanspurchaserecommendationgeneration": {},
   "tagresource": {
    "Resources": [
     "anomalymonitor",
     "anomalysubscription",
     "costcategory"
    ]
   },
   "untagresource": {
    "Resources": [
     "anomalymonitor",
     "anomalysubscription",
     "costcategory"
    ]
   },
   "updateanomalymonitor": {
    "Resources": [
     "anomalymonitor"
    ]
   },
   "updateanomalysubscription": {
    "Resources": [
     "anomalysubscription"
    ]
   },
   "updateconsoleactionsetenforced": {},
   "updatecostallocationtagsstatus": {},
   "updatecostcategorydefinition": {
    "Resources": [
     "costcategory"
    ]
   },
   "updatenotificationsubscription": {},
   "updatepreferences": {},
   "updatereport": {}
  },
  "Resources": {
   "anomalymonitor": {
    "ARNFormats": [
     "arn:${Partition}:ce::${Account}:anomalymonitor/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "anomalysubscription": {
    "ARNFormats": [
     "arn:${Partition}:ce::${Account}:anomalysubscription/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "billingview": {
    "ARNFormats": [
     "arn:${Partition}:billing::${Account}:billingview/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "costcategory": {
    "ARNFormats": [
     "arn:${Partition}:ce::${Account}:costcategory/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "chatbot": {
  "Actions": {
   "associatetoconfiguration": {
    "Resources": [
     "ChatbotConfiguration",
     "custom-action"
    ]
   },
   "createchimewebhookconfiguration": {},
   "createcustomaction": {},
   "createmicrosoftteamschannelconfiguration": {},
   "createslackchannelconfiguration": {},
   "deletechimewebhookconfiguration": {
    "Resources": [
     "ChatbotConfiguration"
    ]
   },
   "deletecustomaction": {
    "Resources": [
     "custom-action"
    ]
   },
   "deletemicrosoftteamschannelconfiguration": {
    "Resources": [
     "ChatbotConfiguration"
    ]
   },
   "deletemicrosoftteamsconfiguredteam": {},
   "deletemicrosoftteamsuseridentity": {},
   "deleteslackchannelconfiguration": {
    "Resources": [
     "ChatbotConfiguration"
    ]
   },
   "deleteslackuseridentity": {},
   "deleteslackworkspaceauthorization": {},
   "describechimewebhookconfigurations": {},
   "describeslackchannelconfigurations": {},
   "describeslackchannels": {},
   "describeslackuseridentities": {},
   "describeslackworkspaces": {},
   "disassociatefromconfiguration": {
    "Resources": [
     "ChatbotConfiguration",
     "custom-action"
    ]
   },
   "getaccountpreferences": {},
   "getcustomaction": {
    "Resources": [
     "custom-action"
    ]
   },
   "getmicrosoftteamschannelconfiguration": {},
   "getmicrosoftteamsoauthparameters": {},
   "getslackoauthparameters": {},
   "listassociations": {
    "Resources": [
     "ChatbotConfiguration"
    ]
   },
   "listcustomactions": {},
   "listmicrosoftteamschannelconfigurations": {},
   "listmicrosoftteamsconfiguredteams": {},
   "listmicrosoftteamsuseridentities": {},
   "listtagsforresource": {},
   "redeemmicrosoftteamsoauthcode": {},
   "redeemslackoauthcode": {},
   "tagresource": {},
   "untagresource": {},
   "updateaccountpreferences": {},
   "updatechimewebhookconfiguration": {
    "Resources": [
     "ChatbotConfiguration"
    ]
   },
   "updatecustomaction": {
    "Resources": [
     "custom-action"
    ]
   },
   "updatemicrosoftteamschannelconfiguration": {
    "Resources": [
     "ChatbotConfiguration"
    ]
   },
   "updateslackchannelconfiguration": {
    "Resources": [
     "ChatbotConfiguration"
    ]
   }
  },
  "Resources": {
   "chatbotconfiguration": {
    "ARNFormats": [
     "arn:${Partition}:chatbot::${Account}:chat-configuration/.*"
    ]
   },
   "custom-action": {
    "ARNFormats": [
     "arn:${Partition}:chatbot::${Account}:custom-action/.*"
    ]
   }
  }
 },
 "chime": {
  "Actions": {
   "acceptdelegate": {},
   "activateusers": {},
   "adddomain": {},
   "addorupdategroups": {},
   "associatechannelflow": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel",
     "channel-flow"
    ]
   },
   "associatephonenumberswithvoiceconnector": {
    "Resources": [
     "voice-connector"
    ]
   },
   "associatephonenumberswithvoiceconnectorgroup": {},
   "associatephonenumberwithuser": {},
   "associatesignindelegategroupswithaccount": {},
   "associatevoiceconnectorconnect": {},
   "authorizedirectory": {},
   "batchcreateattendee": {
    "Resources": [
     "meeting"
    ]
   },
   "batchcreatechannelmembership": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "batchcreateroommembership": {},
   "batchdeletephonenumber": {},
   "batchsuspenduser": {},
   "batchunsuspenduser": {},
   "batchupdateattendeecapabilitiesexcept": {
    "Resources": [
     "meeting"
    ]
   },
   "batchupdatephonenumber": {},
   "batchupdateuser": {},
   "channelflowcallback": {
    "Resources": [
     "channel"
    ]
   },
   "connect": {
    "Resources": [
     "app-instance-user"
    ]
   },
   "connectdirectory": {},
   "createaccount": {},
   "createapikey": {},
   "createappinstance": {},
   "createappinstanceadmin": {
    "Resources": [
     "app-instance",
     "app-instance-bot",
     "app-instance-user"
    ]
   },
   "createappinstancebot": {},
   "createappinstanceuser": {},
   "createattendee": {
    "Resources": [
     "meeting"
    ]
   },
   "createbot": {},
   "createcdrbucket": {},
   "createchannel": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user"
    ]
   },
   "createchannelban": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "createchannelflow": {
    "Resources": [
     "app-instance"
    ]
   },
   "createchannelmembership": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "createchannelmoderator": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "createconnectanalyticsconnector": {},
   "createconnectcalltransferconnector": {},
   "createmediacapturepipeline": {},
   "createmediaconcatenationpipeline": {},
   "createmediainsightspipeline": {
    "Resources": [
     "media-insights-pipeline-configuration"
    ]
   },
   "createmediainsightspipelineconfiguration": {},
   "createmedialiveconnectorpipeline": {},
   "createmediapipelinekinesisvideostreampool": {},
   "createmediastreampipeline": {
    "Resources": [
     "media-pipeline-kinesis-video-stream-pool"
    ]
   },
   "createmeeting": {},
   "createmeetingdialout": {
    "Resources": [
     "meeting"
    ]
   },
   "createmeetingwithattendees": {},
   "createphonenumberorder": {},
   "createproxysession": {
    "Resources": [
     "voice-connector"
    ]
   },
   "createroom": {},
   "createroommembership": {},
   "createsipmediaapplication": {},
   "createsipmediaapplicationcall": {
    "Resources": [
     "sip-media-application"
    ]
   },
   "createsiprule": {
    "Resources": [
     "sip-media-application"
    ]
   },
   "createuser": {},
   "createvoiceconnector": {},
   "createvoiceconnectorgroup": {
    "Resources": [
     "voice-connector"
    ]
   },
   "createvoiceprofile": {},
   "createvoiceprofiledomain": {},
   "deleteaccount": {},
   "deleteaccountopenidconfig": {},
   "deleteapikey": {},
   "deleteappinstance": {
    "Resources": [
     "app-instance"
    ]
   },
   "deleteappinstanceadmin": {
    "Resources": [
     "app-instance",
     "app-instance-bot",
     "app-instance-user"
    ]
   },
   "deleteappinstancebot": {
    "Resources": [
     "app-instance-bot"
    ]
   },
   "deleteappinstancestreamingconfigurations": {
    "Resources": [
     "app-instance"
    ]
   },
   "deleteappinstanceuser": {
    "Resources": [
     "app-instance-user"
    ]
   },
   "deleteattendee": {
    "Resources": [
     "meeting"
    ]
   },
   "deletecdrbucket": {},
   "deletechannel": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "deletechannelban": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "deletechannelflow": {
    "Resources": [
     "channel"
    ]
   },
   "deletechannelmembership": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "deletechannelmessage": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "deletechannelmoderator": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "deletedelegate": {},
   "deletedomain": {},
   "deleteeventsconfiguration": {},
   "deletegroups": {},
   "deletemediacapturepipeline": {
    "Resources": [
     "media-pipeline"
    ]
   },
   "deletemediainsightspipelineconfiguration": {
    "Resources": [
     "media-insights-pipeline-configuration"
    ]
   },
   "deletemediapipeline": {
    "Resources": [
     "media-pipeline"
    ]
   },
   "deletemediapipelinekinesisvideostreampool": {
    "Resources": [
     "media-pipeline-kinesis-video-stream-pool"
    ]
   },
   "deletemeeting": {
    "Resources": [
     "meeting"
    ]
   },
   "deletemessagingstreamingconfigurations": {
    "Resources": [
     "app-instance"
    ]
   },
   "deletephonenumber": {},
   "deleteproxysession": {
    "Resources": [
     "voice-connector"
    ]
   },
   "deleteroom": {},
   "deleteroommembership": {},
   "deletesipmediaapplication": {
    "Resources": [
     "sip-media-application"
    ]
   },
   "deletesiprule": {},
   "deletevoiceconnector": {
    "Resources": [
     "voice-connector"
    ]
   },
   "deletevoiceconnectoremergencycallingconfiguration": {
    "Resources": [
     "voice-connector"
    ]
   },
   "deletevoiceconnectorexternalsystemsconfiguration": {
    "Resources": [
     "voice-connector"
    ]
   },
   "deletevoiceconnectorgroup": {},
   "deletevoiceconnectororigination": {
    "Resources": [
     "voice-connector"
    ]
   },
   "deletevoiceconnectorproxy": {
    "Resources": [
     "voice-connector"
    ]
   },
   "deletevoiceconnectorstreamingconfiguration": {
    "Resources": [
     "voice-connector"
    ]
   },
   "deletevoiceconnectortermination": {
    "Resources": [
     "voice-connector"
    ]
   },
   "deletevoiceconnectorterminationcredentials": {
    "Resources": [
     "voice-connector"
    ]
   },
   "deletevoiceprofile": {
    "Resources": [
     "voice-profile"
    ]
   },
   "deletevoiceprofiledomain": {
    "Resources": [
     "voice-profile-domain"
    ]
   },
   "deregisterappinstanceuserendpoint": {
    "Resources": [
     "app-instance-user"
    ]
   },
   "describeappinstance": {
    "Resources": [
     "app-instance"
    ]
   },
   "describeappinstanceadmin": {
    "Resources": [
     "app-instance",
     "app-instance-bot",
     "app-instance-user"
    ]
   },
   "describeappinstancebot": {
    "Resources": [
     "app-instance-bot"
    ]
   },
   "describeappinstanceuser": {
    "Resources": [
     "app-instance-user"
    ]
   },
   "describeappinstanceuserendpoint": {
    "Resources": [
     "app-instance-user"
    ]
   },
   "describechannel": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "describechannelban": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "describechannelflow": {
    "Resources": [
     "channel-flow"
    ]
   },
   "describechannelmembership": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "describechannelmembershipforappinstanceuser": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "describechannelmoderatedbyappinstanceuser": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "describechannelmoderator": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "disassociatechannelflow": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel",
     "channel-flow"
    ]
   },
   "disassociatephonenumberfromuser": {},
   "disassociatephonenumbersfromvoiceconnector": {
    "Resources": [
     "voice-connector"
    ]
   },
   "disassociatephonenumbersfromvoiceconnectorgroup": {},
   "disassociatesignindelegategroupsfromaccount": {},
   "disassociatevoiceconnectorconnect": {},
   "disconnectdirectory": {},
   "getaccount": {},
   "getaccountresource": {},
   "getaccountsettings": {},
   "getaccountwithopenidconfig": {},
   "getappinstanceretentionsettings": {
    "Resources": [
     "app-instance"
    ]
   },
   "getappinstancestreamingconfigurations": {
    "Resources": [
     "app-instance"
    ]
   },
   "getattendee": {
    "Resources": [
     "meeting"
    ]
   },
   "getbot": {},
   "getcdrbucket": {},
   "getchannelmembershippreferences": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "getchannelmessage": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "getchannelmessagestatus": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "getdomain": {},
   "geteventsconfiguration": {},
   "getglobalsettings": {},
   "getmediacapturepipeline": {
    "Resources": [
     "media-pipeline"
    ]
   },
   "getmediainsightspipelineconfiguration": {
    "Resources": [
     "media-insights-pipeline-configuration"
    ]
   },
   "getmediapipeline": {
    "Resources": [
     "media-pipeline"
    ]
   },
   "getmediapipelinekinesisvideostreampool": {
    "Resources": [
     "media-pipeline-kinesis-video-stream-pool"
    ]
   },
   "getmeeting": {
    "Resources": [
     "meeting"
    ]
   },
   "getmeetingdetail": {},
   "getmessagingsessionendpoint": {},
   "getmessagingstreamingconfigurations": {
    "Resources": [
     "app-instance"
    ]
   },
   "getphonenumber": {},
   "getphonenumberorder": {},
   "getphonenumbersettings": {},
   "getproxysession": {
    "Resources": [
     "voice-connector"
    ]
   },
   "getretentionsettings": {},
   "getroom": {},
   "getsipmediaapplication": {
    "Resources": [
     "sip-media-application"
    ]
   },
   "getsipmediaapplicationalexaskillconfiguration": {
    "Resources": [
     "sip-media-application"
    ]
   },
   "getsipmediaapplicationloggingconfiguration": {
    "Resources": [
     "sip-media-application"
    ]
   },
   "getsiprule": {},
   "getspeakersearchtask": {
    "Resources": [
     "media-pipeline",
     "voice-connector"
    ]
   },
   "gettelephonylimits": {},
   "getuser": {},
   "getuseractivityreportdata": {},
   "getuserbyemail": {},
   "getusersettings": {},
   "getvoiceconnector": {
    "Resources": [
     "voice-connector"
    ]
   },
   "getvoiceconnectoremergencycallingconfiguration": {
    "Resources": [
     "voice-connector"
    ]
   },
   "getvoiceconnectorexternalsystemsconfiguration": {
    "Resources": [
     "voice-connector"
    ]
   },
   "getvoiceconnectorgroup": {},
   "getvoiceconnectorloggingconfiguration": {
    "Resources": [
     "voice-connector"
    ]
   },
   "getvoiceconnectororigination": {
    "Resources": [
     "voice-connector"
    ]
   },
   "getvoiceconnectorproxy": {
    "Resources": [
     "voice-connector"
    ]
   },
   "getvoiceconnectorstreamingconfiguration": {
    "Resources": [
     "voice-connector"
    ]
   },
   "getvoiceconnectortermination": {
    "Resources": [
     "voice-connector"
    ]
   },
   "getvoiceconnectorterminationhealth": {
    "Resources": [
     "voice-connector"
    ]
   },
   "getvoiceprofile": {
    "Resources": [
     "voice-profile"
    ]
   },
   "getvoiceprofiledomain": {
    "Resources": [
     "voice-profile-domain"
    ]
   },
   "getvoicetoneanalysistask": {
    "Resources": [
     "media-pipeline",
     "voice-connector"
    ]
   },
   "invitedelegate": {},
   "inviteusers": {},
   "inviteusersfromprovider": {},
   "listaccounts": {},
   "listaccountusagereportdata": {},
   "listapikeys": {},
   "listappinstanceadmins": {
    "Resources": [
     "app-instance",
     "app-instance-bot",
     "app-instance-user"
    ]
   },
   "listappinstancebots": {
    "Resources": [
     "app-instance-bot"
    ]
   },
   "listappinstances": {
    "Resources": [
     "app-instance"
    ]
   },
   "listappinstanceuserendpoints": {
    "Resources": [
     "app-instance-user"
    ]
   },
   "listappinstanceusers": {
    "Resources": [
     "app-instance-user"
    ]
   },
   "listattendees": {
    "Resources": [
     "meeting"
    ]
   },
   "listattendeetags": {
    "Resources": [
     "meeting"
    ]
   },
   "listavailablevoiceconnectorregions": {},
   "listbots": {},
   "listcallingregions": {},
   "listcdrbucket": {},
   "listchannelbans": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "listchannelflows": {
    "Resources": [
     "channel-flow"
    ]
   },
   "listchannelmemberships": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "listchannelmembershipsforappinstanceuser": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user"
    ]
   },
   "listchannelmessages": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "listchannelmoderators": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "listchannels": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user"
    ]
   },
   "listchannelsassociatedwithchannelflow": {
    "Resources": [
     "channel-flow"
    ]
   },
   "listchannelsmoderatedbyappinstanceuser": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user"
    ]
   },
   "listdelegates": {},
   "listdirectories": {},
   "listdomains": {},
   "listgroups": {},
   "listmediacapturepipelines": {},
   "listmediainsightspipelineconfigurations": {},
   "listmediapipelinekinesisvideostreampools": {},
   "listmediapipelines": {},
   "listmeetingevents": {},
   "listmeetings": {},
   "listmeetingsreportdata": {},
   "listmeetingtags": {
    "Resources": [
     "meeting"
    ]
   },
   "listphonenumberorders": {},
   "listphonenumbers": {},
   "listproxysessions": {
    "Resources": [
     "voice-connector"
    ]
   },
   "listroommemberships": {},
   "listrooms": {},
   "listsipmediaapplications": {},
   "listsiprules": {
    "Resources": [
     "sip-media-application"
    ]
   },
   "listsubchannels": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "listsupportedphonenumbercountries": {},
   "listtagsforresource": {
    "Resources": [
     "app-instance",
     "app-instance-bot",
     "app-instance-user",
     "channel",
     "channel-flow",
     "media-insights-pipeline-configuration",
     "media-pipeline",
     "media-pipeline-kinesis-video-stream-pool",
     "meeting",
     "sip-media-application",
     "voice-connector",
     "voice-profile-domain"
    ]
   },
   "listusers": {},
   "listvoiceconnectorgroups": {},
   "listvoiceconnectors": {},
   "listvoiceconnectorterminationcredentials": {
    "Resources": [
     "voice-connector"
    ]
   },
   "listvoiceprofiledomains": {},
   "listvoiceprofiles": {
    "Resources": [
     "voice-profile-domain"
    ]
   },
   "logoutuser": {},
   "putappinstanceretentionsettings": {
    "Resources": [
     "app-instance"
    ]
   },
   "putappinstancestreamingconfigurations": {
    "Resources": [
     "app-instance"
    ]
   },
   "putappinstanceuserexpirationsettings": {
    "Resources": [
     "app-instance-user"
    ]
   },
   "putchannelexpirationsettings": {
    "Resources": [
     "app-instance-user",
     "channel"
    ]
   },
   "putchannelmembershippreferences": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "puteventsconfiguration": {},
   "putmessagingstreamingconfigurations": {
    "Resources": [
     "app-instance"
    ]
   },
   "putretentionsettings": {},
   "putsipmediaapplicationalexaskillconfiguration": {
    "Resources": [
     "sip-media-application"
    ]
   },
   "putsipmediaapplicationloggingconfiguration": {
    "Resources": [
     "sip-media-application"
    ]
   },
   "putvoiceconnectoremergencycallingconfiguration": {
    "Resources": [
     "voice-connector"
    ]
   },
   "putvoiceconnectorexternalsystemsconfiguration": {
    "Resources": [
     "voice-connector"
    ]
   },
   "putvoiceconnectorloggingconfiguration": {
    "Resources": [
     "voice-connector"
    ]
   },
   "putvoiceconnectororigination": {
    "Resources": [
     "voice-connector"
    ]
   },
   "putvoiceconnectorproxy": {
    "Resources": [
     "voice-connector"
    ]
   },
   "putvoiceconnectorstreamingconfiguration": {
    "Resources": [
     "media-insights-pipeline-configuration",
     "voice-connector"
    ]
   },
   "putvoiceconnectortermination": {
    "Resources": [
     "voice-connector"
    ]
   },
   "putvoiceconnectorterminationcredentials": {
    "Resources": [
     "voice-connector"
    ]
   },
   "redactchannelmessage": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "redactconversationmessage": {},
   "redactroommessage": {},
   "regeneratesecuritytoken": {},
   "registerappinstanceuserendpoint": {
    "Resources": [
     "app-instance-user"
    ]
   },
   "renameaccount": {},
   "renewdelegate": {},
   "resetaccountresource": {},
   "resetpersonalpin": {},
   "restorephonenumber": {},
   "retrievedataexports": {},
   "searchavailablephonenumbers": {},
   "searchchannels": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user"
    ]
   },
   "sendchannelmessage": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "startdataexport": {},
   "startmeetingtranscription": {},
   "startspeakersearchtask": {
    "Resources": [
     "media-pipeline",
     "voice-connector"
    ]
   },
   "startvoicetoneanalysistask": {
    "Resources": [
     "media-pipeline",
     "voice-connector"
    ]
   },
   "stopmeetingtranscription": {},
   "stopspeakersearchtask": {
    "Resources": [
     "media-pipeline",
     "voice-connector"
    ]
   },
   "stopvoicetoneanalysistask": {
    "Resources": [
     "media-pipeline",
     "voice-connector"
    ]
   },
   "submitsupportrequest": {},
   "suspendusers": {},
   "tagattendee": {
    "Resources": [
     "meeting"
    ]
   },
   "tagmeeting": {
    "Resources": [
     "meeting"
    ]
   },
   "tagresource": {
    "Resources": [
     "app-instance",
     "app-instance-bot",
     "app-instance-user",
     "channel",
     "channel-flow",
     "media-insights-pipeline-configuration",
     "media-pipeline",
     "media-pipeline-kinesis-video-stream-pool",
     "meeting",
     "sip-media-application",
     "voice-connector",
     "voice-profile-domain"
    ]
   },
   "unauthorizedirectory": {},
   "untagattendee": {
    "Resources": [
     "meeting"
    ]
   },
   "untagmeeting": {
    "Resources": [
     "meeting"
    ]
   },
   "untagresource": {
    "Resources": [
     "app-instance",
     "app-instance-bot",
     "app-instance-user",
     "channel",
     "channel-flow",
     "media-insights-pipeline-configuration",
     "media-pipeline",
     "media-pipeline-kinesis-video-stream-pool",
     "meeting",
     "sip-media-application",
     "voice-connector",
     "voice-profile-domain"
    ]
   },
   "updateaccount": {},
   "updateaccountopenidconfig": {},
   "updateaccountresource": {},
   "updateaccountsettings": {},
   "updateappinstance": {
    "Resources": [
     "app-instance"
    ]
   },
   "updateappinstancebot": {
    "Resources": [
     "app-instance-bot"
    ]
   },
   "updateappinstanceuser": {
    "Resources": [
     "app-instance-user"
    ]
   },
   "updateappinstanceuserendpoint": {
    "Resources": [
     "app-instance-user"
    ]
   },
   "updateattendeecapabilities": {
    "Resources": [
     "meeting"
    ]
   },
   "updatebot": {},
   "updatecdrsettings": {},
   "updatechannel": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "updatechannelflow": {
    "Resources": [
     "channel-flow"
    ]
   },
   "updatechannelmessage": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "updatechannelreadmarker": {
    "Resources": [
     "app-instance-bot",
     "app-instance-user",
     "channel"
    ]
   },
   "updateglobalsettings": {},
   "updatemediainsightspipelineconfiguration": {
    "Resources": [
     "media-insights-pipeline-configuration"
    ]
   },
   "updatemediainsightspipelinestatus": {
    "Resources": [
     "media-pipeline"
    ]
   },
   "updatemediapipelinekinesisvideostreampool": {
    "Resources": [
     "media-pipeline-kinesis-video-stream-pool"
    ]
   },
   "updatephonenumber": {},
   "updatephonenumbersettings": {},
   "updateproxysession": {
    "Resources": [
     "voice-connector"
    ]
   },
   "updateroom": {},
   "updateroommembership": {},
   "updatesipmediaapplication": {
    "Resources": [
     "sip-media-application"
    ]
   },
   "updatesipmediaapplicationcall": {
    "Resources": [
     "sip-media-application"
    ]
   },
   "updatesiprule": {
    "Resources": [
     "sip-media-application"
    ]
   },
   "updatesupportedlicenses": {},
   "updateuser": {},
   "updateuserlicenses": {},
   "updateusersettings": {},
   "updatevoiceconnector": {
    "Resources": [
     "voice-connector"
    ]
   },
   "updatevoiceconnectorgroup": {
    "Resources": [
     "voice-connector"
    ]
   },
   "updatevoiceprofile": {
    "Resources": [
     "voice-profile"
    ]
   },
   "updatevoiceprofiledomain": {
    "Resources": [
     "voice-profile-domain"
    ]
   },
   "validateaccountresource": {},
   "validatee911address": {}
  },
  "Resources": {
   "app-instance": {
    "ARNFormats": [
     "arn:${Partition}:chime:${Region}:${AccountId}:app-instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "app-instance-bot": {
    "ARNFormats": [
     "arn:${Partition}:chime:${Region}:${AccountId}:app-instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "app-instance-user": {
    "ARNFormats": [
     "arn:${Partition}:chime:${Region}:${AccountId}:app-instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "channel": {
    "ARNFormats": [
     "arn:${Partition}:chime:${Region}:${AccountId}:app-instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "channel-flow": {
    "ARNFormats": [
     "arn:${Partition}:chime:${Region}:${AccountId}:app-instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "media-insights-pipeline-configuration": {
    "ARNFormats": [
     "arn:${Partition}:chime:${Region}:${AccountId}:media-insights-pipeline-configuration/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "media-pipeline": {
    "ARNFormats": [
     "arn:${Partition}:chime:${Region}:${AccountId}:media-pipeline/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "media-pipeline-kinesis-video-stream-pool": {
    "ARNFormats": [
     "arn:${Partition}:chime:${Region}:${AccountId}:media-pipeline-kinesis-video-stream-pool/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "meeting": {
    "ARNFormats": [
     "arn:${Partition}:chime::${AccountId}:meeting/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "sip-media-application": {
    "ARNFormats": [
     "arn:${Partition}:chime:${Region}:${AccountId}:sma/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "voice-connector": {
    "ARNFormats": [
     "arn:${Partition}:chime:${Region}:${AccountId}:vc/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "voice-profile": {
    "ARNFormats": [
     "arn:${Partition}:chime:${Region}:${AccountId}:voice-profile/.*"
    ]
   },
   "voice-profile-domain": {
    "ARNFormats": [
     "arn:${Partition}:chime:${Region}:${AccountId}:voice-profile-domain/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "cleanrooms": {
  "Actions": {
   "batchgetcollaborationanalysistemplate": {
    "Resources": [
     "analysistemplate",
     "collaboration"
    ]
   },
   "batchgetschema": {
    "Resources": [
     "collaboration",
     "configuredtableassociation",
     "idmappingtable"
    ]
   },
   "batchgetschemaanalysisrule": {
    "Resources": [
     "collaboration",
     "configuredtableassociation",
     "idmappingtable"
    ]
   },
   "createanalysistemplate": {
    "Resources": [
     "analysistemplate",
     "membership"
    ]
   },
   "createcollaboration": {
    "Resources": [
     "collaboration"
    ]
   },
   "createconfiguredaudiencemodelassociation": {
    "Resources": [
     "configuredaudiencemodelassociation",
     "membership"
    ]
   },
   "createconfiguredtable": {
    "Resources": [
     "configuredtable"
    ]
   },
   "createconfiguredtableanalysisrule": {
    "Resources": [
     "configuredtable"
    ]
   },
   "createconfiguredtableassociation": {
    "Resources": [
     "configuredtable",
     "configuredtableassociation",
     "membership"
    ]
   },
   "createconfiguredtableassociationanalysisrule": {
    "Resources": [
     "configuredtableassociation"
    ]
   },
   "createidmappingtable": {
    "Resources": [
     "idmappingtable",
     "membership"
    ]
   },
   "createidnamespaceassociation": {
    "Resources": [
     "idnamespaceassociation",
     "membership"
    ]
   },
   "createmembership": {
    "Resources": [
     "collaboration",
     "membership"
    ]
   },
   "createprivacybudgettemplate": {
    "Resources": [
     "membership",
     "privacybudgettemplate"
    ]
   },
   "deleteanalysistemplate": {
    "Resources": [
     "analysistemplate"
    ]
   },
   "deletecollaboration": {
    "Resources": [
     "collaboration"
    ]
   },
   "deleteconfiguredaudiencemodelassociation": {
    "Resources": [
     "configuredaudiencemodelassociation"
    ]
   },
   "deleteconfiguredtable": {
    "Resources": [
     "configuredtable"
    ]
   },
   "deleteconfiguredtableanalysisrule": {
    "Resources": [
     "configuredtable"
    ]
   },
   "deleteconfiguredtableassociation": {
    "Resources": [
     "configuredtableassociation"
    ]
   },
   "deleteconfiguredtableassociationanalysisrule": {
    "Resources": [
     "configuredtableassociation"
    ]
   },
   "deleteidmappingtable": {
    "Resources": [
     "idmappingtable",
     "membership"
    ]
   },
   "deleteidnamespaceassociation": {
    "Resources": [
     "idnamespaceassociation",
     "membership"
    ]
   },
   "deletemember": {
    "Resources": [
     "collaboration"
    ]
   },
   "deletemembership": {
    "Resources": [
     "membership"
    ]
   },
   "deleteprivacybudgettemplate": {
    "Resources": [
     "privacybudgettemplate"
    ]
   },
   "getanalysistemplate": {
    "Resources": [
     "analysistemplate"
    ]
   },
   "getcollaboration": {
    "Resources": [
     "collaboration"
    ]
   },
   "getcollaborationanalysistemplate": {
    "Resources": [
     "analysistemplate",
     "collaboration"
    ]
   },
   "getcollaborationconfiguredaudiencemodelassociation": {
    "Resources": [
     "collaboration",
     "configuredaudiencemodelassociation"
    ]
   },
   "getcollaborationidnamespaceassociation": {
    "Resources": [
     "collaboration",
     "idnamespaceassociation"
    ]
   },
   "getcollaborationprivacybudgettemplate": {
    "Resources": [
     "collaboration",
     "privacybudgettemplate"
    ]
   },
   "getconfiguredaudiencemodelassociation": {
    "Resources": [
     "configuredaudiencemodelassociation"
    ]
   },
   "getconfiguredtable": {
    "Resources": [
     "configuredtable"
    ]
   },
   "getconfiguredtableanalysisrule": {
    "Resources": [
     "configuredtable"
    ]
   },
   "getconfiguredtableassociation": {
    "Resources": [
     "configuredtableassociation"
    ]
   },
   "getconfiguredtableassociationanalysisrule": {
    "Resources": [
     "configuredtableassociation"
    ]
   },
   "getidmappingtable": {
    "Resources": [
     "idmappingtable",
     "membership"
    ]
   },
   "getidnamespaceassociation": {
    "Resources": [
     "idnamespaceassociation",
     "membership"
    ]
   },
   "getmembership": {
    "Resources": [
     "membership"
    ]
   },
   "getprivacybudgettemplate": {
    "Resources": [
     "privacybudgettemplate"
    ]
   },
   "getprotectedjob": {
    "Resources": [
     "membership"
    ]
   },
   "getprotectedquery": {
    "Resources": [
     "membership"
    ]
   },
   "getschema": {
    "Resources": [
     "collaboration",
     "configuredtableassociation"
    ]
   },
   "getschemaanalysisrule": {
    "Resources": [
     "collaboration",
     "configuredtableassociation"
    ]
   },
   "listanalysistemplates": {
    "Resources": [
     "analysistemplate",
     "membership"
    ]
   },
   "listcollaborationanalysistemplates": {
    "Resources": [
     "collaboration"
    ]
   },
   "listcollaborationconfiguredaudiencemodelassociations": {
    "Resources": [
     "collaboration"
    ]
   },
   "listcollaborationidnamespaceassociations": {
    "Resources": [
     "collaboration"
    ]
   },
   "listcollaborationprivacybudgets": {
    "Resources": [
     "collaboration"
    ]
   },
   "listcollaborationprivacybudgettemplates": {
    "Resources": [
     "collaboration"
    ]
   },
   "listcollaborations": {},
   "listconfiguredaudiencemodelassociations": {
    "Resources": [
     "configuredaudiencemodelassociation",
     "membership"
    ]
   },
   "listconfiguredtableassociations": {
    "Resources": [
     "configuredtableassociation",
     "membership"
    ]
   },
   "listconfiguredtables": {},
   "listidmappingtables": {
    "Resources": [
     "idmappingtable",
     "membership"
    ]
   },
   "listidnamespaceassociations": {
    "Resources": [
     "idnamespaceassociation",
     "membership"
    ]
   },
   "listmembers": {
    "Resources": [
     "collaboration"
    ]
   },
   "listmemberships": {},
   "listprivacybudgets": {
    "Resources": [
     "membership"
    ]
   },
   "listprivacybudgettemplates": {
    "Resources": [
     "membership",
     "privacybudgettemplate"
    ]
   },
   "listprotectedjobs": {
    "Resources": [
     "membership"
    ]
   },
   "listprotectedqueries": {
    "Resources": [
     "membership"
    ]
   },
   "listschemas": {
    "Resources": [
     "collaboration"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "analysistemplate",
     "collaboration",
     "configuredaudiencemodelassociation",
     "configuredtable",
     "configuredtableassociation",
     "membership",
     "privacybudgettemplate"
    ]
   },
   "passcollaboration": {
    "Resources": [
     "collaboration"
    ]
   },
   "passmembership": {
    "Resources": [
     "membership"
    ]
   },
   "populateidmappingtable": {
    "Resources": [
     "idmappingtable",
     "membership"
    ]
   },
   "previewprivacyimpact": {
    "Resources": [
     "membership"
    ]
   },
   "startprotectedjob": {
    "Resources": [
     "analysistemplate",
     "configuredtableassociation",
     "membership"
    ]
   },
   "startprotectedquery": {
    "Resources": [
     "analysistemplate",
     "configuredtableassociation",
     "idmappingtable",
     "membership"
    ]
   },
   "tagresource": {
    "Resources": [
     "analysistemplate",
     "collaboration",
     "configuredaudiencemodelassociation",
     "configuredtable",
     "configuredtableassociation",
     "idmappingtable",
     "idnamespaceassociation",
     "membership",
     "privacybudgettemplate"
    ]
   },
   "untagresource": {
    "Resources": [
     "analysistemplate",
     "collaboration",
     "configuredaudiencemodelassociation",
     "configuredtable",
     "configuredtableassociation",
     "idmappingtable",
     "idnamespaceassociation",
     "membership",
     "privacybudgettemplate"
    ]
   },
   "updateanalysistemplate": {
    "Resources": [
     "analysistemplate"
    ]
   },
   "updatecollaboration": {
    "Resources": [
     "collaboration"
    ]
   },
   "updateconfiguredaudiencemodelassociation": {
    "Resources": [
     "configuredaudiencemodelassociation"
    ]
   },
   "updateconfiguredtable": {
    "Resources": [
     "configuredtable"
    ]
   },
   "updateconfiguredtableanalysisrule": {
    "Resources": [
     "configuredtable"
    ]
   },
   "updateconfiguredtableassociation": {
    "Resources": [
     "configuredtableassociation"
    ]
   },
   "updateconfiguredtableassociationanalysisrule": {
    "Resources": [
     "configuredtableassociation"
    ]
   },
   "updateidmappingtable": {
    "Resources": [
     "idmappingtable",
     "membership"
    ]
   },
   "updateidnamespaceassociation": {
    "Resources": [
     "idnamespaceassociation",
     "membership"
    ]
   },
   "updatemembership": {
    "Resources": [
     "membership"
    ]
   },
   "updateprivacybudgettemplate": {
    "Resources": [
     "privacybudgettemplate"
    ]
   },
   "updateprotectedjob": {
    "Resources": [
     "membership"
    ]
   },
   "updateprotectedquery": {
    "Resources": [
     "membership"
    ]
   }
  },
  "Resources": {
   "analysistemplate": {
    "ARNFormats": [
     "arn:${Partition}:cleanrooms:${Region}:${Account}:membership/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "collaboration": {
    "ARNFormats": [
     "arn:${Partition}:cleanrooms:${Region}:${Account}:collaboration/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "configuredaudiencemodelassociation": {
    "ARNFormats": [
     "arn:${Partition}:cleanrooms:${Region}:${Account}:membership/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "configuredtable": {
    "ARNFormats": [
     "arn:${Partition}:cleanrooms:${Region}:${Account}:configuredtable/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "configuredtableassociation": {
    "ARNFormats": [
     "arn:${Partition}:cleanrooms:${Region}:${Account}:membership/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "idmappingtable": {
    "ARNFormats": [
     "arn:${Partition}:cleanrooms:${Region}:${Account}:membership/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "idnamespaceassociation": {
    "ARNFormats": [
     "arn:${Partition}:cleanrooms:${Region}:${Account}:membership/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "membership": {
    "ARNFormats": [
     "arn:${Partition}:cleanrooms:${Region}:${Account}:membership/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "privacybudgettemplate": {
    "ARNFormats": [
     "arn:${Partition}:cleanrooms:${Region}:${Account}:membership/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "cleanrooms-ml": {
  "Actions": {
   "canceltrainedmodel": {
    "Resources": [
     "TrainedModel"
    ]
   },
   "canceltrainedmodelinferencejob": {
    "Resources": [
     "TrainedModelInferenceJob"
    ]
   },
   "createaudiencemodel": {
    "Resources": [
     "trainingdataset"
    ]
   },
   "createconfiguredaudiencemodel": {
    "Resources": [
     "audiencemodel"
    ]
   },
   "createconfiguredmodelalgorithm": {},
   "createconfiguredmodelalgorithmassociation": {
    "Resources": [
     "ConfiguredModelAlgorithm"
    ]
   },
   "createmlinputchannel": {
    "Resources": [
     "ConfiguredModelAlgorithmAssociation"
    ]
   },
   "createtrainedmodel": {
    "Resources": [
     "ConfiguredModelAlgorithmAssociation"
    ]
   },
   "createtrainingdataset": {},
   "deleteaudiencegenerationjob": {
    "Resources": [
     "audiencegenerationjob"
    ]
   },
   "deleteaudiencemodel": {
    "Resources": [
     "audiencemodel"
    ]
   },
   "deleteconfiguredaudiencemodel": {
    "Resources": [
     "configuredaudiencemodel"
    ]
   },
   "deleteconfiguredaudiencemodelpolicy": {
    "Resources": [
     "configuredaudiencemodel"
    ]
   },
   "deleteconfiguredmodelalgorithm": {
    "Resources": [
     "ConfiguredModelAlgorithm"
    ]
   },
   "deleteconfiguredmodelalgorithmassociation": {
    "Resources": [
     "ConfiguredModelAlgorithmAssociation"
    ]
   },
   "deletemlconfiguration": {},
   "deletemlinputchanneldata": {
    "Resources": [
     "MLInputChannel"
    ]
   },
   "deletetrainedmodeloutput": {
    "Resources": [
     "TrainedModel"
    ]
   },
   "deletetrainingdataset": {
    "Resources": [
     "trainingdataset"
    ]
   },
   "getaudiencegenerationjob": {
    "Resources": [
     "audiencegenerationjob"
    ]
   },
   "getaudiencemodel": {
    "Resources": [
     "audiencemodel"
    ]
   },
   "getcollaborationconfiguredmodelalgorithmassociation": {
    "Resources": [
     "ConfiguredModelAlgorithmAssociation"
    ]
   },
   "getcollaborationmlinputchannel": {
    "Resources": [
     "MLInputChannel"
    ]
   },
   "getcollaborationtrainedmodel": {
    "Resources": [
     "TrainedModel"
    ]
   },
   "getconfiguredaudiencemodel": {
    "Resources": [
     "configuredaudiencemodel"
    ]
   },
   "getconfiguredaudiencemodelpolicy": {
    "Resources": [
     "configuredaudiencemodel"
    ]
   },
   "getconfiguredmodelalgorithm": {
    "Resources": [
     "ConfiguredModelAlgorithm"
    ]
   },
   "getconfiguredmodelalgorithmassociation": {
    "Resources": [
     "ConfiguredModelAlgorithmAssociation"
    ]
   },
   "getmlconfiguration": {},
   "getmlinputchannel": {
    "Resources": [
     "MLInputChannel"
    ]
   },
   "gettrainedmodel": {
    "Resources": [
     "TrainedModel"
    ]
   },
   "gettrainedmodelinferencejob": {
    "Resources": [
     "TrainedModelInferenceJob"
    ]
   },
   "gettrainingdataset": {
    "Resources": [
     "trainingdataset"
    ]
   },
   "listaudienceexportjobs": {
    "Resources": [
     "audiencegenerationjob"
    ]
   },
   "listaudiencegenerationjobs": {
    "Resources": [
     "configuredaudiencemodel"
    ]
   },
   "listaudiencemodels": {},
   "listcollaborationconfiguredmodelalgorithmassociations": {},
   "listcollaborationmlinputchannels": {},
   "listcollaborationtrainedmodelexportjobs": {
    "Resources": [
     "TrainedModel"
    ]
   },
   "listcollaborationtrainedmodelinferencejobs": {},
   "listcollaborationtrainedmodels": {},
   "listconfiguredaudiencemodels": {},
   "listconfiguredmodelalgorithmassociations": {},
   "listconfiguredmodelalgorithms": {},
   "listmlinputchannels": {},
   "listtagsforresource": {
    "Resources": [
     "audiencegenerationjob",
     "audiencemodel",
     "configuredaudiencemodel",
     "trainingdataset"
    ]
   },
   "listtrainedmodelinferencejobs": {},
   "listtrainedmodels": {},
   "listtrainingdatasets": {},
   "putconfiguredaudiencemodelpolicy": {
    "Resources": [
     "configuredaudiencemodel"
    ]
   },
   "putmlconfiguration": {},
   "startaudienceexportjob": {
    "Resources": [
     "audiencegenerationjob"
    ]
   },
   "startaudiencegenerationjob": {
    "Resources": [
     "configuredaudiencemodel"
    ]
   },
   "starttrainedmodelexportjob": {
    "Resources": [
     "TrainedModel"
    ]
   },
   "starttrainedmodelinferencejob": {
    "Resources": [
     "ConfiguredModelAlgorithmAssociation",
     "MLInputChannel",
     "TrainedModel"
    ]
   },
   "tagresource": {
    "Resources": [
     "ConfiguredModelAlgorithm",
     "ConfiguredModelAlgorithmAssociation",
     "MLInputChannel",
     "TrainedModel",
     "TrainedModelInferenceJob",
     "audiencegenerationjob",
     "audiencemodel",
     "configuredaudiencemodel",
     "trainingdataset"
    ]
   },
   "untagresource": {
    "Resources": [
     "ConfiguredModelAlgorithm",
     "ConfiguredModelAlgorithmAssociation",
     "MLInputChannel",
     "TrainedModel",
     "TrainedModelInferenceJob",
     "audiencegenerationjob",
     "audiencemodel",
     "configuredaudiencemodel",
     "trainingdataset"
    ]
   },
   "updateconfiguredaudiencemodel": {
    "Resources": [
     "audiencemodel",
     "configuredaudiencemodel"
    ]
   }
  },
  "Resources": {
   "audiencegenerationjob": {
    "ARNFormats": [
     "arn:${Partition}:cleanrooms-ml:${Region}:${Account}:audience-generation-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "audiencemodel": {
    "ARNFormats": [
     "arn:${Partition}:cleanrooms-ml:${Region}:${Account}:audience-model/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "configuredaudiencemodel": {
    "ARNFormats": [
     "arn:${Partition}:cleanrooms-ml:${Region}:${Account}:configured-audience-model/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "configuredmodelalgorithm": {
    "ARNFormats": [
     "arn:${Partition}:cleanrooms-ml:${Region}:${Account}:configured-model-algorithm/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "configuredmodelalgorithmassociation": {
    "ARNFormats": [
     "arn:${Partition}:cleanrooms-ml:${Region}:${Account}:membership/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "mlinputchannel": {
    "ARNFormats": [
     "arn:${Partition}:cleanrooms-ml:${Region}:${Account}:membership/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "trainedmodel": {
    "ARNFormats": [
     "arn:${Partition}:cleanrooms-ml:${Region}:${Account}:membership/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "trainedmodelinferencejob": {
    "ARNFormats": [
     "arn:${Partition}:cleanrooms-ml:${Region}:${Account}:membership/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "trainingdataset": {
    "ARNFormats": [
     "arn:${Partition}:cleanrooms-ml:${Region}:${Account}:training-dataset/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "cloud9": {
  "Actions": {
   "activateec2remote": {
    "Resources": [
     "environment"
    ]
   },
   "createenvironmentec2": {},
   "createenvironmentmembership": {
    "Resources": [
     "environment"
    ]
   },
   "createenvironmentssh": {},
   "createenvironmenttoken": {
    "Resources": [
     "environment"
    ]
   },
   "deleteenvironment": {
    "Resources": [
     "environment"
    ]
   },
   "deleteenvironmentmembership": {
    "Resources": [
     "environment"
    ]
   },
   "describeec2remote": {
    "Resources": [
     "environment"
    ]
   },
   "describeenvironmentmemberships": {
    "Resources": [
     "environment"
    ]
   },
   "describeenvironments": {
    "Resources": [
     "environment"
    ]
   },
   "describeenvironmentstatus": {
    "Resources": [
     "environment"
    ]
   },
   "describesshremote": {
    "Resources": [
     "environment"
    ]
   },
   "getenvironmentconfig": {
    "Resources": [
     "environment"
    ]
   },
   "getenvironmentsettings": {
    "Resources": [
     "environment"
    ]
   },
   "getmembershipsettings": {
    "Resources": [
     "environment"
    ]
   },
   "getmigrationexperiences": {},
   "getuserpublickey": {},
   "getusersettings": {},
   "listenvironments": {},
   "listtagsforresource": {
    "Resources": [
     "environment"
    ]
   },
   "modifytemporarycredentialsonenvironmentec2": {
    "Resources": [
     "environment"
    ]
   },
   "tagresource": {
    "Resources": [
     "environment"
    ]
   },
   "untagresource": {
    "Resources": [
     "environment"
    ]
   },
   "updateenvironment": {
    "Resources": [
     "environment"
    ]
   },
   "updateenvironmentmembership": {
    "Resources": [
     "environment"
    ]
   },
   "updateenvironmentsettings": {
    "Resources": [
     "environment"
    ]
   },
   "updatemembershipsettings": {
    "Resources": [
     "environment"
    ]
   },
   "updatesshremote": {
    "Resources": [
     "environment"
    ]
   },
   "updateusersettings": {},
   "validateenvironmentname": {}
  },
  "Resources": {
   "environment": {
    "ARNFormats": [
     "arn:${Partition}:cloud9:${Region}:${Account}:environment:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "clouddirectory": {
  "Actions": {
   "addfacettoobject": {
    "Resources": [
     "directory"
    ]
   },
   "applyschema": {
    "Resources": [
     "directory",
     "publishedSchema"
    ]
   },
   "attachobject": {
    "Resources": [
     "directory"
    ]
   },
   "attachpolicy": {
    "Resources": [
     "directory"
    ]
   },
   "attachtoindex": {
    "Resources": [
     "directory"
    ]
   },
   "attachtypedlink": {
    "Resources": [
     "directory"
    ]
   },
   "batchread": {
    "Resources": [
     "directory"
    ]
   },
   "batchwrite": {
    "Resources": [
     "directory"
    ]
   },
   "createdirectory": {
    "Resources": [
     "publishedSchema"
    ]
   },
   "createfacet": {
    "Resources": [
     "appliedSchema",
     "developmentSchema"
    ]
   },
   "createindex": {
    "Resources": [
     "directory"
    ]
   },
   "createobject": {
    "Resources": [
     "directory"
    ]
   },
   "createschema": {},
   "createtypedlinkfacet": {
    "Resources": [
     "appliedSchema",
     "developmentSchema"
    ]
   },
   "deletedirectory": {
    "Resources": [
     "directory"
    ]
   },
   "deletefacet": {
    "Resources": [
     "developmentSchema"
    ]
   },
   "deleteobject": {
    "Resources": [
     "directory"
    ]
   },
   "deleteschema": {
    "Resources": [
     "developmentSchema",
     "publishedSchema"
    ]
   },
   "deletetypedlinkfacet": {
    "Resources": [
     "developmentSchema"
    ]
   },
   "detachfromindex": {
    "Resources": [
     "directory"
    ]
   },
   "detachobject": {
    "Resources": [
     "directory"
    ]
   },
   "detachpolicy": {
    "Resources": [
     "directory"
    ]
   },
   "detachtypedlink": {
    "Resources": [
     "directory"
    ]
   },
   "disabledirectory": {
    "Resources": [
     "directory"
    ]
   },
   "enabledirectory": {
    "Resources": [
     "directory"
    ]
   },
   "getappliedschemaversion": {
    "Resources": [
     "appliedSchema"
    ]
   },
   "getdirectory": {
    "Resources": [
     "directory"
    ]
   },
   "getfacet": {
    "Resources": [
     "appliedSchema",
     "developmentSchema",
     "publishedSchema"
    ]
   },
   "getlinkattributes": {
    "Resources": [
     "directory"
    ]
   },
   "getobjectattributes": {
    "Resources": [
     "directory"
    ]
   },
   "getobjectinformation": {
    "Resources": [
     "directory"
    ]
   },
   "getschemaasjson": {
    "Resources": [
     "appliedSchema",
     "developmentSchema",
     "publishedSchema"
    ]
   },
   "gettypedlinkfacetinformation": {
    "Resources": [
     "appliedSchema",
     "developmentSchema",
     "publishedSchema"
    ]
   },
   "listappliedschemaarns": {
    "Resources": [
     "directory"
    ]
   },
   "listattachedindices": {
    "Resources": [
     "directory"
    ]
   },
   "listdevelopmentschemaarns": {},
   "listdirectories": {},
   "listfacetattributes": {
    "Resources": [
     "appliedSchema",
     "developmentSchema",
     "publishedSchema"
    ]
   },
   "listfacetnames": {
    "Resources": [
     "appliedSchema",
     "developmentSchema",
     "publishedSchema"
    ]
   },
   "listincomingtypedlinks": {
    "Resources": [
     "directory"
    ]
   },
   "listindex": {
    "Resources": [
     "directory"
    ]
   },
   "listmanagedschemaarns": {},
   "listobjectattributes": {
    "Resources": [
     "directory"
    ]
   },
   "listobjectchildren": {
    "Resources": [
     "directory"
    ]
   },
   "listobjectparentpaths": {
    "Resources": [
     "directory"
    ]
   },
   "listobjectparents": {
    "Resources": [
     "directory"
    ]
   },
   "listobjectpolicies": {
    "Resources": [
     "directory"
    ]
   },
   "listoutgoingtypedlinks": {
    "Resources": [
     "directory"
    ]
   },
   "listpolicyattachments": {
    "Resources": [
     "directory"
    ]
   },
   "listpublishedschemaarns": {},
   "listtagsforresource": {
    "Resources": [
     "directory"
    ]
   },
   "listtypedlinkfacetattributes": {
    "Resources": [
     "appliedSchema",
     "developmentSchema",
     "publishedSchema"
    ]
   },
   "listtypedlinkfacetnames": {
    "Resources": [
     "appliedSchema",
     "developmentSchema",
     "publishedSchema"
    ]
   },
   "lookuppolicy": {
    "Resources": [
     "directory"
    ]
   },
   "publishschema": {
    "Resources": [
     "developmentSchema"
    ]
   },
   "putschemafromjson": {},
   "removefacetfromobject": {
    "Resources": [
     "directory"
    ]
   },
   "tagresource": {
    "Resources": [
     "directory"
    ]
   },
   "untagresource": {
    "Resources": [
     "directory"
    ]
   },
   "updatefacet": {
    "Resources": [
     "appliedSchema",
     "developmentSchema"
    ]
   },
   "updatelinkattributes": {
    "Resources": [
     "directory"
    ]
   },
   "updateobjectattributes": {
    "Resources": [
     "directory"
    ]
   },
   "updateschema": {
    "Resources": [
     "developmentSchema"
    ]
   },
   "updatetypedlinkfacet": {
    "Resources": [
     "developmentSchema"
    ]
   },
   "upgradeappliedschema": {
    "Resources": [
     "directory",
     "publishedSchema"
    ]
   },
   "upgradepublishedschema": {
    "Resources": [
     "developmentSchema",
     "publishedSchema"
    ]
   }
  },
  "Resources": {
   "appliedschema": {
    "ARNFormats": [
     "arn:${Partition}:clouddirectory:${Region}:${Account}:directory/.*"
    ]
   },
   "developmentschema": {
    "ARNFormats": [
     "arn:${Partition}:clouddirectory:${Region}:${Account}:schema/development/.*"
    ]
   },
   "directory": {
    "ARNFormats": [
     "arn:${Partition}:clouddirectory:${Region}:${Account}:directory/.*"
    ]
   },
   "publishedschema": {
    "ARNFormats": [
     "arn:${Partition}:clouddirectory:${Region}:${Account}:schema/published/.*"
    ]
   }
  }
 },
 "cloudformation": {
  "Actions": {
   "activateorganizationsaccess": {},
   "activatetype": {},
   "batchdescribetypeconfigurations": {},
   "cancelresourcerequest": {},
   "cancelupdatestack": {
    "Resources": [
     "stack"
    ]
   },
   "continueupdaterollback": {
    "Resources": [
     "stack"
    ]
   },
   "createchangeset": {
    "Resources": [
     "stack"
    ]
   },
   "creategeneratedtemplate": {},
   "createresource": {},
   "createstack": {
    "Resources": [
     "stack"
    ]
   },
   "createstackinstances": {
    "Resources": [
     "stackset",
     "stackset-target",
     "type"
    ]
   },
   "createstackrefactor": {
    "Resources": [
     "stack"
    ]
   },
   "createstackset": {},
   "createuploadbucket": {},
   "deactivateorganizationsaccess": {},
   "deactivatetype": {},
   "deletechangeset": {
    "Resources": [
     "stack"
    ]
   },
   "deletegeneratedtemplate": {},
   "deleteresource": {},
   "deletestack": {
    "Resources": [
     "stack"
    ]
   },
   "deletestackinstances": {
    "Resources": [
     "stackset",
     "stackset-target",
     "type"
    ]
   },
   "deletestackset": {
    "Resources": [
     "stackset"
    ]
   },
   "deregistertype": {},
   "describeaccountlimits": {},
   "describechangeset": {
    "Resources": [
     "stack"
    ]
   },
   "describechangesethooks": {
    "Resources": [
     "stack"
    ]
   },
   "describegeneratedtemplate": {},
   "describeorganizationsaccess": {},
   "describepublisher": {},
   "describeresourcescan": {},
   "describestackdriftdetectionstatus": {},
   "describestackevents": {
    "Resources": [
     "stack"
    ]
   },
   "describestackinstance": {
    "Resources": [
     "stackset"
    ]
   },
   "describestackrefactor": {
    "Resources": [
     "stack"
    ]
   },
   "describestackresource": {
    "Resources": [
     "stack"
    ]
   },
   "describestackresourcedrifts": {
    "Resources": [
     "stack"
    ]
   },
   "describestackresources": {
    "Resources": [
     "stack"
    ]
   },
   "describestacks": {
    "Resources": [
     "stack"
    ]
   },
   "describestackset": {
    "Resources": [
     "stackset"
    ]
   },
   "describestacksetoperation": {
    "Resources": [
     "stackset"
    ]
   },
   "describetype": {},
   "describetyperegistration": {},
   "detectstackdrift": {
    "Resources": [
     "stack"
    ]
   },
   "detectstackresourcedrift": {
    "Resources": [
     "stack"
    ]
   },
   "detectstacksetdrift": {
    "Resources": [
     "stackset"
    ]
   },
   "estimatetemplatecost": {},
   "executechangeset": {
    "Resources": [
     "stack"
    ]
   },
   "executestackrefactor": {
    "Resources": [
     "stack"
    ]
   },
   "getgeneratedtemplate": {},
   "getresource": {},
   "getresourcerequeststatus": {},
   "getstackpolicy": {
    "Resources": [
     "stack"
    ]
   },
   "gettemplate": {
    "Resources": [
     "stack"
    ]
   },
   "gettemplatesummary": {
    "Resources": [
     "stack",
     "stackset"
    ]
   },
   "importstackstostackset": {
    "Resources": [
     "stackset"
    ]
   },
   "listchangesets": {
    "Resources": [
     "stack"
    ]
   },
   "listexports": {},
   "listgeneratedtemplates": {},
   "listhookresults": {
    "Resources": [
     "stack"
    ]
   },
   "listimports": {},
   "listresourcerequests": {},
   "listresources": {},
   "listresourcescanrelatedresources": {},
   "listresourcescanresources": {},
   "listresourcescans": {},
   "liststackinstanceresourcedrifts": {
    "Resources": [
     "stackset"
    ]
   },
   "liststackinstances": {
    "Resources": [
     "stackset"
    ]
   },
   "liststackrefactoractions": {
    "Resources": [
     "stack"
    ]
   },
   "liststackrefactors": {
    "Resources": [
     "stack"
    ]
   },
   "liststackresources": {
    "Resources": [
     "stack"
    ]
   },
   "liststacks": {},
   "liststacksetautodeploymenttargets": {
    "Resources": [
     "stackset"
    ]
   },
   "liststacksetoperationresults": {
    "Resources": [
     "stackset"
    ]
   },
   "liststacksetoperations": {
    "Resources": [
     "stackset"
    ]
   },
   "liststacksets": {},
   "listtyperegistrations": {},
   "listtypes": {},
   "listtypeversions": {},
   "publishtype": {},
   "recordhandlerprogress": {
    "Resources": [
     "stack"
    ]
   },
   "registerpublisher": {},
   "registertype": {},
   "rollbackstack": {
    "Resources": [
     "stack"
    ]
   },
   "setstackpolicy": {
    "Resources": [
     "stack"
    ]
   },
   "settypeconfiguration": {},
   "settypedefaultversion": {},
   "signalresource": {
    "Resources": [
     "stack"
    ]
   },
   "startresourcescan": {},
   "stopstacksetoperation": {
    "Resources": [
     "stackset"
    ]
   },
   "tagresource": {
    "Resources": [
     "changeset",
     "stack",
     "stackset"
    ]
   },
   "testtype": {},
   "untagresource": {
    "Resources": [
     "changeset",
     "stack",
     "stackset"
    ]
   },
   "updategeneratedtemplate": {},
   "updateresource": {},
   "updatestack": {
    "Resources": [
     "stack"
    ]
   },
   "updatestackinstances": {
    "Resources": [
     "stackset",
     "stackset-target",
     "type"
    ]
   },
   "updatestackset": {
    "Resources": [
     "stackset",
     "stackset-target",
     "type"
    ]
   },
   "updateterminationprotection": {
    "Resources": [
     "stack"
    ]
   },
   "validatetemplate": {}
  },
  "Resources": {
   "changeset": {
    "ARNFormats": [
     "arn:${Partition}:cloudformation:${Region}:${Account}:changeSet/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "generatedtemplate": {
    "ARNFormats": [
     "arn:${Partition}:cloudformation:${Region}:${Account}:generatedTemplate/.*"
    ]
   },
   "resourcescan": {
    "ARNFormats": [
     "arn:${Partition}:cloudformation:${Region}:${Account}:resourceScan/.*"
    ]
   },
   "stack": {
    "ARNFormats": [
     "arn:${Partition}:cloudformation:${Region}:${Account}:stack/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "stackset": {
    "ARNFormats": [
     "arn:${Partition}:cloudformation:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "stackset-target": {
    "ARNFormats": [
     "arn:${Partition}:cloudformation:${Region}:${Account}:stackset-target/.*"
    ]
   },
   "type": {
    "ARNFormats": [
     "arn:${Partition}:cloudformation:${Region}:${Account}:type/resource/.*"
    ]
   }
  }
 },
 "cloudfront": {
  "Actions": {
   "allowvendedlogdeliveryforresource": {
    "Resources": [
     "distribution"
    ]
   },
   "associatealias": {
    "Resources": [
     "distribution"
    ]
   },
   "copydistribution": {
    "Resources": [
     "distribution"
    ]
   },
   "createanycastiplist": {
    "Resources": [
     "anycast-ip-list"
    ]
   },
   "createcachepolicy": {
    "Resources": [
     "cache-policy"
    ]
   },
   "createcloudfrontoriginaccessidentity": {
    "Resources": [
     "origin-access-identity"
    ]
   },
   "createcontinuousdeploymentpolicy": {
    "Resources": [
     "continuous-deployment-policy"
    ]
   },
   "createdistribution": {
    "Resources": [
     "distribution"
    ]
   },
   "createfieldlevelencryptionconfig": {},
   "createfieldlevelencryptionprofile": {},
   "createfunction": {
    "Resources": [
     "function"
    ]
   },
   "createinvalidation": {
    "Resources": [
     "distribution"
    ]
   },
   "createkeygroup": {},
   "createkeyvaluestore": {
    "Resources": [
     "key-value-store"
    ]
   },
   "createmonitoringsubscription": {},
   "createoriginaccesscontrol": {},
   "createoriginrequestpolicy": {
    "Resources": [
     "origin-request-policy"
    ]
   },
   "createpublickey": {},
   "createrealtimelogconfig": {
    "Resources": [
     "realtime-log-config"
    ]
   },
   "createresponseheaderspolicy": {
    "Resources": [
     "response-headers-policy"
    ]
   },
   "createsavingsplan": {},
   "createstreamingdistribution": {
    "Resources": [
     "streaming-distribution"
    ]
   },
   "createstreamingdistributionwithtags": {
    "Resources": [
     "streaming-distribution"
    ]
   },
   "createvpcorigin": {},
   "deleteanycastiplist": {
    "Resources": [
     "anycast-ip-list"
    ]
   },
   "deletecachepolicy": {
    "Resources": [
     "cache-policy"
    ]
   },
   "deletecloudfrontoriginaccessidentity": {
    "Resources": [
     "origin-access-identity"
    ]
   },
   "deletecontinuousdeploymentpolicy": {
    "Resources": [
     "continuous-deployment-policy"
    ]
   },
   "deletedistribution": {
    "Resources": [
     "distribution"
    ]
   },
   "deletefieldlevelencryptionconfig": {
    "Resources": [
     "field-level-encryption-config"
    ]
   },
   "deletefieldlevelencryptionprofile": {
    "Resources": [
     "field-level-encryption-profile"
    ]
   },
   "deletefunction": {
    "Resources": [
     "function"
    ]
   },
   "deletekeygroup": {},
   "deletekeyvaluestore": {
    "Resources": [
     "key-value-store"
    ]
   },
   "deletemonitoringsubscription": {},
   "deleteoriginaccesscontrol": {
    "Resources": [
     "origin-access-control"
    ]
   },
   "deleteoriginrequestpolicy": {
    "Resources": [
     "origin-request-policy"
    ]
   },
   "deletepublickey": {},
   "deleterealtimelogconfig": {
    "Resources": [
     "realtime-log-config"
    ]
   },
   "deleteresponseheaderspolicy": {
    "Resources": [
     "response-headers-policy"
    ]
   },
   "deletestreamingdistribution": {
    "Resources": [
     "streaming-distribution"
    ]
   },
   "deletevpcorigin": {
    "Resources": [
     "vpcorigin"
    ]
   },
   "describefunction": {
    "Resources": [
     "function"
    ]
   },
   "describekeyvaluestore": {
    "Resources": [
     "key-value-store"
    ]
   },
   "getanycastiplist": {
    "Resources": [
     "anycast-ip-list"
    ]
   },
   "getcachepolicy": {
    "Resources": [
     "cache-policy"
    ]
   },
   "getcachepolicyconfig": {
    "Resources": [
     "cache-policy"
    ]
   },
   "getcloudfrontoriginaccessidentity": {
    "Resources": [
     "origin-access-identity"
    ]
   },
   "getcloudfrontoriginaccessidentityconfig": {
    "Resources": [
     "origin-access-identity"
    ]
   },
   "getcontinuousdeploymentpolicy": {
    "Resources": [
     "continuous-deployment-policy"
    ]
   },
   "getcontinuousdeploymentpolicyconfig": {
    "Resources": [
     "continuous-deployment-policy"
    ]
   },
   "getdistribution": {
    "Resources": [
     "distribution"
    ]
   },
   "getdistributionconfig": {
    "Resources": [
     "distribution"
    ]
   },
   "getfieldlevelencryption": {
    "Resources": [
     "field-level-encryption-config"
    ]
   },
   "getfieldlevelencryptionconfig": {
    "Resources": [
     "field-level-encryption-config"
    ]
   },
   "getfieldlevelencryptionprofile": {
    "Resources": [
     "field-level-encryption-profile"
    ]
   },
   "getfieldlevelencryptionprofileconfig": {
    "Resources": [
     "field-level-encryption-profile"
    ]
   },
   "getfunction": {
    "Resources": [
     "function"
    ]
   },
   "getinvalidation": {
    "Resources": [
     "distribution"
    ]
   },
   "getkeygroup": {},
   "getkeygroupconfig": {},
   "getmonitoringsubscription": {},
   "getoriginaccesscontrol": {
    "Resources": [
     "origin-access-control"
    ]
   },
   "getoriginaccesscontrolconfig": {
    "Resources": [
     "origin-access-control"
    ]
   },
   "getoriginrequestpolicy": {
    "Resources": [
     "origin-request-policy"
    ]
   },
   "getoriginrequestpolicyconfig": {
    "Resources": [
     "origin-request-policy"
    ]
   },
   "getpublickey": {},
   "getpublickeyconfig": {},
   "getrealtimelogconfig": {
    "Resources": [
     "realtime-log-config"
    ]
   },
   "getresponseheaderspolicy": {
    "Resources": [
     "response-headers-policy"
    ]
   },
   "getresponseheaderspolicyconfig": {
    "Resources": [
     "response-headers-policy"
    ]
   },
   "getsavingsplan": {},
   "getstreamingdistribution": {
    "Resources": [
     "streaming-distribution"
    ]
   },
   "getstreamingdistributionconfig": {
    "Resources": [
     "streaming-distribution"
    ]
   },
   "getvpcorigin": {
    "Resources": [
     "vpcorigin"
    ]
   },
   "listanycastiplists": {},
   "listcachepolicies": {},
   "listcloudfrontoriginaccessidentities": {},
   "listconflictingaliases": {
    "Resources": [
     "distribution"
    ]
   },
   "listcontinuousdeploymentpolicies": {},
   "listdistributions": {},
   "listdistributionsbyanycastiplistid": {},
   "listdistributionsbycachepolicyid": {},
   "listdistributionsbykeygroup": {},
   "listdistributionsbylambdafunction": {},
   "listdistributionsbyoriginrequestpolicyid": {},
   "listdistributionsbyrealtimelogconfig": {},
   "listdistributionsbyresponseheaderspolicyid": {},
   "listdistributionsbyvpcoriginid": {},
   "listdistributionsbywebaclid": {},
   "listfieldlevelencryptionconfigs": {},
   "listfieldlevelencryptionprofiles": {},
   "listfunctions": {},
   "listinvalidations": {
    "Resources": [
     "distribution"
    ]
   },
   "listkeygroups": {},
   "listkeyvaluestores": {},
   "listoriginaccesscontrols": {},
   "listoriginrequestpolicies": {},
   "listpublickeys": {},
   "listratecards": {},
   "listrealtimelogconfigs": {},
   "listresponseheaderspolicies": {},
   "listsavingsplans": {},
   "liststreamingdistributions": {},
   "listtagsforresource": {
    "Resources": [
     "anycast-ip-list",
     "distribution",
     "vpcorigin"
    ]
   },
   "listusages": {},
   "listvpcorigins": {},
   "publishfunction": {
    "Resources": [
     "function"
    ]
   },
   "tagresource": {
    "Resources": [
     "anycast-ip-list",
     "distribution",
     "streaming-distribution",
     "vpcorigin"
    ]
   },
   "testfunction": {
    "Resources": [
     "function"
    ]
   },
   "untagresource": {
    "Resources": [
     "anycast-ip-list",
     "distribution",
     "streaming-distribution",
     "vpcorigin"
    ]
   },
   "updatecachepolicy": {
    "Resources": [
     "cache-policy"
    ]
   },
   "updatecloudfrontoriginaccessidentity": {
    "Resources": [
     "origin-access-identity"
    ]
   },
   "updatecontinuousdeploymentpolicy": {
    "Resources": [
     "continuous-deployment-policy"
    ]
   },
   "updatedistribution": {
    "Resources": [
     "distribution"
    ]
   },
   "updatedistributionwithstagingconfig": {
    "Resources": [
     "distribution"
    ]
   },
   "updatefieldlevelencryptionconfig": {},
   "updatefieldlevelencryptionprofile": {
    "Resources": [
     "field-level-encryption-profile"
    ]
   },
   "updatefunction": {
    "Resources": [
     "function"
    ]
   },
   "updatekeygroup": {},
   "updatekeyvaluestore": {
    "Resources": [
     "key-value-store"
    ]
   },
   "updateoriginaccesscontrol": {
    "Resources": [
     "origin-access-control"
    ]
   },
   "updateoriginrequestpolicy": {
    "Resources": [
     "origin-request-policy"
    ]
   },
   "updatepublickey": {},
   "updaterealtimelogconfig": {
    "Resources": [
     "realtime-log-config"
    ]
   },
   "updateresponseheaderspolicy": {
    "Resources": [
     "response-headers-policy"
    ]
   },
   "updatesavingsplan": {},
   "updatestreamingdistribution": {
    "Resources": [
     "streaming-distribution"
    ]
   },
   "updatevpcorigin": {
    "Resources": [
     "vpcorigin"
    ]
   }
  },
  "Resources": {
   "anycast-ip-list": {
    "ARNFormats": [
     "arn:${Partition}:cloudfront::${Account}:anycast-ip-list/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "cache-policy": {
    "ARNFormats": [
     "arn:${Partition}:cloudfront::${Account}:cache-policy/.*"
    ]
   },
   "continuous-deployment-policy": {
    "ARNFormats": [
     "arn:${Partition}:cloudfront::${Account}:continuous-deployment-policy/.*"
    ]
   },
   "distribution": {
    "ARNFormats": [
     "arn:${Partition}:cloudfront::${Account}:distribution/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "field-level-encryption-config": {
    "ARNFormats": [
     "arn:${Partition}:cloudfront::${Account}:field-level-encryption-config/.*"
    ]
   },
   "field-level-encryption-profile": {
    "ARNFormats": [
     "arn:${Partition}:cloudfront::${Account}:field-level-encryption-profile/.*"
    ]
   },
   "function": {
    "ARNFormats": [
     "arn:${Partition}:cloudfront::${Account}:function/.*"
    ]
   },
   "key-value-store": {
    "ARNFormats": [
     "arn:${Partition}:cloudfront::${Account}:key-value-store/.*"
    ]
   },
   "origin-access-control": {
    "ARNFormats": [
     "arn:${Partition}:cloudfront::${Account}:origin-access-control/.*"
    ]
   },
   "origin-access-identity": {
    "ARNFormats": [
     "arn:${Partition}:cloudfront::${Account}:origin-access-identity/.*"
    ]
   },
   "origin-request-policy": {
    "ARNFormats": [
     "arn:${Partition}:cloudfront::${Account}:origin-request-policy/.*"
    ]
   },
   "realtime-log-config": {
    "ARNFormats": [
     "arn:${Partition}:cloudfront::${Account}:realtime-log-config/.*"
    ]
   },
   "response-headers-policy": {
    "ARNFormats": [
     "arn:${Partition}:cloudfront::${Account}:response-headers-policy/.*"
    ]
   },
   "streaming-distribution": {
    "ARNFormats": [
     "arn:${Partition}:cloudfront::${Account}:streaming-distribution/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "vpcorigin": {
    "ARNFormats": [
     "arn:${Partition}:cloudfront::${Account}:vpcorigin/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "cloudfront-keyvaluestore": {
  "Actions": {
   "deletekey": {
    "Resources": [
     "key-value-store"
    ]
   },
   "describekeyvaluestore": {
    "Resources": [
     "key-value-store"
    ]
   },
   "getkey": {
    "Resources": [
     "key-value-store"
    ]
   },
   "listkeys": {
    "Resources": [
     "key-value-store"
    ]
   },
   "putkey": {
    "Resources": [
     "key-value-store"
    ]
   },
   "updatekeys": {
    "Resources": [
     "key-value-store"
    ]
   }
  },
  "Resources": {
   "key-value-store": {
    "ARNFormats": [
     "arn:${Partition}:cloudfront::${Account}:key-value-store/.*"
    ]
   }
  }
 },
 "cloudhsm": {
  "Actions": {
   "copybackuptoregion": {
    "Resources": [
     "backup"
    ]
   },
   "createcluster": {
    "Resources": [
     "backup"
    ]
   },
   "createhsm": {
    "Resources": [
     "cluster"
    ]
   },
   "deletebackup": {
    "Resources": [
     "backup"
    ]
   },
   "deletecluster": {
    "Resources": [
     "cluster"
    ]
   },
   "deletehsm": {},
   "deleteresourcepolicy": {
    "Resources": [
     "backup"
    ]
   },
   "describebackups": {},
   "describeclusters": {},
   "getresourcepolicy": {
    "Resources": [
     "backup"
    ]
   },
   "initializecluster": {
    "Resources": [
     "cluster"
    ]
   },
   "listtags": {
    "Resources": [
     "backup",
     "cluster"
    ]
   },
   "modifybackupattributes": {
    "Resources": [
     "backup"
    ]
   },
   "modifycluster": {
    "Resources": [
     "cluster"
    ]
   },
   "putresourcepolicy": {
    "Resources": [
     "backup"
    ]
   },
   "restorebackup": {
    "Resources": [
     "backup"
    ]
   },
   "tagresource": {
    "Resources": [
     "backup",
     "cluster"
    ]
   },
   "untagresource": {
    "Resources": [
     "backup",
     "cluster"
    ]
   }
  },
  "Resources": {
   "backup": {
    "ARNFormats": [
     "arn:${Partition}:cloudhsm:${Region}:${Account}:backup/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "cluster": {
    "ARNFormats": [
     "arn:${Partition}:cloudhsm:${Region}:${Account}:cluster/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "cloudsearch": {
  "Actions": {
   "addtags": {
    "Resources": [
     "domain"
    ]
   },
   "buildsuggesters": {
    "Resources": [
     "domain"
    ]
   },
   "createdomain": {
    "Resources": [
     "domain"
    ]
   },
   "defineanalysisscheme": {
    "Resources": [
     "domain"
    ]
   },
   "defineexpression": {
    "Resources": [
     "domain"
    ]
   },
   "defineindexfield": {
    "Resources": [
     "domain"
    ]
   },
   "definesuggester": {
    "Resources": [
     "domain"
    ]
   },
   "deleteanalysisscheme": {
    "Resources": [
     "domain"
    ]
   },
   "deletedomain": {
    "Resources": [
     "domain"
    ]
   },
   "deleteexpression": {
    "Resources": [
     "domain"
    ]
   },
   "deleteindexfield": {
    "Resources": [
     "domain"
    ]
   },
   "deletesuggester": {
    "Resources": [
     "domain"
    ]
   },
   "describeanalysisschemes": {
    "Resources": [
     "domain"
    ]
   },
   "describeavailabilityoptions": {
    "Resources": [
     "domain"
    ]
   },
   "describedomainendpointoptions": {
    "Resources": [
     "domain"
    ]
   },
   "describedomains": {
    "Resources": [
     "domain"
    ]
   },
   "describeexpressions": {
    "Resources": [
     "domain"
    ]
   },
   "describeindexfields": {
    "Resources": [
     "domain"
    ]
   },
   "describescalingparameters": {
    "Resources": [
     "domain"
    ]
   },
   "describeserviceaccesspolicies": {
    "Resources": [
     "domain"
    ]
   },
   "describesuggesters": {
    "Resources": [
     "domain"
    ]
   },
   "document": {
    "Resources": [
     "domain"
    ]
   },
   "indexdocuments": {
    "Resources": [
     "domain"
    ]
   },
   "listdomainnames": {
    "Resources": [
     "domain"
    ]
   },
   "listtags": {
    "Resources": [
     "domain"
    ]
   },
   "removetags": {
    "Resources": [
     "domain"
    ]
   },
   "search": {
    "Resources": [
     "domain"
    ]
   },
   "suggest": {
    "Resources": [
     "domain"
    ]
   },
   "updateavailabilityoptions": {
    "Resources": [
     "domain"
    ]
   },
   "updatedomainendpointoptions": {
    "Resources": [
     "domain"
    ]
   },
   "updatescalingparameters": {
    "Resources": [
     "domain"
    ]
   },
   "updateserviceaccesspolicies": {
    "Resources": [
     "domain"
    ]
   }
  },
  "Resources": {
   "domain": {
    "ARNFormats": [
     "arn:${Partition}:cloudsearch:${Region}:${Account}:domain/.*"
    ]
   }
  }
 },
 "cloudshell": {
  "Actions": {
   "approvecommand": {
    "Resources": [
     "Environment"
    ]
   },
   "createenvironment": {},
   "createsession": {
    "Resources": [
     "Environment"
    ]
   },
   "deleteenvironment": {
    "Resources": [
     "Environment"
    ]
   },
   "describeenvironments": {},
   "getenvironmentstatus": {
    "Resources": [
     "Environment"
    ]
   },
   "getfiledownloadurls": {
    "Resources": [
     "Environment"
    ]
   },
   "getfileuploadurls": {
    "Resources": [
     "Environment"
    ]
   },
   "putcredentials": {
    "Resources": [
     "Environment"
    ]
   },
   "startenvironment": {
    "Resources": [
     "Environment"
    ]
   },
   "stopenvironment": {
    "Resources": [
     "Environment"
    ]
   }
  },
  "Resources": {
   "environment": {
    "ARNFormats": [
     "arn:${Partition}:cloudshell:${Region}:${Account}:environment/.*"
    ]
   }
  }
 },
 "cloudtrail": {
  "Actions": {
   "addtags": {
    "Resources": [
     "channel",
     "dashboard",
     "eventdatastore",
     "trail"
    ]
   },
   "cancelquery": {
    "Resources": [
     "eventdatastore"
    ]
   },
   "createchannel": {
    "Resources": [
     "channel",
     "eventdatastore"
    ]
   },
   "createdashboard": {
    "Resources": [
     "dashboard"
    ]
   },
   "createeventdatastore": {
    "Resources": [
     "eventdatastore"
    ]
   },
   "createservicelinkedchannel": {
    "Resources": [
     "channel"
    ]
   },
   "createtrail": {
    "Resources": [
     "trail"
    ]
   },
   "deletechannel": {
    "Resources": [
     "channel"
    ]
   },
   "deletedashboard": {
    "Resources": [
     "dashboard"
    ]
   },
   "deleteeventdatastore": {
    "Resources": [
     "eventdatastore"
    ]
   },
   "deleteresourcepolicy": {
    "Resources": [
     "channel",
     "dashboard",
     "eventdatastore"
    ]
   },
   "deleteservicelinkedchannel": {
    "Resources": [
     "channel"
    ]
   },
   "deletetrail": {
    "Resources": [
     "trail"
    ]
   },
   "deregisterorganizationdelegatedadmin": {},
   "describequery": {
    "Resources": [
     "eventdatastore"
    ]
   },
   "describetrails": {},
   "disablefederation": {
    "Resources": [
     "eventdatastore"
    ]
   },
   "enablefederation": {
    "Resources": [
     "eventdatastore"
    ]
   },
   "generatequery": {
    "Resources": [
     "eventdatastore"
    ]
   },
   "generatequeryresultssummary": {
    "Resources": [
     "eventdatastore"
    ]
   },
   "getchannel": {
    "Resources": [
     "channel"
    ]
   },
   "getdashboard": {
    "Resources": [
     "dashboard"
    ]
   },
   "geteventdatastore": {
    "Resources": [
     "eventdatastore"
    ]
   },
   "geteventdatastoredata": {
    "Resources": [
     "eventdatastore"
    ]
   },
   "geteventselectors": {
    "Resources": [
     "trail"
    ]
   },
   "getimport": {},
   "getinsightselectors": {
    "Resources": [
     "eventdatastore",
     "trail"
    ]
   },
   "getqueryresults": {
    "Resources": [
     "eventdatastore"
    ]
   },
   "getresourcepolicy": {
    "Resources": [
     "channel",
     "dashboard",
     "eventdatastore"
    ]
   },
   "getservicelinkedchannel": {
    "Resources": [
     "channel"
    ]
   },
   "gettrail": {
    "Resources": [
     "trail"
    ]
   },
   "gettrailstatus": {
    "Resources": [
     "trail"
    ]
   },
   "listchannels": {},
   "listdashboards": {},
   "listeventdatastores": {},
   "listimportfailures": {},
   "listimports": {},
   "listpublickeys": {},
   "listqueries": {
    "Resources": [
     "eventdatastore"
    ]
   },
   "listservicelinkedchannels": {},
   "listtags": {
    "Resources": [
     "channel",
     "dashboard",
     "eventdatastore",
     "trail"
    ]
   },
   "listtrails": {},
   "lookupevents": {},
   "puteventselectors": {
    "Resources": [
     "trail"
    ]
   },
   "putinsightselectors": {
    "Resources": [
     "eventdatastore",
     "trail"
    ]
   },
   "putresourcepolicy": {
    "Resources": [
     "channel",
     "dashboard",
     "eventdatastore"
    ]
   },
   "registerorganizationdelegatedadmin": {},
   "removetags": {
    "Resources": [
     "channel",
     "dashboard",
     "eventdatastore",
     "trail"
    ]
   },
   "restoreeventdatastore": {
    "Resources": [
     "eventdatastore"
    ]
   },
   "searchsamplequeries": {},
   "startdashboardrefresh": {
    "Resources": [
     "dashboard"
    ]
   },
   "starteventdatastoreingestion": {
    "Resources": [
     "eventdatastore"
    ]
   },
   "startimport": {},
   "startlogging": {
    "Resources": [
     "trail"
    ]
   },
   "startquery": {
    "Resources": [
     "eventdatastore"
    ]
   },
   "stopeventdatastoreingestion": {
    "Resources": [
     "eventdatastore"
    ]
   },
   "stopimport": {},
   "stoplogging": {
    "Resources": [
     "trail"
    ]
   },
   "updatechannel": {
    "Resources": [
     "channel"
    ]
   },
   "updatedashboard": {
    "Resources": [
     "dashboard"
    ]
   },
   "updateeventdatastore": {
    "Resources": [
     "eventdatastore"
    ]
   },
   "updateservicelinkedchannel": {
    "Resources": [
     "channel"
    ]
   },
   "updatetrail": {
    "Resources": [
     "trail"
    ]
   }
  },
  "Resources": {
   "channel": {
    "ARNFormats": [
     "arn:${Partition}:cloudtrail:${Region}:${Account}:channel/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "dashboard": {
    "ARNFormats": [
     "arn:${Partition}:cloudtrail:${Region}:${Account}:dashboard/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "eventdatastore": {
    "ARNFormats": [
     "arn:${Partition}:cloudtrail:${Region}:${Account}:eventdatastore/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "trail": {
    "ARNFormats": [
     "arn:${Partition}:cloudtrail:${Region}:${Account}:trail/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "cloudtrail-data": {
  "Actions": {
   "putauditevents": {
    "Resources": [
     "channel"
    ]
   }
  },
  "Resources": {
   "channel": {
    "ARNFormats": [
     "arn:${Partition}:cloudtrail:${Region}:${Account}:channel/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "cloudwatch": {
  "Actions": {
   "batchgetservicelevelindicatorreport": {},
   "batchgetservicelevelobjectivebudgetreport": {
    "Resources": [
     "slo"
    ]
   },
   "createservicelevelobjective": {},
   "deletealarms": {
    "Resources": [
     "alarm"
    ]
   },
   "deleteanomalydetector": {},
   "deletedashboards": {
    "Resources": [
     "dashboard"
    ]
   },
   "deleteinsightrules": {
    "Resources": [
     "insight-rule"
    ]
   },
   "deletemetricstream": {
    "Resources": [
     "metric-stream"
    ]
   },
   "deleteservicelevelobjective": {
    "Resources": [
     "slo"
    ]
   },
   "describealarmhistory": {
    "Resources": [
     "alarm"
    ]
   },
   "describealarms": {
    "Resources": [
     "alarm"
    ]
   },
   "describealarmsformetric": {},
   "describeanomalydetectors": {},
   "describeinsightrules": {},
   "disablealarmactions": {
    "Resources": [
     "alarm"
    ]
   },
   "disableinsightrules": {
    "Resources": [
     "insight-rule"
    ]
   },
   "enablealarmactions": {
    "Resources": [
     "alarm"
    ]
   },
   "enableinsightrules": {
    "Resources": [
     "insight-rule"
    ]
   },
   "enabletopologydiscovery": {},
   "generatequery": {},
   "getdashboard": {
    "Resources": [
     "dashboard"
    ]
   },
   "getinsightrulereport": {
    "Resources": [
     "insight-rule"
    ]
   },
   "getmetricdata": {},
   "getmetricstatistics": {},
   "getmetricstream": {
    "Resources": [
     "metric-stream"
    ]
   },
   "getmetricwidgetimage": {},
   "getservice": {
    "Resources": [
     "service"
    ]
   },
   "getservicedata": {
    "Resources": [
     "service"
    ]
   },
   "getservicelevelobjective": {
    "Resources": [
     "slo"
    ]
   },
   "gettopologydiscoverystatus": {},
   "gettopologymap": {},
   "link": {},
   "listdashboards": {},
   "listentitiesformetric": {},
   "listmanagedinsightrules": {},
   "listmetrics": {},
   "listmetricstreams": {},
   "listservicelevelobjectives": {},
   "listservices": {},
   "listtagsforresource": {
    "Resources": [
     "alarm",
     "insight-rule",
     "slo"
    ]
   },
   "putanomalydetector": {},
   "putcompositealarm": {
    "Resources": [
     "alarm"
    ]
   },
   "putdashboard": {
    "Resources": [
     "dashboard"
    ]
   },
   "putinsightrule": {
    "Resources": [
     "insight-rule"
    ]
   },
   "putmanagedinsightrules": {},
   "putmetricalarm": {
    "Resources": [
     "alarm"
    ]
   },
   "putmetricdata": {},
   "putmetricstream": {
    "Resources": [
     "metric-stream"
    ]
   },
   "setalarmstate": {
    "Resources": [
     "alarm"
    ]
   },
   "startmetricstreams": {
    "Resources": [
     "metric-stream"
    ]
   },
   "stopmetricstreams": {
    "Resources": [
     "metric-stream"
    ]
   },
   "tagresource": {
    "Resources": [
     "alarm",
     "insight-rule",
     "slo"
    ]
   },
   "untagresource": {
    "Resources": [
     "alarm",
     "insight-rule",
     "slo"
    ]
   },
   "updateservicelevelobjective": {
    "Resources": [
     "slo"
    ]
   }
  },
  "Resources": {
   "alarm": {
    "ARNFormats": [
     "arn:${Partition}:cloudwatch:${Region}:${Account}:alarm:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "dashboard": {
    "ARNFormats": [
     "arn:${Partition}:cloudwatch::${Account}:dashboard/.*"
    ]
   },
   "insight-rule": {
    "ARNFormats": [
     "arn:${Partition}:cloudwatch:${Region}:${Account}:insight-rule/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "metric-stream": {
    "ARNFormats": [
     "arn:${Partition}:cloudwatch:${Region}:${Account}:metric-stream/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "service": {
    "ARNFormats": [
     "arn:${Partition}:cloudwatch:${Region}:${Account}:service/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "slo": {
    "ARNFormats": [
     "arn:${Partition}:cloudwatch:${Region}:${Account}:slo/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "codeartifact": {
  "Actions": {
   "associateexternalconnection": {
    "Resources": [
     "repository"
    ]
   },
   "associatewithdownstreamrepository": {
    "Resources": [
     "repository"
    ]
   },
   "copypackageversions": {
    "Resources": [
     "package",
     "repository"
    ]
   },
   "createdomain": {},
   "createpackagegroup": {},
   "createrepository": {},
   "deletedomain": {
    "Resources": [
     "domain"
    ]
   },
   "deletedomainpermissionspolicy": {
    "Resources": [
     "domain"
    ]
   },
   "deletepackage": {
    "Resources": [
     "package"
    ]
   },
   "deletepackagegroup": {
    "Resources": [
     "package-group"
    ]
   },
   "deletepackageversions": {
    "Resources": [
     "package"
    ]
   },
   "deleterepository": {
    "Resources": [
     "repository"
    ]
   },
   "deleterepositorypermissionspolicy": {
    "Resources": [
     "repository"
    ]
   },
   "describedomain": {
    "Resources": [
     "domain"
    ]
   },
   "describepackage": {
    "Resources": [
     "package"
    ]
   },
   "describepackagegroup": {
    "Resources": [
     "package-group"
    ]
   },
   "describepackageversion": {
    "Resources": [
     "package"
    ]
   },
   "describerepository": {
    "Resources": [
     "repository"
    ]
   },
   "disassociateexternalconnection": {
    "Resources": [
     "repository"
    ]
   },
   "disposepackageversions": {
    "Resources": [
     "package"
    ]
   },
   "getassociatedpackagegroup": {
    "Resources": [
     "package-group"
    ]
   },
   "getauthorizationtoken": {
    "Resources": [
     "domain"
    ]
   },
   "getdomainpermissionspolicy": {
    "Resources": [
     "domain"
    ]
   },
   "getpackageversionasset": {
    "Resources": [
     "package"
    ]
   },
   "getpackageversionreadme": {
    "Resources": [
     "package"
    ]
   },
   "getrepositoryendpoint": {
    "Resources": [
     "repository"
    ]
   },
   "getrepositorypermissionspolicy": {
    "Resources": [
     "repository"
    ]
   },
   "listallowedrepositoriesforgroup": {
    "Resources": [
     "package-group"
    ]
   },
   "listassociatedpackages": {
    "Resources": [
     "package-group"
    ]
   },
   "listdomains": {},
   "listpackagegroups": {
    "Resources": [
     "domain"
    ]
   },
   "listpackages": {
    "Resources": [
     "repository"
    ]
   },
   "listpackageversionassets": {
    "Resources": [
     "package"
    ]
   },
   "listpackageversiondependencies": {
    "Resources": [
     "package"
    ]
   },
   "listpackageversions": {
    "Resources": [
     "package"
    ]
   },
   "listrepositories": {},
   "listrepositoriesindomain": {
    "Resources": [
     "domain"
    ]
   },
   "listsubpackagegroups": {
    "Resources": [
     "package-group"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "domain",
     "package-group",
     "repository"
    ]
   },
   "publishpackageversion": {
    "Resources": [
     "package"
    ]
   },
   "putdomainpermissionspolicy": {
    "Resources": [
     "domain"
    ]
   },
   "putpackagemetadata": {
    "Resources": [
     "package"
    ]
   },
   "putpackageoriginconfiguration": {
    "Resources": [
     "package"
    ]
   },
   "putrepositorypermissionspolicy": {
    "Resources": [
     "repository"
    ]
   },
   "readfromrepository": {
    "Resources": [
     "repository"
    ]
   },
   "tagresource": {
    "Resources": [
     "domain",
     "package-group",
     "repository"
    ]
   },
   "untagresource": {
    "Resources": [
     "domain",
     "package-group",
     "repository"
    ]
   },
   "updatepackagegroup": {
    "Resources": [
     "package-group"
    ]
   },
   "updatepackagegrouporiginconfiguration": {
    "Resources": [
     "package-group"
    ]
   },
   "updatepackageversionsstatus": {
    "Resources": [
     "package"
    ]
   },
   "updaterepository": {
    "Resources": [
     "repository"
    ]
   }
  },
  "Resources": {
   "domain": {
    "ARNFormats": [
     "arn:${Partition}:codeartifact:${Region}:${Account}:domain/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "package": {
    "ARNFormats": [
     "arn:${Partition}:codeartifact:${Region}:${Account}:package/.*"
    ]
   },
   "package-group": {
    "ARNFormats": [
     "arn:${Partition}:codeartifact:${Region}:${Account}:package-group/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "repository": {
    "ARNFormats": [
     "arn:${Partition}:codeartifact:${Region}:${Account}:repository/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "codebuild": {
  "Actions": {
   "batchdeletebuilds": {
    "Resources": [
     "project"
    ]
   },
   "batchgetbuildbatches": {
    "Resources": [
     "project"
    ]
   },
   "batchgetbuilds": {
    "Resources": [
     "project"
    ]
   },
   "batchgetfleets": {
    "Resources": [
     "fleet"
    ]
   },
   "batchgetprojects": {
    "Resources": [
     "project"
    ]
   },
   "batchgetreportgroups": {
    "Resources": [
     "report-group"
    ]
   },
   "batchgetreports": {
    "Resources": [
     "report-group"
    ]
   },
   "batchputcodecoverages": {
    "Resources": [
     "report-group"
    ]
   },
   "batchputtestcases": {
    "Resources": [
     "report-group"
    ]
   },
   "createfleet": {
    "Resources": [
     "fleet"
    ]
   },
   "createproject": {
    "Resources": [
     "project"
    ]
   },
   "createreport": {
    "Resources": [
     "report-group"
    ]
   },
   "createreportgroup": {
    "Resources": [
     "report-group"
    ]
   },
   "createwebhook": {
    "Resources": [
     "project"
    ]
   },
   "deletebuildbatch": {
    "Resources": [
     "project"
    ]
   },
   "deletefleet": {
    "Resources": [
     "fleet"
    ]
   },
   "deleteoauthtoken": {},
   "deleteproject": {
    "Resources": [
     "project"
    ]
   },
   "deletereport": {
    "Resources": [
     "report-group"
    ]
   },
   "deletereportgroup": {
    "Resources": [
     "report-group"
    ]
   },
   "deleteresourcepolicy": {
    "Resources": [
     "project",
     "report-group"
    ]
   },
   "deletesourcecredentials": {},
   "deletewebhook": {
    "Resources": [
     "project"
    ]
   },
   "describecodecoverages": {
    "Resources": [
     "report-group"
    ]
   },
   "describetestcases": {
    "Resources": [
     "report-group"
    ]
   },
   "getreportgrouptrend": {
    "Resources": [
     "report-group"
    ]
   },
   "getresourcepolicy": {
    "Resources": [
     "project",
     "report-group"
    ]
   },
   "importsourcecredentials": {},
   "invalidateprojectcache": {
    "Resources": [
     "project"
    ]
   },
   "listbuildbatches": {},
   "listbuildbatchesforproject": {
    "Resources": [
     "project"
    ]
   },
   "listbuilds": {},
   "listbuildsforproject": {
    "Resources": [
     "project"
    ]
   },
   "listconnectedoauthaccounts": {},
   "listcuratedenvironmentimages": {},
   "listfleets": {},
   "listprojects": {},
   "listreportgroups": {},
   "listreports": {},
   "listreportsforreportgroup": {
    "Resources": [
     "report-group"
    ]
   },
   "listrepositories": {},
   "listsharedprojects": {},
   "listsharedreportgroups": {},
   "listsourcecredentials": {},
   "persistoauthtoken": {},
   "putresourcepolicy": {
    "Resources": [
     "project",
     "report-group"
    ]
   },
   "retrybuild": {
    "Resources": [
     "project"
    ]
   },
   "retrybuildbatch": {
    "Resources": [
     "project"
    ]
   },
   "startbuild": {
    "Resources": [
     "project"
    ]
   },
   "startbuildbatch": {
    "Resources": [
     "project"
    ]
   },
   "stopbuild": {
    "Resources": [
     "project"
    ]
   },
   "stopbuildbatch": {
    "Resources": [
     "project"
    ]
   },
   "updatefleet": {
    "Resources": [
     "fleet"
    ]
   },
   "updateproject": {
    "Resources": [
     "project"
    ]
   },
   "updateprojectvisibility": {
    "Resources": [
     "project"
    ]
   },
   "updatereport": {
    "Resources": [
     "report-group"
    ]
   },
   "updatereportgroup": {
    "Resources": [
     "report-group"
    ]
   },
   "updatewebhook": {
    "Resources": [
     "project"
    ]
   }
  },
  "Resources": {
   "build": {
    "ARNFormats": [
     "arn:${Partition}:codebuild:${Region}:${Account}:build/.*"
    ]
   },
   "build-batch": {
    "ARNFormats": [
     "arn:${Partition}:codebuild:${Region}:${Account}:build-batch/.*"
    ]
   },
   "fleet": {
    "ARNFormats": [
     "arn:${Partition}:codebuild:${Region}:${Account}:.*"
    ]
   },
   "project": {
    "ARNFormats": [
     "arn:${Partition}:codebuild:${Region}:${Account}:project/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "report": {
    "ARNFormats": [
     "arn:${Partition}:codebuild:${Region}:${Account}:.*"
    ]
   },
   "report-group": {
    "ARNFormats": [
     "arn:${Partition}:codebuild:${Region}:${Account}:report-group/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "codecatalyst": {
  "Actions": {
   "acceptconnection": {},
   "associateiamroletoconnection": {
    "Resources": [
     "connections"
    ]
   },
   "associateidentitycenterapplicationtospace": {
    "Resources": [
     "identity-center-applications"
    ]
   },
   "associateidentitytoidentitycenterapplication": {
    "Resources": [
     "identity-center-applications"
    ]
   },
   "batchassociateidentitiestoidentitycenterapplication": {
    "Resources": [
     "identity-center-applications"
    ]
   },
   "batchdisassociateidentitiesfromidentitycenterapplication": {
    "Resources": [
     "identity-center-applications"
    ]
   },
   "createidentitycenterapplication": {},
   "createspace": {},
   "createspaceadminroleassignment": {
    "Resources": [
     "identity-center-applications"
    ]
   },
   "deleteconnection": {
    "Resources": [
     "connections"
    ]
   },
   "deleteidentitycenterapplication": {
    "Resources": [
     "identity-center-applications"
    ]
   },
   "disassociateiamrolefromconnection": {
    "Resources": [
     "connections"
    ]
   },
   "disassociateidentitycenterapplicationfromspace": {
    "Resources": [
     "identity-center-applications"
    ]
   },
   "disassociateidentityfromidentitycenterapplication": {
    "Resources": [
     "identity-center-applications"
    ]
   },
   "getbillingauthorization": {
    "Resources": [
     "connections"
    ]
   },
   "getconnection": {
    "Resources": [
     "connections"
    ]
   },
   "getidentitycenterapplication": {
    "Resources": [
     "identity-center-applications"
    ]
   },
   "getpendingconnection": {},
   "listconnections": {},
   "listiamrolesforconnection": {
    "Resources": [
     "connections"
    ]
   },
   "listidentitycenterapplications": {},
   "listidentitycenterapplicationsforspace": {},
   "listspacesforidentitycenterapplication": {
    "Resources": [
     "identity-center-applications"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "connections",
     "identity-center-applications"
    ]
   },
   "putbillingauthorization": {
    "Resources": [
     "connections"
    ]
   },
   "rejectconnection": {},
   "synchronizeidentitycenterapplication": {
    "Resources": [
     "identity-center-applications"
    ]
   },
   "tagresource": {
    "Resources": [
     "connections",
     "identity-center-applications"
    ]
   },
   "untagresource": {
    "Resources": [
     "connections",
     "identity-center-applications"
    ]
   },
   "updateidentitycenterapplication": {
    "Resources": [
     "identity-center-applications"
    ]
   }
  },
  "Resources": {
   "connections": {
    "ARNFormats": [
     "arn:${Partition}:codecatalyst:${Region}:${Account}:/connections/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "identity-center-applications": {
    "ARNFormats": [
     "arn:${Partition}:codecatalyst:${Region}:${Account}:/identity-center-applications/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "project": {
    "ARNFormats": [
     "arn:${Partition}:codecatalyst:::space/.*"
    ]
   },
   "space": {
    "ARNFormats": [
     "arn:${Partition}:codecatalyst:::space/.*"
    ]
   }
  }
 },
 "codecommit": {
  "Actions": {
   "associateapprovalruletemplatewithrepository": {
    "Resources": [
     "repository"
    ]
   },
   "batchassociateapprovalruletemplatewithrepositories": {
    "Resources": [
     "repository"
    ]
   },
   "batchdescribemergeconflicts": {
    "Resources": [
     "repository"
    ]
   },
   "batchdisassociateapprovalruletemplatefromrepositories": {
    "Resources": [
     "repository"
    ]
   },
   "batchgetcommits": {
    "Resources": [
     "repository"
    ]
   },
   "batchgetpullrequests": {
    "Resources": [
     "repository"
    ]
   },
   "batchgetrepositories": {
    "Resources": [
     "repository"
    ]
   },
   "canceluploadarchive": {
    "Resources": [
     "repository"
    ]
   },
   "createapprovalruletemplate": {},
   "createbranch": {
    "Resources": [
     "repository"
    ]
   },
   "createcommit": {
    "Resources": [
     "repository"
    ]
   },
   "createpullrequest": {
    "Resources": [
     "repository"
    ]
   },
   "createpullrequestapprovalrule": {
    "Resources": [
     "repository"
    ]
   },
   "createrepository": {
    "Resources": [
     "repository"
    ]
   },
   "createunreferencedmergecommit": {
    "Resources": [
     "repository"
    ]
   },
   "deleteapprovalruletemplate": {},
   "deletebranch": {
    "Resources": [
     "repository"
    ]
   },
   "deletecommentcontent": {
    "Resources": [
     "repository"
    ]
   },
   "deletefile": {
    "Resources": [
     "repository"
    ]
   },
   "deletepullrequestapprovalrule": {
    "Resources": [
     "repository"
    ]
   },
   "deleterepository": {
    "Resources": [
     "repository"
    ]
   },
   "describemergeconflicts": {
    "Resources": [
     "repository"
    ]
   },
   "describepullrequestevents": {
    "Resources": [
     "repository"
    ]
   },
   "disassociateapprovalruletemplatefromrepository": {
    "Resources": [
     "repository"
    ]
   },
   "evaluatepullrequestapprovalrules": {
    "Resources": [
     "repository"
    ]
   },
   "getapprovalruletemplate": {},
   "getblob": {
    "Resources": [
     "repository"
    ]
   },
   "getbranch": {
    "Resources": [
     "repository"
    ]
   },
   "getcomment": {
    "Resources": [
     "repository"
    ]
   },
   "getcommentreactions": {
    "Resources": [
     "repository"
    ]
   },
   "getcommentsforcomparedcommit": {
    "Resources": [
     "repository"
    ]
   },
   "getcommentsforpullrequest": {
    "Resources": [
     "repository"
    ]
   },
   "getcommit": {
    "Resources": [
     "repository"
    ]
   },
   "getcommithistory": {
    "Resources": [
     "repository"
    ]
   },
   "getcommitsfrommergebase": {
    "Resources": [
     "repository"
    ]
   },
   "getdifferences": {
    "Resources": [
     "repository"
    ]
   },
   "getfile": {
    "Resources": [
     "repository"
    ]
   },
   "getfolder": {
    "Resources": [
     "repository"
    ]
   },
   "getmergecommit": {
    "Resources": [
     "repository"
    ]
   },
   "getmergeconflicts": {
    "Resources": [
     "repository"
    ]
   },
   "getmergeoptions": {
    "Resources": [
     "repository"
    ]
   },
   "getobjectidentifier": {
    "Resources": [
     "repository"
    ]
   },
   "getpullrequest": {
    "Resources": [
     "repository"
    ]
   },
   "getpullrequestapprovalstates": {
    "Resources": [
     "repository"
    ]
   },
   "getpullrequestoverridestate": {
    "Resources": [
     "repository"
    ]
   },
   "getreferences": {
    "Resources": [
     "repository"
    ]
   },
   "getrepository": {
    "Resources": [
     "repository"
    ]
   },
   "getrepositorytriggers": {
    "Resources": [
     "repository"
    ]
   },
   "gettree": {
    "Resources": [
     "repository"
    ]
   },
   "getuploadarchivestatus": {
    "Resources": [
     "repository"
    ]
   },
   "gitpull": {
    "Resources": [
     "repository"
    ]
   },
   "gitpush": {
    "Resources": [
     "repository"
    ]
   },
   "listapprovalruletemplates": {},
   "listassociatedapprovalruletemplatesforrepository": {
    "Resources": [
     "repository"
    ]
   },
   "listbranches": {
    "Resources": [
     "repository"
    ]
   },
   "listfilecommithistory": {
    "Resources": [
     "repository"
    ]
   },
   "listpullrequests": {
    "Resources": [
     "repository"
    ]
   },
   "listrepositories": {},
   "listrepositoriesforapprovalruletemplate": {},
   "listtagsforresource": {
    "Resources": [
     "repository"
    ]
   },
   "mergebranchesbyfastforward": {
    "Resources": [
     "repository"
    ]
   },
   "mergebranchesbysquash": {
    "Resources": [
     "repository"
    ]
   },
   "mergebranchesbythreeway": {
    "Resources": [
     "repository"
    ]
   },
   "mergepullrequestbyfastforward": {
    "Resources": [
     "repository"
    ]
   },
   "mergepullrequestbysquash": {
    "Resources": [
     "repository"
    ]
   },
   "mergepullrequestbythreeway": {
    "Resources": [
     "repository"
    ]
   },
   "overridepullrequestapprovalrules": {
    "Resources": [
     "repository"
    ]
   },
   "postcommentforcomparedcommit": {
    "Resources": [
     "repository"
    ]
   },
   "postcommentforpullrequest": {
    "Resources": [
     "repository"
    ]
   },
   "postcommentreply": {
    "Resources": [
     "repository"
    ]
   },
   "putcommentreaction": {
    "Resources": [
     "repository"
    ]
   },
   "putfile": {
    "Resources": [
     "repository"
    ]
   },
   "putrepositorytriggers": {
    "Resources": [
     "repository"
    ]
   },
   "tagresource": {
    "Resources": [
     "repository"
    ]
   },
   "testrepositorytriggers": {
    "Resources": [
     "repository"
    ]
   },
   "untagresource": {
    "Resources": [
     "repository"
    ]
   },
   "updateapprovalruletemplatecontent": {},
   "updateapprovalruletemplatedescription": {},
   "updateapprovalruletemplatename": {},
   "updatecomment": {
    "Resources": [
     "repository"
    ]
   },
   "updatedefaultbranch": {
    "Resources": [
     "repository"
    ]
   },
   "updatepullrequestapprovalrulecontent": {
    "Resources": [
     "repository"
    ]
   },
   "updatepullrequestapprovalstate": {
    "Resources": [
     "repository"
    ]
   },
   "updatepullrequestdescription": {
    "Resources": [
     "repository"
    ]
   },
   "updatepullrequeststatus": {
    "Resources": [
     "repository"
    ]
   },
   "updatepullrequesttitle": {
    "Resources": [
     "repository"
    ]
   },
   "updaterepositorydescription": {
    "Resources": [
     "repository"
    ]
   },
   "updaterepositoryencryptionkey": {
    "Resources": [
     "repository"
    ]
   },
   "updaterepositoryname": {
    "Resources": [
     "repository"
    ]
   },
   "uploadarchive": {
    "Resources": [
     "repository"
    ]
   }
  },
  "Resources": {
   "repository": {
    "ARNFormats": [
     "arn:${Partition}:codecommit:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "codeconnections": {
  "Actions": {
   "createconnection": {},
   "createhost": {},
   "createrepositorylink": {
    "Resources": [
     "Connection"
    ]
   },
   "createsyncconfiguration": {
    "Resources": [
     "RepositoryLink"
    ]
   },
   "deleteconnection": {
    "Resources": [
     "Connection"
    ]
   },
   "deletehost": {
    "Resources": [
     "Host"
    ]
   },
   "deleterepositorylink": {
    "Resources": [
     "RepositoryLink"
    ]
   },
   "deletesyncconfiguration": {},
   "getconnection": {
    "Resources": [
     "Connection"
    ]
   },
   "getconnectiontoken": {
    "Resources": [
     "Connection"
    ]
   },
   "gethost": {
    "Resources": [
     "Host"
    ]
   },
   "getindividualaccesstoken": {},
   "getinstallationurl": {},
   "getrepositorylink": {
    "Resources": [
     "RepositoryLink"
    ]
   },
   "getrepositorysyncstatus": {
    "Resources": [
     "RepositoryLink"
    ]
   },
   "getresourcesyncstatus": {},
   "getsyncblockersummary": {},
   "getsyncconfiguration": {},
   "listconnections": {
    "Resources": [
     "Connection"
    ]
   },
   "listhosts": {},
   "listinstallationtargets": {},
   "listrepositorylinks": {},
   "listrepositorysyncdefinitions": {},
   "listsyncconfigurations": {},
   "listtagsforresource": {
    "Resources": [
     "Connection",
     "Host",
     "RepositoryLink"
    ]
   },
   "passconnection": {
    "Resources": [
     "Connection"
    ]
   },
   "passrepository": {
    "Resources": [
     "RepositoryLink"
    ]
   },
   "registerappcode": {},
   "startappregistrationhandshake": {},
   "startoauthhandshake": {},
   "tagresource": {
    "Resources": [
     "Connection",
     "Host",
     "RepositoryLink"
    ]
   },
   "untagresource": {
    "Resources": [
     "Connection",
     "Host",
     "RepositoryLink"
    ]
   },
   "updateconnectioninstallation": {
    "Resources": [
     "Connection"
    ]
   },
   "updatehost": {
    "Resources": [
     "Host"
    ]
   },
   "updaterepositorylink": {
    "Resources": [
     "RepositoryLink"
    ]
   },
   "updatesyncblocker": {},
   "updatesyncconfiguration": {},
   "useconnection": {
    "Resources": [
     "Connection"
    ]
   }
  },
  "Resources": {
   "connection": {
    "ARNFormats": [
     "arn:${Partition}:codeconnections:${Region}:${Account}:connection/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "host": {
    "ARNFormats": [
     "arn:${Partition}:codeconnections:${Region}:${Account}:host/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "repositorylink": {
    "ARNFormats": [
     "arn:${Partition}:codeconnections:${Region}:${Account}:repository-link/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "codedeploy": {
  "Actions": {
   "addtagstoonpremisesinstances": {
    "Resources": [
     "instance"
    ]
   },
   "batchgetapplicationrevisions": {
    "Resources": [
     "application"
    ]
   },
   "batchgetapplications": {
    "Resources": [
     "application"
    ]
   },
   "batchgetdeploymentgroups": {
    "Resources": [
     "deploymentgroup"
    ]
   },
   "batchgetdeploymentinstances": {
    "Resources": [
     "deploymentgroup"
    ]
   },
   "batchgetdeployments": {
    "Resources": [
     "deploymentgroup"
    ]
   },
   "batchgetdeploymenttargets": {},
   "batchgetonpremisesinstances": {
    "Resources": [
     "instance"
    ]
   },
   "continuedeployment": {},
   "createapplication": {
    "Resources": [
     "application"
    ]
   },
   "createcloudformationdeployment": {},
   "createdeployment": {
    "Resources": [
     "deploymentgroup"
    ]
   },
   "createdeploymentconfig": {
    "Resources": [
     "deploymentconfig"
    ]
   },
   "createdeploymentgroup": {
    "Resources": [
     "deploymentgroup"
    ]
   },
   "deleteapplication": {
    "Resources": [
     "application"
    ]
   },
   "deletedeploymentconfig": {
    "Resources": [
     "deploymentconfig"
    ]
   },
   "deletedeploymentgroup": {
    "Resources": [
     "deploymentgroup"
    ]
   },
   "deletegithubaccounttoken": {},
   "deleteresourcesbyexternalid": {},
   "deregisteronpremisesinstance": {
    "Resources": [
     "instance"
    ]
   },
   "getapplication": {
    "Resources": [
     "application"
    ]
   },
   "getapplicationrevision": {
    "Resources": [
     "application"
    ]
   },
   "getdeployment": {
    "Resources": [
     "deploymentgroup"
    ]
   },
   "getdeploymentconfig": {
    "Resources": [
     "deploymentconfig"
    ]
   },
   "getdeploymentgroup": {
    "Resources": [
     "deploymentgroup"
    ]
   },
   "getdeploymentinstance": {
    "Resources": [
     "deploymentgroup"
    ]
   },
   "getdeploymenttarget": {},
   "getonpremisesinstance": {
    "Resources": [
     "instance"
    ]
   },
   "listapplicationrevisions": {
    "Resources": [
     "application"
    ]
   },
   "listapplications": {},
   "listdeploymentconfigs": {},
   "listdeploymentgroups": {
    "Resources": [
     "application"
    ]
   },
   "listdeploymentinstances": {
    "Resources": [
     "deploymentgroup"
    ]
   },
   "listdeployments": {
    "Resources": [
     "deploymentgroup"
    ]
   },
   "listdeploymenttargets": {},
   "listgithubaccounttokennames": {},
   "listonpremisesinstances": {},
   "listtagsforresource": {
    "Resources": [
     "application",
     "deploymentgroup"
    ]
   },
   "putlifecycleeventhookexecutionstatus": {},
   "registerapplicationrevision": {
    "Resources": [
     "application"
    ]
   },
   "registeronpremisesinstance": {
    "Resources": [
     "instance"
    ]
   },
   "removetagsfromonpremisesinstances": {
    "Resources": [
     "instance"
    ]
   },
   "skipwaittimeforinstancetermination": {},
   "stopdeployment": {},
   "tagresource": {
    "Resources": [
     "application",
     "deploymentgroup"
    ]
   },
   "untagresource": {
    "Resources": [
     "application",
     "deploymentgroup"
    ]
   },
   "updateapplication": {
    "Resources": [
     "application"
    ]
   },
   "updatedeploymentgroup": {
    "Resources": [
     "deploymentgroup"
    ]
   }
  },
  "Resources": {
   "application": {
    "ARNFormats": [
     "arn:${Partition}:codedeploy:${Region}:${Account}:application:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "deploymentconfig": {
    "ARNFormats": [
     "arn:${Partition}:codedeploy:${Region}:${Account}:deploymentconfig:.*"
    ]
   },
   "deploymentgroup": {
    "ARNFormats": [
     "arn:${Partition}:codedeploy:${Region}:${Account}:deploymentgroup:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "instance": {
    "ARNFormats": [
     "arn:${Partition}:codedeploy:${Region}:${Account}:instance:.*"
    ]
   }
  }
 },
 "codedeploy-commands-secure": {
  "Actions": {
   "getdeploymentspecification": {},
   "pollhostcommand": {},
   "puthostcommandacknowledgement": {},
   "puthostcommandcomplete": {}
  },
  "Resources": {}
 },
 "codeguru": {
  "Actions": {
   "getcodegurufreetrialsummary": {}
  },
  "Resources": {}
 },
 "codeguru-profiler": {
  "Actions": {
   "addnotificationchannels": {
    "Resources": [
     "ProfilingGroup"
    ]
   },
   "batchgetframemetricdata": {
    "Resources": [
     "ProfilingGroup"
    ]
   },
   "configureagent": {
    "Resources": [
     "ProfilingGroup"
    ]
   },
   "createprofilinggroup": {},
   "deleteprofilinggroup": {
    "Resources": [
     "ProfilingGroup"
    ]
   },
   "describeprofilinggroup": {
    "Resources": [
     "ProfilingGroup"
    ]
   },
   "getfindingsreportaccountsummary": {},
   "getnotificationconfiguration": {
    "Resources": [
     "ProfilingGroup"
    ]
   },
   "getpolicy": {
    "Resources": [
     "ProfilingGroup"
    ]
   },
   "getprofile": {
    "Resources": [
     "ProfilingGroup"
    ]
   },
   "getrecommendations": {
    "Resources": [
     "ProfilingGroup"
    ]
   },
   "listfindingsreports": {
    "Resources": [
     "ProfilingGroup"
    ]
   },
   "listprofiletimes": {
    "Resources": [
     "ProfilingGroup"
    ]
   },
   "listprofilinggroups": {},
   "listtagsforresource": {
    "Resources": [
     "ProfilingGroup"
    ]
   },
   "postagentprofile": {
    "Resources": [
     "ProfilingGroup"
    ]
   },
   "putpermission": {
    "Resources": [
     "ProfilingGroup"
    ]
   },
   "removenotificationchannel": {
    "Resources": [
     "ProfilingGroup"
    ]
   },
   "removepermission": {
    "Resources": [
     "ProfilingGroup"
    ]
   },
   "submitfeedback": {
    "Resources": [
     "ProfilingGroup"
    ]
   },
   "tagresource": {
    "Resources": [
     "ProfilingGroup"
    ]
   },
   "untagresource": {
    "Resources": [
     "ProfilingGroup"
    ]
   },
   "updateprofilinggroup": {
    "Resources": [
     "ProfilingGroup"
    ]
   }
  },
  "Resources": {
   "profilinggroup": {
    "ARNFormats": [
     "arn:${Partition}:codeguru-profiler:${Region}:${Account}:profilingGroup/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "codeguru-reviewer": {
  "Actions": {
   "associaterepository": {},
   "createcodereview": {
    "Resources": [
     "association"
    ]
   },
   "createconnectiontoken": {},
   "describecodereview": {
    "Resources": [
     "association"
    ]
   },
   "describerecommendationfeedback": {
    "Resources": [
     "association"
    ]
   },
   "describerepositoryassociation": {
    "Resources": [
     "association"
    ]
   },
   "disassociaterepository": {
    "Resources": [
     "association"
    ]
   },
   "getmetricsdata": {},
   "listcodereviews": {},
   "listrecommendationfeedback": {
    "Resources": [
     "association"
    ]
   },
   "listrecommendations": {
    "Resources": [
     "association"
    ]
   },
   "listrepositoryassociations": {},
   "listtagsforresource": {
    "Resources": [
     "association"
    ]
   },
   "listthirdpartyrepositories": {},
   "putrecommendationfeedback": {
    "Resources": [
     "association"
    ]
   },
   "tagresource": {
    "Resources": [
     "association"
    ]
   },
   "untagresource": {
    "Resources": [
     "association"
    ]
   }
  },
  "Resources": {
   "association": {
    "ARNFormats": [
     "arn:${Partition}:codeguru-reviewer:${Region}:${Account}:association:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "codereview": {
    "ARNFormats": [
     "arn:${Partition}:codeguru-reviewer:${Region}:${Account}:association:.*"
    ]
   }
  }
 },
 "codeguru-security": {
  "Actions": {
   "batchgetfindings": {
    "Resources": [
     "ScanName"
    ]
   },
   "createscan": {
    "Resources": [
     "ScanName"
    ]
   },
   "createuploadurl": {
    "Resources": [
     "ScanName"
    ]
   },
   "deletescansbycategory": {},
   "getaccountconfiguration": {},
   "getfindings": {
    "Resources": [
     "ScanName"
    ]
   },
   "getmetricssummary": {},
   "getscan": {
    "Resources": [
     "ScanName"
    ]
   },
   "listfindings": {},
   "listfindingsmetrics": {},
   "listscans": {},
   "listtagsforresource": {
    "Resources": [
     "ScanName"
    ]
   },
   "tagresource": {
    "Resources": [
     "ScanName"
    ]
   },
   "untagresource": {
    "Resources": [
     "ScanName"
    ]
   },
   "updateaccountconfiguration": {}
  },
  "Resources": {
   "scanname": {
    "ARNFormats": [
     "arn:${Partition}:codeguru-security:${Region}:${Account}:scans/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "codepipeline": {
  "Actions": {
   "acknowledgejob": {},
   "acknowledgethirdpartyjob": {},
   "createcustomactiontype": {
    "Resources": [
     "actiontype"
    ]
   },
   "createpipeline": {
    "Resources": [
     "pipeline"
    ]
   },
   "deletecustomactiontype": {
    "Resources": [
     "actiontype"
    ]
   },
   "deletepipeline": {
    "Resources": [
     "pipeline"
    ]
   },
   "deletewebhook": {
    "Resources": [
     "webhook"
    ]
   },
   "deregisterwebhookwiththirdparty": {
    "Resources": [
     "webhook"
    ]
   },
   "disablestagetransition": {
    "Resources": [
     "stage"
    ]
   },
   "enablestagetransition": {
    "Resources": [
     "stage"
    ]
   },
   "getactiontype": {},
   "getjobdetails": {},
   "getpipeline": {
    "Resources": [
     "pipeline"
    ]
   },
   "getpipelineexecution": {
    "Resources": [
     "pipeline"
    ]
   },
   "getpipelinestate": {
    "Resources": [
     "pipeline"
    ]
   },
   "getthirdpartyjobdetails": {},
   "listactionexecutions": {
    "Resources": [
     "pipeline"
    ]
   },
   "listactiontypes": {},
   "listpipelineexecutions": {
    "Resources": [
     "pipeline"
    ]
   },
   "listpipelines": {},
   "listruleexecutions": {
    "Resources": [
     "pipeline"
    ]
   },
   "listruletypes": {},
   "listtagsforresource": {
    "Resources": [
     "actiontype",
     "pipeline",
     "webhook"
    ]
   },
   "listwebhooks": {
    "Resources": [
     "webhook"
    ]
   },
   "overridestagecondition": {
    "Resources": [
     "stage"
    ]
   },
   "pollforjobs": {
    "Resources": [
     "actiontype"
    ]
   },
   "pollforthirdpartyjobs": {},
   "putactionrevision": {
    "Resources": [
     "action"
    ]
   },
   "putapprovalresult": {
    "Resources": [
     "action"
    ]
   },
   "putjobfailureresult": {},
   "putjobsuccessresult": {},
   "putthirdpartyjobfailureresult": {},
   "putthirdpartyjobsuccessresult": {},
   "putwebhook": {
    "Resources": [
     "pipeline",
     "webhook"
    ]
   },
   "registerwebhookwiththirdparty": {
    "Resources": [
     "webhook"
    ]
   },
   "retrystageexecution": {
    "Resources": [
     "stage"
    ]
   },
   "rollbackstage": {
    "Resources": [
     "stage"
    ]
   },
   "startpipelineexecution": {
    "Resources": [
     "pipeline"
    ]
   },
   "stoppipelineexecution": {
    "Resources": [
     "pipeline"
    ]
   },
   "tagresource": {
    "Resources": [
     "actiontype",
     "pipeline",
     "webhook"
    ]
   },
   "untagresource": {
    "Resources": [
     "actiontype",
     "pipeline",
     "webhook"
    ]
   },
   "updateactiontype": {
    "Resources": [
     "actiontype"
    ]
   },
   "updatepipeline": {
    "Resources": [
     "pipeline"
    ]
   }
  },
  "Resources": {
   "action": {
    "ARNFormats": [
     "arn:${Partition}:codepipeline:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "actiontype": {
    "ARNFormats": [
     "arn:${Partition}:codepipeline:${Region}:${Account}:actiontype:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "pipeline": {
    "ARNFormats": [
     "arn:${Partition}:codepipeline:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "stage": {
    "ARNFormats": [
     "arn:${Partition}:codepipeline:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "webhook": {
    "ARNFormats": [
     "arn:${Partition}:codepipeline:${Region}:${Account}:webhook:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "codestar": {
  "Actions": {
   "associateteammember": {
    "Resources": [
     "project"
    ]
   },
   "createproject": {},
   "createuserprofile": {
    "Resources": [
     "user"
    ]
   },
   "deleteextendedaccess": {
    "Resources": [
     "project"
    ]
   },
   "deleteproject": {
    "Resources": [
     "project"
    ]
   },
   "deleteuserprofile": {
    "Resources": [
     "user"
    ]
   },
   "describeproject": {
    "Resources": [
     "project"
    ]
   },
   "describeuserprofile": {},
   "disassociateteammember": {
    "Resources": [
     "project"
    ]
   },
   "getextendedaccess": {
    "Resources": [
     "project"
    ]
   },
   "listprojects": {},
   "listresources": {
    "Resources": [
     "project"
    ]
   },
   "listtagsforproject": {
    "Resources": [
     "project"
    ]
   },
   "listteammembers": {
    "Resources": [
     "project"
    ]
   },
   "listuserprofiles": {},
   "putextendedaccess": {
    "Resources": [
     "project"
    ]
   },
   "tagproject": {
    "Resources": [
     "project"
    ]
   },
   "untagproject": {
    "Resources": [
     "project"
    ]
   },
   "updateproject": {
    "Resources": [
     "project"
    ]
   },
   "updateteammember": {
    "Resources": [
     "project"
    ]
   },
   "updateuserprofile": {
    "Resources": [
     "user"
    ]
   },
   "verifyservicerole": {}
  },
  "Resources": {
   "project": {
    "ARNFormats": [
     "arn:${Partition}:codestar:${Region}:${Account}:project/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "user": {
    "ARNFormats": [
     "arn:${Partition}:iam::${Account}:user/.*"
    ],
    "ConditionKeys": [
     "iam:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "codestar-connections": {
  "Actions": {
   "createconnection": {},
   "createhost": {},
   "createrepositorylink": {
    "Resources": [
     "Connection"
    ]
   },
   "createsyncconfiguration": {
    "Resources": [
     "RepositoryLink"
    ]
   },
   "deleteconnection": {
    "Resources": [
     "Connection"
    ]
   },
   "deletehost": {
    "Resources": [
     "Host"
    ]
   },
   "deleterepositorylink": {
    "Resources": [
     "RepositoryLink"
    ]
   },
   "deletesyncconfiguration": {},
   "getconnection": {
    "Resources": [
     "Connection"
    ]
   },
   "getconnectiontoken": {
    "Resources": [
     "Connection"
    ]
   },
   "gethost": {
    "Resources": [
     "Host"
    ]
   },
   "getindividualaccesstoken": {},
   "getinstallationurl": {},
   "getrepositorylink": {
    "Resources": [
     "RepositoryLink"
    ]
   },
   "getrepositorysyncstatus": {
    "Resources": [
     "RepositoryLink"
    ]
   },
   "getresourcesyncstatus": {},
   "getsyncblockersummary": {},
   "getsyncconfiguration": {},
   "listconnections": {
    "Resources": [
     "Connection"
    ]
   },
   "listhosts": {},
   "listinstallationtargets": {},
   "listrepositorylinks": {},
   "listrepositorysyncdefinitions": {},
   "listsyncconfigurations": {},
   "listtagsforresource": {
    "Resources": [
     "Connection",
     "Host",
     "RepositoryLink"
    ]
   },
   "passconnection": {
    "Resources": [
     "Connection"
    ]
   },
   "passrepository": {
    "Resources": [
     "RepositoryLink"
    ]
   },
   "registerappcode": {},
   "startappregistrationhandshake": {},
   "startoauthhandshake": {},
   "tagresource": {
    "Resources": [
     "Connection",
     "Host",
     "RepositoryLink"
    ]
   },
   "untagresource": {
    "Resources": [
     "Connection",
     "Host",
     "RepositoryLink"
    ]
   },
   "updateconnectioninstallation": {
    "Resources": [
     "Connection"
    ]
   },
   "updatehost": {
    "Resources": [
     "Host"
    ]
   },
   "updaterepositorylink": {
    "Resources": [
     "RepositoryLink"
    ]
   },
   "updatesyncblocker": {},
   "updatesyncconfiguration": {},
   "useconnection": {
    "Resources": [
     "Connection"
    ]
   }
  },
  "Resources": {
   "connection": {
    "ARNFormats": [
     "arn:${Partition}:codestar-connections:${Region}:${Account}:connection/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "host": {
    "ARNFormats": [
     "arn:${Partition}:codestar-connections:${Region}:${Account}:host/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "repositorylink": {
    "ARNFormats": [
     "arn:${Partition}:codestar-connections:${Region}:${Account}:repository-link/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "codestar-notifications": {
  "Actions": {
   "createnotificationrule": {
    "Resources": [
     "notificationrule"
    ]
   },
   "deletenotificationrule": {
    "Resources": [
     "notificationrule"
    ]
   },
   "deletetarget": {},
   "describenotificationrule": {
    "Resources": [
     "notificationrule"
    ]
   },
   "listeventtypes": {},
   "listnotificationrules": {},
   "listtagsforresource": {
    "Resources": [
     "notificationrule"
    ]
   },
   "listtargets": {},
   "subscribe": {
    "Resources": [
     "notificationrule"
    ]
   },
   "tagresource": {
    "Resources": [
     "notificationrule"
    ]
   },
   "unsubscribe": {
    "Resources": [
     "notificationrule"
    ]
   },
   "untagresource": {
    "Resources": [
     "notificationrule"
    ]
   },
   "updatenotificationrule": {
    "Resources": [
     "notificationrule"
    ]
   }
  },
  "Resources": {
   "notificationrule": {
    "ARNFormats": [
     "arn:${Partition}:codestar-notifications:${Region}:${Account}:notificationrule/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "codewhisperer": {
  "Actions": {
   "allowvendedlogdeliveryforresource": {
    "Resources": [
     "customization"
    ]
   },
   "associatecustomizationpermission": {
    "Resources": [
     "customization"
    ]
   },
   "createcustomization": {
    "Resources": [
     "customization"
    ]
   },
   "createprofile": {
    "Resources": [
     "profile"
    ]
   },
   "deletecustomization": {
    "Resources": [
     "customization"
    ]
   },
   "deleteprofile": {
    "Resources": [
     "profile"
    ]
   },
   "disassociatecustomizationpermission": {
    "Resources": [
     "customization"
    ]
   },
   "generaterecommendations": {},
   "getcustomization": {
    "Resources": [
     "customization"
    ]
   },
   "listcustomizationpermissions": {
    "Resources": [
     "customization"
    ]
   },
   "listcustomizations": {
    "Resources": [
     "customization"
    ]
   },
   "listcustomizationversions": {
    "Resources": [
     "customization"
    ]
   },
   "listprofiles": {},
   "listtagsforresource": {
    "Resources": [
     "customization",
     "profile"
    ]
   },
   "tagresource": {
    "Resources": [
     "customization",
     "profile"
    ]
   },
   "untagresource": {
    "Resources": [
     "customization",
     "profile"
    ]
   },
   "updatecustomization": {
    "Resources": [
     "customization"
    ]
   },
   "updateprofile": {
    "Resources": [
     "profile"
    ]
   }
  },
  "Resources": {
   "customization": {
    "ARNFormats": [
     "arn:${Partition}:codewhisperer:${Region}:${Account}:customization/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "profile": {
    "ARNFormats": [
     "arn:${Partition}:codewhisperer:${Region}:${Account}:profile/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "cognito-identity": {
  "Actions": {
   "createidentitypool": {},
   "deleteidentities": {},
   "deleteidentitypool": {
    "Resources": [
     "identitypool"
    ]
   },
   "describeidentity": {},
   "describeidentitypool": {
    "Resources": [
     "identitypool"
    ]
   },
   "getcredentialsforidentity": {},
   "getid": {},
   "getidentitypoolanalytics": {
    "Resources": [
     "identitypool"
    ]
   },
   "getidentitypooldailyanalytics": {
    "Resources": [
     "identitypool"
    ]
   },
   "getidentitypoolroles": {
    "Resources": [
     "identitypool"
    ]
   },
   "getidentityproviderdailyanalytics": {
    "Resources": [
     "identitypool"
    ]
   },
   "getopenidtoken": {},
   "getopenidtokenfordeveloperidentity": {
    "Resources": [
     "identitypool"
    ]
   },
   "getprincipaltagattributemap": {
    "Resources": [
     "identitypool"
    ]
   },
   "listidentities": {
    "Resources": [
     "identitypool"
    ]
   },
   "listidentitypools": {},
   "listtagsforresource": {
    "Resources": [
     "identitypool"
    ]
   },
   "lookupdeveloperidentity": {
    "Resources": [
     "identitypool"
    ]
   },
   "mergedeveloperidentities": {
    "Resources": [
     "identitypool"
    ]
   },
   "setidentitypoolroles": {},
   "setprincipaltagattributemap": {},
   "tagresource": {
    "Resources": [
     "identitypool"
    ]
   },
   "unlinkdeveloperidentity": {
    "Resources": [
     "identitypool"
    ]
   },
   "unlinkidentity": {},
   "untagresource": {
    "Resources": [
     "identitypool"
    ]
   },
   "updateidentitypool": {
    "Resources": [
     "identitypool"
    ]
   }
  },
  "Resources": {
   "identitypool": {
    "ARNFormats": [
     "arn:${Partition}:cognito-identity:${Region}:${Account}:identitypool/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "cognito-idp": {
  "Actions": {
   "addcustomattributes": {
    "Resources": [
     "userpool"
    ]
   },
   "adminaddusertogroup": {
    "Resources": [
     "userpool"
    ]
   },
   "adminconfirmsignup": {
    "Resources": [
     "userpool"
    ]
   },
   "admincreateuser": {
    "Resources": [
     "userpool"
    ]
   },
   "admindeleteuser": {
    "Resources": [
     "userpool"
    ]
   },
   "admindeleteuserattributes": {
    "Resources": [
     "userpool"
    ]
   },
   "admindisableproviderforuser": {
    "Resources": [
     "userpool"
    ]
   },
   "admindisableuser": {
    "Resources": [
     "userpool"
    ]
   },
   "adminenableuser": {
    "Resources": [
     "userpool"
    ]
   },
   "adminforgetdevice": {
    "Resources": [
     "userpool"
    ]
   },
   "admingetdevice": {
    "Resources": [
     "userpool"
    ]
   },
   "admingetuser": {
    "Resources": [
     "userpool"
    ]
   },
   "admininitiateauth": {
    "Resources": [
     "userpool"
    ]
   },
   "adminlinkproviderforuser": {
    "Resources": [
     "userpool"
    ]
   },
   "adminlistdevices": {
    "Resources": [
     "userpool"
    ]
   },
   "adminlistgroupsforuser": {
    "Resources": [
     "userpool"
    ]
   },
   "adminlistuserauthevents": {
    "Resources": [
     "userpool"
    ]
   },
   "adminremoveuserfromgroup": {
    "Resources": [
     "userpool"
    ]
   },
   "adminresetuserpassword": {
    "Resources": [
     "userpool"
    ]
   },
   "adminrespondtoauthchallenge": {
    "Resources": [
     "userpool"
    ]
   },
   "adminsetusermfapreference": {
    "Resources": [
     "userpool"
    ]
   },
   "adminsetuserpassword": {
    "Resources": [
     "userpool"
    ]
   },
   "adminsetusersettings": {
    "Resources": [
     "userpool"
    ]
   },
   "adminupdateautheventfeedback": {
    "Resources": [
     "userpool"
    ]
   },
   "adminupdatedevicestatus": {
    "Resources": [
     "userpool"
    ]
   },
   "adminupdateuserattributes": {
    "Resources": [
     "userpool"
    ]
   },
   "adminuserglobalsignout": {
    "Resources": [
     "userpool"
    ]
   },
   "associatesoftwaretoken": {},
   "associatewebacl": {
    "Resources": [
     "userpool",
     "webacl"
    ]
   },
   "changepassword": {},
   "confirmdevice": {},
   "confirmforgotpassword": {},
   "confirmsignup": {},
   "creategroup": {
    "Resources": [
     "userpool"
    ]
   },
   "createidentityprovider": {
    "Resources": [
     "userpool"
    ]
   },
   "createmanagedloginbranding": {
    "Resources": [
     "userpool"
    ]
   },
   "createresourceserver": {
    "Resources": [
     "userpool"
    ]
   },
   "createuserimportjob": {
    "Resources": [
     "userpool"
    ]
   },
   "createuserpool": {},
   "createuserpoolclient": {
    "Resources": [
     "userpool"
    ]
   },
   "createuserpooldomain": {
    "Resources": [
     "userpool"
    ]
   },
   "deletegroup": {
    "Resources": [
     "userpool"
    ]
   },
   "deleteidentityprovider": {
    "Resources": [
     "userpool"
    ]
   },
   "deletemanagedloginbranding": {
    "Resources": [
     "userpool"
    ]
   },
   "deleteresourceserver": {
    "Resources": [
     "userpool"
    ]
   },
   "deleteuser": {},
   "deleteuserattributes": {},
   "deleteuserpool": {
    "Resources": [
     "userpool"
    ]
   },
   "deleteuserpoolclient": {
    "Resources": [
     "userpool"
    ]
   },
   "deleteuserpooldomain": {
    "Resources": [
     "userpool"
    ]
   },
   "describeidentityprovider": {
    "Resources": [
     "userpool"
    ]
   },
   "describemanagedloginbranding": {
    "Resources": [
     "userpool"
    ]
   },
   "describemanagedloginbrandingbyclient": {
    "Resources": [
     "userpool"
    ]
   },
   "describeresourceserver": {
    "Resources": [
     "userpool"
    ]
   },
   "describeriskconfiguration": {
    "Resources": [
     "userpool"
    ]
   },
   "describeuserimportjob": {
    "Resources": [
     "userpool"
    ]
   },
   "describeuserpool": {
    "Resources": [
     "userpool"
    ]
   },
   "describeuserpoolclient": {
    "Resources": [
     "userpool"
    ]
   },
   "describeuserpooldomain": {},
   "disassociatewebacl": {
    "Resources": [
     "userpool"
    ]
   },
   "forgetdevice": {},
   "forgotpassword": {},
   "getcsvheader": {
    "Resources": [
     "userpool"
    ]
   },
   "getdevice": {},
   "getgroup": {
    "Resources": [
     "userpool"
    ]
   },
   "getidentityproviderbyidentifier": {
    "Resources": [
     "userpool"
    ]
   },
   "getlogdeliveryconfiguration": {
    "Resources": [
     "userpool"
    ]
   },
   "getsigningcertificate": {
    "Resources": [
     "userpool"
    ]
   },
   "getuicustomization": {
    "Resources": [
     "userpool"
    ]
   },
   "getuser": {},
   "getuserattributeverificationcode": {},
   "getuserpoolmfaconfig": {
    "Resources": [
     "userpool"
    ]
   },
   "getwebaclforresource": {
    "Resources": [
     "userpool"
    ]
   },
   "globalsignout": {},
   "initiateauth": {},
   "listdevices": {},
   "listgroups": {
    "Resources": [
     "userpool"
    ]
   },
   "listidentityproviders": {
    "Resources": [
     "userpool"
    ]
   },
   "listresourceservers": {
    "Resources": [
     "userpool"
    ]
   },
   "listresourcesforwebacl": {
    "Resources": [
     "webacl"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "userpool"
    ]
   },
   "listuserimportjobs": {
    "Resources": [
     "userpool"
    ]
   },
   "listuserpoolclients": {
    "Resources": [
     "userpool"
    ]
   },
   "listuserpools": {},
   "listusers": {
    "Resources": [
     "userpool"
    ]
   },
   "listusersingroup": {
    "Resources": [
     "userpool"
    ]
   },
   "resendconfirmationcode": {},
   "respondtoauthchallenge": {},
   "revoketoken": {},
   "setlogdeliveryconfiguration": {
    "Resources": [
     "userpool"
    ]
   },
   "setriskconfiguration": {
    "Resources": [
     "userpool"
    ]
   },
   "setuicustomization": {
    "Resources": [
     "userpool"
    ]
   },
   "setusermfapreference": {},
   "setuserpoolmfaconfig": {
    "Resources": [
     "userpool"
    ]
   },
   "setusersettings": {},
   "signup": {},
   "startuserimportjob": {
    "Resources": [
     "userpool"
    ]
   },
   "stopuserimportjob": {
    "Resources": [
     "userpool"
    ]
   },
   "tagresource": {
    "Resources": [
     "userpool"
    ]
   },
   "untagresource": {
    "Resources": [
     "userpool"
    ]
   },
   "updateautheventfeedback": {
    "Resources": [
     "userpool"
    ]
   },
   "updatedevicestatus": {},
   "updategroup": {
    "Resources": [
     "userpool"
    ]
   },
   "updateidentityprovider": {
    "Resources": [
     "userpool"
    ]
   },
   "updatemanagedloginbranding": {
    "Resources": [
     "userpool"
    ]
   },
   "updateresourceserver": {
    "Resources": [
     "userpool"
    ]
   },
   "updateuserattributes": {},
   "updateuserpool": {
    "Resources": [
     "userpool"
    ]
   },
   "updateuserpoolclient": {
    "Resources": [
     "userpool"
    ]
   },
   "updateuserpooldomain": {
    "Resources": [
     "userpool"
    ]
   },
   "verifysoftwaretoken": {},
   "verifyuserattribute": {}
  },
  "Resources": {
   "userpool": {
    "ARNFormats": [
     "arn:${Partition}:cognito-idp:${Region}:${Account}:userpool/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "webacl": {
    "ARNFormats": [
     "arn:${Partition}:wafv2:${Region}:${Account}:.*"
    ]
   }
  }
 },
 "cognito-sync": {
  "Actions": {
   "bulkpublish": {
    "Resources": [
     "identitypool"
    ]
   },
   "deletedataset": {
    "Resources": [
     "dataset"
    ]
   },
   "describedataset": {
    "Resources": [
     "dataset"
    ]
   },
   "describeidentitypoolusage": {
    "Resources": [
     "identitypool"
    ]
   },
   "describeidentityusage": {
    "Resources": [
     "identity"
    ]
   },
   "getbulkpublishdetails": {
    "Resources": [
     "identitypool"
    ]
   },
   "getcognitoevents": {
    "Resources": [
     "identitypool"
    ]
   },
   "getidentitypoolconfiguration": {
    "Resources": [
     "identitypool"
    ]
   },
   "listdatasets": {
    "Resources": [
     "dataset"
    ]
   },
   "listidentitypoolusage": {
    "Resources": [
     "identitypool"
    ]
   },
   "listrecords": {
    "Resources": [
     "dataset"
    ]
   },
   "queryrecords": {},
   "registerdevice": {
    "Resources": [
     "identity"
    ]
   },
   "setcognitoevents": {
    "Resources": [
     "identitypool"
    ]
   },
   "setdatasetconfiguration": {
    "Resources": [
     "dataset"
    ]
   },
   "setidentitypoolconfiguration": {
    "Resources": [
     "identitypool"
    ]
   },
   "subscribetodataset": {
    "Resources": [
     "dataset"
    ]
   },
   "unsubscribefromdataset": {
    "Resources": [
     "dataset"
    ]
   },
   "updaterecords": {
    "Resources": [
     "dataset"
    ]
   }
  },
  "Resources": {
   "dataset": {
    "ARNFormats": [
     "arn:${Partition}:cognito-sync:${Region}:${Account}:identitypool/.*"
    ]
   },
   "identity": {
    "ARNFormats": [
     "arn:${Partition}:cognito-sync:${Region}:${Account}:identitypool/.*"
    ]
   },
   "identitypool": {
    "ARNFormats": [
     "arn:${Partition}:cognito-sync:${Region}:${Account}:identitypool/.*"
    ]
   }
  }
 },
 "comprehend": {
  "Actions": {
   "batchdetectdominantlanguage": {},
   "batchdetectentities": {},
   "batchdetectkeyphrases": {},
   "batchdetectsentiment": {},
   "batchdetectsyntax": {},
   "batchdetecttargetedsentiment": {},
   "classifydocument": {
    "Resources": [
     "document-classifier-endpoint"
    ]
   },
   "containspiientities": {},
   "createdataset": {
    "Resources": [
     "flywheel"
    ]
   },
   "createdocumentclassifier": {
    "Resources": [
     "document-classifier"
    ]
   },
   "createendpoint": {
    "Resources": [
     "document-classifier",
     "document-classifier-endpoint",
     "entity-recognizer",
     "entity-recognizer-endpoint",
     "flywheel"
    ]
   },
   "createentityrecognizer": {
    "Resources": [
     "entity-recognizer"
    ]
   },
   "createflywheel": {
    "Resources": [
     "document-classifier",
     "entity-recognizer",
     "flywheel"
    ]
   },
   "deletedocumentclassifier": {
    "Resources": [
     "document-classifier"
    ]
   },
   "deleteendpoint": {
    "Resources": [
     "document-classifier-endpoint",
     "entity-recognizer-endpoint"
    ]
   },
   "deleteentityrecognizer": {
    "Resources": [
     "entity-recognizer"
    ]
   },
   "deleteflywheel": {
    "Resources": [
     "flywheel"
    ]
   },
   "deleteresourcepolicy": {
    "Resources": [
     "document-classifier",
     "entity-recognizer"
    ]
   },
   "describedataset": {
    "Resources": [
     "flywheel-dataset"
    ]
   },
   "describedocumentclassificationjob": {
    "Resources": [
     "document-classification-job"
    ]
   },
   "describedocumentclassifier": {
    "Resources": [
     "document-classifier"
    ]
   },
   "describedominantlanguagedetectionjob": {
    "Resources": [
     "dominant-language-detection-job"
    ]
   },
   "describeendpoint": {
    "Resources": [
     "document-classifier-endpoint",
     "entity-recognizer-endpoint"
    ]
   },
   "describeentitiesdetectionjob": {
    "Resources": [
     "entities-detection-job"
    ]
   },
   "describeentityrecognizer": {
    "Resources": [
     "entity-recognizer"
    ]
   },
   "describeeventsdetectionjob": {
    "Resources": [
     "events-detection-job"
    ]
   },
   "describeflywheel": {
    "Resources": [
     "flywheel"
    ]
   },
   "describeflywheeliteration": {
    "Resources": [
     "flywheel"
    ]
   },
   "describekeyphrasesdetectionjob": {
    "Resources": [
     "key-phrases-detection-job"
    ]
   },
   "describepiientitiesdetectionjob": {
    "Resources": [
     "pii-entities-detection-job"
    ]
   },
   "describeresourcepolicy": {
    "Resources": [
     "document-classifier",
     "entity-recognizer"
    ]
   },
   "describesentimentdetectionjob": {
    "Resources": [
     "sentiment-detection-job"
    ]
   },
   "describetargetedsentimentdetectionjob": {
    "Resources": [
     "targeted-sentiment-detection-job"
    ]
   },
   "describetopicsdetectionjob": {
    "Resources": [
     "topics-detection-job"
    ]
   },
   "detectdominantlanguage": {},
   "detectentities": {
    "Resources": [
     "entity-recognizer-endpoint"
    ]
   },
   "detectkeyphrases": {},
   "detectpiientities": {},
   "detectsentiment": {},
   "detectsyntax": {},
   "detecttargetedsentiment": {},
   "detecttoxiccontent": {},
   "importmodel": {
    "Resources": [
     "document-classifier",
     "entity-recognizer"
    ]
   },
   "listdatasets": {
    "Resources": [
     "flywheel"
    ]
   },
   "listdocumentclassificationjobs": {},
   "listdocumentclassifiers": {},
   "listdocumentclassifiersummaries": {},
   "listdominantlanguagedetectionjobs": {},
   "listendpoints": {},
   "listentitiesdetectionjobs": {},
   "listentityrecognizers": {},
   "listentityrecognizersummaries": {},
   "listeventsdetectionjobs": {},
   "listflywheeliterationhistory": {
    "Resources": [
     "flywheel"
    ]
   },
   "listflywheels": {},
   "listkeyphrasesdetectionjobs": {},
   "listpiientitiesdetectionjobs": {},
   "listsentimentdetectionjobs": {},
   "listtagsforresource": {
    "Resources": [
     "document-classification-job",
     "document-classifier",
     "document-classifier-endpoint",
     "dominant-language-detection-job",
     "entities-detection-job",
     "entity-recognizer",
     "entity-recognizer-endpoint",
     "events-detection-job",
     "flywheel",
     "flywheel-dataset",
     "key-phrases-detection-job",
     "pii-entities-detection-job",
     "sentiment-detection-job",
     "targeted-sentiment-detection-job",
     "topics-detection-job"
    ]
   },
   "listtargetedsentimentdetectionjobs": {},
   "listtopicsdetectionjobs": {},
   "putresourcepolicy": {
    "Resources": [
     "document-classifier",
     "entity-recognizer"
    ]
   },
   "startdocumentclassificationjob": {
    "Resources": [
     "document-classification-job",
     "document-classifier",
     "flywheel"
    ]
   },
   "startdominantlanguagedetectionjob": {
    "Resources": [
     "dominant-language-detection-job"
    ]
   },
   "startentitiesdetectionjob": {
    "Resources": [
     "entities-detection-job",
     "entity-recognizer",
     "flywheel"
    ]
   },
   "starteventsdetectionjob": {
    "Resources": [
     "events-detection-job"
    ]
   },
   "startflywheeliteration": {
    "Resources": [
     "flywheel"
    ]
   },
   "startkeyphrasesdetectionjob": {
    "Resources": [
     "key-phrases-detection-job"
    ]
   },
   "startpiientitiesdetectionjob": {
    "Resources": [
     "pii-entities-detection-job"
    ]
   },
   "startsentimentdetectionjob": {
    "Resources": [
     "sentiment-detection-job"
    ]
   },
   "starttargetedsentimentdetectionjob": {
    "Resources": [
     "targeted-sentiment-detection-job"
    ]
   },
   "starttopicsdetectionjob": {
    "Resources": [
     "topics-detection-job"
    ]
   },
   "stopdominantlanguagedetectionjob": {
    "Resources": [
     "dominant-language-detection-job"
    ]
   },
   "stopentitiesdetectionjob": {
    "Resources": [
     "entities-detection-job"
    ]
   },
   "stopeventsdetectionjob": {
    "Resources": [
     "events-detection-job"
    ]
   },
   "stopkeyphrasesdetectionjob": {
    "Resources": [
     "key-phrases-detection-job"
    ]
   },
   "stoppiientitiesdetectionjob": {
    "Resources": [
     "pii-entities-detection-job"
    ]
   },
   "stopsentimentdetectionjob": {
    "Resources": [
     "sentiment-detection-job"
    ]
   },
   "stoptargetedsentimentdetectionjob": {
    "Resources": [
     "targeted-sentiment-detection-job"
    ]
   },
   "stoptrainingdocumentclassifier": {
    "Resources": [
     "document-classifier"
    ]
   },
   "stoptrainingentityrecognizer": {
    "Resources": [
     "entity-recognizer"
    ]
   },
   "tagresource": {
    "Resources": [
     "document-classification-job",
     "document-classifier",
     "document-classifier-endpoint",
     "dominant-language-detection-job",
     "entities-detection-job",
     "entity-recognizer",
     "entity-recognizer-endpoint",
     "events-detection-job",
     "flywheel",
     "flywheel-dataset",
     "key-phrases-detection-job",
     "pii-entities-detection-job",
     "sentiment-detection-job",
     "targeted-sentiment-detection-job",
     "topics-detection-job"
    ]
   },
   "untagresource": {
    "Resources": [
     "document-classification-job",
     "document-classifier",
     "document-classifier-endpoint",
     "dominant-language-detection-job",
     "entities-detection-job",
     "entity-recognizer",
     "entity-recognizer-endpoint",
     "events-detection-job",
     "flywheel",
     "flywheel-dataset",
     "key-phrases-detection-job",
     "pii-entities-detection-job",
     "sentiment-detection-job",
     "targeted-sentiment-detection-job",
     "topics-detection-job"
    ]
   },
   "updateendpoint": {
    "Resources": [
     "document-classifier-endpoint",
     "entity-recognizer-endpoint",
     "flywheel"
    ]
   },
   "updateflywheel": {
    "Resources": [
     "document-classifier",
     "entity-recognizer",
     "flywheel"
    ]
   }
  },
  "Resources": {
   "document-classification-job": {
    "ARNFormats": [
     "arn:${Partition}:comprehend:${Region}:${Account}:document-classification-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "document-classifier": {
    "ARNFormats": [
     "arn:${Partition}:comprehend:${Region}:${Account}:document-classifier/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "document-classifier-endpoint": {
    "ARNFormats": [
     "arn:${Partition}:comprehend:${Region}:${Account}:document-classifier-endpoint/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "dominant-language-detection-job": {
    "ARNFormats": [
     "arn:${Partition}:comprehend:${Region}:${Account}:dominant-language-detection-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "entities-detection-job": {
    "ARNFormats": [
     "arn:${Partition}:comprehend:${Region}:${Account}:entities-detection-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "entity-recognizer": {
    "ARNFormats": [
     "arn:${Partition}:comprehend:${Region}:${Account}:entity-recognizer/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "entity-recognizer-endpoint": {
    "ARNFormats": [
     "arn:${Partition}:comprehend:${Region}:${Account}:entity-recognizer-endpoint/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "events-detection-job": {
    "ARNFormats": [
     "arn:${Partition}:comprehend:${Region}:${Account}:events-detection-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "flywheel": {
    "ARNFormats": [
     "arn:${Partition}:comprehend:${Region}:${Account}:flywheel/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "flywheel-dataset": {
    "ARNFormats": [
     "arn:${Partition}:comprehend:${Region}:${Account}:flywheel/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "key-phrases-detection-job": {
    "ARNFormats": [
     "arn:${Partition}:comprehend:${Region}:${Account}:key-phrases-detection-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "pii-entities-detection-job": {
    "ARNFormats": [
     "arn:${Partition}:comprehend:${Region}:${Account}:pii-entities-detection-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "sentiment-detection-job": {
    "ARNFormats": [
     "arn:${Partition}:comprehend:${Region}:${Account}:sentiment-detection-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "targeted-sentiment-detection-job": {
    "ARNFormats": [
     "arn:${Partition}:comprehend:${Region}:${Account}:targeted-sentiment-detection-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "topics-detection-job": {
    "ARNFormats": [
     "arn:${Partition}:comprehend:${Region}:${Account}:topics-detection-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "comprehendmedical": {
  "Actions": {
   "describeentitiesdetectionv2job": {},
   "describeicd10cminferencejob": {},
   "describephidetectionjob": {},
   "describerxnorminferencejob": {},
   "describesnomedctinferencejob": {},
   "detectentitiesv2": {},
   "detectphi": {},
   "infericd10cm": {},
   "inferrxnorm": {},
   "infersnomedct": {},
   "listentitiesdetectionv2jobs": {},
   "listicd10cminferencejobs": {},
   "listphidetectionjobs": {},
   "listrxnorminferencejobs": {},
   "listsnomedctinferencejobs": {},
   "startentitiesdetectionv2job": {},
   "starticd10cminferencejob": {},
   "startphidetectionjob": {},
   "startrxnorminferencejob": {},
   "startsnomedctinferencejob": {},
   "stopentitiesdetectionv2job": {},
   "stopicd10cminferencejob": {},
   "stopphidetectionjob": {},
   "stoprxnorminferencejob": {},
   "stopsnomedctinferencejob": {}
  },
  "Resources": {}
 },
 "compute-optimizer": {
  "Actions": {
   "deleterecommendationpreferences": {},
   "describerecommendationexportjobs": {},
   "exportautoscalinggrouprecommendations": {},
   "exportebsvolumerecommendations": {},
   "exportec2instancerecommendations": {},
   "exportecsservicerecommendations": {},
   "exportidlerecommendations": {},
   "exportlambdafunctionrecommendations": {},
   "exportlicenserecommendations": {},
   "exportrdsdatabaserecommendations": {},
   "getautoscalinggrouprecommendations": {},
   "getebsvolumerecommendations": {},
   "getec2instancerecommendations": {},
   "getec2recommendationprojectedmetrics": {},
   "getecsservicerecommendationprojectedmetrics": {},
   "getecsservicerecommendations": {},
   "geteffectiverecommendationpreferences": {},
   "getenrollmentstatus": {},
   "getenrollmentstatusesfororganization": {},
   "getidlerecommendations": {},
   "getlambdafunctionrecommendations": {},
   "getlicenserecommendations": {},
   "getrdsdatabaserecommendationprojectedmetrics": {},
   "getrdsdatabaserecommendations": {},
   "getrecommendationpreferences": {},
   "getrecommendationsummaries": {},
   "putrecommendationpreferences": {},
   "updateenrollmentstatus": {}
  },
  "Resources": {}
 },
 "config": {
  "Actions": {
   "associateresourcetypes": {
    "Resources": [
     "ConfigurationRecorder"
    ]
   },
   "batchgetaggregateresourceconfig": {
    "Resources": [
     "ConfigurationAggregator"
    ]
   },
   "batchgetresourceconfig": {},
   "deleteaggregationauthorization": {
    "Resources": [
     "AggregationAuthorization"
    ]
   },
   "deleteconfigrule": {
    "Resources": [
     "ConfigRule"
    ]
   },
   "deleteconfigurationaggregator": {
    "Resources": [
     "ConfigurationAggregator"
    ]
   },
   "deleteconfigurationrecorder": {
    "Resources": [
     "ConfigurationRecorder"
    ]
   },
   "deleteconformancepack": {
    "Resources": [
     "ConformancePack"
    ]
   },
   "deletedeliverychannel": {},
   "deleteevaluationresults": {
    "Resources": [
     "ConfigRule"
    ]
   },
   "deleteorganizationconfigrule": {
    "Resources": [
     "OrganizationConfigRule"
    ]
   },
   "deleteorganizationconformancepack": {
    "Resources": [
     "OrganizationConformancePack"
    ]
   },
   "deletependingaggregationrequest": {},
   "deleteremediationconfiguration": {
    "Resources": [
     "RemediationConfiguration"
    ]
   },
   "deleteremediationexceptions": {},
   "deleteresourceconfig": {},
   "deleteretentionconfiguration": {},
   "deleteservicelinkedconfigurationrecorder": {
    "Resources": [
     "ConfigurationRecorder"
    ]
   },
   "deletestoredquery": {
    "Resources": [
     "StoredQuery"
    ]
   },
   "deliverconfigsnapshot": {},
   "describeaggregatecompliancebyconfigrules": {
    "Resources": [
     "ConfigurationAggregator"
    ]
   },
   "describeaggregatecompliancebyconformancepacks": {
    "Resources": [
     "ConfigurationAggregator"
    ]
   },
   "describeaggregationauthorizations": {},
   "describecompliancebyconfigrule": {},
   "describecompliancebyresource": {},
   "describeconfigruleevaluationstatus": {},
   "describeconfigrules": {},
   "describeconfigurationaggregators": {},
   "describeconfigurationaggregatorsourcesstatus": {
    "Resources": [
     "ConfigurationAggregator"
    ]
   },
   "describeconfigurationrecorders": {
    "Resources": [
     "ConfigurationRecorder"
    ]
   },
   "describeconfigurationrecorderstatus": {
    "Resources": [
     "ConfigurationRecorder"
    ]
   },
   "describeconformancepackcompliance": {
    "Resources": [
     "ConformancePack"
    ]
   },
   "describeconformancepacks": {},
   "describeconformancepackstatus": {},
   "describedeliverychannels": {},
   "describedeliverychannelstatus": {},
   "describeorganizationconfigrules": {},
   "describeorganizationconfigrulestatuses": {},
   "describeorganizationconformancepacks": {},
   "describeorganizationconformancepackstatuses": {},
   "describependingaggregationrequests": {},
   "describeremediationconfigurations": {
    "Resources": [
     "RemediationConfiguration"
    ]
   },
   "describeremediationexceptions": {},
   "describeremediationexecutionstatus": {
    "Resources": [
     "RemediationConfiguration"
    ]
   },
   "describeretentionconfigurations": {},
   "disassociateresourcetypes": {
    "Resources": [
     "ConfigurationRecorder"
    ]
   },
   "getaggregatecompliancedetailsbyconfigrule": {
    "Resources": [
     "ConfigurationAggregator"
    ]
   },
   "getaggregateconfigrulecompliancesummary": {
    "Resources": [
     "ConfigurationAggregator"
    ]
   },
   "getaggregateconformancepackcompliancesummary": {
    "Resources": [
     "ConfigurationAggregator"
    ]
   },
   "getaggregatediscoveredresourcecounts": {
    "Resources": [
     "ConfigurationAggregator"
    ]
   },
   "getaggregateresourceconfig": {
    "Resources": [
     "ConfigurationAggregator"
    ]
   },
   "getcompliancedetailsbyconfigrule": {
    "Resources": [
     "ConfigRule"
    ]
   },
   "getcompliancedetailsbyresource": {},
   "getcompliancesummarybyconfigrule": {},
   "getcompliancesummarybyresourcetype": {},
   "getconformancepackcompliancedetails": {
    "Resources": [
     "ConformancePack"
    ]
   },
   "getconformancepackcompliancesummary": {
    "Resources": [
     "ConformancePack"
    ]
   },
   "getcustomrulepolicy": {
    "Resources": [
     "ConfigRule"
    ]
   },
   "getdiscoveredresourcecounts": {},
   "getorganizationconfigruledetailedstatus": {
    "Resources": [
     "OrganizationConfigRule"
    ]
   },
   "getorganizationconformancepackdetailedstatus": {
    "Resources": [
     "OrganizationConformancePack"
    ]
   },
   "getorganizationcustomrulepolicy": {
    "Resources": [
     "OrganizationConfigRule"
    ]
   },
   "getresourceconfighistory": {},
   "getresourceevaluationsummary": {},
   "getstoredquery": {
    "Resources": [
     "StoredQuery"
    ]
   },
   "listaggregatediscoveredresources": {
    "Resources": [
     "ConfigurationAggregator"
    ]
   },
   "listconfigurationrecorders": {},
   "listconformancepackcompliancescores": {},
   "listdiscoveredresources": {},
   "listresourceevaluations": {},
   "liststoredqueries": {},
   "listtagsforresource": {
    "Resources": [
     "AggregationAuthorization",
     "ConfigRule",
     "ConfigurationAggregator",
     "ConfigurationRecorder",
     "ConformancePack",
     "OrganizationConfigRule",
     "OrganizationConformancePack",
     "StoredQuery"
    ]
   },
   "putaggregationauthorization": {
    "Resources": [
     "AggregationAuthorization"
    ]
   },
   "putconfigrule": {
    "Resources": [
     "ConfigRule"
    ]
   },
   "putconfigurationaggregator": {
    "Resources": [
     "ConfigurationAggregator"
    ]
   },
   "putconfigurationrecorder": {},
   "putconformancepack": {
    "Resources": [
     "ConformancePack"
    ]
   },
   "putdeliverychannel": {},
   "putevaluations": {},
   "putexternalevaluation": {
    "Resources": [
     "ConfigRule"
    ]
   },
   "putorganizationconfigrule": {
    "Resources": [
     "OrganizationConfigRule"
    ]
   },
   "putorganizationconformancepack": {
    "Resources": [
     "OrganizationConformancePack"
    ]
   },
   "putremediationconfigurations": {
    "Resources": [
     "RemediationConfiguration"
    ]
   },
   "putremediationexceptions": {},
   "putresourceconfig": {},
   "putretentionconfiguration": {},
   "putservicelinkedconfigurationrecorder": {},
   "putstoredquery": {
    "Resources": [
     "StoredQuery"
    ]
   },
   "selectaggregateresourceconfig": {
    "Resources": [
     "ConfigurationAggregator"
    ]
   },
   "selectresourceconfig": {},
   "startconfigrulesevaluation": {
    "Resources": [
     "ConfigRule"
    ]
   },
   "startconfigurationrecorder": {
    "Resources": [
     "ConfigurationRecorder"
    ]
   },
   "startremediationexecution": {},
   "startresourceevaluation": {},
   "stopconfigurationrecorder": {
    "Resources": [
     "ConfigurationRecorder"
    ]
   },
   "tagresource": {
    "Resources": [
     "AggregationAuthorization",
     "ConfigRule",
     "ConfigurationAggregator",
     "ConfigurationRecorder",
     "ConformancePack",
     "OrganizationConfigRule",
     "OrganizationConformancePack",
     "StoredQuery"
    ]
   },
   "untagresource": {
    "Resources": [
     "AggregationAuthorization",
     "ConfigRule",
     "ConfigurationAggregator",
     "ConfigurationRecorder",
     "ConformancePack",
     "OrganizationConfigRule",
     "OrganizationConformancePack",
     "StoredQuery"
    ]
   }
  },
  "Resources": {
   "aggregationauthorization": {
    "ARNFormats": [
     "arn:${Partition}:config:${Region}:${Account}:aggregation-authorization/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "configrule": {
    "ARNFormats": [
     "arn:${Partition}:config:${Region}:${Account}:config-rule/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "configurationaggregator": {
    "ARNFormats": [
     "arn:${Partition}:config:${Region}:${Account}:config-aggregator/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "configurationrecorder": {
    "ARNFormats": [
     "arn:${Partition}:config:${Region}:${Account}:configuration-recorder/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "conformancepack": {
    "ARNFormats": [
     "arn:${Partition}:config:${Region}:${Account}:conformance-pack/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "organizationconfigrule": {
    "ARNFormats": [
     "arn:${Partition}:config:${Region}:${Account}:organization-config-rule/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "organizationconformancepack": {
    "ARNFormats": [
     "arn:${Partition}:config:${Region}:${Account}:organization-conformance-pack/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "remediationconfiguration": {
    "ARNFormats": [
     "arn:${Partition}:config:${Region}:${Account}:remediation-configuration/.*"
    ]
   },
   "storedquery": {
    "ARNFormats": [
     "arn:${Partition}:config:${Region}:${Account}:stored-query/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "connect": {
  "Actions": {
   "activateevaluationform": {
    "Resources": [
     "evaluation-form"
    ]
   },
   "admingetemergencyaccesstoken": {
    "Resources": [
     "instance"
    ]
   },
   "associateanalyticsdataset": {
    "Resources": [
     "instance"
    ]
   },
   "associateapprovedorigin": {
    "Resources": [
     "instance"
    ]
   },
   "associatebot": {
    "Resources": [
     "instance"
    ]
   },
   "associatecustomerprofilesdomain": {
    "Resources": [
     "instance"
    ]
   },
   "associatedefaultvocabulary": {
    "Resources": [
     "instance"
    ]
   },
   "associateflow": {
    "Resources": [
     "contact-flow",
     "wildcard-phone-number"
    ]
   },
   "associateinstancestorageconfig": {
    "Resources": [
     "instance"
    ]
   },
   "associatelambdafunction": {
    "Resources": [
     "instance"
    ]
   },
   "associatelexbot": {
    "Resources": [
     "instance"
    ]
   },
   "associatephonenumbercontactflow": {
    "Resources": [
     "contact-flow",
     "phone-number"
    ]
   },
   "associatequeuequickconnects": {
    "Resources": [
     "queue",
     "quick-connect"
    ]
   },
   "associateroutingprofilequeues": {
    "Resources": [
     "queue",
     "routing-profile"
    ]
   },
   "associatesecuritykey": {
    "Resources": [
     "instance"
    ]
   },
   "associatetrafficdistributiongroupuser": {
    "Resources": [
     "instance",
     "traffic-distribution-group",
     "user"
    ]
   },
   "associateuserproficiencies": {
    "Resources": [
     "instance",
     "user"
    ]
   },
   "batchassociateanalyticsdataset": {
    "Resources": [
     "instance"
    ]
   },
   "batchdisassociateanalyticsdataset": {
    "Resources": [
     "instance"
    ]
   },
   "batchgetattachedfilemetadata": {
    "Resources": [
     "attached-file"
    ]
   },
   "batchgetflowassociation": {
    "Resources": [
     "wildcard-phone-number"
    ]
   },
   "batchputcontact": {
    "Resources": [
     "instance",
     "queue"
    ]
   },
   "claimphonenumber": {
    "Resources": [
     "instance",
     "traffic-distribution-group",
     "wildcard-phone-number"
    ]
   },
   "completeattachedfileupload": {
    "Resources": [
     "attached-file"
    ]
   },
   "createagentstatus": {
    "Resources": [
     "agent-status"
    ]
   },
   "createauthenticationprofile": {
    "Resources": [
     "authentication-profile"
    ]
   },
   "createcontact": {
    "Resources": [
     "contact",
     "instance",
     "user"
    ]
   },
   "createcontactflow": {
    "Resources": [
     "contact-flow"
    ]
   },
   "createcontactflowmodule": {
    "Resources": [
     "contact-flow-module"
    ]
   },
   "createcontactflowversion": {
    "Resources": [
     "contact-flow"
    ]
   },
   "createemailaddress": {
    "Resources": [
     "instance"
    ]
   },
   "createevaluationform": {
    "Resources": [
     "evaluation-form"
    ]
   },
   "createhoursofoperation": {
    "Resources": [
     "hours-of-operation"
    ]
   },
   "createhoursofoperationoverride": {
    "Resources": [
     "hours-of-operation",
     "instance"
    ]
   },
   "createinstance": {},
   "createintegrationassociation": {
    "Resources": [
     "instance",
     "integration-association"
    ]
   },
   "createparticipant": {
    "Resources": [
     "contact",
     "instance"
    ]
   },
   "createpersistentcontactassociation": {
    "Resources": [
     "contact",
     "instance"
    ]
   },
   "createpredefinedattribute": {
    "Resources": [
     "instance"
    ]
   },
   "createprompt": {
    "Resources": [
     "prompt"
    ]
   },
   "createpushnotificationregistration": {
    "Resources": [
     "instance"
    ]
   },
   "createqueue": {
    "Resources": [
     "contact-flow",
     "hours-of-operation",
     "phone-number",
     "queue",
     "quick-connect"
    ]
   },
   "createquickconnect": {
    "Resources": [
     "contact-flow",
     "queue",
     "quick-connect",
     "user"
    ]
   },
   "createroutingprofile": {
    "Resources": [
     "queue",
     "routing-profile"
    ]
   },
   "createrule": {
    "Resources": [
     "rule"
    ]
   },
   "createsecurityprofile": {
    "Resources": [
     "security-profile"
    ]
   },
   "createtasktemplate": {
    "Resources": [
     "task-template"
    ]
   },
   "createtrafficdistributiongroup": {
    "Resources": [
     "instance",
     "traffic-distribution-group"
    ]
   },
   "createusecase": {
    "Resources": [
     "instance",
     "integration-association",
     "use-case"
    ]
   },
   "createuser": {
    "Resources": [
     "hierarchy-group",
     "routing-profile",
     "security-profile",
     "user"
    ]
   },
   "createuserhierarchygroup": {
    "Resources": [
     "hierarchy-group"
    ]
   },
   "createview": {
    "Resources": [
     "customer-managed-view"
    ]
   },
   "createviewversion": {
    "Resources": [
     "customer-managed-view"
    ]
   },
   "createvocabulary": {
    "Resources": [
     "vocabulary"
    ]
   },
   "deactivateevaluationform": {
    "Resources": [
     "evaluation-form"
    ]
   },
   "deleteattachedfile": {
    "Resources": [
     "attached-file"
    ]
   },
   "deletecontactevaluation": {
    "Resources": [
     "contact-evaluation"
    ]
   },
   "deletecontactflow": {
    "Resources": [
     "contact-flow"
    ]
   },
   "deletecontactflowmodule": {
    "Resources": [
     "contact-flow-module"
    ]
   },
   "deletecontactflowversion": {
    "Resources": [
     "contact-flow"
    ]
   },
   "deleteemailaddress": {
    "Resources": [
     "email-address"
    ]
   },
   "deleteevaluationform": {
    "Resources": [
     "evaluation-form"
    ]
   },
   "deletehoursofoperation": {
    "Resources": [
     "hours-of-operation"
    ]
   },
   "deletehoursofoperationoverride": {
    "Resources": [
     "hours-of-operation",
     "instance"
    ]
   },
   "deleteinstance": {
    "Resources": [
     "instance"
    ]
   },
   "deleteintegrationassociation": {
    "Resources": [
     "instance",
     "integration-association"
    ]
   },
   "deletepredefinedattribute": {
    "Resources": [
     "instance"
    ]
   },
   "deleteprompt": {
    "Resources": [
     "prompt"
    ]
   },
   "deletepushnotificationregistration": {
    "Resources": [
     "instance"
    ]
   },
   "deletequeue": {
    "Resources": [
     "queue"
    ]
   },
   "deletequickconnect": {
    "Resources": [
     "quick-connect"
    ]
   },
   "deleteroutingprofile": {
    "Resources": [
     "routing-profile"
    ]
   },
   "deleterule": {
    "Resources": [
     "rule"
    ]
   },
   "deletesecurityprofile": {
    "Resources": [
     "security-profile"
    ]
   },
   "deletetasktemplate": {
    "Resources": [
     "task-template"
    ]
   },
   "deletetrafficdistributiongroup": {
    "Resources": [
     "traffic-distribution-group"
    ]
   },
   "deleteusecase": {
    "Resources": [
     "instance",
     "use-case"
    ]
   },
   "deleteuser": {
    "Resources": [
     "user"
    ]
   },
   "deleteuserhierarchygroup": {
    "Resources": [
     "hierarchy-group"
    ]
   },
   "deleteview": {
    "Resources": [
     "customer-managed-view"
    ]
   },
   "deleteviewversion": {
    "Resources": [
     "customer-managed-view-version"
    ]
   },
   "deletevocabulary": {
    "Resources": [
     "vocabulary"
    ]
   },
   "describeagentstatus": {
    "Resources": [
     "agent-status"
    ]
   },
   "describeauthenticationprofile": {
    "Resources": [
     "authentication-profile"
    ]
   },
   "describecontact": {
    "Resources": [
     "contact"
    ]
   },
   "describecontactevaluation": {
    "Resources": [
     "contact-evaluation"
    ]
   },
   "describecontactflow": {
    "Resources": [
     "contact-flow"
    ]
   },
   "describecontactflowmodule": {
    "Resources": [
     "contact-flow-module"
    ]
   },
   "describeemailaddress": {
    "Resources": [
     "email-address"
    ]
   },
   "describeevaluationform": {
    "Resources": [
     "evaluation-form"
    ]
   },
   "describeforecastingplanningschedulingintegration": {
    "Resources": [
     "instance"
    ]
   },
   "describehoursofoperation": {
    "Resources": [
     "hours-of-operation"
    ]
   },
   "describehoursofoperationoverride": {
    "Resources": [
     "hours-of-operation",
     "instance"
    ]
   },
   "describeinstance": {
    "Resources": [
     "instance"
    ]
   },
   "describeinstanceattribute": {
    "Resources": [
     "instance"
    ]
   },
   "describeinstancestorageconfig": {
    "Resources": [
     "instance"
    ]
   },
   "describephonenumber": {
    "Resources": [
     "phone-number"
    ]
   },
   "describepredefinedattribute": {
    "Resources": [
     "instance"
    ]
   },
   "describeprompt": {
    "Resources": [
     "prompt"
    ]
   },
   "describequeue": {
    "Resources": [
     "queue"
    ]
   },
   "describequickconnect": {
    "Resources": [
     "quick-connect"
    ]
   },
   "describeroutingprofile": {
    "Resources": [
     "routing-profile"
    ]
   },
   "describerule": {
    "Resources": [
     "rule"
    ]
   },
   "describesecurityprofile": {
    "Resources": [
     "security-profile"
    ]
   },
   "describetrafficdistributiongroup": {
    "Resources": [
     "traffic-distribution-group"
    ]
   },
   "describeuser": {
    "Resources": [
     "user"
    ]
   },
   "describeuserhierarchygroup": {
    "Resources": [
     "hierarchy-group"
    ]
   },
   "describeuserhierarchystructure": {
    "Resources": [
     "instance"
    ]
   },
   "describeview": {
    "Resources": [
     "aws-managed-view",
     "customer-managed-view",
     "qualified-aws-managed-view",
     "qualified-customer-managed-view"
    ]
   },
   "describevocabulary": {
    "Resources": [
     "vocabulary"
    ]
   },
   "disassociateanalyticsdataset": {
    "Resources": [
     "instance"
    ]
   },
   "disassociateapprovedorigin": {
    "Resources": [
     "instance"
    ]
   },
   "disassociatebot": {
    "Resources": [
     "instance"
    ]
   },
   "disassociatecustomerprofilesdomain": {
    "Resources": [
     "instance"
    ]
   },
   "disassociateflow": {
    "Resources": [
     "wildcard-phone-number"
    ]
   },
   "disassociateinstancestorageconfig": {
    "Resources": [
     "instance"
    ]
   },
   "disassociatelambdafunction": {
    "Resources": [
     "instance"
    ]
   },
   "disassociatelexbot": {
    "Resources": [
     "instance"
    ]
   },
   "disassociatephonenumbercontactflow": {
    "Resources": [
     "phone-number"
    ]
   },
   "disassociatequeuequickconnects": {
    "Resources": [
     "queue",
     "quick-connect"
    ]
   },
   "disassociateroutingprofilequeues": {
    "Resources": [
     "routing-profile"
    ]
   },
   "disassociatesecuritykey": {
    "Resources": [
     "instance"
    ]
   },
   "disassociatetrafficdistributiongroupuser": {
    "Resources": [
     "instance",
     "traffic-distribution-group",
     "user"
    ]
   },
   "disassociateuserproficiencies": {
    "Resources": [
     "instance",
     "user"
    ]
   },
   "dismissusercontact": {
    "Resources": [
     "user"
    ]
   },
   "getattachedfile": {
    "Resources": [
     "attached-file"
    ]
   },
   "getcontactattributes": {
    "Resources": [
     "contact"
    ]
   },
   "getcurrentmetricdata": {
    "Resources": [
     "queue",
     "routing-profile"
    ]
   },
   "getcurrentuserdata": {
    "Resources": [
     "hierarchy-group",
     "queue",
     "routing-profile",
     "user"
    ]
   },
   "geteffectivehoursofoperations": {
    "Resources": [
     "hours-of-operation",
     "instance"
    ]
   },
   "getfederationtoken": {
    "Resources": [
     "instance"
    ]
   },
   "getflowassociation": {
    "Resources": [
     "wildcard-phone-number"
    ]
   },
   "getmetricdata": {
    "Resources": [
     "queue"
    ]
   },
   "getmetricdatav2": {
    "Resources": [
     "hierarchy-group",
     "queue",
     "routing-profile",
     "user"
    ]
   },
   "getpromptfile": {
    "Resources": [
     "prompt"
    ]
   },
   "gettasktemplate": {
    "Resources": [
     "task-template"
    ]
   },
   "gettrafficdistribution": {
    "Resources": [
     "traffic-distribution-group"
    ]
   },
   "importphonenumber": {
    "Resources": [
     "instance",
     "wildcard-phone-number"
    ]
   },
   "listagentstatuses": {
    "Resources": [
     "wildcard-agent-status"
    ]
   },
   "listanalyticsdataassociations": {
    "Resources": [
     "instance"
    ]
   },
   "listanalyticsdatalakedatasets": {
    "Resources": [
     "instance"
    ]
   },
   "listapprovedorigins": {
    "Resources": [
     "instance"
    ]
   },
   "listassociatedcontacts": {
    "Resources": [
     "contact"
    ]
   },
   "listauthenticationprofiles": {
    "Resources": [
     "instance"
    ]
   },
   "listbots": {
    "Resources": [
     "instance"
    ]
   },
   "listcontactevaluations": {
    "Resources": [
     "instance"
    ]
   },
   "listcontactflowmodules": {
    "Resources": [
     "instance"
    ]
   },
   "listcontactflows": {
    "Resources": [
     "wildcard-contact-flow"
    ]
   },
   "listcontactflowversions": {
    "Resources": [
     "contact-flow"
    ]
   },
   "listcontactreferences": {
    "Resources": [
     "contact"
    ]
   },
   "listdefaultvocabularies": {
    "Resources": [
     "instance"
    ]
   },
   "listevaluationforms": {
    "Resources": [
     "instance"
    ]
   },
   "listevaluationformversions": {
    "Resources": [
     "evaluation-form"
    ]
   },
   "listflowassociations": {
    "Resources": [
     "instance"
    ]
   },
   "listhoursofoperationoverrides": {
    "Resources": [
     "hours-of-operation",
     "instance"
    ]
   },
   "listhoursofoperations": {
    "Resources": [
     "instance"
    ]
   },
   "listinstanceattributes": {
    "Resources": [
     "instance"
    ]
   },
   "listinstances": {},
   "listinstancestorageconfigs": {
    "Resources": [
     "instance"
    ]
   },
   "listintegrationassociations": {
    "Resources": [
     "instance"
    ]
   },
   "listlambdafunctions": {
    "Resources": [
     "instance"
    ]
   },
   "listlexbots": {
    "Resources": [
     "instance"
    ]
   },
   "listphonenumbers": {
    "Resources": [
     "wildcard-legacy-phone-number"
    ]
   },
   "listphonenumbersv2": {
    "Resources": [
     "wildcard-phone-number"
    ]
   },
   "listpredefinedattributes": {
    "Resources": [
     "instance"
    ]
   },
   "listprompts": {
    "Resources": [
     "instance"
    ]
   },
   "listqueuequickconnects": {
    "Resources": [
     "queue"
    ]
   },
   "listqueues": {
    "Resources": [
     "wildcard-queue"
    ]
   },
   "listquickconnects": {
    "Resources": [
     "wildcard-quick-connect"
    ]
   },
   "listrealtimecontactanalysissegments": {
    "Resources": [
     "contact"
    ]
   },
   "listrealtimecontactanalysissegmentsv2": {
    "Resources": [
     "contact"
    ]
   },
   "listroutingprofilequeues": {
    "Resources": [
     "routing-profile"
    ]
   },
   "listroutingprofiles": {
    "Resources": [
     "instance"
    ]
   },
   "listrules": {
    "Resources": [
     "instance"
    ]
   },
   "listsecuritykeys": {
    "Resources": [
     "instance"
    ]
   },
   "listsecurityprofileapplications": {
    "Resources": [
     "security-profile"
    ]
   },
   "listsecurityprofilepermissions": {
    "Resources": [
     "security-profile"
    ]
   },
   "listsecurityprofiles": {
    "Resources": [
     "instance"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "agent-status",
     "contact-evaluation",
     "contact-flow",
     "contact-flow-module",
     "evaluation-form",
     "hierarchy-group",
     "hours-of-operation",
     "integration-association",
     "phone-number",
     "prompt",
     "queue",
     "quick-connect",
     "routing-profile",
     "rule",
     "security-profile",
     "traffic-distribution-group",
     "use-case",
     "user",
     "wildcard-phone-number"
    ]
   },
   "listtasktemplates": {
    "Resources": [
     "instance"
    ]
   },
   "listtrafficdistributiongroups": {
    "Resources": [
     "traffic-distribution-group"
    ]
   },
   "listtrafficdistributiongroupusers": {
    "Resources": [
     "traffic-distribution-group"
    ]
   },
   "listusecases": {
    "Resources": [
     "instance"
    ]
   },
   "listuserhierarchygroups": {
    "Resources": [
     "instance"
    ]
   },
   "listuserproficiencies": {
    "Resources": [
     "instance",
     "user"
    ]
   },
   "listusers": {
    "Resources": [
     "instance"
    ]
   },
   "listviews": {
    "Resources": [
     "instance"
    ]
   },
   "listviewversions": {
    "Resources": [
     "aws-managed-view",
     "customer-managed-view"
    ]
   },
   "monitorcontact": {
    "Resources": [
     "contact",
     "instance",
     "user"
    ]
   },
   "pausecontact": {
    "Resources": [
     "contact",
     "contact-flow",
     "instance"
    ]
   },
   "putuserstatus": {
    "Resources": [
     "agent-status",
     "instance",
     "user"
    ]
   },
   "releasephonenumber": {
    "Resources": [
     "phone-number"
    ]
   },
   "replicateinstance": {
    "Resources": [
     "instance"
    ]
   },
   "resumecontact": {
    "Resources": [
     "contact",
     "contact-flow",
     "instance"
    ]
   },
   "resumecontactrecording": {
    "Resources": [
     "contact"
    ]
   },
   "searchagentstatuses": {
    "Resources": [
     "instance"
    ]
   },
   "searchavailablephonenumbers": {
    "Resources": [
     "wildcard-phone-number"
    ]
   },
   "searchcontactflowmodules": {
    "Resources": [
     "instance"
    ]
   },
   "searchcontactflows": {
    "Resources": [
     "instance"
    ]
   },
   "searchcontacts": {
    "Resources": [
     "instance"
    ]
   },
   "searchemailaddresses": {
    "Resources": [
     "instance"
    ]
   },
   "searchhoursofoperationoverrides": {
    "Resources": [
     "hours-of-operation",
     "instance"
    ]
   },
   "searchhoursofoperations": {
    "Resources": [
     "instance"
    ]
   },
   "searchpredefinedattributes": {
    "Resources": [
     "instance"
    ]
   },
   "searchprompts": {
    "Resources": [
     "instance"
    ]
   },
   "searchqueues": {
    "Resources": [
     "instance"
    ]
   },
   "searchquickconnects": {
    "Resources": [
     "instance"
    ]
   },
   "searchresourcetags": {
    "Resources": [
     "instance"
    ]
   },
   "searchroutingprofiles": {
    "Resources": [
     "instance"
    ]
   },
   "searchsecurityprofiles": {
    "Resources": [
     "instance"
    ]
   },
   "searchuserhierarchygroups": {
    "Resources": [
     "instance"
    ]
   },
   "searchusers": {
    "Resources": [
     "instance"
    ]
   },
   "searchvocabularies": {
    "Resources": [
     "vocabulary"
    ]
   },
   "sendchatintegrationevent": {},
   "sendintegrationevent": {},
   "sendoutboundemail": {
    "Resources": [
     "instance"
    ]
   },
   "startattachedfileupload": {
    "Resources": [
     "attached-file"
    ]
   },
   "startchatcontact": {
    "Resources": [
     "contact",
     "contact-flow"
    ]
   },
   "startcontactevaluation": {
    "Resources": [
     "contact",
     "contact-evaluation",
     "evaluation-form"
    ]
   },
   "startcontactrecording": {
    "Resources": [
     "contact"
    ]
   },
   "startcontactstreaming": {
    "Resources": [
     "instance"
    ]
   },
   "startemailcontact": {
    "Resources": [
     "contact-flow",
     "instance"
    ]
   },
   "startforecastingplanningschedulingintegration": {
    "Resources": [
     "instance"
    ]
   },
   "startoutboundchatcontact": {
    "Resources": [
     "contact",
     "contact",
     "contact-flow",
     "instance",
     "phone-number"
    ]
   },
   "startoutboundemailcontact": {
    "Resources": [
     "contact-flow",
     "instance"
    ]
   },
   "startoutboundvoicecontact": {
    "Resources": [
     "contact"
    ]
   },
   "startscreensharing": {
    "Resources": [
     "contact",
     "instance"
    ]
   },
   "starttaskcontact": {
    "Resources": [
     "contact",
     "contact-flow",
     "quick-connect",
     "task-template"
    ]
   },
   "startwebrtccontact": {
    "Resources": [
     "contact-flow"
    ]
   },
   "stopcontact": {
    "Resources": [
     "contact"
    ]
   },
   "stopcontactrecording": {
    "Resources": [
     "contact"
    ]
   },
   "stopcontactstreaming": {
    "Resources": [
     "instance"
    ]
   },
   "stopforecastingplanningschedulingintegration": {
    "Resources": [
     "instance"
    ]
   },
   "submitcontactevaluation": {
    "Resources": [
     "contact-evaluation"
    ]
   },
   "suspendcontactrecording": {
    "Resources": [
     "contact"
    ]
   },
   "tagcontact": {
    "Resources": [
     "contact"
    ]
   },
   "tagresource": {
    "Resources": [
     "agent-status",
     "contact-evaluation",
     "contact-flow",
     "contact-flow-module",
     "customer-managed-view",
     "evaluation-form",
     "hierarchy-group",
     "hours-of-operation",
     "instance",
     "integration-association",
     "phone-number",
     "prompt",
     "queue",
     "quick-connect",
     "routing-profile",
     "rule",
     "security-profile",
     "task-template",
     "traffic-distribution-group",
     "use-case",
     "user",
     "vocabulary",
     "wildcard-phone-number"
    ]
   },
   "transfercontact": {
    "Resources": [
     "contact",
     "contact-flow",
     "instance"
    ]
   },
   "untagcontact": {
    "Resources": [
     "contact"
    ]
   },
   "untagresource": {
    "Resources": [
     "agent-status",
     "contact-evaluation",
     "contact-flow",
     "contact-flow-module",
     "customer-managed-view",
     "evaluation-form",
     "hierarchy-group",
     "hours-of-operation",
     "instance",
     "integration-association",
     "phone-number",
     "prompt",
     "queue",
     "quick-connect",
     "routing-profile",
     "rule",
     "security-profile",
     "task-template",
     "traffic-distribution-group",
     "use-case",
     "user",
     "vocabulary",
     "wildcard-phone-number"
    ]
   },
   "updateagentstatus": {
    "Resources": [
     "agent-status"
    ]
   },
   "updateauthenticationprofile": {
    "Resources": [
     "authentication-profile"
    ]
   },
   "updatecontact": {
    "Resources": [
     "contact"
    ]
   },
   "updatecontactattributes": {
    "Resources": [
     "contact"
    ]
   },
   "updatecontactevaluation": {
    "Resources": [
     "contact-evaluation"
    ]
   },
   "updatecontactflowcontent": {
    "Resources": [
     "contact-flow"
    ]
   },
   "updatecontactflowmetadata": {
    "Resources": [
     "contact-flow"
    ]
   },
   "updatecontactflowmodulecontent": {
    "Resources": [
     "contact-flow-module"
    ]
   },
   "updatecontactflowmodulemetadata": {
    "Resources": [
     "contact-flow-module"
    ]
   },
   "updatecontactflowname": {
    "Resources": [
     "contact-flow"
    ]
   },
   "updatecontactroutingdata": {
    "Resources": [
     "contact"
    ]
   },
   "updatecontactschedule": {
    "Resources": [
     "contact"
    ]
   },
   "updateemailaddressmetadata": {
    "Resources": [
     "email-address"
    ]
   },
   "updateevaluationform": {
    "Resources": [
     "evaluation-form"
    ]
   },
   "updatehoursofoperation": {
    "Resources": [
     "hours-of-operation"
    ]
   },
   "updatehoursofoperationoverride": {
    "Resources": [
     "hours-of-operation",
     "instance"
    ]
   },
   "updateinstanceattribute": {
    "Resources": [
     "instance"
    ]
   },
   "updateinstancestorageconfig": {
    "Resources": [
     "instance"
    ]
   },
   "updateparticipantauthentication": {
    "Resources": [
     "instance"
    ]
   },
   "updateparticipantroleconfig": {
    "Resources": [
     "contact",
     "instance"
    ]
   },
   "updatephonenumber": {
    "Resources": [
     "instance",
     "phone-number",
     "traffic-distribution-group"
    ]
   },
   "updatephonenumbermetadata": {
    "Resources": [
     "phone-number"
    ]
   },
   "updatepredefinedattribute": {
    "Resources": [
     "instance"
    ]
   },
   "updateprompt": {
    "Resources": [
     "prompt"
    ]
   },
   "updatequeuehoursofoperation": {
    "Resources": [
     "hours-of-operation",
     "queue"
    ]
   },
   "updatequeuemaxcontacts": {
    "Resources": [
     "queue"
    ]
   },
   "updatequeuename": {
    "Resources": [
     "queue"
    ]
   },
   "updatequeueoutboundcallerconfig": {
    "Resources": [
     "contact-flow",
     "phone-number",
     "queue"
    ]
   },
   "updatequeueoutboundemailconfig": {
    "Resources": [
     "queue"
    ]
   },
   "updatequeuestatus": {
    "Resources": [
     "queue"
    ]
   },
   "updatequickconnectconfig": {
    "Resources": [
     "contact-flow",
     "queue",
     "quick-connect",
     "user"
    ]
   },
   "updatequickconnectname": {
    "Resources": [
     "quick-connect"
    ]
   },
   "updateroutingprofileagentavailabilitytimer": {
    "Resources": [
     "routing-profile"
    ]
   },
   "updateroutingprofileconcurrency": {
    "Resources": [
     "routing-profile"
    ]
   },
   "updateroutingprofiledefaultoutboundqueue": {
    "Resources": [
     "queue",
     "routing-profile"
    ]
   },
   "updateroutingprofilename": {
    "Resources": [
     "routing-profile"
    ]
   },
   "updateroutingprofilequeues": {
    "Resources": [
     "routing-profile"
    ]
   },
   "updaterule": {
    "Resources": [
     "rule"
    ]
   },
   "updatesecurityprofile": {
    "Resources": [
     "security-profile"
    ]
   },
   "updatetasktemplate": {
    "Resources": [
     "task-template"
    ]
   },
   "updatetrafficdistribution": {
    "Resources": [
     "traffic-distribution-group"
    ]
   },
   "updateuserhierarchy": {
    "Resources": [
     "hierarchy-group",
     "user"
    ]
   },
   "updateuserhierarchygroupname": {
    "Resources": [
     "hierarchy-group"
    ]
   },
   "updateuserhierarchystructure": {
    "Resources": [
     "instance"
    ]
   },
   "updateuseridentityinfo": {
    "Resources": [
     "user"
    ]
   },
   "updateuserphoneconfig": {
    "Resources": [
     "user"
    ]
   },
   "updateuserproficiencies": {
    "Resources": [
     "instance",
     "user"
    ]
   },
   "updateuserroutingprofile": {
    "Resources": [
     "routing-profile",
     "user"
    ]
   },
   "updateusersecurityprofiles": {
    "Resources": [
     "security-profile",
     "user"
    ]
   },
   "updateviewcontent": {
    "Resources": [
     "customer-managed-view"
    ]
   },
   "updateviewmetadata": {
    "Resources": [
     "customer-managed-view"
    ]
   }
  },
  "Resources": {
   "agent-status": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "attached-file": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "authentication-profile": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ]
   },
   "aws-managed-view": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:aws:view/.*"
    ]
   },
   "contact": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ]
   },
   "contact-evaluation": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "contact-flow": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "contact-flow-module": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "customer-managed-view": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "customer-managed-view-version": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "email-address": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "evaluation-form": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "hierarchy-group": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "hours-of-operation": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "instance": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "integration-association": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "legacy-phone-number": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ]
   },
   "phone-number": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:phone-number/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "prompt": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "qualified-aws-managed-view": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:aws:.*"
    ]
   },
   "qualified-customer-managed-view": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "queue": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "quick-connect": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "routing-profile": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "rule": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "security-profile": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "task-template": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "traffic-distribution-group": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:traffic-distribution-group/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "use-case": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "user": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "vocabulary": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "wildcard-agent-status": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ]
   },
   "wildcard-contact-flow": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ]
   },
   "wildcard-legacy-phone-number": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ]
   },
   "wildcard-phone-number": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:phone-number/*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "wildcard-queue": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ]
   },
   "wildcard-quick-connect": {
    "ARNFormats": [
     "arn:${Partition}:connect:${Region}:${Account}:instance/.*"
    ]
   }
  }
 },
 "connect-campaigns": {
  "Actions": {
   "createcampaign": {
    "Resources": [
     "campaign"
    ]
   },
   "deletecampaign": {
    "Resources": [
     "campaign"
    ]
   },
   "deletecampaignchannelsubtypeconfig": {
    "Resources": [
     "campaign"
    ]
   },
   "deletecampaigncommunicationlimits": {
    "Resources": [
     "campaign"
    ]
   },
   "deletecampaigncommunicationtime": {
    "Resources": [
     "campaign"
    ]
   },
   "deleteconnectinstanceconfig": {},
   "deleteconnectinstanceintegration": {},
   "deleteinstanceonboardingjob": {},
   "describecampaign": {
    "Resources": [
     "campaign"
    ]
   },
   "getcampaignstate": {
    "Resources": [
     "campaign"
    ]
   },
   "getcampaignstatebatch": {
    "Resources": [
     "campaign"
    ]
   },
   "getconnectinstanceconfig": {},
   "getinstanceonboardingjobstatus": {},
   "listcampaigns": {},
   "listconnectinstanceintegrations": {},
   "listtagsforresource": {
    "Resources": [
     "campaign"
    ]
   },
   "pausecampaign": {
    "Resources": [
     "campaign"
    ]
   },
   "putconnectinstanceintegration": {},
   "putdialrequestbatch": {
    "Resources": [
     "campaign"
    ]
   },
   "putoutboundrequestbatch": {
    "Resources": [
     "campaign"
    ]
   },
   "putprofileoutboundrequestbatch": {
    "Resources": [
     "campaign"
    ]
   },
   "resumecampaign": {
    "Resources": [
     "campaign"
    ]
   },
   "startcampaign": {
    "Resources": [
     "campaign"
    ]
   },
   "startinstanceonboardingjob": {},
   "stopcampaign": {
    "Resources": [
     "campaign"
    ]
   },
   "tagresource": {
    "Resources": [
     "campaign"
    ]
   },
   "untagresource": {
    "Resources": [
     "campaign"
    ]
   },
   "updatecampaignchannelsubtypeconfig": {
    "Resources": [
     "campaign"
    ]
   },
   "updatecampaigncommunicationlimits": {
    "Resources": [
     "campaign"
    ]
   },
   "updatecampaigncommunicationtime": {
    "Resources": [
     "campaign"
    ]
   },
   "updatecampaigndialerconfig": {
    "Resources": [
     "campaign"
    ]
   },
   "updatecampaignflowassociation": {
    "Resources": [
     "campaign"
    ]
   },
   "updatecampaignname": {
    "Resources": [
     "campaign"
    ]
   },
   "updatecampaignoutboundcallconfig": {
    "Resources": [
     "campaign"
    ]
   },
   "updatecampaignschedule": {
    "Resources": [
     "campaign"
    ]
   },
   "updatecampaignsource": {
    "Resources": [
     "campaign"
    ]
   }
  },
  "Resources": {
   "campaign": {
    "ARNFormats": [
     "arn:${Partition}:connect-campaigns:${Region}:${Account}:campaign/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "consoleapp": {
  "Actions": {
   "getdeviceidentity": {
    "Resources": [
     "DeviceIdentity"
    ]
   },
   "listdeviceidentities": {}
  },
  "Resources": {
   "deviceidentity": {
    "ARNFormats": [
     "arn:${Partition}:consoleapp::${Account}:device/.*"
    ]
   }
  }
 },
 "consolidatedbilling": {
  "Actions": {
   "getaccountbillingrole": {},
   "listlinkedaccounts": {}
  },
  "Resources": {}
 },
 "controlcatalog": {
  "Actions": {
   "getcontrol": {
    "Resources": [
     "control"
    ]
   },
   "listcommoncontrols": {},
   "listcontrols": {
    "Resources": [
     "control"
    ]
   },
   "listdomains": {},
   "listobjectives": {}
  },
  "Resources": {
   "common-control": {
    "ARNFormats": [
     "arn:${Partition}:controlcatalog:::common-control/.*"
    ]
   },
   "control": {
    "ARNFormats": [
     "arn:${Partition}:controlcatalog:::control/.*"
    ]
   },
   "domain": {
    "ARNFormats": [
     "arn:${Partition}:controlcatalog:::domain/.*"
    ]
   },
   "objective": {
    "ARNFormats": [
     "arn:${Partition}:controlcatalog:::objective/.*"
    ]
   }
  }
 },
 "controltower": {
  "Actions": {
   "createlandingzone": {},
   "createmanagedaccount": {},
   "deletelandingzone": {
    "Resources": [
     "LandingZone"
    ]
   },
   "deregistermanagedaccount": {},
   "deregisterorganizationalunit": {},
   "describeaccountfactoryconfig": {},
   "describecoreservice": {},
   "describeguardrail": {},
   "describeguardrailfortarget": {},
   "describelandingzoneconfiguration": {},
   "describemanagedaccount": {},
   "describemanagedorganizationalunit": {},
   "describeregisterorganizationalunitoperation": {},
   "describesinglesignon": {},
   "disablebaseline": {
    "Resources": [
     "EnabledBaseline"
    ]
   },
   "disablecontrol": {
    "Resources": [
     "EnabledControl"
    ]
   },
   "disableguardrail": {},
   "enablebaseline": {},
   "enablecontrol": {
    "Resources": [
     "EnabledControl"
    ]
   },
   "enableguardrail": {},
   "getaccountinfo": {},
   "getavailableupdates": {},
   "getbaseline": {
    "Resources": [
     "Baseline"
    ]
   },
   "getbaselineoperation": {},
   "getcontroloperation": {},
   "getenabledbaseline": {
    "Resources": [
     "EnabledBaseline"
    ]
   },
   "getenabledcontrol": {
    "Resources": [
     "EnabledControl"
    ]
   },
   "getguardrailcompliancestatus": {},
   "gethomeregion": {},
   "getlandingzone": {
    "Resources": [
     "LandingZone"
    ]
   },
   "getlandingzonedriftstatus": {},
   "getlandingzoneoperation": {},
   "getlandingzonestatus": {},
   "listbaselines": {},
   "listcontroloperations": {},
   "listdirectorygroups": {},
   "listdriftdetails": {},
   "listenabledbaselines": {},
   "listenabledcontrols": {},
   "listenabledguardrails": {},
   "listextendgovernanceprecheckdetails": {},
   "listexternalconfigrulecompliance": {},
   "listguardrails": {},
   "listguardrailsfortarget": {},
   "listguardrailviolations": {},
   "listlandingzoneoperations": {},
   "listlandingzones": {},
   "listmanagedaccounts": {},
   "listmanagedaccountsforguardrail": {},
   "listmanagedaccountsforparent": {},
   "listmanagedorganizationalunits": {},
   "listmanagedorganizationalunitsforguardrail": {},
   "listtagsforresource": {
    "Resources": [
     "EnabledBaseline",
     "EnabledControl",
     "LandingZone"
    ]
   },
   "manageorganizationalunit": {},
   "performprelaunchchecks": {},
   "resetenabledbaseline": {
    "Resources": [
     "EnabledBaseline"
    ]
   },
   "resetenabledcontrol": {
    "Resources": [
     "EnabledControl"
    ]
   },
   "resetlandingzone": {
    "Resources": [
     "LandingZone"
    ]
   },
   "setuplandingzone": {},
   "tagresource": {
    "Resources": [
     "EnabledBaseline",
     "EnabledControl",
     "LandingZone"
    ]
   },
   "untagresource": {
    "Resources": [
     "EnabledBaseline",
     "EnabledControl",
     "LandingZone"
    ]
   },
   "updateaccountfactoryconfig": {},
   "updateenabledbaseline": {
    "Resources": [
     "EnabledBaseline"
    ]
   },
   "updateenabledcontrol": {
    "Resources": [
     "EnabledControl"
    ]
   },
   "updatelandingzone": {
    "Resources": [
     "LandingZone"
    ]
   }
  },
  "Resources": {
   "baseline": {
    "ARNFormats": [
     "arn:${Partition}:controltower:${Region}::baseline/.*"
    ]
   },
   "enabledbaseline": {
    "ARNFormats": [
     "arn:${Partition}:controltower:${Region}:${Account}:enabledbaseline/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "enabledcontrol": {
    "ARNFormats": [
     "arn:${Partition}:controltower:${Region}:${Account}:enabledcontrol/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "landingzone": {
    "ARNFormats": [
     "arn:${Partition}:controltower:${Region}:${Account}:landingzone/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "cost-optimization-hub": {
  "Actions": {
   "getpreferences": {},
   "getrecommendation": {},
   "listenrollmentstatuses": {},
   "listrecommendations": {},
   "listrecommendationsummaries": {},
   "updateenrollmentstatus": {},
   "updatepreferences": {}
  },
  "Resources": {}
 },
 "cur": {
  "Actions": {
   "deletereportdefinition": {
    "Resources": [
     "cur"
    ]
   },
   "describereportdefinitions": {},
   "getclassicreport": {},
   "getclassicreportpreferences": {},
   "getusagereport": {},
   "listtagsforresource": {
    "Resources": [
     "cur"
    ]
   },
   "modifyreportdefinition": {
    "Resources": [
     "cur"
    ]
   },
   "putclassicreportpreferences": {},
   "putreportdefinition": {
    "Resources": [
     "cur"
    ]
   },
   "tagresource": {
    "Resources": [
     "cur"
    ]
   },
   "untagresource": {
    "Resources": [
     "cur"
    ]
   },
   "validatereportdestination": {}
  },
  "Resources": {
   "cur": {
    "ARNFormats": [
     "arn:${Partition}:cur:${Region}:${Account}:definition/.*"
    ]
   }
  }
 },
 "customer-verification": {
  "Actions": {
   "createcustomerverificationdetails": {},
   "createuploadurls": {},
   "getcustomerverificationdetails": {},
   "getcustomerverificationeligibility": {},
   "updatecustomerverificationdetails": {}
  },
  "Resources": {}
 },
 "databrew": {
  "Actions": {
   "batchdeleterecipeversion": {
    "Resources": [
     "Recipe"
    ]
   },
   "createdataset": {},
   "createprofilejob": {},
   "createproject": {},
   "createrecipe": {},
   "createrecipejob": {},
   "createruleset": {},
   "createschedule": {},
   "deletedataset": {
    "Resources": [
     "Dataset"
    ]
   },
   "deletejob": {
    "Resources": [
     "Job"
    ]
   },
   "deleteproject": {
    "Resources": [
     "Project"
    ]
   },
   "deleterecipeversion": {
    "Resources": [
     "Recipe"
    ]
   },
   "deleteruleset": {
    "Resources": [
     "Ruleset"
    ]
   },
   "deleteschedule": {
    "Resources": [
     "Schedule"
    ]
   },
   "describedataset": {
    "Resources": [
     "Dataset"
    ]
   },
   "describejob": {
    "Resources": [
     "Job"
    ]
   },
   "describejobrun": {
    "Resources": [
     "Job"
    ]
   },
   "describeproject": {
    "Resources": [
     "Project"
    ]
   },
   "describerecipe": {
    "Resources": [
     "Recipe"
    ]
   },
   "describeruleset": {
    "Resources": [
     "Ruleset"
    ]
   },
   "describeschedule": {
    "Resources": [
     "Schedule"
    ]
   },
   "listdatasets": {},
   "listjobruns": {
    "Resources": [
     "Job"
    ]
   },
   "listjobs": {},
   "listprojects": {},
   "listrecipes": {},
   "listrecipeversions": {
    "Resources": [
     "Recipe"
    ]
   },
   "listrulesets": {},
   "listschedules": {},
   "listtagsforresource": {
    "Resources": [
     "Dataset",
     "Job",
     "Project",
     "Recipe",
     "Ruleset",
     "Schedule"
    ]
   },
   "publishrecipe": {
    "Resources": [
     "Recipe"
    ]
   },
   "sendprojectsessionaction": {
    "Resources": [
     "Project"
    ]
   },
   "startjobrun": {
    "Resources": [
     "Job"
    ]
   },
   "startprojectsession": {
    "Resources": [
     "Project"
    ]
   },
   "stopjobrun": {
    "Resources": [
     "Job"
    ]
   },
   "tagresource": {
    "Resources": [
     "Dataset",
     "Job",
     "Project",
     "Recipe",
     "Ruleset",
     "Schedule"
    ]
   },
   "untagresource": {
    "Resources": [
     "Dataset",
     "Job",
     "Project",
     "Recipe",
     "Ruleset",
     "Schedule"
    ]
   },
   "updatedataset": {
    "Resources": [
     "Dataset"
    ]
   },
   "updateprofilejob": {
    "Resources": [
     "Job"
    ]
   },
   "updateproject": {
    "Resources": [
     "Project"
    ]
   },
   "updaterecipe": {
    "Resources": [
     "Recipe"
    ]
   },
   "updaterecipejob": {
    "Resources": [
     "Job"
    ]
   },
   "updateruleset": {
    "Resources": [
     "Ruleset"
    ]
   },
   "updateschedule": {
    "Resources": [
     "Schedule"
    ]
   }
  },
  "Resources": {
   "dataset": {
    "ARNFormats": [
     "arn:${Partition}:databrew:${Region}:${Account}:dataset/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "job": {
    "ARNFormats": [
     "arn:${Partition}:databrew:${Region}:${Account}:job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "project": {
    "ARNFormats": [
     "arn:${Partition}:databrew:${Region}:${Account}:project/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "recipe": {
    "ARNFormats": [
     "arn:${Partition}:databrew:${Region}:${Account}:recipe/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "ruleset": {
    "ARNFormats": [
     "arn:${Partition}:databrew:${Region}:${Account}:ruleset/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "schedule": {
    "ARNFormats": [
     "arn:${Partition}:databrew:${Region}:${Account}:schedule/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "dataexchange": {
  "Actions": {
   "acceptdatagrant": {
    "Resources": [
     "data-grants"
    ]
   },
   "canceljob": {
    "Resources": [
     "jobs"
    ]
   },
   "createasset": {
    "Resources": [
     "revisions"
    ]
   },
   "createdatagrant": {},
   "createdataset": {},
   "createeventaction": {},
   "createjob": {},
   "createrevision": {
    "Resources": [
     "data-sets"
    ]
   },
   "deleteasset": {
    "Resources": [
     "assets"
    ]
   },
   "deletedatagrant": {
    "Resources": [
     "data-grants"
    ]
   },
   "deletedataset": {
    "Resources": [
     "data-sets",
     "entitled-data-sets"
    ]
   },
   "deleteeventaction": {
    "Resources": [
     "event-actions"
    ]
   },
   "deleterevision": {
    "Resources": [
     "revisions"
    ]
   },
   "getasset": {
    "Resources": [
     "assets",
     "entitled-assets"
    ]
   },
   "getdatagrant": {
    "Resources": [
     "data-grants"
    ]
   },
   "getdataset": {
    "Resources": [
     "data-sets",
     "entitled-data-sets"
    ]
   },
   "geteventaction": {
    "Resources": [
     "event-actions"
    ]
   },
   "getjob": {
    "Resources": [
     "jobs"
    ]
   },
   "getreceiveddatagrant": {
    "Resources": [
     "data-grants"
    ]
   },
   "getrevision": {
    "Resources": [
     "entitled-revisions",
     "revisions"
    ]
   },
   "listdatagrants": {},
   "listdatasetrevisions": {
    "Resources": [
     "data-sets",
     "entitled-data-sets"
    ]
   },
   "listdatasets": {},
   "listeventactions": {},
   "listjobs": {},
   "listreceiveddatagrants": {},
   "listrevisionassets": {
    "Resources": [
     "entitled-revisions",
     "revisions"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "data-grants",
     "data-sets",
     "revisions"
    ]
   },
   "publishdataset": {
    "Resources": [
     "data-sets"
    ]
   },
   "publishtodatagrant": {
    "Resources": [
     "data-sets"
    ]
   },
   "revokerevision": {
    "Resources": [
     "revisions"
    ]
   },
   "sendapiasset": {
    "Resources": [
     "assets",
     "entitled-assets"
    ]
   },
   "senddatasetnotification": {
    "Resources": [
     "data-sets"
    ]
   },
   "startjob": {
    "Resources": [
     "jobs"
    ]
   },
   "tagresource": {
    "Resources": [
     "data-grants",
     "data-sets",
     "revisions"
    ]
   },
   "untagresource": {
    "Resources": [
     "data-grants",
     "data-sets",
     "revisions"
    ]
   },
   "updateasset": {
    "Resources": [
     "assets"
    ]
   },
   "updatedataset": {
    "Resources": [
     "data-sets"
    ]
   },
   "updateeventaction": {
    "Resources": [
     "event-actions"
    ]
   },
   "updaterevision": {
    "Resources": [
     "revisions"
    ]
   }
  },
  "Resources": {
   "assets": {
    "ARNFormats": [
     "arn:${Partition}:dataexchange:${Region}:${Account}:data-sets/.*"
    ]
   },
   "data-grants": {
    "ARNFormats": [
     "arn:${Partition}:dataexchange:${Region}:${Account}:data-grants/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "data-sets": {
    "ARNFormats": [
     "arn:${Partition}:dataexchange:${Region}:${Account}:data-sets/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "entitled-assets": {
    "ARNFormats": [
     "arn:${Partition}:dataexchange:${Region}::data-sets/.*"
    ]
   },
   "entitled-data-sets": {
    "ARNFormats": [
     "arn:${Partition}:dataexchange:${Region}::data-sets/.*"
    ]
   },
   "entitled-revisions": {
    "ARNFormats": [
     "arn:${Partition}:dataexchange:${Region}::data-sets/.*"
    ]
   },
   "event-actions": {
    "ARNFormats": [
     "arn:${Partition}:dataexchange:${Region}:${Account}:event-actions/.*"
    ]
   },
   "jobs": {
    "ARNFormats": [
     "arn:${Partition}:dataexchange:${Region}:${Account}:jobs/.*"
    ],
    "ConditionKeys": [
     "dataexchange:JobType"
    ]
   },
   "revisions": {
    "ARNFormats": [
     "arn:${Partition}:dataexchange:${Region}:${Account}:data-sets/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "datapipeline": {
  "Actions": {
   "activatepipeline": {
    "Resources": [
     "pipeline"
    ]
   },
   "addtags": {
    "Resources": [
     "pipeline"
    ]
   },
   "createpipeline": {},
   "deactivatepipeline": {
    "Resources": [
     "pipeline"
    ]
   },
   "deletepipeline": {
    "Resources": [
     "pipeline"
    ]
   },
   "describeobjects": {
    "Resources": [
     "pipeline"
    ]
   },
   "describepipelines": {
    "Resources": [
     "pipeline"
    ]
   },
   "evaluateexpression": {
    "Resources": [
     "pipeline"
    ]
   },
   "getaccountlimits": {},
   "getpipelinedefinition": {
    "Resources": [
     "pipeline"
    ]
   },
   "listpipelines": {},
   "pollfortask": {},
   "putaccountlimits": {},
   "putpipelinedefinition": {
    "Resources": [
     "pipeline"
    ]
   },
   "queryobjects": {
    "Resources": [
     "pipeline"
    ]
   },
   "removetags": {
    "Resources": [
     "pipeline"
    ]
   },
   "reporttaskprogress": {
    "Resources": [
     "pipeline"
    ]
   },
   "reporttaskrunnerheartbeat": {},
   "setstatus": {
    "Resources": [
     "pipeline"
    ]
   },
   "settaskstatus": {
    "Resources": [
     "pipeline"
    ]
   },
   "validatepipelinedefinition": {
    "Resources": [
     "pipeline"
    ]
   }
  },
  "Resources": {
   "pipeline": {
    "ARNFormats": [
     "arn:${Partition}:datapipeline:${Region}:${Account}:pipeline/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "datasync": {
  "Actions": {
   "addstoragesystem": {
    "Resources": [
     "agent"
    ]
   },
   "canceltaskexecution": {
    "Resources": [
     "taskexecution"
    ]
   },
   "createagent": {},
   "createlocationazureblob": {},
   "createlocationefs": {},
   "createlocationfsxlustre": {},
   "createlocationfsxontap": {},
   "createlocationfsxopenzfs": {},
   "createlocationfsxwindows": {},
   "createlocationhdfs": {},
   "createlocationnfs": {},
   "createlocationobjectstorage": {},
   "createlocations3": {},
   "createlocationsmb": {},
   "createtask": {
    "Resources": [
     "agent",
     "location"
    ]
   },
   "deleteagent": {
    "Resources": [
     "agent"
    ]
   },
   "deletelocation": {
    "Resources": [
     "location"
    ]
   },
   "deletetask": {
    "Resources": [
     "task"
    ]
   },
   "describeagent": {
    "Resources": [
     "agent"
    ]
   },
   "describediscoveryjob": {
    "Resources": [
     "discoveryjob"
    ]
   },
   "describelocationazureblob": {
    "Resources": [
     "location"
    ]
   },
   "describelocationefs": {
    "Resources": [
     "location"
    ]
   },
   "describelocationfsxlustre": {
    "Resources": [
     "location"
    ]
   },
   "describelocationfsxontap": {
    "Resources": [
     "location"
    ]
   },
   "describelocationfsxopenzfs": {
    "Resources": [
     "location"
    ]
   },
   "describelocationfsxwindows": {
    "Resources": [
     "location"
    ]
   },
   "describelocationhdfs": {
    "Resources": [
     "location"
    ]
   },
   "describelocationnfs": {
    "Resources": [
     "location"
    ]
   },
   "describelocationobjectstorage": {
    "Resources": [
     "location"
    ]
   },
   "describelocations3": {
    "Resources": [
     "location"
    ]
   },
   "describelocationsmb": {
    "Resources": [
     "location"
    ]
   },
   "describestoragesystem": {
    "Resources": [
     "storagesystem"
    ]
   },
   "describestoragesystemresourcemetrics": {
    "Resources": [
     "discoveryjob"
    ]
   },
   "describestoragesystemresources": {
    "Resources": [
     "discoveryjob"
    ]
   },
   "describetask": {
    "Resources": [
     "task"
    ]
   },
   "describetaskexecution": {
    "Resources": [
     "taskexecution"
    ]
   },
   "generaterecommendations": {
    "Resources": [
     "discoveryjob"
    ]
   },
   "listagents": {},
   "listdiscoveryjobs": {},
   "listlocations": {},
   "liststoragesystems": {},
   "listtagsforresource": {
    "Resources": [
     "agent",
     "discoveryjob",
     "location",
     "storagesystem",
     "task",
     "taskexecution"
    ]
   },
   "listtaskexecutions": {},
   "listtasks": {},
   "removestoragesystem": {
    "Resources": [
     "storagesystem"
    ]
   },
   "startdiscoveryjob": {
    "Resources": [
     "storagesystem"
    ]
   },
   "starttaskexecution": {
    "Resources": [
     "task"
    ]
   },
   "stopdiscoveryjob": {
    "Resources": [
     "discoveryjob"
    ]
   },
   "tagresource": {
    "Resources": [
     "agent",
     "discoveryjob",
     "location",
     "storagesystem",
     "task",
     "taskexecution"
    ]
   },
   "untagresource": {
    "Resources": [
     "agent",
     "discoveryjob",
     "location",
     "storagesystem",
     "task",
     "taskexecution"
    ]
   },
   "updateagent": {
    "Resources": [
     "agent"
    ]
   },
   "updatediscoveryjob": {
    "Resources": [
     "discoveryjob"
    ]
   },
   "updatelocationazureblob": {
    "Resources": [
     "location"
    ]
   },
   "updatelocationefs": {
    "Resources": [
     "location"
    ]
   },
   "updatelocationfsxlustre": {
    "Resources": [
     "location"
    ]
   },
   "updatelocationfsxontap": {
    "Resources": [
     "location"
    ]
   },
   "updatelocationfsxopenzfs": {
    "Resources": [
     "location"
    ]
   },
   "updatelocationfsxwindows": {
    "Resources": [
     "location"
    ]
   },
   "updatelocationhdfs": {
    "Resources": [
     "location"
    ]
   },
   "updatelocationnfs": {
    "Resources": [
     "location"
    ]
   },
   "updatelocationobjectstorage": {
    "Resources": [
     "location"
    ]
   },
   "updatelocations3": {
    "Resources": [
     "location"
    ]
   },
   "updatelocationsmb": {
    "Resources": [
     "location"
    ]
   },
   "updatestoragesystem": {
    "Resources": [
     "storagesystem"
    ]
   },
   "updatetask": {
    "Resources": [
     "task"
    ]
   },
   "updatetaskexecution": {
    "Resources": [
     "taskexecution"
    ]
   }
  },
  "Resources": {
   "agent": {
    "ARNFormats": [
     "arn:${Partition}:datasync:${Region}:${AccountId}:agent/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "discoveryjob": {
    "ARNFormats": [
     "arn:${Partition}:datasync:${Region}:${AccountId}:system/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "location": {
    "ARNFormats": [
     "arn:${Partition}:datasync:${Region}:${AccountId}:location/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "storagesystem": {
    "ARNFormats": [
     "arn:${Partition}:datasync:${Region}:${AccountId}:system/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "task": {
    "ARNFormats": [
     "arn:${Partition}:datasync:${Region}:${AccountId}:task/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "taskexecution": {
    "ARNFormats": [
     "arn:${Partition}:datasync:${Region}:${AccountId}:task/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "datazone": {
  "Actions": {
   "acceptpredictions": {},
   "acceptsubscriptionrequest": {},
   "addentityowner": {},
   "addpolicygrant": {},
   "associateenvironmentrole": {},
   "batchdeletelinkedtypes": {
    "Resources": [
     "domain"
    ]
   },
   "batchputlinkedtypes": {
    "Resources": [
     "domain"
    ]
   },
   "cancelmetadatagenerationrun": {},
   "cancelsubscription": {},
   "createasset": {},
   "createassetfilter": {},
   "createassetrevision": {},
   "createassettype": {},
   "createconnection": {},
   "createdataproduct": {},
   "createdataproductrevision": {},
   "createdatasource": {},
   "createdomain": {},
   "createdomainunit": {},
   "createenvironment": {},
   "createenvironmentaction": {},
   "createenvironmentblueprint": {},
   "createenvironmentprofile": {},
   "createformtype": {},
   "createglossary": {},
   "createglossaryterm": {},
   "creategroupprofile": {},
   "createlistingchangeset": {},
   "createproject": {},
   "createprojectmembership": {},
   "createprojectprofile": {},
   "createrule": {},
   "createsubscriptiongrant": {},
   "createsubscriptionrequest": {},
   "createsubscriptiontarget": {},
   "createuserprofile": {},
   "deleteasset": {},
   "deleteassetfilter": {},
   "deleteassettype": {},
   "deleteconnection": {},
   "deletedataproduct": {},
   "deletedatasource": {},
   "deletedomain": {
    "Resources": [
     "domain"
    ]
   },
   "deletedomainsharingpolicy": {},
   "deletedomainunit": {},
   "deleteenvironment": {},
   "deleteenvironmentaction": {},
   "deleteenvironmentblueprint": {},
   "deleteenvironmentblueprintconfiguration": {},
   "deleteenvironmentprofile": {},
   "deleteformtype": {},
   "deleteglossary": {},
   "deleteglossaryterm": {},
   "deletelisting": {},
   "deleteproject": {},
   "deleteprojectmembership": {},
   "deleteprojectprofile": {},
   "deleterule": {},
   "deletesubscriptiongrant": {},
   "deletesubscriptionrequest": {},
   "deletesubscriptiontarget": {},
   "deletetimeseriesdatapoints": {},
   "disassociateenvironmentrole": {},
   "getasset": {},
   "getassetfilter": {},
   "getassettype": {},
   "getconnection": {},
   "getdataproduct": {},
   "getdatasource": {},
   "getdatasourcerun": {},
   "getdomain": {
    "Resources": [
     "domain"
    ]
   },
   "getdomainexecutionrolecredentials": {},
   "getdomainsharingpolicy": {},
   "getdomainunit": {},
   "getenvironment": {},
   "getenvironmentaction": {},
   "getenvironmentactionlink": {},
   "getenvironmentblueprint": {},
   "getenvironmentblueprintconfiguration": {},
   "getenvironmentcredentials": {},
   "getenvironmentprofile": {},
   "getformtype": {},
   "getglossary": {},
   "getglossaryterm": {},
   "getgroupprofile": {},
   "getiamportalloginurl": {},
   "getjobrun": {},
   "getlineageevent": {},
   "getlineagenode": {},
   "getlisting": {},
   "getmetadatagenerationrun": {},
   "getproject": {},
   "getprojectprofile": {},
   "getrule": {},
   "getsubscription": {},
   "getsubscriptioneligibility": {},
   "getsubscriptiongrant": {},
   "getsubscriptionrequestdetails": {},
   "getsubscriptiontarget": {},
   "gettimeseriesdatapoint": {},
   "getuserprofile": {},
   "listaccountenvironments": {},
   "listassetfilters": {},
   "listassetrevisions": {},
   "listconnections": {},
   "listdataproductrevisions": {},
   "listdatasourcerunactivities": {},
   "listdatasourceruns": {},
   "listdatasources": {},
   "listdomains": {},
   "listdomainunitsforparent": {},
   "listentityowners": {},
   "listenvironmentactions": {},
   "listenvironmentblueprintconfigurations": {},
   "listenvironmentblueprintconfigurationsummaries": {},
   "listenvironmentblueprints": {},
   "listenvironmentprofiles": {},
   "listenvironments": {},
   "listgroupsforuser": {},
   "listjobruns": {},
   "listlineageevents": {},
   "listlineagenodehistory": {},
   "listlinkedtypes": {
    "Resources": [
     "domain"
    ]
   },
   "listmetadatagenerationruns": {},
   "listnotifications": {},
   "listpolicygrants": {},
   "listprojectmemberships": {},
   "listprojectprofiles": {},
   "listprojects": {},
   "listrules": {},
   "listsubscriptiongrants": {},
   "listsubscriptionrequests": {},
   "listsubscriptions": {},
   "listsubscriptiontargets": {},
   "listtagsforresource": {
    "Resources": [
     "domain"
    ]
   },
   "listtimeseriesdatapoints": {},
   "listwarehousemetadata": {},
   "postlineageevent": {},
   "posttimeseriesdatapoints": {},
   "provisiondomain": {},
   "putdomainsharingpolicy": {},
   "putenvironmentblueprintconfiguration": {},
   "refreshtoken": {},
   "rejectpredictions": {},
   "rejectsubscriptionrequest": {},
   "removeentityowner": {},
   "removepolicygrant": {},
   "revokesubscription": {},
   "search": {},
   "searchgroupprofiles": {},
   "searchlistings": {},
   "searchrules": {},
   "searchtypes": {},
   "searchuserprofiles": {},
   "ssologin": {},
   "ssologout": {},
   "startdatasourcerun": {},
   "startmetadatagenerationrun": {},
   "stopmetadatagenerationrun": {},
   "tagresource": {
    "Resources": [
     "domain"
    ]
   },
   "untagresource": {
    "Resources": [
     "domain"
    ]
   },
   "updateassetfilter": {},
   "updateconnection": {},
   "updatedatasource": {},
   "updatedatasourcerunactivities": {},
   "updatedomain": {
    "Resources": [
     "domain"
    ]
   },
   "updatedomainunit": {},
   "updateenvironment": {},
   "updateenvironmentaction": {},
   "updateenvironmentblueprint": {},
   "updateenvironmentconfiguration": {},
   "updateenvironmentdeploymentstatus": {},
   "updateenvironmentprofile": {},
   "updateglossary": {},
   "updateglossaryterm": {},
   "updategroupprofile": {},
   "updateproject": {},
   "updateprojectprofile": {},
   "updaterule": {},
   "updatesubscriptiongrantstatus": {},
   "updatesubscriptionrequest": {},
   "updatesubscriptiontarget": {},
   "updateuserprofile": {},
   "validatepassrole": {}
  },
  "Resources": {
   "domain": {
    "ARNFormats": [
     "arn:${Partition}:datazone:${Region}:${Account}:domain/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "dax": {
  "Actions": {
   "batchgetitem": {
    "Resources": [
     "application"
    ]
   },
   "batchwriteitem": {
    "Resources": [
     "application"
    ]
   },
   "conditioncheckitem": {
    "Resources": [
     "application"
    ]
   },
   "createcluster": {
    "Resources": [
     "application"
    ]
   },
   "createparametergroup": {},
   "createsubnetgroup": {},
   "decreasereplicationfactor": {
    "Resources": [
     "application"
    ]
   },
   "deletecluster": {
    "Resources": [
     "application"
    ]
   },
   "deleteitem": {
    "Resources": [
     "application"
    ]
   },
   "deleteparametergroup": {},
   "deletesubnetgroup": {},
   "describeclusters": {
    "Resources": [
     "application"
    ]
   },
   "describedefaultparameters": {},
   "describeevents": {},
   "describeparametergroups": {},
   "describeparameters": {},
   "describesubnetgroups": {},
   "getitem": {
    "Resources": [
     "application"
    ]
   },
   "increasereplicationfactor": {
    "Resources": [
     "application"
    ]
   },
   "listtags": {
    "Resources": [
     "application"
    ]
   },
   "putitem": {
    "Resources": [
     "application"
    ]
   },
   "query": {
    "Resources": [
     "application"
    ]
   },
   "rebootnode": {
    "Resources": [
     "application"
    ]
   },
   "scan": {
    "Resources": [
     "application"
    ]
   },
   "tagresource": {
    "Resources": [
     "application"
    ]
   },
   "untagresource": {
    "Resources": [
     "application"
    ]
   },
   "updatecluster": {
    "Resources": [
     "application"
    ]
   },
   "updateitem": {
    "Resources": [
     "application"
    ]
   },
   "updateparametergroup": {},
   "updatesubnetgroup": {}
  },
  "Resources": {
   "application": {
    "ARNFormats": [
     "arn:${Partition}:dax:${Region}:${Account}:cache/.*"
    ]
   }
  }
 },
 "dbqms": {
  "Actions": {
   "createfavoritequery": {},
   "createqueryhistory": {},
   "createtab": {},
   "deletefavoritequeries": {},
   "deletequeryhistory": {},
   "deletetab": {},
   "describefavoritequeries": {},
   "describequeryhistory": {},
   "describetabs": {},
   "getquerystring": {},
   "updatefavoritequery": {},
   "updatequeryhistory": {},
   "updatetab": {}
  },
  "Resources": {}
 },
 "deadline": {
  "Actions": {
   "associatemembertofarm": {
    "Resources": [
     "farm"
    ]
   },
   "associatemembertofleet": {
    "Resources": [
     "fleet"
    ]
   },
   "associatemembertojob": {
    "Resources": [
     "job"
    ]
   },
   "associatemembertoqueue": {
    "Resources": [
     "queue"
    ]
   },
   "assumefleetroleforread": {
    "Resources": [
     "fleet"
    ]
   },
   "assumefleetroleforworker": {
    "Resources": [
     "worker"
    ]
   },
   "assumequeueroleforread": {
    "Resources": [
     "queue"
    ]
   },
   "assumequeueroleforuser": {
    "Resources": [
     "queue"
    ]
   },
   "assumequeueroleforworker": {
    "Resources": [
     "queue",
     "worker"
    ]
   },
   "batchgetjobentity": {
    "Resources": [
     "worker"
    ]
   },
   "copyjobtemplate": {
    "Resources": [
     "job"
    ]
   },
   "createbudget": {
    "Resources": [
     "budget"
    ]
   },
   "createfarm": {
    "Resources": [
     "farm"
    ]
   },
   "createfleet": {
    "Resources": [
     "fleet"
    ]
   },
   "createjob": {
    "Resources": [
     "job"
    ]
   },
   "createlicenseendpoint": {
    "Resources": [
     "license-endpoint"
    ]
   },
   "createlimit": {
    "Resources": [
     "farm"
    ]
   },
   "createmonitor": {
    "Resources": [
     "monitor"
    ]
   },
   "createqueue": {
    "Resources": [
     "queue"
    ]
   },
   "createqueueenvironment": {
    "Resources": [
     "queue"
    ]
   },
   "createqueuefleetassociation": {
    "Resources": [
     "fleet",
     "queue"
    ]
   },
   "createqueuelimitassociation": {
    "Resources": [
     "farm",
     "queue"
    ]
   },
   "createstorageprofile": {
    "Resources": [
     "farm"
    ]
   },
   "createworker": {
    "Resources": [
     "worker"
    ]
   },
   "deletebudget": {
    "Resources": [
     "budget"
    ]
   },
   "deletefarm": {
    "Resources": [
     "farm"
    ]
   },
   "deletefleet": {
    "Resources": [
     "fleet"
    ]
   },
   "deletelicenseendpoint": {
    "Resources": [
     "license-endpoint"
    ]
   },
   "deletelimit": {
    "Resources": [
     "farm"
    ]
   },
   "deletemeteredproduct": {
    "Resources": [
     "metered-product"
    ]
   },
   "deletemonitor": {
    "Resources": [
     "monitor"
    ]
   },
   "deletequeue": {
    "Resources": [
     "queue"
    ]
   },
   "deletequeueenvironment": {
    "Resources": [
     "queue"
    ]
   },
   "deletequeuefleetassociation": {
    "Resources": [
     "fleet",
     "queue"
    ]
   },
   "deletequeuelimitassociation": {
    "Resources": [
     "farm",
     "queue"
    ]
   },
   "deletestorageprofile": {
    "Resources": [
     "farm"
    ]
   },
   "deleteworker": {
    "Resources": [
     "worker"
    ]
   },
   "disassociatememberfromfarm": {
    "Resources": [
     "farm"
    ]
   },
   "disassociatememberfromfleet": {
    "Resources": [
     "fleet"
    ]
   },
   "disassociatememberfromjob": {
    "Resources": [
     "job"
    ]
   },
   "disassociatememberfromqueue": {
    "Resources": [
     "queue"
    ]
   },
   "getapplicationversion": {
    "Resources": [
     "monitor"
    ]
   },
   "getbudget": {
    "Resources": [
     "budget"
    ]
   },
   "getfarm": {
    "Resources": [
     "farm"
    ]
   },
   "getfleet": {
    "Resources": [
     "fleet"
    ]
   },
   "getjob": {
    "Resources": [
     "job"
    ]
   },
   "getjobtemplate": {
    "Resources": [
     "job"
    ]
   },
   "getlicenseendpoint": {
    "Resources": [
     "license-endpoint"
    ]
   },
   "getlimit": {
    "Resources": [
     "farm"
    ]
   },
   "getmonitor": {
    "Resources": [
     "monitor"
    ]
   },
   "getqueue": {
    "Resources": [
     "queue"
    ]
   },
   "getqueueenvironment": {
    "Resources": [
     "queue"
    ]
   },
   "getqueuefleetassociation": {
    "Resources": [
     "fleet",
     "queue"
    ]
   },
   "getqueuelimitassociation": {
    "Resources": [
     "farm",
     "queue"
    ]
   },
   "getsession": {
    "Resources": [
     "job"
    ]
   },
   "getsessionaction": {
    "Resources": [
     "job"
    ]
   },
   "getsessionsstatisticsaggregation": {
    "Resources": [
     "farm",
     "fleet",
     "queue"
    ]
   },
   "getstep": {
    "Resources": [
     "job"
    ]
   },
   "getstorageprofile": {
    "Resources": [
     "farm"
    ]
   },
   "getstorageprofileforqueue": {
    "Resources": [
     "queue"
    ]
   },
   "gettask": {
    "Resources": [
     "job"
    ]
   },
   "getworker": {
    "Resources": [
     "worker"
    ]
   },
   "listavailablemeteredproducts": {},
   "listbudgets": {
    "Resources": [
     "budget"
    ]
   },
   "listfarmmembers": {
    "Resources": [
     "farm"
    ]
   },
   "listfarms": {
    "Resources": [
     "farm"
    ]
   },
   "listfleetmembers": {
    "Resources": [
     "fleet"
    ]
   },
   "listfleets": {
    "Resources": [
     "fleet"
    ]
   },
   "listjobmembers": {
    "Resources": [
     "job"
    ]
   },
   "listjobparameterdefinitions": {
    "Resources": [
     "job"
    ]
   },
   "listjobs": {
    "Resources": [
     "job"
    ]
   },
   "listlicenseendpoints": {
    "Resources": [
     "license-endpoint"
    ]
   },
   "listlimits": {
    "Resources": [
     "farm"
    ]
   },
   "listmeteredproducts": {
    "Resources": [
     "metered-product"
    ]
   },
   "listmonitors": {
    "Resources": [
     "monitor"
    ]
   },
   "listqueueenvironments": {
    "Resources": [
     "queue"
    ]
   },
   "listqueuefleetassociations": {
    "Resources": [
     "farm",
     "fleet",
     "queue"
    ]
   },
   "listqueuelimitassociations": {
    "Resources": [
     "farm",
     "queue"
    ]
   },
   "listqueuemembers": {
    "Resources": [
     "queue"
    ]
   },
   "listqueues": {
    "Resources": [
     "queue"
    ]
   },
   "listsessionactions": {
    "Resources": [
     "job"
    ]
   },
   "listsessions": {
    "Resources": [
     "job"
    ]
   },
   "listsessionsforworker": {
    "Resources": [
     "worker"
    ]
   },
   "liststepconsumers": {
    "Resources": [
     "job"
    ]
   },
   "liststepdependencies": {
    "Resources": [
     "job"
    ]
   },
   "liststeps": {
    "Resources": [
     "job"
    ]
   },
   "liststorageprofiles": {
    "Resources": [
     "farm"
    ]
   },
   "liststorageprofilesforqueue": {
    "Resources": [
     "queue"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "farm",
     "fleet",
     "license-endpoint",
     "queue"
    ]
   },
   "listtasks": {
    "Resources": [
     "job"
    ]
   },
   "listworkers": {
    "Resources": [
     "worker"
    ]
   },
   "putmeteredproduct": {
    "Resources": [
     "metered-product"
    ]
   },
   "searchjobs": {
    "Resources": [
     "queue"
    ]
   },
   "searchsteps": {
    "Resources": [
     "job",
     "queue"
    ]
   },
   "searchtasks": {
    "Resources": [
     "job",
     "queue"
    ]
   },
   "searchworkers": {
    "Resources": [
     "fleet"
    ]
   },
   "startsessionsstatisticsaggregation": {
    "Resources": [
     "fleet",
     "queue"
    ]
   },
   "tagresource": {
    "Resources": [
     "farm",
     "fleet",
     "license-endpoint",
     "queue"
    ]
   },
   "untagresource": {
    "Resources": [
     "farm",
     "fleet",
     "license-endpoint",
     "queue"
    ]
   },
   "updatebudget": {
    "Resources": [
     "budget"
    ]
   },
   "updatefarm": {
    "Resources": [
     "farm"
    ]
   },
   "updatefleet": {
    "Resources": [
     "fleet"
    ]
   },
   "updatejob": {
    "Resources": [
     "job"
    ]
   },
   "updatelimit": {
    "Resources": [
     "farm"
    ]
   },
   "updatemonitor": {
    "Resources": [
     "monitor"
    ]
   },
   "updatequeue": {
    "Resources": [
     "queue"
    ]
   },
   "updatequeueenvironment": {
    "Resources": [
     "queue"
    ]
   },
   "updatequeuefleetassociation": {
    "Resources": [
     "fleet",
     "queue"
    ]
   },
   "updatequeuelimitassociation": {
    "Resources": [
     "farm",
     "queue"
    ]
   },
   "updatesession": {
    "Resources": [
     "job"
    ]
   },
   "updatestep": {
    "Resources": [
     "job"
    ]
   },
   "updatestorageprofile": {
    "Resources": [
     "farm"
    ]
   },
   "updatetask": {
    "Resources": [
     "job"
    ]
   },
   "updateworker": {
    "Resources": [
     "worker"
    ]
   },
   "updateworkerschedule": {
    "Resources": [
     "worker"
    ]
   }
  },
  "Resources": {
   "budget": {
    "ARNFormats": [
     "arn:${Partition}:deadline:${Region}:${Account}:farm/.*"
    ],
    "ConditionKeys": [
     "deadline:FarmMembershipLevels"
    ]
   },
   "farm": {
    "ARNFormats": [
     "arn:${Partition}:deadline:${Region}:${Account}:farm/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "deadline:FarmMembershipLevels"
    ]
   },
   "fleet": {
    "ARNFormats": [
     "arn:${Partition}:deadline:${Region}:${Account}:farm/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "deadline:FarmMembershipLevels",
     "deadline:FleetMembershipLevels"
    ]
   },
   "job": {
    "ARNFormats": [
     "arn:${Partition}:deadline:${Region}:${Account}:farm/.*"
    ],
    "ConditionKeys": [
     "deadline:FarmMembershipLevels",
     "deadline:JobMembershipLevels",
     "deadline:QueueMembershipLevels"
    ]
   },
   "license-endpoint": {
    "ARNFormats": [
     "arn:${Partition}:deadline:${Region}:${Account}:license-endpoint/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "metered-product": {
    "ARNFormats": [
     "arn:${Partition}:deadline:${Region}:${Account}:license-endpoint/.*"
    ]
   },
   "monitor": {
    "ARNFormats": [
     "arn:${Partition}:deadline:${Region}:${Account}:monitor/.*"
    ]
   },
   "queue": {
    "ARNFormats": [
     "arn:${Partition}:deadline:${Region}:${Account}:farm/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "deadline:FarmMembershipLevels",
     "deadline:QueueMembershipLevels"
    ]
   },
   "worker": {
    "ARNFormats": [
     "arn:${Partition}:deadline:${Region}:${Account}:farm/.*"
    ],
    "ConditionKeys": [
     "deadline:FarmMembershipLevels",
     "deadline:FleetMembershipLevels"
    ]
   }
  }
 },
 "deepcomposer": {
  "Actions": {
   "associatecoupon": {},
   "createaudio": {
    "Resources": [
     "audio"
    ]
   },
   "createcomposition": {
    "Resources": [
     "composition"
    ]
   },
   "createmodel": {
    "Resources": [
     "model"
    ]
   },
   "deletecomposition": {
    "Resources": [
     "composition"
    ]
   },
   "deletemodel": {
    "Resources": [
     "model"
    ]
   },
   "getcomposition": {
    "Resources": [
     "composition"
    ]
   },
   "getmodel": {
    "Resources": [
     "model"
    ]
   },
   "getsamplemodel": {
    "Resources": [
     "model"
    ]
   },
   "listcompositions": {
    "Resources": [
     "composition"
    ]
   },
   "listmodels": {
    "Resources": [
     "model"
    ]
   },
   "listsamplemodels": {
    "Resources": [
     "model"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "composition",
     "model"
    ]
   },
   "listtrainingtopics": {
    "Resources": [
     "model"
    ]
   },
   "tagresource": {
    "Resources": [
     "composition",
     "model"
    ]
   },
   "untagresource": {
    "Resources": [
     "composition",
     "model"
    ]
   },
   "updatecomposition": {
    "Resources": [
     "composition"
    ]
   },
   "updatemodel": {
    "Resources": [
     "model"
    ]
   }
  },
  "Resources": {
   "audio": {
    "ARNFormats": [
     "arn:${Partition}:deepcomposer:${Region}:${Account}:audio/.*"
    ]
   },
   "composition": {
    "ARNFormats": [
     "arn:${Partition}:deepcomposer:${Region}:${Account}:composition/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "model": {
    "ARNFormats": [
     "arn:${Partition}:deepcomposer:${Region}:${Account}:model/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "deepracer": {
  "Actions": {
   "addleaderboardaccesspermission": {
    "Resources": [
     "leaderboard"
    ]
   },
   "admindescribeaccountkey": {},
   "admingetaccountconfig": {},
   "adminlistassociatedresources": {},
   "adminlistassociatedusers": {},
   "adminmanageuser": {},
   "adminsetaccountconfig": {},
   "adminupdateaccountkey": {},
   "clonereinforcementlearningmodel": {
    "Resources": [
     "reinforcement_learning_model",
     "track"
    ]
   },
   "createcar": {},
   "createleaderboard": {},
   "createleaderboardaccesstoken": {
    "Resources": [
     "leaderboard"
    ]
   },
   "createleaderboardsubmission": {
    "Resources": [
     "leaderboard",
     "reinforcement_learning_model"
    ]
   },
   "createreinforcementlearningmodel": {
    "Resources": [
     "track"
    ]
   },
   "deleteleaderboard": {
    "Resources": [
     "leaderboard"
    ]
   },
   "deletemodel": {
    "Resources": [
     "reinforcement_learning_model"
    ]
   },
   "editleaderboard": {
    "Resources": [
     "leaderboard"
    ]
   },
   "getaccountconfig": {},
   "getalias": {},
   "getasseturl": {
    "Resources": [
     "reinforcement_learning_model"
    ]
   },
   "getcar": {
    "Resources": [
     "car"
    ]
   },
   "getcars": {},
   "getevaluation": {
    "Resources": [
     "evaluation_job"
    ]
   },
   "getlatestusersubmission": {
    "Resources": [
     "leaderboard"
    ]
   },
   "getleaderboard": {
    "Resources": [
     "leaderboard"
    ]
   },
   "getmodel": {
    "Resources": [
     "reinforcement_learning_model"
    ]
   },
   "getprivateleaderboard": {
    "Resources": [
     "leaderboard"
    ]
   },
   "getrankedusersubmission": {
    "Resources": [
     "leaderboard"
    ]
   },
   "gettrack": {
    "Resources": [
     "track"
    ]
   },
   "gettrainingjob": {
    "Resources": [
     "training_job"
    ]
   },
   "importmodel": {},
   "listevaluations": {
    "Resources": [
     "reinforcement_learning_model"
    ]
   },
   "listleaderboardevaluations": {
    "Resources": [
     "leaderboard"
    ]
   },
   "listleaderboards": {},
   "listleaderboardsubmissions": {
    "Resources": [
     "leaderboard"
    ]
   },
   "listmodels": {},
   "listprivateleaderboardparticipants": {
    "Resources": [
     "leaderboard"
    ]
   },
   "listprivateleaderboards": {},
   "listsubscribedprivateleaderboards": {},
   "listtagsforresource": {
    "Resources": [
     "car",
     "evaluation_job",
     "leaderboard",
     "leaderboard_evaluation_job",
     "reinforcement_learning_model",
     "training_job"
    ]
   },
   "listtracks": {},
   "listtrainingjobs": {
    "Resources": [
     "reinforcement_learning_model"
    ]
   },
   "migratemodels": {},
   "performleaderboardoperation": {
    "Resources": [
     "leaderboard"
    ]
   },
   "removeleaderboardaccesspermission": {
    "Resources": [
     "leaderboard"
    ]
   },
   "setalias": {},
   "startevaluation": {
    "Resources": [
     "reinforcement_learning_model",
     "track"
    ]
   },
   "stopevaluation": {
    "Resources": [
     "evaluation_job"
    ]
   },
   "stoptrainingreinforcementlearningmodel": {
    "Resources": [
     "reinforcement_learning_model"
    ]
   },
   "tagresource": {
    "Resources": [
     "car",
     "evaluation_job",
     "leaderboard",
     "leaderboard_evaluation_job",
     "reinforcement_learning_model",
     "training_job"
    ]
   },
   "testrewardfunction": {},
   "untagresource": {
    "Resources": [
     "car",
     "evaluation_job",
     "leaderboard",
     "leaderboard_evaluation_job",
     "reinforcement_learning_model",
     "training_job"
    ]
   },
   "updatecar": {
    "Resources": [
     "car"
    ]
   }
  },
  "Resources": {
   "car": {
    "ARNFormats": [
     "arn:${Partition}:deepracer:${Region}:${Account}:car/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "evaluation_job": {
    "ARNFormats": [
     "arn:${Partition}:deepracer:${Region}:${Account}:evaluation_job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "leaderboard": {
    "ARNFormats": [
     "arn:${Partition}:deepracer:${Region}::leaderboard/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "leaderboard_evaluation_job": {
    "ARNFormats": [
     "arn:${Partition}:deepracer:${Region}:${Account}:leaderboard_evaluation_job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "reinforcement_learning_model": {
    "ARNFormats": [
     "arn:${Partition}:deepracer:${Region}:${Account}:model/reinforcement_learning/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "track": {
    "ARNFormats": [
     "arn:${Partition}:deepracer:${Region}::track/.*"
    ]
   },
   "training_job": {
    "ARNFormats": [
     "arn:${Partition}:deepracer:${Region}:${Account}:training_job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "detective": {
  "Actions": {
   "acceptinvitation": {
    "Resources": [
     "Graph"
    ]
   },
   "batchgetgraphmemberdatasources": {
    "Resources": [
     "Graph"
    ]
   },
   "batchgetmembershipdatasources": {},
   "creategraph": {},
   "createmembers": {
    "Resources": [
     "Graph"
    ]
   },
   "deletegraph": {
    "Resources": [
     "Graph"
    ]
   },
   "deletemembers": {
    "Resources": [
     "Graph"
    ]
   },
   "describeorganizationconfiguration": {
    "Resources": [
     "Graph"
    ]
   },
   "disableorganizationadminaccount": {},
   "disassociatemembership": {
    "Resources": [
     "Graph"
    ]
   },
   "enableorganizationadminaccount": {},
   "getfreetrialeligibility": {
    "Resources": [
     "Graph"
    ]
   },
   "getgraphingeststate": {
    "Resources": [
     "Graph"
    ]
   },
   "getinvestigation": {
    "Resources": [
     "Graph"
    ]
   },
   "getmembers": {
    "Resources": [
     "Graph"
    ]
   },
   "getpricinginformation": {},
   "getusageinformation": {
    "Resources": [
     "Graph"
    ]
   },
   "invokeassistant": {
    "Resources": [
     "Graph"
    ]
   },
   "listdatasourcepackages": {
    "Resources": [
     "Graph"
    ]
   },
   "listgraphs": {},
   "listhighdegreeentities": {
    "Resources": [
     "Graph"
    ]
   },
   "listindicators": {
    "Resources": [
     "Graph"
    ]
   },
   "listinvestigations": {
    "Resources": [
     "Graph"
    ]
   },
   "listinvitations": {},
   "listmembers": {
    "Resources": [
     "Graph"
    ]
   },
   "listorganizationadminaccount": {},
   "listtagsforresource": {
    "Resources": [
     "Graph"
    ]
   },
   "rejectinvitation": {
    "Resources": [
     "Graph"
    ]
   },
   "searchgraph": {
    "Resources": [
     "Graph"
    ]
   },
   "startinvestigation": {
    "Resources": [
     "Graph"
    ]
   },
   "startmonitoringmember": {
    "Resources": [
     "Graph"
    ]
   },
   "tagresource": {
    "Resources": [
     "Graph"
    ]
   },
   "untagresource": {
    "Resources": [
     "Graph"
    ]
   },
   "updatedatasourcepackages": {
    "Resources": [
     "Graph"
    ]
   },
   "updateinvestigationstate": {
    "Resources": [
     "Graph"
    ]
   },
   "updateorganizationconfiguration": {
    "Resources": [
     "Graph"
    ]
   }
  },
  "Resources": {
   "graph": {
    "ARNFormats": [
     "arn:${Partition}:detective:${Region}:${Account}:graph:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "devicefarm": {
  "Actions": {
   "createdevicepool": {
    "Resources": [
     "project"
    ]
   },
   "createinstanceprofile": {},
   "createnetworkprofile": {
    "Resources": [
     "project"
    ]
   },
   "createproject": {},
   "createremoteaccesssession": {
    "Resources": [
     "device",
     "deviceinstance",
     "project",
     "upload"
    ]
   },
   "createtestgridproject": {},
   "createtestgridurl": {
    "Resources": [
     "testgrid-project"
    ]
   },
   "createupload": {
    "Resources": [
     "project"
    ]
   },
   "createvpceconfiguration": {},
   "deletedevicepool": {
    "Resources": [
     "devicepool"
    ]
   },
   "deleteinstanceprofile": {
    "Resources": [
     "instanceprofile"
    ]
   },
   "deletenetworkprofile": {
    "Resources": [
     "networkprofile"
    ]
   },
   "deleteproject": {
    "Resources": [
     "project"
    ]
   },
   "deleteremoteaccesssession": {
    "Resources": [
     "session"
    ]
   },
   "deleterun": {
    "Resources": [
     "run"
    ]
   },
   "deletetestgridproject": {
    "Resources": [
     "testgrid-project"
    ]
   },
   "deleteupload": {
    "Resources": [
     "upload"
    ]
   },
   "deletevpceconfiguration": {
    "Resources": [
     "vpceconfiguration"
    ]
   },
   "getaccountsettings": {},
   "getdevice": {
    "Resources": [
     "device"
    ]
   },
   "getdeviceinstance": {
    "Resources": [
     "deviceinstance"
    ]
   },
   "getdevicepool": {
    "Resources": [
     "devicepool"
    ]
   },
   "getdevicepoolcompatibility": {
    "Resources": [
     "devicepool",
     "upload"
    ]
   },
   "getinstanceprofile": {
    "Resources": [
     "instanceprofile"
    ]
   },
   "getjob": {
    "Resources": [
     "job"
    ]
   },
   "getnetworkprofile": {
    "Resources": [
     "networkprofile"
    ]
   },
   "getofferingstatus": {},
   "getproject": {
    "Resources": [
     "project"
    ]
   },
   "getremoteaccesssession": {
    "Resources": [
     "session"
    ]
   },
   "getrun": {
    "Resources": [
     "run"
    ]
   },
   "getsuite": {
    "Resources": [
     "suite"
    ]
   },
   "gettest": {
    "Resources": [
     "test"
    ]
   },
   "gettestgridproject": {
    "Resources": [
     "testgrid-project"
    ]
   },
   "gettestgridsession": {
    "Resources": [
     "testgrid-project",
     "testgrid-session"
    ]
   },
   "getupload": {
    "Resources": [
     "upload"
    ]
   },
   "getvpceconfiguration": {
    "Resources": [
     "vpceconfiguration"
    ]
   },
   "installtoremoteaccesssession": {
    "Resources": [
     "session",
     "upload"
    ]
   },
   "listartifacts": {
    "Resources": [
     "job",
     "run",
     "suite",
     "test"
    ]
   },
   "listdeviceinstances": {},
   "listdevicepools": {
    "Resources": [
     "project"
    ]
   },
   "listdevices": {},
   "listinstanceprofiles": {},
   "listjobs": {
    "Resources": [
     "run"
    ]
   },
   "listnetworkprofiles": {
    "Resources": [
     "project"
    ]
   },
   "listofferingpromotions": {},
   "listofferings": {},
   "listofferingtransactions": {},
   "listprojects": {},
   "listremoteaccesssessions": {
    "Resources": [
     "project"
    ]
   },
   "listruns": {
    "Resources": [
     "project"
    ]
   },
   "listsamples": {
    "Resources": [
     "job"
    ]
   },
   "listsuites": {
    "Resources": [
     "job"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "device",
     "deviceinstance",
     "devicepool",
     "instanceprofile",
     "networkprofile",
     "project",
     "run",
     "session",
     "testgrid-project",
     "testgrid-session",
     "vpceconfiguration"
    ]
   },
   "listtestgridprojects": {},
   "listtestgridsessionactions": {
    "Resources": [
     "testgrid-session"
    ]
   },
   "listtestgridsessionartifacts": {
    "Resources": [
     "testgrid-session"
    ]
   },
   "listtestgridsessions": {
    "Resources": [
     "testgrid-project"
    ]
   },
   "listtests": {
    "Resources": [
     "suite"
    ]
   },
   "listuniqueproblems": {
    "Resources": [
     "run"
    ]
   },
   "listuploads": {
    "Resources": [
     "project"
    ]
   },
   "listvpceconfigurations": {},
   "purchaseoffering": {},
   "renewoffering": {},
   "schedulerun": {
    "Resources": [
     "devicepool",
     "project",
     "upload"
    ]
   },
   "stopjob": {
    "Resources": [
     "job"
    ]
   },
   "stopremoteaccesssession": {
    "Resources": [
     "session"
    ]
   },
   "stoprun": {
    "Resources": [
     "run"
    ]
   },
   "tagresource": {
    "Resources": [
     "device",
     "deviceinstance",
     "devicepool",
     "instanceprofile",
     "networkprofile",
     "project",
     "run",
     "session",
     "testgrid-project",
     "testgrid-session",
     "vpceconfiguration"
    ]
   },
   "untagresource": {
    "Resources": [
     "device",
     "deviceinstance",
     "devicepool",
     "instanceprofile",
     "networkprofile",
     "project",
     "run",
     "session",
     "testgrid-project",
     "testgrid-session",
     "vpceconfiguration"
    ]
   },
   "updatedeviceinstance": {
    "Resources": [
     "deviceinstance",
     "instanceprofile"
    ]
   },
   "updatedevicepool": {
    "Resources": [
     "devicepool"
    ]
   },
   "updateinstanceprofile": {
    "Resources": [
     "instanceprofile"
    ]
   },
   "updatenetworkprofile": {
    "Resources": [
     "networkprofile"
    ]
   },
   "updateproject": {
    "Resources": [
     "project"
    ]
   },
   "updatetestgridproject": {
    "Resources": [
     "testgrid-project"
    ]
   },
   "updateupload": {
    "Resources": [
     "upload"
    ]
   },
   "updatevpceconfiguration": {
    "Resources": [
     "vpceconfiguration"
    ]
   }
  },
  "Resources": {
   "artifact": {
    "ARNFormats": [
     "arn:${Partition}:devicefarm:${Region}:${Account}:artifact:.*"
    ]
   },
   "device": {
    "ARNFormats": [
     "arn:${Partition}:devicefarm:${Region}::device:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "deviceinstance": {
    "ARNFormats": [
     "arn:${Partition}:devicefarm:${Region}::deviceinstance:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "devicepool": {
    "ARNFormats": [
     "arn:${Partition}:devicefarm:${Region}:${Account}:devicepool:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "instanceprofile": {
    "ARNFormats": [
     "arn:${Partition}:devicefarm:${Region}:${Account}:instanceprofile:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "job": {
    "ARNFormats": [
     "arn:${Partition}:devicefarm:${Region}:${Account}:job:.*"
    ]
   },
   "networkprofile": {
    "ARNFormats": [
     "arn:${Partition}:devicefarm:${Region}:${Account}:networkprofile:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "project": {
    "ARNFormats": [
     "arn:${Partition}:devicefarm:${Region}:${Account}:project:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "run": {
    "ARNFormats": [
     "arn:${Partition}:devicefarm:${Region}:${Account}:run:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "sample": {
    "ARNFormats": [
     "arn:${Partition}:devicefarm:${Region}:${Account}:sample:.*"
    ]
   },
   "session": {
    "ARNFormats": [
     "arn:${Partition}:devicefarm:${Region}:${Account}:session:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "suite": {
    "ARNFormats": [
     "arn:${Partition}:devicefarm:${Region}:${Account}:suite:.*"
    ]
   },
   "test": {
    "ARNFormats": [
     "arn:${Partition}:devicefarm:${Region}:${Account}:test:.*"
    ]
   },
   "testgrid-project": {
    "ARNFormats": [
     "arn:${Partition}:devicefarm:${Region}:${Account}:testgrid-project:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "testgrid-session": {
    "ARNFormats": [
     "arn:${Partition}:devicefarm:${Region}:${Account}:testgrid-session:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "upload": {
    "ARNFormats": [
     "arn:${Partition}:devicefarm:${Region}:${Account}:upload:.*"
    ]
   },
   "vpceconfiguration": {
    "ARNFormats": [
     "arn:${Partition}:devicefarm:${Region}:${Account}:vpceconfiguration:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "devops-guru": {
  "Actions": {
   "addnotificationchannel": {
    "Resources": [
     "topic"
    ]
   },
   "deleteinsight": {},
   "describeaccounthealth": {},
   "describeaccountoverview": {},
   "describeanomaly": {},
   "describeeventsourcesconfig": {},
   "describefeedback": {},
   "describeinsight": {},
   "describeorganizationhealth": {},
   "describeorganizationoverview": {},
   "describeorganizationresourcecollectionhealth": {},
   "describeresourcecollectionhealth": {},
   "describeserviceintegration": {},
   "getcostestimation": {},
   "getresourcecollection": {},
   "listanomaliesforinsight": {},
   "listanomalousloggroups": {},
   "listevents": {},
   "listinsights": {},
   "listmonitoredresources": {},
   "listnotificationchannels": {},
   "listorganizationinsights": {},
   "listrecommendations": {},
   "putfeedback": {},
   "removenotificationchannel": {
    "Resources": [
     "topic"
    ]
   },
   "searchinsights": {},
   "searchorganizationinsights": {},
   "startcostestimation": {},
   "updateeventsourcesconfig": {},
   "updateresourcecollection": {},
   "updateserviceintegration": {}
  },
  "Resources": {
   "topic": {
    "ARNFormats": [
     "arn:${Partition}:sns:${Region}:${Account}:.*"
    ]
   }
  }
 },
 "directconnect": {
  "Actions": {
   "acceptdirectconnectgatewayassociationproposal": {
    "Resources": [
     "dx-gateway"
    ]
   },
   "allocateconnectiononinterconnect": {
    "Resources": [
     "dxcon"
    ]
   },
   "allocatehostedconnection": {
    "Resources": [
     "dxcon",
     "dxlag"
    ]
   },
   "allocateprivatevirtualinterface": {
    "Resources": [
     "dxcon",
     "dxlag"
    ]
   },
   "allocatepublicvirtualinterface": {
    "Resources": [
     "dxcon",
     "dxlag"
    ]
   },
   "allocatetransitvirtualinterface": {
    "Resources": [
     "dxcon",
     "dxlag"
    ]
   },
   "associateconnectionwithlag": {
    "Resources": [
     "dxcon",
     "dxlag"
    ]
   },
   "associatehostedconnection": {
    "Resources": [
     "dxcon",
     "dxcon",
     "dxlag"
    ]
   },
   "associatemacseckey": {
    "Resources": [
     "dxcon",
     "dxlag"
    ]
   },
   "associatevirtualinterface": {
    "Resources": [
     "dxcon",
     "dxlag",
     "dxvif"
    ]
   },
   "confirmconnection": {
    "Resources": [
     "dxcon"
    ]
   },
   "confirmcustomeragreement": {},
   "confirmprivatevirtualinterface": {
    "Resources": [
     "dxvif"
    ]
   },
   "confirmpublicvirtualinterface": {
    "Resources": [
     "dxvif"
    ]
   },
   "confirmtransitvirtualinterface": {
    "Resources": [
     "dxvif"
    ]
   },
   "createbgppeer": {
    "Resources": [
     "dxvif"
    ]
   },
   "createconnection": {
    "Resources": [
     "dxlag"
    ]
   },
   "createdirectconnectgateway": {},
   "createdirectconnectgatewayassociation": {
    "Resources": [
     "dx-gateway"
    ]
   },
   "createdirectconnectgatewayassociationproposal": {
    "Resources": [
     "dx-gateway"
    ]
   },
   "createinterconnect": {
    "Resources": [
     "dxlag"
    ]
   },
   "createlag": {
    "Resources": [
     "dxcon"
    ]
   },
   "createprivatevirtualinterface": {
    "Resources": [
     "dxcon",
     "dxlag"
    ]
   },
   "createpublicvirtualinterface": {
    "Resources": [
     "dxcon",
     "dxlag"
    ]
   },
   "createtransitvirtualinterface": {
    "Resources": [
     "dxcon",
     "dxlag"
    ]
   },
   "deletebgppeer": {
    "Resources": [
     "dxvif"
    ]
   },
   "deleteconnection": {
    "Resources": [
     "dxcon"
    ]
   },
   "deletedirectconnectgateway": {
    "Resources": [
     "dx-gateway"
    ]
   },
   "deletedirectconnectgatewayassociation": {
    "Resources": [
     "dx-gateway"
    ]
   },
   "deletedirectconnectgatewayassociationproposal": {},
   "deleteinterconnect": {
    "Resources": [
     "dxcon"
    ]
   },
   "deletelag": {
    "Resources": [
     "dxlag"
    ]
   },
   "deletevirtualinterface": {
    "Resources": [
     "dxvif"
    ]
   },
   "describeconnectionloa": {
    "Resources": [
     "dxcon"
    ]
   },
   "describeconnections": {
    "Resources": [
     "dxcon"
    ]
   },
   "describeconnectionsoninterconnect": {
    "Resources": [
     "dxcon"
    ]
   },
   "describecustomermetadata": {},
   "describedirectconnectgatewayassociationproposals": {
    "Resources": [
     "dx-gateway"
    ]
   },
   "describedirectconnectgatewayassociations": {
    "Resources": [
     "dx-gateway"
    ]
   },
   "describedirectconnectgatewayattachments": {
    "Resources": [
     "dx-gateway"
    ]
   },
   "describedirectconnectgateways": {
    "Resources": [
     "dx-gateway"
    ]
   },
   "describehostedconnections": {
    "Resources": [
     "dxcon",
     "dxlag"
    ]
   },
   "describeinterconnectloa": {
    "Resources": [
     "dxcon"
    ]
   },
   "describeinterconnects": {
    "Resources": [
     "dxcon"
    ]
   },
   "describelags": {
    "Resources": [
     "dxlag"
    ]
   },
   "describeloa": {
    "Resources": [
     "dxcon",
     "dxlag"
    ]
   },
   "describelocations": {},
   "describerouterconfiguration": {
    "Resources": [
     "dxvif"
    ]
   },
   "describetags": {
    "Resources": [
     "dxcon",
     "dxlag",
     "dxvif"
    ]
   },
   "describevirtualgateways": {},
   "describevirtualinterfaces": {
    "Resources": [
     "dxcon",
     "dxlag",
     "dxvif"
    ]
   },
   "disassociateconnectionfromlag": {
    "Resources": [
     "dxcon",
     "dxlag"
    ]
   },
   "disassociatemacseckey": {
    "Resources": [
     "dxcon",
     "dxlag"
    ]
   },
   "listvirtualinterfacetesthistory": {
    "Resources": [
     "dxvif"
    ]
   },
   "startbgpfailovertest": {
    "Resources": [
     "dxvif"
    ]
   },
   "stopbgpfailovertest": {
    "Resources": [
     "dxvif"
    ]
   },
   "tagresource": {
    "Resources": [
     "dxcon",
     "dxlag",
     "dxvif"
    ]
   },
   "untagresource": {
    "Resources": [
     "dxcon",
     "dxlag",
     "dxvif"
    ]
   },
   "updateconnection": {
    "Resources": [
     "dxcon"
    ]
   },
   "updatedirectconnectgateway": {
    "Resources": [
     "dx-gateway"
    ]
   },
   "updatedirectconnectgatewayassociation": {},
   "updatelag": {
    "Resources": [
     "dxlag"
    ]
   },
   "updatevirtualinterfaceattributes": {
    "Resources": [
     "dxvif"
    ]
   }
  },
  "Resources": {
   "dx-gateway": {
    "ARNFormats": [
     "arn:${Partition}:directconnect::${Account}:dx-gateway/.*"
    ]
   },
   "dxcon": {
    "ARNFormats": [
     "arn:${Partition}:directconnect:${Region}:${Account}:dxcon/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "dxlag": {
    "ARNFormats": [
     "arn:${Partition}:directconnect:${Region}:${Account}:dxlag/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "dxvif": {
    "ARNFormats": [
     "arn:${Partition}:directconnect:${Region}:${Account}:dxvif/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "discovery": {
  "Actions": {
   "associateconfigurationitemstoapplication": {},
   "batchdeleteagents": {},
   "batchdeleteimportdata": {},
   "createapplication": {},
   "createtags": {},
   "deleteapplications": {},
   "deletetags": {},
   "describeagents": {},
   "describebatchdeleteconfigurationtask": {},
   "describeconfigurations": {},
   "describecontinuousexports": {},
   "describeexportconfigurations": {},
   "describeexporttasks": {},
   "describeimporttasks": {},
   "describetags": {},
   "disassociateconfigurationitemsfromapplication": {},
   "exportconfigurations": {},
   "getdiscoverysummary": {},
   "getnetworkconnectiongraph": {},
   "listconfigurations": {},
   "listserverneighbors": {},
   "startbatchdeleteconfigurationtask": {},
   "startcontinuousexport": {},
   "startdatacollectionbyagentids": {},
   "startexporttask": {},
   "startimporttask": {},
   "stopcontinuousexport": {},
   "stopdatacollectionbyagentids": {},
   "updateapplication": {}
  },
  "Resources": {}
 },
 "dlm": {
  "Actions": {
   "createlifecyclepolicy": {},
   "deletelifecyclepolicy": {
    "Resources": [
     "policy"
    ]
   },
   "getlifecyclepolicies": {},
   "getlifecyclepolicy": {
    "Resources": [
     "policy"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "policy"
    ]
   },
   "tagresource": {
    "Resources": [
     "policy"
    ]
   },
   "untagresource": {
    "Resources": [
     "policy"
    ]
   },
   "updatelifecyclepolicy": {
    "Resources": [
     "policy"
    ]
   }
  },
  "Resources": {
   "policy": {
    "ARNFormats": [
     "arn:${Partition}:dlm:${Region}:${Account}:policy/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "dms": {
  "Actions": {
   "addtagstoresource": {
    "Resources": [
     "Certificate",
     "DataMigration",
     "DataProvider",
     "Endpoint",
     "EventSubscription",
     "InstanceProfile",
     "MigrationProject",
     "ReplicationConfig",
     "ReplicationInstance",
     "ReplicationSubnetGroup",
     "ReplicationTask",
     "ReplicationTaskAssessmentRun",
     "ReplicationTaskIndividualAssessment"
    ]
   },
   "applypendingmaintenanceaction": {
    "Resources": [
     "ReplicationInstance"
    ]
   },
   "associateextensionpack": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "batchstartrecommendations": {},
   "cancelmetadatamodelassessment": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "cancelmetadatamodelconversion": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "cancelmetadatamodelexport": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "cancelreplicationtaskassessmentrun": {
    "Resources": [
     "ReplicationTaskAssessmentRun"
    ]
   },
   "createdatamigration": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "createdataprovider": {},
   "createendpoint": {},
   "createeventsubscription": {},
   "createfleetadvisorcollector": {},
   "createinstanceprofile": {},
   "createmigrationproject": {
    "Resources": [
     "DataProvider",
     "InstanceProfile"
    ]
   },
   "createreplicationconfig": {
    "Resources": [
     "Endpoint"
    ]
   },
   "createreplicationinstance": {},
   "createreplicationsubnetgroup": {},
   "createreplicationtask": {
    "Resources": [
     "Endpoint",
     "ReplicationInstance"
    ]
   },
   "deletecertificate": {
    "Resources": [
     "Certificate"
    ]
   },
   "deleteconnection": {
    "Resources": [
     "Endpoint",
     "ReplicationInstance"
    ]
   },
   "deletedatamigration": {
    "Resources": [
     "DataMigration"
    ]
   },
   "deletedataprovider": {
    "Resources": [
     "DataProvider"
    ]
   },
   "deleteendpoint": {
    "Resources": [
     "Endpoint"
    ]
   },
   "deleteeventsubscription": {
    "Resources": [
     "EventSubscription"
    ]
   },
   "deletefleetadvisorcollector": {},
   "deletefleetadvisordatabases": {},
   "deleteinstanceprofile": {
    "Resources": [
     "InstanceProfile"
    ]
   },
   "deletemigrationproject": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "deletereplicationconfig": {
    "Resources": [
     "ReplicationConfig"
    ]
   },
   "deletereplicationinstance": {
    "Resources": [
     "ReplicationInstance"
    ]
   },
   "deletereplicationsubnetgroup": {
    "Resources": [
     "ReplicationSubnetGroup"
    ]
   },
   "deletereplicationtask": {
    "Resources": [
     "ReplicationTask"
    ]
   },
   "deletereplicationtaskassessmentrun": {
    "Resources": [
     "ReplicationTaskAssessmentRun"
    ]
   },
   "describeaccountattributes": {},
   "describeapplicableindividualassessments": {
    "Resources": [
     "ReplicationInstance",
     "ReplicationTask"
    ]
   },
   "describecertificates": {},
   "describeconnections": {},
   "describeconversionconfiguration": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "describedatamigrations": {},
   "describedataproviders": {
    "Resources": [
     "DataProvider"
    ]
   },
   "describeendpoints": {},
   "describeendpointsettings": {},
   "describeendpointtypes": {},
   "describeengineversions": {},
   "describeeventcategories": {},
   "describeevents": {},
   "describeeventsubscriptions": {},
   "describeextensionpackassociations": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "describefleetadvisorcollectors": {},
   "describefleetadvisordatabases": {},
   "describefleetadvisorlsaanalysis": {},
   "describefleetadvisorschemaobjectsummary": {},
   "describefleetadvisorschemas": {},
   "describeinstanceprofiles": {
    "Resources": [
     "InstanceProfile"
    ]
   },
   "describemetadatamodelassessments": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "describemetadatamodelconversions": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "describemetadatamodelexportsasscript": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "describemetadatamodelexportstotarget": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "describemetadatamodelimports": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "describemigrationprojects": {
    "Resources": [
     "DataProvider",
     "InstanceProfile",
     "MigrationProject"
    ]
   },
   "describeorderablereplicationinstances": {},
   "describependingmaintenanceactions": {},
   "describerecommendationlimitations": {},
   "describerecommendations": {},
   "describerefreshschemasstatus": {
    "Resources": [
     "Endpoint"
    ]
   },
   "describereplicationconfigs": {},
   "describereplicationinstances": {},
   "describereplicationinstancetasklogs": {
    "Resources": [
     "ReplicationInstance"
    ]
   },
   "describereplications": {},
   "describereplicationsubnetgroups": {},
   "describereplicationtablestatistics": {
    "Resources": [
     "ReplicationConfig"
    ]
   },
   "describereplicationtaskassessmentresults": {
    "Resources": [
     "ReplicationTask"
    ]
   },
   "describereplicationtaskassessmentruns": {
    "Resources": [
     "ReplicationInstance",
     "ReplicationTask",
     "ReplicationTaskAssessmentRun"
    ]
   },
   "describereplicationtaskindividualassessments": {
    "Resources": [
     "ReplicationTask",
     "ReplicationTaskAssessmentRun"
    ]
   },
   "describereplicationtasks": {},
   "describeschemas": {
    "Resources": [
     "Endpoint"
    ]
   },
   "describetablestatistics": {
    "Resources": [
     "ReplicationTask"
    ]
   },
   "disassociateextensionpack": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "exportmetadatamodelassessment": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "getmetadatamodel": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "importcertificate": {},
   "listdataproviders": {
    "Resources": [
     "DataProvider"
    ]
   },
   "listextensionpacks": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "listinstanceprofiles": {
    "Resources": [
     "InstanceProfile"
    ]
   },
   "listmetadatamodelassessmentactionitems": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "listmetadatamodelassessments": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "listmetadatamodelconversions": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "listmetadatamodelexports": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "listmigrationprojects": {
    "Resources": [
     "DataProvider",
     "InstanceProfile",
     "MigrationProject"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "Certificate",
     "DataMigration",
     "DataProvider",
     "Endpoint",
     "EventSubscription",
     "InstanceProfile",
     "MigrationProject",
     "ReplicationConfig",
     "ReplicationInstance",
     "ReplicationSubnetGroup",
     "ReplicationTask",
     "ReplicationTaskAssessmentRun",
     "ReplicationTaskIndividualAssessment"
    ]
   },
   "modifyconversionconfiguration": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "modifydatamigration": {
    "Resources": [
     "DataMigration"
    ]
   },
   "modifydataprovider": {
    "Resources": [
     "DataProvider"
    ]
   },
   "modifyendpoint": {
    "Resources": [
     "Certificate",
     "Endpoint"
    ]
   },
   "modifyeventsubscription": {},
   "modifyfleetadvisorcollector": {},
   "modifyfleetadvisorcollectorstatuses": {},
   "modifyinstanceprofile": {
    "Resources": [
     "InstanceProfile"
    ]
   },
   "modifymigrationproject": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "modifyreplicationconfig": {
    "Resources": [
     "ReplicationConfig"
    ]
   },
   "modifyreplicationinstance": {
    "Resources": [
     "ReplicationInstance"
    ]
   },
   "modifyreplicationsubnetgroup": {},
   "modifyreplicationtask": {
    "Resources": [
     "ReplicationTask"
    ]
   },
   "movereplicationtask": {
    "Resources": [
     "ReplicationInstance",
     "ReplicationTask"
    ]
   },
   "rebootreplicationinstance": {
    "Resources": [
     "ReplicationInstance"
    ]
   },
   "refreshschemas": {
    "Resources": [
     "Endpoint",
     "ReplicationInstance"
    ]
   },
   "reloadreplicationtables": {
    "Resources": [
     "ReplicationConfig"
    ]
   },
   "reloadtables": {
    "Resources": [
     "ReplicationTask"
    ]
   },
   "removetagsfromresource": {
    "Resources": [
     "Certificate",
     "DataMigration",
     "DataProvider",
     "Endpoint",
     "EventSubscription",
     "InstanceProfile",
     "MigrationProject",
     "ReplicationConfig",
     "ReplicationInstance",
     "ReplicationSubnetGroup",
     "ReplicationTask",
     "ReplicationTaskAssessmentRun",
     "ReplicationTaskIndividualAssessment"
    ]
   },
   "runfleetadvisorlsaanalysis": {},
   "startdatamigration": {
    "Resources": [
     "DataMigration"
    ]
   },
   "startextensionpackassociation": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "startmetadatamodelassessment": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "startmetadatamodelconversion": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "startmetadatamodelexportasscript": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "startmetadatamodelexportasscripts": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "startmetadatamodelexporttotarget": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "startmetadatamodelimport": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "startrecommendations": {},
   "startreplication": {
    "Resources": [
     "ReplicationConfig"
    ]
   },
   "startreplicationtask": {
    "Resources": [
     "ReplicationTask"
    ]
   },
   "startreplicationtaskassessment": {
    "Resources": [
     "ReplicationTask"
    ]
   },
   "startreplicationtaskassessmentrun": {
    "Resources": [
     "ReplicationTask"
    ]
   },
   "stopdatamigration": {
    "Resources": [
     "DataMigration"
    ]
   },
   "stopreplication": {
    "Resources": [
     "ReplicationConfig"
    ]
   },
   "stopreplicationtask": {
    "Resources": [
     "ReplicationTask"
    ]
   },
   "testconnection": {
    "Resources": [
     "Endpoint",
     "ReplicationInstance"
    ]
   },
   "updateconversionconfiguration": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "updatedataprovider": {
    "Resources": [
     "DataProvider"
    ]
   },
   "updateinstanceprofile": {
    "Resources": [
     "InstanceProfile"
    ]
   },
   "updatemigrationproject": {
    "Resources": [
     "MigrationProject"
    ]
   },
   "updatesubscriptionstoeventbridge": {},
   "uploadfilemetadatalist": {}
  },
  "Resources": {
   "certificate": {
    "ARNFormats": [
     "arn:${Partition}:dms:${Region}:${Account}:cert:*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "dms:cert-tag/${TagKey}"
    ]
   },
   "datamigration": {
    "ARNFormats": [
     "arn:${Partition}:dms:${Region}:${Account}:data-migration:*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "dms:data-migration-tag/${TagKey}"
    ]
   },
   "dataprovider": {
    "ARNFormats": [
     "arn:${Partition}:dms:${Region}:${Account}:data-provider:*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "dms:data-provider-tag/${TagKey}"
    ]
   },
   "endpoint": {
    "ARNFormats": [
     "arn:${Partition}:dms:${Region}:${Account}:endpoint:*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "dms:endpoint-tag/${TagKey}"
    ]
   },
   "eventsubscription": {
    "ARNFormats": [
     "arn:${Partition}:dms:${Region}:${Account}:es:*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "dms:es-tag/${TagKey}"
    ]
   },
   "instanceprofile": {
    "ARNFormats": [
     "arn:${Partition}:dms:${Region}:${Account}:instance-profile:*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "dms:instance-profile-tag/${TagKey}"
    ]
   },
   "migrationproject": {
    "ARNFormats": [
     "arn:${Partition}:dms:${Region}:${Account}:migration-project:*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "dms:migration-project-tag/${TagKey}"
    ]
   },
   "replicationconfig": {
    "ARNFormats": [
     "arn:${Partition}:dms:${Region}:${Account}:replication-config:*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "dms:replication-config-tag/${TagKey}"
    ]
   },
   "replicationinstance": {
    "ARNFormats": [
     "arn:${Partition}:dms:${Region}:${Account}:rep:*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "dms:rep-tag/${TagKey}"
    ]
   },
   "replicationsubnetgroup": {
    "ARNFormats": [
     "arn:${Partition}:dms:${Region}:${Account}:subgrp:*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "dms:subgrp-tag/${TagKey}"
    ]
   },
   "replicationtask": {
    "ARNFormats": [
     "arn:${Partition}:dms:${Region}:${Account}:task:*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "dms:task-tag/${TagKey}"
    ]
   },
   "replicationtaskassessmentrun": {
    "ARNFormats": [
     "arn:${Partition}:dms:${Region}:${Account}:assessment-run:*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "dms:assessment-run-tag/${TagKey}"
    ]
   },
   "replicationtaskindividualassessment": {
    "ARNFormats": [
     "arn:${Partition}:dms:${Region}:${Account}:individual-assessment:*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "dms:individual-assessment-tag/${TagKey}"
    ]
   }
  }
 },
 "docdb-elastic": {
  "Actions": {
   "applypendingmaintenanceaction": {
    "Resources": [
     "cluster"
    ]
   },
   "copyclustersnapshot": {
    "Resources": [
     "cluster-snapshot"
    ]
   },
   "createcluster": {},
   "createclustersnapshot": {
    "Resources": [
     "cluster",
     "cluster-snapshot"
    ]
   },
   "deletecluster": {
    "Resources": [
     "cluster"
    ]
   },
   "deleteclustersnapshot": {
    "Resources": [
     "cluster-snapshot"
    ]
   },
   "getcluster": {
    "Resources": [
     "cluster"
    ]
   },
   "getclustersnapshot": {
    "Resources": [
     "cluster-snapshot"
    ]
   },
   "getpendingmaintenanceaction": {
    "Resources": [
     "cluster"
    ]
   },
   "listclusters": {},
   "listclustersnapshots": {},
   "listpendingmaintenanceactions": {},
   "listtagsforresource": {
    "Resources": [
     "cluster",
     "cluster-snapshot"
    ]
   },
   "restoreclusterfromsnapshot": {
    "Resources": [
     "cluster",
     "cluster-snapshot"
    ]
   },
   "startcluster": {
    "Resources": [
     "cluster"
    ]
   },
   "stopcluster": {
    "Resources": [
     "cluster"
    ]
   },
   "tagresource": {
    "Resources": [
     "cluster",
     "cluster-snapshot"
    ]
   },
   "untagresource": {
    "Resources": [
     "cluster",
     "cluster-snapshot"
    ]
   },
   "updatecluster": {
    "Resources": [
     "cluster"
    ]
   }
  },
  "Resources": {
   "cluster": {
    "ARNFormats": [
     "arn:${Partition}:docdb-elastic:${Region}:${Account}:cluster/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "cluster-snapshot": {
    "ARNFormats": [
     "arn:${Partition}:docdb-elastic:${Region}:${Account}:cluster-snapshot/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "drs": {
  "Actions": {
   "associatefailbackclienttorecoveryinstancefordrs": {
    "Resources": [
     "RecoveryInstanceResource"
    ]
   },
   "associatesourcenetworkstack": {
    "Resources": [
     "SourceNetworkResource"
    ]
   },
   "batchcreatevolumesnapshotgroupfordrs": {
    "Resources": [
     "RecoveryInstanceResource",
     "SourceServerResource"
    ]
   },
   "batchdeletesnapshotrequestfordrs": {},
   "createconvertedsnapshotfordrs": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "createextendedsourceserver": {},
   "createlaunchconfigurationtemplate": {},
   "createrecoveryinstancefordrs": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "createreplicationconfigurationtemplate": {},
   "createsourcenetwork": {},
   "createsourceserverfordrs": {},
   "deletejob": {
    "Resources": [
     "JobResource"
    ]
   },
   "deletelaunchaction": {
    "Resources": [
     "LaunchConfigurationTemplateResource",
     "SourceServerResource"
    ]
   },
   "deletelaunchconfigurationtemplate": {
    "Resources": [
     "LaunchConfigurationTemplateResource"
    ]
   },
   "deleterecoveryinstance": {
    "Resources": [
     "RecoveryInstanceResource"
    ]
   },
   "deletereplicationconfigurationtemplate": {
    "Resources": [
     "ReplicationConfigurationTemplateResource"
    ]
   },
   "deletesourcenetwork": {
    "Resources": [
     "SourceNetworkResource"
    ]
   },
   "deletesourceserver": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "describejoblogitems": {
    "Resources": [
     "JobResource"
    ]
   },
   "describejobs": {},
   "describelaunchconfigurationtemplates": {},
   "describerecoveryinstances": {},
   "describerecoverysnapshots": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "describereplicationconfigurationtemplates": {},
   "describereplicationserverassociationsfordrs": {},
   "describesnapshotrequestsfordrs": {},
   "describesourcenetworks": {},
   "describesourceservers": {},
   "disconnectrecoveryinstance": {
    "Resources": [
     "RecoveryInstanceResource"
    ]
   },
   "disconnectsourceserver": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "exportsourcenetworkcfntemplate": {
    "Resources": [
     "SourceNetworkResource"
    ]
   },
   "getagentcommandfordrs": {
    "Resources": [
     "RecoveryInstanceResource",
     "SourceServerResource"
    ]
   },
   "getagentconfirmedresumeinfofordrs": {
    "Resources": [
     "RecoveryInstanceResource",
     "SourceServerResource"
    ]
   },
   "getagentinstallationassetsfordrs": {},
   "getagentreplicationinfofordrs": {
    "Resources": [
     "RecoveryInstanceResource",
     "SourceServerResource"
    ]
   },
   "getagentruntimeconfigurationfordrs": {
    "Resources": [
     "RecoveryInstanceResource",
     "SourceServerResource"
    ]
   },
   "getagentsnapshotcreditsfordrs": {
    "Resources": [
     "RecoveryInstanceResource",
     "SourceServerResource"
    ]
   },
   "getchannelcommandsfordrs": {},
   "getfailbackcommandfordrs": {
    "Resources": [
     "RecoveryInstanceResource"
    ]
   },
   "getfailbacklaunchrequestedfordrs": {
    "Resources": [
     "RecoveryInstanceResource"
    ]
   },
   "getfailbackreplicationconfiguration": {
    "Resources": [
     "RecoveryInstanceResource"
    ]
   },
   "getlaunchconfiguration": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "getreplicationconfiguration": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "getsuggestedfailbackclientdevicemappingfordrs": {
    "Resources": [
     "RecoveryInstanceResource"
    ]
   },
   "initializeservice": {},
   "issueagentcertificatefordrs": {
    "Resources": [
     "RecoveryInstanceResource",
     "SourceServerResource"
    ]
   },
   "listextensiblesourceservers": {},
   "listlaunchactions": {
    "Resources": [
     "LaunchConfigurationTemplateResource",
     "SourceServerResource"
    ]
   },
   "liststagingaccounts": {},
   "listtagsforresource": {},
   "notifyagentauthenticationfordrs": {
    "Resources": [
     "RecoveryInstanceResource",
     "SourceServerResource"
    ]
   },
   "notifyagentconnectedfordrs": {
    "Resources": [
     "RecoveryInstanceResource",
     "SourceServerResource"
    ]
   },
   "notifyagentdisconnectedfordrs": {
    "Resources": [
     "RecoveryInstanceResource",
     "SourceServerResource"
    ]
   },
   "notifyagentreplicationprogressfordrs": {
    "Resources": [
     "RecoveryInstanceResource",
     "SourceServerResource"
    ]
   },
   "notifyconsistencyattainedfordrs": {
    "Resources": [
     "RecoveryInstanceResource"
    ]
   },
   "notifyreplicationserverauthenticationfordrs": {
    "Resources": [
     "RecoveryInstanceResource"
    ]
   },
   "notifyvolumeeventfordrs": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "putlaunchaction": {
    "Resources": [
     "LaunchConfigurationTemplateResource",
     "SourceServerResource"
    ]
   },
   "retrydatareplication": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "reversereplication": {
    "Resources": [
     "RecoveryInstanceResource"
    ]
   },
   "sendagentlogsfordrs": {
    "Resources": [
     "RecoveryInstanceResource",
     "SourceServerResource"
    ]
   },
   "sendagentmetricsfordrs": {
    "Resources": [
     "RecoveryInstanceResource",
     "SourceServerResource"
    ]
   },
   "sendchannelcommandresultfordrs": {},
   "sendclientlogsfordrs": {},
   "sendclientmetricsfordrs": {},
   "sendvolumestatsfordrs": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "startfailbacklaunch": {
    "Resources": [
     "RecoveryInstanceResource"
    ]
   },
   "startrecovery": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "startreplication": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "startsourcenetworkrecovery": {
    "Resources": [
     "SourceNetworkResource"
    ]
   },
   "startsourcenetworkreplication": {
    "Resources": [
     "SourceNetworkResource"
    ]
   },
   "stopfailback": {
    "Resources": [
     "RecoveryInstanceResource"
    ]
   },
   "stopreplication": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "stopsourcenetworkreplication": {
    "Resources": [
     "SourceNetworkResource"
    ]
   },
   "tagresource": {
    "Resources": [
     "JobResource",
     "LaunchConfigurationTemplateResource",
     "RecoveryInstanceResource",
     "ReplicationConfigurationTemplateResource",
     "SourceNetworkResource",
     "SourceServerResource"
    ]
   },
   "terminaterecoveryinstances": {
    "Resources": [
     "RecoveryInstanceResource"
    ]
   },
   "untagresource": {
    "Resources": [
     "JobResource",
     "LaunchConfigurationTemplateResource",
     "RecoveryInstanceResource",
     "ReplicationConfigurationTemplateResource",
     "SourceNetworkResource",
     "SourceServerResource"
    ]
   },
   "updateagentbacklogfordrs": {
    "Resources": [
     "RecoveryInstanceResource",
     "SourceServerResource"
    ]
   },
   "updateagentconversioninfofordrs": {
    "Resources": [
     "RecoveryInstanceResource",
     "SourceServerResource"
    ]
   },
   "updateagentreplicationinfofordrs": {
    "Resources": [
     "RecoveryInstanceResource",
     "SourceServerResource"
    ]
   },
   "updateagentreplicationprocessstatefordrs": {
    "Resources": [
     "RecoveryInstanceResource",
     "SourceServerResource"
    ]
   },
   "updateagentsourcepropertiesfordrs": {
    "Resources": [
     "RecoveryInstanceResource",
     "SourceServerResource"
    ]
   },
   "updatefailbackclientdevicemappingfordrs": {
    "Resources": [
     "RecoveryInstanceResource"
    ]
   },
   "updatefailbackclientlastseenfordrs": {
    "Resources": [
     "RecoveryInstanceResource"
    ]
   },
   "updatefailbackreplicationconfiguration": {
    "Resources": [
     "RecoveryInstanceResource"
    ]
   },
   "updatelaunchconfiguration": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "updatelaunchconfigurationtemplate": {
    "Resources": [
     "LaunchConfigurationTemplateResource"
    ]
   },
   "updatereplicationcertificatefordrs": {
    "Resources": [
     "RecoveryInstanceResource"
    ]
   },
   "updatereplicationconfiguration": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "updatereplicationconfigurationtemplate": {
    "Resources": [
     "ReplicationConfigurationTemplateResource"
    ]
   }
  },
  "Resources": {
   "jobresource": {
    "ARNFormats": [
     "arn:${Partition}:drs:${Region}:${Account}:job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "launchconfigurationtemplateresource": {
    "ARNFormats": [
     "arn:${Partition}:drs:${Region}:${Account}:launch-configuration-template/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "recoveryinstanceresource": {
    "ARNFormats": [
     "arn:${Partition}:drs:${Region}:${Account}:recovery-instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "drs:EC2InstanceARN"
    ]
   },
   "replicationconfigurationtemplateresource": {
    "ARNFormats": [
     "arn:${Partition}:drs:${Region}:${Account}:replication-configuration-template/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "sourcenetworkresource": {
    "ARNFormats": [
     "arn:${Partition}:drs:${Region}:${Account}:source-network/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "sourceserverresource": {
    "ARNFormats": [
     "arn:${Partition}:drs:${Region}:${Account}:source-server/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "ds": {
  "Actions": {
   "acceptshareddirectory": {
    "Resources": [
     "directory"
    ]
   },
   "accessdsdata": {
    "Resources": [
     "directory"
    ]
   },
   "addiproutes": {
    "Resources": [
     "directory"
    ]
   },
   "addregion": {
    "Resources": [
     "directory"
    ]
   },
   "addtagstoresource": {
    "Resources": [
     "directory"
    ]
   },
   "authorizeapplication": {
    "Resources": [
     "directory"
    ]
   },
   "cancelschemaextension": {
    "Resources": [
     "directory"
    ]
   },
   "checkalias": {},
   "connectdirectory": {},
   "createalias": {
    "Resources": [
     "directory"
    ]
   },
   "createcomputer": {
    "Resources": [
     "directory"
    ]
   },
   "createconditionalforwarder": {
    "Resources": [
     "directory"
    ]
   },
   "createdirectory": {},
   "createidentitypooldirectory": {},
   "createlogsubscription": {
    "Resources": [
     "directory"
    ]
   },
   "createmicrosoftad": {},
   "createsnapshot": {
    "Resources": [
     "directory"
    ]
   },
   "createtrust": {
    "Resources": [
     "directory"
    ]
   },
   "deleteconditionalforwarder": {
    "Resources": [
     "directory"
    ]
   },
   "deletedirectory": {
    "Resources": [
     "directory"
    ]
   },
   "deletelogsubscription": {
    "Resources": [
     "directory"
    ]
   },
   "deletesnapshot": {
    "Resources": [
     "directory"
    ]
   },
   "deletetrust": {
    "Resources": [
     "directory"
    ]
   },
   "deregistercertificate": {
    "Resources": [
     "directory"
    ]
   },
   "deregistereventtopic": {
    "Resources": [
     "directory"
    ]
   },
   "describecertificate": {
    "Resources": [
     "directory"
    ]
   },
   "describeclientauthenticationsettings": {
    "Resources": [
     "directory"
    ]
   },
   "describeconditionalforwarders": {
    "Resources": [
     "directory"
    ]
   },
   "describedirectories": {},
   "describedirectorydataaccess": {
    "Resources": [
     "directory"
    ]
   },
   "describedomaincontrollers": {
    "Resources": [
     "directory"
    ]
   },
   "describeeventtopics": {
    "Resources": [
     "directory"
    ]
   },
   "describeldapssettings": {
    "Resources": [
     "directory"
    ]
   },
   "describeregions": {
    "Resources": [
     "directory"
    ]
   },
   "describesettings": {
    "Resources": [
     "directory"
    ]
   },
   "describeshareddirectories": {
    "Resources": [
     "directory"
    ]
   },
   "describesnapshots": {},
   "describetrusts": {},
   "describeupdatedirectory": {
    "Resources": [
     "directory"
    ]
   },
   "disableclientauthentication": {
    "Resources": [
     "directory"
    ]
   },
   "disabledirectorydataaccess": {
    "Resources": [
     "directory"
    ]
   },
   "disableldaps": {
    "Resources": [
     "directory"
    ]
   },
   "disableradius": {
    "Resources": [
     "directory"
    ]
   },
   "disableroleaccess": {
    "Resources": [
     "directory"
    ]
   },
   "disablesso": {
    "Resources": [
     "directory"
    ]
   },
   "enableclientauthentication": {
    "Resources": [
     "directory"
    ]
   },
   "enabledirectorydataaccess": {
    "Resources": [
     "directory"
    ]
   },
   "enableldaps": {
    "Resources": [
     "directory"
    ]
   },
   "enableradius": {
    "Resources": [
     "directory"
    ]
   },
   "enableroleaccess": {
    "Resources": [
     "directory"
    ]
   },
   "enablesso": {
    "Resources": [
     "directory"
    ]
   },
   "getauthorizedapplicationdetails": {
    "Resources": [
     "directory"
    ]
   },
   "getdirectorylimits": {},
   "getsnapshotlimits": {
    "Resources": [
     "directory"
    ]
   },
   "listauthorizedapplications": {
    "Resources": [
     "directory"
    ]
   },
   "listcertificates": {
    "Resources": [
     "directory"
    ]
   },
   "listiproutes": {
    "Resources": [
     "directory"
    ]
   },
   "listlogsubscriptions": {},
   "listschemaextensions": {
    "Resources": [
     "directory"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "directory"
    ]
   },
   "registercertificate": {
    "Resources": [
     "directory"
    ]
   },
   "registereventtopic": {
    "Resources": [
     "directory"
    ]
   },
   "rejectshareddirectory": {
    "Resources": [
     "directory"
    ]
   },
   "removeiproutes": {
    "Resources": [
     "directory"
    ]
   },
   "removeregion": {
    "Resources": [
     "directory"
    ]
   },
   "removetagsfromresource": {
    "Resources": [
     "directory"
    ]
   },
   "resetuserpassword": {
    "Resources": [
     "directory"
    ]
   },
   "restorefromsnapshot": {
    "Resources": [
     "directory"
    ]
   },
   "sharedirectory": {
    "Resources": [
     "directory"
    ]
   },
   "startschemaextension": {
    "Resources": [
     "directory"
    ]
   },
   "unauthorizeapplication": {
    "Resources": [
     "directory"
    ]
   },
   "unsharedirectory": {
    "Resources": [
     "directory"
    ]
   },
   "updateauthorizedapplication": {
    "Resources": [
     "directory"
    ]
   },
   "updateconditionalforwarder": {
    "Resources": [
     "directory"
    ]
   },
   "updatedirectory": {
    "Resources": [
     "directory"
    ]
   },
   "updatedirectorysetup": {
    "Resources": [
     "directory"
    ]
   },
   "updatenumberofdomaincontrollers": {
    "Resources": [
     "directory"
    ]
   },
   "updateradius": {
    "Resources": [
     "directory"
    ]
   },
   "updatesettings": {
    "Resources": [
     "directory"
    ]
   },
   "updatetrust": {
    "Resources": [
     "directory"
    ]
   },
   "verifytrust": {
    "Resources": [
     "directory"
    ]
   }
  },
  "Resources": {
   "directory": {
    "ARNFormats": [
     "arn:${Partition}:ds:${Region}:${Account}:directory/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "ds-data": {
  "Actions": {
   "addgroupmember": {
    "Resources": [
     "directory"
    ]
   },
   "creategroup": {
    "Resources": [
     "directory"
    ]
   },
   "createuser": {
    "Resources": [
     "directory"
    ]
   },
   "deletegroup": {
    "Resources": [
     "directory"
    ]
   },
   "deleteuser": {
    "Resources": [
     "directory"
    ]
   },
   "describegroup": {
    "Resources": [
     "directory"
    ]
   },
   "describeuser": {
    "Resources": [
     "directory"
    ]
   },
   "disableuser": {
    "Resources": [
     "directory"
    ]
   },
   "listgroupmembers": {
    "Resources": [
     "directory"
    ]
   },
   "listgroups": {
    "Resources": [
     "directory"
    ]
   },
   "listgroupsformember": {
    "Resources": [
     "directory"
    ]
   },
   "listusers": {
    "Resources": [
     "directory"
    ]
   },
   "removegroupmember": {
    "Resources": [
     "directory"
    ]
   },
   "searchgroups": {
    "Resources": [
     "directory"
    ]
   },
   "searchusers": {
    "Resources": [
     "directory"
    ]
   },
   "updategroup": {
    "Resources": [
     "directory"
    ]
   },
   "updateuser": {
    "Resources": [
     "directory"
    ]
   }
  },
  "Resources": {
   "directory": {
    "ARNFormats": [
     "arn:${Partition}:ds:${Region}:${Account}:directory/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "dsql": {
  "Actions": {
   "createcluster": {
    "Resources": [
     "Cluster"
    ]
   },
   "createmultiregionclusters": {
    "Resources": [
     "Cluster"
    ]
   },
   "dbconnect": {
    "Resources": [
     "Cluster"
    ]
   },
   "dbconnectadmin": {
    "Resources": [
     "Cluster"
    ]
   },
   "deletecluster": {
    "Resources": [
     "Cluster"
    ]
   },
   "deletemultiregionclusters": {
    "Resources": [
     "Cluster"
    ]
   },
   "getcluster": {
    "Resources": [
     "Cluster"
    ]
   },
   "listclusters": {},
   "listtagsforresource": {
    "Resources": [
     "Cluster"
    ]
   },
   "tagresource": {
    "Resources": [
     "Cluster"
    ]
   },
   "untagresource": {
    "Resources": [
     "Cluster"
    ]
   },
   "updatecluster": {
    "Resources": [
     "Cluster"
    ]
   }
  },
  "Resources": {
   "cluster": {
    "ARNFormats": [
     "arn:${Partition}:dsql:${Region}:${Account}:cluster/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "dynamodb": {
  "Actions": {
   "batchgetitem": {
    "Resources": [
     "table"
    ]
   },
   "batchwriteitem": {
    "Resources": [
     "table"
    ]
   },
   "conditioncheckitem": {
    "Resources": [
     "table"
    ]
   },
   "createbackup": {
    "Resources": [
     "table"
    ]
   },
   "createglobaltable": {
    "Resources": [
     "global-table",
     "table"
    ]
   },
   "createtable": {
    "Resources": [
     "table"
    ]
   },
   "createtablereplica": {
    "Resources": [
     "table"
    ]
   },
   "deletebackup": {
    "Resources": [
     "backup"
    ]
   },
   "deleteitem": {
    "Resources": [
     "table"
    ]
   },
   "deleteresourcepolicy": {
    "Resources": [
     "stream",
     "table"
    ]
   },
   "deletetable": {
    "Resources": [
     "table"
    ]
   },
   "deletetablereplica": {
    "Resources": [
     "table"
    ]
   },
   "describebackup": {
    "Resources": [
     "backup"
    ]
   },
   "describecontinuousbackups": {
    "Resources": [
     "table"
    ]
   },
   "describecontributorinsights": {
    "Resources": [
     "index",
     "table"
    ]
   },
   "describeendpoints": {},
   "describeexport": {
    "Resources": [
     "export"
    ]
   },
   "describeglobaltable": {
    "Resources": [
     "global-table"
    ]
   },
   "describeglobaltablesettings": {
    "Resources": [
     "global-table"
    ]
   },
   "describeimport": {
    "Resources": [
     "import"
    ]
   },
   "describekinesisstreamingdestination": {
    "Resources": [
     "table"
    ]
   },
   "describelimits": {},
   "describereservedcapacity": {},
   "describereservedcapacityofferings": {},
   "describestream": {
    "Resources": [
     "stream"
    ]
   },
   "describetable": {
    "Resources": [
     "table"
    ]
   },
   "describetablereplicaautoscaling": {
    "Resources": [
     "table"
    ]
   },
   "describetimetolive": {
    "Resources": [
     "table"
    ]
   },
   "disablekinesisstreamingdestination": {
    "Resources": [
     "table"
    ]
   },
   "enablekinesisstreamingdestination": {
    "Resources": [
     "table"
    ]
   },
   "exporttabletopointintime": {
    "Resources": [
     "table"
    ]
   },
   "getabacstatus": {},
   "getitem": {
    "Resources": [
     "table"
    ]
   },
   "getrecords": {
    "Resources": [
     "stream"
    ]
   },
   "getresourcepolicy": {
    "Resources": [
     "stream",
     "table"
    ]
   },
   "getsharditerator": {
    "Resources": [
     "stream"
    ]
   },
   "importtable": {
    "Resources": [
     "table"
    ]
   },
   "listbackups": {},
   "listcontributorinsights": {},
   "listexports": {},
   "listglobaltables": {},
   "listimports": {},
   "liststreams": {},
   "listtables": {},
   "listtagsofresource": {
    "Resources": [
     "table"
    ]
   },
   "partiqldelete": {
    "Resources": [
     "table"
    ]
   },
   "partiqlinsert": {
    "Resources": [
     "table"
    ]
   },
   "partiqlselect": {
    "Resources": [
     "index",
     "table"
    ]
   },
   "partiqlupdate": {
    "Resources": [
     "table"
    ]
   },
   "purchasereservedcapacityofferings": {},
   "putitem": {
    "Resources": [
     "table"
    ]
   },
   "putresourcepolicy": {
    "Resources": [
     "stream",
     "table"
    ]
   },
   "query": {
    "Resources": [
     "index",
     "table"
    ]
   },
   "restoretablefromawsbackup": {
    "Resources": [
     "table"
    ]
   },
   "restoretablefrombackup": {
    "Resources": [
     "backup",
     "table"
    ]
   },
   "restoretabletopointintime": {
    "Resources": [
     "table"
    ]
   },
   "scan": {
    "Resources": [
     "index",
     "table"
    ]
   },
   "startawsbackupjob": {
    "Resources": [
     "table"
    ]
   },
   "tagresource": {
    "Resources": [
     "table"
    ]
   },
   "untagresource": {
    "Resources": [
     "table"
    ]
   },
   "updateabacstatus": {},
   "updatecontinuousbackups": {
    "Resources": [
     "table"
    ]
   },
   "updatecontributorinsights": {
    "Resources": [
     "index",
     "table"
    ]
   },
   "updateglobaltable": {
    "Resources": [
     "global-table",
     "table"
    ]
   },
   "updateglobaltablesettings": {
    "Resources": [
     "global-table",
     "table"
    ]
   },
   "updateglobaltableversion": {
    "Resources": [
     "global-table",
     "table"
    ]
   },
   "updateitem": {
    "Resources": [
     "table"
    ]
   },
   "updatekinesisstreamingdestination": {
    "Resources": [
     "table"
    ]
   },
   "updatetable": {
    "Resources": [
     "table"
    ]
   },
   "updatetablereplicaautoscaling": {
    "Resources": [
     "table"
    ]
   },
   "updatetimetolive": {
    "Resources": [
     "table"
    ]
   }
  },
  "Resources": {
   "backup": {
    "ARNFormats": [
     "arn:${Partition}:dynamodb:${Region}:${Account}:table/.*"
    ]
   },
   "export": {
    "ARNFormats": [
     "arn:${Partition}:dynamodb:${Region}:${Account}:table/.*"
    ]
   },
   "global-table": {
    "ARNFormats": [
     "arn:${Partition}:dynamodb::${Account}:global-table/.*"
    ]
   },
   "import": {
    "ARNFormats": [
     "arn:${Partition}:dynamodb:${Region}:${Account}:table/.*"
    ]
   },
   "index": {
    "ARNFormats": [
     "arn:${Partition}:dynamodb:${Region}:${Account}:table/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "stream": {
    "ARNFormats": [
     "arn:${Partition}:dynamodb:${Region}:${Account}:table/.*"
    ]
   },
   "table": {
    "ARNFormats": [
     "arn:${Partition}:dynamodb:${Region}:${Account}:table/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "ebs": {
  "Actions": {
   "completesnapshot": {
    "Resources": [
     "snapshot"
    ]
   },
   "getsnapshotblock": {
    "Resources": [
     "snapshot"
    ]
   },
   "listchangedblocks": {
    "Resources": [
     "snapshot"
    ]
   },
   "listsnapshotblocks": {
    "Resources": [
     "snapshot"
    ]
   },
   "putsnapshotblock": {
    "Resources": [
     "snapshot"
    ]
   },
   "startsnapshot": {
    "Resources": [
     "snapshot"
    ]
   }
  },
  "Resources": {
   "snapshot": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}::snapshot/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ebs:Description",
     "ebs:ParentSnapshot",
     "ebs:VolumeSize"
    ]
   }
  }
 },
 "ec2": {
  "Actions": {
   "acceptaddresstransfer": {
    "Resources": [
     "elastic-ip"
    ]
   },
   "acceptcapacityreservationbillingownership": {
    "Resources": [
     "capacity-reservation"
    ]
   },
   "acceptreservedinstancesexchangequote": {},
   "accepttransitgatewaymulticastdomainassociations": {
    "Resources": [
     "transit-gateway-attachment",
     "transit-gateway-multicast-domain"
    ]
   },
   "accepttransitgatewaypeeringattachment": {
    "Resources": [
     "transit-gateway-attachment"
    ]
   },
   "accepttransitgatewayvpcattachment": {
    "Resources": [
     "transit-gateway-attachment"
    ]
   },
   "acceptvpcendpointconnections": {
    "Resources": [
     "vpc-endpoint-service"
    ]
   },
   "acceptvpcpeeringconnection": {
    "Resources": [
     "vpc",
     "vpc-peering-connection"
    ]
   },
   "advertisebyoipcidr": {},
   "allocateaddress": {
    "Resources": [
     "elastic-ip",
     "ipam-pool",
     "ipv4pool-ec2"
    ]
   },
   "allocatehosts": {
    "Resources": [
     "dedicated-host"
    ]
   },
   "allocateipampoolcidr": {
    "Resources": [
     "ipam-pool"
    ]
   },
   "applysecuritygroupstoclientvpntargetnetwork": {
    "Resources": [
     "client-vpn-endpoint",
     "security-group",
     "vpc"
    ]
   },
   "assignipv6addresses": {
    "Resources": [
     "network-interface"
    ]
   },
   "assignprivateipaddresses": {
    "Resources": [
     "network-interface"
    ]
   },
   "assignprivatenatgatewayaddress": {
    "Resources": [
     "natgateway"
    ]
   },
   "associateaddress": {
    "Resources": [
     "elastic-ip",
     "instance",
     "network-interface"
    ]
   },
   "associatecapacityreservationbillingowner": {
    "Resources": [
     "capacity-reservation"
    ]
   },
   "associateclientvpntargetnetwork": {
    "Resources": [
     "client-vpn-endpoint",
     "subnet"
    ]
   },
   "associatedhcpoptions": {
    "Resources": [
     "dhcp-options",
     "vpc"
    ]
   },
   "associateenclavecertificateiamrole": {
    "Resources": [
     "certificate",
     "role"
    ]
   },
   "associateiaminstanceprofile": {
    "Resources": [
     "instance"
    ]
   },
   "associateinstanceeventwindow": {
    "Resources": [
     "instance-event-window"
    ]
   },
   "associateipambyoasn": {},
   "associateipamresourcediscovery": {
    "Resources": [
     "ipam",
     "ipam-resource-discovery",
     "ipam-resource-discovery-association"
    ]
   },
   "associatenatgatewayaddress": {
    "Resources": [
     "elastic-ip",
     "natgateway"
    ]
   },
   "associateroutetable": {
    "Resources": [
     "internet-gateway",
     "route-table",
     "subnet",
     "vpn-gateway"
    ]
   },
   "associatesecuritygroupvpc": {
    "Resources": [
     "security-group",
     "vpc"
    ]
   },
   "associatesubnetcidrblock": {
    "Resources": [
     "ipam-pool",
     "subnet"
    ]
   },
   "associatetransitgatewaymulticastdomain": {
    "Resources": [
     "subnet",
     "transit-gateway-attachment",
     "transit-gateway-multicast-domain"
    ]
   },
   "associatetransitgatewaypolicytable": {
    "Resources": [
     "transit-gateway-attachment",
     "transit-gateway-policy-table"
    ]
   },
   "associatetransitgatewayroutetable": {
    "Resources": [
     "transit-gateway-attachment",
     "transit-gateway-route-table"
    ]
   },
   "associatetrunkinterface": {},
   "associateverifiedaccessinstancewebacl": {
    "Resources": [
     "verified-access-instance"
    ]
   },
   "associatevpccidrblock": {
    "Resources": [
     "ipam-pool",
     "ipv6pool-ec2",
     "vpc"
    ]
   },
   "attachclassiclinkvpc": {
    "Resources": [
     "instance",
     "security-group",
     "vpc"
    ]
   },
   "attachinternetgateway": {
    "Resources": [
     "internet-gateway",
     "vpc"
    ]
   },
   "attachnetworkinterface": {
    "Resources": [
     "instance",
     "network-interface"
    ]
   },
   "attachverifiedaccesstrustprovider": {
    "Resources": [
     "verified-access-instance",
     "verified-access-trust-provider"
    ]
   },
   "attachvolume": {
    "Resources": [
     "instance",
     "volume"
    ]
   },
   "attachvpngateway": {
    "Resources": [
     "vpc",
     "vpn-gateway"
    ]
   },
   "authorizeclientvpningress": {
    "Resources": [
     "client-vpn-endpoint"
    ]
   },
   "authorizesecuritygroupegress": {
    "Resources": [
     "security-group",
     "security-group-rule"
    ]
   },
   "authorizesecuritygroupingress": {
    "Resources": [
     "security-group",
     "security-group-rule"
    ]
   },
   "bundleinstance": {},
   "cancelbundletask": {},
   "cancelcapacityreservation": {
    "Resources": [
     "capacity-reservation"
    ]
   },
   "cancelcapacityreservationfleets": {
    "Resources": [
     "capacity-reservation-fleet"
    ]
   },
   "cancelconversiontask": {},
   "canceldeclarativepoliciesreport": {
    "Resources": [
     "declarative-policies-report"
    ]
   },
   "cancelexporttask": {
    "Resources": [
     "export-image-task",
     "export-instance-task"
    ]
   },
   "cancelimagelaunchpermission": {
    "Resources": [
     "image"
    ]
   },
   "cancelimporttask": {
    "Resources": [
     "import-image-task",
     "import-snapshot-task"
    ]
   },
   "cancelreservedinstanceslisting": {},
   "cancelspotfleetrequests": {
    "Resources": [
     "spot-fleet-request"
    ]
   },
   "cancelspotinstancerequests": {
    "Resources": [
     "spot-instances-request"
    ]
   },
   "confirmproductinstance": {},
   "copyfpgaimage": {
    "Resources": [
     "fpga-image"
    ]
   },
   "copyimage": {
    "Resources": [
     "image",
     "snapshot"
    ]
   },
   "copysnapshot": {
    "Resources": [
     "snapshot"
    ]
   },
   "createcapacityreservation": {
    "Resources": [
     "capacity-reservation"
    ]
   },
   "createcapacityreservationbysplitting": {
    "Resources": [
     "capacity-reservation"
    ]
   },
   "createcapacityreservationfleet": {
    "Resources": [
     "capacity-reservation-fleet"
    ]
   },
   "createcarriergateway": {
    "Resources": [
     "carrier-gateway",
     "vpc"
    ]
   },
   "createclientvpnendpoint": {
    "Resources": [
     "client-vpn-endpoint",
     "security-group",
     "vpc"
    ]
   },
   "createclientvpnroute": {
    "Resources": [
     "client-vpn-endpoint",
     "subnet"
    ]
   },
   "createcoipcidr": {
    "Resources": [
     "coip-pool"
    ]
   },
   "createcoippool": {
    "Resources": [
     "coip-pool",
     "local-gateway-route-table"
    ]
   },
   "createcoippoolpermission": {
    "Resources": [
     "coip-pool"
    ]
   },
   "createcustomergateway": {
    "Resources": [
     "customer-gateway"
    ]
   },
   "createdefaultsubnet": {},
   "createdefaultvpc": {},
   "createdhcpoptions": {
    "Resources": [
     "dhcp-options"
    ]
   },
   "createegressonlyinternetgateway": {
    "Resources": [
     "egress-only-internet-gateway",
     "vpc"
    ]
   },
   "createfleet": {
    "Resources": [
     "fleet",
     "image",
     "instance",
     "launch-template",
     "placement-group",
     "subnet",
     "volume"
    ]
   },
   "createflowlogs": {
    "Resources": [
     "network-interface",
     "subnet",
     "transit-gateway",
     "transit-gateway-attachment",
     "vpc",
     "vpc-flow-log"
    ]
   },
   "createfpgaimage": {
    "Resources": [
     "fpga-image"
    ]
   },
   "createimage": {
    "Resources": [
     "image",
     "instance",
     "snapshot"
    ]
   },
   "createinstanceconnectendpoint": {
    "Resources": [
     "instance-connect-endpoint",
     "security-group",
     "subnet"
    ]
   },
   "createinstanceeventwindow": {
    "Resources": [
     "instance-event-window"
    ]
   },
   "createinstanceexporttask": {
    "Resources": [
     "export-instance-task",
     "instance"
    ]
   },
   "createinternetgateway": {
    "Resources": [
     "internet-gateway"
    ]
   },
   "createipam": {
    "Resources": [
     "ipam"
    ]
   },
   "createipamexternalresourceverificationtoken": {
    "Resources": [
     "ipam",
     "ipam-external-resource-verification-token"
    ]
   },
   "createipampool": {
    "Resources": [
     "ipam-pool",
     "ipam-scope"
    ]
   },
   "createipamresourcediscovery": {
    "Resources": [
     "ipam-resource-discovery"
    ]
   },
   "createipamscope": {
    "Resources": [
     "ipam",
     "ipam-scope"
    ]
   },
   "createkeypair": {
    "Resources": [
     "key-pair"
    ]
   },
   "createlaunchtemplate": {
    "Resources": [
     "launch-template"
    ]
   },
   "createlaunchtemplateversion": {
    "Resources": [
     "launch-template"
    ]
   },
   "createlocalgatewayroute": {
    "Resources": [
     "local-gateway-route-table",
     "local-gateway-virtual-interface-group",
     "network-interface",
     "prefix-list"
    ]
   },
   "createlocalgatewayroutetable": {
    "Resources": [
     "local-gateway",
     "local-gateway-route-table"
    ]
   },
   "createlocalgatewayroutetablepermission": {
    "Resources": [
     "local-gateway-route-table"
    ]
   },
   "createlocalgatewayroutetablevirtualinterfacegroupassociation": {
    "Resources": [
     "local-gateway-route-table",
     "local-gateway-route-table-virtual-interface-group-association",
     "local-gateway-virtual-interface-group"
    ]
   },
   "createlocalgatewayroutetablevpcassociation": {
    "Resources": [
     "local-gateway-route-table",
     "local-gateway-route-table-vpc-association",
     "vpc"
    ]
   },
   "createmanagedprefixlist": {
    "Resources": [
     "prefix-list"
    ]
   },
   "createnatgateway": {
    "Resources": [
     "elastic-ip",
     "natgateway",
     "subnet"
    ]
   },
   "createnetworkacl": {
    "Resources": [
     "network-acl",
     "vpc"
    ]
   },
   "createnetworkaclentry": {
    "Resources": [
     "network-acl"
    ]
   },
   "createnetworkinsightsaccessscope": {
    "Resources": [
     "network-insights-access-scope"
    ]
   },
   "createnetworkinsightspath": {
    "Resources": [
     "instance",
     "internet-gateway",
     "network-insights-path",
     "network-interface",
     "transit-gateway",
     "vpc-endpoint",
     "vpc-endpoint-service",
     "vpc-peering-connection",
     "vpn-gateway"
    ]
   },
   "createnetworkinterface": {
    "Resources": [
     "network-interface",
     "security-group",
     "subnet"
    ]
   },
   "createnetworkinterfacepermission": {
    "Resources": [
     "network-interface"
    ]
   },
   "createplacementgroup": {
    "Resources": [
     "placement-group"
    ]
   },
   "createpublicipv4pool": {
    "Resources": [
     "ipv4pool-ec2"
    ]
   },
   "createreplacerootvolumetask": {
    "Resources": [
     "image",
     "instance",
     "replace-root-volume-task",
     "snapshot",
     "volume"
    ]
   },
   "createreservedinstanceslisting": {},
   "createrestoreimagetask": {
    "Resources": [
     "image"
    ]
   },
   "createroute": {
    "Resources": [
     "route-table"
    ]
   },
   "createroutetable": {
    "Resources": [
     "route-table",
     "vpc"
    ]
   },
   "createsecuritygroup": {
    "Resources": [
     "security-group",
     "vpc"
    ]
   },
   "createsnapshot": {
    "Resources": [
     "snapshot",
     "volume"
    ]
   },
   "createsnapshots": {
    "Resources": [
     "instance",
     "snapshot",
     "volume"
    ]
   },
   "createspotdatafeedsubscription": {},
   "createstoreimagetask": {
    "Resources": [
     "image"
    ]
   },
   "createsubnet": {
    "Resources": [
     "ipam-pool",
     "subnet",
     "vpc"
    ]
   },
   "createsubnetcidrreservation": {},
   "createtags": {
    "Resources": [
     "capacity-reservation",
     "capacity-reservation-fleet",
     "carrier-gateway",
     "client-vpn-endpoint",
     "coip-pool",
     "customer-gateway",
     "declarative-policies-report",
     "dedicated-host",
     "dhcp-options",
     "egress-only-internet-gateway",
     "elastic-gpu",
     "elastic-ip",
     "export-image-task",
     "export-instance-task",
     "fleet",
     "fpga-image",
     "host-reservation",
     "image",
     "import-image-task",
     "import-snapshot-task",
     "instance",
     "instance-connect-endpoint",
     "instance-event-window",
     "internet-gateway",
     "ipam",
     "ipam-external-resource-verification-token",
     "ipam-pool",
     "ipam-resource-discovery",
     "ipam-resource-discovery-association",
     "ipam-scope",
     "ipv4pool-ec2",
     "ipv6pool-ec2",
     "key-pair",
     "launch-template",
     "local-gateway",
     "local-gateway-route-table",
     "local-gateway-route-table-virtual-interface-group-association",
     "local-gateway-route-table-vpc-association",
     "local-gateway-virtual-interface",
     "local-gateway-virtual-interface-group",
     "natgateway",
     "network-acl",
     "network-insights-access-scope",
     "network-insights-access-scope-analysis",
     "network-insights-analysis",
     "network-insights-path",
     "network-interface",
     "placement-group",
     "prefix-list",
     "replace-root-volume-task",
     "reserved-instances",
     "route-table",
     "security-group",
     "security-group-rule",
     "snapshot",
     "spot-fleet-request",
     "spot-instances-request",
     "subnet",
     "subnet-cidr-reservation",
     "traffic-mirror-filter",
     "traffic-mirror-filter-rule",
     "traffic-mirror-session",
     "traffic-mirror-target",
     "transit-gateway",
     "transit-gateway-attachment",
     "transit-gateway-connect-peer",
     "transit-gateway-multicast-domain",
     "transit-gateway-policy-table",
     "transit-gateway-route-table",
     "transit-gateway-route-table-announcement",
     "verified-access-endpoint",
     "verified-access-endpoint-target",
     "verified-access-group",
     "verified-access-instance",
     "verified-access-policy",
     "verified-access-trust-provider",
     "volume",
     "vpc",
     "vpc-block-public-access-exclusion",
     "vpc-endpoint",
     "vpc-endpoint-connection",
     "vpc-endpoint-service",
     "vpc-endpoint-service-permission",
     "vpc-flow-log",
     "vpc-peering-connection",
     "vpn-connection",
     "vpn-gateway"
    ]
   },
   "createtrafficmirrorfilter": {
    "Resources": [
     "traffic-mirror-filter"
    ]
   },
   "createtrafficmirrorfilterrule": {
    "Resources": [
     "traffic-mirror-filter",
     "traffic-mirror-filter-rule"
    ]
   },
   "createtrafficmirrorsession": {
    "Resources": [
     "network-interface",
     "traffic-mirror-filter",
     "traffic-mirror-session",
     "traffic-mirror-target"
    ]
   },
   "createtrafficmirrortarget": {
    "Resources": [
     "network-interface",
     "traffic-mirror-target",
     "vpc-endpoint"
    ]
   },
   "createtransitgateway": {
    "Resources": [
     "transit-gateway"
    ]
   },
   "createtransitgatewayconnect": {
    "Resources": [
     "transit-gateway-attachment"
    ]
   },
   "createtransitgatewayconnectpeer": {
    "Resources": [
     "transit-gateway-attachment",
     "transit-gateway-connect-peer"
    ]
   },
   "createtransitgatewaymulticastdomain": {
    "Resources": [
     "transit-gateway",
     "transit-gateway-multicast-domain"
    ]
   },
   "createtransitgatewaypeeringattachment": {
    "Resources": [
     "transit-gateway",
     "transit-gateway-attachment"
    ]
   },
   "createtransitgatewaypolicytable": {
    "Resources": [
     "transit-gateway",
     "transit-gateway-policy-table"
    ]
   },
   "createtransitgatewayprefixlistreference": {
    "Resources": [
     "prefix-list",
     "transit-gateway-attachment",
     "transit-gateway-route-table"
    ]
   },
   "createtransitgatewayroute": {
    "Resources": [
     "transit-gateway-attachment",
     "transit-gateway-route-table"
    ]
   },
   "createtransitgatewayroutetable": {
    "Resources": [
     "transit-gateway",
     "transit-gateway-route-table"
    ]
   },
   "createtransitgatewayroutetableannouncement": {
    "Resources": [
     "transit-gateway-attachment",
     "transit-gateway-route-table",
     "transit-gateway-route-table-announcement"
    ]
   },
   "createtransitgatewayvpcattachment": {
    "Resources": [
     "subnet",
     "transit-gateway",
     "transit-gateway-attachment",
     "vpc"
    ]
   },
   "createverifiedaccessendpoint": {
    "Resources": [
     "network-interface",
     "security-group",
     "subnet",
     "verified-access-endpoint",
     "verified-access-group"
    ]
   },
   "createverifiedaccessgroup": {
    "Resources": [
     "verified-access-group",
     "verified-access-instance"
    ]
   },
   "createverifiedaccessinstance": {
    "Resources": [
     "verified-access-instance"
    ]
   },
   "createverifiedaccesstrustprovider": {
    "Resources": [
     "verified-access-trust-provider"
    ]
   },
   "createvolume": {
    "Resources": [
     "snapshot",
     "volume"
    ]
   },
   "createvpc": {
    "Resources": [
     "ipam-pool",
     "ipv6pool-ec2",
     "vpc"
    ]
   },
   "createvpcblockpublicaccessexclusion": {
    "Resources": [
     "subnet",
     "vpc",
     "vpc-block-public-access-exclusion"
    ]
   },
   "createvpcendpoint": {
    "Resources": [
     "route-table",
     "security-group",
     "subnet",
     "vpc",
     "vpc-endpoint"
    ]
   },
   "createvpcendpointconnectionnotification": {
    "Resources": [
     "vpc-endpoint",
     "vpc-endpoint-service"
    ]
   },
   "createvpcendpointserviceconfiguration": {
    "Resources": [
     "vpc-endpoint-service"
    ]
   },
   "createvpcpeeringconnection": {
    "Resources": [
     "vpc",
     "vpc-peering-connection"
    ]
   },
   "createvpnconnection": {
    "Resources": [
     "customer-gateway",
     "transit-gateway",
     "transit-gateway-attachment",
     "vpn-connection",
     "vpn-gateway"
    ]
   },
   "createvpnconnectionroute": {
    "Resources": [
     "vpn-connection"
    ]
   },
   "createvpngateway": {
    "Resources": [
     "vpn-gateway"
    ]
   },
   "deletecarriergateway": {
    "Resources": [
     "carrier-gateway"
    ]
   },
   "deleteclientvpnendpoint": {
    "Resources": [
     "client-vpn-endpoint"
    ]
   },
   "deleteclientvpnroute": {
    "Resources": [
     "client-vpn-endpoint",
     "subnet"
    ]
   },
   "deletecoipcidr": {
    "Resources": [
     "coip-pool"
    ]
   },
   "deletecoippool": {
    "Resources": [
     "coip-pool"
    ]
   },
   "deletecoippoolpermission": {
    "Resources": [
     "coip-pool"
    ]
   },
   "deletecustomergateway": {
    "Resources": [
     "customer-gateway"
    ]
   },
   "deletedhcpoptions": {
    "Resources": [
     "dhcp-options"
    ]
   },
   "deleteegressonlyinternetgateway": {
    "Resources": [
     "egress-only-internet-gateway"
    ]
   },
   "deletefleets": {
    "Resources": [
     "fleet"
    ]
   },
   "deleteflowlogs": {
    "Resources": [
     "vpc-flow-log"
    ]
   },
   "deletefpgaimage": {
    "Resources": [
     "fpga-image"
    ]
   },
   "deleteinstanceconnectendpoint": {
    "Resources": [
     "instance-connect-endpoint"
    ]
   },
   "deleteinstanceeventwindow": {
    "Resources": [
     "instance-event-window"
    ]
   },
   "deleteinternetgateway": {
    "Resources": [
     "internet-gateway"
    ]
   },
   "deleteipam": {
    "Resources": [
     "ipam"
    ]
   },
   "deleteipamexternalresourceverificationtoken": {
    "Resources": [
     "ipam-external-resource-verification-token"
    ]
   },
   "deleteipampool": {
    "Resources": [
     "ipam-pool"
    ]
   },
   "deleteipamresourcediscovery": {
    "Resources": [
     "ipam-resource-discovery"
    ]
   },
   "deleteipamscope": {
    "Resources": [
     "ipam-scope"
    ]
   },
   "deletekeypair": {
    "Resources": [
     "key-pair"
    ]
   },
   "deletelaunchtemplate": {
    "Resources": [
     "launch-template"
    ]
   },
   "deletelaunchtemplateversions": {
    "Resources": [
     "launch-template"
    ]
   },
   "deletelocalgatewayroute": {
    "Resources": [
     "local-gateway-route-table",
     "prefix-list"
    ]
   },
   "deletelocalgatewayroutetable": {
    "Resources": [
     "local-gateway-route-table"
    ]
   },
   "deletelocalgatewayroutetablepermission": {
    "Resources": [
     "local-gateway-route-table"
    ]
   },
   "deletelocalgatewayroutetablevirtualinterfacegroupassociation": {
    "Resources": [
     "local-gateway-route-table-virtual-interface-group-association"
    ]
   },
   "deletelocalgatewayroutetablevpcassociation": {
    "Resources": [
     "local-gateway-route-table-vpc-association"
    ]
   },
   "deletemanagedprefixlist": {
    "Resources": [
     "prefix-list"
    ]
   },
   "deletenatgateway": {
    "Resources": [
     "natgateway"
    ]
   },
   "deletenetworkacl": {
    "Resources": [
     "network-acl"
    ]
   },
   "deletenetworkaclentry": {
    "Resources": [
     "network-acl"
    ]
   },
   "deletenetworkinsightsaccessscope": {
    "Resources": [
     "network-insights-access-scope"
    ]
   },
   "deletenetworkinsightsaccessscopeanalysis": {
    "Resources": [
     "network-insights-access-scope-analysis"
    ]
   },
   "deletenetworkinsightsanalysis": {
    "Resources": [
     "network-insights-analysis"
    ]
   },
   "deletenetworkinsightspath": {
    "Resources": [
     "network-insights-path"
    ]
   },
   "deletenetworkinterface": {
    "Resources": [
     "network-interface"
    ]
   },
   "deletenetworkinterfacepermission": {
    "Resources": [
     "network-interface"
    ]
   },
   "deleteplacementgroup": {
    "Resources": [
     "placement-group"
    ]
   },
   "deletepublicipv4pool": {
    "Resources": [
     "ipv4pool-ec2"
    ]
   },
   "deletequeuedreservedinstances": {},
   "deleteresourcepolicy": {
    "Resources": [
     "ipam-pool",
     "placement-group",
     "verified-access-group"
    ]
   },
   "deleteroute": {
    "Resources": [
     "route-table"
    ]
   },
   "deleteroutetable": {
    "Resources": [
     "route-table"
    ]
   },
   "deletesecuritygroup": {
    "Resources": [
     "security-group"
    ]
   },
   "deletesnapshot": {
    "Resources": [
     "snapshot"
    ]
   },
   "deletespotdatafeedsubscription": {},
   "deletesubnet": {
    "Resources": [
     "subnet"
    ]
   },
   "deletesubnetcidrreservation": {},
   "deletetags": {
    "Resources": [
     "capacity-reservation",
     "capacity-reservation-fleet",
     "carrier-gateway",
     "client-vpn-endpoint",
     "coip-pool",
     "customer-gateway",
     "declarative-policies-report",
     "dedicated-host",
     "dhcp-options",
     "egress-only-internet-gateway",
     "elastic-gpu",
     "elastic-ip",
     "export-image-task",
     "export-instance-task",
     "fleet",
     "fpga-image",
     "host-reservation",
     "image",
     "import-image-task",
     "import-snapshot-task",
     "instance",
     "instance-connect-endpoint",
     "instance-event-window",
     "internet-gateway",
     "ipam",
     "ipam-external-resource-verification-token",
     "ipam-pool",
     "ipam-resource-discovery",
     "ipam-resource-discovery-association",
     "ipam-scope",
     "ipv4pool-ec2",
     "ipv6pool-ec2",
     "key-pair",
     "launch-template",
     "local-gateway",
     "local-gateway-route-table",
     "local-gateway-route-table-virtual-interface-group-association",
     "local-gateway-route-table-vpc-association",
     "local-gateway-virtual-interface",
     "local-gateway-virtual-interface-group",
     "natgateway",
     "network-acl",
     "network-insights-access-scope",
     "network-insights-access-scope-analysis",
     "network-insights-analysis",
     "network-insights-path",
     "network-interface",
     "placement-group",
     "prefix-list",
     "replace-root-volume-task",
     "reserved-instances",
     "route-table",
     "security-group",
     "security-group-rule",
     "snapshot",
     "spot-fleet-request",
     "spot-instances-request",
     "subnet",
     "subnet-cidr-reservation",
     "traffic-mirror-filter",
     "traffic-mirror-filter-rule",
     "traffic-mirror-session",
     "traffic-mirror-target",
     "transit-gateway",
     "transit-gateway-attachment",
     "transit-gateway-connect-peer",
     "transit-gateway-multicast-domain",
     "transit-gateway-policy-table",
     "transit-gateway-route-table",
     "transit-gateway-route-table-announcement",
     "verified-access-endpoint",
     "verified-access-endpoint-target",
     "verified-access-group",
     "verified-access-instance",
     "verified-access-policy",
     "verified-access-trust-provider",
     "volume",
     "vpc",
     "vpc-block-public-access-exclusion",
     "vpc-endpoint",
     "vpc-endpoint-connection",
     "vpc-endpoint-service",
     "vpc-endpoint-service-permission",
     "vpc-flow-log",
     "vpc-peering-connection",
     "vpn-connection",
     "vpn-gateway"
    ]
   },
   "deletetrafficmirrorfilter": {
    "Resources": [
     "traffic-mirror-filter"
    ]
   },
   "deletetrafficmirrorfilterrule": {
    "Resources": [
     "traffic-mirror-filter",
     "traffic-mirror-filter-rule"
    ]
   },
   "deletetrafficmirrorsession": {
    "Resources": [
     "traffic-mirror-session"
    ]
   },
   "deletetrafficmirrortarget": {
    "Resources": [
     "traffic-mirror-target"
    ]
   },
   "deletetransitgateway": {
    "Resources": [
     "transit-gateway"
    ]
   },
   "deletetransitgatewayconnect": {
    "Resources": [
     "transit-gateway-attachment"
    ]
   },
   "deletetransitgatewayconnectpeer": {
    "Resources": [
     "transit-gateway-connect-peer"
    ]
   },
   "deletetransitgatewaymulticastdomain": {
    "Resources": [
     "transit-gateway-multicast-domain"
    ]
   },
   "deletetransitgatewaypeeringattachment": {
    "Resources": [
     "transit-gateway-attachment"
    ]
   },
   "deletetransitgatewaypolicytable": {
    "Resources": [
     "transit-gateway-policy-table"
    ]
   },
   "deletetransitgatewayprefixlistreference": {
    "Resources": [
     "prefix-list",
     "transit-gateway-route-table"
    ]
   },
   "deletetransitgatewayroute": {
    "Resources": [
     "transit-gateway-route-table"
    ]
   },
   "deletetransitgatewayroutetable": {
    "Resources": [
     "transit-gateway-route-table"
    ]
   },
   "deletetransitgatewayroutetableannouncement": {
    "Resources": [
     "transit-gateway-route-table-announcement"
    ]
   },
   "deletetransitgatewayvpcattachment": {
    "Resources": [
     "transit-gateway-attachment"
    ]
   },
   "deleteverifiedaccessendpoint": {
    "Resources": [
     "verified-access-endpoint"
    ]
   },
   "deleteverifiedaccessgroup": {
    "Resources": [
     "verified-access-group"
    ]
   },
   "deleteverifiedaccessinstance": {
    "Resources": [
     "verified-access-instance"
    ]
   },
   "deleteverifiedaccesstrustprovider": {
    "Resources": [
     "verified-access-trust-provider"
    ]
   },
   "deletevolume": {
    "Resources": [
     "volume"
    ]
   },
   "deletevpc": {
    "Resources": [
     "vpc"
    ]
   },
   "deletevpcblockpublicaccessexclusion": {
    "Resources": [
     "vpc-block-public-access-exclusion"
    ]
   },
   "deletevpcendpointconnectionnotifications": {
    "Resources": [
     "vpc-endpoint",
     "vpc-endpoint-service"
    ]
   },
   "deletevpcendpoints": {
    "Resources": [
     "vpc-endpoint"
    ]
   },
   "deletevpcendpointserviceconfigurations": {
    "Resources": [
     "vpc-endpoint-service"
    ]
   },
   "deletevpcpeeringconnection": {
    "Resources": [
     "vpc-peering-connection"
    ]
   },
   "deletevpnconnection": {
    "Resources": [
     "vpn-connection"
    ]
   },
   "deletevpnconnectionroute": {
    "Resources": [
     "vpn-connection"
    ]
   },
   "deletevpngateway": {
    "Resources": [
     "vpn-gateway"
    ]
   },
   "deprovisionbyoipcidr": {},
   "deprovisionipambyoasn": {
    "Resources": [
     "ipam"
    ]
   },
   "deprovisionipampoolcidr": {
    "Resources": [
     "ipam-pool"
    ]
   },
   "deprovisionpublicipv4poolcidr": {
    "Resources": [
     "ipv4pool-ec2"
    ]
   },
   "deregisterimage": {
    "Resources": [
     "image"
    ]
   },
   "deregisterinstanceeventnotificationattributes": {},
   "deregistertransitgatewaymulticastgroupmembers": {
    "Resources": [
     "network-interface",
     "transit-gateway-multicast-domain"
    ]
   },
   "deregistertransitgatewaymulticastgroupsources": {
    "Resources": [
     "network-interface",
     "transit-gateway-multicast-domain"
    ]
   },
   "describeaccountattributes": {},
   "describeaddresses": {},
   "describeaddressesattribute": {},
   "describeaddresstransfers": {},
   "describeaggregateidformat": {},
   "describeavailabilityzones": {},
   "describeawsnetworkperformancemetricsubscriptions": {},
   "describebundletasks": {},
   "describebyoipcidrs": {},
   "describecapacityblockextensionhistory": {
    "Resources": [
     "capacity-reservation"
    ]
   },
   "describecapacityblockextensionofferings": {
    "Resources": [
     "capacity-reservation"
    ]
   },
   "describecapacityblockofferings": {},
   "describecapacityreservationbillingrequests": {},
   "describecapacityreservationfleets": {},
   "describecapacityreservations": {},
   "describecarriergateways": {},
   "describeclassiclinkinstances": {},
   "describeclientvpnauthorizationrules": {
    "Resources": [
     "client-vpn-endpoint"
    ]
   },
   "describeclientvpnconnections": {
    "Resources": [
     "client-vpn-endpoint"
    ]
   },
   "describeclientvpnendpoints": {
    "Resources": [
     "client-vpn-endpoint"
    ]
   },
   "describeclientvpnroutes": {
    "Resources": [
     "client-vpn-endpoint"
    ]
   },
   "describeclientvpntargetnetworks": {
    "Resources": [
     "client-vpn-endpoint"
    ]
   },
   "describecoippools": {},
   "describeconversiontasks": {},
   "describecustomergateways": {},
   "describedeclarativepoliciesreports": {},
   "describedhcpoptions": {},
   "describeegressonlyinternetgateways": {},
   "describeelasticgpus": {},
   "describeexportimagetasks": {},
   "describeexporttasks": {},
   "describefastlaunchimages": {},
   "describefastsnapshotrestores": {},
   "describefleethistory": {
    "Resources": [
     "fleet"
    ]
   },
   "describefleetinstances": {
    "Resources": [
     "fleet"
    ]
   },
   "describefleets": {},
   "describeflowlogs": {},
   "describefpgaimageattribute": {
    "Resources": [
     "fpga-image"
    ]
   },
   "describefpgaimages": {},
   "describehostreservationofferings": {},
   "describehostreservations": {},
   "describehosts": {},
   "describeiaminstanceprofileassociations": {},
   "describeidentityidformat": {},
   "describeidformat": {},
   "describeimageattribute": {
    "Resources": [
     "image"
    ]
   },
   "describeimages": {},
   "describeimportimagetasks": {},
   "describeimportsnapshottasks": {},
   "describeinstanceattribute": {
    "Resources": [
     "instance"
    ]
   },
   "describeinstanceconnectendpoints": {},
   "describeinstancecreditspecifications": {},
   "describeinstanceeventnotificationattributes": {},
   "describeinstanceeventwindows": {},
   "describeinstanceimagemetadata": {},
   "describeinstances": {},
   "describeinstancestatus": {},
   "describeinstancetopology": {},
   "describeinstancetypeofferings": {},
   "describeinstancetypes": {},
   "describeinternetgateways": {},
   "describeipambyoasn": {},
   "describeipamexternalresourceverificationtokens": {},
   "describeipampools": {},
   "describeipamresourcediscoveries": {},
   "describeipamresourcediscoveryassociations": {},
   "describeipams": {},
   "describeipamscopes": {},
   "describeipv6pools": {},
   "describekeypairs": {},
   "describelaunchtemplates": {},
   "describelaunchtemplateversions": {},
   "describelocalgatewayroutetablepermissions": {},
   "describelocalgatewayroutetables": {},
   "describelocalgatewayroutetablevirtualinterfacegroupassociations": {},
   "describelocalgatewayroutetablevpcassociations": {},
   "describelocalgateways": {},
   "describelocalgatewayvirtualinterfacegroups": {},
   "describelocalgatewayvirtualinterfaces": {},
   "describelockedsnapshots": {},
   "describemachosts": {},
   "describemanagedprefixlists": {},
   "describemovingaddresses": {},
   "describenatgateways": {},
   "describenetworkacls": {},
   "describenetworkinsightsaccessscopeanalyses": {},
   "describenetworkinsightsaccessscopes": {},
   "describenetworkinsightsanalyses": {},
   "describenetworkinsightspaths": {},
   "describenetworkinterfaceattribute": {},
   "describenetworkinterfacepermissions": {},
   "describenetworkinterfaces": {},
   "describeplacementgroups": {},
   "describeprefixlists": {},
   "describeprincipalidformat": {},
   "describepublicipv4pools": {},
   "describeregions": {},
   "describereplacerootvolumetasks": {},
   "describereservedinstances": {},
   "describereservedinstanceslistings": {},
   "describereservedinstancesmodifications": {},
   "describereservedinstancesofferings": {},
   "describeroutetables": {},
   "describescheduledinstanceavailability": {},
   "describescheduledinstances": {},
   "describesecuritygroupreferences": {
    "Resources": [
     "security-group"
    ]
   },
   "describesecuritygrouprules": {},
   "describesecuritygroups": {},
   "describesecuritygroupvpcassociations": {},
   "describesnapshotattribute": {
    "Resources": [
     "snapshot"
    ]
   },
   "describesnapshots": {},
   "describesnapshottierstatus": {},
   "describespotdatafeedsubscription": {},
   "describespotfleetinstances": {
    "Resources": [
     "spot-fleet-request"
    ]
   },
   "describespotfleetrequesthistory": {
    "Resources": [
     "spot-fleet-request"
    ]
   },
   "describespotfleetrequests": {},
   "describespotinstancerequests": {},
   "describespotpricehistory": {},
   "describestalesecuritygroups": {},
   "describestoreimagetasks": {},
   "describesubnets": {},
   "describetags": {},
   "describetrafficmirrorfilterrules": {},
   "describetrafficmirrorfilters": {},
   "describetrafficmirrorsessions": {},
   "describetrafficmirrortargets": {},
   "describetransitgatewayattachments": {},
   "describetransitgatewayconnectpeers": {},
   "describetransitgatewayconnects": {},
   "describetransitgatewaymulticastdomains": {},
   "describetransitgatewaypeeringattachments": {},
   "describetransitgatewaypolicytables": {},
   "describetransitgatewayroutetableannouncements": {},
   "describetransitgatewayroutetables": {},
   "describetransitgateways": {},
   "describetransitgatewayvpcattachments": {},
   "describetrunkinterfaceassociations": {},
   "describeverifiedaccessendpoints": {},
   "describeverifiedaccessgroups": {},
   "describeverifiedaccessinstanceloggingconfigurations": {},
   "describeverifiedaccessinstances": {},
   "describeverifiedaccessinstancewebaclassociations": {},
   "describeverifiedaccesstrustproviders": {},
   "describevolumeattribute": {
    "Resources": [
     "volume"
    ]
   },
   "describevolumes": {},
   "describevolumesmodifications": {},
   "describevolumestatus": {},
   "describevpcattribute": {
    "Resources": [
     "vpc"
    ]
   },
   "describevpcblockpublicaccessexclusions": {},
   "describevpcblockpublicaccessoptions": {},
   "describevpcclassiclink": {},
   "describevpcclassiclinkdnssupport": {},
   "describevpcendpointassociations": {
    "Resources": [
     "vpc-endpoint"
    ]
   },
   "describevpcendpointconnectionnotifications": {},
   "describevpcendpointconnections": {},
   "describevpcendpoints": {},
   "describevpcendpointserviceconfigurations": {},
   "describevpcendpointservicepermissions": {
    "Resources": [
     "vpc-endpoint-service"
    ]
   },
   "describevpcendpointservices": {},
   "describevpcpeeringconnections": {},
   "describevpcs": {},
   "describevpnconnections": {},
   "describevpngateways": {},
   "detachclassiclinkvpc": {
    "Resources": [
     "instance",
     "vpc"
    ]
   },
   "detachinternetgateway": {
    "Resources": [
     "internet-gateway",
     "vpc"
    ]
   },
   "detachnetworkinterface": {
    "Resources": [
     "instance",
     "network-interface"
    ]
   },
   "detachverifiedaccesstrustprovider": {
    "Resources": [
     "verified-access-instance",
     "verified-access-trust-provider"
    ]
   },
   "detachvolume": {
    "Resources": [
     "instance",
     "volume"
    ]
   },
   "detachvpngateway": {
    "Resources": [
     "vpc",
     "vpn-gateway"
    ]
   },
   "disableaddresstransfer": {
    "Resources": [
     "elastic-ip"
    ]
   },
   "disableallowedimagessettings": {},
   "disableawsnetworkperformancemetricsubscription": {},
   "disableebsencryptionbydefault": {},
   "disablefastlaunch": {
    "Resources": [
     "image"
    ]
   },
   "disablefastsnapshotrestores": {
    "Resources": [
     "snapshot"
    ]
   },
   "disableimage": {
    "Resources": [
     "image"
    ]
   },
   "disableimageblockpublicaccess": {},
   "disableimagedeprecation": {
    "Resources": [
     "image"
    ]
   },
   "disableimagederegistrationprotection": {
    "Resources": [
     "image"
    ]
   },
   "disableipamorganizationadminaccount": {},
   "disableserialconsoleaccess": {},
   "disablesnapshotblockpublicaccess": {},
   "disabletransitgatewayroutetablepropagation": {
    "Resources": [
     "transit-gateway-attachment",
     "transit-gateway-route-table",
     "transit-gateway-route-table-announcement"
    ]
   },
   "disablevgwroutepropagation": {
    "Resources": [
     "route-table",
     "vpn-gateway"
    ]
   },
   "disablevpcclassiclink": {
    "Resources": [
     "vpc"
    ]
   },
   "disablevpcclassiclinkdnssupport": {
    "Resources": [
     "vpc"
    ]
   },
   "disassociateaddress": {
    "Resources": [
     "elastic-ip",
     "network-interface"
    ]
   },
   "disassociatecapacityreservationbillingowner": {
    "Resources": [
     "capacity-reservation"
    ]
   },
   "disassociateclientvpntargetnetwork": {
    "Resources": [
     "client-vpn-endpoint"
    ]
   },
   "disassociateenclavecertificateiamrole": {
    "Resources": [
     "certificate",
     "role"
    ]
   },
   "disassociateiaminstanceprofile": {
    "Resources": [
     "instance"
    ]
   },
   "disassociateinstanceeventwindow": {
    "Resources": [
     "instance-event-window"
    ]
   },
   "disassociateipambyoasn": {},
   "disassociateipamresourcediscovery": {
    "Resources": [
     "ipam-resource-discovery-association"
    ]
   },
   "disassociatenatgatewayaddress": {
    "Resources": [
     "elastic-ip",
     "natgateway",
     "network-interface"
    ]
   },
   "disassociateroutetable": {
    "Resources": [
     "internet-gateway",
     "ipv4pool-ec2",
     "ipv6pool-ec2",
     "route-table",
     "subnet",
     "vpn-gateway"
    ]
   },
   "disassociatesecuritygroupvpc": {
    "Resources": [
     "security-group",
     "vpc"
    ]
   },
   "disassociatesubnetcidrblock": {
    "Resources": [
     "subnet"
    ]
   },
   "disassociatetransitgatewaymulticastdomain": {
    "Resources": [
     "subnet",
     "transit-gateway-attachment",
     "transit-gateway-multicast-domain"
    ]
   },
   "disassociatetransitgatewaypolicytable": {
    "Resources": [
     "transit-gateway-attachment",
     "transit-gateway-policy-table"
    ]
   },
   "disassociatetransitgatewayroutetable": {
    "Resources": [
     "transit-gateway-attachment",
     "transit-gateway-route-table"
    ]
   },
   "disassociatetrunkinterface": {},
   "disassociateverifiedaccessinstancewebacl": {
    "Resources": [
     "verified-access-instance"
    ]
   },
   "disassociatevpccidrblock": {
    "Resources": [
     "vpc"
    ]
   },
   "enableaddresstransfer": {
    "Resources": [
     "elastic-ip"
    ]
   },
   "enableallowedimagessettings": {},
   "enableawsnetworkperformancemetricsubscription": {},
   "enableebsencryptionbydefault": {},
   "enablefastlaunch": {
    "Resources": [
     "image",
     "launch-template"
    ]
   },
   "enablefastsnapshotrestores": {
    "Resources": [
     "snapshot"
    ]
   },
   "enableimage": {
    "Resources": [
     "image"
    ]
   },
   "enableimageblockpublicaccess": {},
   "enableimagedeprecation": {
    "Resources": [
     "image"
    ]
   },
   "enableimagederegistrationprotection": {
    "Resources": [
     "image"
    ]
   },
   "enableipamorganizationadminaccount": {},
   "enablereachabilityanalyzerorganizationsharing": {},
   "enableserialconsoleaccess": {},
   "enablesnapshotblockpublicaccess": {},
   "enabletransitgatewayroutetablepropagation": {
    "Resources": [
     "transit-gateway-attachment",
     "transit-gateway-route-table",
     "transit-gateway-route-table-announcement"
    ]
   },
   "enablevgwroutepropagation": {
    "Resources": [
     "route-table",
     "vpn-gateway"
    ]
   },
   "enablevolumeio": {
    "Resources": [
     "volume"
    ]
   },
   "enablevpcclassiclink": {
    "Resources": [
     "vpc"
    ]
   },
   "enablevpcclassiclinkdnssupport": {
    "Resources": [
     "vpc"
    ]
   },
   "exportclientvpnclientcertificaterevocationlist": {
    "Resources": [
     "client-vpn-endpoint"
    ]
   },
   "exportclientvpnclientconfiguration": {
    "Resources": [
     "client-vpn-endpoint"
    ]
   },
   "exportimage": {
    "Resources": [
     "export-image-task",
     "image"
    ]
   },
   "exporttransitgatewayroutes": {},
   "exportverifiedaccessinstanceclientconfiguration": {
    "Resources": [
     "verified-access-instance"
    ]
   },
   "getallowedimagessettings": {},
   "getassociatedenclavecertificateiamroles": {
    "Resources": [
     "certificate"
    ]
   },
   "getassociatedipv6poolcidrs": {},
   "getawsnetworkperformancedata": {},
   "getcapacityreservationusage": {
    "Resources": [
     "capacity-reservation"
    ]
   },
   "getcoippoolusage": {
    "Resources": [
     "coip-pool"
    ]
   },
   "getconsoleoutput": {
    "Resources": [
     "instance"
    ]
   },
   "getconsolescreenshot": {
    "Resources": [
     "instance"
    ]
   },
   "getdeclarativepoliciesreportsummary": {
    "Resources": [
     "declarative-policies-report"
    ]
   },
   "getdefaultcreditspecification": {},
   "getebsdefaultkmskeyid": {},
   "getebsencryptionbydefault": {},
   "getflowlogsintegrationtemplate": {
    "Resources": [
     "vpc-flow-log"
    ]
   },
   "getgroupsforcapacityreservation": {
    "Resources": [
     "capacity-reservation"
    ]
   },
   "gethostreservationpurchasepreview": {},
   "getimageblockpublicaccessstate": {},
   "getinstancemetadatadefaults": {},
   "getinstancetpmekpub": {
    "Resources": [
     "instance"
    ]
   },
   "getinstancetypesfrominstancerequirements": {},
   "getinstanceuefidata": {
    "Resources": [
     "instance"
    ]
   },
   "getipamaddresshistory": {
    "Resources": [
     "ipam-scope"
    ]
   },
   "getipamdiscoveredaccounts": {
    "Resources": [
     "ipam-resource-discovery"
    ]
   },
   "getipamdiscoveredpublicaddresses": {
    "Resources": [
     "ipam-resource-discovery"
    ]
   },
   "getipamdiscoveredresourcecidrs": {
    "Resources": [
     "ipam-resource-discovery"
    ]
   },
   "getipampoolallocations": {
    "Resources": [
     "ipam-pool"
    ]
   },
   "getipampoolcidrs": {
    "Resources": [
     "ipam-pool"
    ]
   },
   "getipamresourcecidrs": {
    "Resources": [
     "ipam-pool",
     "ipam-scope"
    ]
   },
   "getlaunchtemplatedata": {
    "Resources": [
     "instance"
    ]
   },
   "getmanagedprefixlistassociations": {
    "Resources": [
     "prefix-list"
    ]
   },
   "getmanagedprefixlistentries": {
    "Resources": [
     "prefix-list"
    ]
   },
   "getnetworkinsightsaccessscopeanalysisfindings": {
    "Resources": [
     "network-insights-access-scope-analysis"
    ]
   },
   "getnetworkinsightsaccessscopecontent": {
    "Resources": [
     "network-insights-access-scope"
    ]
   },
   "getpassworddata": {
    "Resources": [
     "instance"
    ]
   },
   "getreservedinstancesexchangequote": {},
   "getresourcepolicy": {
    "Resources": [
     "ipam-pool",
     "placement-group",
     "verified-access-group"
    ]
   },
   "getsecuritygroupsforvpc": {
    "Resources": [
     "vpc"
    ]
   },
   "getserialconsoleaccessstatus": {},
   "getsnapshotblockpublicaccessstate": {},
   "getspotplacementscores": {},
   "getsubnetcidrreservations": {},
   "gettransitgatewayattachmentpropagations": {},
   "gettransitgatewaymulticastdomainassociations": {
    "Resources": [
     "transit-gateway-multicast-domain"
    ]
   },
   "gettransitgatewaypolicytableassociations": {
    "Resources": [
     "transit-gateway-policy-table"
    ]
   },
   "gettransitgatewaypolicytableentries": {
    "Resources": [
     "transit-gateway-policy-table"
    ]
   },
   "gettransitgatewayprefixlistreferences": {},
   "gettransitgatewayroutetableassociations": {},
   "gettransitgatewayroutetablepropagations": {},
   "getverifiedaccessendpointpolicy": {
    "Resources": [
     "verified-access-endpoint"
    ]
   },
   "getverifiedaccessendpointtargets": {
    "Resources": [
     "verified-access-endpoint"
    ]
   },
   "getverifiedaccessgrouppolicy": {
    "Resources": [
     "verified-access-group"
    ]
   },
   "getverifiedaccessinstancewebacl": {
    "Resources": [
     "verified-access-instance"
    ]
   },
   "getvpnconnectiondevicesampleconfiguration": {
    "Resources": [
     "vpn-connection",
     "vpn-connection-device-type"
    ]
   },
   "getvpnconnectiondevicetypes": {},
   "getvpntunnelreplacementstatus": {
    "Resources": [
     "vpn-connection"
    ]
   },
   "importbyoipcidrtoipam": {
    "Resources": [
     "ipam-pool"
    ]
   },
   "importclientvpnclientcertificaterevocationlist": {
    "Resources": [
     "client-vpn-endpoint"
    ]
   },
   "importimage": {
    "Resources": [
     "image",
     "import-image-task",
     "snapshot"
    ]
   },
   "importinstance": {
    "Resources": [
     "instance",
     "security-group",
     "subnet",
     "volume"
    ]
   },
   "importkeypair": {
    "Resources": [
     "key-pair"
    ]
   },
   "importsnapshot": {
    "Resources": [
     "import-snapshot-task",
     "snapshot"
    ]
   },
   "importvolume": {
    "Resources": [
     "volume"
    ]
   },
   "injectapierror": {},
   "listimagesinrecyclebin": {},
   "listsnapshotsinrecyclebin": {},
   "locksnapshot": {
    "Resources": [
     "snapshot"
    ]
   },
   "modifyaddressattribute": {
    "Resources": [
     "elastic-ip"
    ]
   },
   "modifyavailabilityzonegroup": {},
   "modifycapacityreservation": {
    "Resources": [
     "capacity-reservation"
    ]
   },
   "modifycapacityreservationfleet": {
    "Resources": [
     "capacity-reservation-fleet"
    ]
   },
   "modifyclientvpnendpoint": {
    "Resources": [
     "client-vpn-endpoint",
     "security-group",
     "vpc"
    ]
   },
   "modifydefaultcreditspecification": {},
   "modifyebsdefaultkmskeyid": {},
   "modifyfleet": {
    "Resources": [
     "fleet",
     "image",
     "launch-template",
     "subnet"
    ]
   },
   "modifyfpgaimageattribute": {
    "Resources": [
     "fpga-image"
    ]
   },
   "modifyhosts": {
    "Resources": [
     "dedicated-host"
    ]
   },
   "modifyidentityidformat": {},
   "modifyidformat": {},
   "modifyimageattribute": {
    "Resources": [
     "image"
    ]
   },
   "modifyinstanceattribute": {
    "Resources": [
     "instance",
     "security-group",
     "volume"
    ]
   },
   "modifyinstancecapacityreservationattributes": {
    "Resources": [
     "capacity-reservation",
     "instance"
    ]
   },
   "modifyinstancecpuoptions": {
    "Resources": [
     "instance"
    ]
   },
   "modifyinstancecreditspecification": {
    "Resources": [
     "instance"
    ]
   },
   "modifyinstanceeventstarttime": {
    "Resources": [
     "instance"
    ]
   },
   "modifyinstanceeventwindow": {
    "Resources": [
     "instance-event-window"
    ]
   },
   "modifyinstancemaintenanceoptions": {
    "Resources": [
     "instance"
    ]
   },
   "modifyinstancemetadatadefaults": {},
   "modifyinstancemetadataoptions": {
    "Resources": [
     "instance"
    ]
   },
   "modifyinstancenetworkperformanceoptions": {
    "Resources": [
     "instance"
    ]
   },
   "modifyinstanceplacement": {
    "Resources": [
     "dedicated-host",
     "instance",
     "placement-group"
    ]
   },
   "modifyipam": {
    "Resources": [
     "ipam"
    ]
   },
   "modifyipampool": {
    "Resources": [
     "ipam-pool"
    ]
   },
   "modifyipamresourcecidr": {
    "Resources": [
     "ipam-scope"
    ]
   },
   "modifyipamresourcediscovery": {
    "Resources": [
     "ipam-resource-discovery"
    ]
   },
   "modifyipamscope": {
    "Resources": [
     "ipam-scope"
    ]
   },
   "modifylaunchtemplate": {
    "Resources": [
     "launch-template"
    ]
   },
   "modifylocalgatewayroute": {
    "Resources": [
     "local-gateway-route-table",
     "local-gateway-virtual-interface-group",
     "network-interface",
     "prefix-list"
    ]
   },
   "modifymanagedprefixlist": {
    "Resources": [
     "prefix-list"
    ]
   },
   "modifynetworkinterfaceattribute": {
    "Resources": [
     "instance",
     "network-interface",
     "security-group"
    ]
   },
   "modifyprivatednsnameoptions": {
    "Resources": [
     "instance"
    ]
   },
   "modifyreservedinstances": {
    "Resources": [
     "reserved-instances"
    ]
   },
   "modifysecuritygrouprules": {
    "Resources": [
     "prefix-list",
     "security-group",
     "security-group-rule"
    ]
   },
   "modifysnapshotattribute": {
    "Resources": [
     "snapshot"
    ]
   },
   "modifysnapshottier": {
    "Resources": [
     "snapshot"
    ]
   },
   "modifyspotfleetrequest": {
    "Resources": [
     "launch-template",
     "spot-fleet-request",
     "subnet"
    ]
   },
   "modifysubnetattribute": {
    "Resources": [
     "subnet"
    ]
   },
   "modifytrafficmirrorfilternetworkservices": {
    "Resources": [
     "traffic-mirror-filter"
    ]
   },
   "modifytrafficmirrorfilterrule": {
    "Resources": [
     "traffic-mirror-filter",
     "traffic-mirror-filter-rule"
    ]
   },
   "modifytrafficmirrorsession": {
    "Resources": [
     "traffic-mirror-filter",
     "traffic-mirror-session",
     "traffic-mirror-target"
    ]
   },
   "modifytransitgateway": {
    "Resources": [
     "transit-gateway",
     "transit-gateway-route-table"
    ]
   },
   "modifytransitgatewayprefixlistreference": {
    "Resources": [
     "prefix-list",
     "transit-gateway-attachment",
     "transit-gateway-route-table"
    ]
   },
   "modifytransitgatewayvpcattachment": {
    "Resources": [
     "subnet",
     "transit-gateway-attachment"
    ]
   },
   "modifyverifiedaccessendpoint": {
    "Resources": [
     "subnet",
     "verified-access-endpoint",
     "verified-access-group"
    ]
   },
   "modifyverifiedaccessendpointpolicy": {
    "Resources": [
     "verified-access-endpoint"
    ]
   },
   "modifyverifiedaccessgroup": {
    "Resources": [
     "verified-access-group",
     "verified-access-instance"
    ]
   },
   "modifyverifiedaccessgrouppolicy": {
    "Resources": [
     "verified-access-group"
    ]
   },
   "modifyverifiedaccessinstance": {
    "Resources": [
     "verified-access-instance"
    ]
   },
   "modifyverifiedaccessinstanceloggingconfiguration": {
    "Resources": [
     "verified-access-instance"
    ]
   },
   "modifyverifiedaccesstrustprovider": {
    "Resources": [
     "verified-access-trust-provider"
    ]
   },
   "modifyvolume": {
    "Resources": [
     "volume"
    ]
   },
   "modifyvolumeattribute": {
    "Resources": [
     "volume"
    ]
   },
   "modifyvpcattribute": {
    "Resources": [
     "vpc"
    ]
   },
   "modifyvpcblockpublicaccessexclusion": {
    "Resources": [
     "vpc-block-public-access-exclusion"
    ]
   },
   "modifyvpcblockpublicaccessoptions": {},
   "modifyvpcendpoint": {
    "Resources": [
     "route-table",
     "security-group",
     "subnet",
     "vpc-endpoint"
    ]
   },
   "modifyvpcendpointconnectionnotification": {
    "Resources": [
     "vpc-endpoint",
     "vpc-endpoint-service"
    ]
   },
   "modifyvpcendpointserviceconfiguration": {
    "Resources": [
     "vpc-endpoint-service"
    ]
   },
   "modifyvpcendpointservicepayerresponsibility": {
    "Resources": [
     "vpc-endpoint-service"
    ]
   },
   "modifyvpcendpointservicepermissions": {
    "Resources": [
     "vpc-endpoint-service"
    ]
   },
   "modifyvpcpeeringconnectionoptions": {
    "Resources": [
     "vpc-peering-connection"
    ]
   },
   "modifyvpctenancy": {
    "Resources": [
     "vpc"
    ]
   },
   "modifyvpnconnection": {
    "Resources": [
     "vpn-connection"
    ]
   },
   "modifyvpnconnectionoptions": {
    "Resources": [
     "vpn-connection"
    ]
   },
   "modifyvpntunnelcertificate": {
    "Resources": [
     "vpn-connection"
    ]
   },
   "modifyvpntunneloptions": {
    "Resources": [
     "vpn-connection"
    ]
   },
   "monitorinstances": {
    "Resources": [
     "instance"
    ]
   },
   "moveaddresstovpc": {},
   "movebyoipcidrtoipam": {
    "Resources": [
     "ipam-pool"
    ]
   },
   "movecapacityreservationinstances": {
    "Resources": [
     "capacity-reservation"
    ]
   },
   "pausevolumeio": {
    "Resources": [
     "instance",
     "volume"
    ]
   },
   "provisionbyoipcidr": {},
   "provisionipambyoasn": {
    "Resources": [
     "ipam"
    ]
   },
   "provisionipampoolcidr": {
    "Resources": [
     "ipam-external-resource-verification-token",
     "ipam-pool"
    ]
   },
   "provisionpublicipv4poolcidr": {
    "Resources": [
     "ipam-pool",
     "ipv4pool-ec2"
    ]
   },
   "purchasecapacityblock": {
    "Resources": [
     "capacity-reservation"
    ]
   },
   "purchasecapacityblockextension": {
    "Resources": [
     "capacity-reservation"
    ]
   },
   "purchasehostreservation": {
    "Resources": [
     "dedicated-host"
    ]
   },
   "purchasereservedinstancesoffering": {},
   "purchasescheduledinstances": {},
   "putresourcepolicy": {
    "Resources": [
     "ipam-pool",
     "placement-group",
     "verified-access-group"
    ]
   },
   "rebootinstances": {
    "Resources": [
     "instance"
    ]
   },
   "registerimage": {
    "Resources": [
     "image",
     "snapshot"
    ]
   },
   "registerinstanceeventnotificationattributes": {},
   "registertransitgatewaymulticastgroupmembers": {
    "Resources": [
     "network-interface",
     "transit-gateway-multicast-domain"
    ]
   },
   "registertransitgatewaymulticastgroupsources": {
    "Resources": [
     "network-interface",
     "transit-gateway-multicast-domain"
    ]
   },
   "rejectcapacityreservationbillingownership": {
    "Resources": [
     "capacity-reservation"
    ]
   },
   "rejecttransitgatewaymulticastdomainassociations": {
    "Resources": [
     "transit-gateway-attachment",
     "transit-gateway-multicast-domain"
    ]
   },
   "rejecttransitgatewaypeeringattachment": {
    "Resources": [
     "transit-gateway-attachment"
    ]
   },
   "rejecttransitgatewayvpcattachment": {
    "Resources": [
     "transit-gateway-attachment"
    ]
   },
   "rejectvpcendpointconnections": {
    "Resources": [
     "vpc-endpoint-service"
    ]
   },
   "rejectvpcpeeringconnection": {
    "Resources": [
     "vpc-peering-connection"
    ]
   },
   "releaseaddress": {
    "Resources": [
     "elastic-ip"
    ]
   },
   "releasehosts": {
    "Resources": [
     "dedicated-host"
    ]
   },
   "releaseipampoolallocation": {
    "Resources": [
     "ipam-pool"
    ]
   },
   "replaceiaminstanceprofileassociation": {
    "Resources": [
     "instance"
    ]
   },
   "replaceimagecriteriainallowedimagessettings": {},
   "replacenetworkaclassociation": {
    "Resources": [
     "network-acl",
     "subnet"
    ]
   },
   "replacenetworkaclentry": {
    "Resources": [
     "network-acl"
    ]
   },
   "replaceroute": {
    "Resources": [
     "route-table"
    ]
   },
   "replaceroutetableassociation": {
    "Resources": [
     "internet-gateway",
     "ipv4pool-ec2",
     "ipv6pool-ec2",
     "route-table",
     "subnet",
     "vpn-gateway"
    ]
   },
   "replacetransitgatewayroute": {
    "Resources": [
     "transit-gateway-attachment",
     "transit-gateway-route-table"
    ]
   },
   "replacevpntunnel": {
    "Resources": [
     "vpn-connection"
    ]
   },
   "reportinstancestatus": {
    "Resources": [
     "instance"
    ]
   },
   "requestspotfleet": {
    "Resources": [
     "image",
     "key-pair",
     "launch-template",
     "placement-group",
     "security-group",
     "snapshot",
     "spot-fleet-request",
     "subnet"
    ]
   },
   "requestspotinstances": {
    "Resources": [
     "image",
     "key-pair",
     "network-interface",
     "placement-group",
     "security-group",
     "snapshot",
     "spot-instances-request",
     "subnet"
    ]
   },
   "resetaddressattribute": {
    "Resources": [
     "elastic-ip"
    ]
   },
   "resetebsdefaultkmskeyid": {},
   "resetfpgaimageattribute": {
    "Resources": [
     "fpga-image"
    ]
   },
   "resetimageattribute": {
    "Resources": [
     "image"
    ]
   },
   "resetinstanceattribute": {
    "Resources": [
     "instance"
    ]
   },
   "resetnetworkinterfaceattribute": {
    "Resources": [
     "network-interface"
    ]
   },
   "resetsnapshotattribute": {
    "Resources": [
     "snapshot"
    ]
   },
   "restoreaddresstoclassic": {},
   "restoreimagefromrecyclebin": {
    "Resources": [
     "image"
    ]
   },
   "restoremanagedprefixlistversion": {
    "Resources": [
     "prefix-list"
    ]
   },
   "restoresnapshotfromrecyclebin": {
    "Resources": [
     "snapshot"
    ]
   },
   "restoresnapshottier": {
    "Resources": [
     "snapshot"
    ]
   },
   "revokeclientvpningress": {
    "Resources": [
     "client-vpn-endpoint"
    ]
   },
   "revokesecuritygroupegress": {
    "Resources": [
     "security-group"
    ]
   },
   "revokesecuritygroupingress": {
    "Resources": [
     "security-group"
    ]
   },
   "runinstances": {
    "Resources": [
     "capacity-reservation",
     "elastic-gpu",
     "elastic-inference",
     "group",
     "image",
     "instance",
     "key-pair",
     "launch-template",
     "license-configuration",
     "network-interface",
     "placement-group",
     "security-group",
     "snapshot",
     "subnet",
     "volume"
    ]
   },
   "runscheduledinstances": {},
   "searchlocalgatewayroutes": {
    "Resources": [
     "local-gateway-route-table"
    ]
   },
   "searchtransitgatewaymulticastgroups": {
    "Resources": [
     "transit-gateway-multicast-domain"
    ]
   },
   "searchtransitgatewayroutes": {
    "Resources": [
     "transit-gateway-route-table"
    ]
   },
   "senddiagnosticinterrupt": {
    "Resources": [
     "instance"
    ]
   },
   "sendspotinstanceinterruptions": {
    "Resources": [
     "instance"
    ]
   },
   "startdeclarativepoliciesreport": {},
   "startinstances": {
    "Resources": [
     "instance",
     "license-configuration"
    ]
   },
   "startnetworkinsightsaccessscopeanalysis": {
    "Resources": [
     "network-insights-access-scope",
     "network-insights-access-scope-analysis"
    ]
   },
   "startnetworkinsightsanalysis": {
    "Resources": [
     "network-insights-analysis",
     "network-insights-path"
    ]
   },
   "startvpcendpointserviceprivatednsverification": {
    "Resources": [
     "vpc-endpoint-service"
    ]
   },
   "stopinstances": {
    "Resources": [
     "instance"
    ]
   },
   "terminateclientvpnconnections": {
    "Resources": [
     "client-vpn-endpoint"
    ]
   },
   "terminateinstances": {
    "Resources": [
     "instance"
    ]
   },
   "unassignipv6addresses": {
    "Resources": [
     "network-interface"
    ]
   },
   "unassignprivateipaddresses": {
    "Resources": [
     "network-interface"
    ]
   },
   "unassignprivatenatgatewayaddress": {
    "Resources": [
     "natgateway"
    ]
   },
   "unlocksnapshot": {
    "Resources": [
     "snapshot"
    ]
   },
   "unmonitorinstances": {
    "Resources": [
     "instance"
    ]
   },
   "updatesecuritygroupruledescriptionsegress": {
    "Resources": [
     "security-group"
    ]
   },
   "updatesecuritygroupruledescriptionsingress": {
    "Resources": [
     "security-group"
    ]
   },
   "withdrawbyoipcidr": {}
  },
  "Resources": {
   "capacity-reservation": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:AvailabilityZone",
     "ec2:CapacityReservationFleet",
     "ec2:CreateDate",
     "ec2:DestinationCapacityReservationId",
     "ec2:EbsOptimized",
     "ec2:EndDate",
     "ec2:EndDateType",
     "ec2:InstanceCount",
     "ec2:InstanceMatchCriteria",
     "ec2:InstancePlatform",
     "ec2:InstanceType",
     "ec2:IsLaunchTemplateResource",
     "ec2:LaunchTemplate",
     "ec2:OutpostArn",
     "ec2:PlacementGroup",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}",
     "ec2:SourceCapacityReservationId",
     "ec2:Tenancy"
    ]
   },
   "capacity-reservation-fleet": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation-fleet/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "carrier-gateway": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:carrier-gateway/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}",
     "ec2:Tenancy",
     "ec2:Vpc"
    ]
   },
   "certificate": {
    "ARNFormats": [
     "arn:${Partition}:acm:${Region}:${Account}:certificate/.*"
    ]
   },
   "client-vpn-endpoint": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:ClientRootCertificateChainArn",
     "ec2:CloudwatchLogGroupArn",
     "ec2:CloudwatchLogStreamArn",
     "ec2:DirectoryArn",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}",
     "ec2:SamlProviderArn",
     "ec2:ServerCertificateArn"
    ]
   },
   "coip-pool": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:coip-pool/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "customer-gateway": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:customer-gateway/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "declarative-policies-report": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:declarative-policies-report/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "dedicated-host": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:dedicated-host/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:AutoPlacement",
     "ec2:AvailabilityZone",
     "ec2:HostRecovery",
     "ec2:InstanceType",
     "ec2:IsLaunchTemplateResource",
     "ec2:LaunchTemplate",
     "ec2:Quantity",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "dhcp-options": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:dhcp-options/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:DhcpOptionsID",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "egress-only-internet-gateway": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:egress-only-internet-gateway/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "elastic-gpu": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:elastic-gpu/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:ElasticGpuType",
     "ec2:IsLaunchTemplateResource",
     "ec2:LaunchTemplate",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "elastic-inference": {
    "ARNFormats": [
     "arn:${Partition}:elastic-inference:${Region}:${Account}:elastic-inference-accelerator/.*"
    ]
   },
   "elastic-ip": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:elastic-ip/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:AllocationId",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:Domain",
     "ec2:PublicIpAddress",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "export-image-task": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:export-image-task/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "export-instance-task": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:export-instance-task/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "fleet": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:fleet/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "fpga-image": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:fpga-image/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:Owner",
     "ec2:Public",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "group": {
    "ARNFormats": [
     "arn:${Partition}:resource-groups:${Region}:${Account}:group/.*"
    ]
   },
   "host-reservation": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:host-reservation/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "image": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}::image/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:ImageID",
     "ec2:ImageType",
     "ec2:IsLaunchTemplateResource",
     "ec2:LaunchTemplate",
     "ec2:Owner",
     "ec2:Public",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}",
     "ec2:RootDeviceType"
    ]
   },
   "import-image-task": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:import-image-task/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "import-snapshot-task": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:import-snapshot-task/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "instance": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:instance/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:AvailabilityZone",
     "ec2:CpuOptionsAmdSevSnp",
     "ec2:EbsOptimized",
     "ec2:InstanceAutoRecovery",
     "ec2:InstanceBandwidthWeighting",
     "ec2:InstanceID",
     "ec2:InstanceMarketType",
     "ec2:InstanceMetadataTags",
     "ec2:InstanceProfile",
     "ec2:InstanceType",
     "ec2:IsLaunchTemplateResource",
     "ec2:LaunchTemplate",
     "ec2:ManagedResourceOperator",
     "ec2:MetadataHttpEndpoint",
     "ec2:MetadataHttpPutResponseHopLimit",
     "ec2:MetadataHttpTokens",
     "ec2:NewInstanceProfile",
     "ec2:PlacementGroup",
     "ec2:ProductCode",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}",
     "ec2:RootDeviceType",
     "ec2:Tenancy"
    ]
   },
   "instance-connect-endpoint": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:instance-connect-endpoint/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}",
     "ec2:SubnetID"
    ]
   },
   "instance-event-window": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:instance-event-window/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "internet-gateway": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:internet-gateway/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:InternetGatewayID",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "ipam": {
    "ARNFormats": [
     "arn:${Partition}:ec2::${Account}:ipam/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "ipam-external-resource-verification-token": {
    "ARNFormats": [
     "arn:${Partition}:ec2::${Account}:ipam-external-resource-verification-token/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "ipam-pool": {
    "ARNFormats": [
     "arn:${Partition}:ec2::${Account}:ipam-pool/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "ipam-resource-discovery": {
    "ARNFormats": [
     "arn:${Partition}:ec2::${Account}:ipam-resource-discovery/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "ipam-resource-discovery-association": {
    "ARNFormats": [
     "arn:${Partition}:ec2::${Account}:ipam-resource-discovery-association/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "ipam-scope": {
    "ARNFormats": [
     "arn:${Partition}:ec2::${Account}:ipam-scope/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "ipv4pool-ec2": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:ipv4pool-ec2/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "ipv6pool-ec2": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:ipv6pool-ec2/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "key-pair": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:key-pair/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:IsLaunchTemplateResource",
     "ec2:KeyPairName",
     "ec2:KeyPairType",
     "ec2:LaunchTemplate",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "launch-template": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:launch-template/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:IsLaunchTemplateResource",
     "ec2:LaunchTemplate",
     "ec2:ManagedResourceOperator",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "license-configuration": {
    "ARNFormats": [
     "arn:${Partition}:license-manager:${Region}:${Account}:license-configuration:.*"
    ]
   },
   "local-gateway": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:local-gateway/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "local-gateway-route-table": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "local-gateway-route-table-virtual-interface-group-association": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table-virtual-interface-group-association/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "local-gateway-route-table-vpc-association": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table-vpc-association/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "local-gateway-virtual-interface": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-virtual-interface/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "local-gateway-virtual-interface-group": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-virtual-interface-group/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "natgateway": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:natgateway/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "network-acl": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:network-acl/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:NetworkAclID",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}",
     "ec2:Vpc"
    ]
   },
   "network-insights-access-scope": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:network-insights-access-scope/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "network-insights-access-scope-analysis": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:network-insights-access-scope-analysis/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "network-insights-analysis": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:network-insights-analysis/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "network-insights-path": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:network-insights-path/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "network-interface": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:network-interface/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:AssociatePublicIpAddress",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:AuthorizedService",
     "ec2:AuthorizedUser",
     "ec2:AvailabilityZone",
     "ec2:IsLaunchTemplateResource",
     "ec2:LaunchTemplate",
     "ec2:ManagedResourceOperator",
     "ec2:NetworkInterfaceID",
     "ec2:Permission",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}",
     "ec2:Subnet",
     "ec2:Vpc"
    ]
   },
   "placement-group": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:placement-group/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:IsLaunchTemplateResource",
     "ec2:LaunchTemplate",
     "ec2:PlacementGroupName",
     "ec2:PlacementGroupStrategy",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "prefix-list": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:prefix-list/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "replace-root-volume-task": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:replace-root-volume-task/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "reserved-instances": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:reserved-instances/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:AvailabilityZone",
     "ec2:InstanceType",
     "ec2:Region",
     "ec2:ReservedInstancesOfferingType",
     "ec2:ResourceTag/${TagKey}",
     "ec2:Tenancy"
    ]
   },
   "role": {
    "ARNFormats": [
     "arn:${Partition}:iam::${Account}:role/.*"
    ]
   },
   "route-table": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:route-table/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}",
     "ec2:RouteTableID",
     "ec2:Vpc"
    ]
   },
   "security-group": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:security-group/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:IsLaunchTemplateResource",
     "ec2:LaunchTemplate",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}",
     "ec2:SecurityGroupID",
     "ec2:Vpc"
    ]
   },
   "security-group-rule": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:security-group-rule/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "snapshot": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}::snapshot/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Add/group",
     "ec2:Add/userId",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:AvailabilityZone",
     "ec2:Encrypted",
     "ec2:IsLaunchTemplateResource",
     "ec2:LaunchTemplate",
     "ec2:Location",
     "ec2:OutpostArn",
     "ec2:Owner",
     "ec2:ParentVolume",
     "ec2:Region",
     "ec2:Remove/group",
     "ec2:Remove/userId",
     "ec2:ResourceTag/${TagKey}",
     "ec2:SnapshotCoolOffPeriod",
     "ec2:SnapshotID",
     "ec2:SnapshotLockDuration",
     "ec2:SnapshotTime",
     "ec2:SourceAvailabilityZone",
     "ec2:SourceOutpostArn",
     "ec2:VolumeSize"
    ]
   },
   "spot-fleet-request": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:spot-fleet-request/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "spot-instances-request": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:spot-instances-request/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "subnet": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:subnet/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:AvailabilityZone",
     "ec2:IsLaunchTemplateResource",
     "ec2:LaunchTemplate",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}",
     "ec2:SubnetID",
     "ec2:Vpc"
    ]
   },
   "subnet-cidr-reservation": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:subnet-cidr-reservation/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "traffic-mirror-filter": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-filter/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "traffic-mirror-filter-rule": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-filter-rule/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "traffic-mirror-session": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-session/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "traffic-mirror-target": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-target/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "transit-gateway": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}",
     "ec2:transitGatewayId"
    ]
   },
   "transit-gateway-attachment": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}",
     "ec2:transitGatewayAttachmentId"
    ]
   },
   "transit-gateway-connect-peer": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-connect-peer/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}",
     "ec2:transitGatewayConnectPeerId"
    ]
   },
   "transit-gateway-multicast-domain": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-multicast-domain/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}",
     "ec2:transitGatewayMulticastDomainId"
    ]
   },
   "transit-gateway-policy-table": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-policy-table/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}",
     "ec2:transitGatewayPolicyTableId"
    ]
   },
   "transit-gateway-route-table": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}",
     "ec2:transitGatewayRouteTableId"
    ]
   },
   "transit-gateway-route-table-announcement": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table-announcement/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}",
     "ec2:transitGatewayRouteTableAnnouncementId"
    ]
   },
   "verified-access-endpoint": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:verified-access-endpoint/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "verified-access-endpoint-target": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:verified-access-endpoint-target/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "verified-access-group": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:verified-access-group/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "verified-access-instance": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:verified-access-instance/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "verified-access-policy": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:verified-access-policy/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "verified-access-trust-provider": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:verified-access-trust-provider/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "volume": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:volume/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:AvailabilityZone",
     "ec2:Encrypted",
     "ec2:IsLaunchTemplateResource",
     "ec2:KmsKeyId",
     "ec2:LaunchTemplate",
     "ec2:ManagedResourceOperator",
     "ec2:ParentSnapshot",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}",
     "ec2:VolumeID",
     "ec2:VolumeIops",
     "ec2:VolumeSize",
     "ec2:VolumeThroughput",
     "ec2:VolumeType"
    ]
   },
   "vpc": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:vpc/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:Ipv4IpamPoolId",
     "ec2:Ipv6IpamPoolId",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}",
     "ec2:Tenancy",
     "ec2:VpcID"
    ]
   },
   "vpc-block-public-access-exclusion": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:vpc-block-public-access-exclusion/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "vpc-endpoint": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}",
     "ec2:VpceServiceName",
     "ec2:VpceServiceOwner"
    ]
   },
   "vpc-endpoint-connection": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-connection/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "vpc-endpoint-service": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-service/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}",
     "ec2:VpceServicePrivateDnsName",
     "ec2:vpceMultiRegion",
     "ec2:vpceServiceRegion",
     "ec2:vpceSupportedRegion"
    ]
   },
   "vpc-endpoint-service-permission": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-service-permission/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "vpc-flow-log": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:vpc-flow-log/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "vpc-peering-connection": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:vpc-peering-connection/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:AccepterVpc",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:Region",
     "ec2:RequesterVpc",
     "ec2:ResourceTag/${TagKey}",
     "ec2:VpcPeeringConnectionID"
    ]
   },
   "vpn-connection": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:vpn-connection/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Attribute",
     "ec2:Attribute/${AttributeName}",
     "ec2:AuthenticationType",
     "ec2:DPDTimeoutSeconds",
     "ec2:GatewayType",
     "ec2:IKEVersions",
     "ec2:InsideTunnelCidr",
     "ec2:InsideTunnelIpv6Cidr",
     "ec2:Phase1DHGroup",
     "ec2:Phase1EncryptionAlgorithms",
     "ec2:Phase1IntegrityAlgorithms",
     "ec2:Phase1LifetimeSeconds",
     "ec2:Phase2DHGroup",
     "ec2:Phase2EncryptionAlgorithms",
     "ec2:Phase2IntegrityAlgorithms",
     "ec2:Phase2LifetimeSeconds",
     "ec2:Region",
     "ec2:RekeyFuzzPercentage",
     "ec2:RekeyMarginTimeSeconds",
     "ec2:ReplayWindowSizePackets",
     "ec2:ResourceTag/${TagKey}",
     "ec2:RoutingType"
    ]
   },
   "vpn-connection-device-type": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:vpn-connection-device-type/.*"
    ],
    "ConditionKeys": [
     "ec2:Region"
    ]
   },
   "vpn-gateway": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:vpn-gateway/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "ec2:Region",
     "ec2:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "ec2-instance-connect": {
  "Actions": {
   "opentunnel": {
    "Resources": [
     "instance-connect-endpoint",
     "instance-connect-endpoint"
    ]
   },
   "sendserialconsolesshpublickey": {
    "Resources": [
     "instance"
    ]
   },
   "sendsshpublickey": {
    "Resources": [
     "instance"
    ]
   }
  },
  "Resources": {
   "instance": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "ec2:ResourceTag/${TagKey}"
    ]
   },
   "instance-connect-endpoint": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:instance-connect-endpoint/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "ec2:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "ec2messages": {
  "Actions": {
   "acknowledgemessage": {},
   "deletemessage": {},
   "failmessage": {},
   "getendpoint": {},
   "getmessages": {},
   "sendreply": {}
  },
  "Resources": {}
 },
 "ecr": {
  "Actions": {
   "batchchecklayeravailability": {
    "Resources": [
     "repository"
    ]
   },
   "batchdeleteimage": {
    "Resources": [
     "repository"
    ]
   },
   "batchgetimage": {
    "Resources": [
     "repository"
    ]
   },
   "batchgetrepositoryscanningconfiguration": {
    "Resources": [
     "repository"
    ]
   },
   "batchimportupstreamimage": {},
   "completelayerupload": {
    "Resources": [
     "repository"
    ]
   },
   "createpullthroughcacherule": {},
   "createrepository": {
    "Resources": [
     "repository"
    ]
   },
   "createrepositorycreationtemplate": {},
   "deletelifecyclepolicy": {
    "Resources": [
     "repository"
    ]
   },
   "deletepullthroughcacherule": {},
   "deleteregistrypolicy": {},
   "deleterepository": {
    "Resources": [
     "repository"
    ]
   },
   "deleterepositorycreationtemplate": {},
   "deleterepositorypolicy": {
    "Resources": [
     "repository"
    ]
   },
   "describeimagereplicationstatus": {
    "Resources": [
     "repository"
    ]
   },
   "describeimages": {
    "Resources": [
     "repository"
    ]
   },
   "describeimagescanfindings": {
    "Resources": [
     "repository"
    ]
   },
   "describepullthroughcacherules": {},
   "describeregistry": {},
   "describerepositories": {
    "Resources": [
     "repository"
    ]
   },
   "describerepositorycreationtemplates": {},
   "getaccountsetting": {},
   "getauthorizationtoken": {},
   "getdownloadurlforlayer": {
    "Resources": [
     "repository"
    ]
   },
   "getimagecopystatus": {},
   "getlifecyclepolicy": {
    "Resources": [
     "repository"
    ]
   },
   "getlifecyclepolicypreview": {
    "Resources": [
     "repository"
    ]
   },
   "getregistrypolicy": {},
   "getregistryscanningconfiguration": {},
   "getrepositorypolicy": {
    "Resources": [
     "repository"
    ]
   },
   "initiatelayerupload": {
    "Resources": [
     "repository"
    ]
   },
   "listimages": {
    "Resources": [
     "repository"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "repository"
    ]
   },
   "putaccountsetting": {},
   "putimage": {
    "Resources": [
     "repository"
    ]
   },
   "putimagescanningconfiguration": {
    "Resources": [
     "repository"
    ]
   },
   "putimagetagmutability": {
    "Resources": [
     "repository"
    ]
   },
   "putlifecyclepolicy": {
    "Resources": [
     "repository"
    ]
   },
   "putregistrypolicy": {},
   "putregistryscanningconfiguration": {},
   "putreplicationconfiguration": {},
   "replicateimage": {
    "Resources": [
     "repository"
    ]
   },
   "setrepositorypolicy": {
    "Resources": [
     "repository"
    ]
   },
   "startimagescan": {
    "Resources": [
     "repository"
    ]
   },
   "startlifecyclepolicypreview": {
    "Resources": [
     "repository"
    ]
   },
   "tagresource": {
    "Resources": [
     "repository"
    ]
   },
   "untagresource": {
    "Resources": [
     "repository"
    ]
   },
   "updatepullthroughcacherule": {},
   "updaterepositorycreationtemplate": {},
   "uploadlayerpart": {
    "Resources": [
     "repository"
    ]
   },
   "validatepullthroughcacherule": {}
  },
  "Resources": {
   "repository": {
    "ARNFormats": [
     "arn:${Partition}:ecr:${Region}:${Account}:repository/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "ecr:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "ecr-public": {
  "Actions": {
   "batchchecklayeravailability": {
    "Resources": [
     "repository"
    ]
   },
   "batchdeleteimage": {
    "Resources": [
     "repository"
    ]
   },
   "completelayerupload": {
    "Resources": [
     "repository"
    ]
   },
   "createrepository": {
    "Resources": [
     "repository"
    ]
   },
   "deleterepository": {
    "Resources": [
     "repository"
    ]
   },
   "deleterepositorypolicy": {
    "Resources": [
     "repository"
    ]
   },
   "describeimages": {
    "Resources": [
     "repository"
    ]
   },
   "describeimagetags": {
    "Resources": [
     "repository"
    ]
   },
   "describeregistries": {
    "Resources": [
     "registry"
    ]
   },
   "describerepositories": {
    "Resources": [
     "repository"
    ]
   },
   "getauthorizationtoken": {},
   "getregistrycatalogdata": {
    "Resources": [
     "registry"
    ]
   },
   "getrepositorycatalogdata": {
    "Resources": [
     "repository"
    ]
   },
   "getrepositorypolicy": {
    "Resources": [
     "repository"
    ]
   },
   "initiatelayerupload": {
    "Resources": [
     "repository"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "repository"
    ]
   },
   "putimage": {
    "Resources": [
     "repository"
    ]
   },
   "putregistrycatalogdata": {
    "Resources": [
     "registry"
    ]
   },
   "putrepositorycatalogdata": {
    "Resources": [
     "repository"
    ]
   },
   "setrepositorypolicy": {
    "Resources": [
     "repository"
    ]
   },
   "tagresource": {
    "Resources": [
     "repository"
    ]
   },
   "untagresource": {
    "Resources": [
     "repository"
    ]
   },
   "uploadlayerpart": {
    "Resources": [
     "repository"
    ]
   }
  },
  "Resources": {
   "registry": {
    "ARNFormats": [
     "arn:${Partition}:ecr-public::${Account}:registry/.*"
    ]
   },
   "repository": {
    "ARNFormats": [
     "arn:${Partition}:ecr-public::${Account}:repository/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "ecr-public:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "ecs": {
  "Actions": {
   "createcapacityprovider": {},
   "createcluster": {
    "Resources": [
     "cluster"
    ]
   },
   "createservice": {
    "Resources": [
     "service"
    ]
   },
   "createtaskset": {},
   "deleteaccountsetting": {},
   "deleteattributes": {
    "Resources": [
     "container-instance"
    ]
   },
   "deletecapacityprovider": {
    "Resources": [
     "capacity-provider"
    ]
   },
   "deletecluster": {
    "Resources": [
     "cluster"
    ]
   },
   "deleteservice": {
    "Resources": [
     "service"
    ]
   },
   "deletetaskdefinitions": {
    "Resources": [
     "task-definition"
    ]
   },
   "deletetaskset": {
    "Resources": [
     "task-set"
    ]
   },
   "deregistercontainerinstance": {
    "Resources": [
     "cluster"
    ]
   },
   "deregistertaskdefinition": {},
   "describecapacityproviders": {
    "Resources": [
     "capacity-provider"
    ]
   },
   "describeclusters": {
    "Resources": [
     "cluster"
    ]
   },
   "describecontainerinstances": {
    "Resources": [
     "container-instance"
    ]
   },
   "describeservicedeployments": {
    "Resources": [
     "service",
     "service-deployment"
    ]
   },
   "describeservicerevisions": {
    "Resources": [
     "service",
     "service-revision"
    ]
   },
   "describeservices": {
    "Resources": [
     "service"
    ]
   },
   "describetaskdefinition": {},
   "describetasks": {
    "Resources": [
     "task"
    ]
   },
   "describetasksets": {
    "Resources": [
     "task-set"
    ]
   },
   "discoverpollendpoint": {},
   "executecommand": {
    "Resources": [
     "cluster",
     "task"
    ]
   },
   "gettaskprotection": {
    "Resources": [
     "task"
    ]
   },
   "listaccountsettings": {},
   "listattributes": {
    "Resources": [
     "cluster"
    ]
   },
   "listclusters": {},
   "listcontainerinstances": {
    "Resources": [
     "cluster"
    ]
   },
   "listservicedeployments": {
    "Resources": [
     "service"
    ]
   },
   "listservices": {},
   "listservicesbynamespace": {},
   "listtagsforresource": {
    "Resources": [
     "capacity-provider",
     "cluster",
     "container-instance",
     "service",
     "task",
     "task-definition",
     "task-set"
    ]
   },
   "listtaskdefinitionfamilies": {},
   "listtaskdefinitions": {},
   "listtasks": {
    "Resources": [
     "container-instance"
    ]
   },
   "poll": {
    "Resources": [
     "container-instance"
    ]
   },
   "putaccountsetting": {},
   "putaccountsettingdefault": {},
   "putattributes": {
    "Resources": [
     "container-instance"
    ]
   },
   "putclustercapacityproviders": {
    "Resources": [
     "cluster"
    ]
   },
   "registercontainerinstance": {
    "Resources": [
     "cluster"
    ]
   },
   "registertaskdefinition": {
    "Resources": [
     "task-definition"
    ]
   },
   "runtask": {
    "Resources": [
     "task-definition"
    ]
   },
   "starttask": {
    "Resources": [
     "task-definition"
    ]
   },
   "starttelemetrysession": {
    "Resources": [
     "container-instance"
    ]
   },
   "stoptask": {
    "Resources": [
     "task"
    ]
   },
   "submitattachmentstatechanges": {
    "Resources": [
     "cluster"
    ]
   },
   "submitcontainerstatechange": {
    "Resources": [
     "cluster"
    ]
   },
   "submittaskstatechange": {
    "Resources": [
     "cluster"
    ]
   },
   "tagresource": {
    "Resources": [
     "capacity-provider",
     "cluster",
     "container-instance",
     "service",
     "task",
     "task-definition",
     "task-set"
    ]
   },
   "untagresource": {
    "Resources": [
     "capacity-provider",
     "cluster",
     "container-instance",
     "service",
     "task",
     "task-definition",
     "task-set"
    ]
   },
   "updatecapacityprovider": {
    "Resources": [
     "capacity-provider"
    ]
   },
   "updatecluster": {
    "Resources": [
     "cluster"
    ]
   },
   "updateclustersettings": {
    "Resources": [
     "cluster"
    ]
   },
   "updatecontaineragent": {
    "Resources": [
     "container-instance"
    ]
   },
   "updatecontainerinstancesstate": {
    "Resources": [
     "container-instance"
    ]
   },
   "updateservice": {
    "Resources": [
     "service"
    ]
   },
   "updateserviceprimarytaskset": {
    "Resources": [
     "service"
    ]
   },
   "updatetaskprotection": {
    "Resources": [
     "task"
    ]
   },
   "updatetaskset": {
    "Resources": [
     "task-set"
    ]
   }
  },
  "Resources": {
   "capacity-provider": {
    "ARNFormats": [
     "arn:${Partition}:ecs:${Region}:${Account}:capacity-provider/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "ecs:ResourceTag/${TagKey}"
    ]
   },
   "cluster": {
    "ARNFormats": [
     "arn:${Partition}:ecs:${Region}:${Account}:cluster/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "ecs:ResourceTag/${TagKey}"
    ]
   },
   "container-instance": {
    "ARNFormats": [
     "arn:${Partition}:ecs:${Region}:${Account}:container-instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "ecs:ResourceTag/${TagKey}"
    ]
   },
   "service": {
    "ARNFormats": [
     "arn:${Partition}:ecs:${Region}:${Account}:service/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "ecs:ResourceTag/${TagKey}"
    ]
   },
   "service-deployment": {
    "ARNFormats": [
     "arn:${Partition}:ecs:${Region}:${Account}:service-deployment/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "ecs:cluster",
     "ecs:service"
    ]
   },
   "service-revision": {
    "ARNFormats": [
     "arn:${Partition}:ecs:${Region}:${Account}:service-revision/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "ecs:cluster",
     "ecs:service"
    ]
   },
   "task": {
    "ARNFormats": [
     "arn:${Partition}:ecs:${Region}:${Account}:task/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "ecs:ResourceTag/${TagKey}"
    ]
   },
   "task-definition": {
    "ARNFormats": [
     "arn:${Partition}:ecs:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "ecs:ResourceTag/${TagKey}"
    ]
   },
   "task-set": {
    "ARNFormats": [
     "arn:${Partition}:ecs:${Region}:${Account}:task-set/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "ecs:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "eks": {
  "Actions": {
   "accesskubernetesapi": {
    "Resources": [
     "cluster"
    ]
   },
   "associateaccesspolicy": {
    "Resources": [
     "access-entry"
    ]
   },
   "associateencryptionconfig": {
    "Resources": [
     "cluster"
    ]
   },
   "associateidentityproviderconfig": {
    "Resources": [
     "cluster"
    ]
   },
   "createaccessentry": {
    "Resources": [
     "cluster"
    ]
   },
   "createaddon": {
    "Resources": [
     "cluster",
     "podidentityassociation"
    ]
   },
   "createcluster": {},
   "createeksanywheresubscription": {},
   "createfargateprofile": {
    "Resources": [
     "cluster"
    ]
   },
   "createnodegroup": {
    "Resources": [
     "cluster"
    ]
   },
   "createpodidentityassociation": {
    "Resources": [
     "cluster"
    ]
   },
   "deleteaccessentry": {
    "Resources": [
     "access-entry"
    ]
   },
   "deleteaddon": {
    "Resources": [
     "addon",
     "podidentityassociation"
    ]
   },
   "deletecluster": {
    "Resources": [
     "cluster"
    ]
   },
   "deleteeksanywheresubscription": {
    "Resources": [
     "eks-anywhere-subscription"
    ]
   },
   "deletefargateprofile": {
    "Resources": [
     "fargateprofile"
    ]
   },
   "deletenodegroup": {
    "Resources": [
     "nodegroup"
    ]
   },
   "deletepodidentityassociation": {
    "Resources": [
     "podidentityassociation"
    ]
   },
   "deregistercluster": {
    "Resources": [
     "cluster"
    ]
   },
   "describeaccessentry": {
    "Resources": [
     "access-entry"
    ]
   },
   "describeaddon": {
    "Resources": [
     "addon"
    ]
   },
   "describeaddonconfiguration": {},
   "describeaddonversions": {},
   "describecluster": {
    "Resources": [
     "cluster"
    ]
   },
   "describeclusterversions": {},
   "describeeksanywheresubscription": {
    "Resources": [
     "eks-anywhere-subscription"
    ]
   },
   "describefargateprofile": {
    "Resources": [
     "fargateprofile"
    ]
   },
   "describeidentityproviderconfig": {
    "Resources": [
     "identityproviderconfig"
    ]
   },
   "describeinsight": {
    "Resources": [
     "cluster"
    ]
   },
   "describenodegroup": {
    "Resources": [
     "nodegroup"
    ]
   },
   "describepodidentityassociation": {
    "Resources": [
     "podidentityassociation"
    ]
   },
   "describeupdate": {
    "Resources": [
     "addon",
     "cluster",
     "nodegroup"
    ]
   },
   "disassociateaccesspolicy": {
    "Resources": [
     "access-entry"
    ]
   },
   "disassociateidentityproviderconfig": {
    "Resources": [
     "identityproviderconfig"
    ]
   },
   "listaccessentries": {
    "Resources": [
     "cluster"
    ]
   },
   "listaccesspolicies": {},
   "listaddons": {
    "Resources": [
     "cluster"
    ]
   },
   "listassociatedaccesspolicies": {
    "Resources": [
     "access-entry"
    ]
   },
   "listclusters": {},
   "listeksanywheresubscriptions": {},
   "listfargateprofiles": {
    "Resources": [
     "cluster"
    ]
   },
   "listidentityproviderconfigs": {
    "Resources": [
     "cluster"
    ]
   },
   "listinsights": {
    "Resources": [
     "cluster"
    ]
   },
   "listnodegroups": {
    "Resources": [
     "cluster"
    ]
   },
   "listpodidentityassociations": {
    "Resources": [
     "cluster"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "addon",
     "cluster",
     "eks-anywhere-subscription",
     "fargateprofile",
     "identityproviderconfig",
     "nodegroup"
    ]
   },
   "listupdates": {
    "Resources": [
     "addon",
     "cluster",
     "nodegroup"
    ]
   },
   "registercluster": {},
   "tagresource": {
    "Resources": [
     "access-entry",
     "addon",
     "cluster",
     "eks-anywhere-subscription",
     "fargateprofile",
     "identityproviderconfig",
     "nodegroup",
     "podidentityassociation"
    ]
   },
   "untagresource": {
    "Resources": [
     "access-entry",
     "addon",
     "cluster",
     "eks-anywhere-subscription",
     "fargateprofile",
     "identityproviderconfig",
     "nodegroup",
     "podidentityassociation"
    ]
   },
   "updateaccessentry": {
    "Resources": [
     "access-entry"
    ]
   },
   "updateaddon": {
    "Resources": [
     "addon",
     "podidentityassociation"
    ]
   },
   "updateclusterconfig": {
    "Resources": [
     "cluster"
    ]
   },
   "updateclusterversion": {
    "Resources": [
     "cluster"
    ]
   },
   "updateeksanywheresubscription": {
    "Resources": [
     "eks-anywhere-subscription"
    ]
   },
   "updatenodegroupconfig": {
    "Resources": [
     "nodegroup"
    ]
   },
   "updatenodegroupversion": {
    "Resources": [
     "nodegroup"
    ]
   },
   "updatepodidentityassociation": {
    "Resources": [
     "podidentityassociation"
    ]
   }
  },
  "Resources": {
   "access-entry": {
    "ARNFormats": [
     "arn:${Partition}:eks:${Region}:${Account}:access-entry/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "eks:accessEntryType",
     "eks:clusterName",
     "eks:kubernetesGroups",
     "eks:principalArn",
     "eks:username"
    ]
   },
   "access-policy": {
    "ARNFormats": [
     "arn:${Partition}:eks::aws:cluster-access-policy/.*"
    ]
   },
   "addon": {
    "ARNFormats": [
     "arn:${Partition}:eks:${Region}:${Account}:addon/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "cluster": {
    "ARNFormats": [
     "arn:${Partition}:eks:${Region}:${Account}:cluster/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "eks-anywhere-subscription": {
    "ARNFormats": [
     "arn:${Partition}:eks:${Region}:${Account}:eks-anywhere-subscription/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "fargateprofile": {
    "ARNFormats": [
     "arn:${Partition}:eks:${Region}:${Account}:fargateprofile/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "identityproviderconfig": {
    "ARNFormats": [
     "arn:${Partition}:eks:${Region}:${Account}:identityproviderconfig/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "nodegroup": {
    "ARNFormats": [
     "arn:${Partition}:eks:${Region}:${Account}:nodegroup/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "podidentityassociation": {
    "ARNFormats": [
     "arn:${Partition}:eks:${Region}:${Account}:podidentityassociation/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "eks-auth": {
  "Actions": {
   "assumeroleforpodidentity": {
    "Resources": [
     "cluster"
    ]
   }
  },
  "Resources": {
   "cluster": {
    "ARNFormats": [
     "arn:${Partition}:eks:${Region}:${Account}:cluster/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "elasticache": {
  "Actions": {
   "addtagstoresource": {
    "Resources": [
     "cluster",
     "parametergroup",
     "replicationgroup",
     "reserved-instance",
     "securitygroup",
     "serverlesscache",
     "serverlesscachesnapshot",
     "snapshot",
     "subnetgroup",
     "user",
     "usergroup"
    ]
   },
   "authorizecachesecuritygroupingress": {
    "Resources": [
     "securitygroup"
    ]
   },
   "batchapplyupdateaction": {
    "Resources": [
     "cluster",
     "replicationgroup"
    ]
   },
   "batchstopupdateaction": {
    "Resources": [
     "cluster",
     "replicationgroup"
    ]
   },
   "completemigration": {
    "Resources": [
     "cluster",
     "replicationgroup"
    ]
   },
   "connect": {
    "Resources": [
     "replicationgroup",
     "serverlesscache",
     "user"
    ]
   },
   "copyserverlesscachesnapshot": {
    "Resources": [
     "serverlesscachesnapshot"
    ]
   },
   "copysnapshot": {
    "Resources": [
     "snapshot"
    ]
   },
   "createcachecluster": {
    "Resources": [
     "cluster",
     "parametergroup",
     "replicationgroup",
     "securitygroup",
     "snapshot",
     "subnetgroup"
    ]
   },
   "createcacheparametergroup": {
    "Resources": [
     "parametergroup"
    ]
   },
   "createcachesecuritygroup": {
    "Resources": [
     "securitygroup"
    ]
   },
   "createcachesubnetgroup": {
    "Resources": [
     "subnetgroup"
    ]
   },
   "createglobalreplicationgroup": {
    "Resources": [
     "globalreplicationgroup",
     "replicationgroup"
    ]
   },
   "createreplicationgroup": {
    "Resources": [
     "cluster",
     "globalreplicationgroup",
     "parametergroup",
     "replicationgroup",
     "securitygroup",
     "snapshot",
     "subnetgroup",
     "usergroup"
    ]
   },
   "createserverlesscache": {
    "Resources": [
     "serverlesscache",
     "serverlesscachesnapshot",
     "snapshot",
     "usergroup"
    ]
   },
   "createserverlesscachesnapshot": {
    "Resources": [
     "serverlesscache",
     "serverlesscachesnapshot"
    ]
   },
   "createsnapshot": {
    "Resources": [
     "cluster",
     "replicationgroup",
     "snapshot"
    ]
   },
   "createuser": {
    "Resources": [
     "user"
    ]
   },
   "createusergroup": {
    "Resources": [
     "user",
     "usergroup"
    ]
   },
   "decreasenodegroupsinglobalreplicationgroup": {
    "Resources": [
     "globalreplicationgroup"
    ]
   },
   "decreasereplicacount": {
    "Resources": [
     "replicationgroup"
    ]
   },
   "deletecachecluster": {
    "Resources": [
     "cluster",
     "snapshot"
    ]
   },
   "deletecacheparametergroup": {
    "Resources": [
     "parametergroup"
    ]
   },
   "deletecachesecuritygroup": {
    "Resources": [
     "securitygroup"
    ]
   },
   "deletecachesubnetgroup": {
    "Resources": [
     "subnetgroup"
    ]
   },
   "deleteglobalreplicationgroup": {
    "Resources": [
     "globalreplicationgroup"
    ]
   },
   "deletereplicationgroup": {
    "Resources": [
     "replicationgroup",
     "snapshot"
    ]
   },
   "deleteserverlesscache": {
    "Resources": [
     "serverlesscache",
     "serverlesscachesnapshot"
    ]
   },
   "deleteserverlesscachesnapshot": {
    "Resources": [
     "serverlesscachesnapshot"
    ]
   },
   "deletesnapshot": {
    "Resources": [
     "snapshot"
    ]
   },
   "deleteuser": {
    "Resources": [
     "user"
    ]
   },
   "deleteusergroup": {
    "Resources": [
     "usergroup"
    ]
   },
   "describecacheclusters": {
    "Resources": [
     "cluster"
    ]
   },
   "describecacheengineversions": {},
   "describecacheparametergroups": {
    "Resources": [
     "parametergroup"
    ]
   },
   "describecacheparameters": {
    "Resources": [
     "parametergroup"
    ]
   },
   "describecachesecuritygroups": {
    "Resources": [
     "securitygroup"
    ]
   },
   "describecachesubnetgroups": {
    "Resources": [
     "subnetgroup"
    ]
   },
   "describeenginedefaultparameters": {},
   "describeevents": {},
   "describeglobalreplicationgroups": {
    "Resources": [
     "globalreplicationgroup"
    ]
   },
   "describereplicationgroups": {
    "Resources": [
     "replicationgroup"
    ]
   },
   "describereservedcachenodes": {
    "Resources": [
     "reserved-instance"
    ]
   },
   "describereservedcachenodesofferings": {},
   "describeserverlesscaches": {
    "Resources": [
     "serverlesscache"
    ]
   },
   "describeserverlesscachesnapshots": {
    "Resources": [
     "serverlesscache",
     "serverlesscachesnapshot"
    ]
   },
   "describeserviceupdates": {},
   "describesnapshots": {
    "Resources": [
     "snapshot"
    ]
   },
   "describeupdateactions": {
    "Resources": [
     "cluster",
     "replicationgroup"
    ]
   },
   "describeusergroups": {
    "Resources": [
     "usergroup"
    ]
   },
   "describeusers": {
    "Resources": [
     "user"
    ]
   },
   "disassociateglobalreplicationgroup": {
    "Resources": [
     "globalreplicationgroup"
    ]
   },
   "exportserverlesscachesnapshot": {
    "Resources": [
     "serverlesscachesnapshot"
    ]
   },
   "failoverglobalreplicationgroup": {
    "Resources": [
     "globalreplicationgroup"
    ]
   },
   "increasenodegroupsinglobalreplicationgroup": {
    "Resources": [
     "globalreplicationgroup"
    ]
   },
   "increasereplicacount": {
    "Resources": [
     "replicationgroup"
    ]
   },
   "interruptclusterazpower": {
    "Resources": [
     "replicationgroup"
    ]
   },
   "listallowednodetypemodifications": {
    "Resources": [
     "cluster",
     "replicationgroup"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "cluster",
     "parametergroup",
     "replicationgroup",
     "reserved-instance",
     "securitygroup",
     "serverlesscache",
     "serverlesscachesnapshot",
     "snapshot",
     "subnetgroup",
     "user",
     "usergroup"
    ]
   },
   "modifycachecluster": {
    "Resources": [
     "cluster",
     "parametergroup",
     "securitygroup"
    ]
   },
   "modifycacheparametergroup": {
    "Resources": [
     "parametergroup"
    ]
   },
   "modifycachesubnetgroup": {
    "Resources": [
     "subnetgroup"
    ]
   },
   "modifyglobalreplicationgroup": {
    "Resources": [
     "globalreplicationgroup"
    ]
   },
   "modifyreplicationgroup": {
    "Resources": [
     "parametergroup",
     "replicationgroup",
     "securitygroup",
     "usergroup"
    ]
   },
   "modifyreplicationgroupshardconfiguration": {
    "Resources": [
     "replicationgroup"
    ]
   },
   "modifyserverlesscache": {
    "Resources": [
     "serverlesscache",
     "usergroup"
    ]
   },
   "modifyuser": {
    "Resources": [
     "user"
    ]
   },
   "modifyusergroup": {
    "Resources": [
     "user",
     "usergroup"
    ]
   },
   "purchasereservedcachenodesoffering": {
    "Resources": [
     "reserved-instance"
    ]
   },
   "rebalanceslotsinglobalreplicationgroup": {
    "Resources": [
     "globalreplicationgroup"
    ]
   },
   "rebootcachecluster": {
    "Resources": [
     "cluster"
    ]
   },
   "removetagsfromresource": {
    "Resources": [
     "cluster",
     "parametergroup",
     "replicationgroup",
     "reserved-instance",
     "securitygroup",
     "serverlesscache",
     "serverlesscachesnapshot",
     "snapshot",
     "subnetgroup",
     "user",
     "usergroup"
    ]
   },
   "resetcacheparametergroup": {
    "Resources": [
     "parametergroup"
    ]
   },
   "revokecachesecuritygroupingress": {
    "Resources": [
     "securitygroup"
    ]
   },
   "startmigration": {
    "Resources": [
     "replicationgroup"
    ]
   },
   "testfailover": {
    "Resources": [
     "replicationgroup"
    ]
   },
   "testmigration": {
    "Resources": [
     "replicationgroup"
    ]
   }
  },
  "Resources": {
   "cluster": {
    "ARNFormats": [
     "arn:${Partition}:elasticache:${Region}:${Account}:cluster:.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "elasticache:AuthTokenEnabled",
     "elasticache:CacheNodeType",
     "elasticache:CacheParameterGroupName",
     "elasticache:EngineType",
     "elasticache:EngineVersion",
     "elasticache:MultiAZEnabled",
     "elasticache:SnapshotRetentionLimit"
    ]
   },
   "globalreplicationgroup": {
    "ARNFormats": [
     "arn:${Partition}:elasticache::${Account}:globalreplicationgroup:.*"
    ],
    "ConditionKeys": [
     "elasticache:AtRestEncryptionEnabled",
     "elasticache:AuthTokenEnabled",
     "elasticache:AutomaticFailoverEnabled",
     "elasticache:CacheNodeType",
     "elasticache:CacheParameterGroupName",
     "elasticache:ClusterModeEnabled",
     "elasticache:EngineType",
     "elasticache:EngineVersion",
     "elasticache:KmsKeyId",
     "elasticache:MultiAZEnabled",
     "elasticache:NumNodeGroups",
     "elasticache:ReplicasPerNodeGroup",
     "elasticache:SnapshotRetentionLimit",
     "elasticache:TransitEncryptionEnabled"
    ]
   },
   "parametergroup": {
    "ARNFormats": [
     "arn:${Partition}:elasticache:${Region}:${Account}:parametergroup:.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "elasticache:CacheParameterGroupName"
    ]
   },
   "replicationgroup": {
    "ARNFormats": [
     "arn:${Partition}:elasticache:${Region}:${Account}:replicationgroup:.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "elasticache:AtRestEncryptionEnabled",
     "elasticache:AuthTokenEnabled",
     "elasticache:AutomaticFailoverEnabled",
     "elasticache:CacheNodeType",
     "elasticache:CacheParameterGroupName",
     "elasticache:ClusterModeEnabled",
     "elasticache:EngineType",
     "elasticache:EngineVersion",
     "elasticache:KmsKeyId",
     "elasticache:MultiAZEnabled",
     "elasticache:NumNodeGroups",
     "elasticache:ReplicasPerNodeGroup",
     "elasticache:SnapshotRetentionLimit",
     "elasticache:TransitEncryptionEnabled"
    ]
   },
   "reserved-instance": {
    "ARNFormats": [
     "arn:${Partition}:elasticache:${Region}:${Account}:reserved-instance:.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys"
    ]
   },
   "securitygroup": {
    "ARNFormats": [
     "arn:${Partition}:elasticache:${Region}:${Account}:securitygroup:.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys"
    ]
   },
   "serverlesscache": {
    "ARNFormats": [
     "arn:${Partition}:elasticache:${Region}:${Account}:serverlesscache:.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "elasticache:DataStorageUnit",
     "elasticache:EngineType",
     "elasticache:EngineVersion",
     "elasticache:KmsKeyId",
     "elasticache:MaximumDataStorage",
     "elasticache:MaximumECPUPerSecond",
     "elasticache:MinimumDataStorage",
     "elasticache:MinimumECPUPerSecond",
     "elasticache:SnapshotRetentionLimit"
    ]
   },
   "serverlesscachesnapshot": {
    "ARNFormats": [
     "arn:${Partition}:elasticache:${Region}:${Account}:serverlesscachesnapshot:.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "elasticache:KmsKeyId"
    ]
   },
   "snapshot": {
    "ARNFormats": [
     "arn:${Partition}:elasticache:${Region}:${Account}:snapshot:.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "elasticache:KmsKeyId"
    ]
   },
   "subnetgroup": {
    "ARNFormats": [
     "arn:${Partition}:elasticache:${Region}:${Account}:subnetgroup:.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys"
    ]
   },
   "user": {
    "ARNFormats": [
     "arn:${Partition}:elasticache:${Region}:${Account}:user:.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "elasticache:UserAuthenticationMode"
    ]
   },
   "usergroup": {
    "ARNFormats": [
     "arn:${Partition}:elasticache:${Region}:${Account}:usergroup:.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys"
    ]
   }
  }
 },
 "elasticbeanstalk": {
  "Actions": {
   "abortenvironmentupdate": {
    "Resources": [
     "environment"
    ]
   },
   "addtags": {
    "Resources": [
     "application",
     "applicationversion",
     "configurationtemplate",
     "environment",
     "platform"
    ]
   },
   "applyenvironmentmanagedaction": {
    "Resources": [
     "environment"
    ]
   },
   "associateenvironmentoperationsrole": {
    "Resources": [
     "environment"
    ]
   },
   "checkdnsavailability": {},
   "composeenvironments": {
    "Resources": [
     "application",
     "applicationversion"
    ]
   },
   "createapplication": {
    "Resources": [
     "application"
    ]
   },
   "createapplicationversion": {
    "Resources": [
     "application",
     "applicationversion"
    ]
   },
   "createconfigurationtemplate": {
    "Resources": [
     "configurationtemplate"
    ]
   },
   "createenvironment": {
    "Resources": [
     "environment"
    ]
   },
   "createplatformversion": {
    "Resources": [
     "platform"
    ]
   },
   "createstoragelocation": {},
   "deleteapplication": {
    "Resources": [
     "application"
    ]
   },
   "deleteapplicationversion": {
    "Resources": [
     "applicationversion"
    ]
   },
   "deleteconfigurationtemplate": {
    "Resources": [
     "configurationtemplate"
    ]
   },
   "deleteenvironmentconfiguration": {
    "Resources": [
     "environment"
    ]
   },
   "deleteplatformversion": {
    "Resources": [
     "platform"
    ]
   },
   "describeaccountattributes": {},
   "describeapplications": {
    "Resources": [
     "application"
    ]
   },
   "describeapplicationversions": {
    "Resources": [
     "applicationversion"
    ]
   },
   "describeconfigurationoptions": {
    "Resources": [
     "configurationtemplate",
     "environment",
     "solutionstack"
    ]
   },
   "describeconfigurationsettings": {
    "Resources": [
     "configurationtemplate",
     "environment"
    ]
   },
   "describeenvironmenthealth": {
    "Resources": [
     "environment"
    ]
   },
   "describeenvironmentmanagedactionhistory": {
    "Resources": [
     "environment"
    ]
   },
   "describeenvironmentmanagedactions": {
    "Resources": [
     "environment"
    ]
   },
   "describeenvironmentresources": {
    "Resources": [
     "environment"
    ]
   },
   "describeenvironments": {
    "Resources": [
     "environment"
    ]
   },
   "describeevents": {
    "Resources": [
     "application",
     "applicationversion",
     "configurationtemplate",
     "environment"
    ]
   },
   "describeinstanceshealth": {
    "Resources": [
     "environment"
    ]
   },
   "describeplatformversion": {
    "Resources": [
     "platform"
    ]
   },
   "disassociateenvironmentoperationsrole": {
    "Resources": [
     "environment"
    ]
   },
   "listavailablesolutionstacks": {
    "Resources": [
     "solutionstack"
    ]
   },
   "listplatformbranches": {},
   "listplatformversions": {
    "Resources": [
     "platform"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "application",
     "applicationversion",
     "configurationtemplate",
     "environment",
     "platform"
    ]
   },
   "putinstancestatistics": {
    "Resources": [
     "application",
     "environment"
    ]
   },
   "rebuildenvironment": {
    "Resources": [
     "environment"
    ]
   },
   "removetags": {
    "Resources": [
     "application",
     "applicationversion",
     "configurationtemplate",
     "environment",
     "platform"
    ]
   },
   "requestenvironmentinfo": {
    "Resources": [
     "environment"
    ]
   },
   "restartappserver": {
    "Resources": [
     "environment"
    ]
   },
   "retrieveenvironmentinfo": {
    "Resources": [
     "environment"
    ]
   },
   "swapenvironmentcnames": {
    "Resources": [
     "environment"
    ]
   },
   "terminateenvironment": {
    "Resources": [
     "environment"
    ]
   },
   "updateapplication": {
    "Resources": [
     "application"
    ]
   },
   "updateapplicationresourcelifecycle": {
    "Resources": [
     "application"
    ]
   },
   "updateapplicationversion": {
    "Resources": [
     "applicationversion"
    ]
   },
   "updateconfigurationtemplate": {
    "Resources": [
     "configurationtemplate"
    ]
   },
   "updateenvironment": {
    "Resources": [
     "environment"
    ]
   },
   "updatetagsforresource": {
    "Resources": [
     "application",
     "applicationversion",
     "configurationtemplate",
     "environment",
     "platform"
    ]
   },
   "validateconfigurationsettings": {
    "Resources": [
     "configurationtemplate",
     "environment"
    ]
   }
  },
  "Resources": {
   "application": {
    "ARNFormats": [
     "arn:${Partition}:elasticbeanstalk:${Region}:${Account}:application/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "applicationversion": {
    "ARNFormats": [
     "arn:${Partition}:elasticbeanstalk:${Region}:${Account}:applicationversion/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "elasticbeanstalk:InApplication"
    ]
   },
   "configurationtemplate": {
    "ARNFormats": [
     "arn:${Partition}:elasticbeanstalk:${Region}:${Account}:configurationtemplate/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "elasticbeanstalk:InApplication"
    ]
   },
   "environment": {
    "ARNFormats": [
     "arn:${Partition}:elasticbeanstalk:${Region}:${Account}:environment/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "elasticbeanstalk:InApplication"
    ]
   },
   "platform": {
    "ARNFormats": [
     "arn:${Partition}:elasticbeanstalk:${Region}::platform/.*"
    ]
   },
   "solutionstack": {
    "ARNFormats": [
     "arn:${Partition}:elasticbeanstalk:${Region}::solutionstack/.*"
    ]
   }
  }
 },
 "elasticfilesystem": {
  "Actions": {
   "backup": {
    "Resources": [
     "file-system"
    ]
   },
   "clientmount": {
    "Resources": [
     "file-system"
    ]
   },
   "clientrootaccess": {
    "Resources": [
     "file-system"
    ]
   },
   "clientwrite": {
    "Resources": [
     "file-system"
    ]
   },
   "createaccesspoint": {
    "Resources": [
     "file-system"
    ]
   },
   "createfilesystem": {},
   "createmounttarget": {
    "Resources": [
     "file-system"
    ]
   },
   "createreplicationconfiguration": {
    "Resources": [
     "file-system"
    ]
   },
   "createtags": {
    "Resources": [
     "file-system"
    ]
   },
   "deleteaccesspoint": {
    "Resources": [
     "access-point"
    ]
   },
   "deletefilesystem": {
    "Resources": [
     "file-system"
    ]
   },
   "deletefilesystempolicy": {
    "Resources": [
     "file-system"
    ]
   },
   "deletemounttarget": {
    "Resources": [
     "file-system"
    ]
   },
   "deletereplicationconfiguration": {
    "Resources": [
     "file-system"
    ]
   },
   "deletetags": {
    "Resources": [
     "file-system"
    ]
   },
   "describeaccesspoints": {
    "Resources": [
     "access-point",
     "file-system"
    ]
   },
   "describeaccountpreferences": {},
   "describebackuppolicy": {
    "Resources": [
     "file-system"
    ]
   },
   "describefilesystempolicy": {
    "Resources": [
     "file-system"
    ]
   },
   "describefilesystems": {
    "Resources": [
     "file-system"
    ]
   },
   "describelifecycleconfiguration": {
    "Resources": [
     "file-system"
    ]
   },
   "describemounttargets": {
    "Resources": [
     "access-point",
     "file-system"
    ]
   },
   "describemounttargetsecuritygroups": {
    "Resources": [
     "file-system"
    ]
   },
   "describereplicationconfigurations": {
    "Resources": [
     "file-system"
    ]
   },
   "describetags": {
    "Resources": [
     "file-system"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "access-point",
     "file-system"
    ]
   },
   "modifymounttargetsecuritygroups": {
    "Resources": [
     "file-system"
    ]
   },
   "putaccountpreferences": {},
   "putbackuppolicy": {
    "Resources": [
     "file-system"
    ]
   },
   "putfilesystempolicy": {
    "Resources": [
     "file-system"
    ]
   },
   "putlifecycleconfiguration": {
    "Resources": [
     "file-system"
    ]
   },
   "replicationread": {
    "Resources": [
     "file-system"
    ]
   },
   "replicationwrite": {
    "Resources": [
     "file-system"
    ]
   },
   "restore": {
    "Resources": [
     "file-system"
    ]
   },
   "tagresource": {
    "Resources": [
     "access-point",
     "file-system"
    ]
   },
   "untagresource": {
    "Resources": [
     "access-point",
     "file-system"
    ]
   },
   "updatefilesystem": {
    "Resources": [
     "file-system"
    ]
   },
   "updatefilesystemprotection": {
    "Resources": [
     "file-system"
    ]
   }
  },
  "Resources": {
   "access-point": {
    "ARNFormats": [
     "arn:${Partition}:elasticfilesystem:${Region}:${Account}:access-point/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "file-system": {
    "ARNFormats": [
     "arn:${Partition}:elasticfilesystem:${Region}:${Account}:file-system/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "elasticloadbalancing": {
  "Actions": {
   "addlistenercertificates": {
    "Resources": [
     "listener/app",
     "listener/net"
    ]
   },
   "addtags": {
    "Resources": [
     "listener-rule/app",
     "listener-rule/net",
     "listener/app",
     "listener/net",
     "loadbalancer",
     "loadbalancer/app/",
     "loadbalancer/net/",
     "targetgroup",
     "truststore"
    ]
   },
   "addtruststorerevocations": {
    "Resources": [
     "truststore"
    ]
   },
   "applysecuritygroupstoloadbalancer": {
    "Resources": [
     "loadbalancer"
    ]
   },
   "attachloadbalancertosubnets": {
    "Resources": [
     "loadbalancer"
    ]
   },
   "configurehealthcheck": {
    "Resources": [
     "loadbalancer"
    ]
   },
   "createappcookiestickinesspolicy": {
    "Resources": [
     "loadbalancer"
    ]
   },
   "createlbcookiestickinesspolicy": {
    "Resources": [
     "loadbalancer"
    ]
   },
   "createlistener": {
    "Resources": [
     "loadbalancer/app/",
     "loadbalancer/net/"
    ]
   },
   "createloadbalancer": {
    "Resources": [
     "loadbalancer",
     "loadbalancer/app/",
     "loadbalancer/net/"
    ]
   },
   "createloadbalancerlisteners": {
    "Resources": [
     "loadbalancer"
    ]
   },
   "createloadbalancerpolicy": {
    "Resources": [
     "loadbalancer"
    ]
   },
   "createrule": {
    "Resources": [
     "listener/app",
     "listener/net"
    ]
   },
   "createtargetgroup": {
    "Resources": [
     "targetgroup"
    ]
   },
   "createtruststore": {
    "Resources": [
     "truststore"
    ]
   },
   "deletelistener": {
    "Resources": [
     "listener/app",
     "listener/net"
    ]
   },
   "deleteloadbalancer": {
    "Resources": [
     "loadbalancer",
     "loadbalancer/app/",
     "loadbalancer/net/"
    ]
   },
   "deleteloadbalancerlisteners": {
    "Resources": [
     "loadbalancer"
    ]
   },
   "deleteloadbalancerpolicy": {
    "Resources": [
     "loadbalancer"
    ]
   },
   "deleterule": {
    "Resources": [
     "listener-rule/app",
     "listener-rule/net"
    ]
   },
   "deletesharedtruststoreassociation": {
    "Resources": [
     "truststore"
    ]
   },
   "deletetargetgroup": {
    "Resources": [
     "targetgroup"
    ]
   },
   "deletetruststore": {
    "Resources": [
     "truststore"
    ]
   },
   "deregisterinstancesfromloadbalancer": {
    "Resources": [
     "loadbalancer"
    ]
   },
   "deregistertargets": {
    "Resources": [
     "targetgroup"
    ]
   },
   "describeaccountlimits": {},
   "describecapacityreservation": {},
   "describeinstancehealth": {},
   "describelistenerattributes": {},
   "describelistenercertificates": {},
   "describelisteners": {},
   "describeloadbalancerattributes": {},
   "describeloadbalancerpolicies": {},
   "describeloadbalancerpolicytypes": {},
   "describeloadbalancers": {},
   "describerules": {},
   "describesslpolicies": {},
   "describetags": {},
   "describetargetgroupattributes": {},
   "describetargetgroups": {},
   "describetargethealth": {},
   "describetruststoreassociations": {},
   "describetruststorerevocations": {},
   "describetruststores": {},
   "detachloadbalancerfromsubnets": {
    "Resources": [
     "loadbalancer"
    ]
   },
   "disableavailabilityzonesforloadbalancer": {
    "Resources": [
     "loadbalancer"
    ]
   },
   "enableavailabilityzonesforloadbalancer": {
    "Resources": [
     "loadbalancer"
    ]
   },
   "getresourcepolicy": {
    "Resources": [
     "truststore"
    ]
   },
   "gettruststorecacertificatesbundle": {
    "Resources": [
     "truststore"
    ]
   },
   "gettruststorerevocationcontent": {
    "Resources": [
     "truststore"
    ]
   },
   "modifycapacityreservation": {
    "Resources": [
     "loadbalancer/app/",
     "loadbalancer/net/"
    ]
   },
   "modifyippools": {
    "Resources": [
     "loadbalancer/app/"
    ]
   },
   "modifylistener": {
    "Resources": [
     "listener/app",
     "listener/net"
    ]
   },
   "modifylistenerattributes": {
    "Resources": [
     "listener/app",
     "listener/net"
    ]
   },
   "modifyloadbalancerattributes": {
    "Resources": [
     "loadbalancer",
     "loadbalancer/app/",
     "loadbalancer/net/"
    ]
   },
   "modifyrule": {
    "Resources": [
     "listener-rule/app",
     "listener-rule/net"
    ]
   },
   "modifytargetgroup": {
    "Resources": [
     "targetgroup"
    ]
   },
   "modifytargetgroupattributes": {
    "Resources": [
     "targetgroup"
    ]
   },
   "modifytruststore": {
    "Resources": [
     "truststore"
    ]
   },
   "registerinstanceswithloadbalancer": {
    "Resources": [
     "loadbalancer"
    ]
   },
   "registertargets": {
    "Resources": [
     "targetgroup"
    ]
   },
   "removelistenercertificates": {
    "Resources": [
     "listener/app",
     "listener/net"
    ]
   },
   "removetags": {
    "Resources": [
     "listener-rule/app",
     "listener-rule/net",
     "listener/app",
     "listener/net",
     "loadbalancer",
     "loadbalancer/app/",
     "loadbalancer/net/",
     "targetgroup",
     "truststore"
    ]
   },
   "removetruststorerevocations": {
    "Resources": [
     "truststore"
    ]
   },
   "setipaddresstype": {
    "Resources": [
     "loadbalancer/app/",
     "loadbalancer/net/"
    ]
   },
   "setloadbalancerlistenersslcertificate": {
    "Resources": [
     "loadbalancer"
    ]
   },
   "setloadbalancerpoliciesforbackendserver": {
    "Resources": [
     "loadbalancer"
    ]
   },
   "setloadbalancerpoliciesoflistener": {
    "Resources": [
     "loadbalancer"
    ]
   },
   "setrulepriorities": {
    "Resources": [
     "listener-rule/app",
     "listener-rule/net"
    ]
   },
   "setsecuritygroups": {
    "Resources": [
     "loadbalancer/app/",
     "loadbalancer/net/"
    ]
   },
   "setsubnets": {
    "Resources": [
     "loadbalancer/app/",
     "loadbalancer/net/"
    ]
   },
   "setwebacl": {}
  },
  "Resources": {
   "listener-rule/app": {
    "ARNFormats": [
     "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:listener-rule/app/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "elasticloadbalancing:ResourceTag/${TagKey}"
    ]
   },
   "listener-rule/net": {
    "ARNFormats": [
     "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:listener-rule/net/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "elasticloadbalancing:ResourceTag/${TagKey}"
    ]
   },
   "listener/app": {
    "ARNFormats": [
     "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:listener/app/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "elasticloadbalancing:ResourceTag/${TagKey}"
    ]
   },
   "listener/net": {
    "ARNFormats": [
     "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:listener/net/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "elasticloadbalancing:ResourceTag/${TagKey}"
    ]
   },
   "loadbalancer": {
    "ARNFormats": [
     "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:loadbalancer/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "elasticloadbalancing:ResourceTag/${TagKey}"
    ]
   },
   "loadbalancer/app/": {
    "ARNFormats": [
     "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:loadbalancer/app/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "elasticloadbalancing:ResourceTag/${TagKey}"
    ]
   },
   "loadbalancer/net/": {
    "ARNFormats": [
     "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:loadbalancer/net/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "elasticloadbalancing:ResourceTag/${TagKey}"
    ]
   },
   "targetgroup": {
    "ARNFormats": [
     "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:targetgroup/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "elasticloadbalancing:ResourceTag/${TagKey}"
    ]
   },
   "truststore": {
    "ARNFormats": [
     "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:truststore/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "elasticloadbalancing:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "elasticmapreduce": {
  "Actions": {
   "addinstancefleet": {
    "Resources": [
     "cluster"
    ]
   },
   "addinstancegroups": {
    "Resources": [
     "cluster"
    ]
   },
   "addjobflowsteps": {
    "Resources": [
     "cluster"
    ]
   },
   "addtags": {
    "Resources": [
     "cluster",
     "editor",
     "notebook-execution",
     "studio"
    ]
   },
   "attacheditor": {
    "Resources": [
     "editor"
    ]
   },
   "cancelsteps": {
    "Resources": [
     "cluster"
    ]
   },
   "createeditor": {
    "Resources": [
     "cluster"
    ]
   },
   "createpersistentappui": {
    "Resources": [
     "cluster"
    ]
   },
   "createrepository": {},
   "createsecurityconfiguration": {},
   "createstudio": {},
   "createstudiopresignedurl": {
    "Resources": [
     "studio"
    ]
   },
   "createstudiosessionmapping": {
    "Resources": [
     "studio"
    ]
   },
   "deleteeditor": {
    "Resources": [
     "editor"
    ]
   },
   "deleterepository": {},
   "deletesecurityconfiguration": {},
   "deletestudio": {
    "Resources": [
     "studio"
    ]
   },
   "deletestudiosessionmapping": {
    "Resources": [
     "studio"
    ]
   },
   "deleteworkspaceaccess": {
    "Resources": [
     "editor"
    ]
   },
   "describecluster": {
    "Resources": [
     "cluster"
    ]
   },
   "describeeditor": {
    "Resources": [
     "editor"
    ]
   },
   "describejobflows": {
    "Resources": [
     "cluster"
    ]
   },
   "describenotebookexecution": {
    "Resources": [
     "notebook-execution"
    ]
   },
   "describepersistentappui": {
    "Resources": [
     "cluster"
    ]
   },
   "describereleaselabel": {},
   "describerepository": {},
   "describesecurityconfiguration": {},
   "describestep": {
    "Resources": [
     "cluster"
    ]
   },
   "describestudio": {
    "Resources": [
     "studio"
    ]
   },
   "detacheditor": {
    "Resources": [
     "editor"
    ]
   },
   "getautoterminationpolicy": {
    "Resources": [
     "cluster"
    ]
   },
   "getblockpublicaccessconfiguration": {},
   "getclustersessioncredentials": {
    "Resources": [
     "cluster"
    ]
   },
   "getmanagedscalingpolicy": {
    "Resources": [
     "cluster"
    ]
   },
   "getonclusterappuipresignedurl": {
    "Resources": [
     "cluster"
    ]
   },
   "getpersistentappuipresignedurl": {
    "Resources": [
     "cluster"
    ]
   },
   "getstudiosessionmapping": {
    "Resources": [
     "studio"
    ]
   },
   "linkrepository": {},
   "listbootstrapactions": {
    "Resources": [
     "cluster"
    ]
   },
   "listclusters": {},
   "listeditors": {},
   "listinstancefleets": {
    "Resources": [
     "cluster"
    ]
   },
   "listinstancegroups": {
    "Resources": [
     "cluster"
    ]
   },
   "listinstances": {
    "Resources": [
     "cluster"
    ]
   },
   "listnotebookexecutions": {},
   "listreleaselabels": {},
   "listrepositories": {},
   "listsecurityconfigurations": {},
   "liststeps": {
    "Resources": [
     "cluster"
    ]
   },
   "liststudios": {},
   "liststudiosessionmappings": {},
   "listsupportedinstancetypes": {},
   "listworkspaceaccessidentities": {
    "Resources": [
     "editor"
    ]
   },
   "modifycluster": {
    "Resources": [
     "cluster"
    ]
   },
   "modifyinstancefleet": {
    "Resources": [
     "cluster"
    ]
   },
   "modifyinstancegroups": {
    "Resources": [
     "cluster"
    ]
   },
   "openeditorinconsole": {
    "Resources": [
     "cluster",
     "editor"
    ]
   },
   "putautoscalingpolicy": {
    "Resources": [
     "cluster"
    ]
   },
   "putautoterminationpolicy": {
    "Resources": [
     "cluster"
    ]
   },
   "putblockpublicaccessconfiguration": {},
   "putmanagedscalingpolicy": {
    "Resources": [
     "cluster"
    ]
   },
   "putworkspaceaccess": {
    "Resources": [
     "editor"
    ]
   },
   "removeautoscalingpolicy": {
    "Resources": [
     "cluster"
    ]
   },
   "removeautoterminationpolicy": {
    "Resources": [
     "cluster"
    ]
   },
   "removemanagedscalingpolicy": {
    "Resources": [
     "cluster"
    ]
   },
   "removetags": {
    "Resources": [
     "cluster",
     "editor",
     "notebook-execution",
     "studio"
    ]
   },
   "runjobflow": {},
   "setkeepjobflowalivewhennosteps": {
    "Resources": [
     "cluster"
    ]
   },
   "setterminationprotection": {
    "Resources": [
     "cluster"
    ]
   },
   "setunhealthynodereplacement": {
    "Resources": [
     "cluster"
    ]
   },
   "setvisibletoallusers": {
    "Resources": [
     "cluster"
    ]
   },
   "starteditor": {
    "Resources": [
     "cluster",
     "editor"
    ]
   },
   "startnotebookexecution": {
    "Resources": [
     "cluster",
     "editor"
    ]
   },
   "stopeditor": {
    "Resources": [
     "editor"
    ]
   },
   "stopnotebookexecution": {
    "Resources": [
     "notebook-execution"
    ]
   },
   "terminatejobflows": {
    "Resources": [
     "cluster"
    ]
   },
   "unlinkrepository": {},
   "updateeditor": {
    "Resources": [
     "editor"
    ]
   },
   "updaterepository": {},
   "updatestudio": {
    "Resources": [
     "studio"
    ]
   },
   "updatestudiosessionmapping": {
    "Resources": [
     "studio"
    ]
   },
   "vieweventsfromallclustersinconsole": {}
  },
  "Resources": {
   "cluster": {
    "ARNFormats": [
     "arn:${Partition}:elasticmapreduce:${Region}:${Account}:cluster/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "elasticmapreduce:ResourceTag/${TagKey}"
    ]
   },
   "editor": {
    "ARNFormats": [
     "arn:${Partition}:elasticmapreduce:${Region}:${Account}:editor/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "elasticmapreduce:ResourceTag/${TagKey}"
    ]
   },
   "notebook-execution": {
    "ARNFormats": [
     "arn:${Partition}:elasticmapreduce:${Region}:${Account}:notebook-execution/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "elasticmapreduce:ResourceTag/${TagKey}"
    ]
   },
   "studio": {
    "ARNFormats": [
     "arn:${Partition}:elasticmapreduce:${Region}:${Account}:studio/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "elasticmapreduce:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "elastictranscoder": {
  "Actions": {
   "canceljob": {
    "Resources": [
     "job"
    ]
   },
   "createjob": {
    "Resources": [
     "pipeline",
     "preset"
    ]
   },
   "createpipeline": {},
   "createpreset": {},
   "deletepipeline": {
    "Resources": [
     "pipeline"
    ]
   },
   "deletepreset": {
    "Resources": [
     "preset"
    ]
   },
   "listjobsbypipeline": {
    "Resources": [
     "pipeline"
    ]
   },
   "listjobsbystatus": {},
   "listpipelines": {},
   "listpresets": {},
   "readjob": {
    "Resources": [
     "job"
    ]
   },
   "readpipeline": {
    "Resources": [
     "pipeline"
    ]
   },
   "readpreset": {
    "Resources": [
     "preset"
    ]
   },
   "testrole": {},
   "updatepipeline": {
    "Resources": [
     "pipeline"
    ]
   },
   "updatepipelinenotifications": {
    "Resources": [
     "pipeline"
    ]
   },
   "updatepipelinestatus": {
    "Resources": [
     "pipeline"
    ]
   }
  },
  "Resources": {
   "job": {
    "ARNFormats": [
     "arn:${Partition}:elastictranscoder:${Region}:${Account}:job/.*"
    ]
   },
   "pipeline": {
    "ARNFormats": [
     "arn:${Partition}:elastictranscoder:${Region}:${Account}:pipeline/.*"
    ]
   },
   "preset": {
    "ARNFormats": [
     "arn:${Partition}:elastictranscoder:${Region}:${Account}:preset/.*"
    ]
   }
  }
 },
 "elemental-activations": {
  "Actions": {
   "completeaccountregistration": {},
   "completefileupload": {},
   "confirmaccount": {},
   "downloadkickstart": {},
   "downloadsoftware": {},
   "generatelicense": {},
   "generatelicenses": {},
   "getartifactgroupsoftwareversions": {},
   "getasset": {},
   "getassets": {},
   "getproductadvisories": {},
   "getsoftwareversions": {},
   "startfileupload": {}
  },
  "Resources": {}
 },
 "elemental-appliances-software": {
  "Actions": {
   "completeupload": {},
   "createorderv1": {},
   "createquote": {
    "Resources": [
     "quote"
    ]
   },
   "getavscorrectaddress": {},
   "getbillingaddresses": {},
   "getdeliveryaddressesv2": {},
   "getorder": {},
   "getordersv2": {},
   "getquote": {
    "Resources": [
     "quote"
    ]
   },
   "gettaxes": {},
   "listquotes": {},
   "startupload": {},
   "submitorderv1": {},
   "updatequote": {
    "Resources": [
     "quote"
    ]
   }
  },
  "Resources": {
   "quote": {
    "ARNFormats": [
     "arn:${Partition}:elemental-appliances-software:${Region}:${Account}:quote/.*"
    ]
   }
  }
 },
 "elemental-support-cases": {
  "Actions": {
   "addcasecomment": {
    "Resources": [
     "case"
    ]
   },
   "checkcasepermission": {},
   "completemultipartupload": {
    "Resources": [
     "case"
    ]
   },
   "createcase": {},
   "creates3cliuploadcommand": {
    "Resources": [
     "case"
    ]
   },
   "creates3downloadurl": {
    "Resources": [
     "case"
    ]
   },
   "getcase": {
    "Resources": [
     "case"
    ]
   },
   "getcasepermission": {},
   "getcases": {},
   "getuicache": {},
   "listtagsforcase": {
    "Resources": [
     "case"
    ]
   },
   "startmultipartupload": {
    "Resources": [
     "case"
    ]
   },
   "tagcase": {
    "Resources": [
     "case"
    ]
   },
   "untagcase": {
    "Resources": [
     "case"
    ]
   },
   "updatecase": {
    "Resources": [
     "case"
    ]
   },
   "updatecasestatus": {
    "Resources": [
     "case"
    ]
   },
   "updatemultipartupload": {
    "Resources": [
     "case"
    ]
   }
  },
  "Resources": {
   "case": {
    "ARNFormats": [
     "arn:${Partition}:elemental-support-cases::${Account}:case/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "elemental-support-content": {
  "Actions": {
   "query": {}
  },
  "Resources": {}
 },
 "emr-containers": {
  "Actions": {
   "canceljobrun": {
    "Resources": [
     "jobRun"
    ]
   },
   "createcertificate": {},
   "createjobtemplate": {},
   "createmanagedendpoint": {
    "Resources": [
     "virtualCluster"
    ]
   },
   "createsecurityconfiguration": {},
   "createvirtualcluster": {},
   "deletejobtemplate": {
    "Resources": [
     "jobTemplate"
    ]
   },
   "deletemanagedendpoint": {
    "Resources": [
     "managedEndpoint"
    ]
   },
   "deletevirtualcluster": {
    "Resources": [
     "virtualCluster"
    ]
   },
   "describejobrun": {
    "Resources": [
     "jobRun"
    ]
   },
   "describejobtemplate": {
    "Resources": [
     "jobTemplate"
    ]
   },
   "describemanagedendpoint": {
    "Resources": [
     "managedEndpoint"
    ]
   },
   "describesecurityconfiguration": {
    "Resources": [
     "securityConfiguration"
    ]
   },
   "describevirtualcluster": {
    "Resources": [
     "virtualCluster"
    ]
   },
   "getmanagedendpointsessioncredentials": {
    "Resources": [
     "managedEndpoint"
    ]
   },
   "listjobruns": {
    "Resources": [
     "virtualCluster"
    ]
   },
   "listjobtemplates": {},
   "listmanagedendpoints": {
    "Resources": [
     "virtualCluster"
    ]
   },
   "listsecurityconfigurations": {},
   "listtagsforresource": {
    "Resources": [
     "jobRun",
     "jobTemplate",
     "managedEndpoint",
     "virtualCluster"
    ]
   },
   "listvirtualclusters": {},
   "startjobrun": {
    "Resources": [
     "virtualCluster"
    ]
   },
   "tagresource": {
    "Resources": [
     "jobRun",
     "jobTemplate",
     "managedEndpoint",
     "virtualCluster"
    ]
   },
   "untagresource": {
    "Resources": [
     "jobRun",
     "jobTemplate",
     "managedEndpoint",
     "virtualCluster"
    ]
   }
  },
  "Resources": {
   "certificate": {
    "ARNFormats": [
     "arn:${Partition}:emr-containers:${Region}:${Account}:/certificates/.*"
    ]
   },
   "jobrun": {
    "ARNFormats": [
     "arn:${Partition}:emr-containers:${Region}:${Account}:/virtualclusters/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "jobtemplate": {
    "ARNFormats": [
     "arn:${Partition}:emr-containers:${Region}:${Account}:/jobtemplates/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "managedendpoint": {
    "ARNFormats": [
     "arn:${Partition}:emr-containers:${Region}:${Account}:/virtualclusters/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "securityconfiguration": {
    "ARNFormats": [
     "arn:${Partition}:emr-containers:${Region}:${Account}:/securityconfigurations/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "virtualcluster": {
    "ARNFormats": [
     "arn:${Partition}:emr-containers:${Region}:${Account}:/virtualclusters/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "emr-serverless": {
  "Actions": {
   "accessinteractiveendpoints": {
    "Resources": [
     "application"
    ]
   },
   "accesslivyendpoints": {
    "Resources": [
     "application"
    ]
   },
   "canceljobrun": {
    "Resources": [
     "jobRun"
    ]
   },
   "createapplication": {},
   "deleteapplication": {
    "Resources": [
     "application"
    ]
   },
   "getapplication": {
    "Resources": [
     "application"
    ]
   },
   "getdashboardforjobrun": {
    "Resources": [
     "jobRun"
    ]
   },
   "getjobrun": {
    "Resources": [
     "jobRun"
    ]
   },
   "listapplications": {},
   "listjobrunattempts": {
    "Resources": [
     "jobRun"
    ]
   },
   "listjobruns": {
    "Resources": [
     "application"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "application",
     "jobRun"
    ]
   },
   "startapplication": {
    "Resources": [
     "application"
    ]
   },
   "startjobrun": {
    "Resources": [
     "application"
    ]
   },
   "stopapplication": {
    "Resources": [
     "application"
    ]
   },
   "tagresource": {
    "Resources": [
     "application",
     "jobRun"
    ]
   },
   "untagresource": {
    "Resources": [
     "application",
     "jobRun"
    ]
   },
   "updateapplication": {
    "Resources": [
     "application"
    ]
   }
  },
  "Resources": {
   "application": {
    "ARNFormats": [
     "arn:${Partition}:emr-serverless:${Region}:${Account}:/applications/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "jobrun": {
    "ARNFormats": [
     "arn:${Partition}:emr-serverless:${Region}:${Account}:/applications/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "entityresolution": {
  "Actions": {
   "addpolicystatement": {},
   "batchdeleteuniqueid": {
    "Resources": [
     "MatchingWorkflow"
    ]
   },
   "createidmappingworkflow": {},
   "createidnamespace": {},
   "creatematchingworkflow": {},
   "createschemamapping": {},
   "deleteidmappingworkflow": {
    "Resources": [
     "IdMappingWorkflow"
    ]
   },
   "deleteidnamespace": {
    "Resources": [
     "IdNamespace"
    ]
   },
   "deletematchingworkflow": {
    "Resources": [
     "MatchingWorkflow"
    ]
   },
   "deletepolicystatement": {},
   "deleteschemamapping": {
    "Resources": [
     "SchemaMapping"
    ]
   },
   "getidmappingjob": {
    "Resources": [
     "IdMappingWorkflow"
    ]
   },
   "getidmappingworkflow": {
    "Resources": [
     "IdMappingWorkflow"
    ]
   },
   "getidnamespace": {
    "Resources": [
     "IdNamespace"
    ]
   },
   "getmatchid": {
    "Resources": [
     "MatchingWorkflow"
    ]
   },
   "getmatchingjob": {
    "Resources": [
     "MatchingWorkflow"
    ]
   },
   "getmatchingworkflow": {
    "Resources": [
     "MatchingWorkflow"
    ]
   },
   "getpolicy": {},
   "getproviderservice": {
    "Resources": [
     "ProviderService"
    ]
   },
   "getschemamapping": {
    "Resources": [
     "SchemaMapping"
    ]
   },
   "listidmappingjobs": {
    "Resources": [
     "IdMappingWorkflow"
    ]
   },
   "listidmappingworkflows": {},
   "listidnamespaces": {},
   "listmatchingjobs": {
    "Resources": [
     "MatchingWorkflow"
    ]
   },
   "listmatchingworkflows": {},
   "listproviderservices": {
    "Resources": [
     "ProviderService"
    ]
   },
   "listschemamappings": {},
   "listtagsforresource": {},
   "putpolicy": {},
   "startidmappingjob": {
    "Resources": [
     "IdMappingWorkflow"
    ]
   },
   "startmatchingjob": {
    "Resources": [
     "MatchingWorkflow"
    ]
   },
   "tagresource": {
    "Resources": [
     "IdMappingWorkflow",
     "IdNamespace",
     "MatchingWorkflow",
     "ProviderService",
     "SchemaMapping"
    ]
   },
   "untagresource": {
    "Resources": [
     "IdMappingWorkflow",
     "IdNamespace",
     "MatchingWorkflow",
     "ProviderService",
     "SchemaMapping"
    ]
   },
   "updateidmappingworkflow": {
    "Resources": [
     "IdMappingWorkflow"
    ]
   },
   "updateidnamespace": {
    "Resources": [
     "IdNamespace"
    ]
   },
   "updatematchingworkflow": {
    "Resources": [
     "MatchingWorkflow"
    ]
   },
   "updateschemamapping": {
    "Resources": [
     "SchemaMapping"
    ]
   },
   "useidnamespace": {},
   "useworkflow": {}
  },
  "Resources": {
   "idmappingworkflow": {
    "ARNFormats": [
     "arn:${Partition}:entityresolution:${Region}:${Account}:idmappingworkflow/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "idnamespace": {
    "ARNFormats": [
     "arn:${Partition}:entityresolution:${Region}:${Account}:idnamespace/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "matchingworkflow": {
    "ARNFormats": [
     "arn:${Partition}:entityresolution:${Region}:${Account}:matchingworkflow/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "providerservice": {
    "ARNFormats": [
     "arn:${Partition}:entityresolution:${Region}:${Account}:providerservice/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "schemamapping": {
    "ARNFormats": [
     "arn:${Partition}:entityresolution:${Region}:${Account}:schemamapping/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "es": {
  "Actions": {
   "acceptinboundconnection": {},
   "acceptinboundcrossclustersearchconnection": {},
   "adddatasource": {
    "Resources": [
     "domain"
    ]
   },
   "adddirectquerydatasource": {
    "Resources": [
     "datasource"
    ]
   },
   "addtags": {
    "Resources": [
     "application",
     "datasource",
     "domain"
    ]
   },
   "associatepackage": {
    "Resources": [
     "domain"
    ]
   },
   "associatepackages": {
    "Resources": [
     "domain"
    ]
   },
   "authorizevpcendpointaccess": {},
   "canceldomainconfigchange": {
    "Resources": [
     "domain"
    ]
   },
   "cancelelasticsearchservicesoftwareupdate": {
    "Resources": [
     "domain"
    ]
   },
   "cancelservicesoftwareupdate": {
    "Resources": [
     "domain"
    ]
   },
   "createapplication": {},
   "createdomain": {
    "Resources": [
     "domain"
    ]
   },
   "createelasticsearchdomain": {
    "Resources": [
     "domain"
    ]
   },
   "createelasticsearchservicerole": {},
   "createoutboundconnection": {
    "Resources": [
     "domain"
    ]
   },
   "createoutboundcrossclustersearchconnection": {
    "Resources": [
     "domain"
    ]
   },
   "createpackage": {},
   "createservicerole": {},
   "createvpcendpoint": {},
   "deleteapplication": {
    "Resources": [
     "application"
    ]
   },
   "deletedatasource": {
    "Resources": [
     "domain"
    ]
   },
   "deletedirectquerydatasource": {
    "Resources": [
     "datasource"
    ]
   },
   "deletedomain": {
    "Resources": [
     "domain"
    ]
   },
   "deleteelasticsearchdomain": {
    "Resources": [
     "domain"
    ]
   },
   "deleteelasticsearchservicerole": {},
   "deleteinboundconnection": {},
   "deleteinboundcrossclustersearchconnection": {},
   "deleteoutboundconnection": {},
   "deleteoutboundcrossclustersearchconnection": {},
   "deletepackage": {},
   "deletevpcendpoint": {},
   "describedomain": {
    "Resources": [
     "domain"
    ]
   },
   "describedomainautotunes": {
    "Resources": [
     "domain"
    ]
   },
   "describedomainchangeprogress": {
    "Resources": [
     "domain"
    ]
   },
   "describedomainconfig": {
    "Resources": [
     "domain"
    ]
   },
   "describedomainhealth": {
    "Resources": [
     "domain"
    ]
   },
   "describedomainnodes": {
    "Resources": [
     "domain"
    ]
   },
   "describedomains": {
    "Resources": [
     "domain"
    ]
   },
   "describedryrunprogress": {
    "Resources": [
     "domain"
    ]
   },
   "describeelasticsearchdomain": {
    "Resources": [
     "domain"
    ]
   },
   "describeelasticsearchdomainconfig": {
    "Resources": [
     "domain"
    ]
   },
   "describeelasticsearchdomains": {
    "Resources": [
     "domain"
    ]
   },
   "describeelasticsearchinstancetypelimits": {},
   "describeinboundconnections": {},
   "describeinboundcrossclustersearchconnections": {},
   "describeinstancetypelimits": {},
   "describeoutboundconnections": {},
   "describeoutboundcrossclustersearchconnections": {},
   "describepackages": {},
   "describereservedelasticsearchinstanceofferings": {},
   "describereservedelasticsearchinstances": {},
   "describereservedinstanceofferings": {},
   "describereservedinstances": {},
   "describevpcendpoints": {},
   "dissociatepackage": {
    "Resources": [
     "domain"
    ]
   },
   "dissociatepackages": {
    "Resources": [
     "domain"
    ]
   },
   "escrossclusterget": {
    "Resources": [
     "domain"
    ]
   },
   "eshttpdelete": {
    "Resources": [
     "domain"
    ]
   },
   "eshttpget": {
    "Resources": [
     "domain"
    ]
   },
   "eshttphead": {
    "Resources": [
     "domain"
    ]
   },
   "eshttppatch": {
    "Resources": [
     "domain"
    ]
   },
   "eshttppost": {
    "Resources": [
     "domain"
    ]
   },
   "eshttpput": {
    "Resources": [
     "domain"
    ]
   },
   "getapplication": {
    "Resources": [
     "application"
    ]
   },
   "getcompatibleelasticsearchversions": {
    "Resources": [
     "domain"
    ]
   },
   "getcompatibleversions": {
    "Resources": [
     "domain"
    ]
   },
   "getdatasource": {
    "Resources": [
     "domain"
    ]
   },
   "getdirectquerydatasource": {
    "Resources": [
     "datasource"
    ]
   },
   "getdomainmaintenancestatus": {
    "Resources": [
     "domain"
    ]
   },
   "getpackageversionhistory": {},
   "getupgradehistory": {
    "Resources": [
     "domain"
    ]
   },
   "getupgradestatus": {
    "Resources": [
     "domain"
    ]
   },
   "listapplications": {
    "Resources": [
     "application"
    ]
   },
   "listdatasources": {
    "Resources": [
     "domain"
    ]
   },
   "listdirectquerydatasources": {
    "Resources": [
     "datasource"
    ]
   },
   "listdomainmaintenances": {
    "Resources": [
     "domain"
    ]
   },
   "listdomainnames": {},
   "listdomainsforpackage": {},
   "listelasticsearchinstancetypedetails": {},
   "listelasticsearchinstancetypes": {},
   "listelasticsearchversions": {},
   "listinstancetypedetails": {},
   "listpackagesfordomain": {
    "Resources": [
     "domain"
    ]
   },
   "listscheduledactions": {
    "Resources": [
     "domain"
    ]
   },
   "listtags": {
    "Resources": [
     "application",
     "datasource",
     "domain"
    ]
   },
   "listversions": {},
   "listvpcendpointaccess": {},
   "listvpcendpoints": {},
   "listvpcendpointsfordomain": {},
   "purchasereservedelasticsearchinstanceoffering": {},
   "purchasereservedinstanceoffering": {},
   "rejectinboundconnection": {},
   "rejectinboundcrossclustersearchconnection": {},
   "removetags": {
    "Resources": [
     "application",
     "datasource",
     "domain"
    ]
   },
   "revokevpcendpointaccess": {},
   "startdomainmaintenance": {
    "Resources": [
     "domain"
    ]
   },
   "startelasticsearchservicesoftwareupdate": {
    "Resources": [
     "domain"
    ]
   },
   "startservicesoftwareupdate": {
    "Resources": [
     "domain"
    ]
   },
   "updateapplication": {
    "Resources": [
     "application"
    ]
   },
   "updatedatasource": {
    "Resources": [
     "domain"
    ]
   },
   "updatedirectquerydatasource": {
    "Resources": [
     "datasource"
    ]
   },
   "updatedomainconfig": {
    "Resources": [
     "domain"
    ]
   },
   "updateelasticsearchdomainconfig": {
    "Resources": [
     "domain"
    ]
   },
   "updatepackage": {},
   "updatepackagescope": {},
   "updatescheduledaction": {
    "Resources": [
     "domain"
    ]
   },
   "updatevpcendpoint": {},
   "upgradedomain": {
    "Resources": [
     "domain"
    ]
   },
   "upgradeelasticsearchdomain": {
    "Resources": [
     "domain"
    ]
   }
  },
  "Resources": {
   "application": {
    "ARNFormats": [
     "arn:${Partition}:opensearch:${Region}:${Account}:application/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "datasource": {
    "ARNFormats": [
     "arn:${Partition}:opensearch:${Region}:${Account}:datasource/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "domain": {
    "ARNFormats": [
     "arn:${Partition}:es:${Region}:${Account}:domain/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "es_role": {
    "ARNFormats": [
     "arn:${Partition}:iam::${Account}:role/aws-service-role/es.amazonaws.com/AWSServiceRoleForAmazonOpenSearchService"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "opensearchservice_role": {
    "ARNFormats": [
     "arn:${Partition}:iam::${Account}:role/aws-service-role/opensearchservice.amazonaws.com/AWSServiceRoleForAmazonOpenSearchService"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "events": {
  "Actions": {
   "activateeventsource": {
    "Resources": [
     "event-source"
    ]
   },
   "cancelreplay": {
    "Resources": [
     "replay"
    ]
   },
   "createapidestination": {
    "Resources": [
     "api-destination",
     "connection"
    ]
   },
   "createarchive": {
    "Resources": [
     "archive",
     "event-bus"
    ]
   },
   "createconnection": {
    "Resources": [
     "connection"
    ]
   },
   "createendpoint": {
    "Resources": [
     "endpoint"
    ]
   },
   "createeventbus": {
    "Resources": [
     "event-bus"
    ]
   },
   "createpartnereventsource": {
    "Resources": [
     "event-source"
    ]
   },
   "deactivateeventsource": {
    "Resources": [
     "event-source"
    ]
   },
   "deauthorizeconnection": {
    "Resources": [
     "connection"
    ]
   },
   "deleteapidestination": {
    "Resources": [
     "api-destination"
    ]
   },
   "deletearchive": {
    "Resources": [
     "archive"
    ]
   },
   "deleteconnection": {
    "Resources": [
     "connection"
    ]
   },
   "deleteendpoint": {
    "Resources": [
     "endpoint"
    ]
   },
   "deleteeventbus": {
    "Resources": [
     "event-bus"
    ]
   },
   "deletepartnereventsource": {
    "Resources": [
     "event-source"
    ]
   },
   "deleterule": {
    "Resources": [
     "rule-on-custom-event-bus",
     "rule-on-default-event-bus"
    ]
   },
   "describeapidestination": {
    "Resources": [
     "api-destination",
     "connection"
    ]
   },
   "describearchive": {
    "Resources": [
     "archive"
    ]
   },
   "describeconnection": {
    "Resources": [
     "connection"
    ]
   },
   "describeendpoint": {
    "Resources": [
     "endpoint"
    ]
   },
   "describeeventbus": {
    "Resources": [
     "event-bus"
    ]
   },
   "describeeventsource": {
    "Resources": [
     "event-source"
    ]
   },
   "describepartnereventsource": {
    "Resources": [
     "event-source"
    ]
   },
   "describereplay": {
    "Resources": [
     "replay"
    ]
   },
   "describerule": {
    "Resources": [
     "rule-on-custom-event-bus",
     "rule-on-default-event-bus"
    ]
   },
   "disablerule": {
    "Resources": [
     "rule-on-custom-event-bus",
     "rule-on-default-event-bus"
    ]
   },
   "enablerule": {
    "Resources": [
     "rule-on-custom-event-bus",
     "rule-on-default-event-bus"
    ]
   },
   "invokeapidestination": {
    "Resources": [
     "api-destination"
    ]
   },
   "listapidestinations": {},
   "listarchives": {},
   "listconnections": {},
   "listendpoints": {},
   "listeventbuses": {},
   "listeventsources": {},
   "listpartnereventsourceaccounts": {
    "Resources": [
     "event-source"
    ]
   },
   "listpartnereventsources": {},
   "listreplays": {},
   "listrulenamesbytarget": {},
   "listrules": {},
   "listtagsforresource": {
    "Resources": [
     "event-bus",
     "rule-on-custom-event-bus",
     "rule-on-default-event-bus"
    ]
   },
   "listtargetsbyrule": {
    "Resources": [
     "rule-on-custom-event-bus",
     "rule-on-default-event-bus"
    ]
   },
   "putevents": {
    "Resources": [
     "event-bus"
    ]
   },
   "putpartnerevents": {},
   "putpermission": {},
   "putrule": {
    "Resources": [
     "rule-on-custom-event-bus",
     "rule-on-default-event-bus"
    ]
   },
   "puttargets": {
    "Resources": [
     "rule-on-custom-event-bus",
     "rule-on-default-event-bus"
    ]
   },
   "removepermission": {},
   "removetargets": {
    "Resources": [
     "rule-on-custom-event-bus",
     "rule-on-default-event-bus"
    ]
   },
   "retrieveconnectioncredentials": {
    "Resources": [
     "connection"
    ]
   },
   "startreplay": {
    "Resources": [
     "archive",
     "event-bus",
     "replay"
    ]
   },
   "tagresource": {
    "Resources": [
     "event-bus",
     "rule-on-custom-event-bus",
     "rule-on-default-event-bus"
    ]
   },
   "testeventpattern": {},
   "untagresource": {
    "Resources": [
     "event-bus",
     "rule-on-custom-event-bus",
     "rule-on-default-event-bus"
    ]
   },
   "updateapidestination": {
    "Resources": [
     "api-destination"
    ]
   },
   "updatearchive": {
    "Resources": [
     "archive"
    ]
   },
   "updateconnection": {
    "Resources": [
     "connection"
    ]
   },
   "updateendpoint": {
    "Resources": [
     "endpoint"
    ]
   },
   "updateeventbus": {
    "Resources": [
     "event-bus"
    ]
   }
  },
  "Resources": {
   "api-destination": {
    "ARNFormats": [
     "arn:${Partition}:events:${Region}:${Account}:api-destination/.*"
    ]
   },
   "archive": {
    "ARNFormats": [
     "arn:${Partition}:events:${Region}:${Account}:archive/.*"
    ]
   },
   "connection": {
    "ARNFormats": [
     "arn:${Partition}:events:${Region}:${Account}:connection/.*"
    ]
   },
   "create-snapshot": {
    "ARNFormats": [
     "arn:${Partition}:events:${Region}:${Account}:target/create-snapshot"
    ]
   },
   "endpoint": {
    "ARNFormats": [
     "arn:${Partition}:events:${Region}:${Account}:endpoint/.*"
    ]
   },
   "event-bus": {
    "ARNFormats": [
     "arn:${Partition}:events:${Region}:${Account}:event-bus/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "event-source": {
    "ARNFormats": [
     "arn:${Partition}:events:${Region}::event-source/.*"
    ]
   },
   "reboot-instance": {
    "ARNFormats": [
     "arn:${Partition}:events:${Region}:${Account}:target/reboot-instance"
    ]
   },
   "replay": {
    "ARNFormats": [
     "arn:${Partition}:events:${Region}:${Account}:replay/.*"
    ]
   },
   "rule-on-custom-event-bus": {
    "ARNFormats": [
     "arn:${Partition}:events:${Region}:${Account}:rule/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "rule-on-default-event-bus": {
    "ARNFormats": [
     "arn:${Partition}:events:${Region}:${Account}:rule/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "stop-instance": {
    "ARNFormats": [
     "arn:${Partition}:events:${Region}:${Account}:target/stop-instance"
    ]
   },
   "terminate-instance": {
    "ARNFormats": [
     "arn:${Partition}:events:${Region}:${Account}:target/terminate-instance"
    ]
   }
  }
 },
 "evidently": {
  "Actions": {
   "batchevaluatefeature": {
    "Resources": [
     "Feature"
    ]
   },
   "createexperiment": {},
   "createfeature": {},
   "createlaunch": {},
   "createproject": {},
   "createsegment": {},
   "deleteexperiment": {
    "Resources": [
     "Experiment"
    ]
   },
   "deletefeature": {
    "Resources": [
     "Feature"
    ]
   },
   "deletelaunch": {
    "Resources": [
     "Launch"
    ]
   },
   "deleteproject": {
    "Resources": [
     "Project"
    ]
   },
   "deletesegment": {
    "Resources": [
     "Segment"
    ]
   },
   "evaluatefeature": {
    "Resources": [
     "Feature"
    ]
   },
   "getexperiment": {
    "Resources": [
     "Experiment"
    ]
   },
   "getexperimentresults": {
    "Resources": [
     "Experiment"
    ]
   },
   "getfeature": {
    "Resources": [
     "Feature"
    ]
   },
   "getlaunch": {
    "Resources": [
     "Launch"
    ]
   },
   "getproject": {
    "Resources": [
     "Project"
    ]
   },
   "getsegment": {
    "Resources": [
     "Segment"
    ]
   },
   "listexperiments": {},
   "listfeatures": {},
   "listlaunches": {},
   "listprojects": {},
   "listsegmentreferences": {},
   "listsegments": {},
   "listtagsforresource": {},
   "putprojectevents": {
    "Resources": [
     "Project"
    ]
   },
   "startexperiment": {
    "Resources": [
     "Experiment"
    ]
   },
   "startlaunch": {
    "Resources": [
     "Launch"
    ]
   },
   "stopexperiment": {
    "Resources": [
     "Experiment"
    ]
   },
   "stoplaunch": {
    "Resources": [
     "Launch"
    ]
   },
   "tagresource": {
    "Resources": [
     "Experiment",
     "Feature",
     "Launch",
     "Project",
     "Segment"
    ]
   },
   "testsegmentpattern": {},
   "untagresource": {
    "Resources": [
     "Experiment",
     "Feature",
     "Launch",
     "Project",
     "Segment"
    ]
   },
   "updateexperiment": {
    "Resources": [
     "Experiment"
    ]
   },
   "updatefeature": {
    "Resources": [
     "Feature"
    ]
   },
   "updatelaunch": {
    "Resources": [
     "Launch"
    ]
   },
   "updateproject": {
    "Resources": [
     "Project"
    ]
   },
   "updateprojectdatadelivery": {
    "Resources": [
     "Project"
    ]
   }
  },
  "Resources": {
   "experiment": {
    "ARNFormats": [
     "arn:${Partition}:evidently:${Region}:${Account}:project/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "feature": {
    "ARNFormats": [
     "arn:${Partition}:evidently:${Region}:${Account}:project/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "launch": {
    "ARNFormats": [
     "arn:${Partition}:evidently:${Region}:${Account}:project/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "project": {
    "ARNFormats": [
     "arn:${Partition}:evidently:${Region}:${Account}:project/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "segment": {
    "ARNFormats": [
     "arn:${Partition}:evidently:${Region}:${Account}:segment/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "execute-api": {
  "Actions": {
   "invalidatecache": {
    "Resources": [
     "execute-api-general"
    ]
   },
   "invoke": {
    "Resources": [
     "execute-api-domain",
     "execute-api-general"
    ]
   },
   "manageconnections": {
    "Resources": [
     "execute-api-general"
    ]
   }
  },
  "Resources": {
   "execute-api-domain": {
    "ARNFormats": [
     "arn:${Partition}:execute-api:${Region}:${Account}:/domainnames/.*"
    ]
   },
   "execute-api-general": {
    "ARNFormats": [
     "arn:${Partition}:execute-api:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "execute-api:viaDomainArn"
    ]
   }
  }
 },
 "finspace": {
  "Actions": {
   "connectkxcluster": {
    "Resources": [
     "kxCluster"
    ]
   },
   "createenvironment": {
    "Resources": [
     "environment"
    ]
   },
   "createkxchangeset": {
    "Resources": [
     "kxDatabase"
    ]
   },
   "createkxcluster": {
    "Resources": [
     "kxCluster"
    ]
   },
   "createkxdatabase": {
    "Resources": [
     "kxDatabase"
    ]
   },
   "createkxdataview": {
    "Resources": [
     "kxDataview"
    ]
   },
   "createkxenvironment": {},
   "createkxscalinggroup": {
    "Resources": [
     "kxScalingGroup"
    ]
   },
   "createkxuser": {
    "Resources": [
     "kxEnvironment"
    ]
   },
   "createkxvolume": {
    "Resources": [
     "kxVolume"
    ]
   },
   "createuser": {
    "Resources": [
     "environment",
     "user"
    ]
   },
   "deleteenvironment": {
    "Resources": [
     "environment"
    ]
   },
   "deletekxcluster": {
    "Resources": [
     "kxCluster"
    ]
   },
   "deletekxclusternode": {
    "Resources": [
     "kxCluster"
    ]
   },
   "deletekxdatabase": {
    "Resources": [
     "kxDatabase"
    ]
   },
   "deletekxdataview": {
    "Resources": [
     "kxDataview"
    ]
   },
   "deletekxenvironment": {
    "Resources": [
     "kxEnvironment"
    ]
   },
   "deletekxscalinggroup": {
    "Resources": [
     "kxScalingGroup"
    ]
   },
   "deletekxuser": {
    "Resources": [
     "kxUser"
    ]
   },
   "deletekxvolume": {
    "Resources": [
     "kxVolume"
    ]
   },
   "getenvironment": {
    "Resources": [
     "environment"
    ]
   },
   "getkxchangeset": {
    "Resources": [
     "kxDatabase"
    ]
   },
   "getkxcluster": {
    "Resources": [
     "kxCluster"
    ]
   },
   "getkxconnectionstring": {
    "Resources": [
     "kxCluster"
    ]
   },
   "getkxdatabase": {
    "Resources": [
     "kxDatabase"
    ]
   },
   "getkxdataview": {
    "Resources": [
     "kxDataview"
    ]
   },
   "getkxenvironment": {
    "Resources": [
     "kxEnvironment"
    ]
   },
   "getkxscalinggroup": {
    "Resources": [
     "kxScalingGroup"
    ]
   },
   "getkxuser": {
    "Resources": [
     "kxUser"
    ]
   },
   "getkxvolume": {
    "Resources": [
     "kxVolume"
    ]
   },
   "getloadsampledatasetgroupintoenvironmentstatus": {
    "Resources": [
     "environment"
    ]
   },
   "getuser": {
    "Resources": [
     "environment",
     "user"
    ]
   },
   "listenvironments": {
    "Resources": [
     "environment"
    ]
   },
   "listkxchangesets": {
    "Resources": [
     "kxDatabase"
    ]
   },
   "listkxclusternodes": {
    "Resources": [
     "kxCluster"
    ]
   },
   "listkxclusters": {
    "Resources": [
     "kxEnvironment"
    ]
   },
   "listkxdatabases": {
    "Resources": [
     "kxEnvironment"
    ]
   },
   "listkxdataviews": {
    "Resources": [
     "kxDatabase"
    ]
   },
   "listkxenvironments": {},
   "listkxscalinggroups": {
    "Resources": [
     "kxEnvironment"
    ]
   },
   "listkxusers": {
    "Resources": [
     "kxEnvironment"
    ]
   },
   "listkxvolumes": {
    "Resources": [
     "kxEnvironment"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "environment",
     "kxCluster",
     "kxDatabase",
     "kxDataview",
     "kxEnvironment",
     "kxScalingGroup",
     "kxUser",
     "kxVolume"
    ]
   },
   "listusers": {
    "Resources": [
     "environment",
     "user"
    ]
   },
   "loadsampledatasetgroupintoenvironment": {
    "Resources": [
     "environment"
    ]
   },
   "mountkxdatabase": {
    "Resources": [
     "kxDatabase"
    ]
   },
   "resetuserpassword": {
    "Resources": [
     "environment",
     "user"
    ]
   },
   "tagresource": {
    "Resources": [
     "environment",
     "kxCluster",
     "kxDatabase",
     "kxDataview",
     "kxEnvironment",
     "kxScalingGroup",
     "kxUser",
     "kxVolume"
    ]
   },
   "untagresource": {
    "Resources": [
     "environment",
     "kxCluster",
     "kxDatabase",
     "kxDataview",
     "kxEnvironment",
     "kxScalingGroup",
     "kxUser",
     "kxVolume"
    ]
   },
   "updateenvironment": {
    "Resources": [
     "environment"
    ]
   },
   "updatekxclustercodeconfiguration": {
    "Resources": [
     "kxCluster"
    ]
   },
   "updatekxclusterdatabases": {
    "Resources": [
     "kxCluster"
    ]
   },
   "updatekxdatabase": {
    "Resources": [
     "kxDatabase"
    ]
   },
   "updatekxdataview": {
    "Resources": [
     "kxDataview"
    ]
   },
   "updatekxenvironment": {
    "Resources": [
     "kxEnvironment"
    ]
   },
   "updatekxenvironmentnetwork": {
    "Resources": [
     "kxEnvironment"
    ]
   },
   "updatekxuser": {
    "Resources": [
     "kxUser"
    ]
   },
   "updatekxvolume": {
    "Resources": [
     "kxVolume"
    ]
   },
   "updateuser": {
    "Resources": [
     "environment",
     "user"
    ]
   }
  },
  "Resources": {
   "environment": {
    "ARNFormats": [
     "arn:${Partition}:finspace:${Region}:${Account}:environment/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "kxcluster": {
    "ARNFormats": [
     "arn:${Partition}:finspace:${Region}:${Account}:kxEnvironment/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "kxdatabase": {
    "ARNFormats": [
     "arn:${Partition}:finspace:${Region}:${Account}:kxEnvironment/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "kxdataview": {
    "ARNFormats": [
     "arn:${Partition}:finspace:${Region}:${Account}:kxEnvironment/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "kxenvironment": {
    "ARNFormats": [
     "arn:${Partition}:finspace:${Region}:${Account}:kxEnvironment/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "kxscalinggroup": {
    "ARNFormats": [
     "arn:${Partition}:finspace:${Region}:${Account}:kxEnvironment/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "kxuser": {
    "ARNFormats": [
     "arn:${Partition}:finspace:${Region}:${Account}:kxEnvironment/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "kxvolume": {
    "ARNFormats": [
     "arn:${Partition}:finspace:${Region}:${Account}:kxEnvironment/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "user": {
    "ARNFormats": [
     "arn:${Partition}:finspace:${Region}:${Account}:user/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "finspace-api": {
  "Actions": {
   "getprogrammaticaccesscredentials": {
    "Resources": [
     "credential"
    ]
   }
  },
  "Resources": {
   "credential": {
    "ARNFormats": [
     "arn:${Partition}:finspace-api:${Region}:${Account}:/credentials/programmatic"
    ]
   }
  }
 },
 "firehose": {
  "Actions": {
   "createdeliverystream": {
    "Resources": [
     "deliverystream"
    ]
   },
   "deletedeliverystream": {
    "Resources": [
     "deliverystream"
    ]
   },
   "describedeliverystream": {
    "Resources": [
     "deliverystream"
    ]
   },
   "listdeliverystreams": {},
   "listtagsfordeliverystream": {
    "Resources": [
     "deliverystream"
    ]
   },
   "putrecord": {
    "Resources": [
     "deliverystream"
    ]
   },
   "putrecordbatch": {
    "Resources": [
     "deliverystream"
    ]
   },
   "startdeliverystreamencryption": {
    "Resources": [
     "deliverystream"
    ]
   },
   "stopdeliverystreamencryption": {
    "Resources": [
     "deliverystream"
    ]
   },
   "tagdeliverystream": {
    "Resources": [
     "deliverystream"
    ]
   },
   "untagdeliverystream": {
    "Resources": [
     "deliverystream"
    ]
   },
   "updatedestination": {
    "Resources": [
     "deliverystream"
    ]
   }
  },
  "Resources": {
   "deliverystream": {
    "ARNFormats": [
     "arn:${Partition}:firehose:${Region}:${Account}:deliverystream/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "fis": {
  "Actions": {
   "createexperimenttemplate": {
    "Resources": [
     "action",
     "experiment-template"
    ]
   },
   "createtargetaccountconfiguration": {
    "Resources": [
     "experiment-template"
    ]
   },
   "deleteexperimenttemplate": {
    "Resources": [
     "experiment-template"
    ]
   },
   "deletetargetaccountconfiguration": {
    "Resources": [
     "experiment-template"
    ]
   },
   "getaction": {
    "Resources": [
     "action"
    ]
   },
   "getexperiment": {
    "Resources": [
     "experiment"
    ]
   },
   "getexperimenttargetaccountconfiguration": {
    "Resources": [
     "experiment"
    ]
   },
   "getexperimenttemplate": {
    "Resources": [
     "experiment-template"
    ]
   },
   "getsafetylever": {
    "Resources": [
     "safety-lever"
    ]
   },
   "gettargetaccountconfiguration": {
    "Resources": [
     "experiment-template"
    ]
   },
   "gettargetresourcetype": {},
   "injectapiinternalerror": {
    "Resources": [
     "experiment"
    ]
   },
   "injectapithrottleerror": {
    "Resources": [
     "experiment"
    ]
   },
   "injectapiunavailableerror": {
    "Resources": [
     "experiment"
    ]
   },
   "listactions": {},
   "listexperimentresolvedtargets": {
    "Resources": [
     "experiment"
    ]
   },
   "listexperiments": {},
   "listexperimenttargetaccountconfigurations": {
    "Resources": [
     "experiment"
    ]
   },
   "listexperimenttemplates": {},
   "listtagsforresource": {
    "Resources": [
     "action",
     "experiment",
     "experiment-template"
    ]
   },
   "listtargetaccountconfigurations": {
    "Resources": [
     "experiment-template"
    ]
   },
   "listtargetresourcetypes": {},
   "startexperiment": {
    "Resources": [
     "experiment",
     "experiment-template"
    ]
   },
   "stopexperiment": {
    "Resources": [
     "experiment"
    ]
   },
   "tagresource": {
    "Resources": [
     "action",
     "experiment",
     "experiment-template"
    ]
   },
   "untagresource": {
    "Resources": [
     "action",
     "experiment",
     "experiment-template"
    ]
   },
   "updateexperimenttemplate": {
    "Resources": [
     "action",
     "experiment-template"
    ]
   },
   "updatesafetyleverstate": {
    "Resources": [
     "safety-lever"
    ]
   },
   "updatetargetaccountconfiguration": {
    "Resources": [
     "experiment-template"
    ]
   }
  },
  "Resources": {
   "action": {
    "ARNFormats": [
     "arn:${Partition}:fis:${Region}:${Account}:action/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "experiment": {
    "ARNFormats": [
     "arn:${Partition}:fis:${Region}:${Account}:experiment/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "experiment-template": {
    "ARNFormats": [
     "arn:${Partition}:fis:${Region}:${Account}:experiment-template/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "safety-lever": {
    "ARNFormats": [
     "arn:${Partition}:fis:${Region}:${Account}:safety-lever/.*"
    ]
   }
  }
 },
 "fms": {
  "Actions": {
   "associateadminaccount": {},
   "associatethirdpartyfirewall": {},
   "batchassociateresource": {
    "Resources": [
     "resource-set"
    ]
   },
   "batchdisassociateresource": {
    "Resources": [
     "resource-set"
    ]
   },
   "deleteappslist": {
    "Resources": [
     "applications-list"
    ]
   },
   "deletenotificationchannel": {},
   "deletepolicy": {
    "Resources": [
     "policy"
    ]
   },
   "deleteprotocolslist": {
    "Resources": [
     "protocols-list"
    ]
   },
   "deleteresourceset": {
    "Resources": [
     "resource-set"
    ]
   },
   "disassociateadminaccount": {},
   "disassociatethirdpartyfirewall": {},
   "getadminaccount": {},
   "getadminscope": {},
   "getappslist": {
    "Resources": [
     "applications-list"
    ]
   },
   "getcompliancedetail": {
    "Resources": [
     "policy"
    ]
   },
   "getnotificationchannel": {},
   "getpolicy": {
    "Resources": [
     "policy"
    ]
   },
   "getprotectionstatus": {
    "Resources": [
     "policy"
    ]
   },
   "getprotocolslist": {
    "Resources": [
     "protocols-list"
    ]
   },
   "getresourceset": {
    "Resources": [
     "resource-set"
    ]
   },
   "getthirdpartyfirewallassociationstatus": {},
   "getviolationdetails": {
    "Resources": [
     "policy"
    ]
   },
   "listadminaccountsfororganization": {},
   "listadminsmanagingaccount": {},
   "listappslists": {},
   "listcompliancestatus": {
    "Resources": [
     "policy"
    ]
   },
   "listdiscoveredresources": {},
   "listmemberaccounts": {},
   "listpolicies": {},
   "listprotocolslists": {},
   "listresourcesetresources": {
    "Resources": [
     "resource-set"
    ]
   },
   "listresourcesets": {},
   "listtagsforresource": {
    "Resources": [
     "policy"
    ]
   },
   "listthirdpartyfirewallfirewallpolicies": {},
   "putadminaccount": {},
   "putappslist": {
    "Resources": [
     "applications-list"
    ]
   },
   "putnotificationchannel": {},
   "putpolicy": {
    "Resources": [
     "policy"
    ]
   },
   "putprotocolslist": {
    "Resources": [
     "protocols-list"
    ]
   },
   "putresourceset": {
    "Resources": [
     "resource-set"
    ]
   },
   "tagresource": {
    "Resources": [
     "applications-list",
     "policy",
     "protocols-list",
     "resource-set"
    ]
   },
   "untagresource": {
    "Resources": [
     "applications-list",
     "policy",
     "protocols-list",
     "resource-set"
    ]
   }
  },
  "Resources": {
   "applications-list": {
    "ARNFormats": [
     "arn:${Partition}:fms:${Region}:${Account}:applications-list/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "policy": {
    "ARNFormats": [
     "arn:${Partition}:fms:${Region}:${Account}:policy/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "protocols-list": {
    "ARNFormats": [
     "arn:${Partition}:fms:${Region}:${Account}:protocols-list/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "resource-set": {
    "ARNFormats": [
     "arn:${Partition}:fms:${Region}:${Account}:resource-set/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "forecast": {
  "Actions": {
   "createautopredictor": {},
   "createdataset": {
    "Resources": [
     "dataset"
    ]
   },
   "createdatasetgroup": {
    "Resources": [
     "datasetGroup"
    ]
   },
   "createdatasetimportjob": {
    "Resources": [
     "datasetImportJob"
    ]
   },
   "createexplainability": {
    "Resources": [
     "forecast"
    ]
   },
   "createexplainabilityexport": {
    "Resources": [
     "explainability"
    ]
   },
   "createforecast": {
    "Resources": [
     "predictor"
    ]
   },
   "createforecastendpoint": {
    "Resources": [
     "predictor"
    ]
   },
   "createforecastexportjob": {
    "Resources": [
     "forecast"
    ]
   },
   "createmonitor": {
    "Resources": [
     "predictor"
    ]
   },
   "createpredictor": {
    "Resources": [
     "datasetGroup"
    ]
   },
   "createpredictorbacktestexportjob": {
    "Resources": [
     "predictor"
    ]
   },
   "createwhatifanalysis": {
    "Resources": [
     "forecast"
    ]
   },
   "createwhatifforecast": {
    "Resources": [
     "whatIfAnalysis"
    ]
   },
   "createwhatifforecastexport": {
    "Resources": [
     "whatIfForecast"
    ]
   },
   "deletedataset": {
    "Resources": [
     "dataset"
    ]
   },
   "deletedatasetgroup": {
    "Resources": [
     "datasetGroup"
    ]
   },
   "deletedatasetimportjob": {
    "Resources": [
     "datasetImportJob"
    ]
   },
   "deleteexplainability": {
    "Resources": [
     "explainability"
    ]
   },
   "deleteexplainabilityexport": {
    "Resources": [
     "explainabilityExport"
    ]
   },
   "deleteforecast": {
    "Resources": [
     "forecast"
    ]
   },
   "deleteforecastendpoint": {
    "Resources": [
     "endpoint"
    ]
   },
   "deleteforecastexportjob": {
    "Resources": [
     "forecastExport"
    ]
   },
   "deletemonitor": {
    "Resources": [
     "monitor"
    ]
   },
   "deletepredictor": {
    "Resources": [
     "predictor"
    ]
   },
   "deletepredictorbacktestexportjob": {
    "Resources": [
     "predictorBacktestExportJob"
    ]
   },
   "deleteresourcetree": {
    "Resources": [
     "dataset",
     "datasetGroup",
     "datasetImportJob",
     "endpoint",
     "explainability",
     "explainabilityExport",
     "forecast",
     "forecastExport",
     "monitor",
     "predictor",
     "predictorBacktestExportJob",
     "whatIfAnalysis",
     "whatIfForecast",
     "whatIfForecastExport"
    ]
   },
   "deletewhatifanalysis": {
    "Resources": [
     "whatIfAnalysis"
    ]
   },
   "deletewhatifforecast": {
    "Resources": [
     "whatIfForecast"
    ]
   },
   "deletewhatifforecastexport": {
    "Resources": [
     "whatIfForecastExport"
    ]
   },
   "describeautopredictor": {
    "Resources": [
     "predictor"
    ]
   },
   "describedataset": {
    "Resources": [
     "dataset"
    ]
   },
   "describedatasetgroup": {
    "Resources": [
     "datasetGroup"
    ]
   },
   "describedatasetimportjob": {
    "Resources": [
     "datasetImportJob"
    ]
   },
   "describeexplainability": {
    "Resources": [
     "explainability"
    ]
   },
   "describeexplainabilityexport": {
    "Resources": [
     "explainabilityExport"
    ]
   },
   "describeforecast": {
    "Resources": [
     "forecast"
    ]
   },
   "describeforecastendpoint": {
    "Resources": [
     "endpoint"
    ]
   },
   "describeforecastexportjob": {
    "Resources": [
     "forecastExport"
    ]
   },
   "describemonitor": {
    "Resources": [
     "monitor"
    ]
   },
   "describepredictor": {
    "Resources": [
     "predictor"
    ]
   },
   "describepredictorbacktestexportjob": {
    "Resources": [
     "predictorBacktestExportJob"
    ]
   },
   "describewhatifanalysis": {
    "Resources": [
     "whatIfAnalysis"
    ]
   },
   "describewhatifforecast": {
    "Resources": [
     "whatIfForecast"
    ]
   },
   "describewhatifforecastexport": {
    "Resources": [
     "whatIfForecastExport"
    ]
   },
   "getaccuracymetrics": {
    "Resources": [
     "predictor"
    ]
   },
   "getrecentforecastcontext": {
    "Resources": [
     "endpoint"
    ]
   },
   "invokeforecastendpoint": {
    "Resources": [
     "endpoint"
    ]
   },
   "listdatasetgroups": {},
   "listdatasetimportjobs": {},
   "listdatasets": {},
   "listexplainabilities": {},
   "listexplainabilityexports": {},
   "listforecastexportjobs": {},
   "listforecasts": {},
   "listmonitorevaluations": {
    "Resources": [
     "monitor"
    ]
   },
   "listmonitors": {},
   "listpredictorbacktestexportjobs": {},
   "listpredictors": {},
   "listtagsforresource": {
    "Resources": [
     "dataset",
     "datasetGroup",
     "datasetImportJob",
     "endpoint",
     "explainability",
     "explainabilityExport",
     "forecast",
     "forecastExport",
     "monitor",
     "predictor",
     "predictorBacktestExportJob",
     "whatIfAnalysis",
     "whatIfForecast",
     "whatIfForecastExport"
    ]
   },
   "listwhatifanalyses": {},
   "listwhatifforecastexports": {},
   "listwhatifforecasts": {},
   "queryforecast": {
    "Resources": [
     "forecast"
    ]
   },
   "querywhatifforecast": {
    "Resources": [
     "whatIfForecast"
    ]
   },
   "resumeresource": {
    "Resources": [
     "monitor"
    ]
   },
   "stopresource": {
    "Resources": [
     "datasetImportJob",
     "endpoint",
     "explainability",
     "explainabilityExport",
     "forecast",
     "forecastExport",
     "monitor",
     "predictor",
     "predictorBacktestExportJob",
     "whatIfAnalysis",
     "whatIfForecast",
     "whatIfForecastExport"
    ]
   },
   "tagresource": {
    "Resources": [
     "dataset",
     "datasetGroup",
     "datasetImportJob",
     "endpoint",
     "explainability",
     "explainabilityExport",
     "forecast",
     "forecastExport",
     "monitor",
     "predictor",
     "predictorBacktestExportJob",
     "whatIfAnalysis",
     "whatIfForecast",
     "whatIfForecastExport"
    ]
   },
   "untagresource": {
    "Resources": [
     "dataset",
     "datasetGroup",
     "datasetImportJob",
     "endpoint",
     "explainability",
     "explainabilityExport",
     "forecast",
     "forecastExport",
     "monitor",
     "predictor",
     "predictorBacktestExportJob",
     "whatIfAnalysis",
     "whatIfForecast",
     "whatIfForecastExport"
    ]
   },
   "updatedatasetgroup": {
    "Resources": [
     "dataset",
     "datasetGroup"
    ]
   }
  },
  "Resources": {
   "algorithm": {
    "ARNFormats": [
     "arn:${Partition}:forecast:::algorithm/.*"
    ]
   },
   "dataset": {
    "ARNFormats": [
     "arn:${Partition}:forecast:${Region}:${Account}:dataset/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "datasetgroup": {
    "ARNFormats": [
     "arn:${Partition}:forecast:${Region}:${Account}:dataset-group/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "datasetimportjob": {
    "ARNFormats": [
     "arn:${Partition}:forecast:${Region}:${Account}:dataset-import-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "endpoint": {
    "ARNFormats": [
     "arn:${Partition}:forecast:${Region}:${Account}:forecast-endpoint/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "explainability": {
    "ARNFormats": [
     "arn:${Partition}:forecast:${Region}:${Account}:explainability/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "explainabilityexport": {
    "ARNFormats": [
     "arn:${Partition}:forecast:${Region}:${Account}:explainability-export/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "forecast": {
    "ARNFormats": [
     "arn:${Partition}:forecast:${Region}:${Account}:forecast/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "forecastexport": {
    "ARNFormats": [
     "arn:${Partition}:forecast:${Region}:${Account}:forecast-export-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "monitor": {
    "ARNFormats": [
     "arn:${Partition}:forecast:${Region}:${Account}:monitor/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "predictor": {
    "ARNFormats": [
     "arn:${Partition}:forecast:${Region}:${Account}:predictor/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "predictorbacktestexportjob": {
    "ARNFormats": [
     "arn:${Partition}:forecast:${Region}:${Account}:predictor-backtest-export-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "whatifanalysis": {
    "ARNFormats": [
     "arn:${Partition}:forecast:${Region}:${Account}:what-if-analysis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "whatifforecast": {
    "ARNFormats": [
     "arn:${Partition}:forecast:${Region}:${Account}:what-if-forecast/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "whatifforecastexport": {
    "ARNFormats": [
     "arn:${Partition}:forecast:${Region}:${Account}:what-if-forecast-export/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "frauddetector": {
  "Actions": {
   "batchcreatevariable": {},
   "batchgetvariable": {
    "Resources": [
     "variable"
    ]
   },
   "cancelbatchimportjob": {
    "Resources": [
     "batch-import"
    ]
   },
   "cancelbatchpredictionjob": {
    "Resources": [
     "batch-prediction"
    ]
   },
   "createbatchimportjob": {
    "Resources": [
     "batch-import",
     "event-type"
    ]
   },
   "createbatchpredictionjob": {
    "Resources": [
     "batch-prediction",
     "detector",
     "detector-version",
     "event-type"
    ]
   },
   "createdetectorversion": {
    "Resources": [
     "detector",
     "external-model",
     "model-version"
    ]
   },
   "createlist": {},
   "createmodel": {
    "Resources": [
     "event-type",
     "model"
    ]
   },
   "createmodelversion": {
    "Resources": [
     "model"
    ]
   },
   "createrule": {
    "Resources": [
     "detector"
    ]
   },
   "createvariable": {},
   "deletebatchimportjob": {
    "Resources": [
     "batch-import"
    ]
   },
   "deletebatchpredictionjob": {
    "Resources": [
     "batch-prediction"
    ]
   },
   "deletedetector": {
    "Resources": [
     "detector"
    ]
   },
   "deletedetectorversion": {
    "Resources": [
     "detector-version"
    ]
   },
   "deleteentitytype": {
    "Resources": [
     "entity-type"
    ]
   },
   "deleteevent": {
    "Resources": [
     "event-type"
    ]
   },
   "deleteeventsbyeventtype": {
    "Resources": [
     "event-type"
    ]
   },
   "deleteeventtype": {
    "Resources": [
     "event-type"
    ]
   },
   "deleteexternalmodel": {
    "Resources": [
     "external-model"
    ]
   },
   "deletelabel": {
    "Resources": [
     "label"
    ]
   },
   "deletelist": {
    "Resources": [
     "list"
    ]
   },
   "deletemodel": {
    "Resources": [
     "model"
    ]
   },
   "deletemodelversion": {
    "Resources": [
     "model-version"
    ]
   },
   "deleteoutcome": {
    "Resources": [
     "outcome"
    ]
   },
   "deleterule": {
    "Resources": [
     "rule"
    ]
   },
   "deletevariable": {
    "Resources": [
     "variable"
    ]
   },
   "describedetector": {
    "Resources": [
     "detector"
    ]
   },
   "describemodelversions": {
    "Resources": [
     "model-version"
    ]
   },
   "getbatchimportjobs": {
    "Resources": [
     "batch-import"
    ]
   },
   "getbatchimportjobvalidationreport": {
    "Resources": [
     "batch-import"
    ]
   },
   "getbatchpredictionjobs": {
    "Resources": [
     "batch-prediction"
    ]
   },
   "getdeleteeventsbyeventtypestatus": {
    "Resources": [
     "event-type"
    ]
   },
   "getdetectors": {
    "Resources": [
     "detector"
    ]
   },
   "getdetectorversion": {
    "Resources": [
     "detector-version"
    ]
   },
   "getentitytypes": {
    "Resources": [
     "entity-type"
    ]
   },
   "getevent": {
    "Resources": [
     "event-type"
    ]
   },
   "geteventprediction": {
    "Resources": [
     "detector",
     "detector-version",
     "event-type"
    ]
   },
   "geteventpredictionmetadata": {
    "Resources": [
     "detector",
     "detector-version",
     "event-type"
    ]
   },
   "geteventtypes": {
    "Resources": [
     "event-type"
    ]
   },
   "getexternalmodels": {
    "Resources": [
     "external-model"
    ]
   },
   "getkmsencryptionkey": {},
   "getlabels": {
    "Resources": [
     "label"
    ]
   },
   "getlistelements": {
    "Resources": [
     "list"
    ]
   },
   "getlistsmetadata": {
    "Resources": [
     "list"
    ]
   },
   "getmodels": {
    "Resources": [
     "model"
    ]
   },
   "getmodelversion": {
    "Resources": [
     "model-version"
    ]
   },
   "getoutcomes": {
    "Resources": [
     "outcome"
    ]
   },
   "getrules": {
    "Resources": [
     "rule"
    ]
   },
   "getvariables": {
    "Resources": [
     "variable"
    ]
   },
   "listeventpredictions": {
    "Resources": [
     "detector",
     "detector-version",
     "event-type"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "batch-import",
     "batch-prediction",
     "detector",
     "detector-version",
     "entity-type",
     "event-type",
     "external-model",
     "label",
     "list",
     "model",
     "model-version",
     "outcome",
     "rule",
     "variable"
    ]
   },
   "putdetector": {
    "Resources": [
     "detector",
     "event-type"
    ]
   },
   "putentitytype": {
    "Resources": [
     "entity-type"
    ]
   },
   "puteventtype": {
    "Resources": [
     "event-type"
    ]
   },
   "putexternalmodel": {
    "Resources": [
     "event-type",
     "external-model"
    ]
   },
   "putkmsencryptionkey": {},
   "putlabel": {
    "Resources": [
     "label"
    ]
   },
   "putoutcome": {
    "Resources": [
     "outcome"
    ]
   },
   "sendevent": {
    "Resources": [
     "event-type"
    ]
   },
   "tagresource": {
    "Resources": [
     "batch-import",
     "batch-prediction",
     "detector",
     "detector-version",
     "entity-type",
     "event-type",
     "external-model",
     "label",
     "list",
     "model",
     "model-version",
     "outcome",
     "rule",
     "variable",
     "variable"
    ]
   },
   "untagresource": {
    "Resources": [
     "batch-import",
     "batch-prediction",
     "detector",
     "detector-version",
     "entity-type",
     "event-type",
     "external-model",
     "label",
     "list",
     "model",
     "model-version",
     "outcome",
     "rule",
     "variable",
     "variable"
    ]
   },
   "updatedetectorversion": {
    "Resources": [
     "detector",
     "external-model",
     "model-version"
    ]
   },
   "updatedetectorversionmetadata": {
    "Resources": [
     "detector-version"
    ]
   },
   "updatedetectorversionstatus": {
    "Resources": [
     "detector-version"
    ]
   },
   "updateeventlabel": {
    "Resources": [
     "event-type"
    ]
   },
   "updatelist": {
    "Resources": [
     "list"
    ]
   },
   "updatemodel": {
    "Resources": [
     "model"
    ]
   },
   "updatemodelversion": {
    "Resources": [
     "model"
    ]
   },
   "updatemodelversionstatus": {
    "Resources": [
     "model-version"
    ]
   },
   "updaterulemetadata": {
    "Resources": [
     "rule"
    ]
   },
   "updateruleversion": {
    "Resources": [
     "rule"
    ]
   },
   "updatevariable": {
    "Resources": [
     "variable"
    ]
   }
  },
  "Resources": {
   "batch-import": {
    "ARNFormats": [
     "arn:${Partition}:frauddetector:${Region}:${Account}:batch-import/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "batch-prediction": {
    "ARNFormats": [
     "arn:${Partition}:frauddetector:${Region}:${Account}:batch-prediction/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "detector": {
    "ARNFormats": [
     "arn:${Partition}:frauddetector:${Region}:${Account}:detector/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "detector-version": {
    "ARNFormats": [
     "arn:${Partition}:frauddetector:${Region}:${Account}:detector-version/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "entity-type": {
    "ARNFormats": [
     "arn:${Partition}:frauddetector:${Region}:${Account}:entity-type/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "event-type": {
    "ARNFormats": [
     "arn:${Partition}:frauddetector:${Region}:${Account}:event-type/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "external-model": {
    "ARNFormats": [
     "arn:${Partition}:frauddetector:${Region}:${Account}:external-model/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "label": {
    "ARNFormats": [
     "arn:${Partition}:frauddetector:${Region}:${Account}:label/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "list": {
    "ARNFormats": [
     "arn:${Partition}:frauddetector:${Region}:${Account}:list/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "model": {
    "ARNFormats": [
     "arn:${Partition}:frauddetector:${Region}:${Account}:model/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "model-version": {
    "ARNFormats": [
     "arn:${Partition}:frauddetector:${Region}:${Account}:model-version/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "outcome": {
    "ARNFormats": [
     "arn:${Partition}:frauddetector:${Region}:${Account}:outcome/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "rule": {
    "ARNFormats": [
     "arn:${Partition}:frauddetector:${Region}:${Account}:rule/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "variable": {
    "ARNFormats": [
     "arn:${Partition}:frauddetector:${Region}:${Account}:variable/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "freertos": {
  "Actions": {
   "createsoftwareconfiguration": {
    "Resources": [
     "configuration"
    ]
   },
   "createsubscription": {},
   "deletesoftwareconfiguration": {
    "Resources": [
     "configuration"
    ]
   },
   "describehardwareplatform": {},
   "describesoftwareconfiguration": {
    "Resources": [
     "configuration"
    ]
   },
   "describesubscription": {
    "Resources": [
     "subscription"
    ]
   },
   "getemppatchurl": {},
   "getsoftwareurl": {},
   "getsoftwareurlforconfiguration": {},
   "getsubscriptionbillingamount": {},
   "listfreertosversions": {},
   "listhardwareplatforms": {},
   "listhardwarevendors": {},
   "listsoftwareconfigurations": {},
   "listsoftwarepatches": {},
   "listsubscriptionemails": {},
   "listsubscriptions": {},
   "updateemailrecipients": {},
   "updatesoftwareconfiguration": {
    "Resources": [
     "configuration"
    ]
   },
   "verifyemail": {}
  },
  "Resources": {
   "configuration": {
    "ARNFormats": [
     "arn:${Partition}:freertos:${Region}:${Account}:configuration/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "subscription": {
    "ARNFormats": [
     "arn:${Partition}:freertos:${Region}:${Account}:subscription/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "freetier": {
  "Actions": {
   "getfreetieralertpreference": {},
   "getfreetierusage": {},
   "putfreetieralertpreference": {}
  },
  "Resources": {}
 },
 "fsx": {
  "Actions": {
   "associatefilegateway": {
    "Resources": [
     "file-system"
    ]
   },
   "associatefilesystemaliases": {
    "Resources": [
     "file-system"
    ]
   },
   "bypasssnaplockenterpriseretention": {
    "Resources": [
     "volume"
    ]
   },
   "canceldatarepositorytask": {
    "Resources": [
     "task"
    ]
   },
   "copybackup": {
    "Resources": [
     "backup"
    ]
   },
   "copysnapshotandupdatevolume": {
    "Resources": [
     "snapshot",
     "volume"
    ]
   },
   "createbackup": {
    "Resources": [
     "backup",
     "file-system",
     "volume"
    ]
   },
   "createdatarepositoryassociation": {
    "Resources": [
     "association",
     "file-system"
    ]
   },
   "createdatarepositorytask": {
    "Resources": [
     "file-system",
     "task"
    ]
   },
   "createfilecache": {
    "Resources": [
     "association",
     "file-cache"
    ]
   },
   "createfilesystem": {
    "Resources": [
     "file-system"
    ]
   },
   "createfilesystemfrombackup": {
    "Resources": [
     "backup",
     "file-system"
    ]
   },
   "createsnapshot": {
    "Resources": [
     "snapshot",
     "volume"
    ]
   },
   "createstoragevirtualmachine": {
    "Resources": [
     "file-system",
     "storage-virtual-machine"
    ]
   },
   "createvolume": {
    "Resources": [
     "snapshot",
     "volume"
    ]
   },
   "createvolumefrombackup": {
    "Resources": [
     "backup",
     "storage-virtual-machine",
     "volume"
    ]
   },
   "deletebackup": {
    "Resources": [
     "backup"
    ]
   },
   "deletedatarepositoryassociation": {
    "Resources": [
     "association"
    ]
   },
   "deletefilecache": {
    "Resources": [
     "association",
     "file-cache"
    ]
   },
   "deletefilesystem": {
    "Resources": [
     "backup",
     "file-system"
    ]
   },
   "deleteresourcepolicy": {
    "Resources": [
     "volume"
    ]
   },
   "deletesnapshot": {
    "Resources": [
     "snapshot"
    ]
   },
   "deletestoragevirtualmachine": {
    "Resources": [
     "storage-virtual-machine"
    ]
   },
   "deletevolume": {
    "Resources": [
     "backup",
     "volume"
    ]
   },
   "describeassociatedfilegateways": {
    "Resources": [
     "file-system"
    ]
   },
   "describebackups": {},
   "describedatarepositoryassociations": {},
   "describedatarepositorytasks": {},
   "describefilecaches": {},
   "describefilesystemaliases": {
    "Resources": [
     "file-system"
    ]
   },
   "describefilesystems": {},
   "describesharedvpcconfiguration": {},
   "describesnapshots": {},
   "describestoragevirtualmachines": {},
   "describevolumes": {},
   "disassociatefilegateway": {
    "Resources": [
     "file-system"
    ]
   },
   "disassociatefilesystemaliases": {
    "Resources": [
     "file-system"
    ]
   },
   "getresourcepolicy": {
    "Resources": [
     "volume"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "association",
     "backup",
     "file-cache",
     "file-system",
     "snapshot",
     "storage-virtual-machine",
     "task",
     "volume"
    ]
   },
   "managebackupprincipalassociations": {
    "Resources": [
     "backup"
    ]
   },
   "putresourcepolicy": {
    "Resources": [
     "volume"
    ]
   },
   "releasefilesystemnfsv3locks": {
    "Resources": [
     "file-system"
    ]
   },
   "restorevolumefromsnapshot": {
    "Resources": [
     "snapshot",
     "volume"
    ]
   },
   "startmisconfiguredstaterecovery": {
    "Resources": [
     "file-system"
    ]
   },
   "tagresource": {
    "Resources": [
     "association",
     "backup",
     "file-cache",
     "file-system",
     "snapshot",
     "storage-virtual-machine",
     "task",
     "volume"
    ]
   },
   "untagresource": {
    "Resources": [
     "association",
     "backup",
     "file-cache",
     "file-system",
     "snapshot",
     "storage-virtual-machine",
     "task",
     "volume"
    ]
   },
   "updatedatarepositoryassociation": {
    "Resources": [
     "association"
    ]
   },
   "updatefilecache": {
    "Resources": [
     "file-cache"
    ]
   },
   "updatefilesystem": {
    "Resources": [
     "file-system"
    ]
   },
   "updatesharedvpcconfiguration": {},
   "updatesnapshot": {
    "Resources": [
     "snapshot"
    ]
   },
   "updatestoragevirtualmachine": {
    "Resources": [
     "storage-virtual-machine"
    ]
   },
   "updatevolume": {
    "Resources": [
     "volume"
    ]
   }
  },
  "Resources": {
   "association": {
    "ARNFormats": [
     "arn:${Partition}:fsx:${Region}:${Account}:association/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "backup": {
    "ARNFormats": [
     "arn:${Partition}:fsx:${Region}:${Account}:backup/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "file-cache": {
    "ARNFormats": [
     "arn:${Partition}:fsx:${Region}:${Account}:file-cache/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "file-system": {
    "ARNFormats": [
     "arn:${Partition}:fsx:${Region}:${Account}:file-system/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "snapshot": {
    "ARNFormats": [
     "arn:${Partition}:fsx:${Region}:${Account}:snapshot/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "storage-virtual-machine": {
    "ARNFormats": [
     "arn:${Partition}:fsx:${Region}:${Account}:storage-virtual-machine/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "task": {
    "ARNFormats": [
     "arn:${Partition}:fsx:${Region}:${Account}:task/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "volume": {
    "ARNFormats": [
     "arn:${Partition}:fsx:${Region}:${Account}:volume/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "gamelift": {
  "Actions": {
   "acceptmatch": {},
   "claimgameserver": {
    "Resources": [
     "gameServerGroup"
    ]
   },
   "createalias": {},
   "createbuild": {},
   "createcontainerfleet": {},
   "createcontainergroupdefinition": {},
   "createfleet": {},
   "createfleetlocations": {
    "Resources": [
     "containerFleet",
     "fleet"
    ]
   },
   "creategameservergroup": {},
   "creategamesession": {},
   "creategamesessionqueue": {},
   "createlocation": {},
   "creatematchmakingconfiguration": {},
   "creatematchmakingruleset": {},
   "createplayersession": {},
   "createplayersessions": {},
   "createscript": {},
   "createvpcpeeringauthorization": {},
   "createvpcpeeringconnection": {},
   "deletealias": {
    "Resources": [
     "alias"
    ]
   },
   "deletebuild": {
    "Resources": [
     "build"
    ]
   },
   "deletecontainerfleet": {
    "Resources": [
     "containerFleet"
    ]
   },
   "deletecontainergroupdefinition": {
    "Resources": [
     "containerGroupDefinition"
    ]
   },
   "deletefleet": {
    "Resources": [
     "fleet"
    ]
   },
   "deletefleetlocations": {
    "Resources": [
     "containerFleet",
     "fleet"
    ]
   },
   "deletegameservergroup": {
    "Resources": [
     "gameServerGroup"
    ]
   },
   "deletegamesessionqueue": {
    "Resources": [
     "gameSessionQueue"
    ]
   },
   "deletelocation": {
    "Resources": [
     "location"
    ]
   },
   "deletematchmakingconfiguration": {
    "Resources": [
     "matchmakingConfiguration"
    ]
   },
   "deletematchmakingruleset": {
    "Resources": [
     "matchmakingRuleSet"
    ]
   },
   "deletescalingpolicy": {
    "Resources": [
     "containerFleet",
     "fleet"
    ]
   },
   "deletescript": {
    "Resources": [
     "script"
    ]
   },
   "deletevpcpeeringauthorization": {},
   "deletevpcpeeringconnection": {},
   "deregistercompute": {
    "Resources": [
     "fleet"
    ]
   },
   "deregistergameserver": {
    "Resources": [
     "gameServerGroup"
    ]
   },
   "describealias": {
    "Resources": [
     "alias"
    ]
   },
   "describebuild": {
    "Resources": [
     "build"
    ]
   },
   "describecompute": {
    "Resources": [
     "containerFleet",
     "fleet"
    ]
   },
   "describecontainerfleet": {
    "Resources": [
     "containerFleet"
    ]
   },
   "describecontainergroupdefinition": {
    "Resources": [
     "containerGroupDefinition"
    ]
   },
   "describeec2instancelimits": {},
   "describefleetattributes": {},
   "describefleetcapacity": {},
   "describefleetdeployment": {
    "Resources": [
     "containerFleet"
    ]
   },
   "describefleetevents": {
    "Resources": [
     "containerFleet",
     "fleet"
    ]
   },
   "describefleetlocationattributes": {
    "Resources": [
     "containerFleet",
     "fleet"
    ]
   },
   "describefleetlocationcapacity": {
    "Resources": [
     "containerFleet",
     "fleet"
    ]
   },
   "describefleetlocationutilization": {
    "Resources": [
     "fleet"
    ]
   },
   "describefleetportsettings": {
    "Resources": [
     "fleet"
    ]
   },
   "describefleetutilization": {},
   "describegameserver": {
    "Resources": [
     "gameServerGroup"
    ]
   },
   "describegameservergroup": {
    "Resources": [
     "gameServerGroup"
    ]
   },
   "describegameserverinstances": {
    "Resources": [
     "gameServerGroup"
    ]
   },
   "describegamesessiondetails": {},
   "describegamesessionplacement": {},
   "describegamesessionqueues": {},
   "describegamesessions": {},
   "describeinstances": {
    "Resources": [
     "containerFleet",
     "fleet"
    ]
   },
   "describematchmaking": {},
   "describematchmakingconfigurations": {},
   "describematchmakingrulesets": {},
   "describeplayersessions": {},
   "describeruntimeconfiguration": {
    "Resources": [
     "fleet"
    ]
   },
   "describescalingpolicies": {
    "Resources": [
     "containerFleet",
     "fleet"
    ]
   },
   "describescript": {
    "Resources": [
     "script"
    ]
   },
   "describevpcpeeringauthorizations": {},
   "describevpcpeeringconnections": {},
   "getcomputeaccess": {
    "Resources": [
     "containerFleet",
     "fleet"
    ]
   },
   "getcomputeauthtoken": {
    "Resources": [
     "containerFleet",
     "fleet"
    ]
   },
   "getgamesessionlogurl": {},
   "getinstanceaccess": {
    "Resources": [
     "fleet"
    ]
   },
   "listaliases": {},
   "listbuilds": {},
   "listcompute": {
    "Resources": [
     "containerFleet",
     "fleet"
    ]
   },
   "listcontainerfleets": {},
   "listcontainergroupdefinitions": {},
   "listcontainergroupdefinitionversions": {
    "Resources": [
     "containerGroupDefinition"
    ]
   },
   "listfleetdeployments": {},
   "listfleets": {},
   "listgameservergroups": {},
   "listgameservers": {
    "Resources": [
     "gameServerGroup"
    ]
   },
   "listlocations": {},
   "listscripts": {},
   "listtagsforresource": {
    "Resources": [
     "alias",
     "build",
     "containerFleet",
     "containerGroupDefinition",
     "fleet",
     "gameServerGroup",
     "gameSessionQueue",
     "location",
     "matchmakingConfiguration",
     "matchmakingRuleSet",
     "script"
    ]
   },
   "putscalingpolicy": {
    "Resources": [
     "containerFleet",
     "fleet"
    ]
   },
   "registercompute": {
    "Resources": [
     "fleet"
    ]
   },
   "registergameserver": {
    "Resources": [
     "gameServerGroup"
    ]
   },
   "requestuploadcredentials": {
    "Resources": [
     "build"
    ]
   },
   "resolvealias": {
    "Resources": [
     "alias"
    ]
   },
   "resumegameservergroup": {
    "Resources": [
     "gameServerGroup"
    ]
   },
   "searchgamesessions": {},
   "startfleetactions": {
    "Resources": [
     "containerFleet",
     "fleet"
    ]
   },
   "startgamesessionplacement": {
    "Resources": [
     "gameSessionQueue"
    ]
   },
   "startmatchbackfill": {},
   "startmatchmaking": {},
   "stopfleetactions": {
    "Resources": [
     "containerFleet",
     "fleet"
    ]
   },
   "stopgamesessionplacement": {},
   "stopmatchmaking": {},
   "suspendgameservergroup": {
    "Resources": [
     "gameServerGroup"
    ]
   },
   "tagresource": {
    "Resources": [
     "alias",
     "build",
     "containerFleet",
     "containerGroupDefinition",
     "fleet",
     "gameServerGroup",
     "gameSessionQueue",
     "location",
     "matchmakingConfiguration",
     "matchmakingRuleSet",
     "script"
    ]
   },
   "terminategamesession": {},
   "untagresource": {
    "Resources": [
     "alias",
     "build",
     "containerFleet",
     "containerGroupDefinition",
     "fleet",
     "gameServerGroup",
     "gameSessionQueue",
     "location",
     "matchmakingConfiguration",
     "matchmakingRuleSet",
     "script"
    ]
   },
   "updatealias": {
    "Resources": [
     "alias"
    ]
   },
   "updatebuild": {
    "Resources": [
     "build"
    ]
   },
   "updatecontainerfleet": {
    "Resources": [
     "containerFleet"
    ]
   },
   "updatecontainergroupdefinition": {
    "Resources": [
     "containerGroupDefinition"
    ]
   },
   "updatefleetattributes": {
    "Resources": [
     "fleet"
    ]
   },
   "updatefleetcapacity": {
    "Resources": [
     "containerFleet",
     "fleet"
    ]
   },
   "updatefleetportsettings": {
    "Resources": [
     "fleet"
    ]
   },
   "updategameserver": {
    "Resources": [
     "gameServerGroup"
    ]
   },
   "updategameservergroup": {
    "Resources": [
     "gameServerGroup"
    ]
   },
   "updategamesession": {},
   "updategamesessionqueue": {
    "Resources": [
     "gameSessionQueue"
    ]
   },
   "updatematchmakingconfiguration": {
    "Resources": [
     "matchmakingConfiguration"
    ]
   },
   "updateruntimeconfiguration": {
    "Resources": [
     "fleet"
    ]
   },
   "updatescript": {
    "Resources": [
     "script"
    ]
   },
   "validatematchmakingruleset": {}
  },
  "Resources": {
   "alias": {
    "ARNFormats": [
     "arn:${Partition}:gamelift:${Region}::alias/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "build": {
    "ARNFormats": [
     "arn:${Partition}:gamelift:${Region}:${Account}:build/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "containerfleet": {
    "ARNFormats": [
     "arn:${Partition}:gamelift:${Region}:${Account}:containerfleet/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "containergroupdefinition": {
    "ARNFormats": [
     "arn:${Partition}:gamelift:${Region}:${Account}:containergroupdefinition/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "fleet": {
    "ARNFormats": [
     "arn:${Partition}:gamelift:${Region}:${Account}:fleet/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "gameservergroup": {
    "ARNFormats": [
     "arn:${Partition}:gamelift:${Region}:${Account}:gameservergroup/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "gamesessionqueue": {
    "ARNFormats": [
     "arn:${Partition}:gamelift:${Region}:${Account}:gamesessionqueue/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "location": {
    "ARNFormats": [
     "arn:${Partition}:gamelift:${Region}:${Account}:location/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "matchmakingconfiguration": {
    "ARNFormats": [
     "arn:${Partition}:gamelift:${Region}:${Account}:matchmakingconfiguration/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "matchmakingruleset": {
    "ARNFormats": [
     "arn:${Partition}:gamelift:${Region}:${Account}:matchmakingruleset/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "script": {
    "ARNFormats": [
     "arn:${Partition}:gamelift:${Region}:${Account}:script/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "gameliftstreams": {
  "Actions": {
   "addstreamgrouplocations": {
    "Resources": [
     "stream group"
    ]
   },
   "associateapplications": {
    "Resources": [
     "application",
     "stream group"
    ]
   },
   "createapplication": {},
   "createstreamgroup": {},
   "createstreamsessionconnection": {
    "Resources": [
     "stream group"
    ]
   },
   "deleteapplication": {
    "Resources": [
     "application"
    ]
   },
   "deletestreamgroup": {
    "Resources": [
     "stream group"
    ]
   },
   "disassociateapplications": {
    "Resources": [
     "application",
     "stream group"
    ]
   },
   "exportstreamsessionfiles": {
    "Resources": [
     "stream group"
    ]
   },
   "getapplication": {
    "Resources": [
     "application"
    ]
   },
   "getstreamgroup": {
    "Resources": [
     "stream group"
    ]
   },
   "getstreamsession": {
    "Resources": [
     "stream group"
    ]
   },
   "listapplications": {},
   "liststreamgroups": {},
   "liststreamsessions": {
    "Resources": [
     "stream group"
    ]
   },
   "liststreamsessionsbyaccount": {},
   "listtagsforresource": {
    "Resources": [
     "application",
     "stream group"
    ]
   },
   "removestreamgrouplocations": {
    "Resources": [
     "stream group"
    ]
   },
   "startstreamsession": {
    "Resources": [
     "stream group"
    ]
   },
   "tagresource": {
    "Resources": [
     "application",
     "stream group"
    ]
   },
   "terminatestreamsession": {
    "Resources": [
     "stream group"
    ]
   },
   "untagresource": {
    "Resources": [
     "application",
     "stream group"
    ]
   },
   "updateapplication": {
    "Resources": [
     "application"
    ]
   },
   "updatestreamgroup": {
    "Resources": [
     "stream group"
    ]
   }
  },
  "Resources": {
   "application": {
    "ARNFormats": [
     "arn:${Partition}:gameliftstreams:${Region}:${Account}:application/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "stream group": {
    "ARNFormats": [
     "arn:${Partition}:gameliftstreams:${Region}:${Account}:streamgroup/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "geo": {
  "Actions": {
   "associatetrackerconsumer": {
    "Resources": [
     "tracker"
    ]
   },
   "batchdeletedevicepositionhistory": {
    "Resources": [
     "tracker"
    ]
   },
   "batchdeletegeofence": {
    "Resources": [
     "geofence-collection"
    ]
   },
   "batchevaluategeofences": {
    "Resources": [
     "geofence-collection"
    ]
   },
   "batchgetdeviceposition": {
    "Resources": [
     "tracker"
    ]
   },
   "batchputgeofence": {
    "Resources": [
     "geofence-collection"
    ]
   },
   "batchupdatedeviceposition": {
    "Resources": [
     "tracker"
    ]
   },
   "calculateroute": {
    "Resources": [
     "route-calculator"
    ]
   },
   "calculateroutematrix": {
    "Resources": [
     "route-calculator"
    ]
   },
   "creategeofencecollection": {
    "Resources": [
     "geofence-collection"
    ]
   },
   "createkey": {
    "Resources": [
     "api-key"
    ]
   },
   "createmap": {
    "Resources": [
     "map"
    ]
   },
   "createplaceindex": {
    "Resources": [
     "place-index"
    ]
   },
   "createroutecalculator": {
    "Resources": [
     "route-calculator"
    ]
   },
   "createtracker": {
    "Resources": [
     "tracker"
    ]
   },
   "deletegeofencecollection": {
    "Resources": [
     "geofence-collection"
    ]
   },
   "deletekey": {
    "Resources": [
     "api-key"
    ]
   },
   "deletemap": {
    "Resources": [
     "map"
    ]
   },
   "deleteplaceindex": {
    "Resources": [
     "place-index"
    ]
   },
   "deleteroutecalculator": {
    "Resources": [
     "route-calculator"
    ]
   },
   "deletetracker": {
    "Resources": [
     "tracker"
    ]
   },
   "describegeofencecollection": {
    "Resources": [
     "geofence-collection"
    ]
   },
   "describekey": {
    "Resources": [
     "api-key"
    ]
   },
   "describemap": {
    "Resources": [
     "map"
    ]
   },
   "describeplaceindex": {
    "Resources": [
     "place-index"
    ]
   },
   "describeroutecalculator": {
    "Resources": [
     "route-calculator"
    ]
   },
   "describetracker": {
    "Resources": [
     "tracker"
    ]
   },
   "disassociatetrackerconsumer": {
    "Resources": [
     "tracker"
    ]
   },
   "forecastgeofenceevents": {
    "Resources": [
     "geofence-collection"
    ]
   },
   "getdeviceposition": {
    "Resources": [
     "tracker"
    ]
   },
   "getdevicepositionhistory": {
    "Resources": [
     "tracker"
    ]
   },
   "getgeofence": {
    "Resources": [
     "geofence-collection"
    ]
   },
   "getmapglyphs": {
    "Resources": [
     "map"
    ]
   },
   "getmapsprites": {
    "Resources": [
     "map"
    ]
   },
   "getmapstyledescriptor": {
    "Resources": [
     "map"
    ]
   },
   "getmaptile": {
    "Resources": [
     "map"
    ]
   },
   "getplace": {
    "Resources": [
     "place-index"
    ]
   },
   "listdevicepositions": {
    "Resources": [
     "tracker"
    ]
   },
   "listgeofencecollections": {
    "Resources": [
     "geofence-collection"
    ]
   },
   "listgeofences": {
    "Resources": [
     "geofence-collection"
    ]
   },
   "listkeys": {
    "Resources": [
     "api-key"
    ]
   },
   "listmaps": {
    "Resources": [
     "map"
    ]
   },
   "listplaceindexes": {
    "Resources": [
     "place-index"
    ]
   },
   "listroutecalculators": {
    "Resources": [
     "route-calculator"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "api-key",
     "geofence-collection",
     "map",
     "place-index",
     "route-calculator",
     "tracker"
    ]
   },
   "listtrackerconsumers": {
    "Resources": [
     "tracker"
    ]
   },
   "listtrackers": {
    "Resources": [
     "tracker"
    ]
   },
   "putgeofence": {
    "Resources": [
     "geofence-collection"
    ]
   },
   "searchplaceindexforposition": {
    "Resources": [
     "place-index"
    ]
   },
   "searchplaceindexforsuggestions": {
    "Resources": [
     "place-index"
    ]
   },
   "searchplaceindexfortext": {
    "Resources": [
     "place-index"
    ]
   },
   "tagresource": {
    "Resources": [
     "api-key",
     "geofence-collection",
     "map",
     "place-index",
     "route-calculator",
     "tracker"
    ]
   },
   "untagresource": {
    "Resources": [
     "api-key",
     "geofence-collection",
     "map",
     "place-index",
     "route-calculator",
     "tracker"
    ]
   },
   "updategeofencecollection": {
    "Resources": [
     "geofence-collection"
    ]
   },
   "updatekey": {
    "Resources": [
     "api-key"
    ]
   },
   "updatemap": {
    "Resources": [
     "map"
    ]
   },
   "updateplaceindex": {
    "Resources": [
     "place-index"
    ]
   },
   "updateroutecalculator": {
    "Resources": [
     "route-calculator"
    ]
   },
   "updatetracker": {
    "Resources": [
     "tracker"
    ]
   },
   "verifydeviceposition": {
    "Resources": [
     "tracker"
    ]
   }
  },
  "Resources": {
   "api-key": {
    "ARNFormats": [
     "arn:${Partition}:geo:${Region}:${Account}:api-key/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "geofence-collection": {
    "ARNFormats": [
     "arn:${Partition}:geo:${Region}:${Account}:geofence-collection/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "geo:GeofenceIds"
    ]
   },
   "map": {
    "ARNFormats": [
     "arn:${Partition}:geo:${Region}:${Account}:map/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "place-index": {
    "ARNFormats": [
     "arn:${Partition}:geo:${Region}:${Account}:place-index/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "route-calculator": {
    "ARNFormats": [
     "arn:${Partition}:geo:${Region}:${Account}:route-calculator/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "tracker": {
    "ARNFormats": [
     "arn:${Partition}:geo:${Region}:${Account}:tracker/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "geo:DeviceIds"
    ]
   }
  }
 },
 "geo-maps": {
  "Actions": {
   "getstaticmap": {
    "Resources": [
     "provider"
    ]
   },
   "gettile": {
    "Resources": [
     "provider"
    ]
   }
  },
  "Resources": {
   "provider": {
    "ARNFormats": [
     "arn:${Partition}:geo-maps:${Region}::provider/default"
    ]
   }
  }
 },
 "geo-places": {
  "Actions": {
   "autocomplete": {
    "Resources": [
     "provider"
    ]
   },
   "geocode": {
    "Resources": [
     "provider"
    ]
   },
   "getplace": {
    "Resources": [
     "provider"
    ]
   },
   "reversegeocode": {
    "Resources": [
     "provider"
    ]
   },
   "searchnearby": {
    "Resources": [
     "provider"
    ]
   },
   "searchtext": {
    "Resources": [
     "provider"
    ]
   },
   "suggest": {
    "Resources": [
     "provider"
    ]
   }
  },
  "Resources": {
   "provider": {
    "ARNFormats": [
     "arn:${Partition}:geo-places:${Region}::provider/default"
    ]
   }
  }
 },
 "geo-routes": {
  "Actions": {
   "calculateisolines": {
    "Resources": [
     "provider"
    ]
   },
   "calculateroutematrix": {
    "Resources": [
     "provider"
    ]
   },
   "calculateroutes": {
    "Resources": [
     "provider"
    ]
   },
   "optimizewaypoints": {
    "Resources": [
     "provider"
    ]
   },
   "snaptoroads": {
    "Resources": [
     "provider"
    ]
   }
  },
  "Resources": {
   "provider": {
    "ARNFormats": [
     "arn:${Partition}:geo-routes:${Region}::provider/default"
    ]
   }
  }
 },
 "glacier": {
  "Actions": {
   "abortmultipartupload": {
    "Resources": [
     "vault"
    ]
   },
   "abortvaultlock": {
    "Resources": [
     "vault"
    ]
   },
   "addtagstovault": {
    "Resources": [
     "vault"
    ]
   },
   "completemultipartupload": {
    "Resources": [
     "vault"
    ]
   },
   "completevaultlock": {
    "Resources": [
     "vault"
    ]
   },
   "createvault": {
    "Resources": [
     "vault"
    ]
   },
   "deletearchive": {
    "Resources": [
     "vault"
    ]
   },
   "deletevault": {
    "Resources": [
     "vault"
    ]
   },
   "deletevaultaccesspolicy": {
    "Resources": [
     "vault"
    ]
   },
   "deletevaultnotifications": {
    "Resources": [
     "vault"
    ]
   },
   "describejob": {
    "Resources": [
     "vault"
    ]
   },
   "describevault": {
    "Resources": [
     "vault"
    ]
   },
   "getdataretrievalpolicy": {},
   "getjoboutput": {
    "Resources": [
     "vault"
    ]
   },
   "getvaultaccesspolicy": {
    "Resources": [
     "vault"
    ]
   },
   "getvaultlock": {
    "Resources": [
     "vault"
    ]
   },
   "getvaultnotifications": {
    "Resources": [
     "vault"
    ]
   },
   "initiatejob": {
    "Resources": [
     "vault"
    ]
   },
   "initiatemultipartupload": {
    "Resources": [
     "vault"
    ]
   },
   "initiatevaultlock": {
    "Resources": [
     "vault"
    ]
   },
   "listjobs": {
    "Resources": [
     "vault"
    ]
   },
   "listmultipartuploads": {
    "Resources": [
     "vault"
    ]
   },
   "listparts": {
    "Resources": [
     "vault"
    ]
   },
   "listprovisionedcapacity": {},
   "listtagsforvault": {
    "Resources": [
     "vault"
    ]
   },
   "listvaults": {},
   "purchaseprovisionedcapacity": {},
   "removetagsfromvault": {
    "Resources": [
     "vault"
    ]
   },
   "setdataretrievalpolicy": {},
   "setvaultaccesspolicy": {
    "Resources": [
     "vault"
    ]
   },
   "setvaultnotifications": {
    "Resources": [
     "vault"
    ]
   },
   "uploadarchive": {
    "Resources": [
     "vault"
    ]
   },
   "uploadmultipartpart": {
    "Resources": [
     "vault"
    ]
   }
  },
  "Resources": {
   "vault": {
    "ARNFormats": [
     "arn:${Partition}:glacier:${Region}:${Account}:vaults/.*"
    ]
   }
  }
 },
 "globalaccelerator": {
  "Actions": {
   "addcustomroutingendpoints": {
    "Resources": [
     "endpointgroup"
    ]
   },
   "addendpoints": {
    "Resources": [
     "endpointgroup"
    ]
   },
   "advertisebyoipcidr": {},
   "allowcustomroutingtraffic": {
    "Resources": [
     "endpointgroup"
    ]
   },
   "createaccelerator": {},
   "createcrossaccountattachment": {},
   "createcustomroutingaccelerator": {},
   "createcustomroutingendpointgroup": {
    "Resources": [
     "listener"
    ]
   },
   "createcustomroutinglistener": {
    "Resources": [
     "accelerator"
    ]
   },
   "createendpointgroup": {
    "Resources": [
     "listener"
    ]
   },
   "createlistener": {
    "Resources": [
     "accelerator"
    ]
   },
   "deleteaccelerator": {
    "Resources": [
     "accelerator"
    ]
   },
   "deletecrossaccountattachment": {
    "Resources": [
     "attachment"
    ]
   },
   "deletecustomroutingaccelerator": {
    "Resources": [
     "accelerator"
    ]
   },
   "deletecustomroutingendpointgroup": {
    "Resources": [
     "endpointgroup"
    ]
   },
   "deletecustomroutinglistener": {
    "Resources": [
     "listener"
    ]
   },
   "deleteendpointgroup": {
    "Resources": [
     "endpointgroup"
    ]
   },
   "deletelistener": {
    "Resources": [
     "listener"
    ]
   },
   "denycustomroutingtraffic": {
    "Resources": [
     "endpointgroup"
    ]
   },
   "deprovisionbyoipcidr": {},
   "describeaccelerator": {
    "Resources": [
     "accelerator"
    ]
   },
   "describeacceleratorattributes": {
    "Resources": [
     "accelerator"
    ]
   },
   "describecrossaccountattachment": {
    "Resources": [
     "attachment"
    ]
   },
   "describecustomroutingaccelerator": {
    "Resources": [
     "accelerator"
    ]
   },
   "describecustomroutingacceleratorattributes": {
    "Resources": [
     "accelerator"
    ]
   },
   "describecustomroutingendpointgroup": {
    "Resources": [
     "endpointgroup"
    ]
   },
   "describecustomroutinglistener": {
    "Resources": [
     "listener"
    ]
   },
   "describeendpointgroup": {
    "Resources": [
     "endpointgroup"
    ]
   },
   "describelistener": {
    "Resources": [
     "listener"
    ]
   },
   "listaccelerators": {},
   "listbyoipcidrs": {},
   "listcrossaccountattachments": {},
   "listcrossaccountresourceaccounts": {},
   "listcrossaccountresources": {},
   "listcustomroutingaccelerators": {},
   "listcustomroutingendpointgroups": {
    "Resources": [
     "listener"
    ]
   },
   "listcustomroutinglisteners": {
    "Resources": [
     "accelerator"
    ]
   },
   "listcustomroutingportmappings": {
    "Resources": [
     "accelerator"
    ]
   },
   "listcustomroutingportmappingsbydestination": {},
   "listendpointgroups": {
    "Resources": [
     "listener"
    ]
   },
   "listlisteners": {
    "Resources": [
     "accelerator"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "accelerator",
     "attachment"
    ]
   },
   "provisionbyoipcidr": {},
   "removecustomroutingendpoints": {
    "Resources": [
     "endpointgroup"
    ]
   },
   "removeendpoints": {
    "Resources": [
     "endpointgroup"
    ]
   },
   "tagresource": {
    "Resources": [
     "accelerator",
     "attachment"
    ]
   },
   "untagresource": {
    "Resources": [
     "accelerator",
     "attachment"
    ]
   },
   "updateaccelerator": {
    "Resources": [
     "accelerator"
    ]
   },
   "updateacceleratorattributes": {
    "Resources": [
     "accelerator"
    ]
   },
   "updatecrossaccountattachment": {
    "Resources": [
     "attachment"
    ]
   },
   "updatecustomroutingaccelerator": {
    "Resources": [
     "accelerator"
    ]
   },
   "updatecustomroutingacceleratorattributes": {
    "Resources": [
     "accelerator"
    ]
   },
   "updatecustomroutinglistener": {
    "Resources": [
     "listener"
    ]
   },
   "updateendpointgroup": {
    "Resources": [
     "endpointgroup"
    ]
   },
   "updatelistener": {
    "Resources": [
     "listener"
    ]
   },
   "withdrawbyoipcidr": {}
  },
  "Resources": {
   "accelerator": {
    "ARNFormats": [
     "arn:${Partition}:globalaccelerator::${Account}:accelerator/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "attachment": {
    "ARNFormats": [
     "arn:${Partition}:globalaccelerator::${Account}:attachment/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "endpointgroup": {
    "ARNFormats": [
     "arn:${Partition}:globalaccelerator::${Account}:accelerator/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "listener": {
    "ARNFormats": [
     "arn:${Partition}:globalaccelerator::${Account}:accelerator/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "glue": {
  "Actions": {
   "authorizeinboundintegration": {
    "Resources": [
     "integration"
    ]
   },
   "batchcreatepartition": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "batchdeleteconnection": {
    "Resources": [
     "connection",
     "rootcatalog"
    ]
   },
   "batchdeletepartition": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "batchdeletetable": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "batchdeletetableversion": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "batchgetblueprints": {
    "Resources": [
     "blueprint"
    ]
   },
   "batchgetcrawlers": {
    "Resources": [
     "crawler"
    ]
   },
   "batchgetcustomentitytypes": {},
   "batchgetdevendpoints": {
    "Resources": [
     "devendpoint"
    ]
   },
   "batchgetjobs": {
    "Resources": [
     "job"
    ]
   },
   "batchgetpartition": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "batchgetstagefiles": {},
   "batchgettableoptimizer": {
    "Resources": [
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "batchgettriggers": {
    "Resources": [
     "trigger"
    ]
   },
   "batchgetworkflows": {
    "Resources": [
     "workflow"
    ]
   },
   "batchstopjobrun": {
    "Resources": [
     "job"
    ]
   },
   "batchupdatepartition": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "canceldataqualityrulerecommendationrun": {
    "Resources": [
     "dataQualityRuleset"
    ]
   },
   "canceldataqualityrulesetevaluationrun": {
    "Resources": [
     "dataQualityRuleset"
    ]
   },
   "cancelmltaskrun": {
    "Resources": [
     "mlTransform"
    ]
   },
   "cancelstatement": {
    "Resources": [
     "session"
    ]
   },
   "checkschemaversionvalidity": {},
   "createblueprint": {
    "Resources": [
     "blueprint"
    ]
   },
   "createcatalog": {
    "Resources": [
     "catalog",
     "rootcatalog"
    ]
   },
   "createclassifier": {},
   "createcolumnstatisticstasksettings": {
    "Resources": [
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "createconnection": {
    "Resources": [
     "rootcatalog"
    ]
   },
   "createcrawler": {},
   "createcustomentitytype": {},
   "createdatabase": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog"
    ]
   },
   "createdataqualityruleset": {},
   "createdevendpoint": {},
   "createinboundintegration": {},
   "createintegration": {
    "Resources": [
     "catalog",
     "connection",
     "database",
     "integration"
    ]
   },
   "createintegrationresourceproperty": {
    "Resources": [
     "catalog",
     "connection",
     "database"
    ]
   },
   "createintegrationtableproperties": {
    "Resources": [
     "catalog",
     "connection",
     "database"
    ]
   },
   "createjob": {
    "Resources": [
     "job"
    ]
   },
   "createmltransform": {},
   "createpartition": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "createpartitionindex": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "createregistry": {
    "Resources": [
     "registry"
    ]
   },
   "createschema": {
    "Resources": [
     "registry",
     "schema"
    ]
   },
   "createscript": {},
   "createsecurityconfiguration": {},
   "createsession": {
    "Resources": [
     "session"
    ]
   },
   "createtable": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "createtableoptimizer": {
    "Resources": [
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "createtrigger": {
    "Resources": [
     "trigger"
    ]
   },
   "createusageprofile": {
    "Resources": [
     "usageProfile"
    ]
   },
   "createuserdefinedfunction": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog"
    ]
   },
   "createworkflow": {
    "Resources": [
     "workflow"
    ]
   },
   "deleteblueprint": {
    "Resources": [
     "blueprint"
    ]
   },
   "deletecatalog": {
    "Resources": [
     "catalog",
     "rootcatalog"
    ]
   },
   "deleteclassifier": {},
   "deletecolumnstatisticsforpartition": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "deletecolumnstatisticsfortable": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "deletecolumnstatisticstasksettings": {
    "Resources": [
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "deleteconnection": {
    "Resources": [
     "connection",
     "rootcatalog"
    ]
   },
   "deletecrawler": {
    "Resources": [
     "crawler"
    ]
   },
   "deletecustomentitytype": {},
   "deletedatabase": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table",
     "userdefinedfunction"
    ]
   },
   "deletedataqualityruleset": {
    "Resources": [
     "dataQualityRuleset"
    ]
   },
   "deletedevendpoint": {
    "Resources": [
     "devendpoint"
    ]
   },
   "deleteintegration": {
    "Resources": [
     "integration"
    ]
   },
   "deleteintegrationtableproperties": {
    "Resources": [
     "catalog",
     "connection",
     "database"
    ]
   },
   "deletejob": {
    "Resources": [
     "job"
    ]
   },
   "deletemltransform": {
    "Resources": [
     "mlTransform"
    ]
   },
   "deletepartition": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "deletepartitionindex": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "deleteregistry": {
    "Resources": [
     "registry"
    ]
   },
   "deleteresourcepolicy": {
    "Resources": [
     "rootcatalog"
    ]
   },
   "deleteschema": {
    "Resources": [
     "registry",
     "schema"
    ]
   },
   "deleteschemaversions": {
    "Resources": [
     "registry",
     "schema"
    ]
   },
   "deletesecurityconfiguration": {},
   "deletesession": {
    "Resources": [
     "session"
    ]
   },
   "deletetable": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "deletetableoptimizer": {
    "Resources": [
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "deletetableversion": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "deletetrigger": {
    "Resources": [
     "trigger"
    ]
   },
   "deleteusageprofile": {
    "Resources": [
     "usageProfile"
    ]
   },
   "deleteuserdefinedfunction": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "userdefinedfunction"
    ]
   },
   "deleteworkflow": {
    "Resources": [
     "workflow"
    ]
   },
   "deregisterdatapreview": {},
   "describeconnectiontype": {},
   "describeentity": {
    "Resources": [
     "connection",
     "rootcatalog"
    ]
   },
   "describeinboundintegrations": {},
   "describeintegrations": {
    "Resources": [
     "integration"
    ]
   },
   "getblueprint": {
    "Resources": [
     "blueprint"
    ]
   },
   "getblueprintrun": {
    "Resources": [
     "blueprint"
    ]
   },
   "getblueprintruns": {
    "Resources": [
     "blueprint"
    ]
   },
   "getcatalog": {
    "Resources": [
     "catalog",
     "rootcatalog"
    ]
   },
   "getcatalogimportstatus": {
    "Resources": [
     "rootcatalog"
    ]
   },
   "getcatalogs": {
    "Resources": [
     "catalog",
     "rootcatalog"
    ]
   },
   "getclassifier": {},
   "getclassifiers": {},
   "getcolumnstatisticsforpartition": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "getcolumnstatisticsfortable": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "getcolumnstatisticstaskrun": {},
   "getcolumnstatisticstaskruns": {},
   "getcolumnstatisticstasksettings": {},
   "getcompletion": {
    "Resources": [
     "completion"
    ]
   },
   "getconnection": {
    "Resources": [
     "connection",
     "rootcatalog"
    ]
   },
   "getconnections": {
    "Resources": [
     "connection",
     "rootcatalog"
    ]
   },
   "getcrawler": {
    "Resources": [
     "crawler"
    ]
   },
   "getcrawlermetrics": {},
   "getcrawlers": {},
   "getcustomentitytype": {},
   "getdashboardurl": {
    "Resources": [
     "session"
    ]
   },
   "getdatabase": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog"
    ]
   },
   "getdatabases": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog"
    ]
   },
   "getdatacatalogencryptionsettings": {
    "Resources": [
     "rootcatalog"
    ]
   },
   "getdataflowgraph": {},
   "getdatapreviewstatement": {},
   "getdataqualitymodel": {
    "Resources": [
     "dataQualityRuleset",
     "job"
    ]
   },
   "getdataqualitymodelresult": {
    "Resources": [
     "dataQualityRuleset",
     "job"
    ]
   },
   "getdataqualityresult": {
    "Resources": [
     "dataQualityRuleset"
    ]
   },
   "getdataqualityrulerecommendationrun": {
    "Resources": [
     "dataQualityRuleset"
    ]
   },
   "getdataqualityruleset": {
    "Resources": [
     "dataQualityRuleset"
    ]
   },
   "getdataqualityrulesetevaluationrun": {
    "Resources": [
     "dataQualityRuleset"
    ]
   },
   "getdevendpoint": {
    "Resources": [
     "devendpoint"
    ]
   },
   "getdevendpoints": {},
   "getentityrecords": {
    "Resources": [
     "catalog",
     "connection"
    ]
   },
   "getenvironment": {},
   "getexecutors": {},
   "getexecutorsthreads": {},
   "getgeneratedcode": {},
   "getintegrationresourceproperty": {
    "Resources": [
     "catalog",
     "connection",
     "database"
    ]
   },
   "getintegrationtableproperties": {
    "Resources": [
     "catalog",
     "connection",
     "database"
    ]
   },
   "getjob": {
    "Resources": [
     "job"
    ]
   },
   "getjobbookmark": {},
   "getjobrun": {
    "Resources": [
     "job"
    ]
   },
   "getjobruns": {
    "Resources": [
     "job"
    ]
   },
   "getjobs": {},
   "getjobupgradeanalysis": {
    "Resources": [
     "job"
    ]
   },
   "getlogparsingstatus": {},
   "getmapping": {},
   "getmltaskrun": {
    "Resources": [
     "mlTransform"
    ]
   },
   "getmltaskruns": {
    "Resources": [
     "mlTransform"
    ]
   },
   "getmltransform": {
    "Resources": [
     "mlTransform"
    ]
   },
   "getmltransforms": {
    "Resources": [
     "mlTransform"
    ]
   },
   "getnotebookinstancestatus": {},
   "getpartition": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "getpartitionindexes": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "getpartitions": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "getplan": {},
   "getqueries": {},
   "getquery": {},
   "getrecipeaction": {},
   "getregistry": {
    "Resources": [
     "registry"
    ]
   },
   "getresourcepolicies": {
    "Resources": [
     "rootcatalog"
    ]
   },
   "getresourcepolicy": {
    "Resources": [
     "rootcatalog"
    ]
   },
   "getschema": {
    "Resources": [
     "registry",
     "schema"
    ]
   },
   "getschemabydefinition": {
    "Resources": [
     "registry",
     "schema"
    ]
   },
   "getschemaversion": {
    "Resources": [
     "registry",
     "schema"
    ]
   },
   "getschemaversionsdiff": {
    "Resources": [
     "registry",
     "schema"
    ]
   },
   "getsecurityconfiguration": {},
   "getsecurityconfigurations": {},
   "getsession": {
    "Resources": [
     "session"
    ]
   },
   "getstage": {},
   "getstageattempt": {},
   "getstageattempttasklist": {},
   "getstageattempttasksummary": {},
   "getstagefiles": {},
   "getstages": {},
   "getstatement": {
    "Resources": [
     "session"
    ]
   },
   "getstorage": {},
   "getstorageunit": {},
   "gettable": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "gettableoptimizer": {
    "Resources": [
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "gettables": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "gettableversion": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "gettableversions": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "gettags": {
    "Resources": [
     "blueprint",
     "crawler",
     "customEntityType",
     "devendpoint",
     "job",
     "trigger",
     "usageProfile",
     "workflow"
    ]
   },
   "gettrigger": {
    "Resources": [
     "trigger"
    ]
   },
   "gettriggers": {},
   "getusageprofile": {
    "Resources": [
     "usageProfile"
    ]
   },
   "getuserdefinedfunction": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "userdefinedfunction"
    ]
   },
   "getuserdefinedfunctions": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "userdefinedfunction"
    ]
   },
   "getworkflow": {
    "Resources": [
     "workflow"
    ]
   },
   "getworkflowrun": {
    "Resources": [
     "workflow"
    ]
   },
   "getworkflowrunproperties": {
    "Resources": [
     "workflow"
    ]
   },
   "getworkflowruns": {
    "Resources": [
     "workflow"
    ]
   },
   "gluenotebookauthorize": {},
   "gluenotebookrefreshcredentials": {},
   "importcatalogtoglue": {
    "Resources": [
     "rootcatalog"
    ]
   },
   "listblueprints": {},
   "listcolumnstatisticstaskruns": {},
   "listconnectiontypes": {},
   "listcrawlers": {},
   "listcrawls": {
    "Resources": [
     "crawler"
    ]
   },
   "listcustomentitytypes": {},
   "listdataqualityresults": {
    "Resources": [
     "dataQualityRuleset"
    ]
   },
   "listdataqualityrulerecommendationruns": {
    "Resources": [
     "dataQualityRuleset"
    ]
   },
   "listdataqualityrulesetevaluationruns": {
    "Resources": [
     "dataQualityRuleset"
    ]
   },
   "listdataqualityrulesets": {
    "Resources": [
     "dataQualityRuleset"
    ]
   },
   "listdevendpoints": {},
   "listentities": {
    "Resources": [
     "connection",
     "rootcatalog"
    ]
   },
   "listjobs": {},
   "listjobupgradeanalyses": {
    "Resources": [
     "job"
    ]
   },
   "listmltransforms": {
    "Resources": [
     "mlTransform"
    ]
   },
   "listregistries": {},
   "listschemas": {
    "Resources": [
     "registry"
    ]
   },
   "listschemaversions": {
    "Resources": [
     "registry",
     "schema"
    ]
   },
   "listsessions": {},
   "liststatements": {
    "Resources": [
     "session"
    ]
   },
   "listtableoptimizerruns": {
    "Resources": [
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "listtriggers": {},
   "listusageprofiles": {},
   "listworkflows": {},
   "modifyintegration": {
    "Resources": [
     "integration"
    ]
   },
   "notifyevent": {
    "Resources": [
     "workflow"
    ]
   },
   "passconnection": {
    "Resources": [
     "connection"
    ]
   },
   "publishdataquality": {
    "Resources": [
     "dataQualityRuleset"
    ]
   },
   "putdatacatalogencryptionsettings": {
    "Resources": [
     "rootcatalog"
    ]
   },
   "putdataqualityprofileannotation": {
    "Resources": [
     "dataQualityRuleset",
     "job"
    ]
   },
   "putdataqualitystatisticannotation": {
    "Resources": [
     "dataQualityRuleset",
     "job"
    ]
   },
   "putresourcepolicy": {
    "Resources": [
     "rootcatalog"
    ]
   },
   "putschemaversionmetadata": {
    "Resources": [
     "registry",
     "schema"
    ]
   },
   "putworkflowrunproperties": {
    "Resources": [
     "workflow"
    ]
   },
   "queryschemaversionmetadata": {
    "Resources": [
     "registry",
     "schema"
    ]
   },
   "refreshoauth2tokens": {
    "Resources": [
     "connection",
     "rootcatalog"
    ]
   },
   "registerschemaversion": {
    "Resources": [
     "registry",
     "schema"
    ]
   },
   "removeschemaversionmetadata": {
    "Resources": [
     "registry",
     "schema"
    ]
   },
   "requestlogparsing": {},
   "resetjobbookmark": {},
   "resumeworkflowrun": {
    "Resources": [
     "workflow"
    ]
   },
   "rundatapreviewstatement": {},
   "runstatement": {
    "Resources": [
     "session"
    ]
   },
   "searchtables": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "sendfeedback": {},
   "sendrecipeaction": {},
   "startblueprintrun": {
    "Resources": [
     "blueprint"
    ]
   },
   "startcolumnstatisticstaskrun": {
    "Resources": [
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "startcolumnstatisticstaskrunschedule": {
    "Resources": [
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "startcompletion": {},
   "startcrawler": {
    "Resources": [
     "crawler"
    ]
   },
   "startcrawlerschedule": {},
   "startdataqualityrulerecommendationrun": {
    "Resources": [
     "dataQualityRuleset"
    ]
   },
   "startdataqualityrulesetevaluationrun": {
    "Resources": [
     "dataQualityRuleset"
    ]
   },
   "startexportlabelstaskrun": {
    "Resources": [
     "mlTransform"
    ]
   },
   "startimportlabelstaskrun": {
    "Resources": [
     "mlTransform"
    ]
   },
   "startjobrun": {
    "Resources": [
     "job"
    ]
   },
   "startjobupgradeanalysis": {
    "Resources": [
     "job"
    ]
   },
   "startmlevaluationtaskrun": {
    "Resources": [
     "mlTransform"
    ]
   },
   "startmllabelingsetgenerationtaskrun": {
    "Resources": [
     "mlTransform"
    ]
   },
   "startnotebook": {},
   "starttrigger": {
    "Resources": [
     "trigger"
    ]
   },
   "startworkflowrun": {
    "Resources": [
     "workflow"
    ]
   },
   "stopcolumnstatisticstaskrun": {
    "Resources": [
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "stopcolumnstatisticstaskrunschedule": {
    "Resources": [
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "stopcrawler": {
    "Resources": [
     "crawler"
    ]
   },
   "stopcrawlerschedule": {},
   "stopjobupgradeanalysis": {
    "Resources": [
     "job"
    ]
   },
   "stopsession": {
    "Resources": [
     "session"
    ]
   },
   "stoptrigger": {
    "Resources": [
     "trigger"
    ]
   },
   "stopworkflowrun": {
    "Resources": [
     "workflow"
    ]
   },
   "tagresource": {
    "Resources": [
     "blueprint",
     "connection",
     "crawler",
     "customEntityType",
     "dataQualityRuleset",
     "devendpoint",
     "integration",
     "job",
     "mlTransform",
     "registry",
     "schema",
     "session",
     "trigger",
     "usageProfile",
     "workflow"
    ]
   },
   "terminatenotebook": {},
   "testconnection": {},
   "untagresource": {
    "Resources": [
     "blueprint",
     "connection",
     "crawler",
     "customEntityType",
     "dataQualityRuleset",
     "devendpoint",
     "integration",
     "job",
     "mlTransform",
     "registry",
     "schema",
     "session",
     "trigger",
     "usageProfile",
     "workflow"
    ]
   },
   "updateblueprint": {
    "Resources": [
     "blueprint"
    ]
   },
   "updatecatalog": {
    "Resources": [
     "catalog",
     "rootcatalog"
    ]
   },
   "updateclassifier": {},
   "updatecolumnstatisticsforpartition": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "updatecolumnstatisticsfortable": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "updatecolumnstatisticstasksettings": {
    "Resources": [
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "updateconnection": {
    "Resources": [
     "connection",
     "rootcatalog"
    ]
   },
   "updatecrawler": {
    "Resources": [
     "crawler"
    ]
   },
   "updatecrawlerschedule": {},
   "updatedatabase": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog"
    ]
   },
   "updatedataqualityruleset": {
    "Resources": [
     "dataQualityRuleset"
    ]
   },
   "updatedevendpoint": {
    "Resources": [
     "devendpoint"
    ]
   },
   "updateintegrationresourceproperty": {
    "Resources": [
     "catalog",
     "connection",
     "database"
    ]
   },
   "updateintegrationtableproperties": {
    "Resources": [
     "catalog",
     "connection",
     "database"
    ]
   },
   "updatejob": {
    "Resources": [
     "job"
    ]
   },
   "updatejobfromsourcecontrol": {
    "Resources": [
     "job"
    ]
   },
   "updatemltransform": {
    "Resources": [
     "mlTransform"
    ]
   },
   "updatepartition": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "updateregistry": {
    "Resources": [
     "registry"
    ]
   },
   "updateschema": {
    "Resources": [
     "registry",
     "schema"
    ]
   },
   "updatesourcecontrolfromjob": {
    "Resources": [
     "job"
    ]
   },
   "updatetable": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "updatetableoptimizer": {
    "Resources": [
     "database",
     "rootcatalog",
     "table"
    ]
   },
   "updatetrigger": {
    "Resources": [
     "trigger"
    ]
   },
   "updateusageprofile": {
    "Resources": [
     "usageProfile"
    ]
   },
   "updateuserdefinedfunction": {
    "Resources": [
     "catalog",
     "database",
     "rootcatalog",
     "userdefinedfunction"
    ]
   },
   "updateworkflow": {
    "Resources": [
     "workflow"
    ]
   },
   "upgradejob": {
    "Resources": [
     "job"
    ]
   },
   "usegluestudio": {},
   "usemltransforms": {
    "Resources": [
     "mlTransform"
    ]
   }
  },
  "Resources": {
   "blueprint": {
    "ARNFormats": [
     "arn:${Partition}:glue:${Region}:${Account}:blueprint/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "catalog": {
    "ARNFormats": [
     "arn:${Partition}:glue:${Region}:${Account}:catalog/.*"
    ]
   },
   "completion": {
    "ARNFormats": [
     "arn:${Partition}:glue:${Region}:${Account}:completion/.*"
    ]
   },
   "connection": {
    "ARNFormats": [
     "arn:${Partition}:glue:${Region}:${Account}:connection/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "crawler": {
    "ARNFormats": [
     "arn:${Partition}:glue:${Region}:${Account}:crawler/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "customentitytype": {
    "ARNFormats": [
     "arn:${Partition}:glue:${Region}:${Account}:customEntityType/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "database": {
    "ARNFormats": [
     "arn:${Partition}:glue:${Region}:${Account}:database/.*"
    ]
   },
   "dataqualityruleset": {
    "ARNFormats": [
     "arn:${Partition}:glue:${Region}:${Account}:dataQualityRuleset/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "devendpoint": {
    "ARNFormats": [
     "arn:${Partition}:glue:${Region}:${Account}:devEndpoint/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "integration": {
    "ARNFormats": [
     "arn:${Partition}:glue:${Region}:${Account}:integration:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "job": {
    "ARNFormats": [
     "arn:${Partition}:glue:${Region}:${Account}:job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "mltransform": {
    "ARNFormats": [
     "arn:${Partition}:glue:${Region}:${Account}:mlTransform/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "registry": {
    "ARNFormats": [
     "arn:${Partition}:glue:${Region}:${Account}:registry/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "rootcatalog": {
    "ARNFormats": [
     "arn:${Partition}:glue:${Region}:${Account}:catalog"
    ]
   },
   "schema": {
    "ARNFormats": [
     "arn:${Partition}:glue:${Region}:${Account}:schema/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "session": {
    "ARNFormats": [
     "arn:${Partition}:glue:${Region}:${Account}:session/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "table": {
    "ARNFormats": [
     "arn:${Partition}:glue:${Region}:${Account}:table/.*"
    ]
   },
   "tableversion": {
    "ARNFormats": [
     "arn:${Partition}:glue:${Region}:${Account}:tableVersion/.*"
    ]
   },
   "trigger": {
    "ARNFormats": [
     "arn:${Partition}:glue:${Region}:${Account}:trigger/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "usageprofile": {
    "ARNFormats": [
     "arn:${Partition}:glue:${Region}:${Account}:usageProfile/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "userdefinedfunction": {
    "ARNFormats": [
     "arn:${Partition}:glue:${Region}:${Account}:userDefinedFunction/.*"
    ]
   },
   "workflow": {
    "ARNFormats": [
     "arn:${Partition}:glue:${Region}:${Account}:workflow/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "grafana": {
  "Actions": {
   "associatelicense": {
    "Resources": [
     "workspace"
    ]
   },
   "createworkspace": {},
   "createworkspaceapikey": {
    "Resources": [
     "workspace"
    ]
   },
   "createworkspaceserviceaccount": {
    "Resources": [
     "workspace"
    ]
   },
   "createworkspaceserviceaccounttoken": {
    "Resources": [
     "workspace"
    ]
   },
   "deleteworkspace": {
    "Resources": [
     "workspace"
    ]
   },
   "deleteworkspaceapikey": {
    "Resources": [
     "workspace"
    ]
   },
   "deleteworkspaceserviceaccount": {
    "Resources": [
     "workspace"
    ]
   },
   "deleteworkspaceserviceaccounttoken": {
    "Resources": [
     "workspace"
    ]
   },
   "describeworkspace": {
    "Resources": [
     "workspace"
    ]
   },
   "describeworkspaceauthentication": {
    "Resources": [
     "workspace"
    ]
   },
   "describeworkspaceconfiguration": {
    "Resources": [
     "workspace"
    ]
   },
   "disassociatelicense": {
    "Resources": [
     "workspace"
    ]
   },
   "listpermissions": {
    "Resources": [
     "workspace"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "workspace"
    ]
   },
   "listversions": {
    "Resources": [
     "workspace"
    ]
   },
   "listworkspaces": {},
   "listworkspaceserviceaccounts": {
    "Resources": [
     "workspace"
    ]
   },
   "listworkspaceserviceaccounttokens": {
    "Resources": [
     "workspace"
    ]
   },
   "tagresource": {
    "Resources": [
     "workspace"
    ]
   },
   "untagresource": {
    "Resources": [
     "workspace"
    ]
   },
   "updatepermissions": {
    "Resources": [
     "workspace"
    ]
   },
   "updateworkspace": {
    "Resources": [
     "workspace"
    ]
   },
   "updateworkspaceauthentication": {
    "Resources": [
     "workspace"
    ]
   },
   "updateworkspaceconfiguration": {
    "Resources": [
     "workspace"
    ]
   }
  },
  "Resources": {
   "workspace": {
    "ARNFormats": [
     "arn:${Partition}:grafana:${Region}:${Account}:/workspaces/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "greengrass": {
  "Actions": {
   "associateroletogroup": {
    "Resources": [
     "group"
    ]
   },
   "associateserviceroletoaccount": {},
   "batchassociateclientdevicewithcoredevice": {
    "Resources": [
     "coreDevice"
    ]
   },
   "batchdisassociateclientdevicefromcoredevice": {
    "Resources": [
     "coreDevice"
    ]
   },
   "canceldeployment": {
    "Resources": [
     "deployment"
    ]
   },
   "createcomponentversion": {
    "Resources": [
     "component"
    ]
   },
   "createconnectordefinition": {},
   "createconnectordefinitionversion": {
    "Resources": [
     "connectorDefinition"
    ]
   },
   "createcoredefinition": {},
   "createcoredefinitionversion": {
    "Resources": [
     "coreDefinition"
    ]
   },
   "createdeployment": {
    "Resources": [
     "group"
    ]
   },
   "createdevicedefinition": {},
   "createdevicedefinitionversion": {
    "Resources": [
     "deviceDefinition"
    ]
   },
   "createfunctiondefinition": {},
   "createfunctiondefinitionversion": {
    "Resources": [
     "functionDefinition"
    ]
   },
   "creategroup": {},
   "creategroupcertificateauthority": {
    "Resources": [
     "group"
    ]
   },
   "creategroupversion": {
    "Resources": [
     "group"
    ]
   },
   "createloggerdefinition": {},
   "createloggerdefinitionversion": {
    "Resources": [
     "loggerDefinition"
    ]
   },
   "createresourcedefinition": {},
   "createresourcedefinitionversion": {
    "Resources": [
     "resourceDefinition"
    ]
   },
   "createsoftwareupdatejob": {},
   "createsubscriptiondefinition": {},
   "createsubscriptiondefinitionversion": {
    "Resources": [
     "subscriptionDefinition"
    ]
   },
   "deletecomponent": {
    "Resources": [
     "componentVersion"
    ]
   },
   "deleteconnectordefinition": {
    "Resources": [
     "connectorDefinition"
    ]
   },
   "deletecoredefinition": {
    "Resources": [
     "coreDefinition"
    ]
   },
   "deletecoredevice": {
    "Resources": [
     "coreDevice"
    ]
   },
   "deletedeployment": {
    "Resources": [
     "deployment"
    ]
   },
   "deletedevicedefinition": {
    "Resources": [
     "deviceDefinition"
    ]
   },
   "deletefunctiondefinition": {
    "Resources": [
     "functionDefinition"
    ]
   },
   "deletegroup": {
    "Resources": [
     "group"
    ]
   },
   "deleteloggerdefinition": {
    "Resources": [
     "loggerDefinition"
    ]
   },
   "deleteresourcedefinition": {
    "Resources": [
     "resourceDefinition"
    ]
   },
   "deletesubscriptiondefinition": {
    "Resources": [
     "subscriptionDefinition"
    ]
   },
   "describecomponent": {
    "Resources": [
     "componentVersion"
    ]
   },
   "disassociaterolefromgroup": {
    "Resources": [
     "group"
    ]
   },
   "disassociateservicerolefromaccount": {},
   "discover": {
    "Resources": [
     "thing"
    ]
   },
   "getassociatedrole": {
    "Resources": [
     "group"
    ]
   },
   "getbulkdeploymentstatus": {
    "Resources": [
     "bulkDeployment"
    ]
   },
   "getcomponent": {
    "Resources": [
     "componentVersion"
    ]
   },
   "getcomponentversionartifact": {
    "Resources": [
     "componentVersion"
    ]
   },
   "getconnectivityinfo": {
    "Resources": [
     "connectivityInfo"
    ]
   },
   "getconnectordefinition": {
    "Resources": [
     "connectorDefinition"
    ]
   },
   "getconnectordefinitionversion": {
    "Resources": [
     "connectorDefinition",
     "connectorDefinitionVersion"
    ]
   },
   "getcoredefinition": {
    "Resources": [
     "coreDefinition"
    ]
   },
   "getcoredefinitionversion": {
    "Resources": [
     "coreDefinition",
     "coreDefinitionVersion"
    ]
   },
   "getcoredevice": {
    "Resources": [
     "coreDevice"
    ]
   },
   "getdeployment": {
    "Resources": [
     "deployment"
    ]
   },
   "getdeploymentstatus": {
    "Resources": [
     "deployment",
     "group"
    ]
   },
   "getdevicedefinition": {
    "Resources": [
     "deviceDefinition"
    ]
   },
   "getdevicedefinitionversion": {
    "Resources": [
     "deviceDefinition",
     "deviceDefinitionVersion"
    ]
   },
   "getfunctiondefinition": {
    "Resources": [
     "functionDefinition"
    ]
   },
   "getfunctiondefinitionversion": {
    "Resources": [
     "functionDefinition",
     "functionDefinitionVersion"
    ]
   },
   "getgroup": {
    "Resources": [
     "group"
    ]
   },
   "getgroupcertificateauthority": {
    "Resources": [
     "certificateAuthority",
     "group"
    ]
   },
   "getgroupcertificateconfiguration": {
    "Resources": [
     "group"
    ]
   },
   "getgroupversion": {
    "Resources": [
     "group",
     "groupVersion"
    ]
   },
   "getloggerdefinition": {
    "Resources": [
     "loggerDefinition"
    ]
   },
   "getloggerdefinitionversion": {
    "Resources": [
     "loggerDefinition",
     "loggerDefinitionVersion"
    ]
   },
   "getresourcedefinition": {
    "Resources": [
     "resourceDefinition"
    ]
   },
   "getresourcedefinitionversion": {
    "Resources": [
     "resourceDefinition",
     "resourceDefinitionVersion"
    ]
   },
   "getserviceroleforaccount": {},
   "getsubscriptiondefinition": {
    "Resources": [
     "subscriptionDefinition"
    ]
   },
   "getsubscriptiondefinitionversion": {
    "Resources": [
     "subscriptionDefinition",
     "subscriptionDefinitionVersion"
    ]
   },
   "getthingruntimeconfiguration": {
    "Resources": [
     "thingRuntimeConfig"
    ]
   },
   "listbulkdeploymentdetailedreports": {
    "Resources": [
     "bulkDeployment"
    ]
   },
   "listbulkdeployments": {},
   "listclientdevicesassociatedwithcoredevice": {
    "Resources": [
     "coreDevice"
    ]
   },
   "listcomponents": {},
   "listcomponentversions": {
    "Resources": [
     "component"
    ]
   },
   "listconnectordefinitions": {},
   "listconnectordefinitionversions": {
    "Resources": [
     "connectorDefinition"
    ]
   },
   "listcoredefinitions": {},
   "listcoredefinitionversions": {
    "Resources": [
     "coreDefinition"
    ]
   },
   "listcoredevices": {},
   "listdeployments": {
    "Resources": [
     "group"
    ]
   },
   "listdevicedefinitions": {},
   "listdevicedefinitionversions": {
    "Resources": [
     "deviceDefinition"
    ]
   },
   "listeffectivedeployments": {
    "Resources": [
     "coreDevice"
    ]
   },
   "listfunctiondefinitions": {},
   "listfunctiondefinitionversions": {
    "Resources": [
     "functionDefinition"
    ]
   },
   "listgroupcertificateauthorities": {
    "Resources": [
     "group"
    ]
   },
   "listgroups": {},
   "listgroupversions": {
    "Resources": [
     "group"
    ]
   },
   "listinstalledcomponents": {
    "Resources": [
     "coreDevice"
    ]
   },
   "listloggerdefinitions": {},
   "listloggerdefinitionversions": {
    "Resources": [
     "loggerDefinition"
    ]
   },
   "listresourcedefinitions": {},
   "listresourcedefinitionversions": {
    "Resources": [
     "resourceDefinition"
    ]
   },
   "listsubscriptiondefinitions": {},
   "listsubscriptiondefinitionversions": {
    "Resources": [
     "subscriptionDefinition"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "bulkDeployment",
     "component",
     "componentVersion",
     "connectorDefinition",
     "coreDefinition",
     "coreDevice",
     "deployment",
     "deviceDefinition",
     "functionDefinition",
     "group",
     "loggerDefinition",
     "resourceDefinition",
     "subscriptionDefinition"
    ]
   },
   "resetdeployments": {
    "Resources": [
     "group"
    ]
   },
   "resolvecomponentcandidates": {
    "Resources": [
     "componentVersion"
    ]
   },
   "startbulkdeployment": {},
   "stopbulkdeployment": {
    "Resources": [
     "bulkDeployment"
    ]
   },
   "tagresource": {
    "Resources": [
     "bulkDeployment",
     "component",
     "componentVersion",
     "connectorDefinition",
     "coreDefinition",
     "coreDevice",
     "deployment",
     "deviceDefinition",
     "functionDefinition",
     "group",
     "loggerDefinition",
     "resourceDefinition",
     "subscriptionDefinition"
    ]
   },
   "untagresource": {
    "Resources": [
     "bulkDeployment",
     "component",
     "componentVersion",
     "connectorDefinition",
     "coreDefinition",
     "coreDevice",
     "deployment",
     "deviceDefinition",
     "functionDefinition",
     "group",
     "loggerDefinition",
     "resourceDefinition",
     "subscriptionDefinition"
    ]
   },
   "updateconnectivityinfo": {
    "Resources": [
     "connectivityInfo"
    ]
   },
   "updateconnectordefinition": {
    "Resources": [
     "connectorDefinition"
    ]
   },
   "updatecoredefinition": {
    "Resources": [
     "coreDefinition"
    ]
   },
   "updatedevicedefinition": {
    "Resources": [
     "deviceDefinition"
    ]
   },
   "updatefunctiondefinition": {
    "Resources": [
     "functionDefinition"
    ]
   },
   "updategroup": {
    "Resources": [
     "group"
    ]
   },
   "updategroupcertificateconfiguration": {
    "Resources": [
     "group"
    ]
   },
   "updateloggerdefinition": {
    "Resources": [
     "loggerDefinition"
    ]
   },
   "updateresourcedefinition": {
    "Resources": [
     "resourceDefinition"
    ]
   },
   "updatesubscriptiondefinition": {
    "Resources": [
     "subscriptionDefinition"
    ]
   },
   "updatethingruntimeconfiguration": {
    "Resources": [
     "thingRuntimeConfig"
    ]
   }
  },
  "Resources": {
   "bulkdeployment": {
    "ARNFormats": [
     "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/bulk/deployments/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "certificateauthority": {
    "ARNFormats": [
     "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/groups/.*"
    ]
   },
   "component": {
    "ARNFormats": [
     "arn:${Partition}:greengrass:${Region}:${Account}:components:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "componentversion": {
    "ARNFormats": [
     "arn:${Partition}:greengrass:${Region}:${Account}:components:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "connectivityinfo": {
    "ARNFormats": [
     "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/things/.*"
    ]
   },
   "connectordefinition": {
    "ARNFormats": [
     "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/connectors/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "connectordefinitionversion": {
    "ARNFormats": [
     "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/connectors/.*"
    ]
   },
   "coredefinition": {
    "ARNFormats": [
     "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/cores/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "coredefinitionversion": {
    "ARNFormats": [
     "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/cores/.*"
    ]
   },
   "coredevice": {
    "ARNFormats": [
     "arn:${Partition}:greengrass:${Region}:${Account}:coreDevices:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "deployment": {
    "ARNFormats": [
     "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/groups/.*",
     "arn:${Partition}:greengrass:${Region}:${Account}:deployments:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "devicedefinition": {
    "ARNFormats": [
     "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/devices/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "devicedefinitionversion": {
    "ARNFormats": [
     "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/devices/.*"
    ]
   },
   "functiondefinition": {
    "ARNFormats": [
     "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/functions/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "functiondefinitionversion": {
    "ARNFormats": [
     "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/functions/.*"
    ]
   },
   "group": {
    "ARNFormats": [
     "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/groups/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "groupversion": {
    "ARNFormats": [
     "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/groups/.*"
    ]
   },
   "loggerdefinition": {
    "ARNFormats": [
     "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/loggers/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "loggerdefinitionversion": {
    "ARNFormats": [
     "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/loggers/.*"
    ]
   },
   "resourcedefinition": {
    "ARNFormats": [
     "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/resources/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "resourcedefinitionversion": {
    "ARNFormats": [
     "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/resources/.*"
    ]
   },
   "subscriptiondefinition": {
    "ARNFormats": [
     "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/subscriptions/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "subscriptiondefinitionversion": {
    "ARNFormats": [
     "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/subscriptions/.*"
    ]
   },
   "thing": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:thing/.*"
    ]
   },
   "thingruntimeconfig": {
    "ARNFormats": [
     "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/things/.*"
    ]
   }
  }
 },
 "groundstation": {
  "Actions": {
   "cancelcontact": {
    "Resources": [
     "Contact"
    ]
   },
   "createconfig": {},
   "createdataflowendpointgroup": {},
   "createephemeris": {},
   "createmissionprofile": {},
   "deleteconfig": {
    "Resources": [
     "Config"
    ]
   },
   "deletedataflowendpointgroup": {
    "Resources": [
     "DataflowEndpointGroup"
    ]
   },
   "deleteephemeris": {
    "Resources": [
     "EphemerisItem"
    ]
   },
   "deletemissionprofile": {
    "Resources": [
     "MissionProfile"
    ]
   },
   "describecontact": {
    "Resources": [
     "Contact"
    ]
   },
   "describeephemeris": {
    "Resources": [
     "EphemerisItem"
    ]
   },
   "getagentconfiguration": {
    "Resources": [
     "Agent"
    ]
   },
   "getconfig": {
    "Resources": [
     "Config"
    ]
   },
   "getdataflowendpointgroup": {
    "Resources": [
     "DataflowEndpointGroup"
    ]
   },
   "getminuteusage": {},
   "getmissionprofile": {
    "Resources": [
     "MissionProfile"
    ]
   },
   "getsatellite": {
    "Resources": [
     "Satellite"
    ]
   },
   "listconfigs": {},
   "listcontacts": {},
   "listdataflowendpointgroups": {},
   "listephemerides": {},
   "listgroundstations": {},
   "listmissionprofiles": {},
   "listsatellites": {},
   "listtagsforresource": {
    "Resources": [
     "Config",
     "Contact",
     "DataflowEndpointGroup",
     "MissionProfile"
    ]
   },
   "registeragent": {},
   "reservecontact": {},
   "tagresource": {
    "Resources": [
     "Config",
     "Contact",
     "DataflowEndpointGroup",
     "EphemerisItem",
     "MissionProfile"
    ]
   },
   "untagresource": {
    "Resources": [
     "Config",
     "Contact",
     "DataflowEndpointGroup",
     "EphemerisItem",
     "MissionProfile"
    ]
   },
   "updateagentstatus": {
    "Resources": [
     "Agent"
    ]
   },
   "updateconfig": {
    "Resources": [
     "Config"
    ]
   },
   "updateephemeris": {
    "Resources": [
     "EphemerisItem"
    ]
   },
   "updatemissionprofile": {
    "Resources": [
     "MissionProfile"
    ]
   }
  },
  "Resources": {
   "agent": {
    "ARNFormats": [
     "arn:${Partition}:groundstation:${Region}:${Account}:agent/.*"
    ],
    "ConditionKeys": [
     "groundstation:AgentId"
    ]
   },
   "config": {
    "ARNFormats": [
     "arn:${Partition}:groundstation:${Region}:${Account}:config/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "groundstation:ConfigId",
     "groundstation:ConfigType"
    ]
   },
   "contact": {
    "ARNFormats": [
     "arn:${Partition}:groundstation:${Region}:${Account}:contact/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "groundstation:ContactId"
    ]
   },
   "dataflowendpointgroup": {
    "ARNFormats": [
     "arn:${Partition}:groundstation:${Region}:${Account}:dataflow-endpoint-group/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "groundstation:DataflowEndpointGroupId"
    ]
   },
   "ephemerisitem": {
    "ARNFormats": [
     "arn:${Partition}:groundstation:${Region}:${Account}:ephemeris/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "groundstation:EphemerisId"
    ]
   },
   "groundstationresource": {
    "ARNFormats": [
     "arn:${Partition}:groundstation:${Region}:${Account}:groundstation:.*"
    ],
    "ConditionKeys": [
     "groundstation:GroundStationId"
    ]
   },
   "missionprofile": {
    "ARNFormats": [
     "arn:${Partition}:groundstation:${Region}:${Account}:mission-profile/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "groundstation:MissionProfileId"
    ]
   },
   "satellite": {
    "ARNFormats": [
     "arn:${Partition}:groundstation:${Region}:${Account}:satellite/.*"
    ],
    "ConditionKeys": [
     "groundstation:SatelliteId"
    ]
   }
  }
 },
 "groundtruthlabeling": {
  "Actions": {
   "associatepatchtomanifestjob": {},
   "createbatch": {},
   "createintakeform": {},
   "createproject": {},
   "createworkflowdefinition": {},
   "describeconsolejob": {},
   "generatelidarpreviewtaskconfigjob": {},
   "getbatch": {},
   "getintakeformstatus": {},
   "listbatches": {},
   "listdatasetobjects": {},
   "listprojects": {},
   "runfilterorsampledatasetjob": {},
   "rungeneratemanifestbycrawlingjob": {},
   "rungeneratemanifestmetricsjob": {},
   "updatebatch": {}
  },
  "Resources": {}
 },
 "guardduty": {
  "Actions": {
   "acceptadministratorinvitation": {},
   "acceptinvitation": {},
   "archivefindings": {},
   "createdetector": {},
   "createfilter": {
    "Resources": [
     "filter"
    ]
   },
   "createipset": {},
   "createmalwareprotectionplan": {},
   "createmembers": {},
   "createpublishingdestination": {},
   "createsamplefindings": {},
   "createthreatintelset": {},
   "declineinvitations": {},
   "deletedetector": {
    "Resources": [
     "detector"
    ]
   },
   "deletefilter": {
    "Resources": [
     "filter"
    ]
   },
   "deleteinvitations": {},
   "deleteipset": {
    "Resources": [
     "ipset"
    ]
   },
   "deletemalwareprotectionplan": {
    "Resources": [
     "malwareprotectionplan"
    ]
   },
   "deletemembers": {},
   "deletepublishingdestination": {
    "Resources": [
     "publishingDestination"
    ]
   },
   "deletethreatintelset": {
    "Resources": [
     "threatintelset"
    ]
   },
   "describemalwarescans": {},
   "describeorganizationconfiguration": {},
   "describepublishingdestination": {
    "Resources": [
     "publishingDestination"
    ]
   },
   "disableorganizationadminaccount": {},
   "disassociatefromadministratoraccount": {},
   "disassociatefrommasteraccount": {},
   "disassociatemembers": {},
   "enableorganizationadminaccount": {},
   "getadministratoraccount": {},
   "getcoveragestatistics": {
    "Resources": [
     "detector"
    ]
   },
   "getdetector": {
    "Resources": [
     "detector"
    ]
   },
   "getfilter": {
    "Resources": [
     "filter"
    ]
   },
   "getfindings": {},
   "getfindingsstatistics": {},
   "getinvitationscount": {},
   "getipset": {
    "Resources": [
     "ipset"
    ]
   },
   "getmalwareprotectionplan": {
    "Resources": [
     "malwareprotectionplan"
    ]
   },
   "getmalwarescansettings": {},
   "getmasteraccount": {},
   "getmemberdetectors": {},
   "getmembers": {},
   "getorganizationstatistics": {},
   "getremainingfreetrialdays": {},
   "getthreatintelset": {
    "Resources": [
     "threatintelset"
    ]
   },
   "getusagestatistics": {},
   "invitemembers": {},
   "listcoverage": {
    "Resources": [
     "detector"
    ]
   },
   "listdetectors": {},
   "listfilters": {},
   "listfindings": {},
   "listinvitations": {},
   "listipsets": {},
   "listmalwareprotectionplans": {},
   "listmembers": {},
   "listorganizationadminaccounts": {},
   "listpublishingdestinations": {},
   "listtagsforresource": {
    "Resources": [
     "detector",
     "filter",
     "ipset",
     "malwareprotectionplan",
     "threatintelset"
    ]
   },
   "listthreatintelsets": {},
   "sendsecuritytelemetry": {},
   "startmalwarescan": {},
   "startmonitoringmembers": {},
   "stopmonitoringmembers": {},
   "tagresource": {
    "Resources": [
     "detector",
     "filter",
     "ipset",
     "malwareprotectionplan",
     "threatintelset"
    ]
   },
   "unarchivefindings": {},
   "untagresource": {
    "Resources": [
     "detector",
     "filter",
     "ipset",
     "malwareprotectionplan",
     "threatintelset"
    ]
   },
   "updatedetector": {
    "Resources": [
     "detector"
    ]
   },
   "updatefilter": {
    "Resources": [
     "filter"
    ]
   },
   "updatefindingsfeedback": {},
   "updateipset": {
    "Resources": [
     "ipset"
    ]
   },
   "updatemalwareprotectionplan": {
    "Resources": [
     "malwareprotectionplan"
    ]
   },
   "updatemalwarescansettings": {},
   "updatememberdetectors": {},
   "updateorganizationconfiguration": {},
   "updatepublishingdestination": {
    "Resources": [
     "publishingDestination"
    ]
   },
   "updatethreatintelset": {
    "Resources": [
     "threatintelset"
    ]
   }
  },
  "Resources": {
   "detector": {
    "ARNFormats": [
     "arn:${Partition}:guardduty:${Region}:${Account}:detector/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "filter": {
    "ARNFormats": [
     "arn:${Partition}:guardduty:${Region}:${Account}:detector/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "ipset": {
    "ARNFormats": [
     "arn:${Partition}:guardduty:${Region}:${Account}:detector/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "malwareprotectionplan": {
    "ARNFormats": [
     "arn:${Partition}:guardduty:${Region}:${Account}:malware-protection-plan/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "publishingdestination": {
    "ARNFormats": [
     "arn:${Partition}:guardduty:${Region}:${Account}:detector/.*"
    ]
   },
   "threatintelset": {
    "ARNFormats": [
     "arn:${Partition}:guardduty:${Region}:${Account}:detector/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "health": {
  "Actions": {
   "describeaffectedaccountsfororganization": {},
   "describeaffectedentities": {
    "Resources": [
     "event"
    ]
   },
   "describeaffectedentitiesfororganization": {},
   "describeentityaggregates": {},
   "describeentityaggregatesfororganization": {},
   "describeeventaggregates": {},
   "describeeventdetails": {
    "Resources": [
     "event"
    ]
   },
   "describeeventdetailsfororganization": {},
   "describeevents": {},
   "describeeventsfororganization": {},
   "describeeventtypes": {},
   "describehealthservicestatusfororganization": {},
   "disablehealthserviceaccessfororganization": {},
   "enablehealthserviceaccessfororganization": {}
  },
  "Resources": {
   "event": {
    "ARNFormats": [
     "arn:${Partition}:health:*::event/.*"
    ]
   }
  }
 },
 "healthlake": {
  "Actions": {
   "cancelfhirexportjobwithdelete": {
    "Resources": [
     "datastore"
    ]
   },
   "createfhirdatastore": {},
   "createresource": {
    "Resources": [
     "datastore"
    ]
   },
   "deletefhirdatastore": {
    "Resources": [
     "datastore"
    ]
   },
   "deleteresource": {
    "Resources": [
     "datastore"
    ]
   },
   "describefhirdatastore": {
    "Resources": [
     "datastore"
    ]
   },
   "describefhirexportjob": {
    "Resources": [
     "datastore"
    ]
   },
   "describefhirexportjobwithget": {
    "Resources": [
     "datastore"
    ]
   },
   "describefhirimportjob": {
    "Resources": [
     "datastore"
    ]
   },
   "getcapabilities": {
    "Resources": [
     "datastore"
    ]
   },
   "getexportedfile": {
    "Resources": [
     "datastore"
    ]
   },
   "gethistorybyresourceid": {
    "Resources": [
     "datastore"
    ]
   },
   "listfhirdatastores": {},
   "listfhirexportjobs": {
    "Resources": [
     "datastore"
    ]
   },
   "listfhirimportjobs": {
    "Resources": [
     "datastore"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "datastore"
    ]
   },
   "readresource": {
    "Resources": [
     "datastore"
    ]
   },
   "searcheverything": {
    "Resources": [
     "datastore"
    ]
   },
   "searchwithget": {
    "Resources": [
     "datastore"
    ]
   },
   "searchwithpost": {
    "Resources": [
     "datastore"
    ]
   },
   "startfhirexportjob": {
    "Resources": [
     "datastore"
    ]
   },
   "startfhirexportjobwithget": {
    "Resources": [
     "datastore"
    ]
   },
   "startfhirexportjobwithpost": {
    "Resources": [
     "datastore"
    ]
   },
   "startfhirimportjob": {
    "Resources": [
     "datastore"
    ]
   },
   "tagresource": {
    "Resources": [
     "datastore"
    ]
   },
   "untagresource": {
    "Resources": [
     "datastore"
    ]
   },
   "updateresource": {
    "Resources": [
     "datastore"
    ]
   },
   "versionreadresource": {
    "Resources": [
     "datastore"
    ]
   }
  },
  "Resources": {
   "datastore": {
    "ARNFormats": [
     "arn:${Partition}:healthlake:${Region}:${Account}:datastore/fhir/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "honeycode": {
  "Actions": {
   "approveteamassociation": {},
   "batchcreatetablerows": {
    "Resources": [
     "table"
    ]
   },
   "batchdeletetablerows": {
    "Resources": [
     "table"
    ]
   },
   "batchupdatetablerows": {
    "Resources": [
     "table"
    ]
   },
   "batchupserttablerows": {
    "Resources": [
     "table"
    ]
   },
   "createteam": {},
   "createtenant": {},
   "deletedomains": {},
   "deregistergroups": {},
   "describetabledataimportjob": {
    "Resources": [
     "table"
    ]
   },
   "describeteam": {},
   "getscreendata": {
    "Resources": [
     "screen"
    ]
   },
   "invokescreenautomation": {
    "Resources": [
     "screen-automation"
    ]
   },
   "listdomains": {},
   "listgroups": {},
   "listtablecolumns": {
    "Resources": [
     "table"
    ]
   },
   "listtablerows": {
    "Resources": [
     "table"
    ]
   },
   "listtables": {
    "Resources": [
     "workbook"
    ]
   },
   "listtagsforresource": {},
   "listteamassociations": {},
   "listtenants": {},
   "querytablerows": {
    "Resources": [
     "table"
    ]
   },
   "registerdomainforverification": {},
   "registergroups": {},
   "rejectteamassociation": {},
   "restartdomainverification": {},
   "starttabledataimportjob": {
    "Resources": [
     "table"
    ]
   },
   "tagresource": {},
   "untagresource": {},
   "updateteam": {}
  },
  "Resources": {
   "screen": {
    "ARNFormats": [
     "arn:${Partition}:honeycode:${Region}:${Account}:screen:.*"
    ]
   },
   "screen-automation": {
    "ARNFormats": [
     "arn:${Partition}:honeycode:${Region}:${Account}:screen-automation:.*"
    ]
   },
   "table": {
    "ARNFormats": [
     "arn:${Partition}:honeycode:${Region}:${Account}:table:.*"
    ]
   },
   "workbook": {
    "ARNFormats": [
     "arn:${Partition}:honeycode:${Region}:${Account}:workbook:.*"
    ]
   }
  }
 },
 "iam": {
  "Actions": {
   "addclientidtoopenidconnectprovider": {
    "Resources": [
     "oidc-provider"
    ]
   },
   "addroletoinstanceprofile": {
    "Resources": [
     "instance-profile"
    ]
   },
   "addusertogroup": {
    "Resources": [
     "group"
    ]
   },
   "attachgrouppolicy": {
    "Resources": [
     "group"
    ]
   },
   "attachrolepolicy": {
    "Resources": [
     "role"
    ]
   },
   "attachuserpolicy": {
    "Resources": [
     "user"
    ]
   },
   "changepassword": {
    "Resources": [
     "user"
    ]
   },
   "createaccesskey": {
    "Resources": [
     "user"
    ]
   },
   "createaccountalias": {},
   "creategroup": {
    "Resources": [
     "group"
    ]
   },
   "createinstanceprofile": {
    "Resources": [
     "instance-profile"
    ]
   },
   "createloginprofile": {
    "Resources": [
     "user"
    ]
   },
   "createopenidconnectprovider": {
    "Resources": [
     "oidc-provider"
    ]
   },
   "createpolicy": {
    "Resources": [
     "policy"
    ]
   },
   "createpolicyversion": {
    "Resources": [
     "policy"
    ]
   },
   "createrole": {
    "Resources": [
     "role"
    ]
   },
   "createsamlprovider": {
    "Resources": [
     "saml-provider"
    ]
   },
   "createservicelinkedrole": {
    "Resources": [
     "role"
    ]
   },
   "createservicespecificcredential": {
    "Resources": [
     "user"
    ]
   },
   "createuser": {
    "Resources": [
     "user"
    ]
   },
   "createvirtualmfadevice": {
    "Resources": [
     "mfa"
    ]
   },
   "deactivatemfadevice": {
    "Resources": [
     "user"
    ]
   },
   "deleteaccesskey": {
    "Resources": [
     "user"
    ]
   },
   "deleteaccountalias": {},
   "deleteaccountpasswordpolicy": {},
   "deletecloudfrontpublickey": {},
   "deletegroup": {
    "Resources": [
     "group"
    ]
   },
   "deletegrouppolicy": {
    "Resources": [
     "group"
    ]
   },
   "deleteinstanceprofile": {
    "Resources": [
     "instance-profile"
    ]
   },
   "deleteloginprofile": {
    "Resources": [
     "user"
    ]
   },
   "deleteopenidconnectprovider": {
    "Resources": [
     "oidc-provider"
    ]
   },
   "deletepolicy": {
    "Resources": [
     "policy"
    ]
   },
   "deletepolicyversion": {
    "Resources": [
     "policy"
    ]
   },
   "deleterole": {
    "Resources": [
     "role"
    ]
   },
   "deleterolepermissionsboundary": {
    "Resources": [
     "role"
    ]
   },
   "deleterolepolicy": {
    "Resources": [
     "role"
    ]
   },
   "deletesamlprovider": {
    "Resources": [
     "saml-provider"
    ]
   },
   "deleteservercertificate": {
    "Resources": [
     "server-certificate"
    ]
   },
   "deleteservicelinkedrole": {
    "Resources": [
     "role"
    ]
   },
   "deleteservicespecificcredential": {
    "Resources": [
     "user"
    ]
   },
   "deletesigningcertificate": {
    "Resources": [
     "user"
    ]
   },
   "deletesshpublickey": {
    "Resources": [
     "user"
    ]
   },
   "deleteuser": {
    "Resources": [
     "user"
    ]
   },
   "deleteuserpermissionsboundary": {
    "Resources": [
     "user"
    ]
   },
   "deleteuserpolicy": {
    "Resources": [
     "user"
    ]
   },
   "deletevirtualmfadevice": {
    "Resources": [
     "mfa",
     "sms-mfa"
    ]
   },
   "detachgrouppolicy": {
    "Resources": [
     "group"
    ]
   },
   "detachrolepolicy": {
    "Resources": [
     "role"
    ]
   },
   "detachuserpolicy": {
    "Resources": [
     "user"
    ]
   },
   "disableorganizationsrootcredentialsmanagement": {},
   "disableorganizationsrootsessions": {},
   "enablemfadevice": {
    "Resources": [
     "user"
    ]
   },
   "enableorganizationsrootcredentialsmanagement": {},
   "enableorganizationsrootsessions": {},
   "generatecredentialreport": {},
   "generateorganizationsaccessreport": {
    "Resources": [
     "access-report"
    ]
   },
   "generateservicelastaccesseddetails": {
    "Resources": [
     "group",
     "policy",
     "role",
     "user"
    ]
   },
   "getaccesskeylastused": {
    "Resources": [
     "user"
    ]
   },
   "getaccountauthorizationdetails": {},
   "getaccountemailaddress": {},
   "getaccountname": {},
   "getaccountpasswordpolicy": {},
   "getaccountsummary": {},
   "getcloudfrontpublickey": {},
   "getcontextkeysforcustompolicy": {},
   "getcontextkeysforprincipalpolicy": {
    "Resources": [
     "group",
     "role",
     "user"
    ]
   },
   "getcredentialreport": {},
   "getgroup": {
    "Resources": [
     "group"
    ]
   },
   "getgrouppolicy": {
    "Resources": [
     "group"
    ]
   },
   "getinstanceprofile": {
    "Resources": [
     "instance-profile"
    ]
   },
   "getloginprofile": {
    "Resources": [
     "user"
    ]
   },
   "getmfadevice": {
    "Resources": [
     "user"
    ]
   },
   "getopenidconnectprovider": {
    "Resources": [
     "oidc-provider"
    ]
   },
   "getorganizationsaccessreport": {},
   "getpolicy": {
    "Resources": [
     "policy"
    ]
   },
   "getpolicyversion": {
    "Resources": [
     "policy"
    ]
   },
   "getrole": {
    "Resources": [
     "role"
    ]
   },
   "getrolepolicy": {
    "Resources": [
     "role"
    ]
   },
   "getsamlprovider": {
    "Resources": [
     "saml-provider"
    ]
   },
   "getservercertificate": {
    "Resources": [
     "server-certificate"
    ]
   },
   "getservicelastaccesseddetails": {},
   "getservicelastaccesseddetailswithentities": {},
   "getservicelinkedroledeletionstatus": {
    "Resources": [
     "role"
    ]
   },
   "getsshpublickey": {
    "Resources": [
     "user"
    ]
   },
   "getuser": {
    "Resources": [
     "user"
    ]
   },
   "getuserpolicy": {
    "Resources": [
     "user"
    ]
   },
   "listaccesskeys": {
    "Resources": [
     "user"
    ]
   },
   "listaccountaliases": {},
   "listattachedgrouppolicies": {
    "Resources": [
     "group"
    ]
   },
   "listattachedrolepolicies": {
    "Resources": [
     "role"
    ]
   },
   "listattacheduserpolicies": {
    "Resources": [
     "user"
    ]
   },
   "listcloudfrontpublickeys": {},
   "listentitiesforpolicy": {
    "Resources": [
     "policy"
    ]
   },
   "listgrouppolicies": {
    "Resources": [
     "group"
    ]
   },
   "listgroups": {},
   "listgroupsforuser": {
    "Resources": [
     "user"
    ]
   },
   "listinstanceprofiles": {},
   "listinstanceprofilesforrole": {
    "Resources": [
     "role"
    ]
   },
   "listinstanceprofiletags": {
    "Resources": [
     "instance-profile"
    ]
   },
   "listmfadevices": {
    "Resources": [
     "user"
    ]
   },
   "listmfadevicetags": {
    "Resources": [
     "mfa"
    ]
   },
   "listopenidconnectproviders": {},
   "listopenidconnectprovidertags": {
    "Resources": [
     "oidc-provider"
    ]
   },
   "listorganizationsfeatures": {},
   "listpolicies": {},
   "listpoliciesgrantingserviceaccess": {
    "Resources": [
     "group",
     "role",
     "user"
    ]
   },
   "listpolicytags": {
    "Resources": [
     "policy"
    ]
   },
   "listpolicyversions": {
    "Resources": [
     "policy"
    ]
   },
   "listrolepolicies": {
    "Resources": [
     "role"
    ]
   },
   "listroles": {},
   "listroletags": {
    "Resources": [
     "role"
    ]
   },
   "listsamlproviders": {},
   "listsamlprovidertags": {
    "Resources": [
     "saml-provider"
    ]
   },
   "listservercertificates": {},
   "listservercertificatetags": {
    "Resources": [
     "server-certificate"
    ]
   },
   "listservicespecificcredentials": {
    "Resources": [
     "user"
    ]
   },
   "listsigningcertificates": {
    "Resources": [
     "user"
    ]
   },
   "listsshpublickeys": {
    "Resources": [
     "user"
    ]
   },
   "liststsregionalendpointsstatus": {},
   "listuserpolicies": {
    "Resources": [
     "user"
    ]
   },
   "listusers": {},
   "listusertags": {
    "Resources": [
     "user"
    ]
   },
   "listvirtualmfadevices": {},
   "passrole": {
    "Resources": [
     "role"
    ]
   },
   "putgrouppolicy": {
    "Resources": [
     "group"
    ]
   },
   "putrolepermissionsboundary": {
    "Resources": [
     "role"
    ]
   },
   "putrolepolicy": {
    "Resources": [
     "role"
    ]
   },
   "putuserpermissionsboundary": {
    "Resources": [
     "user"
    ]
   },
   "putuserpolicy": {
    "Resources": [
     "user"
    ]
   },
   "removeclientidfromopenidconnectprovider": {
    "Resources": [
     "oidc-provider"
    ]
   },
   "removerolefrominstanceprofile": {
    "Resources": [
     "instance-profile"
    ]
   },
   "removeuserfromgroup": {
    "Resources": [
     "group"
    ]
   },
   "resetservicespecificcredential": {
    "Resources": [
     "user"
    ]
   },
   "resyncmfadevice": {
    "Resources": [
     "user"
    ]
   },
   "setdefaultpolicyversion": {
    "Resources": [
     "policy"
    ]
   },
   "setsecuritytokenservicepreferences": {},
   "setstsregionalendpointstatus": {},
   "simulatecustompolicy": {},
   "simulateprincipalpolicy": {
    "Resources": [
     "group",
     "role",
     "user"
    ]
   },
   "taginstanceprofile": {
    "Resources": [
     "instance-profile"
    ]
   },
   "tagmfadevice": {
    "Resources": [
     "mfa"
    ]
   },
   "tagopenidconnectprovider": {
    "Resources": [
     "oidc-provider"
    ]
   },
   "tagpolicy": {
    "Resources": [
     "policy"
    ]
   },
   "tagrole": {
    "Resources": [
     "role"
    ]
   },
   "tagsamlprovider": {
    "Resources": [
     "saml-provider"
    ]
   },
   "tagservercertificate": {
    "Resources": [
     "server-certificate"
    ]
   },
   "taguser": {
    "Resources": [
     "user"
    ]
   },
   "untaginstanceprofile": {
    "Resources": [
     "instance-profile"
    ]
   },
   "untagmfadevice": {
    "Resources": [
     "mfa"
    ]
   },
   "untagopenidconnectprovider": {
    "Resources": [
     "oidc-provider"
    ]
   },
   "untagpolicy": {
    "Resources": [
     "policy"
    ]
   },
   "untagrole": {
    "Resources": [
     "role"
    ]
   },
   "untagsamlprovider": {
    "Resources": [
     "saml-provider"
    ]
   },
   "untagservercertificate": {
    "Resources": [
     "server-certificate"
    ]
   },
   "untaguser": {
    "Resources": [
     "user"
    ]
   },
   "updateaccesskey": {
    "Resources": [
     "user"
    ]
   },
   "updateaccountemailaddress": {},
   "updateaccountname": {},
   "updateaccountpasswordpolicy": {},
   "updateassumerolepolicy": {
    "Resources": [
     "role"
    ]
   },
   "updatecloudfrontpublickey": {},
   "updategroup": {
    "Resources": [
     "group"
    ]
   },
   "updateloginprofile": {
    "Resources": [
     "user"
    ]
   },
   "updateopenidconnectproviderthumbprint": {
    "Resources": [
     "oidc-provider"
    ]
   },
   "updaterole": {
    "Resources": [
     "role"
    ]
   },
   "updateroledescription": {
    "Resources": [
     "role"
    ]
   },
   "updatesamlprovider": {
    "Resources": [
     "saml-provider"
    ]
   },
   "updateservercertificate": {
    "Resources": [
     "server-certificate"
    ]
   },
   "updateservicespecificcredential": {
    "Resources": [
     "user"
    ]
   },
   "updatesigningcertificate": {
    "Resources": [
     "user"
    ]
   },
   "updatesshpublickey": {
    "Resources": [
     "user"
    ]
   },
   "updateuser": {
    "Resources": [
     "user"
    ]
   },
   "uploadcloudfrontpublickey": {},
   "uploadservercertificate": {
    "Resources": [
     "server-certificate"
    ]
   },
   "uploadsigningcertificate": {
    "Resources": [
     "user"
    ]
   },
   "uploadsshpublickey": {
    "Resources": [
     "user"
    ]
   }
  },
  "Resources": {
   "access-report": {
    "ARNFormats": [
     "arn:${Partition}:iam::${Account}:access-report/.*"
    ]
   },
   "assumed-role": {
    "ARNFormats": [
     "arn:${Partition}:iam::${Account}:assumed-role/.*"
    ]
   },
   "federated-user": {
    "ARNFormats": [
     "arn:${Partition}:iam::${Account}:federated-user/.*"
    ]
   },
   "group": {
    "ARNFormats": [
     "arn:${Partition}:iam::${Account}:group/.*"
    ]
   },
   "instance-profile": {
    "ARNFormats": [
     "arn:${Partition}:iam::${Account}:instance-profile/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "mfa": {
    "ARNFormats": [
     "arn:${Partition}:iam::${Account}:mfa/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "oidc-provider": {
    "ARNFormats": [
     "arn:${Partition}:iam::${Account}:oidc-provider/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "policy": {
    "ARNFormats": [
     "arn:${Partition}:iam::${Account}:policy/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "role": {
    "ARNFormats": [
     "arn:${Partition}:iam::${Account}:role/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "iam:ResourceTag/${TagKey}"
    ]
   },
   "saml-provider": {
    "ARNFormats": [
     "arn:${Partition}:iam::${Account}:saml-provider/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "server-certificate": {
    "ARNFormats": [
     "arn:${Partition}:iam::${Account}:server-certificate/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "sms-mfa": {
    "ARNFormats": [
     "arn:${Partition}:iam::${Account}:sms-mfa/.*"
    ]
   },
   "user": {
    "ARNFormats": [
     "arn:${Partition}:iam::${Account}:user/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "iam:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "identity-sync": {
  "Actions": {
   "allowvendedlogdeliveryforresource": {
    "Resources": [
     "SyncProfileResource"
    ]
   },
   "createsyncfilter": {
    "Resources": [
     "SyncProfileResource"
    ]
   },
   "createsyncprofile": {},
   "createsynctarget": {
    "Resources": [
     "SyncProfileResource"
    ]
   },
   "deletesyncfilter": {
    "Resources": [
     "SyncProfileResource"
    ]
   },
   "deletesyncprofile": {
    "Resources": [
     "SyncProfileResource"
    ]
   },
   "deletesynctarget": {
    "Resources": [
     "SyncProfileResource",
     "SyncTargetResource"
    ]
   },
   "getsyncprofile": {
    "Resources": [
     "SyncProfileResource"
    ]
   },
   "getsynctarget": {
    "Resources": [
     "SyncProfileResource",
     "SyncTargetResource"
    ]
   },
   "listsyncfilters": {
    "Resources": [
     "SyncProfileResource"
    ]
   },
   "startsync": {
    "Resources": [
     "SyncProfileResource"
    ]
   },
   "stopsync": {
    "Resources": [
     "SyncProfileResource"
    ]
   },
   "updatesynctarget": {
    "Resources": [
     "SyncProfileResource",
     "SyncTargetResource"
    ]
   }
  },
  "Resources": {
   "syncprofileresource": {
    "ARNFormats": [
     "arn:${Partition}:identity-sync:${Region}:${Account}:profile/.*"
    ]
   },
   "synctargetresource": {
    "ARNFormats": [
     "arn:${Partition}:identity-sync:${Region}:${Account}:target/.*"
    ]
   }
  }
 },
 "identitystore": {
  "Actions": {
   "creategroup": {
    "Resources": [
     "Identitystore"
    ]
   },
   "creategroupmembership": {
    "Resources": [
     "Group",
     "Identitystore",
     "User"
    ]
   },
   "createuser": {
    "Resources": [
     "Identitystore"
    ]
   },
   "deletegroup": {
    "Resources": [
     "Group",
     "Identitystore"
    ]
   },
   "deletegroupmembership": {
    "Resources": [
     "Group",
     "GroupMembership",
     "Identitystore",
     "User"
    ]
   },
   "deleteuser": {
    "Resources": [
     "Identitystore",
     "User"
    ]
   },
   "describegroup": {
    "Resources": [
     "Group",
     "Identitystore"
    ]
   },
   "describegroupmembership": {
    "Resources": [
     "Group",
     "GroupMembership",
     "Identitystore",
     "User"
    ]
   },
   "describeuser": {
    "Resources": [
     "Identitystore",
     "User"
    ]
   },
   "getgroupid": {
    "Resources": [
     "Group",
     "Identitystore"
    ]
   },
   "getgroupmembershipid": {
    "Resources": [
     "Group",
     "GroupMembership",
     "Identitystore",
     "User"
    ]
   },
   "getuserid": {
    "Resources": [
     "Identitystore",
     "User"
    ]
   },
   "ismemberingroups": {
    "Resources": [
     "AllGroupMemberships",
     "Group",
     "Identitystore",
     "User"
    ]
   },
   "listgroupmemberships": {
    "Resources": [
     "AllGroupMemberships",
     "Group",
     "Identitystore"
    ]
   },
   "listgroupmembershipsformember": {
    "Resources": [
     "AllGroupMemberships",
     "Identitystore",
     "User"
    ]
   },
   "listgroups": {
    "Resources": [
     "AllGroups",
     "Identitystore"
    ]
   },
   "listusers": {
    "Resources": [
     "AllUsers",
     "Identitystore"
    ]
   },
   "updategroup": {
    "Resources": [
     "Group",
     "Identitystore"
    ]
   },
   "updateuser": {
    "Resources": [
     "Identitystore",
     "User"
    ]
   }
  },
  "Resources": {
   "allgroupmemberships": {
    "ARNFormats": [
     "arn:${Partition}:identitystore:::membership/*"
    ]
   },
   "allgroups": {
    "ARNFormats": [
     "arn:${Partition}:identitystore:::group/*"
    ]
   },
   "allusers": {
    "ARNFormats": [
     "arn:${Partition}:identitystore:::user/*"
    ]
   },
   "group": {
    "ARNFormats": [
     "arn:${Partition}:identitystore:::group/.*"
    ]
   },
   "groupmembership": {
    "ARNFormats": [
     "arn:${Partition}:identitystore:::membership/.*"
    ]
   },
   "identitystore": {
    "ARNFormats": [
     "arn:${Partition}:identitystore::${Account}:identitystore/.*"
    ]
   },
   "user": {
    "ARNFormats": [
     "arn:${Partition}:identitystore:::user/.*"
    ]
   }
  }
 },
 "identitystore-auth": {
  "Actions": {
   "batchdeletesession": {},
   "batchgetsession": {},
   "listsessions": {}
  },
  "Resources": {}
 },
 "imagebuilder": {
  "Actions": {
   "cancelimagecreation": {
    "Resources": [
     "image"
    ]
   },
   "cancellifecycleexecution": {
    "Resources": [
     "lifecycleExecution"
    ]
   },
   "createcomponent": {
    "Resources": [
     "component"
    ]
   },
   "createcontainerrecipe": {
    "Resources": [
     "containerRecipe"
    ]
   },
   "createdistributionconfiguration": {
    "Resources": [
     "distributionConfiguration"
    ]
   },
   "createimage": {
    "Resources": [
     "image"
    ]
   },
   "createimagepipeline": {
    "Resources": [
     "imagePipeline"
    ]
   },
   "createimagerecipe": {
    "Resources": [
     "imageRecipe"
    ]
   },
   "createinfrastructureconfiguration": {
    "Resources": [
     "infrastructureConfiguration"
    ]
   },
   "createlifecyclepolicy": {
    "Resources": [
     "lifecyclePolicy"
    ]
   },
   "createworkflow": {
    "Resources": [
     "workflow"
    ]
   },
   "deletecomponent": {
    "Resources": [
     "component"
    ]
   },
   "deletecontainerrecipe": {
    "Resources": [
     "containerRecipe"
    ]
   },
   "deletedistributionconfiguration": {
    "Resources": [
     "distributionConfiguration"
    ]
   },
   "deleteimage": {
    "Resources": [
     "image"
    ]
   },
   "deleteimagepipeline": {
    "Resources": [
     "imagePipeline"
    ]
   },
   "deleteimagerecipe": {
    "Resources": [
     "imageRecipe"
    ]
   },
   "deleteinfrastructureconfiguration": {
    "Resources": [
     "infrastructureConfiguration"
    ]
   },
   "deletelifecyclepolicy": {
    "Resources": [
     "lifecyclePolicy"
    ]
   },
   "deleteworkflow": {
    "Resources": [
     "workflow"
    ]
   },
   "getcomponent": {
    "Resources": [
     "component"
    ]
   },
   "getcomponentpolicy": {
    "Resources": [
     "component"
    ]
   },
   "getcontainerrecipe": {
    "Resources": [
     "containerRecipe"
    ]
   },
   "getcontainerrecipepolicy": {
    "Resources": [
     "containerRecipe"
    ]
   },
   "getdistributionconfiguration": {
    "Resources": [
     "distributionConfiguration"
    ]
   },
   "getimage": {
    "Resources": [
     "image"
    ]
   },
   "getimagepipeline": {
    "Resources": [
     "imagePipeline"
    ]
   },
   "getimagepolicy": {
    "Resources": [
     "image"
    ]
   },
   "getimagerecipe": {
    "Resources": [
     "imageRecipe"
    ]
   },
   "getimagerecipepolicy": {
    "Resources": [
     "imageRecipe"
    ]
   },
   "getinfrastructureconfiguration": {
    "Resources": [
     "infrastructureConfiguration"
    ]
   },
   "getlifecycleexecution": {
    "Resources": [
     "lifecycleExecution"
    ]
   },
   "getlifecyclepolicy": {
    "Resources": [
     "lifecyclePolicy"
    ]
   },
   "getmarketplaceresource": {
    "Resources": [
     "component"
    ]
   },
   "getworkflow": {
    "Resources": [
     "workflow"
    ]
   },
   "getworkflowexecution": {
    "Resources": [
     "workflowExecution"
    ]
   },
   "getworkflowstepexecution": {
    "Resources": [
     "workflowStepExecution"
    ]
   },
   "importcomponent": {
    "Resources": [
     "component"
    ]
   },
   "importdiskimage": {
    "Resources": [
     "imageVersion"
    ]
   },
   "importvmimage": {
    "Resources": [
     "imageVersion"
    ]
   },
   "listcomponentbuildversions": {
    "Resources": [
     "componentVersion"
    ]
   },
   "listcomponents": {},
   "listcontainerrecipes": {},
   "listdistributionconfigurations": {},
   "listimagebuildversions": {
    "Resources": [
     "imageVersion"
    ]
   },
   "listimagepackages": {
    "Resources": [
     "image"
    ]
   },
   "listimagepipelineimages": {
    "Resources": [
     "imagePipeline"
    ]
   },
   "listimagepipelines": {},
   "listimagerecipes": {},
   "listimages": {},
   "listimagescanfindingaggregations": {
    "Resources": [
     "image",
     "imagePipeline"
    ]
   },
   "listimagescanfindings": {
    "Resources": [
     "image",
     "imagePipeline"
    ]
   },
   "listinfrastructureconfigurations": {},
   "listlifecycleexecutionresources": {
    "Resources": [
     "lifecycleExecution"
    ]
   },
   "listlifecycleexecutions": {
    "Resources": [
     "image",
     "lifecyclePolicy"
    ]
   },
   "listlifecyclepolicies": {},
   "listtagsforresource": {
    "Resources": [
     "component",
     "containerRecipe",
     "distributionConfiguration",
     "image",
     "imagePipeline",
     "imageRecipe",
     "infrastructureConfiguration",
     "lifecyclePolicy",
     "workflow"
    ]
   },
   "listwaitingworkflowsteps": {},
   "listworkflowbuildversions": {
    "Resources": [
     "workflowVersion"
    ]
   },
   "listworkflowexecutions": {
    "Resources": [
     "image"
    ]
   },
   "listworkflows": {},
   "listworkflowstepexecutions": {
    "Resources": [
     "workflowExecution"
    ]
   },
   "putcomponentpolicy": {
    "Resources": [
     "component"
    ]
   },
   "putcontainerrecipepolicy": {
    "Resources": [
     "containerRecipe"
    ]
   },
   "putimagepolicy": {
    "Resources": [
     "image"
    ]
   },
   "putimagerecipepolicy": {
    "Resources": [
     "imageRecipe"
    ]
   },
   "sendworkflowstepaction": {
    "Resources": [
     "image",
     "workflowStepExecution"
    ]
   },
   "startimagepipelineexecution": {
    "Resources": [
     "imagePipeline"
    ]
   },
   "startresourcestateupdate": {
    "Resources": [
     "image"
    ]
   },
   "tagresource": {
    "Resources": [
     "component",
     "containerRecipe",
     "distributionConfiguration",
     "image",
     "imagePipeline",
     "imageRecipe",
     "infrastructureConfiguration",
     "lifecyclePolicy",
     "workflow"
    ]
   },
   "untagresource": {
    "Resources": [
     "component",
     "containerRecipe",
     "distributionConfiguration",
     "image",
     "imagePipeline",
     "imageRecipe",
     "infrastructureConfiguration",
     "lifecyclePolicy",
     "workflow"
    ]
   },
   "updatedistributionconfiguration": {
    "Resources": [
     "distributionConfiguration"
    ]
   },
   "updateimagepipeline": {
    "Resources": [
     "imagePipeline"
    ]
   },
   "updateinfrastructureconfiguration": {
    "Resources": [
     "infrastructureConfiguration"
    ]
   },
   "updatelifecyclepolicy": {
    "Resources": [
     "lifecyclePolicy"
    ]
   }
  },
  "Resources": {
   "component": {
    "ARNFormats": [
     "arn:${Partition}:imagebuilder:${Region}:${Account}:component/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "componentversion": {
    "ARNFormats": [
     "arn:${Partition}:imagebuilder:${Region}:${Account}:component/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "containerrecipe": {
    "ARNFormats": [
     "arn:${Partition}:imagebuilder:${Region}:${Account}:container-recipe/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "distributionconfiguration": {
    "ARNFormats": [
     "arn:${Partition}:imagebuilder:${Region}:${Account}:distribution-configuration/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "image": {
    "ARNFormats": [
     "arn:${Partition}:imagebuilder:${Region}:${Account}:image/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "imagepipeline": {
    "ARNFormats": [
     "arn:${Partition}:imagebuilder:${Region}:${Account}:image-pipeline/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "imagerecipe": {
    "ARNFormats": [
     "arn:${Partition}:imagebuilder:${Region}:${Account}:image-recipe/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "imageversion": {
    "ARNFormats": [
     "arn:${Partition}:imagebuilder:${Region}:${Account}:image/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "infrastructureconfiguration": {
    "ARNFormats": [
     "arn:${Partition}:imagebuilder:${Region}:${Account}:infrastructure-configuration/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "kmskey": {
    "ARNFormats": [
     "arn:${Partition}:kms:${Region}:${Account}:key/.*"
    ]
   },
   "lifecycleexecution": {
    "ARNFormats": [
     "arn:${Partition}:imagebuilder:${Region}:${Account}:lifecycle-execution/.*"
    ]
   },
   "lifecyclepolicy": {
    "ARNFormats": [
     "arn:${Partition}:imagebuilder:${Region}:${Account}:lifecycle-policy/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "workflow": {
    "ARNFormats": [
     "arn:${Partition}:imagebuilder:${Region}:${Account}:workflow/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "workflowexecution": {
    "ARNFormats": [
     "arn:${Partition}:imagebuilder:${Region}:${Account}:workflow-execution/.*"
    ]
   },
   "workflowstepexecution": {
    "ARNFormats": [
     "arn:${Partition}:imagebuilder:${Region}:${Account}:workflow-step-execution/.*"
    ]
   },
   "workflowversion": {
    "ARNFormats": [
     "arn:${Partition}:imagebuilder:${Region}:${Account}:workflow/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "importexport": {
  "Actions": {
   "canceljob": {},
   "createjob": {},
   "getshippinglabel": {},
   "getstatus": {},
   "listjobs": {},
   "updatejob": {}
  },
  "Resources": {}
 },
 "inspector": {
  "Actions": {
   "addattributestofindings": {},
   "createassessmenttarget": {},
   "createassessmenttemplate": {},
   "createexclusionspreview": {},
   "createresourcegroup": {},
   "deleteassessmentrun": {},
   "deleteassessmenttarget": {},
   "deleteassessmenttemplate": {},
   "describeassessmentruns": {},
   "describeassessmenttargets": {},
   "describeassessmenttemplates": {},
   "describecrossaccountaccessrole": {},
   "describeexclusions": {},
   "describefindings": {},
   "describeresourcegroups": {},
   "describerulespackages": {},
   "getassessmentreport": {},
   "getexclusionspreview": {},
   "gettelemetrymetadata": {},
   "listassessmentrunagents": {},
   "listassessmentruns": {},
   "listassessmenttargets": {},
   "listassessmenttemplates": {},
   "listeventsubscriptions": {},
   "listexclusions": {},
   "listfindings": {},
   "listrulespackages": {},
   "listtagsforresource": {},
   "previewagents": {},
   "registercrossaccountaccessrole": {},
   "removeattributesfromfindings": {},
   "settagsforresource": {},
   "startassessmentrun": {},
   "stopassessmentrun": {},
   "subscribetoevent": {},
   "unsubscribefromevent": {},
   "updateassessmenttarget": {}
  },
  "Resources": {}
 },
 "inspector-scan": {
  "Actions": {
   "scansbom": {}
  },
  "Resources": {}
 },
 "inspector2": {
  "Actions": {
   "associatemember": {},
   "batchgetaccountstatus": {},
   "batchgetcodesnippet": {},
   "batchgetfindingdetails": {},
   "batchgetfreetrialinfo": {},
   "batchgetmemberec2deepinspectionstatus": {},
   "batchupdatememberec2deepinspectionstatus": {},
   "cancelfindingsreport": {},
   "cancelsbomexport": {},
   "createcisscanconfiguration": {
    "Resources": [
     "CIS Scan Configuration"
    ]
   },
   "createfilter": {
    "Resources": [
     "Filter"
    ]
   },
   "createfindingsreport": {},
   "createsbomexport": {},
   "deletecisscanconfiguration": {
    "Resources": [
     "CIS Scan Configuration"
    ]
   },
   "deletefilter": {
    "Resources": [
     "Filter"
    ]
   },
   "describeorganizationconfiguration": {},
   "disable": {},
   "disabledelegatedadminaccount": {},
   "disassociatemember": {},
   "enable": {},
   "enabledelegatedadminaccount": {},
   "getcisscanreport": {},
   "getcisscanresultdetails": {},
   "getconfiguration": {},
   "getdelegatedadminaccount": {},
   "getec2deepinspectionconfiguration": {},
   "getencryptionkey": {},
   "getfindingsreportstatus": {},
   "getmember": {},
   "getsbomexport": {},
   "listaccountpermissions": {},
   "listcisscanconfigurations": {},
   "listcisscanresultsaggregatedbychecks": {},
   "listcisscanresultsaggregatedbytargetresource": {},
   "listcisscans": {},
   "listcoverage": {},
   "listcoveragestatistics": {},
   "listdelegatedadminaccounts": {},
   "listfilters": {},
   "listfindingaggregations": {},
   "listfindings": {},
   "listmembers": {},
   "listtagsforresource": {},
   "listusagetotals": {},
   "resetencryptionkey": {},
   "searchvulnerabilities": {},
   "sendcissessionhealth": {},
   "sendcissessiontelemetry": {},
   "startcissession": {},
   "stopcissession": {},
   "tagresource": {
    "Resources": [
     "CIS Scan Configuration",
     "Filter"
    ]
   },
   "untagresource": {
    "Resources": [
     "CIS Scan Configuration",
     "Filter"
    ]
   },
   "updatecisscanconfiguration": {
    "Resources": [
     "CIS Scan Configuration"
    ]
   },
   "updateconfiguration": {},
   "updateec2deepinspectionconfiguration": {},
   "updateencryptionkey": {},
   "updatefilter": {
    "Resources": [
     "Filter"
    ]
   },
   "updateorganizationconfiguration": {},
   "updateorgec2deepinspectionconfiguration": {}
  },
  "Resources": {
   "cis scan configuration": {
    "ARNFormats": [
     "arn:${Partition}:inspector2:${Region}:${Account}:owner/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "filter": {
    "ARNFormats": [
     "arn:${Partition}:inspector2:${Region}:${Account}:owner/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "finding": {
    "ARNFormats": [
     "arn:${Partition}:inspector2:${Region}:${Account}:finding/.*"
    ]
   }
  }
 },
 "internetmonitor": {
  "Actions": {
   "createmonitor": {
    "Resources": [
     "Monitor"
    ]
   },
   "deletemonitor": {
    "Resources": [
     "Monitor"
    ]
   },
   "gethealthevent": {
    "Resources": [
     "Monitor"
    ]
   },
   "getinternetevent": {
    "Resources": [
     "InternetEvent"
    ]
   },
   "getmonitor": {
    "Resources": [
     "Monitor"
    ]
   },
   "getqueryresults": {
    "Resources": [
     "Monitor"
    ]
   },
   "getquerystatus": {
    "Resources": [
     "Monitor"
    ]
   },
   "link": {},
   "listhealthevents": {
    "Resources": [
     "Monitor"
    ]
   },
   "listinternetevents": {},
   "listmonitors": {},
   "listtagsforresource": {
    "Resources": [
     "Monitor"
    ]
   },
   "startquery": {
    "Resources": [
     "Monitor"
    ]
   },
   "stopquery": {
    "Resources": [
     "Monitor"
    ]
   },
   "tagresource": {
    "Resources": [
     "Monitor"
    ]
   },
   "untagresource": {
    "Resources": [
     "Monitor"
    ]
   },
   "updatemonitor": {
    "Resources": [
     "Monitor"
    ]
   }
  },
  "Resources": {
   "healthevent": {
    "ARNFormats": [
     "arn:${Partition}:internetmonitor:${Region}:${Account}:monitor/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "internetevent": {
    "ARNFormats": [
     "arn:${Partition}:internetmonitor::${Account}:internet-event/.*"
    ]
   },
   "monitor": {
    "ARNFormats": [
     "arn:${Partition}:internetmonitor:${Region}:${Account}:monitor/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "invoicing": {
  "Actions": {
   "batchgetinvoiceprofile": {},
   "createinvoiceunit": {},
   "deleteinvoiceunit": {
    "Resources": [
     "invoice-unit"
    ]
   },
   "getinvoiceemaildeliverypreferences": {},
   "getinvoicepdf": {},
   "getinvoiceunit": {
    "Resources": [
     "invoice-unit"
    ]
   },
   "listinvoicesummaries": {},
   "listinvoiceunits": {},
   "listtagsforresource": {
    "Resources": [
     "invoice-unit"
    ]
   },
   "putinvoiceemaildeliverypreferences": {},
   "tagresource": {
    "Resources": [
     "invoice-unit"
    ]
   },
   "untagresource": {
    "Resources": [
     "invoice-unit"
    ]
   },
   "updateinvoiceunit": {
    "Resources": [
     "invoice-unit"
    ]
   }
  },
  "Resources": {
   "invoice-unit": {
    "ARNFormats": [
     "arn:${Partition}:invoicing::${Account}:invoice-unit/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "iot": {
  "Actions": {
   "acceptcertificatetransfer": {
    "Resources": [
     "cert"
    ]
   },
   "addthingtobillinggroup": {
    "Resources": [
     "billinggroup",
     "thing"
    ]
   },
   "addthingtothinggroup": {
    "Resources": [
     "thing",
     "thinggroup"
    ]
   },
   "associatesbomwithpackageversion": {
    "Resources": [
     "packageversion"
    ]
   },
   "associatetargetswithjob": {
    "Resources": [
     "job",
     "thing",
     "thinggroup"
    ]
   },
   "attachpolicy": {
    "Resources": [
     "cert",
     "thinggroup"
    ]
   },
   "attachprincipalpolicy": {
    "Resources": [
     "cert"
    ]
   },
   "attachsecurityprofile": {
    "Resources": [
     "custommetric",
     "dimension",
     "securityprofile",
     "thinggroup"
    ]
   },
   "attachthingprincipal": {},
   "cancelauditmitigationactionstask": {},
   "cancelaudittask": {},
   "cancelcertificatetransfer": {
    "Resources": [
     "cert"
    ]
   },
   "canceldetectmitigationactionstask": {},
   "canceljob": {
    "Resources": [
     "job"
    ]
   },
   "canceljobexecution": {
    "Resources": [
     "job",
     "thing"
    ]
   },
   "cleardefaultauthorizer": {},
   "closetunnel": {
    "Resources": [
     "tunnel"
    ]
   },
   "confirmtopicruledestination": {
    "Resources": [
     "destination"
    ]
   },
   "connect": {
    "Resources": [
     "client"
    ]
   },
   "createauditsuppression": {},
   "createauthorizer": {
    "Resources": [
     "authorizer"
    ]
   },
   "createbillinggroup": {
    "Resources": [
     "billinggroup"
    ]
   },
   "createcertificatefromcsr": {},
   "createcertificateprovider": {
    "Resources": [
     "certificateprovider"
    ]
   },
   "createcommand": {
    "Resources": [
     "command"
    ]
   },
   "createcustommetric": {
    "Resources": [
     "custommetric"
    ]
   },
   "createdimension": {
    "Resources": [
     "dimension"
    ]
   },
   "createdomainconfiguration": {
    "Resources": [
     "domainconfiguration"
    ]
   },
   "createdynamicthinggroup": {
    "Resources": [
     "dynamicthinggroup"
    ]
   },
   "createfleetmetric": {
    "Resources": [
     "fleetmetric",
     "index"
    ]
   },
   "createjob": {
    "Resources": [
     "job",
     "jobtemplate",
     "package",
     "packageversion",
     "thing",
     "thinggroup"
    ]
   },
   "createjobtemplate": {
    "Resources": [
     "job",
     "jobtemplate",
     "package",
     "packageversion"
    ]
   },
   "createkeysandcertificate": {},
   "createmitigationaction": {
    "Resources": [
     "mitigationaction"
    ]
   },
   "createotaupdate": {
    "Resources": [
     "otaupdate"
    ]
   },
   "createpackage": {
    "Resources": [
     "package"
    ]
   },
   "createpackageversion": {
    "Resources": [
     "package",
     "packageversion"
    ]
   },
   "createpolicy": {
    "Resources": [
     "policy"
    ]
   },
   "createpolicyversion": {
    "Resources": [
     "policy"
    ]
   },
   "createprovisioningclaim": {
    "Resources": [
     "provisioningtemplate"
    ]
   },
   "createprovisioningtemplate": {
    "Resources": [
     "provisioningtemplate"
    ]
   },
   "createprovisioningtemplateversion": {
    "Resources": [
     "provisioningtemplate"
    ]
   },
   "createrolealias": {
    "Resources": [
     "rolealias"
    ]
   },
   "createscheduledaudit": {
    "Resources": [
     "scheduledaudit"
    ]
   },
   "createsecurityprofile": {
    "Resources": [
     "custommetric",
     "dimension",
     "securityprofile"
    ]
   },
   "createstream": {
    "Resources": [
     "stream"
    ]
   },
   "creatething": {
    "Resources": [
     "billinggroup",
     "thing"
    ]
   },
   "createthinggroup": {
    "Resources": [
     "thinggroup"
    ]
   },
   "createthingtype": {
    "Resources": [
     "thingtype"
    ]
   },
   "createtopicrule": {
    "Resources": [
     "rule"
    ]
   },
   "createtopicruledestination": {},
   "deleteaccountauditconfiguration": {},
   "deleteauditsuppression": {},
   "deleteauthorizer": {
    "Resources": [
     "authorizer"
    ]
   },
   "deletebillinggroup": {
    "Resources": [
     "billinggroup"
    ]
   },
   "deletecacertificate": {
    "Resources": [
     "cacert"
    ]
   },
   "deletecertificate": {
    "Resources": [
     "cert"
    ]
   },
   "deletecertificateprovider": {
    "Resources": [
     "certificateprovider"
    ]
   },
   "deletecommand": {
    "Resources": [
     "command"
    ]
   },
   "deletecommandexecution": {
    "Resources": [
     "client",
     "thing"
    ]
   },
   "deletecustommetric": {
    "Resources": [
     "custommetric"
    ]
   },
   "deletedimension": {
    "Resources": [
     "dimension"
    ]
   },
   "deletedomainconfiguration": {
    "Resources": [
     "domainconfiguration"
    ]
   },
   "deletedynamicthinggroup": {
    "Resources": [
     "dynamicthinggroup"
    ]
   },
   "deletefleetmetric": {
    "Resources": [
     "fleetmetric"
    ]
   },
   "deletejob": {
    "Resources": [
     "job"
    ]
   },
   "deletejobexecution": {
    "Resources": [
     "job",
     "thing"
    ]
   },
   "deletejobtemplate": {
    "Resources": [
     "jobtemplate"
    ]
   },
   "deletemitigationaction": {
    "Resources": [
     "mitigationaction"
    ]
   },
   "deleteotaupdate": {
    "Resources": [
     "otaupdate"
    ]
   },
   "deletepackage": {
    "Resources": [
     "package"
    ]
   },
   "deletepackageversion": {
    "Resources": [
     "package",
     "packageversion"
    ]
   },
   "deletepolicy": {
    "Resources": [
     "policy"
    ]
   },
   "deletepolicyversion": {
    "Resources": [
     "policy"
    ]
   },
   "deleteprovisioningtemplate": {
    "Resources": [
     "provisioningtemplate"
    ]
   },
   "deleteprovisioningtemplateversion": {
    "Resources": [
     "provisioningtemplate"
    ]
   },
   "deleteregistrationcode": {},
   "deleterolealias": {
    "Resources": [
     "rolealias"
    ]
   },
   "deletescheduledaudit": {
    "Resources": [
     "scheduledaudit"
    ]
   },
   "deletesecurityprofile": {
    "Resources": [
     "custommetric",
     "dimension",
     "securityprofile"
    ]
   },
   "deletestream": {
    "Resources": [
     "stream"
    ]
   },
   "deletething": {
    "Resources": [
     "thing"
    ]
   },
   "deletethinggroup": {
    "Resources": [
     "thinggroup"
    ]
   },
   "deletethingshadow": {
    "Resources": [
     "thing"
    ]
   },
   "deletethingtype": {
    "Resources": [
     "thingtype"
    ]
   },
   "deletetopicrule": {
    "Resources": [
     "rule"
    ]
   },
   "deletetopicruledestination": {
    "Resources": [
     "destination"
    ]
   },
   "deletev2logginglevel": {},
   "deprecatethingtype": {
    "Resources": [
     "thingtype"
    ]
   },
   "describeaccountauditconfiguration": {},
   "describeauditfinding": {},
   "describeauditmitigationactionstask": {},
   "describeauditsuppression": {},
   "describeaudittask": {},
   "describeauthorizer": {
    "Resources": [
     "authorizer"
    ]
   },
   "describebillinggroup": {
    "Resources": [
     "billinggroup"
    ]
   },
   "describecacertificate": {
    "Resources": [
     "cacert"
    ]
   },
   "describecertificate": {
    "Resources": [
     "cert"
    ]
   },
   "describecertificateprovider": {
    "Resources": [
     "certificateprovider"
    ]
   },
   "describecustommetric": {
    "Resources": [
     "custommetric"
    ]
   },
   "describedefaultauthorizer": {},
   "describedetectmitigationactionstask": {},
   "describedimension": {
    "Resources": [
     "dimension"
    ]
   },
   "describedomainconfiguration": {
    "Resources": [
     "domainconfiguration"
    ]
   },
   "describeendpoint": {},
   "describeeventconfigurations": {},
   "describefleetmetric": {
    "Resources": [
     "fleetmetric"
    ]
   },
   "describeindex": {
    "Resources": [
     "index"
    ]
   },
   "describejob": {
    "Resources": [
     "job"
    ]
   },
   "describejobexecution": {
    "Resources": [
     "job",
     "thing"
    ]
   },
   "describejobtemplate": {
    "Resources": [
     "jobtemplate"
    ]
   },
   "describemanagedjobtemplate": {
    "Resources": [
     "jobtemplate"
    ]
   },
   "describemitigationaction": {
    "Resources": [
     "mitigationaction"
    ]
   },
   "describeprovisioningtemplate": {
    "Resources": [
     "provisioningtemplate"
    ]
   },
   "describeprovisioningtemplateversion": {
    "Resources": [
     "provisioningtemplate"
    ]
   },
   "describerolealias": {
    "Resources": [
     "rolealias"
    ]
   },
   "describescheduledaudit": {
    "Resources": [
     "scheduledaudit"
    ]
   },
   "describesecurityprofile": {
    "Resources": [
     "securityprofile"
    ]
   },
   "describestream": {
    "Resources": [
     "stream"
    ]
   },
   "describething": {
    "Resources": [
     "thing"
    ]
   },
   "describethinggroup": {
    "Resources": [
     "thinggroup"
    ]
   },
   "describethingregistrationtask": {},
   "describethingtype": {
    "Resources": [
     "thingtype"
    ]
   },
   "describetunnel": {
    "Resources": [
     "tunnel"
    ]
   },
   "detachpolicy": {
    "Resources": [
     "cert",
     "thinggroup"
    ]
   },
   "detachprincipalpolicy": {
    "Resources": [
     "cert"
    ]
   },
   "detachsecurityprofile": {
    "Resources": [
     "custommetric",
     "dimension",
     "securityprofile",
     "thinggroup"
    ]
   },
   "detachthingprincipal": {},
   "disabletopicrule": {
    "Resources": [
     "rule"
    ]
   },
   "disassociatesbomfrompackageversion": {
    "Resources": [
     "packageversion"
    ]
   },
   "enabletopicrule": {
    "Resources": [
     "rule"
    ]
   },
   "getbehaviormodeltrainingsummaries": {
    "Resources": [
     "securityprofile"
    ]
   },
   "getbucketsaggregation": {
    "Resources": [
     "index"
    ]
   },
   "getcardinality": {
    "Resources": [
     "index"
    ]
   },
   "getcommand": {
    "Resources": [
     "command"
    ]
   },
   "getcommandexecution": {
    "Resources": [
     "client",
     "thing"
    ]
   },
   "geteffectivepolicies": {
    "Resources": [
     "cert"
    ]
   },
   "getindexingconfiguration": {},
   "getjobdocument": {
    "Resources": [
     "job"
    ]
   },
   "getloggingoptions": {},
   "getotaupdate": {
    "Resources": [
     "otaupdate"
    ]
   },
   "getpackage": {
    "Resources": [
     "package"
    ]
   },
   "getpackageconfiguration": {},
   "getpackageversion": {
    "Resources": [
     "package",
     "packageversion"
    ]
   },
   "getpercentiles": {
    "Resources": [
     "index"
    ]
   },
   "getpolicy": {
    "Resources": [
     "policy"
    ]
   },
   "getpolicyversion": {
    "Resources": [
     "policy"
    ]
   },
   "getregistrationcode": {},
   "getretainedmessage": {
    "Resources": [
     "topic"
    ]
   },
   "getstatistics": {
    "Resources": [
     "index"
    ]
   },
   "getthingconnectivitydata": {
    "Resources": [
     "thing"
    ]
   },
   "getthingshadow": {
    "Resources": [
     "thing"
    ]
   },
   "gettopicrule": {
    "Resources": [
     "rule"
    ]
   },
   "gettopicruledestination": {
    "Resources": [
     "destination"
    ]
   },
   "getv2loggingoptions": {},
   "listactiveviolations": {
    "Resources": [
     "securityprofile",
     "thing"
    ]
   },
   "listattachedpolicies": {},
   "listauditfindings": {},
   "listauditmitigationactionsexecutions": {},
   "listauditmitigationactionstasks": {},
   "listauditsuppressions": {},
   "listaudittasks": {},
   "listauthorizers": {},
   "listbillinggroups": {},
   "listcacertificates": {},
   "listcertificateproviders": {},
   "listcertificates": {},
   "listcertificatesbyca": {},
   "listcommandexecutions": {
    "Resources": [
     "client",
     "command",
     "thing"
    ]
   },
   "listcommands": {},
   "listcustommetrics": {},
   "listdetectmitigationactionsexecutions": {
    "Resources": [
     "thing"
    ]
   },
   "listdetectmitigationactionstasks": {},
   "listdimensions": {},
   "listdomainconfigurations": {},
   "listfleetmetrics": {},
   "listindices": {},
   "listjobexecutionsforjob": {
    "Resources": [
     "job"
    ]
   },
   "listjobexecutionsforthing": {
    "Resources": [
     "thing"
    ]
   },
   "listjobs": {},
   "listjobtemplates": {},
   "listmanagedjobtemplates": {},
   "listmetricvalues": {
    "Resources": [
     "thing"
    ]
   },
   "listmitigationactions": {},
   "listnamedshadowsforthing": {
    "Resources": [
     "thing"
    ]
   },
   "listotaupdates": {},
   "listoutgoingcertificates": {},
   "listpackages": {},
   "listpackageversions": {},
   "listpolicies": {},
   "listpolicyprincipals": {},
   "listpolicyversions": {
    "Resources": [
     "policy"
    ]
   },
   "listprincipalpolicies": {},
   "listprincipalthings": {},
   "listprovisioningtemplates": {},
   "listprovisioningtemplateversions": {
    "Resources": [
     "provisioningtemplate"
    ]
   },
   "listrelatedresourcesforauditfinding": {},
   "listretainedmessages": {},
   "listrolealiases": {},
   "listsbomvalidationresults": {
    "Resources": [
     "packageversion"
    ]
   },
   "listscheduledaudits": {},
   "listsecurityprofiles": {
    "Resources": [
     "custommetric",
     "dimension"
    ]
   },
   "listsecurityprofilesfortarget": {
    "Resources": [
     "thinggroup"
    ]
   },
   "liststreams": {},
   "listtagsforresource": {
    "Resources": [
     "authorizer",
     "billinggroup",
     "cacert",
     "certificateprovider",
     "command",
     "custommetric",
     "dimension",
     "domainconfiguration",
     "dynamicthinggroup",
     "fleetmetric",
     "job",
     "jobtemplate",
     "mitigationaction",
     "otaupdate",
     "policy",
     "provisioningtemplate",
     "rolealias",
     "rule",
     "scheduledaudit",
     "securityprofile",
     "stream",
     "thinggroup",
     "thingtype"
    ]
   },
   "listtargetsforpolicy": {
    "Resources": [
     "policy"
    ]
   },
   "listtargetsforsecurityprofile": {
    "Resources": [
     "securityprofile"
    ]
   },
   "listthinggroups": {},
   "listthinggroupsforthing": {
    "Resources": [
     "thing"
    ]
   },
   "listthingprincipals": {},
   "listthingregistrationtaskreports": {},
   "listthingregistrationtasks": {},
   "listthings": {},
   "listthingsinbillinggroup": {
    "Resources": [
     "billinggroup"
    ]
   },
   "listthingsinthinggroup": {
    "Resources": [
     "thinggroup"
    ]
   },
   "listthingtypes": {},
   "listtopicruledestinations": {},
   "listtopicrules": {},
   "listtunnels": {},
   "listv2logginglevels": {},
   "listviolationevents": {
    "Resources": [
     "securityprofile",
     "thing"
    ]
   },
   "opentunnel": {},
   "publish": {
    "Resources": [
     "topic"
    ]
   },
   "putverificationstateonviolation": {},
   "receive": {
    "Resources": [
     "topic"
    ]
   },
   "registercacertificate": {},
   "registercertificate": {},
   "registercertificatewithoutca": {},
   "registerthing": {},
   "rejectcertificatetransfer": {
    "Resources": [
     "cert"
    ]
   },
   "removethingfrombillinggroup": {
    "Resources": [
     "billinggroup",
     "thing"
    ]
   },
   "removethingfromthinggroup": {
    "Resources": [
     "thing",
     "thinggroup"
    ]
   },
   "replacetopicrule": {
    "Resources": [
     "rule"
    ]
   },
   "retainpublish": {
    "Resources": [
     "topic"
    ]
   },
   "rotatetunnelaccesstoken": {
    "Resources": [
     "tunnel"
    ]
   },
   "searchindex": {
    "Resources": [
     "index"
    ]
   },
   "setdefaultauthorizer": {
    "Resources": [
     "authorizer"
    ]
   },
   "setdefaultpolicyversion": {
    "Resources": [
     "policy"
    ]
   },
   "setloggingoptions": {},
   "setv2logginglevel": {},
   "setv2loggingoptions": {},
   "startauditmitigationactionstask": {},
   "startcommandexecution": {
    "Resources": [
     "client",
     "command",
     "thing"
    ]
   },
   "startdetectmitigationactionstask": {
    "Resources": [
     "securityprofile"
    ]
   },
   "startondemandaudittask": {},
   "startthingregistrationtask": {},
   "stopthingregistrationtask": {},
   "subscribe": {
    "Resources": [
     "topicfilter"
    ]
   },
   "tagresource": {
    "Resources": [
     "authorizer",
     "billinggroup",
     "cacert",
     "certificateprovider",
     "command",
     "custommetric",
     "dimension",
     "domainconfiguration",
     "dynamicthinggroup",
     "fleetmetric",
     "job",
     "jobtemplate",
     "mitigationaction",
     "otaupdate",
     "package",
     "packageversion",
     "policy",
     "provisioningtemplate",
     "rolealias",
     "rule",
     "scheduledaudit",
     "securityprofile",
     "stream",
     "thinggroup",
     "thingtype"
    ]
   },
   "testauthorization": {
    "Resources": [
     "cert"
    ]
   },
   "testinvokeauthorizer": {
    "Resources": [
     "authorizer"
    ]
   },
   "transfercertificate": {
    "Resources": [
     "cert"
    ]
   },
   "untagresource": {
    "Resources": [
     "authorizer",
     "billinggroup",
     "cacert",
     "certificateprovider",
     "command",
     "custommetric",
     "dimension",
     "domainconfiguration",
     "dynamicthinggroup",
     "fleetmetric",
     "job",
     "jobtemplate",
     "mitigationaction",
     "otaupdate",
     "package",
     "packageversion",
     "policy",
     "provisioningtemplate",
     "rolealias",
     "rule",
     "scheduledaudit",
     "securityprofile",
     "stream",
     "thinggroup",
     "thingtype"
    ]
   },
   "updateaccountauditconfiguration": {},
   "updateauditsuppression": {},
   "updateauthorizer": {
    "Resources": [
     "authorizer"
    ]
   },
   "updatebillinggroup": {
    "Resources": [
     "billinggroup"
    ]
   },
   "updatecacertificate": {
    "Resources": [
     "cacert"
    ]
   },
   "updatecertificate": {
    "Resources": [
     "cert"
    ]
   },
   "updatecertificateprovider": {
    "Resources": [
     "certificateprovider"
    ]
   },
   "updatecommand": {
    "Resources": [
     "command"
    ]
   },
   "updatecustommetric": {
    "Resources": [
     "custommetric"
    ]
   },
   "updatedimension": {
    "Resources": [
     "dimension"
    ]
   },
   "updatedomainconfiguration": {
    "Resources": [
     "domainconfiguration"
    ]
   },
   "updatedynamicthinggroup": {
    "Resources": [
     "dynamicthinggroup"
    ]
   },
   "updateeventconfigurations": {},
   "updatefleetmetric": {
    "Resources": [
     "fleetmetric",
     "index"
    ]
   },
   "updateindexingconfiguration": {},
   "updatejob": {
    "Resources": [
     "job"
    ]
   },
   "updatemitigationaction": {
    "Resources": [
     "mitigationaction"
    ]
   },
   "updatepackage": {
    "Resources": [
     "package"
    ]
   },
   "updatepackageconfiguration": {},
   "updatepackageversion": {
    "Resources": [
     "package",
     "packageversion"
    ]
   },
   "updateprovisioningtemplate": {
    "Resources": [
     "provisioningtemplate"
    ]
   },
   "updaterolealias": {
    "Resources": [
     "rolealias"
    ]
   },
   "updatescheduledaudit": {
    "Resources": [
     "scheduledaudit"
    ]
   },
   "updatesecurityprofile": {
    "Resources": [
     "custommetric",
     "dimension",
     "securityprofile"
    ]
   },
   "updatestream": {
    "Resources": [
     "stream"
    ]
   },
   "updatething": {
    "Resources": [
     "thing"
    ]
   },
   "updatethinggroup": {
    "Resources": [
     "thinggroup"
    ]
   },
   "updatethinggroupsforthing": {
    "Resources": [
     "thing",
     "thinggroup"
    ]
   },
   "updatethingshadow": {
    "Resources": [
     "thing"
    ]
   },
   "updatethingtype": {
    "Resources": [
     "thingtype"
    ]
   },
   "updatetopicruledestination": {
    "Resources": [
     "destination"
    ]
   },
   "validatesecurityprofilebehaviors": {}
  },
  "Resources": {
   "authorizer": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:authorizer/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "billinggroup": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:billinggroup/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "cacert": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:cacert/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "cert": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:cert/.*"
    ]
   },
   "certificateprovider": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:certificateprovider/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "client": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:client/.*"
    ]
   },
   "command": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:command/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "custommetric": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:custommetric/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "destination": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:ruledestination/.*"
    ]
   },
   "dimension": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:dimension/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "domainconfiguration": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:domainconfiguration/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "dynamicthinggroup": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:thinggroup/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "fleetmetric": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:fleetmetric/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "index": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:index/.*"
    ]
   },
   "job": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "jobtemplate": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:jobtemplate/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "mitigationaction": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:mitigationaction/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "otaupdate": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:otaupdate/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "package": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:package/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "packageversion": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:package/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "policy": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:policy/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "provisioningtemplate": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:provisioningtemplate/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "rolealias": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:rolealias/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "rule": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:rule/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "scheduledaudit": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:scheduledaudit/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "securityprofile": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:securityprofile/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "stream": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:stream/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "thing": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:thing/.*"
    ]
   },
   "thinggroup": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:thinggroup/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "thingtype": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:thingtype/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "topic": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:topic/.*"
    ]
   },
   "topicfilter": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:topicfilter/.*"
    ]
   },
   "tunnel": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:tunnel/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "iot-device-tester": {
  "Actions": {
   "checkversion": {},
   "downloadtestsuite": {},
   "latestidt": {},
   "sendmetrics": {},
   "supportedversion": {}
  },
  "Resources": {}
 },
 "iot1click": {
  "Actions": {
   "associatedevicewithplacement": {
    "Resources": [
     "project"
    ]
   },
   "claimdevicesbyclaimcode": {},
   "createplacement": {
    "Resources": [
     "project"
    ]
   },
   "createproject": {
    "Resources": [
     "project"
    ]
   },
   "deleteplacement": {
    "Resources": [
     "project"
    ]
   },
   "deleteproject": {
    "Resources": [
     "project"
    ]
   },
   "describedevice": {
    "Resources": [
     "device"
    ]
   },
   "describeplacement": {
    "Resources": [
     "project"
    ]
   },
   "describeproject": {
    "Resources": [
     "project"
    ]
   },
   "disassociatedevicefromplacement": {
    "Resources": [
     "project"
    ]
   },
   "finalizedeviceclaim": {
    "Resources": [
     "device"
    ]
   },
   "getdevicemethods": {
    "Resources": [
     "device"
    ]
   },
   "getdevicesinplacement": {
    "Resources": [
     "project"
    ]
   },
   "initiatedeviceclaim": {
    "Resources": [
     "device"
    ]
   },
   "invokedevicemethod": {
    "Resources": [
     "device"
    ]
   },
   "listdeviceevents": {
    "Resources": [
     "device"
    ]
   },
   "listdevices": {},
   "listplacements": {
    "Resources": [
     "project"
    ]
   },
   "listprojects": {},
   "listtagsforresource": {
    "Resources": [
     "device",
     "project"
    ]
   },
   "tagresource": {
    "Resources": [
     "device",
     "project"
    ]
   },
   "unclaimdevice": {
    "Resources": [
     "device"
    ]
   },
   "untagresource": {
    "Resources": [
     "device",
     "project"
    ]
   },
   "updatedevicestate": {
    "Resources": [
     "device"
    ]
   },
   "updateplacement": {
    "Resources": [
     "project"
    ]
   },
   "updateproject": {
    "Resources": [
     "project"
    ]
   }
  },
  "Resources": {
   "device": {
    "ARNFormats": [
     "arn:${Partition}:iot1click:${Region}:${Account}:devices/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "project": {
    "ARNFormats": [
     "arn:${Partition}:iot1click:${Region}:${Account}:projects/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "iotanalytics": {
  "Actions": {
   "batchputmessage": {
    "Resources": [
     "channel"
    ]
   },
   "cancelpipelinereprocessing": {
    "Resources": [
     "pipeline"
    ]
   },
   "createchannel": {
    "Resources": [
     "channel"
    ]
   },
   "createdataset": {
    "Resources": [
     "dataset"
    ]
   },
   "createdatasetcontent": {
    "Resources": [
     "dataset"
    ]
   },
   "createdatastore": {
    "Resources": [
     "datastore"
    ]
   },
   "createpipeline": {
    "Resources": [
     "pipeline"
    ]
   },
   "deletechannel": {
    "Resources": [
     "channel"
    ]
   },
   "deletedataset": {
    "Resources": [
     "dataset"
    ]
   },
   "deletedatasetcontent": {
    "Resources": [
     "dataset"
    ]
   },
   "deletedatastore": {
    "Resources": [
     "datastore"
    ]
   },
   "deletepipeline": {
    "Resources": [
     "pipeline"
    ]
   },
   "describechannel": {
    "Resources": [
     "channel"
    ]
   },
   "describedataset": {
    "Resources": [
     "dataset"
    ]
   },
   "describedatastore": {
    "Resources": [
     "datastore"
    ]
   },
   "describeloggingoptions": {},
   "describepipeline": {
    "Resources": [
     "pipeline"
    ]
   },
   "getdatasetcontent": {
    "Resources": [
     "dataset"
    ]
   },
   "listchannels": {},
   "listdatasetcontents": {
    "Resources": [
     "dataset"
    ]
   },
   "listdatasets": {},
   "listdatastores": {},
   "listpipelines": {},
   "listtagsforresource": {
    "Resources": [
     "channel",
     "dataset",
     "datastore",
     "pipeline"
    ]
   },
   "putloggingoptions": {},
   "runpipelineactivity": {},
   "samplechanneldata": {
    "Resources": [
     "channel"
    ]
   },
   "startpipelinereprocessing": {
    "Resources": [
     "pipeline"
    ]
   },
   "tagresource": {
    "Resources": [
     "channel",
     "dataset",
     "datastore",
     "pipeline"
    ]
   },
   "untagresource": {
    "Resources": [
     "channel",
     "dataset",
     "datastore",
     "pipeline"
    ]
   },
   "updatechannel": {
    "Resources": [
     "channel"
    ]
   },
   "updatedataset": {
    "Resources": [
     "dataset"
    ]
   },
   "updatedatastore": {
    "Resources": [
     "datastore"
    ]
   },
   "updatepipeline": {
    "Resources": [
     "pipeline"
    ]
   }
  },
  "Resources": {
   "channel": {
    "ARNFormats": [
     "arn:${Partition}:iotanalytics:${Region}:${Account}:channel/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:TagKeys",
     "iotanalytics:ResourceTag/${TagKey}"
    ]
   },
   "dataset": {
    "ARNFormats": [
     "arn:${Partition}:iotanalytics:${Region}:${Account}:dataset/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:TagKeys",
     "iotanalytics:ResourceTag/${TagKey}"
    ]
   },
   "datastore": {
    "ARNFormats": [
     "arn:${Partition}:iotanalytics:${Region}:${Account}:datastore/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:TagKeys",
     "iotanalytics:ResourceTag/${TagKey}"
    ]
   },
   "pipeline": {
    "ARNFormats": [
     "arn:${Partition}:iotanalytics:${Region}:${Account}:pipeline/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:TagKeys",
     "iotanalytics:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "iotdeviceadvisor": {
  "Actions": {
   "createsuitedefinition": {},
   "deletesuitedefinition": {
    "Resources": [
     "Suitedefinition"
    ]
   },
   "getendpoint": {},
   "getsuitedefinition": {
    "Resources": [
     "Suitedefinition"
    ]
   },
   "getsuiterun": {
    "Resources": [
     "Suiterun"
    ]
   },
   "getsuiterunreport": {
    "Resources": [
     "Suiterun"
    ]
   },
   "listsuitedefinitions": {},
   "listsuiteruns": {
    "Resources": [
     "Suitedefinition"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "Suitedefinition",
     "Suiterun"
    ]
   },
   "startsuiterun": {},
   "stopsuiterun": {
    "Resources": [
     "Suiterun"
    ]
   },
   "tagresource": {
    "Resources": [
     "Suitedefinition",
     "Suiterun"
    ]
   },
   "untagresource": {
    "Resources": [
     "Suitedefinition",
     "Suiterun"
    ]
   },
   "updatesuitedefinition": {
    "Resources": [
     "Suitedefinition"
    ]
   }
  },
  "Resources": {
   "suitedefinition": {
    "ARNFormats": [
     "arn:${Partition}:iotdeviceadvisor:${Region}:${Account}:suitedefinition/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "suiterun": {
    "ARNFormats": [
     "arn:${Partition}:iotdeviceadvisor:${Region}:${Account}:suiterun/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "iotevents": {
  "Actions": {
   "batchacknowledgealarm": {
    "Resources": [
     "alarmModel"
    ]
   },
   "batchdeletedetector": {
    "Resources": [
     "detectorModel"
    ]
   },
   "batchdisablealarm": {
    "Resources": [
     "alarmModel"
    ]
   },
   "batchenablealarm": {
    "Resources": [
     "alarmModel"
    ]
   },
   "batchputmessage": {
    "Resources": [
     "input"
    ]
   },
   "batchresetalarm": {
    "Resources": [
     "alarmModel"
    ]
   },
   "batchsnoozealarm": {
    "Resources": [
     "alarmModel"
    ]
   },
   "batchupdatedetector": {
    "Resources": [
     "detectorModel"
    ]
   },
   "createalarmmodel": {
    "Resources": [
     "alarmModel"
    ]
   },
   "createdetectormodel": {
    "Resources": [
     "detectorModel"
    ]
   },
   "createinput": {
    "Resources": [
     "input"
    ]
   },
   "deletealarmmodel": {
    "Resources": [
     "alarmModel"
    ]
   },
   "deletedetectormodel": {
    "Resources": [
     "detectorModel"
    ]
   },
   "deleteinput": {
    "Resources": [
     "input"
    ]
   },
   "describealarm": {
    "Resources": [
     "alarmModel"
    ]
   },
   "describealarmmodel": {
    "Resources": [
     "alarmModel"
    ]
   },
   "describedetector": {
    "Resources": [
     "detectorModel"
    ]
   },
   "describedetectormodel": {
    "Resources": [
     "detectorModel"
    ]
   },
   "describedetectormodelanalysis": {},
   "describeinput": {
    "Resources": [
     "input"
    ]
   },
   "describeloggingoptions": {},
   "getdetectormodelanalysisresults": {},
   "listalarmmodels": {},
   "listalarmmodelversions": {
    "Resources": [
     "alarmModel"
    ]
   },
   "listalarms": {
    "Resources": [
     "alarmModel"
    ]
   },
   "listdetectormodels": {},
   "listdetectormodelversions": {
    "Resources": [
     "detectorModel"
    ]
   },
   "listdetectors": {
    "Resources": [
     "detectorModel"
    ]
   },
   "listinputroutings": {},
   "listinputs": {},
   "listtagsforresource": {
    "Resources": [
     "alarmModel",
     "detectorModel",
     "input"
    ]
   },
   "putloggingoptions": {},
   "startdetectormodelanalysis": {},
   "tagresource": {
    "Resources": [
     "alarmModel",
     "detectorModel",
     "input"
    ]
   },
   "untagresource": {
    "Resources": [
     "alarmModel",
     "detectorModel",
     "input"
    ]
   },
   "updatealarmmodel": {
    "Resources": [
     "alarmModel"
    ]
   },
   "updatedetectormodel": {
    "Resources": [
     "detectorModel"
    ]
   },
   "updateinput": {
    "Resources": [
     "input"
    ]
   },
   "updateinputrouting": {
    "Resources": [
     "input"
    ]
   }
  },
  "Resources": {
   "alarmmodel": {
    "ARNFormats": [
     "arn:${Partition}:iotevents:${Region}:${Account}:alarmModel/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "detectormodel": {
    "ARNFormats": [
     "arn:${Partition}:iotevents:${Region}:${Account}:detectorModel/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "input": {
    "ARNFormats": [
     "arn:${Partition}:iotevents:${Region}:${Account}:input/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "iotfleethub": {
  "Actions": {
   "createapplication": {},
   "deleteapplication": {
    "Resources": [
     "application"
    ]
   },
   "describeapplication": {
    "Resources": [
     "application"
    ]
   },
   "listapplications": {},
   "listtagsforresource": {
    "Resources": [
     "application"
    ]
   },
   "tagresource": {
    "Resources": [
     "application"
    ]
   },
   "untagresource": {
    "Resources": [
     "application"
    ]
   },
   "updateapplication": {
    "Resources": [
     "application"
    ]
   }
  },
  "Resources": {
   "application": {
    "ARNFormats": [
     "arn:${Partition}:iotfleethub:${Region}:${Account}:application/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "iotfleetwise": {
  "Actions": {
   "associatevehiclefleet": {
    "Resources": [
     "fleet",
     "vehicle"
    ]
   },
   "batchcreatevehicle": {
    "Resources": [
     "decodermanifest",
     "modelmanifest",
     "vehicle"
    ]
   },
   "batchupdatevehicle": {
    "Resources": [
     "decodermanifest",
     "modelmanifest",
     "vehicle"
    ]
   },
   "createcampaign": {
    "Resources": [
     "campaign",
     "fleet",
     "signalcatalog",
     "vehicle"
    ]
   },
   "createdecodermanifest": {
    "Resources": [
     "decodermanifest",
     "modelmanifest"
    ]
   },
   "createfleet": {
    "Resources": [
     "fleet",
     "signalcatalog"
    ]
   },
   "createmodelmanifest": {
    "Resources": [
     "modelmanifest",
     "signalcatalog"
    ]
   },
   "createsignalcatalog": {
    "Resources": [
     "signalcatalog"
    ]
   },
   "createstatetemplate": {
    "Resources": [
     "signalcatalog",
     "statetemplate"
    ]
   },
   "createvehicle": {
    "Resources": [
     "decodermanifest",
     "modelmanifest",
     "vehicle"
    ]
   },
   "deletecampaign": {
    "Resources": [
     "campaign"
    ]
   },
   "deletedecodermanifest": {
    "Resources": [
     "decodermanifest"
    ]
   },
   "deletefleet": {
    "Resources": [
     "fleet"
    ]
   },
   "deletemodelmanifest": {
    "Resources": [
     "modelmanifest"
    ]
   },
   "deletesignalcatalog": {
    "Resources": [
     "signalcatalog"
    ]
   },
   "deletestatetemplate": {
    "Resources": [
     "statetemplate"
    ]
   },
   "deletevehicle": {
    "Resources": [
     "vehicle"
    ]
   },
   "disassociatevehiclefleet": {
    "Resources": [
     "fleet",
     "vehicle"
    ]
   },
   "generatecommandpayload": {
    "Resources": [
     "statetemplate",
     "vehicle"
    ]
   },
   "getcampaign": {
    "Resources": [
     "campaign"
    ]
   },
   "getdecodermanifest": {
    "Resources": [
     "decodermanifest"
    ]
   },
   "getencryptionconfiguration": {},
   "getfleet": {
    "Resources": [
     "fleet"
    ]
   },
   "getloggingoptions": {},
   "getmodelmanifest": {
    "Resources": [
     "modelmanifest"
    ]
   },
   "getregisteraccountstatus": {},
   "getsignalcatalog": {
    "Resources": [
     "signalcatalog"
    ]
   },
   "getstatetemplate": {
    "Resources": [
     "statetemplate"
    ]
   },
   "getvehicle": {
    "Resources": [
     "vehicle"
    ]
   },
   "getvehiclestatus": {
    "Resources": [
     "vehicle"
    ]
   },
   "importdecodermanifest": {
    "Resources": [
     "decodermanifest"
    ]
   },
   "importsignalcatalog": {
    "Resources": [
     "signalcatalog"
    ]
   },
   "listcampaigns": {},
   "listdecodermanifestnetworkinterfaces": {
    "Resources": [
     "decodermanifest"
    ]
   },
   "listdecodermanifests": {},
   "listdecodermanifestsignals": {
    "Resources": [
     "decodermanifest"
    ]
   },
   "listfleets": {},
   "listfleetsforvehicle": {
    "Resources": [
     "vehicle"
    ]
   },
   "listmodelmanifestnodes": {
    "Resources": [
     "modelmanifest"
    ]
   },
   "listmodelmanifests": {},
   "listsignalcatalognodes": {
    "Resources": [
     "signalcatalog"
    ]
   },
   "listsignalcatalogs": {},
   "liststatetemplates": {},
   "listtagsforresource": {
    "Resources": [
     "campaign",
     "decodermanifest",
     "fleet",
     "modelmanifest",
     "signalcatalog",
     "vehicle"
    ]
   },
   "listvehicles": {},
   "listvehiclesinfleet": {
    "Resources": [
     "fleet"
    ]
   },
   "putencryptionconfiguration": {},
   "putloggingoptions": {},
   "registeraccount": {},
   "tagresource": {
    "Resources": [
     "campaign",
     "decodermanifest",
     "fleet",
     "modelmanifest",
     "signalcatalog",
     "statetemplate",
     "vehicle"
    ]
   },
   "untagresource": {
    "Resources": [
     "campaign",
     "decodermanifest",
     "fleet",
     "modelmanifest",
     "signalcatalog",
     "statetemplate",
     "vehicle"
    ]
   },
   "updatecampaign": {
    "Resources": [
     "campaign"
    ]
   },
   "updatedecodermanifest": {
    "Resources": [
     "decodermanifest"
    ]
   },
   "updatefleet": {
    "Resources": [
     "fleet"
    ]
   },
   "updatemodelmanifest": {
    "Resources": [
     "modelmanifest"
    ]
   },
   "updatesignalcatalog": {
    "Resources": [
     "signalcatalog"
    ]
   },
   "updatestatetemplate": {
    "Resources": [
     "statetemplate"
    ]
   },
   "updatevehicle": {
    "Resources": [
     "decodermanifest",
     "modelmanifest",
     "vehicle"
    ]
   }
  },
  "Resources": {
   "campaign": {
    "ARNFormats": [
     "arn:${Partition}:iotfleetwise:${Region}:${Account}:campaign/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "decodermanifest": {
    "ARNFormats": [
     "arn:${Partition}:iotfleetwise:${Region}:${Account}:decoder-manifest/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "fleet": {
    "ARNFormats": [
     "arn:${Partition}:iotfleetwise:${Region}:${Account}:fleet/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "modelmanifest": {
    "ARNFormats": [
     "arn:${Partition}:iotfleetwise:${Region}:${Account}:model-manifest/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "signalcatalog": {
    "ARNFormats": [
     "arn:${Partition}:iotfleetwise:${Region}:${Account}:signal-catalog/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "statetemplate": {
    "ARNFormats": [
     "arn:${Partition}:iotfleetwise:${Region}:${Account}:state-template/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "vehicle": {
    "ARNFormats": [
     "arn:${Partition}:iotfleetwise:${Region}:${Account}:vehicle/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "iotjobsdata": {
  "Actions": {
   "describejobexecution": {
    "Resources": [
     "thing"
    ]
   },
   "getpendingjobexecutions": {
    "Resources": [
     "thing"
    ]
   },
   "startnextpendingjobexecution": {
    "Resources": [
     "thing"
    ]
   },
   "updatejobexecution": {
    "Resources": [
     "thing"
    ]
   }
  },
  "Resources": {
   "thing": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:thing/.*"
    ]
   }
  }
 },
 "iotmanagedintegrations": {
  "Actions": {
   "createcredentiallocker": {},
   "createdestination": {},
   "createeventlogconfiguration": {},
   "createmanagedthing": {},
   "createnotificationconfiguration": {},
   "createotatask": {},
   "createotataskconfiguration": {},
   "createprovisioningprofile": {},
   "deletecredentiallocker": {
    "Resources": [
     "CredentialLockerResource"
    ]
   },
   "deletedestination": {},
   "deleteeventlogconfiguration": {},
   "deletemanagedthing": {
    "Resources": [
     "ManagedThingResource"
    ]
   },
   "deletenotificationconfiguration": {},
   "deleteotatask": {
    "Resources": [
     "OtaTaskResource"
    ]
   },
   "deleteotataskconfiguration": {},
   "deleteprovisioningprofile": {
    "Resources": [
     "ProvisioningProfileResource"
    ]
   },
   "getcredentiallocker": {
    "Resources": [
     "CredentialLockerResource"
    ]
   },
   "getcustomendpoint": {},
   "getdefaultencryptionconfiguration": {},
   "getdestination": {},
   "getdevicediscovery": {},
   "geteventlogconfiguration": {},
   "gethubconfiguration": {},
   "getmanagedthing": {
    "Resources": [
     "ManagedThingResource"
    ]
   },
   "getmanagedthingcapabilities": {
    "Resources": [
     "ManagedThingResource"
    ]
   },
   "getmanagedthingconnectivitydata": {
    "Resources": [
     "ManagedThingResource"
    ]
   },
   "getmanagedthingmetadata": {
    "Resources": [
     "ManagedThingResource"
    ]
   },
   "getmanagedthingstate": {
    "Resources": [
     "ManagedThingResource"
    ]
   },
   "getnotificationconfiguration": {},
   "getotatask": {
    "Resources": [
     "OtaTaskResource"
    ]
   },
   "getotataskconfiguration": {},
   "getprovisioningprofile": {
    "Resources": [
     "ProvisioningProfileResource"
    ]
   },
   "getruntimelogconfiguration": {},
   "getschemaversion": {},
   "listcredentiallockers": {},
   "listdestinations": {},
   "listeventlogconfigurations": {},
   "listmanagedthings": {},
   "listmanagedthingschemas": {
    "Resources": [
     "ManagedThingResource"
    ]
   },
   "listnotificationconfigurations": {},
   "listotataskconfigurations": {},
   "listotataskexecutions": {
    "Resources": [
     "OtaTaskResource"
    ]
   },
   "listotatasks": {},
   "listprovisioningprofiles": {},
   "listschemaversions": {},
   "putdefaultencryptionconfiguration": {},
   "puthubconfiguration": {},
   "putruntimelogconfiguration": {},
   "registercustomendpoint": {},
   "resetruntimelogconfiguration": {},
   "sendmanagedthingcommand": {},
   "startdevicediscovery": {},
   "updatedestination": {},
   "updateeventlogconfiguration": {},
   "updatemanagedthing": {
    "Resources": [
     "ManagedThingResource"
    ]
   },
   "updatenotificationconfiguration": {},
   "updateotatask": {
    "Resources": [
     "OtaTaskResource"
    ]
   }
  },
  "Resources": {
   "credentiallockerresource": {
    "ARNFormats": [
     "arn:${Partition}:iotmanagedintegrations:${Region}:${Account}:credential-locker/.*"
    ]
   },
   "managedthingresource": {
    "ARNFormats": [
     "arn:${Partition}:iotmanagedintegrations:${Region}:${Account}:managed-thing/.*"
    ]
   },
   "otataskresource": {
    "ARNFormats": [
     "arn:${Partition}:iotmanagedintegrations:${Region}:${Account}:ota-task/.*"
    ]
   },
   "provisioningprofileresource": {
    "ARNFormats": [
     "arn:${Partition}:iotmanagedintegrations:${Region}:${Account}:provisioning-profile/.*"
    ]
   }
  }
 },
 "iotsitewise": {
  "Actions": {
   "associateassets": {
    "Resources": [
     "asset"
    ]
   },
   "associatetimeseriestoassetproperty": {
    "Resources": [
     "asset",
     "time-series"
    ]
   },
   "batchassociateprojectassets": {
    "Resources": [
     "project"
    ]
   },
   "batchdisassociateprojectassets": {
    "Resources": [
     "project"
    ]
   },
   "batchgetassetpropertyaggregates": {
    "Resources": [
     "asset",
     "time-series"
    ]
   },
   "batchgetassetpropertyvalue": {
    "Resources": [
     "asset",
     "time-series"
    ]
   },
   "batchgetassetpropertyvaluehistory": {
    "Resources": [
     "asset",
     "time-series"
    ]
   },
   "batchputassetpropertyvalue": {
    "Resources": [
     "asset",
     "time-series"
    ]
   },
   "createaccesspolicy": {
    "Resources": [
     "portal",
     "project"
    ]
   },
   "createasset": {
    "Resources": [
     "asset-model"
    ]
   },
   "createassetmodel": {},
   "createassetmodelcompositemodel": {
    "Resources": [
     "asset-model"
    ]
   },
   "createbulkimportjob": {},
   "createdashboard": {
    "Resources": [
     "project"
    ]
   },
   "createdataset": {},
   "creategateway": {},
   "createportal": {},
   "createproject": {
    "Resources": [
     "portal"
    ]
   },
   "deleteaccesspolicy": {
    "Resources": [
     "access-policy"
    ]
   },
   "deleteasset": {
    "Resources": [
     "asset"
    ]
   },
   "deleteassetmodel": {
    "Resources": [
     "asset-model"
    ]
   },
   "deleteassetmodelcompositemodel": {
    "Resources": [
     "asset-model"
    ]
   },
   "deletedashboard": {
    "Resources": [
     "dashboard"
    ]
   },
   "deletedataset": {
    "Resources": [
     "dataset"
    ]
   },
   "deletegateway": {
    "Resources": [
     "gateway"
    ]
   },
   "deleteportal": {
    "Resources": [
     "portal"
    ]
   },
   "deleteproject": {
    "Resources": [
     "project"
    ]
   },
   "deletetimeseries": {
    "Resources": [
     "asset",
     "time-series"
    ]
   },
   "describeaccesspolicy": {
    "Resources": [
     "access-policy"
    ]
   },
   "describeaction": {
    "Resources": [
     "asset"
    ]
   },
   "describeasset": {
    "Resources": [
     "asset"
    ]
   },
   "describeassetcompositemodel": {
    "Resources": [
     "asset"
    ]
   },
   "describeassetmodel": {
    "Resources": [
     "asset-model"
    ]
   },
   "describeassetmodelcompositemodel": {
    "Resources": [
     "asset-model"
    ]
   },
   "describeassetproperty": {
    "Resources": [
     "asset"
    ]
   },
   "describebulkimportjob": {},
   "describedashboard": {
    "Resources": [
     "dashboard"
    ]
   },
   "describedataset": {
    "Resources": [
     "dataset"
    ]
   },
   "describedefaultencryptionconfiguration": {},
   "describegateway": {
    "Resources": [
     "gateway"
    ]
   },
   "describegatewaycapabilityconfiguration": {
    "Resources": [
     "gateway"
    ]
   },
   "describeloggingoptions": {},
   "describeportal": {
    "Resources": [
     "portal"
    ]
   },
   "describeproject": {
    "Resources": [
     "project"
    ]
   },
   "describestorageconfiguration": {},
   "describetimeseries": {
    "Resources": [
     "asset",
     "time-series"
    ]
   },
   "disassociateassets": {
    "Resources": [
     "asset"
    ]
   },
   "disassociatetimeseriesfromassetproperty": {
    "Resources": [
     "asset",
     "time-series"
    ]
   },
   "enablesitewiseintegration": {},
   "executeaction": {
    "Resources": [
     "asset"
    ]
   },
   "executequery": {},
   "getassetpropertyaggregates": {
    "Resources": [
     "asset",
     "time-series"
    ]
   },
   "getassetpropertyvalue": {
    "Resources": [
     "asset",
     "time-series"
    ]
   },
   "getassetpropertyvaluehistory": {
    "Resources": [
     "asset",
     "time-series"
    ]
   },
   "getinterpolatedassetpropertyvalues": {
    "Resources": [
     "asset",
     "time-series"
    ]
   },
   "invokeassistant": {},
   "listaccesspolicies": {
    "Resources": [
     "portal",
     "project"
    ]
   },
   "listactions": {
    "Resources": [
     "asset"
    ]
   },
   "listassetmodelcompositemodels": {
    "Resources": [
     "asset-model"
    ]
   },
   "listassetmodelproperties": {
    "Resources": [
     "asset-model"
    ]
   },
   "listassetmodels": {},
   "listassetproperties": {
    "Resources": [
     "asset"
    ]
   },
   "listassetrelationships": {
    "Resources": [
     "asset"
    ]
   },
   "listassets": {
    "Resources": [
     "asset-model"
    ]
   },
   "listassociatedassets": {
    "Resources": [
     "asset"
    ]
   },
   "listbulkimportjobs": {},
   "listcompositionrelationships": {
    "Resources": [
     "asset-model"
    ]
   },
   "listdashboards": {
    "Resources": [
     "project"
    ]
   },
   "listdatasets": {},
   "listgateways": {},
   "listportals": {},
   "listprojectassets": {
    "Resources": [
     "project"
    ]
   },
   "listprojects": {
    "Resources": [
     "portal"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "access-policy",
     "asset",
     "asset-model",
     "dashboard",
     "dataset",
     "gateway",
     "portal",
     "project",
     "time-series"
    ]
   },
   "listtimeseries": {
    "Resources": [
     "asset"
    ]
   },
   "putdefaultencryptionconfiguration": {},
   "putloggingoptions": {},
   "putstorageconfiguration": {},
   "tagresource": {
    "Resources": [
     "access-policy",
     "asset",
     "asset-model",
     "dashboard",
     "dataset",
     "gateway",
     "portal",
     "project",
     "time-series"
    ]
   },
   "untagresource": {
    "Resources": [
     "access-policy",
     "asset",
     "asset-model",
     "dashboard",
     "dataset",
     "gateway",
     "portal",
     "project",
     "time-series"
    ]
   },
   "updateaccesspolicy": {
    "Resources": [
     "access-policy"
    ]
   },
   "updateasset": {
    "Resources": [
     "asset"
    ]
   },
   "updateassetmodel": {
    "Resources": [
     "asset-model"
    ]
   },
   "updateassetmodelcompositemodel": {
    "Resources": [
     "asset-model"
    ]
   },
   "updateassetmodelpropertyrouting": {
    "Resources": [
     "asset-model"
    ]
   },
   "updateassetproperty": {
    "Resources": [
     "asset"
    ]
   },
   "updatedashboard": {
    "Resources": [
     "dashboard"
    ]
   },
   "updatedataset": {
    "Resources": [
     "dataset"
    ]
   },
   "updategateway": {
    "Resources": [
     "gateway"
    ]
   },
   "updategatewaycapabilityconfiguration": {
    "Resources": [
     "gateway"
    ]
   },
   "updateportal": {
    "Resources": [
     "portal"
    ]
   },
   "updateproject": {
    "Resources": [
     "project"
    ]
   }
  },
  "Resources": {
   "access-policy": {
    "ARNFormats": [
     "arn:${Partition}:iotsitewise:${Region}:${Account}:access-policy/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "asset": {
    "ARNFormats": [
     "arn:${Partition}:iotsitewise:${Region}:${Account}:asset/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "asset-model": {
    "ARNFormats": [
     "arn:${Partition}:iotsitewise:${Region}:${Account}:asset-model/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "dashboard": {
    "ARNFormats": [
     "arn:${Partition}:iotsitewise:${Region}:${Account}:dashboard/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "dataset": {
    "ARNFormats": [
     "arn:${Partition}:iotsitewise:${Region}:${Account}:dataset/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "gateway": {
    "ARNFormats": [
     "arn:${Partition}:iotsitewise:${Region}:${Account}:gateway/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "portal": {
    "ARNFormats": [
     "arn:${Partition}:iotsitewise:${Region}:${Account}:portal/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "project": {
    "ARNFormats": [
     "arn:${Partition}:iotsitewise:${Region}:${Account}:project/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "time-series": {
    "ARNFormats": [
     "arn:${Partition}:iotsitewise:${Region}:${Account}:time-series/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "iottwinmaker": {
  "Actions": {
   "batchputpropertyvalues": {
    "Resources": [
     "entity",
     "workspace"
    ]
   },
   "cancelmetadatatransferjob": {
    "Resources": [
     "metadataTransferJob"
    ]
   },
   "createcomponenttype": {
    "Resources": [
     "workspace"
    ]
   },
   "createentity": {
    "Resources": [
     "workspace"
    ]
   },
   "createmetadatatransferjob": {},
   "createscene": {
    "Resources": [
     "workspace"
    ]
   },
   "createsyncjob": {
    "Resources": [
     "workspace"
    ]
   },
   "createworkspace": {},
   "deletecomponenttype": {
    "Resources": [
     "componentType",
     "workspace"
    ]
   },
   "deleteentity": {
    "Resources": [
     "entity",
     "workspace"
    ]
   },
   "deletescene": {
    "Resources": [
     "scene",
     "workspace"
    ]
   },
   "deletesyncjob": {
    "Resources": [
     "syncJob",
     "workspace"
    ]
   },
   "deleteworkspace": {
    "Resources": [
     "workspace"
    ]
   },
   "executequery": {
    "Resources": [
     "workspace"
    ]
   },
   "getcomponenttype": {
    "Resources": [
     "componentType",
     "workspace"
    ]
   },
   "getentity": {
    "Resources": [
     "entity",
     "workspace"
    ]
   },
   "getmetadatatransferjob": {
    "Resources": [
     "metadataTransferJob"
    ]
   },
   "getpricingplan": {},
   "getpropertyvalue": {
    "Resources": [
     "componentType",
     "entity",
     "workspace"
    ]
   },
   "getpropertyvaluehistory": {
    "Resources": [
     "componentType",
     "entity",
     "workspace"
    ]
   },
   "getscene": {
    "Resources": [
     "scene",
     "workspace"
    ]
   },
   "getsyncjob": {
    "Resources": [
     "syncJob",
     "workspace"
    ]
   },
   "getworkspace": {
    "Resources": [
     "workspace"
    ]
   },
   "listcomponents": {
    "Resources": [
     "entity",
     "workspace"
    ]
   },
   "listcomponenttypes": {
    "Resources": [
     "workspace"
    ]
   },
   "listentities": {
    "Resources": [
     "workspace"
    ]
   },
   "listmetadatatransferjobs": {},
   "listproperties": {
    "Resources": [
     "entity",
     "workspace"
    ]
   },
   "listscenes": {
    "Resources": [
     "workspace"
    ]
   },
   "listsyncjobs": {
    "Resources": [
     "workspace"
    ]
   },
   "listsyncresources": {
    "Resources": [
     "syncJob",
     "workspace"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "componentType",
     "entity",
     "scene",
     "syncJob",
     "workspace"
    ]
   },
   "listworkspaces": {},
   "tagresource": {
    "Resources": [
     "componentType",
     "entity",
     "scene",
     "syncJob",
     "workspace"
    ]
   },
   "untagresource": {
    "Resources": [
     "componentType",
     "entity",
     "scene",
     "syncJob",
     "workspace"
    ]
   },
   "updatecomponenttype": {
    "Resources": [
     "componentType",
     "workspace"
    ]
   },
   "updateentity": {
    "Resources": [
     "entity",
     "workspace"
    ]
   },
   "updatepricingplan": {},
   "updatescene": {
    "Resources": [
     "scene",
     "workspace"
    ]
   },
   "updateworkspace": {
    "Resources": [
     "workspace"
    ]
   }
  },
  "Resources": {
   "componenttype": {
    "ARNFormats": [
     "arn:${Partition}:iottwinmaker:${Region}:${Account}:workspace/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "entity": {
    "ARNFormats": [
     "arn:${Partition}:iottwinmaker:${Region}:${Account}:workspace/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "metadatatransferjob": {
    "ARNFormats": [
     "arn:${Partition}:iottwinmaker:${Region}:${Account}:metadata-transfer-job/.*"
    ]
   },
   "scene": {
    "ARNFormats": [
     "arn:${Partition}:iottwinmaker:${Region}:${Account}:workspace/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "syncjob": {
    "ARNFormats": [
     "arn:${Partition}:iottwinmaker:${Region}:${Account}:workspace/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "workspace": {
    "ARNFormats": [
     "arn:${Partition}:iottwinmaker:${Region}:${Account}:workspace/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "iotwireless": {
  "Actions": {
   "associateawsaccountwithpartneraccount": {},
   "associatemulticastgroupwithfuotatask": {
    "Resources": [
     "FuotaTask",
     "MulticastGroup"
    ]
   },
   "associatewirelessdevicewithfuotatask": {
    "Resources": [
     "FuotaTask",
     "WirelessDevice"
    ]
   },
   "associatewirelessdevicewithmulticastgroup": {
    "Resources": [
     "MulticastGroup",
     "WirelessDevice"
    ]
   },
   "associatewirelessdevicewiththing": {
    "Resources": [
     "WirelessDevice",
     "thing"
    ]
   },
   "associatewirelessgatewaywithcertificate": {
    "Resources": [
     "WirelessGateway",
     "cert"
    ]
   },
   "associatewirelessgatewaywiththing": {
    "Resources": [
     "WirelessGateway",
     "thing"
    ]
   },
   "cancelmulticastgroupsession": {
    "Resources": [
     "MulticastGroup"
    ]
   },
   "createdestination": {},
   "createdeviceprofile": {},
   "createfuotatask": {},
   "createmulticastgroup": {},
   "createnetworkanalyzerconfiguration": {
    "Resources": [
     "MulticastGroup",
     "WirelessDevice",
     "WirelessGateway"
    ]
   },
   "createserviceprofile": {},
   "createwirelessdevice": {},
   "createwirelessgateway": {},
   "createwirelessgatewaytask": {
    "Resources": [
     "WirelessGateway"
    ]
   },
   "createwirelessgatewaytaskdefinition": {},
   "deletedestination": {
    "Resources": [
     "Destination"
    ]
   },
   "deletedeviceprofile": {
    "Resources": [
     "DeviceProfile"
    ]
   },
   "deletefuotatask": {
    "Resources": [
     "FuotaTask"
    ]
   },
   "deletemulticastgroup": {
    "Resources": [
     "MulticastGroup"
    ]
   },
   "deletenetworkanalyzerconfiguration": {
    "Resources": [
     "NetworkAnalyzerConfiguration"
    ]
   },
   "deletequeuedmessages": {},
   "deleteserviceprofile": {
    "Resources": [
     "ServiceProfile"
    ]
   },
   "deletewirelessdevice": {
    "Resources": [
     "WirelessDevice"
    ]
   },
   "deletewirelessdeviceimporttask": {
    "Resources": [
     "ImportTask"
    ]
   },
   "deletewirelessgateway": {
    "Resources": [
     "WirelessGateway"
    ]
   },
   "deletewirelessgatewaytask": {
    "Resources": [
     "WirelessGateway"
    ]
   },
   "deletewirelessgatewaytaskdefinition": {
    "Resources": [
     "WirelessGatewayTaskDefinition"
    ]
   },
   "deregisterwirelessdevice": {
    "Resources": [
     "WirelessDevice"
    ]
   },
   "disassociateawsaccountfrompartneraccount": {
    "Resources": [
     "SidewalkAccount"
    ]
   },
   "disassociatemulticastgroupfromfuotatask": {
    "Resources": [
     "FuotaTask",
     "MulticastGroup"
    ]
   },
   "disassociatewirelessdevicefromfuotatask": {
    "Resources": [
     "FuotaTask",
     "WirelessDevice"
    ]
   },
   "disassociatewirelessdevicefrommulticastgroup": {
    "Resources": [
     "MulticastGroup",
     "WirelessDevice"
    ]
   },
   "disassociatewirelessdevicefromthing": {
    "Resources": [
     "WirelessDevice",
     "thing"
    ]
   },
   "disassociatewirelessgatewayfromcertificate": {
    "Resources": [
     "WirelessGateway",
     "cert"
    ]
   },
   "disassociatewirelessgatewayfromthing": {
    "Resources": [
     "WirelessGateway",
     "thing"
    ]
   },
   "getdestination": {
    "Resources": [
     "Destination"
    ]
   },
   "getdeviceprofile": {
    "Resources": [
     "DeviceProfile"
    ]
   },
   "geteventconfigurationbyresourcetypes": {},
   "getfuotatask": {
    "Resources": [
     "FuotaTask"
    ]
   },
   "getloglevelsbyresourcetypes": {},
   "getmetricconfiguration": {},
   "getmetrics": {},
   "getmulticastgroup": {
    "Resources": [
     "MulticastGroup"
    ]
   },
   "getmulticastgroupsession": {
    "Resources": [
     "MulticastGroup"
    ]
   },
   "getnetworkanalyzerconfiguration": {
    "Resources": [
     "NetworkAnalyzerConfiguration"
    ]
   },
   "getpartneraccount": {
    "Resources": [
     "SidewalkAccount"
    ]
   },
   "getposition": {
    "Resources": [
     "WirelessDevice",
     "WirelessGateway"
    ]
   },
   "getpositionconfiguration": {
    "Resources": [
     "WirelessDevice",
     "WirelessGateway"
    ]
   },
   "getpositionestimate": {},
   "getresourceeventconfiguration": {
    "Resources": [
     "SidewalkAccount",
     "WirelessDevice",
     "WirelessGateway"
    ]
   },
   "getresourceloglevel": {
    "Resources": [
     "WirelessDevice",
     "WirelessGateway"
    ]
   },
   "getresourceposition": {
    "Resources": [
     "WirelessDevice",
     "WirelessGateway"
    ]
   },
   "getserviceendpoint": {},
   "getserviceprofile": {
    "Resources": [
     "ServiceProfile"
    ]
   },
   "getwirelessdevice": {
    "Resources": [
     "WirelessDevice"
    ]
   },
   "getwirelessdeviceimporttask": {
    "Resources": [
     "ImportTask"
    ]
   },
   "getwirelessdevicestatistics": {
    "Resources": [
     "WirelessDevice"
    ]
   },
   "getwirelessgateway": {
    "Resources": [
     "WirelessGateway"
    ]
   },
   "getwirelessgatewaycertificate": {
    "Resources": [
     "WirelessGateway"
    ]
   },
   "getwirelessgatewayfirmwareinformation": {
    "Resources": [
     "WirelessGateway"
    ]
   },
   "getwirelessgatewaystatistics": {
    "Resources": [
     "WirelessGateway"
    ]
   },
   "getwirelessgatewaytask": {
    "Resources": [
     "WirelessGateway"
    ]
   },
   "getwirelessgatewaytaskdefinition": {
    "Resources": [
     "WirelessGatewayTaskDefinition"
    ]
   },
   "listdestinations": {},
   "listdeviceprofiles": {},
   "listdevicesforwirelessdeviceimporttask": {
    "Resources": [
     "ImportTask"
    ]
   },
   "listeventconfigurations": {},
   "listfuotatasks": {},
   "listmulticastgroups": {},
   "listmulticastgroupsbyfuotatask": {
    "Resources": [
     "FuotaTask"
    ]
   },
   "listnetworkanalyzerconfigurations": {},
   "listpartneraccounts": {},
   "listpositionconfigurations": {},
   "listqueuedmessages": {},
   "listserviceprofiles": {},
   "listtagsforresource": {
    "Resources": [
     "Destination",
     "DeviceProfile",
     "FuotaTask",
     "ImportTask",
     "MulticastGroup",
     "NetworkAnalyzerConfiguration",
     "ServiceProfile",
     "SidewalkAccount",
     "WirelessDevice",
     "WirelessGateway",
     "WirelessGatewayTaskDefinition"
    ]
   },
   "listwirelessdeviceimporttasks": {},
   "listwirelessdevices": {},
   "listwirelessgateways": {},
   "listwirelessgatewaytaskdefinitions": {},
   "putpositionconfiguration": {
    "Resources": [
     "WirelessDevice",
     "WirelessGateway"
    ]
   },
   "putresourceloglevel": {
    "Resources": [
     "WirelessDevice",
     "WirelessGateway"
    ]
   },
   "resetallresourceloglevels": {},
   "resetresourceloglevel": {
    "Resources": [
     "WirelessDevice",
     "WirelessGateway"
    ]
   },
   "senddatatomulticastgroup": {
    "Resources": [
     "MulticastGroup"
    ]
   },
   "senddatatowirelessdevice": {
    "Resources": [
     "WirelessDevice"
    ]
   },
   "startbulkassociatewirelessdevicewithmulticastgroup": {
    "Resources": [
     "MulticastGroup"
    ]
   },
   "startbulkdisassociatewirelessdevicefrommulticastgroup": {
    "Resources": [
     "MulticastGroup"
    ]
   },
   "startfuotatask": {
    "Resources": [
     "FuotaTask"
    ]
   },
   "startmulticastgroupsession": {
    "Resources": [
     "MulticastGroup"
    ]
   },
   "startnetworkanalyzerstream": {
    "Resources": [
     "NetworkAnalyzerConfiguration"
    ]
   },
   "startsinglewirelessdeviceimporttask": {},
   "startwirelessdeviceimporttask": {
    "Resources": [
     "ImportTask"
    ]
   },
   "tagresource": {
    "Resources": [
     "Destination",
     "DeviceProfile",
     "FuotaTask",
     "ImportTask",
     "MulticastGroup",
     "NetworkAnalyzerConfiguration",
     "ServiceProfile",
     "SidewalkAccount",
     "WirelessDevice",
     "WirelessGateway",
     "WirelessGatewayTaskDefinition"
    ]
   },
   "testwirelessdevice": {
    "Resources": [
     "WirelessDevice"
    ]
   },
   "untagresource": {
    "Resources": [
     "Destination",
     "DeviceProfile",
     "FuotaTask",
     "ImportTask",
     "MulticastGroup",
     "NetworkAnalyzerConfiguration",
     "ServiceProfile",
     "SidewalkAccount",
     "WirelessDevice",
     "WirelessGateway",
     "WirelessGatewayTaskDefinition"
    ]
   },
   "updatedestination": {
    "Resources": [
     "Destination"
    ]
   },
   "updateeventconfigurationbyresourcetypes": {},
   "updatefuotatask": {
    "Resources": [
     "FuotaTask"
    ]
   },
   "updateloglevelsbyresourcetypes": {},
   "updatemetricconfiguration": {},
   "updatemulticastgroup": {
    "Resources": [
     "MulticastGroup"
    ]
   },
   "updatenetworkanalyzerconfiguration": {
    "Resources": [
     "MulticastGroup",
     "NetworkAnalyzerConfiguration",
     "WirelessDevice",
     "WirelessGateway"
    ]
   },
   "updatepartneraccount": {
    "Resources": [
     "SidewalkAccount"
    ]
   },
   "updateposition": {
    "Resources": [
     "WirelessDevice",
     "WirelessGateway"
    ]
   },
   "updateresourceeventconfiguration": {
    "Resources": [
     "SidewalkAccount",
     "WirelessDevice",
     "WirelessGateway"
    ]
   },
   "updateresourceposition": {
    "Resources": [
     "WirelessDevice",
     "WirelessGateway"
    ]
   },
   "updatewirelessdevice": {
    "Resources": [
     "WirelessDevice"
    ]
   },
   "updatewirelessdeviceimporttask": {
    "Resources": [
     "ImportTask"
    ]
   },
   "updatewirelessgateway": {
    "Resources": [
     "WirelessGateway"
    ]
   }
  },
  "Resources": {
   "cert": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:cert/.*"
    ]
   },
   "destination": {
    "ARNFormats": [
     "arn:${Partition}:iotwireless:${Region}:${Account}:Destination/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "deviceprofile": {
    "ARNFormats": [
     "arn:${Partition}:iotwireless:${Region}:${Account}:DeviceProfile/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "fuotatask": {
    "ARNFormats": [
     "arn:${Partition}:iotwireless:${Region}:${Account}:FuotaTask/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "importtask": {
    "ARNFormats": [
     "arn:${Partition}:iotwireless:${Region}:${Account}:ImportTask/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "multicastgroup": {
    "ARNFormats": [
     "arn:${Partition}:iotwireless:${Region}:${Account}:MulticastGroup/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "networkanalyzerconfiguration": {
    "ARNFormats": [
     "arn:${Partition}:iotwireless:${Region}:${Account}:NetworkAnalyzerConfiguration/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "serviceprofile": {
    "ARNFormats": [
     "arn:${Partition}:iotwireless:${Region}:${Account}:ServiceProfile/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "sidewalkaccount": {
    "ARNFormats": [
     "arn:${Partition}:iotwireless:${Region}:${Account}:SidewalkAccount/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "thing": {
    "ARNFormats": [
     "arn:${Partition}:iot:${Region}:${Account}:thing/.*"
    ]
   },
   "wirelessdevice": {
    "ARNFormats": [
     "arn:${Partition}:iotwireless:${Region}:${Account}:WirelessDevice/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "wirelessgateway": {
    "ARNFormats": [
     "arn:${Partition}:iotwireless:${Region}:${Account}:WirelessGateway/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "wirelessgatewaytaskdefinition": {
    "ARNFormats": [
     "arn:${Partition}:iotwireless:${Region}:${Account}:WirelessGatewayTaskDefinition/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "iq": {
  "Actions": {
   "acceptcall": {
    "Resources": [
     "call"
    ]
   },
   "approvepaymentrequest": {
    "Resources": [
     "paymentRequest"
    ]
   },
   "approveproposal": {
    "Resources": [
     "proposal"
    ]
   },
   "archiveconversation": {
    "Resources": [
     "conversation"
    ]
   },
   "completeproposal": {
    "Resources": [
     "proposal"
    ]
   },
   "createconversation": {},
   "createexpert": {},
   "createlisting": {},
   "createmilestoneproposal": {},
   "createpaymentrequest": {},
   "createproject": {},
   "createrequest": {},
   "createscheduledproposal": {},
   "createseller": {},
   "createupfrontproposal": {},
   "declinecall": {
    "Resources": [
     "call"
    ]
   },
   "deleteattachment": {
    "Resources": [
     "attachment"
    ]
   },
   "disableindividualpublicprofile": {
    "Resources": [
     "expert"
    ]
   },
   "downloadattachment": {
    "Resources": [
     "attachment"
    ]
   },
   "enableindividualpublicprofile": {
    "Resources": [
     "expert"
    ]
   },
   "endcall": {
    "Resources": [
     "call"
    ]
   },
   "getbuyer": {
    "Resources": [
     "buyer"
    ]
   },
   "getcall": {
    "Resources": [
     "call"
    ]
   },
   "getchatinfo": {
    "Resources": [
     "conversation"
    ]
   },
   "getchatmessages": {
    "Resources": [
     "conversation"
    ]
   },
   "getchattoken": {
    "Resources": [
     "token"
    ]
   },
   "getcompanychatmessages": {
    "Resources": [
     "conversation"
    ]
   },
   "getcompanyprofile": {
    "Resources": [
     "company"
    ]
   },
   "getconversation": {
    "Resources": [
     "conversation"
    ]
   },
   "getexpert": {
    "Resources": [
     "expert"
    ]
   },
   "getlisting": {
    "Resources": [
     "listing"
    ]
   },
   "getmarketplaceseller": {
    "Resources": [
     "seller"
    ]
   },
   "getpaymentrequest": {
    "Resources": [
     "paymentRequest"
    ]
   },
   "getproposal": {
    "Resources": [
     "proposal"
    ]
   },
   "getrequest": {
    "Resources": [
     "request"
    ]
   },
   "getreview": {
    "Resources": [
     "seller"
    ]
   },
   "hiderequest": {
    "Resources": [
     "request"
    ]
   },
   "initiatecall": {},
   "linkawscertification": {
    "Resources": [
     "expert"
    ]
   },
   "listattachments": {
    "Resources": [
     "attachment"
    ]
   },
   "listconversations": {
    "Resources": [
     "conversation"
    ]
   },
   "listexpertaccesslogs": {
    "Resources": [
     "permission"
    ]
   },
   "listlistings": {
    "Resources": [
     "listing"
    ]
   },
   "listpaymentrequests": {
    "Resources": [
     "paymentRequest",
     "paymentSchedule"
    ]
   },
   "listproposals": {
    "Resources": [
     "proposal"
    ]
   },
   "listrequests": {
    "Resources": [
     "request"
    ]
   },
   "listreviews": {
    "Resources": [
     "seller"
    ]
   },
   "markchatmessageread": {
    "Resources": [
     "conversation"
    ]
   },
   "rejectpaymentrequest": {
    "Resources": [
     "paymentRequest"
    ]
   },
   "rejectproposal": {
    "Resources": [
     "proposal"
    ]
   },
   "sendcompanychatmessage": {
    "Resources": [
     "conversation"
    ]
   },
   "sendindividualchatmessage": {
    "Resources": [
     "conversation"
    ]
   },
   "unarchiveconversation": {
    "Resources": [
     "conversation"
    ]
   },
   "unlinkawscertification": {
    "Resources": [
     "expert"
    ]
   },
   "updatecompanyprofile": {
    "Resources": [
     "company"
    ]
   },
   "updateconversationmembers": {
    "Resources": [
     "conversation"
    ]
   },
   "updateexpert": {
    "Resources": [
     "expert"
    ]
   },
   "updatelisting": {
    "Resources": [
     "listing"
    ]
   },
   "updaterequest": {
    "Resources": [
     "request"
    ]
   },
   "uploadattachment": {},
   "withdrawpaymentrequest": {
    "Resources": [
     "paymentRequest"
    ]
   },
   "withdrawproposal": {
    "Resources": [
     "proposal"
    ]
   },
   "writereview": {
    "Resources": [
     "seller"
    ]
   }
  },
  "Resources": {
   "attachment": {
    "ARNFormats": [
     "arn:${Partition}:iq:${Region}::attachment/.*"
    ]
   },
   "buyer": {
    "ARNFormats": [
     "arn:${Partition}:iq:${Region}::buyer/.*"
    ]
   },
   "call": {
    "ARNFormats": [
     "arn:${Partition}:iq:${Region}::call/.*"
    ]
   },
   "company": {
    "ARNFormats": [
     "arn:${Partition}:iq:${Region}::company/.*"
    ]
   },
   "conversation": {
    "ARNFormats": [
     "arn:${Partition}:iq:${Region}::conversation/.*"
    ]
   },
   "expert": {
    "ARNFormats": [
     "arn:${Partition}:iq:${Region}::expert/.*"
    ]
   },
   "listing": {
    "ARNFormats": [
     "arn:${Partition}:iq:${Region}::listing/.*"
    ]
   },
   "paymentrequest": {
    "ARNFormats": [
     "arn:${Partition}:iq:${Region}::paymentRequest/.*"
    ]
   },
   "paymentschedule": {
    "ARNFormats": [
     "arn:${Partition}:iq:${Region}::paymentSchedule/.*"
    ]
   },
   "permission": {
    "ARNFormats": [
     "arn:${Partition}:iq-permission:${Region}::permission/.*"
    ]
   },
   "proposal": {
    "ARNFormats": [
     "arn:${Partition}:iq:${Region}::proposal/.*"
    ]
   },
   "request": {
    "ARNFormats": [
     "arn:${Partition}:iq:${Region}::request/.*"
    ]
   },
   "seller": {
    "ARNFormats": [
     "arn:${Partition}:iq:${Region}::seller/.*"
    ]
   },
   "token": {
    "ARNFormats": [
     "arn:${Partition}:iq:${Region}::token/.*"
    ]
   }
  }
 },
 "iq-permission": {
  "Actions": {
   "approveaccessgrant": {
    "Resources": [
     "permission"
    ]
   },
   "approvepermissionrequest": {
    "Resources": [
     "permission"
    ]
   },
   "assumepermissionrole": {
    "Resources": [
     "permission"
    ]
   },
   "createpermissionrequest": {
    "Resources": [
     "permission"
    ]
   },
   "getpermissionrequest": {
    "Resources": [
     "permission"
    ]
   },
   "listpermissionrequests": {
    "Resources": [
     "permission"
    ]
   },
   "rejectpermissionrequest": {
    "Resources": [
     "permission"
    ]
   },
   "revokepermissionrequest": {
    "Resources": [
     "permission"
    ]
   },
   "withdrawpermissionrequest": {
    "Resources": [
     "permission"
    ]
   }
  },
  "Resources": {
   "permission": {
    "ARNFormats": [
     "arn:${Partition}:iq-permission:${Region}::permission/.*"
    ]
   }
  }
 },
 "ivs": {
  "Actions": {
   "batchgetchannel": {
    "Resources": [
     "Channel"
    ]
   },
   "batchgetstreamkey": {
    "Resources": [
     "Stream-Key"
    ]
   },
   "batchstartviewersessionrevocation": {
    "Resources": [
     "Channel"
    ]
   },
   "createchannel": {
    "Resources": [
     "Channel",
     "Stream-Key"
    ]
   },
   "createencoderconfiguration": {
    "Resources": [
     "Encoder-Configuration"
    ]
   },
   "createingestconfiguration": {
    "Resources": [
     "Ingest-Configuration"
    ]
   },
   "createparticipanttoken": {
    "Resources": [
     "Stage"
    ]
   },
   "createplaybackrestrictionpolicy": {
    "Resources": [
     "Playback-Restriction-Policy"
    ]
   },
   "createrecordingconfiguration": {
    "Resources": [
     "Recording-Configuration"
    ]
   },
   "createstage": {
    "Resources": [
     "Stage"
    ]
   },
   "createstorageconfiguration": {
    "Resources": [
     "Storage-Configuration"
    ]
   },
   "createstreamkey": {
    "Resources": [
     "Stream-Key"
    ]
   },
   "deletechannel": {
    "Resources": [
     "Channel",
     "Stream-Key"
    ]
   },
   "deleteencoderconfiguration": {
    "Resources": [
     "Encoder-Configuration"
    ]
   },
   "deleteingestconfiguration": {
    "Resources": [
     "Ingest-Configuration"
    ]
   },
   "deleteplaybackkeypair": {
    "Resources": [
     "Playback-Key-Pair"
    ]
   },
   "deleteplaybackrestrictionpolicy": {
    "Resources": [
     "Playback-Restriction-Policy"
    ]
   },
   "deletepublickey": {
    "Resources": [
     "Public-Key"
    ]
   },
   "deleterecordingconfiguration": {
    "Resources": [
     "Recording-Configuration"
    ]
   },
   "deletestage": {
    "Resources": [
     "Stage"
    ]
   },
   "deletestorageconfiguration": {
    "Resources": [
     "Storage-Configuration"
    ]
   },
   "deletestreamkey": {
    "Resources": [
     "Stream-Key"
    ]
   },
   "disconnectparticipant": {
    "Resources": [
     "Stage"
    ]
   },
   "getchannel": {
    "Resources": [
     "Channel"
    ]
   },
   "getcomposition": {
    "Resources": [
     "Composition"
    ]
   },
   "getencoderconfiguration": {
    "Resources": [
     "Encoder-Configuration"
    ]
   },
   "getingestconfiguration": {
    "Resources": [
     "Ingest-Configuration"
    ]
   },
   "getparticipant": {
    "Resources": [
     "Stage"
    ]
   },
   "getplaybackkeypair": {
    "Resources": [
     "Playback-Key-Pair"
    ]
   },
   "getplaybackrestrictionpolicy": {
    "Resources": [
     "Playback-Restriction-Policy"
    ]
   },
   "getpublickey": {
    "Resources": [
     "Public-Key"
    ]
   },
   "getrecordingconfiguration": {
    "Resources": [
     "Recording-Configuration"
    ]
   },
   "getstage": {
    "Resources": [
     "Stage"
    ]
   },
   "getstagesession": {
    "Resources": [
     "Stage"
    ]
   },
   "getstorageconfiguration": {
    "Resources": [
     "Storage-Configuration"
    ]
   },
   "getstream": {
    "Resources": [
     "Channel"
    ]
   },
   "getstreamkey": {
    "Resources": [
     "Stream-Key"
    ]
   },
   "getstreamsession": {
    "Resources": [
     "Channel"
    ]
   },
   "importplaybackkeypair": {
    "Resources": [
     "Playback-Key-Pair"
    ]
   },
   "importpublickey": {
    "Resources": [
     "Public-Key"
    ]
   },
   "listchannels": {
    "Resources": [
     "Channel"
    ]
   },
   "listcompositions": {
    "Resources": [
     "Encoder-Configuration",
     "Stage"
    ]
   },
   "listencoderconfigurations": {},
   "listingestconfigurations": {},
   "listparticipantevents": {
    "Resources": [
     "Stage"
    ]
   },
   "listparticipants": {
    "Resources": [
     "Stage"
    ]
   },
   "listplaybackkeypairs": {
    "Resources": [
     "Playback-Key-Pair"
    ]
   },
   "listplaybackrestrictionpolicies": {},
   "listpublickeys": {},
   "listrecordingconfigurations": {
    "Resources": [
     "Recording-Configuration"
    ]
   },
   "liststages": {
    "Resources": [
     "Stage"
    ]
   },
   "liststagesessions": {
    "Resources": [
     "Stage"
    ]
   },
   "liststorageconfigurations": {},
   "liststreamkeys": {
    "Resources": [
     "Channel",
     "Stream-Key"
    ]
   },
   "liststreams": {
    "Resources": [
     "Channel"
    ]
   },
   "liststreamsessions": {
    "Resources": [
     "Channel"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "Channel",
     "Composition",
     "Encoder-Configuration",
     "Ingest-Configuration",
     "Playback-Key-Pair",
     "Playback-Restriction-Policy",
     "Public-Key",
     "Recording-Configuration",
     "Stage",
     "Storage-Configuration",
     "Stream-Key"
    ]
   },
   "putmetadata": {
    "Resources": [
     "Channel"
    ]
   },
   "startcomposition": {
    "Resources": [
     "Channel",
     "Encoder-Configuration",
     "Stage",
     "Storage-Configuration"
    ]
   },
   "startviewersessionrevocation": {
    "Resources": [
     "Channel"
    ]
   },
   "stopcomposition": {
    "Resources": [
     "Composition"
    ]
   },
   "stopstream": {
    "Resources": [
     "Channel"
    ]
   },
   "tagresource": {
    "Resources": [
     "Channel",
     "Composition",
     "Encoder-Configuration",
     "Ingest-Configuration",
     "Playback-Key-Pair",
     "Playback-Restriction-Policy",
     "Public-Key",
     "Recording-Configuration",
     "Stage",
     "Storage-Configuration",
     "Stream-Key"
    ]
   },
   "untagresource": {
    "Resources": [
     "Channel",
     "Composition",
     "Encoder-Configuration",
     "Ingest-Configuration",
     "Playback-Key-Pair",
     "Playback-Restriction-Policy",
     "Public-Key",
     "Recording-Configuration",
     "Stage",
     "Storage-Configuration",
     "Stream-Key"
    ]
   },
   "updatechannel": {
    "Resources": [
     "Channel"
    ]
   },
   "updateingestconfiguration": {
    "Resources": [
     "Ingest-Configuration"
    ]
   },
   "updateplaybackrestrictionpolicy": {
    "Resources": [
     "Playback-Restriction-Policy"
    ]
   },
   "updatestage": {
    "Resources": [
     "Stage"
    ]
   }
  },
  "Resources": {
   "channel": {
    "ARNFormats": [
     "arn:${Partition}:ivs:${Region}:${Account}:channel/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "composition": {
    "ARNFormats": [
     "arn:${Partition}:ivs:${Region}:${Account}:composition/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "encoder-configuration": {
    "ARNFormats": [
     "arn:${Partition}:ivs:${Region}:${Account}:encoder-configuration/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "ingest-configuration": {
    "ARNFormats": [
     "arn:${Partition}:ivs:${Region}:${Account}:ingest-configuration/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "playback-key-pair": {
    "ARNFormats": [
     "arn:${Partition}:ivs:${Region}:${Account}:playback-key/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "playback-restriction-policy": {
    "ARNFormats": [
     "arn:${Partition}:ivs:${Region}:${Account}:playback-restriction-policy/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "public-key": {
    "ARNFormats": [
     "arn:${Partition}:ivs:${Region}:${Account}:public-key/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "recording-configuration": {
    "ARNFormats": [
     "arn:${Partition}:ivs:${Region}:${Account}:recording-configuration/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "stage": {
    "ARNFormats": [
     "arn:${Partition}:ivs:${Region}:${Account}:stage/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "storage-configuration": {
    "ARNFormats": [
     "arn:${Partition}:ivs:${Region}:${Account}:storage-configuration/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "stream-key": {
    "ARNFormats": [
     "arn:${Partition}:ivs:${Region}:${Account}:stream-key/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "ivschat": {
  "Actions": {
   "createchattoken": {
    "Resources": [
     "Room"
    ]
   },
   "createloggingconfiguration": {
    "Resources": [
     "Logging-Configuration"
    ]
   },
   "createroom": {
    "Resources": [
     "Room"
    ]
   },
   "deleteloggingconfiguration": {
    "Resources": [
     "Logging-Configuration"
    ]
   },
   "deletemessage": {
    "Resources": [
     "Room"
    ]
   },
   "deleteroom": {
    "Resources": [
     "Room"
    ]
   },
   "disconnectuser": {
    "Resources": [
     "Room"
    ]
   },
   "getloggingconfiguration": {
    "Resources": [
     "Logging-Configuration"
    ]
   },
   "getroom": {
    "Resources": [
     "Room"
    ]
   },
   "listloggingconfigurations": {
    "Resources": [
     "Logging-Configuration"
    ]
   },
   "listrooms": {
    "Resources": [
     "Room"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "Room"
    ]
   },
   "sendevent": {
    "Resources": [
     "Room"
    ]
   },
   "tagresource": {
    "Resources": [
     "Logging-Configuration",
     "Room"
    ]
   },
   "untagresource": {
    "Resources": [
     "Logging-Configuration",
     "Room"
    ]
   },
   "updateloggingconfiguration": {
    "Resources": [
     "Logging-Configuration"
    ]
   },
   "updateroom": {
    "Resources": [
     "Room"
    ]
   }
  },
  "Resources": {
   "logging-configuration": {
    "ARNFormats": [
     "arn:${Partition}:ivschat:${Region}:${Account}:logging-configuration/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "room": {
    "ARNFormats": [
     "arn:${Partition}:ivschat:${Region}:${Account}:room/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "kafka": {
  "Actions": {
   "batchassociatescramsecret": {
    "Resources": [
     "cluster"
    ]
   },
   "batchdisassociatescramsecret": {
    "Resources": [
     "cluster"
    ]
   },
   "createcluster": {
    "Resources": [
     "cluster"
    ]
   },
   "createclusterv2": {
    "Resources": [
     "cluster"
    ]
   },
   "createconfiguration": {
    "Resources": [
     "configuration"
    ]
   },
   "createreplicator": {
    "Resources": [
     "replicator"
    ]
   },
   "createvpcconnection": {
    "Resources": [
     "cluster",
     "vpc-connection"
    ]
   },
   "deletecluster": {
    "Resources": [
     "cluster"
    ]
   },
   "deleteclusterpolicy": {
    "Resources": [
     "cluster"
    ]
   },
   "deleteconfiguration": {
    "Resources": [
     "configuration"
    ]
   },
   "deletereplicator": {
    "Resources": [
     "replicator"
    ]
   },
   "deletevpcconnection": {
    "Resources": [
     "vpc-connection"
    ]
   },
   "describecluster": {
    "Resources": [
     "cluster"
    ]
   },
   "describeclusteroperation": {},
   "describeclusteroperationv2": {},
   "describeclusterv2": {
    "Resources": [
     "cluster"
    ]
   },
   "describeconfiguration": {
    "Resources": [
     "configuration"
    ]
   },
   "describeconfigurationrevision": {
    "Resources": [
     "configuration"
    ]
   },
   "describereplicator": {
    "Resources": [
     "replicator"
    ]
   },
   "describevpcconnection": {
    "Resources": [
     "vpc-connection"
    ]
   },
   "getbootstrapbrokers": {},
   "getclusterpolicy": {
    "Resources": [
     "cluster"
    ]
   },
   "getcompatiblekafkaversions": {},
   "listclientvpcconnections": {
    "Resources": [
     "cluster"
    ]
   },
   "listclusteroperations": {
    "Resources": [
     "cluster"
    ]
   },
   "listclusteroperationsv2": {
    "Resources": [
     "cluster"
    ]
   },
   "listclusters": {},
   "listclustersv2": {},
   "listconfigurationrevisions": {
    "Resources": [
     "configuration"
    ]
   },
   "listconfigurations": {},
   "listkafkaversions": {},
   "listnodes": {
    "Resources": [
     "cluster"
    ]
   },
   "listreplicators": {},
   "listscramsecrets": {
    "Resources": [
     "cluster"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "cluster"
    ]
   },
   "listvpcconnections": {},
   "putclusterpolicy": {
    "Resources": [
     "cluster"
    ]
   },
   "rebootbroker": {
    "Resources": [
     "cluster"
    ]
   },
   "rejectclientvpcconnection": {
    "Resources": [
     "cluster",
     "vpc-connection"
    ]
   },
   "tagresource": {
    "Resources": [
     "cluster",
     "vpc-connection"
    ]
   },
   "untagresource": {
    "Resources": [
     "cluster",
     "vpc-connection"
    ]
   },
   "updatebrokercount": {
    "Resources": [
     "cluster"
    ]
   },
   "updatebrokerstorage": {
    "Resources": [
     "cluster"
    ]
   },
   "updatebrokertype": {
    "Resources": [
     "cluster"
    ]
   },
   "updateclusterconfiguration": {
    "Resources": [
     "cluster",
     "configuration"
    ]
   },
   "updateclusterkafkaversion": {
    "Resources": [
     "cluster"
    ]
   },
   "updateconfiguration": {
    "Resources": [
     "configuration"
    ]
   },
   "updateconnectivity": {
    "Resources": [
     "cluster"
    ]
   },
   "updatemonitoring": {
    "Resources": [
     "cluster"
    ]
   },
   "updatereplicationinfo": {
    "Resources": [
     "replicator"
    ]
   },
   "updatesecurity": {
    "Resources": [
     "cluster"
    ]
   },
   "updatestorage": {
    "Resources": [
     "cluster"
    ]
   }
  },
  "Resources": {
   "cluster": {
    "ARNFormats": [
     "arn:${Partition}:kafka:${Region}:${Account}:cluster/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "configuration": {
    "ARNFormats": [
     "arn:${Partition}:kafka:${Region}:${Account}:configuration/.*"
    ]
   },
   "group": {
    "ARNFormats": [
     "arn:${Partition}:kafka:${Region}:${Account}:group/.*"
    ]
   },
   "replicator": {
    "ARNFormats": [
     "arn:${Partition}:kafka:${Region}:${Account}:replicator/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "topic": {
    "ARNFormats": [
     "arn:${Partition}:kafka:${Region}:${Account}:topic/.*"
    ]
   },
   "transactional-id": {
    "ARNFormats": [
     "arn:${Partition}:kafka:${Region}:${Account}:transactional-id/.*"
    ]
   },
   "vpc-connection": {
    "ARNFormats": [
     "arn:${Partition}:kafka:${Region}:${VpcOwnerAccount}:vpc-connection/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "kafka-cluster": {
  "Actions": {
   "altercluster": {
    "Resources": [
     "cluster"
    ]
   },
   "alterclusterdynamicconfiguration": {
    "Resources": [
     "cluster"
    ]
   },
   "altergroup": {
    "Resources": [
     "group"
    ]
   },
   "altertopic": {
    "Resources": [
     "topic"
    ]
   },
   "altertopicdynamicconfiguration": {
    "Resources": [
     "topic"
    ]
   },
   "altertransactionalid": {
    "Resources": [
     "transactional-id"
    ]
   },
   "connect": {
    "Resources": [
     "cluster"
    ]
   },
   "createtopic": {
    "Resources": [
     "topic"
    ]
   },
   "deletegroup": {
    "Resources": [
     "group"
    ]
   },
   "deletetopic": {
    "Resources": [
     "topic"
    ]
   },
   "describecluster": {
    "Resources": [
     "cluster"
    ]
   },
   "describeclusterdynamicconfiguration": {
    "Resources": [
     "cluster"
    ]
   },
   "describegroup": {
    "Resources": [
     "group"
    ]
   },
   "describetopic": {
    "Resources": [
     "topic"
    ]
   },
   "describetopicdynamicconfiguration": {
    "Resources": [
     "topic"
    ]
   },
   "describetransactionalid": {
    "Resources": [
     "transactional-id"
    ]
   },
   "readdata": {
    "Resources": [
     "topic"
    ]
   },
   "writedata": {
    "Resources": [
     "topic"
    ]
   },
   "writedataidempotently": {
    "Resources": [
     "cluster"
    ]
   }
  },
  "Resources": {
   "cluster": {
    "ARNFormats": [
     "arn:${Partition}:kafka:${Region}:${Account}:cluster/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "group": {
    "ARNFormats": [
     "arn:${Partition}:kafka:${Region}:${Account}:group/.*"
    ]
   },
   "topic": {
    "ARNFormats": [
     "arn:${Partition}:kafka:${Region}:${Account}:topic/.*"
    ]
   },
   "transactional-id": {
    "ARNFormats": [
     "arn:${Partition}:kafka:${Region}:${Account}:transactional-id/.*"
    ]
   }
  }
 },
 "kafkaconnect": {
  "Actions": {
   "createconnector": {},
   "createcustomplugin": {},
   "createworkerconfiguration": {},
   "deleteconnector": {
    "Resources": [
     "connector"
    ]
   },
   "deletecustomplugin": {
    "Resources": [
     "custom plugin"
    ]
   },
   "deleteworkerconfiguration": {
    "Resources": [
     "worker configuration"
    ]
   },
   "describeconnector": {
    "Resources": [
     "connector"
    ]
   },
   "describeconnectoroperation": {
    "Resources": [
     "connector operation"
    ]
   },
   "describecustomplugin": {
    "Resources": [
     "custom plugin"
    ]
   },
   "describeworkerconfiguration": {
    "Resources": [
     "worker configuration"
    ]
   },
   "listconnectoroperations": {
    "Resources": [
     "connector"
    ]
   },
   "listconnectors": {},
   "listcustomplugins": {},
   "listtagsforresource": {
    "Resources": [
     "connector",
     "custom plugin",
     "worker configuration"
    ]
   },
   "listworkerconfigurations": {},
   "tagresource": {
    "Resources": [
     "connector",
     "custom plugin",
     "worker configuration"
    ]
   },
   "untagresource": {
    "Resources": [
     "connector",
     "custom plugin",
     "worker configuration"
    ]
   },
   "updateconnector": {
    "Resources": [
     "connector"
    ]
   }
  },
  "Resources": {
   "connector": {
    "ARNFormats": [
     "arn:${Partition}:kafkaconnect:${Region}:${Account}:connector/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "connector operation": {
    "ARNFormats": [
     "arn:${Partition}:kafkaconnect:${Region}:${Account}:connector-operation/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "custom plugin": {
    "ARNFormats": [
     "arn:${Partition}:kafkaconnect:${Region}:${Account}:custom-plugin/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "worker configuration": {
    "ARNFormats": [
     "arn:${Partition}:kafkaconnect:${Region}:${Account}:worker-configuration/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "kendra": {
  "Actions": {
   "associateentitiestoexperience": {
    "Resources": [
     "experience",
     "index"
    ]
   },
   "associatepersonastoentities": {
    "Resources": [
     "experience",
     "index"
    ]
   },
   "batchdeletedocument": {
    "Resources": [
     "index"
    ]
   },
   "batchdeletefeaturedresultsset": {
    "Resources": [
     "featured-results-set",
     "index"
    ]
   },
   "batchgetdocumentstatus": {
    "Resources": [
     "index"
    ]
   },
   "batchputdocument": {
    "Resources": [
     "index"
    ]
   },
   "clearquerysuggestions": {
    "Resources": [
     "index"
    ]
   },
   "createaccesscontrolconfiguration": {
    "Resources": [
     "index"
    ]
   },
   "createdatasource": {
    "Resources": [
     "index"
    ]
   },
   "createexperience": {
    "Resources": [
     "index"
    ]
   },
   "createfaq": {
    "Resources": [
     "index"
    ]
   },
   "createfeaturedresultsset": {
    "Resources": [
     "index"
    ]
   },
   "createindex": {},
   "createquerysuggestionsblocklist": {
    "Resources": [
     "index"
    ]
   },
   "createthesaurus": {
    "Resources": [
     "index"
    ]
   },
   "deleteaccesscontrolconfiguration": {
    "Resources": [
     "access-control-configuration",
     "index"
    ]
   },
   "deletedatasource": {
    "Resources": [
     "data-source",
     "index"
    ]
   },
   "deleteexperience": {
    "Resources": [
     "experience",
     "index"
    ]
   },
   "deletefaq": {
    "Resources": [
     "faq",
     "index"
    ]
   },
   "deleteindex": {
    "Resources": [
     "index"
    ]
   },
   "deleteprincipalmapping": {
    "Resources": [
     "data-source",
     "index"
    ]
   },
   "deletequerysuggestionsblocklist": {
    "Resources": [
     "index",
     "query-suggestions-block-list"
    ]
   },
   "deletethesaurus": {
    "Resources": [
     "index",
     "thesaurus"
    ]
   },
   "describeaccesscontrolconfiguration": {
    "Resources": [
     "access-control-configuration",
     "index"
    ]
   },
   "describedatasource": {
    "Resources": [
     "data-source",
     "index"
    ]
   },
   "describeexperience": {
    "Resources": [
     "experience",
     "index"
    ]
   },
   "describefaq": {
    "Resources": [
     "faq",
     "index"
    ]
   },
   "describefeaturedresultsset": {
    "Resources": [
     "featured-results-set",
     "index"
    ]
   },
   "describeindex": {
    "Resources": [
     "index"
    ]
   },
   "describeprincipalmapping": {
    "Resources": [
     "data-source",
     "index"
    ]
   },
   "describequerysuggestionsblocklist": {
    "Resources": [
     "index",
     "query-suggestions-block-list"
    ]
   },
   "describequerysuggestionsconfig": {
    "Resources": [
     "index"
    ]
   },
   "describethesaurus": {
    "Resources": [
     "index",
     "thesaurus"
    ]
   },
   "disassociateentitiesfromexperience": {
    "Resources": [
     "experience",
     "index"
    ]
   },
   "disassociatepersonasfromentities": {
    "Resources": [
     "experience",
     "index"
    ]
   },
   "getquerysuggestions": {
    "Resources": [
     "index"
    ]
   },
   "getsnapshots": {
    "Resources": [
     "index"
    ]
   },
   "listaccesscontrolconfigurations": {
    "Resources": [
     "index"
    ]
   },
   "listdatasources": {
    "Resources": [
     "index"
    ]
   },
   "listdatasourcesyncjobs": {
    "Resources": [
     "data-source",
     "index"
    ]
   },
   "listentitypersonas": {
    "Resources": [
     "experience",
     "index"
    ]
   },
   "listexperienceentities": {
    "Resources": [
     "experience",
     "index"
    ]
   },
   "listexperiences": {
    "Resources": [
     "index"
    ]
   },
   "listfaqs": {
    "Resources": [
     "index"
    ]
   },
   "listfeaturedresultssets": {
    "Resources": [
     "index"
    ]
   },
   "listgroupsolderthanorderingid": {
    "Resources": [
     "data-source",
     "index"
    ]
   },
   "listindices": {},
   "listquerysuggestionsblocklists": {
    "Resources": [
     "index"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "data-source",
     "faq",
     "featured-results-set",
     "index",
     "query-suggestions-block-list",
     "thesaurus"
    ]
   },
   "listthesauri": {
    "Resources": [
     "index"
    ]
   },
   "putprincipalmapping": {
    "Resources": [
     "data-source",
     "index"
    ]
   },
   "query": {
    "Resources": [
     "index"
    ]
   },
   "retrieve": {
    "Resources": [
     "index"
    ]
   },
   "startdatasourcesyncjob": {
    "Resources": [
     "data-source",
     "index"
    ]
   },
   "stopdatasourcesyncjob": {
    "Resources": [
     "data-source",
     "index"
    ]
   },
   "submitfeedback": {
    "Resources": [
     "index"
    ]
   },
   "tagresource": {
    "Resources": [
     "data-source",
     "faq",
     "featured-results-set",
     "index",
     "query-suggestions-block-list",
     "thesaurus"
    ]
   },
   "untagresource": {
    "Resources": [
     "data-source",
     "faq",
     "featured-results-set",
     "index",
     "query-suggestions-block-list",
     "thesaurus"
    ]
   },
   "updateaccesscontrolconfiguration": {
    "Resources": [
     "access-control-configuration",
     "index"
    ]
   },
   "updatedatasource": {
    "Resources": [
     "data-source",
     "index"
    ]
   },
   "updateexperience": {
    "Resources": [
     "index"
    ]
   },
   "updatefeaturedresultsset": {
    "Resources": [
     "featured-results-set",
     "index"
    ]
   },
   "updateindex": {
    "Resources": [
     "index"
    ]
   },
   "updatequerysuggestionsblocklist": {
    "Resources": [
     "index",
     "query-suggestions-block-list"
    ]
   },
   "updatequerysuggestionsconfig": {
    "Resources": [
     "index"
    ]
   },
   "updatethesaurus": {
    "Resources": [
     "index",
     "thesaurus"
    ]
   }
  },
  "Resources": {
   "access-control-configuration": {
    "ARNFormats": [
     "arn:${Partition}:kendra:${Region}:${Account}:index/.*"
    ]
   },
   "data-source": {
    "ARNFormats": [
     "arn:${Partition}:kendra:${Region}:${Account}:index/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "experience": {
    "ARNFormats": [
     "arn:${Partition}:kendra:${Region}:${Account}:index/.*"
    ]
   },
   "faq": {
    "ARNFormats": [
     "arn:${Partition}:kendra:${Region}:${Account}:index/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "featured-results-set": {
    "ARNFormats": [
     "arn:${Partition}:kendra:${Region}:${Account}:index/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "index": {
    "ARNFormats": [
     "arn:${Partition}:kendra:${Region}:${Account}:index/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "query-suggestions-block-list": {
    "ARNFormats": [
     "arn:${Partition}:kendra:${Region}:${Account}:index/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "thesaurus": {
    "ARNFormats": [
     "arn:${Partition}:kendra:${Region}:${Account}:index/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "kendra-ranking": {
  "Actions": {
   "createrescoreexecutionplan": {},
   "deleterescoreexecutionplan": {
    "Resources": [
     "rescore-execution-plan"
    ]
   },
   "describerescoreexecutionplan": {
    "Resources": [
     "rescore-execution-plan"
    ]
   },
   "listrescoreexecutionplans": {},
   "listtagsforresource": {
    "Resources": [
     "rescore-execution-plan"
    ]
   },
   "rescore": {
    "Resources": [
     "rescore-execution-plan"
    ]
   },
   "tagresource": {
    "Resources": [
     "rescore-execution-plan"
    ]
   },
   "untagresource": {
    "Resources": [
     "rescore-execution-plan"
    ]
   },
   "updaterescoreexecutionplan": {
    "Resources": [
     "rescore-execution-plan"
    ]
   }
  },
  "Resources": {
   "rescore-execution-plan": {
    "ARNFormats": [
     "arn:${Partition}:kendra-ranking:${Region}:${Account}:rescore-execution-plan/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "kinesis": {
  "Actions": {
   "addtagstostream": {
    "Resources": [
     "stream"
    ]
   },
   "createstream": {
    "Resources": [
     "stream"
    ]
   },
   "decreasestreamretentionperiod": {
    "Resources": [
     "stream"
    ]
   },
   "deleteresourcepolicy": {
    "Resources": [
     "consumer",
     "stream"
    ]
   },
   "deletestream": {
    "Resources": [
     "stream"
    ]
   },
   "deregisterstreamconsumer": {
    "Resources": [
     "consumer"
    ]
   },
   "describelimits": {},
   "describestream": {
    "Resources": [
     "stream"
    ]
   },
   "describestreamconsumer": {
    "Resources": [
     "consumer"
    ]
   },
   "describestreamsummary": {
    "Resources": [
     "stream"
    ]
   },
   "disableenhancedmonitoring": {},
   "enableenhancedmonitoring": {},
   "getrecords": {
    "Resources": [
     "stream"
    ]
   },
   "getresourcepolicy": {
    "Resources": [
     "consumer",
     "stream"
    ]
   },
   "getsharditerator": {
    "Resources": [
     "stream"
    ]
   },
   "increasestreamretentionperiod": {
    "Resources": [
     "stream"
    ]
   },
   "listshards": {
    "Resources": [
     "stream"
    ]
   },
   "liststreamconsumers": {
    "Resources": [
     "stream"
    ]
   },
   "liststreams": {},
   "listtagsforstream": {
    "Resources": [
     "stream"
    ]
   },
   "mergeshards": {
    "Resources": [
     "stream"
    ]
   },
   "putrecord": {
    "Resources": [
     "stream"
    ]
   },
   "putrecords": {
    "Resources": [
     "stream"
    ]
   },
   "putresourcepolicy": {
    "Resources": [
     "consumer",
     "stream"
    ]
   },
   "registerstreamconsumer": {
    "Resources": [
     "stream"
    ]
   },
   "removetagsfromstream": {
    "Resources": [
     "stream"
    ]
   },
   "splitshard": {
    "Resources": [
     "stream"
    ]
   },
   "startstreamencryption": {
    "Resources": [
     "kmsKey",
     "stream"
    ]
   },
   "stopstreamencryption": {
    "Resources": [
     "kmsKey",
     "stream"
    ]
   },
   "subscribetoshard": {
    "Resources": [
     "consumer"
    ]
   },
   "updateshardcount": {},
   "updatestreammode": {}
  },
  "Resources": {
   "consumer": {
    "ARNFormats": [
     "arn:${Partition}:kinesis:${Region}:${Account}:.*"
    ]
   },
   "kmskey": {
    "ARNFormats": [
     "arn:${Partition}:kms:${Region}:${Account}:key/.*"
    ]
   },
   "stream": {
    "ARNFormats": [
     "arn:${Partition}:kinesis:${Region}:${Account}:stream/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "kinesisanalytics": {
  "Actions": {
   "addapplicationcloudwatchloggingoption": {
    "Resources": [
     "application"
    ]
   },
   "addapplicationinput": {
    "Resources": [
     "application"
    ]
   },
   "addapplicationinputprocessingconfiguration": {
    "Resources": [
     "application"
    ]
   },
   "addapplicationoutput": {
    "Resources": [
     "application"
    ]
   },
   "addapplicationreferencedatasource": {
    "Resources": [
     "application"
    ]
   },
   "addapplicationvpcconfiguration": {
    "Resources": [
     "application"
    ]
   },
   "createapplication": {},
   "createapplicationpresignedurl": {
    "Resources": [
     "application"
    ]
   },
   "createapplicationsnapshot": {
    "Resources": [
     "application"
    ]
   },
   "deleteapplication": {
    "Resources": [
     "application"
    ]
   },
   "deleteapplicationcloudwatchloggingoption": {
    "Resources": [
     "application"
    ]
   },
   "deleteapplicationinputprocessingconfiguration": {
    "Resources": [
     "application"
    ]
   },
   "deleteapplicationoutput": {
    "Resources": [
     "application"
    ]
   },
   "deleteapplicationreferencedatasource": {
    "Resources": [
     "application"
    ]
   },
   "deleteapplicationsnapshot": {
    "Resources": [
     "application"
    ]
   },
   "deleteapplicationvpcconfiguration": {
    "Resources": [
     "application"
    ]
   },
   "describeapplication": {
    "Resources": [
     "application"
    ]
   },
   "describeapplicationoperation": {
    "Resources": [
     "application"
    ]
   },
   "describeapplicationsnapshot": {
    "Resources": [
     "application"
    ]
   },
   "describeapplicationversion": {
    "Resources": [
     "application"
    ]
   },
   "discoverinputschema": {},
   "getapplicationstate": {
    "Resources": [
     "application"
    ]
   },
   "listapplicationoperations": {
    "Resources": [
     "application"
    ]
   },
   "listapplications": {},
   "listapplicationsnapshots": {
    "Resources": [
     "application"
    ]
   },
   "listapplicationversions": {
    "Resources": [
     "application"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "application"
    ]
   },
   "rollbackapplication": {
    "Resources": [
     "application"
    ]
   },
   "startapplication": {
    "Resources": [
     "application"
    ]
   },
   "stopapplication": {
    "Resources": [
     "application"
    ]
   },
   "tagresource": {
    "Resources": [
     "application"
    ]
   },
   "untagresource": {
    "Resources": [
     "application"
    ]
   },
   "updateapplication": {
    "Resources": [
     "application"
    ]
   },
   "updateapplicationmaintenanceconfiguration": {
    "Resources": [
     "application"
    ]
   }
  },
  "Resources": {
   "application": {
    "ARNFormats": [
     "arn:${Partition}:kinesisanalytics:${Region}:${Account}:application/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "kinesisvideo": {
  "Actions": {
   "connectasmaster": {
    "Resources": [
     "channel"
    ]
   },
   "connectasviewer": {
    "Resources": [
     "channel"
    ]
   },
   "createsignalingchannel": {
    "Resources": [
     "channel"
    ]
   },
   "createstream": {
    "Resources": [
     "stream"
    ]
   },
   "deleteedgeconfiguration": {
    "Resources": [
     "stream"
    ]
   },
   "deletesignalingchannel": {
    "Resources": [
     "channel"
    ]
   },
   "deletestream": {
    "Resources": [
     "stream"
    ]
   },
   "describeedgeconfiguration": {
    "Resources": [
     "stream"
    ]
   },
   "describeimagegenerationconfiguration": {
    "Resources": [
     "stream"
    ]
   },
   "describemappedresourceconfiguration": {
    "Resources": [
     "stream"
    ]
   },
   "describemediastorageconfiguration": {
    "Resources": [
     "channel"
    ]
   },
   "describenotificationconfiguration": {
    "Resources": [
     "stream"
    ]
   },
   "describesignalingchannel": {
    "Resources": [
     "channel"
    ]
   },
   "describestream": {
    "Resources": [
     "stream"
    ]
   },
   "getclip": {
    "Resources": [
     "stream"
    ]
   },
   "getdashstreamingsessionurl": {
    "Resources": [
     "stream"
    ]
   },
   "getdataendpoint": {
    "Resources": [
     "stream"
    ]
   },
   "gethlsstreamingsessionurl": {
    "Resources": [
     "stream"
    ]
   },
   "geticeserverconfig": {
    "Resources": [
     "channel"
    ]
   },
   "getimages": {
    "Resources": [
     "stream"
    ]
   },
   "getmedia": {
    "Resources": [
     "stream"
    ]
   },
   "getmediaforfragmentlist": {
    "Resources": [
     "stream"
    ]
   },
   "getsignalingchannelendpoint": {
    "Resources": [
     "channel"
    ]
   },
   "joinstoragesession": {
    "Resources": [
     "channel"
    ]
   },
   "joinstoragesessionasviewer": {
    "Resources": [
     "channel"
    ]
   },
   "listedgeagentconfigurations": {},
   "listfragments": {
    "Resources": [
     "stream"
    ]
   },
   "listsignalingchannels": {},
   "liststreams": {},
   "listtagsforresource": {
    "Resources": [
     "channel",
     "stream"
    ]
   },
   "listtagsforstream": {
    "Resources": [
     "stream"
    ]
   },
   "putmedia": {
    "Resources": [
     "stream"
    ]
   },
   "sendalexaoffertomaster": {
    "Resources": [
     "channel"
    ]
   },
   "startedgeconfigurationupdate": {
    "Resources": [
     "stream"
    ]
   },
   "tagresource": {
    "Resources": [
     "channel",
     "stream"
    ]
   },
   "tagstream": {
    "Resources": [
     "stream"
    ]
   },
   "untagresource": {
    "Resources": [
     "channel",
     "stream"
    ]
   },
   "untagstream": {
    "Resources": [
     "stream"
    ]
   },
   "updatedataretention": {
    "Resources": [
     "stream"
    ]
   },
   "updateimagegenerationconfiguration": {
    "Resources": [
     "stream"
    ]
   },
   "updatemediastorageconfiguration": {
    "Resources": [
     "channel"
    ]
   },
   "updatenotificationconfiguration": {
    "Resources": [
     "stream"
    ]
   },
   "updatesignalingchannel": {
    "Resources": [
     "channel"
    ]
   },
   "updatestream": {
    "Resources": [
     "stream"
    ]
   }
  },
  "Resources": {
   "channel": {
    "ARNFormats": [
     "arn:${Partition}:kinesisvideo:${Region}:${Account}:channel/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "stream": {
    "ARNFormats": [
     "arn:${Partition}:kinesisvideo:${Region}:${Account}:stream/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "kms": {
  "Actions": {
   "cancelkeydeletion": {
    "Resources": [
     "key"
    ]
   },
   "connectcustomkeystore": {},
   "createalias": {
    "Resources": [
     "alias",
     "key"
    ]
   },
   "createcustomkeystore": {},
   "creategrant": {
    "Resources": [
     "key"
    ]
   },
   "createkey": {},
   "decrypt": {
    "Resources": [
     "key"
    ]
   },
   "deletealias": {
    "Resources": [
     "alias",
     "key"
    ]
   },
   "deletecustomkeystore": {},
   "deleteimportedkeymaterial": {
    "Resources": [
     "key"
    ]
   },
   "derivesharedsecret": {
    "Resources": [
     "key"
    ]
   },
   "describecustomkeystores": {},
   "describekey": {
    "Resources": [
     "key"
    ]
   },
   "disablekey": {
    "Resources": [
     "key"
    ]
   },
   "disablekeyrotation": {
    "Resources": [
     "key"
    ]
   },
   "disconnectcustomkeystore": {},
   "enablekey": {
    "Resources": [
     "key"
    ]
   },
   "enablekeyrotation": {
    "Resources": [
     "key"
    ]
   },
   "encrypt": {
    "Resources": [
     "key"
    ]
   },
   "generatedatakey": {
    "Resources": [
     "key"
    ]
   },
   "generatedatakeypair": {
    "Resources": [
     "key"
    ]
   },
   "generatedatakeypairwithoutplaintext": {
    "Resources": [
     "key"
    ]
   },
   "generatedatakeywithoutplaintext": {
    "Resources": [
     "key"
    ]
   },
   "generatemac": {
    "Resources": [
     "key"
    ]
   },
   "generaterandom": {},
   "getkeypolicy": {
    "Resources": [
     "key"
    ]
   },
   "getkeyrotationstatus": {
    "Resources": [
     "key"
    ]
   },
   "getparametersforimport": {
    "Resources": [
     "key"
    ]
   },
   "getpublickey": {
    "Resources": [
     "key"
    ]
   },
   "importkeymaterial": {
    "Resources": [
     "key"
    ]
   },
   "listaliases": {},
   "listgrants": {
    "Resources": [
     "key"
    ]
   },
   "listkeypolicies": {
    "Resources": [
     "key"
    ]
   },
   "listkeyrotations": {
    "Resources": [
     "key"
    ]
   },
   "listkeys": {},
   "listresourcetags": {
    "Resources": [
     "key"
    ]
   },
   "listretirablegrants": {},
   "putkeypolicy": {
    "Resources": [
     "key"
    ]
   },
   "reencryptfrom": {
    "Resources": [
     "key"
    ]
   },
   "reencryptto": {
    "Resources": [
     "key"
    ]
   },
   "replicatekey": {
    "Resources": [
     "key"
    ]
   },
   "retiregrant": {
    "Resources": [
     "key"
    ]
   },
   "revokegrant": {
    "Resources": [
     "key"
    ]
   },
   "rotatekeyondemand": {
    "Resources": [
     "key"
    ]
   },
   "schedulekeydeletion": {
    "Resources": [
     "key"
    ]
   },
   "sign": {
    "Resources": [
     "key"
    ]
   },
   "synchronizemultiregionkey": {
    "Resources": [
     "key"
    ]
   },
   "tagresource": {
    "Resources": [
     "key"
    ]
   },
   "untagresource": {
    "Resources": [
     "key"
    ]
   },
   "updatealias": {
    "Resources": [
     "alias",
     "key"
    ]
   },
   "updatecustomkeystore": {},
   "updatekeydescription": {
    "Resources": [
     "key"
    ]
   },
   "updateprimaryregion": {
    "Resources": [
     "key"
    ]
   },
   "verify": {
    "Resources": [
     "key"
    ]
   },
   "verifymac": {
    "Resources": [
     "key"
    ]
   }
  },
  "Resources": {
   "alias": {
    "ARNFormats": [
     "arn:${Partition}:kms:${Region}:${Account}:alias/.*"
    ]
   },
   "key": {
    "ARNFormats": [
     "arn:${Partition}:kms:${Region}:${Account}:key/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "kms:KeyOrigin",
     "kms:KeySpec",
     "kms:KeyUsage",
     "kms:MultiRegion",
     "kms:MultiRegionKeyType",
     "kms:ResourceAliases"
    ]
   }
  }
 },
 "lakeformation": {
  "Actions": {
   "addlftagstoresource": {},
   "batchgrantpermissions": {},
   "batchrevokepermissions": {},
   "canceltransaction": {},
   "committransaction": {},
   "createdatacellsfilter": {},
   "createlakeformationidentitycenterconfiguration": {},
   "createlakeformationoptin": {},
   "createlftag": {},
   "createlftagexpression": {},
   "deletedatacellsfilter": {},
   "deletelakeformationidentitycenterconfiguration": {},
   "deletelakeformationoptin": {},
   "deletelftag": {},
   "deletelftagexpression": {},
   "deleteobjectsoncancel": {},
   "deregisterresource": {},
   "describelakeformationidentitycenterconfiguration": {},
   "describeresource": {},
   "describetransaction": {},
   "extendtransaction": {},
   "getdataaccess": {},
   "getdatacellsfilter": {},
   "getdatalakeprincipal": {},
   "getdatalakesettings": {},
   "geteffectivepermissionsforpath": {},
   "getlftag": {},
   "getlftagexpression": {},
   "getquerystate": {},
   "getquerystatistics": {},
   "getresourcelftags": {},
   "gettableobjects": {},
   "getworkunitresults": {},
   "getworkunits": {},
   "grantpermissions": {},
   "listdatacellsfilter": {},
   "listlakeformationoptins": {},
   "listlftagexpressions": {},
   "listlftags": {},
   "listpermissions": {},
   "listresources": {},
   "listtablestorageoptimizers": {},
   "listtransactions": {},
   "putdatalakesettings": {},
   "registerresource": {},
   "registerresourcewithprivilegedaccess": {},
   "removelftagsfromresource": {},
   "revokepermissions": {},
   "searchdatabasesbylftags": {},
   "searchtablesbylftags": {},
   "startqueryplanning": {},
   "starttransaction": {},
   "updatedatacellsfilter": {},
   "updatelakeformationidentitycenterconfiguration": {},
   "updatelftag": {},
   "updatelftagexpression": {},
   "updateresource": {},
   "updatetableobjects": {},
   "updatetablestorageoptimizer": {}
  },
  "Resources": {}
 },
 "lambda": {
  "Actions": {
   "addlayerversionpermission": {
    "Resources": [
     "layerVersion"
    ]
   },
   "addpermission": {
    "Resources": [
     "function"
    ]
   },
   "createalias": {
    "Resources": [
     "function"
    ]
   },
   "createcodesigningconfig": {},
   "createeventsourcemapping": {},
   "createfunction": {
    "Resources": [
     "function"
    ]
   },
   "createfunctionurlconfig": {
    "Resources": [
     "function"
    ]
   },
   "deletealias": {
    "Resources": [
     "function"
    ]
   },
   "deletecodesigningconfig": {
    "Resources": [
     "code signing config"
    ]
   },
   "deleteeventsourcemapping": {
    "Resources": [
     "eventSourceMapping"
    ]
   },
   "deletefunction": {
    "Resources": [
     "function"
    ]
   },
   "deletefunctioncodesigningconfig": {
    "Resources": [
     "function"
    ]
   },
   "deletefunctionconcurrency": {
    "Resources": [
     "function"
    ]
   },
   "deletefunctioneventinvokeconfig": {
    "Resources": [
     "function"
    ]
   },
   "deletefunctionurlconfig": {
    "Resources": [
     "function"
    ]
   },
   "deletelayerversion": {
    "Resources": [
     "layerVersion"
    ]
   },
   "deleteprovisionedconcurrencyconfig": {
    "Resources": [
     "function alias",
     "function version"
    ]
   },
   "disablereplication": {
    "Resources": [
     "function"
    ]
   },
   "enablereplication": {
    "Resources": [
     "function"
    ]
   },
   "getaccountsettings": {},
   "getalias": {
    "Resources": [
     "function"
    ]
   },
   "getcodesigningconfig": {
    "Resources": [
     "code signing config"
    ]
   },
   "geteventsourcemapping": {
    "Resources": [
     "eventSourceMapping"
    ]
   },
   "getfunction": {
    "Resources": [
     "function"
    ]
   },
   "getfunctioncodesigningconfig": {
    "Resources": [
     "function"
    ]
   },
   "getfunctionconcurrency": {
    "Resources": [
     "function"
    ]
   },
   "getfunctionconfiguration": {
    "Resources": [
     "function"
    ]
   },
   "getfunctioneventinvokeconfig": {
    "Resources": [
     "function"
    ]
   },
   "getfunctionrecursionconfig": {
    "Resources": [
     "function"
    ]
   },
   "getfunctionurlconfig": {
    "Resources": [
     "function"
    ]
   },
   "getlayerversion": {
    "Resources": [
     "layerVersion"
    ]
   },
   "getlayerversionpolicy": {
    "Resources": [
     "layerVersion"
    ]
   },
   "getpolicy": {
    "Resources": [
     "function"
    ]
   },
   "getprovisionedconcurrencyconfig": {
    "Resources": [
     "function alias",
     "function version"
    ]
   },
   "getruntimemanagementconfig": {
    "Resources": [
     "function"
    ]
   },
   "invokeasync": {
    "Resources": [
     "function"
    ]
   },
   "invokefunction": {
    "Resources": [
     "function"
    ]
   },
   "invokefunctionurl": {
    "Resources": [
     "function"
    ]
   },
   "listaliases": {
    "Resources": [
     "function"
    ]
   },
   "listcodesigningconfigs": {},
   "listeventsourcemappings": {},
   "listfunctioneventinvokeconfigs": {
    "Resources": [
     "function"
    ]
   },
   "listfunctions": {},
   "listfunctionsbycodesigningconfig": {
    "Resources": [
     "code signing config"
    ]
   },
   "listfunctionurlconfigs": {
    "Resources": [
     "function"
    ]
   },
   "listlayers": {},
   "listlayerversions": {},
   "listprovisionedconcurrencyconfigs": {
    "Resources": [
     "function"
    ]
   },
   "listtags": {
    "Resources": [
     "code signing config",
     "eventSourceMapping",
     "function"
    ]
   },
   "listversionsbyfunction": {
    "Resources": [
     "function"
    ]
   },
   "publishlayerversion": {
    "Resources": [
     "layer"
    ]
   },
   "publishversion": {
    "Resources": [
     "function"
    ]
   },
   "putfunctioncodesigningconfig": {
    "Resources": [
     "code signing config",
     "function"
    ]
   },
   "putfunctionconcurrency": {
    "Resources": [
     "function"
    ]
   },
   "putfunctioneventinvokeconfig": {
    "Resources": [
     "function"
    ]
   },
   "putfunctionrecursionconfig": {
    "Resources": [
     "function"
    ]
   },
   "putprovisionedconcurrencyconfig": {
    "Resources": [
     "function alias",
     "function version"
    ]
   },
   "putruntimemanagementconfig": {
    "Resources": [
     "function"
    ]
   },
   "removelayerversionpermission": {
    "Resources": [
     "layerVersion"
    ]
   },
   "removepermission": {
    "Resources": [
     "function"
    ]
   },
   "tagresource": {
    "Resources": [
     "code signing config",
     "eventSourceMapping",
     "function"
    ]
   },
   "untagresource": {
    "Resources": [
     "code signing config",
     "eventSourceMapping",
     "function"
    ]
   },
   "updatealias": {
    "Resources": [
     "function"
    ]
   },
   "updatecodesigningconfig": {
    "Resources": [
     "code signing config"
    ]
   },
   "updateeventsourcemapping": {
    "Resources": [
     "eventSourceMapping"
    ]
   },
   "updatefunctioncode": {
    "Resources": [
     "function"
    ]
   },
   "updatefunctioncodesigningconfig": {
    "Resources": [
     "code signing config",
     "function"
    ]
   },
   "updatefunctionconfiguration": {
    "Resources": [
     "function"
    ]
   },
   "updatefunctioneventinvokeconfig": {
    "Resources": [
     "function"
    ]
   },
   "updatefunctionurlconfig": {
    "Resources": [
     "function"
    ]
   }
  },
  "Resources": {
   "code signing config": {
    "ARNFormats": [
     "arn:${Partition}:lambda:${Region}:${Account}:code-signing-config:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "eventsourcemapping": {
    "ARNFormats": [
     "arn:${Partition}:lambda:${Region}:${Account}:event-source-mapping:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "function": {
    "ARNFormats": [
     "arn:${Partition}:lambda:${Region}:${Account}:function:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "function alias": {
    "ARNFormats": [
     "arn:${Partition}:lambda:${Region}:${Account}:function:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "function version": {
    "ARNFormats": [
     "arn:${Partition}:lambda:${Region}:${Account}:function:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "layer": {
    "ARNFormats": [
     "arn:${Partition}:lambda:${Region}:${Account}:layer:.*"
    ]
   },
   "layerversion": {
    "ARNFormats": [
     "arn:${Partition}:lambda:${Region}:${Account}:layer:.*"
    ]
   }
  }
 },
 "launchwizard": {
  "Actions": {
   "createadditionalnode": {},
   "createdeployment": {
    "Resources": [
     "deployment"
    ]
   },
   "createsettingsset": {},
   "deleteadditionalnode": {},
   "deleteapp": {},
   "deletedeployment": {
    "Resources": [
     "deployment"
    ]
   },
   "deletesettingsset": {},
   "describeadditionalnode": {},
   "describeprovisionedapp": {},
   "describeprovisioningevents": {},
   "describesettingsset": {},
   "getdeployment": {
    "Resources": [
     "deployment"
    ]
   },
   "getinfrastructuresuggestion": {},
   "getipaddress": {},
   "getresourcecostestimate": {},
   "getresourcerecommendation": {},
   "getsettingsset": {},
   "getworkload": {},
   "getworkloadasset": {},
   "getworkloadassets": {},
   "getworkloaddeploymentpattern": {},
   "listadditionalnodes": {},
   "listallowedresources": {},
   "listdeploymentevents": {},
   "listdeployments": {},
   "listprovisionedapps": {},
   "listresourcecostestimates": {},
   "listsettingssets": {},
   "listtagsforresource": {
    "Resources": [
     "deployment"
    ]
   },
   "listworkloaddeploymentoptions": {},
   "listworkloaddeploymentpatterns": {},
   "listworkloads": {},
   "putsettingsset": {},
   "startprovisioning": {},
   "tagresource": {
    "Resources": [
     "deployment"
    ]
   },
   "untagresource": {
    "Resources": [
     "deployment"
    ]
   },
   "updatesettingsset": {}
  },
  "Resources": {
   "deployment": {
    "ARNFormats": [
     "arn:${Partition}:launchwizard:${Region}:${Account}:deployment/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "lex": {
  "Actions": {
   "batchcreatecustomvocabularyitem": {
    "Resources": [
     "bot"
    ]
   },
   "batchdeletecustomvocabularyitem": {
    "Resources": [
     "bot"
    ]
   },
   "batchupdatecustomvocabularyitem": {
    "Resources": [
     "bot"
    ]
   },
   "buildbotlocale": {
    "Resources": [
     "bot"
    ]
   },
   "createbot": {
    "Resources": [
     "bot",
     "bot alias"
    ]
   },
   "createbotalias": {
    "Resources": [
     "bot alias"
    ]
   },
   "createbotchannel": {
    "Resources": [
     "bot"
    ]
   },
   "createbotlocale": {
    "Resources": [
     "bot"
    ]
   },
   "createbotreplica": {
    "Resources": [
     "bot"
    ]
   },
   "createbotversion": {
    "Resources": [
     "bot",
     "bot version"
    ]
   },
   "createcustomvocabulary": {
    "Resources": [
     "bot"
    ]
   },
   "createexport": {
    "Resources": [
     "bot",
     "test set"
    ]
   },
   "createintent": {
    "Resources": [
     "bot"
    ]
   },
   "createintentversion": {
    "Resources": [
     "intent version"
    ]
   },
   "createresourcepolicy": {
    "Resources": [
     "bot",
     "bot alias"
    ]
   },
   "createslot": {
    "Resources": [
     "bot"
    ]
   },
   "createslottype": {
    "Resources": [
     "bot"
    ]
   },
   "createslottypeversion": {
    "Resources": [
     "slottype version"
    ]
   },
   "createtestset": {},
   "createtestsetdiscrepancyreport": {
    "Resources": [
     "test set"
    ]
   },
   "createuploadurl": {},
   "deletebot": {
    "Resources": [
     "bot",
     "bot alias",
     "bot version"
    ]
   },
   "deletebotalias": {
    "Resources": [
     "bot alias"
    ]
   },
   "deletebotchannel": {
    "Resources": [
     "bot"
    ]
   },
   "deletebotchannelassociation": {
    "Resources": [
     "channel"
    ]
   },
   "deletebotlocale": {
    "Resources": [
     "bot"
    ]
   },
   "deletebotreplica": {
    "Resources": [
     "bot"
    ]
   },
   "deletebotversion": {
    "Resources": [
     "bot",
     "bot version"
    ]
   },
   "deletecustomvocabulary": {
    "Resources": [
     "bot"
    ]
   },
   "deleteexport": {
    "Resources": [
     "bot",
     "test set"
    ]
   },
   "deleteimport": {
    "Resources": [
     "bot",
     "test set"
    ]
   },
   "deleteintent": {
    "Resources": [
     "bot",
     "intent version"
    ]
   },
   "deleteintentversion": {
    "Resources": [
     "intent version"
    ]
   },
   "deleteresourcepolicy": {
    "Resources": [
     "bot",
     "bot alias"
    ]
   },
   "deletesession": {
    "Resources": [
     "bot alias",
     "bot version"
    ]
   },
   "deleteslot": {
    "Resources": [
     "bot"
    ]
   },
   "deleteslottype": {
    "Resources": [
     "bot",
     "slottype version"
    ]
   },
   "deleteslottypeversion": {
    "Resources": [
     "slottype version"
    ]
   },
   "deletetestset": {
    "Resources": [
     "test set"
    ]
   },
   "deleteutterances": {
    "Resources": [
     "bot",
     "bot version"
    ]
   },
   "describebot": {
    "Resources": [
     "bot"
    ]
   },
   "describebotalias": {
    "Resources": [
     "bot alias"
    ]
   },
   "describebotchannel": {
    "Resources": [
     "bot"
    ]
   },
   "describebotlocale": {
    "Resources": [
     "bot"
    ]
   },
   "describebotrecommendation": {
    "Resources": [
     "bot"
    ]
   },
   "describebotreplica": {
    "Resources": [
     "bot"
    ]
   },
   "describebotresourcegeneration": {
    "Resources": [
     "bot"
    ]
   },
   "describebotversion": {
    "Resources": [
     "bot"
    ]
   },
   "describecustomvocabulary": {
    "Resources": [
     "bot"
    ]
   },
   "describecustomvocabularymetadata": {
    "Resources": [
     "bot"
    ]
   },
   "describeexport": {
    "Resources": [
     "bot",
     "test set"
    ]
   },
   "describeimport": {
    "Resources": [
     "bot",
     "test set"
    ]
   },
   "describeintent": {
    "Resources": [
     "bot"
    ]
   },
   "describeresourcepolicy": {
    "Resources": [
     "bot",
     "bot alias"
    ]
   },
   "describeslot": {
    "Resources": [
     "bot"
    ]
   },
   "describeslottype": {
    "Resources": [
     "bot"
    ]
   },
   "describetestexecution": {
    "Resources": [
     "test set"
    ]
   },
   "describetestset": {
    "Resources": [
     "test set"
    ]
   },
   "describetestsetdiscrepancyreport": {
    "Resources": [
     "test set"
    ]
   },
   "describetestsetgeneration": {
    "Resources": [
     "test set"
    ]
   },
   "generatebotelement": {
    "Resources": [
     "bot"
    ]
   },
   "getbot": {
    "Resources": [
     "bot alias",
     "bot version"
    ]
   },
   "getbotalias": {
    "Resources": [
     "bot alias"
    ]
   },
   "getbotaliases": {},
   "getbotchannelassociation": {
    "Resources": [
     "channel"
    ]
   },
   "getbotchannelassociations": {
    "Resources": [
     "channel"
    ]
   },
   "getbots": {},
   "getbotversions": {
    "Resources": [
     "bot version"
    ]
   },
   "getbuiltinintent": {},
   "getbuiltinintents": {},
   "getbuiltinslottypes": {},
   "getexport": {
    "Resources": [
     "bot version"
    ]
   },
   "getimport": {},
   "getintent": {
    "Resources": [
     "intent version"
    ]
   },
   "getintents": {},
   "getintentversions": {
    "Resources": [
     "intent version"
    ]
   },
   "getmigration": {},
   "getmigrations": {},
   "getsession": {
    "Resources": [
     "bot alias",
     "bot version"
    ]
   },
   "getslottype": {
    "Resources": [
     "slottype version"
    ]
   },
   "getslottypes": {},
   "getslottypeversions": {
    "Resources": [
     "slottype version"
    ]
   },
   "gettestexecutionartifactsurl": {
    "Resources": [
     "test set"
    ]
   },
   "getutterancesview": {
    "Resources": [
     "bot version"
    ]
   },
   "listaggregatedutterances": {
    "Resources": [
     "bot"
    ]
   },
   "listbotaliases": {
    "Resources": [
     "bot"
    ]
   },
   "listbotaliasreplicas": {
    "Resources": [
     "bot"
    ]
   },
   "listbotchannels": {
    "Resources": [
     "bot"
    ]
   },
   "listbotlocales": {
    "Resources": [
     "bot"
    ]
   },
   "listbotrecommendations": {
    "Resources": [
     "bot"
    ]
   },
   "listbotreplicas": {
    "Resources": [
     "bot"
    ]
   },
   "listbotresourcegenerations": {
    "Resources": [
     "bot"
    ]
   },
   "listbots": {},
   "listbotversionreplicas": {
    "Resources": [
     "bot"
    ]
   },
   "listbotversions": {
    "Resources": [
     "bot"
    ]
   },
   "listbuiltinintents": {},
   "listbuiltinslottypes": {},
   "listcustomvocabularyitems": {
    "Resources": [
     "bot"
    ]
   },
   "listexports": {},
   "listimports": {},
   "listintentmetrics": {
    "Resources": [
     "bot"
    ]
   },
   "listintentpaths": {
    "Resources": [
     "bot"
    ]
   },
   "listintents": {
    "Resources": [
     "bot"
    ]
   },
   "listintentstagemetrics": {
    "Resources": [
     "bot"
    ]
   },
   "listrecommendedintents": {
    "Resources": [
     "bot"
    ]
   },
   "listsessionanalyticsdata": {
    "Resources": [
     "bot"
    ]
   },
   "listsessionmetrics": {
    "Resources": [
     "bot"
    ]
   },
   "listslots": {
    "Resources": [
     "bot"
    ]
   },
   "listslottypes": {
    "Resources": [
     "bot"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "bot",
     "bot alias",
     "channel",
     "test set"
    ]
   },
   "listtestexecutionresultitems": {
    "Resources": [
     "test set"
    ]
   },
   "listtestexecutions": {},
   "listtestsetrecords": {
    "Resources": [
     "test set"
    ]
   },
   "listtestsets": {},
   "postcontent": {
    "Resources": [
     "bot alias",
     "bot version"
    ]
   },
   "posttext": {
    "Resources": [
     "bot alias",
     "bot version"
    ]
   },
   "putbot": {
    "Resources": [
     "bot version"
    ]
   },
   "putbotalias": {
    "Resources": [
     "bot alias"
    ]
   },
   "putintent": {
    "Resources": [
     "intent version"
    ]
   },
   "putsession": {
    "Resources": [
     "bot alias",
     "bot version"
    ]
   },
   "putslottype": {
    "Resources": [
     "slottype version"
    ]
   },
   "recognizetext": {
    "Resources": [
     "bot alias"
    ]
   },
   "recognizeutterance": {
    "Resources": [
     "bot alias"
    ]
   },
   "searchassociatedtranscripts": {
    "Resources": [
     "bot"
    ]
   },
   "startbotrecommendation": {
    "Resources": [
     "bot"
    ]
   },
   "startbotresourcegeneration": {
    "Resources": [
     "bot"
    ]
   },
   "startconversation": {
    "Resources": [
     "bot alias"
    ]
   },
   "startimport": {
    "Resources": [
     "bot",
     "bot alias",
     "test set"
    ]
   },
   "startmigration": {
    "Resources": [
     "bot version"
    ]
   },
   "starttestexecution": {
    "Resources": [
     "test set"
    ]
   },
   "starttestsetgeneration": {
    "Resources": [
     "test set"
    ]
   },
   "stopbotrecommendation": {
    "Resources": [
     "bot"
    ]
   },
   "tagresource": {
    "Resources": [
     "bot",
     "bot alias",
     "channel",
     "test set"
    ]
   },
   "untagresource": {
    "Resources": [
     "bot",
     "bot alias",
     "channel",
     "test set"
    ]
   },
   "updatebot": {
    "Resources": [
     "bot"
    ]
   },
   "updatebotalias": {
    "Resources": [
     "bot alias"
    ]
   },
   "updatebotlocale": {
    "Resources": [
     "bot"
    ]
   },
   "updatebotrecommendation": {
    "Resources": [
     "bot"
    ]
   },
   "updatecustomvocabulary": {
    "Resources": [
     "bot"
    ]
   },
   "updateexport": {
    "Resources": [
     "bot"
    ]
   },
   "updateintent": {
    "Resources": [
     "bot"
    ]
   },
   "updateresourcepolicy": {
    "Resources": [
     "bot",
     "bot alias"
    ]
   },
   "updateslot": {
    "Resources": [
     "bot"
    ]
   },
   "updateslottype": {
    "Resources": [
     "bot"
    ]
   },
   "updatetestset": {
    "Resources": [
     "test set"
    ]
   }
  },
  "Resources": {
   "bot": {
    "ARNFormats": [
     "arn:${Partition}:lex:${Region}:${Account}:bot/.*",
     "arn:${Partition}:lex:${Region}:${Account}:bot:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "bot alias": {
    "ARNFormats": [
     "arn:${Partition}:lex:${Region}:${Account}:bot-alias/.*",
     "arn:${Partition}:lex:${Region}:${Account}:bot:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "bot version": {
    "ARNFormats": [
     "arn:${Partition}:lex:${Region}:${Account}:bot:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "channel": {
    "ARNFormats": [
     "arn:${Partition}:lex:${Region}:${Account}:bot-channel:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "intent version": {
    "ARNFormats": [
     "arn:${Partition}:lex:${Region}:${Account}:intent:.*"
    ]
   },
   "slottype version": {
    "ARNFormats": [
     "arn:${Partition}:lex:${Region}:${Account}:slottype:.*"
    ]
   },
   "test set": {
    "ARNFormats": [
     "arn:${Partition}:lex:${Region}:${Account}:test-set/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "license-manager": {
  "Actions": {
   "acceptgrant": {
    "Resources": [
     "grant"
    ]
   },
   "checkinlicense": {},
   "checkoutborrowlicense": {
    "Resources": [
     "license"
    ]
   },
   "checkoutlicense": {},
   "creategrant": {
    "Resources": [
     "license"
    ]
   },
   "creategrantversion": {
    "Resources": [
     "grant"
    ]
   },
   "createlicense": {},
   "createlicenseconfiguration": {},
   "createlicenseconversiontaskforresource": {},
   "createlicensemanagerreportgenerator": {},
   "createlicenseversion": {
    "Resources": [
     "license"
    ]
   },
   "createtoken": {
    "Resources": [
     "license"
    ]
   },
   "deletegrant": {
    "Resources": [
     "grant"
    ]
   },
   "deletelicense": {
    "Resources": [
     "license"
    ]
   },
   "deletelicenseconfiguration": {
    "Resources": [
     "license-configuration"
    ]
   },
   "deletelicensemanagerreportgenerator": {
    "Resources": [
     "report-generator"
    ]
   },
   "deletetoken": {},
   "extendlicenseconsumption": {},
   "getaccesstoken": {},
   "getgrant": {
    "Resources": [
     "grant"
    ]
   },
   "getlicense": {
    "Resources": [
     "license"
    ]
   },
   "getlicenseconfiguration": {
    "Resources": [
     "license-configuration"
    ]
   },
   "getlicenseconversiontask": {},
   "getlicensemanagerreportgenerator": {
    "Resources": [
     "report-generator"
    ]
   },
   "getlicenseusage": {
    "Resources": [
     "license"
    ]
   },
   "getservicesettings": {},
   "listassociationsforlicenseconfiguration": {
    "Resources": [
     "license-configuration"
    ]
   },
   "listdistributedgrants": {},
   "listfailuresforlicenseconfigurationoperations": {
    "Resources": [
     "license-configuration"
    ]
   },
   "listlicenseconfigurations": {},
   "listlicenseconversiontasks": {},
   "listlicensemanagerreportgenerators": {
    "Resources": [
     "license-configuration"
    ]
   },
   "listlicenses": {},
   "listlicensespecificationsforresource": {},
   "listlicenseversions": {
    "Resources": [
     "license"
    ]
   },
   "listreceivedgrants": {},
   "listreceivedgrantsfororganization": {},
   "listreceivedlicenses": {},
   "listreceivedlicensesfororganization": {},
   "listresourceinventory": {},
   "listtagsforresource": {
    "Resources": [
     "license-configuration"
    ]
   },
   "listtokens": {},
   "listusageforlicenseconfiguration": {
    "Resources": [
     "license-configuration"
    ]
   },
   "rejectgrant": {
    "Resources": [
     "grant"
    ]
   },
   "tagresource": {
    "Resources": [
     "license-configuration"
    ]
   },
   "untagresource": {
    "Resources": [
     "license-configuration"
    ]
   },
   "updatelicenseconfiguration": {
    "Resources": [
     "license-configuration"
    ]
   },
   "updatelicensemanagerreportgenerator": {
    "Resources": [
     "report-generator"
    ]
   },
   "updatelicensespecificationsforresource": {
    "Resources": [
     "license-configuration"
    ]
   },
   "updateservicesettings": {}
  },
  "Resources": {
   "grant": {
    "ARNFormats": [
     "arn:${Partition}:license-manager::${Account}:grant:.*"
    ]
   },
   "license": {
    "ARNFormats": [
     "arn:${Partition}:license-manager::${Account}:license:.*"
    ]
   },
   "license-configuration": {
    "ARNFormats": [
     "arn:${Partition}:license-manager:${Region}:${Account}:license-configuration:.*"
    ],
    "ConditionKeys": [
     "license-manager:ResourceTag/${TagKey}"
    ]
   },
   "report-generator": {
    "ARNFormats": [
     "arn:${Partition}:license-manager:${Region}:${Account}:report-generator:.*"
    ],
    "ConditionKeys": [
     "license-manager:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "license-manager-linux-subscriptions": {
  "Actions": {
   "deregistersubscriptionprovider": {
    "Resources": [
     "subscription-provider"
    ]
   },
   "getregisteredsubscriptionprovider": {
    "Resources": [
     "subscription-provider"
    ]
   },
   "getservicesettings": {},
   "listlinuxsubscriptioninstances": {},
   "listlinuxsubscriptions": {},
   "listregisteredsubscriptionproviders": {},
   "listtagsforresource": {
    "Resources": [
     "subscription-provider"
    ]
   },
   "registersubscriptionprovider": {},
   "tagresource": {
    "Resources": [
     "subscription-provider"
    ]
   },
   "untagresource": {
    "Resources": [
     "subscription-provider"
    ]
   },
   "updateservicesettings": {}
  },
  "Resources": {
   "subscription-provider": {
    "ARNFormats": [
     "arn:${Partition}:license-manager-linux-subscriptions:${Region}:${Account}:subscription-provider/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "license-manager-user-subscriptions": {
  "Actions": {
   "associateuser": {
    "Resources": [
     "identity-provider"
    ]
   },
   "createlicenseserverendpoint": {
    "Resources": [
     "identity-provider"
    ]
   },
   "deletelicenseserverendpoint": {
    "Resources": [
     "identity-provider",
     "license-server-endpoint"
    ]
   },
   "deregisteridentityprovider": {
    "Resources": [
     "identity-provider"
    ]
   },
   "disassociateuser": {
    "Resources": [
     "identity-provider",
     "instance-user"
    ]
   },
   "listidentityproviders": {},
   "listinstances": {},
   "listlicenseserverendpoints": {},
   "listproductsubscriptions": {
    "Resources": [
     "identity-provider"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "identity-provider",
     "instance-user",
     "license-server-endpoint",
     "product-subscription"
    ]
   },
   "listuserassociations": {
    "Resources": [
     "identity-provider"
    ]
   },
   "registeridentityprovider": {},
   "startproductsubscription": {
    "Resources": [
     "identity-provider"
    ]
   },
   "stopproductsubscription": {
    "Resources": [
     "identity-provider",
     "product-subscription"
    ]
   },
   "tagresource": {
    "Resources": [
     "identity-provider",
     "instance-user",
     "license-server-endpoint",
     "product-subscription"
    ]
   },
   "untagresource": {
    "Resources": [
     "identity-provider",
     "instance-user",
     "license-server-endpoint",
     "product-subscription"
    ]
   },
   "updateidentityprovidersettings": {
    "Resources": [
     "identity-provider"
    ]
   }
  },
  "Resources": {
   "identity-provider": {
    "ARNFormats": [
     "arn:${Partition}:license-manager-user-subscriptions:${Region}:${Account}:identity-provider/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "instance-user": {
    "ARNFormats": [
     "arn:${Partition}:license-manager-user-subscriptions:${Region}:${Account}:instance-user/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "license-server-endpoint": {
    "ARNFormats": [
     "arn:${Partition}:license-manager-user-subscriptions:${Region}:${Account}:license-server-endpoint/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "product-subscription": {
    "ARNFormats": [
     "arn:${Partition}:license-manager-user-subscriptions:${Region}:${Account}:product-subscription/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "lightsail": {
  "Actions": {
   "allocatestaticip": {},
   "attachcertificatetodistribution": {
    "Resources": [
     "Certificate",
     "Distribution"
    ]
   },
   "attachdisk": {
    "Resources": [
     "Disk"
    ]
   },
   "attachinstancestoloadbalancer": {
    "Resources": [
     "LoadBalancer"
    ]
   },
   "attachloadbalancertlscertificate": {
    "Resources": [
     "LoadBalancer"
    ]
   },
   "attachstaticip": {
    "Resources": [
     "Instance",
     "StaticIp"
    ]
   },
   "closeinstancepublicports": {
    "Resources": [
     "Instance"
    ]
   },
   "copysnapshot": {},
   "createbucket": {},
   "createbucketaccesskey": {
    "Resources": [
     "Bucket"
    ]
   },
   "createcertificate": {},
   "createcloudformationstack": {},
   "createcontactmethod": {},
   "createcontainerservice": {},
   "createcontainerservicedeployment": {
    "Resources": [
     "ContainerService"
    ]
   },
   "createcontainerserviceregistrylogin": {},
   "createdisk": {},
   "creatediskfromsnapshot": {
    "Resources": [
     "DiskSnapshot"
    ]
   },
   "createdisksnapshot": {
    "Resources": [
     "Disk",
     "Instance"
    ]
   },
   "createdistribution": {},
   "createdomain": {},
   "createdomainentry": {
    "Resources": [
     "Domain"
    ]
   },
   "createguisessionaccessdetails": {
    "Resources": [
     "Instance"
    ]
   },
   "createinstances": {},
   "createinstancesfromsnapshot": {
    "Resources": [
     "InstanceSnapshot"
    ]
   },
   "createinstancesnapshot": {
    "Resources": [
     "Instance"
    ]
   },
   "createkeypair": {},
   "createloadbalancer": {},
   "createloadbalancertlscertificate": {
    "Resources": [
     "LoadBalancer"
    ]
   },
   "createrelationaldatabase": {},
   "createrelationaldatabasefromsnapshot": {
    "Resources": [
     "RelationalDatabaseSnapshot"
    ]
   },
   "createrelationaldatabasesnapshot": {},
   "deletealarm": {
    "Resources": [
     "Alarm"
    ]
   },
   "deleteautosnapshot": {},
   "deletebucket": {
    "Resources": [
     "Bucket"
    ]
   },
   "deletebucketaccesskey": {
    "Resources": [
     "Bucket"
    ]
   },
   "deletecertificate": {
    "Resources": [
     "Certificate"
    ]
   },
   "deletecontactmethod": {},
   "deletecontainerimage": {
    "Resources": [
     "ContainerService"
    ]
   },
   "deletecontainerservice": {
    "Resources": [
     "ContainerService"
    ]
   },
   "deletedisk": {
    "Resources": [
     "Disk"
    ]
   },
   "deletedisksnapshot": {
    "Resources": [
     "DiskSnapshot"
    ]
   },
   "deletedistribution": {
    "Resources": [
     "Distribution"
    ]
   },
   "deletedomain": {
    "Resources": [
     "Domain"
    ]
   },
   "deletedomainentry": {
    "Resources": [
     "Domain"
    ]
   },
   "deleteinstance": {
    "Resources": [
     "Instance"
    ]
   },
   "deleteinstancesnapshot": {
    "Resources": [
     "InstanceSnapshot"
    ]
   },
   "deletekeypair": {
    "Resources": [
     "KeyPair"
    ]
   },
   "deleteknownhostkeys": {
    "Resources": [
     "Instance"
    ]
   },
   "deleteloadbalancer": {
    "Resources": [
     "LoadBalancer"
    ]
   },
   "deleteloadbalancertlscertificate": {
    "Resources": [
     "LoadBalancer"
    ]
   },
   "deleterelationaldatabase": {
    "Resources": [
     "RelationalDatabase"
    ]
   },
   "deleterelationaldatabasesnapshot": {
    "Resources": [
     "RelationalDatabaseSnapshot"
    ]
   },
   "detachcertificatefromdistribution": {
    "Resources": [
     "Distribution"
    ]
   },
   "detachdisk": {
    "Resources": [
     "Disk"
    ]
   },
   "detachinstancesfromloadbalancer": {
    "Resources": [
     "LoadBalancer"
    ]
   },
   "detachstaticip": {
    "Resources": [
     "StaticIp"
    ]
   },
   "disableaddon": {},
   "downloaddefaultkeypair": {},
   "enableaddon": {},
   "exportsnapshot": {
    "Resources": [
     "DiskSnapshot",
     "InstanceSnapshot"
    ]
   },
   "getactivenames": {},
   "getalarms": {},
   "getautosnapshots": {},
   "getblueprints": {},
   "getbucketaccesskeys": {},
   "getbucketbundles": {},
   "getbucketmetricdata": {},
   "getbuckets": {},
   "getbundles": {},
   "getcertificates": {},
   "getcloudformationstackrecords": {},
   "getcontactmethods": {},
   "getcontainerapimetadata": {},
   "getcontainerimages": {},
   "getcontainerlog": {},
   "getcontainerservicedeployments": {},
   "getcontainerservicemetricdata": {},
   "getcontainerservicepowers": {},
   "getcontainerservices": {},
   "getcostestimate": {
    "Resources": [
     "Disk",
     "Instance"
    ]
   },
   "getdisk": {},
   "getdisks": {},
   "getdisksnapshot": {},
   "getdisksnapshots": {},
   "getdistributionbundles": {},
   "getdistributionlatestcachereset": {},
   "getdistributionmetricdata": {},
   "getdistributions": {},
   "getdomain": {},
   "getdomains": {},
   "getexportsnapshotrecords": {},
   "getinstance": {},
   "getinstanceaccessdetails": {
    "Resources": [
     "Instance"
    ]
   },
   "getinstancemetricdata": {},
   "getinstanceportstates": {},
   "getinstances": {},
   "getinstancesnapshot": {},
   "getinstancesnapshots": {},
   "getinstancestate": {},
   "getkeypair": {},
   "getkeypairs": {},
   "getloadbalancer": {},
   "getloadbalancermetricdata": {},
   "getloadbalancers": {},
   "getloadbalancertlscertificates": {},
   "getloadbalancertlspolicies": {},
   "getoperation": {},
   "getoperations": {},
   "getoperationsforresource": {},
   "getregions": {},
   "getrelationaldatabase": {},
   "getrelationaldatabaseblueprints": {},
   "getrelationaldatabasebundles": {},
   "getrelationaldatabaseevents": {},
   "getrelationaldatabaselogevents": {},
   "getrelationaldatabaselogstreams": {},
   "getrelationaldatabasemasteruserpassword": {
    "Resources": [
     "RelationalDatabase"
    ]
   },
   "getrelationaldatabasemetricdata": {},
   "getrelationaldatabaseparameters": {},
   "getrelationaldatabases": {},
   "getrelationaldatabasesnapshot": {},
   "getrelationaldatabasesnapshots": {},
   "getsetuphistory": {
    "Resources": [
     "Instance"
    ]
   },
   "getstaticip": {},
   "getstaticips": {},
   "importkeypair": {},
   "isvpcpeered": {},
   "openinstancepublicports": {
    "Resources": [
     "Instance"
    ]
   },
   "peervpc": {},
   "putalarm": {
    "Resources": [
     "Alarm"
    ]
   },
   "putinstancepublicports": {
    "Resources": [
     "Instance"
    ]
   },
   "rebootinstance": {
    "Resources": [
     "Instance"
    ]
   },
   "rebootrelationaldatabase": {
    "Resources": [
     "RelationalDatabase"
    ]
   },
   "registercontainerimage": {
    "Resources": [
     "ContainerService"
    ]
   },
   "releasestaticip": {
    "Resources": [
     "StaticIp"
    ]
   },
   "resetdistributioncache": {
    "Resources": [
     "Distribution"
    ]
   },
   "sendcontactmethodverification": {},
   "setipaddresstype": {
    "Resources": [
     "Distribution",
     "Instance",
     "LoadBalancer"
    ]
   },
   "setresourceaccessforbucket": {
    "Resources": [
     "Bucket",
     "Instance"
    ]
   },
   "setupinstancehttps": {
    "Resources": [
     "Instance"
    ]
   },
   "startguisession": {
    "Resources": [
     "Instance"
    ]
   },
   "startinstance": {
    "Resources": [
     "Instance"
    ]
   },
   "startrelationaldatabase": {
    "Resources": [
     "RelationalDatabase"
    ]
   },
   "stopguisession": {
    "Resources": [
     "Instance"
    ]
   },
   "stopinstance": {
    "Resources": [
     "Instance"
    ]
   },
   "stoprelationaldatabase": {
    "Resources": [
     "RelationalDatabase"
    ]
   },
   "tagresource": {
    "Resources": [
     "Bucket",
     "Certificate",
     "ContainerService",
     "Disk",
     "DiskSnapshot",
     "Distribution",
     "Domain",
     "Instance",
     "InstanceSnapshot",
     "KeyPair",
     "LoadBalancer",
     "RelationalDatabase",
     "RelationalDatabaseSnapshot",
     "StaticIp"
    ]
   },
   "testalarm": {
    "Resources": [
     "Alarm"
    ]
   },
   "unpeervpc": {},
   "untagresource": {
    "Resources": [
     "Bucket",
     "Certificate",
     "ContainerService",
     "Disk",
     "DiskSnapshot",
     "Distribution",
     "Domain",
     "Instance",
     "InstanceSnapshot",
     "KeyPair",
     "LoadBalancer",
     "RelationalDatabase",
     "RelationalDatabaseSnapshot",
     "StaticIp"
    ]
   },
   "updatebucket": {
    "Resources": [
     "Bucket"
    ]
   },
   "updatebucketbundle": {
    "Resources": [
     "Bucket"
    ]
   },
   "updatecontainerservice": {
    "Resources": [
     "ContainerService"
    ]
   },
   "updatedistribution": {
    "Resources": [
     "Distribution"
    ]
   },
   "updatedistributionbundle": {
    "Resources": [
     "Distribution"
    ]
   },
   "updatedomainentry": {
    "Resources": [
     "Domain"
    ]
   },
   "updateinstancemetadataoptions": {
    "Resources": [
     "Instance"
    ]
   },
   "updateloadbalancerattribute": {
    "Resources": [
     "LoadBalancer"
    ]
   },
   "updaterelationaldatabase": {
    "Resources": [
     "RelationalDatabase"
    ]
   },
   "updaterelationaldatabaseparameters": {
    "Resources": [
     "RelationalDatabase"
    ]
   }
  },
  "Resources": {
   "alarm": {
    "ARNFormats": [
     "arn:${Partition}:lightsail:${Region}:${Account}:Alarm/.*"
    ]
   },
   "bucket": {
    "ARNFormats": [
     "arn:${Partition}:lightsail:${Region}:${Account}:Bucket/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "certificate": {
    "ARNFormats": [
     "arn:${Partition}:lightsail:${Region}:${Account}:Certificate/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "cloudformationstackrecord": {
    "ARNFormats": [
     "arn:${Partition}:lightsail:${Region}:${Account}:CloudFormationStackRecord/.*"
    ]
   },
   "contactmethod": {
    "ARNFormats": [
     "arn:${Partition}:lightsail:${Region}:${Account}:ContactMethod/.*"
    ]
   },
   "containerservice": {
    "ARNFormats": [
     "arn:${Partition}:lightsail:${Region}:${Account}:ContainerService/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "disk": {
    "ARNFormats": [
     "arn:${Partition}:lightsail:${Region}:${Account}:Disk/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "disksnapshot": {
    "ARNFormats": [
     "arn:${Partition}:lightsail:${Region}:${Account}:DiskSnapshot/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "distribution": {
    "ARNFormats": [
     "arn:${Partition}:lightsail:${Region}:${Account}:Distribution/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "domain": {
    "ARNFormats": [
     "arn:${Partition}:lightsail:${Region}:${Account}:Domain/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "exportsnapshotrecord": {
    "ARNFormats": [
     "arn:${Partition}:lightsail:${Region}:${Account}:ExportSnapshotRecord/.*"
    ]
   },
   "instance": {
    "ARNFormats": [
     "arn:${Partition}:lightsail:${Region}:${Account}:Instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "instancesnapshot": {
    "ARNFormats": [
     "arn:${Partition}:lightsail:${Region}:${Account}:InstanceSnapshot/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "keypair": {
    "ARNFormats": [
     "arn:${Partition}:lightsail:${Region}:${Account}:KeyPair/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "loadbalancer": {
    "ARNFormats": [
     "arn:${Partition}:lightsail:${Region}:${Account}:LoadBalancer/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "loadbalancertlscertificate": {
    "ARNFormats": [
     "arn:${Partition}:lightsail:${Region}:${Account}:LoadBalancerTlsCertificate/.*"
    ]
   },
   "relationaldatabase": {
    "ARNFormats": [
     "arn:${Partition}:lightsail:${Region}:${Account}:RelationalDatabase/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "relationaldatabasesnapshot": {
    "ARNFormats": [
     "arn:${Partition}:lightsail:${Region}:${Account}:RelationalDatabaseSnapshot/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "staticip": {
    "ARNFormats": [
     "arn:${Partition}:lightsail:${Region}:${Account}:StaticIp/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "logs": {
  "Actions": {
   "associatekmskey": {
    "Resources": [
     "log-group"
    ]
   },
   "cancelexporttask": {},
   "createdelivery": {
    "Resources": [
     "delivery",
     "delivery-destination",
     "delivery-source"
    ]
   },
   "createexporttask": {
    "Resources": [
     "log-group"
    ]
   },
   "createloganomalydetector": {
    "Resources": [
     "log-group"
    ]
   },
   "createlogdelivery": {},
   "createloggroup": {
    "Resources": [
     "log-group"
    ]
   },
   "createlogstream": {
    "Resources": [
     "log-stream"
    ]
   },
   "deleteaccountpolicy": {},
   "deletedataprotectionpolicy": {
    "Resources": [
     "log-group"
    ]
   },
   "deletedelivery": {
    "Resources": [
     "delivery"
    ]
   },
   "deletedeliverydestination": {
    "Resources": [
     "delivery-destination"
    ]
   },
   "deletedeliverydestinationpolicy": {
    "Resources": [
     "delivery-destination"
    ]
   },
   "deletedeliverysource": {
    "Resources": [
     "delivery-destination"
    ]
   },
   "deletedestination": {
    "Resources": [
     "destination"
    ]
   },
   "deleteindexpolicy": {},
   "deleteintegration": {},
   "deleteloganomalydetector": {
    "Resources": [
     "anomaly-detector"
    ]
   },
   "deletelogdelivery": {},
   "deleteloggroup": {
    "Resources": [
     "log-group"
    ]
   },
   "deletelogstream": {
    "Resources": [
     "log-stream"
    ]
   },
   "deletemetricfilter": {
    "Resources": [
     "log-group"
    ]
   },
   "deletequerydefinition": {},
   "deleteresourcepolicy": {},
   "deleteretentionpolicy": {
    "Resources": [
     "log-group"
    ]
   },
   "deletesubscriptionfilter": {
    "Resources": [
     "log-group"
    ]
   },
   "deletetransformer": {
    "Resources": [
     "log-group"
    ]
   },
   "describeaccountpolicies": {},
   "describeconfigurationtemplates": {},
   "describedeliveries": {},
   "describedeliverydestinations": {},
   "describedeliverysources": {},
   "describedestinations": {},
   "describeexporttasks": {},
   "describefieldindexes": {},
   "describeindexpolicies": {},
   "describeloggroups": {},
   "describelogstreams": {
    "Resources": [
     "log-group"
    ]
   },
   "describemetricfilters": {
    "Resources": [
     "log-group"
    ]
   },
   "describequeries": {},
   "describequerydefinitions": {},
   "describeresourcepolicies": {},
   "describesubscriptionfilters": {
    "Resources": [
     "log-group"
    ]
   },
   "disassociatekmskey": {
    "Resources": [
     "log-group"
    ]
   },
   "filterlogevents": {
    "Resources": [
     "log-group"
    ]
   },
   "getdataprotectionpolicy": {
    "Resources": [
     "log-group"
    ]
   },
   "getdelivery": {
    "Resources": [
     "delivery"
    ]
   },
   "getdeliverydestination": {
    "Resources": [
     "delivery-destination"
    ]
   },
   "getdeliverydestinationpolicy": {
    "Resources": [
     "delivery-destination"
    ]
   },
   "getdeliverysource": {
    "Resources": [
     "delivery-source"
    ]
   },
   "getintegration": {},
   "getloganomalydetector": {
    "Resources": [
     "anomaly-detector"
    ]
   },
   "getlogdelivery": {},
   "getlogevents": {
    "Resources": [
     "log-stream"
    ]
   },
   "getloggroupfields": {
    "Resources": [
     "log-group"
    ]
   },
   "getlogrecord": {
    "Resources": [
     "log-group"
    ]
   },
   "getqueryresults": {
    "Resources": [
     "log-group"
    ]
   },
   "gettransformer": {
    "Resources": [
     "log-group"
    ]
   },
   "link": {},
   "listanomalies": {
    "Resources": [
     "anomaly-detector"
    ]
   },
   "listentitiesforloggroup": {},
   "listintegrations": {},
   "listloganomalydetectors": {
    "Resources": [
     "anomaly-detector"
    ]
   },
   "listlogdeliveries": {},
   "listloggroupsforentity": {},
   "listloggroupsforquery": {},
   "listtagsforresource": {
    "Resources": [
     "anomaly-detector",
     "delivery",
     "delivery-destination",
     "delivery-source",
     "destination",
     "log-group"
    ]
   },
   "listtagsloggroup": {
    "Resources": [
     "log-group"
    ]
   },
   "putaccountpolicy": {},
   "putdataprotectionpolicy": {
    "Resources": [
     "log-group"
    ]
   },
   "putdeliverydestination": {
    "Resources": [
     "delivery-destination"
    ]
   },
   "putdeliverydestinationpolicy": {
    "Resources": [
     "delivery-destination"
    ]
   },
   "putdeliverysource": {
    "Resources": [
     "delivery-source"
    ]
   },
   "putdestination": {
    "Resources": [
     "destination"
    ]
   },
   "putdestinationpolicy": {
    "Resources": [
     "destination"
    ]
   },
   "putindexpolicy": {},
   "putintegration": {},
   "putlogevents": {
    "Resources": [
     "log-stream"
    ]
   },
   "putmetricfilter": {
    "Resources": [
     "log-group"
    ]
   },
   "putquerydefinition": {},
   "putresourcepolicy": {},
   "putretentionpolicy": {
    "Resources": [
     "log-group"
    ]
   },
   "putsubscriptionfilter": {
    "Resources": [
     "destination",
     "log-group"
    ]
   },
   "puttransformer": {
    "Resources": [
     "log-group"
    ]
   },
   "startlivetail": {
    "Resources": [
     "log-group"
    ]
   },
   "startquery": {
    "Resources": [
     "log-group"
    ]
   },
   "stoplivetail": {},
   "stopquery": {},
   "tagloggroup": {
    "Resources": [
     "log-group"
    ]
   },
   "tagresource": {
    "Resources": [
     "anomaly-detector",
     "delivery",
     "delivery-destination",
     "delivery-source",
     "destination",
     "log-group"
    ]
   },
   "testmetricfilter": {},
   "testtransformer": {},
   "unmask": {
    "Resources": [
     "log-group"
    ]
   },
   "untagloggroup": {
    "Resources": [
     "log-group"
    ]
   },
   "untagresource": {
    "Resources": [
     "anomaly-detector",
     "delivery",
     "delivery-destination",
     "delivery-source",
     "destination",
     "log-group"
    ]
   },
   "updateanomaly": {
    "Resources": [
     "anomaly-detector"
    ]
   },
   "updatedeliveryconfiguration": {
    "Resources": [
     "delivery",
     "delivery-destination",
     "delivery-source"
    ]
   },
   "updateloganomalydetector": {
    "Resources": [
     "anomaly-detector"
    ]
   },
   "updatelogdelivery": {}
  },
  "Resources": {
   "anomaly-detector": {
    "ARNFormats": [
     "arn:${Partition}:logs:${Region}:${Account}:anomaly-detector:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "delivery": {
    "ARNFormats": [
     "arn:${Partition}:logs:${Region}:${Account}:delivery:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "delivery-destination": {
    "ARNFormats": [
     "arn:${Partition}:logs:${Region}:${Account}:delivery-destination:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "delivery-source": {
    "ARNFormats": [
     "arn:${Partition}:logs:${Region}:${Account}:delivery-source:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "destination": {
    "ARNFormats": [
     "arn:${Partition}:logs:${Region}:${Account}:destination:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "log-group": {
    "ARNFormats": [
     "arn:${Partition}:logs:${Region}:${Account}:log-group:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "log-stream": {
    "ARNFormats": [
     "arn:${Partition}:logs:${Region}:${Account}:log-group:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "lookoutequipment": {
  "Actions": {
   "createdataset": {
    "Resources": [
     "dataset"
    ]
   },
   "createinferencescheduler": {
    "Resources": [
     "inference-scheduler",
     "model"
    ]
   },
   "createlabel": {
    "Resources": [
     "label-group"
    ]
   },
   "createlabelgroup": {
    "Resources": [
     "label-group"
    ]
   },
   "createmodel": {
    "Resources": [
     "dataset",
     "label-group",
     "model"
    ]
   },
   "createretrainingscheduler": {
    "Resources": [
     "model"
    ]
   },
   "deletedataset": {
    "Resources": [
     "dataset"
    ]
   },
   "deleteinferencescheduler": {
    "Resources": [
     "inference-scheduler"
    ]
   },
   "deletelabel": {
    "Resources": [
     "label-group"
    ]
   },
   "deletelabelgroup": {
    "Resources": [
     "label-group"
    ]
   },
   "deletemodel": {
    "Resources": [
     "model"
    ]
   },
   "deleteresourcepolicy": {
    "Resources": [
     "dataset",
     "model",
     "model-version"
    ]
   },
   "deleteretrainingscheduler": {
    "Resources": [
     "model"
    ]
   },
   "describedataingestionjob": {},
   "describedataset": {
    "Resources": [
     "dataset"
    ]
   },
   "describeinferencescheduler": {
    "Resources": [
     "inference-scheduler"
    ]
   },
   "describelabel": {
    "Resources": [
     "label-group"
    ]
   },
   "describelabelgroup": {
    "Resources": [
     "label-group"
    ]
   },
   "describemodel": {
    "Resources": [
     "model"
    ]
   },
   "describemodelversion": {
    "Resources": [
     "model-version"
    ]
   },
   "describeresourcepolicy": {
    "Resources": [
     "dataset",
     "model",
     "model-version"
    ]
   },
   "describeretrainingscheduler": {
    "Resources": [
     "model"
    ]
   },
   "importdataset": {
    "Resources": [
     "dataset"
    ]
   },
   "importmodelversion": {
    "Resources": [
     "dataset",
     "label-group",
     "model"
    ]
   },
   "listdataingestionjobs": {
    "Resources": [
     "dataset"
    ]
   },
   "listdatasets": {},
   "listinferenceevents": {
    "Resources": [
     "inference-scheduler"
    ]
   },
   "listinferenceexecutions": {
    "Resources": [
     "inference-scheduler"
    ]
   },
   "listinferenceschedulers": {},
   "listlabelgroups": {
    "Resources": [
     "label-group"
    ]
   },
   "listlabels": {
    "Resources": [
     "label-group"
    ]
   },
   "listmodels": {},
   "listmodelversions": {
    "Resources": [
     "model"
    ]
   },
   "listretrainingschedulers": {},
   "listsensorstatistics": {
    "Resources": [
     "dataset"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "dataset",
     "inference-scheduler",
     "label-group",
     "model",
     "model-version"
    ]
   },
   "putresourcepolicy": {
    "Resources": [
     "dataset",
     "model",
     "model-version"
    ]
   },
   "startdataingestionjob": {
    "Resources": [
     "dataset"
    ]
   },
   "startinferencescheduler": {
    "Resources": [
     "inference-scheduler"
    ]
   },
   "startretrainingscheduler": {
    "Resources": [
     "model"
    ]
   },
   "stopinferencescheduler": {
    "Resources": [
     "inference-scheduler"
    ]
   },
   "stopretrainingscheduler": {
    "Resources": [
     "model"
    ]
   },
   "tagresource": {
    "Resources": [
     "dataset",
     "inference-scheduler",
     "label-group",
     "model",
     "model-version"
    ]
   },
   "untagresource": {
    "Resources": [
     "dataset",
     "inference-scheduler",
     "label-group",
     "model",
     "model-version"
    ]
   },
   "updateactivemodelversion": {
    "Resources": [
     "model",
     "model-version"
    ]
   },
   "updateinferencescheduler": {
    "Resources": [
     "inference-scheduler"
    ]
   },
   "updatelabelgroup": {
    "Resources": [
     "label-group"
    ]
   },
   "updatemodel": {
    "Resources": [
     "model"
    ]
   },
   "updateretrainingscheduler": {
    "Resources": [
     "model"
    ]
   }
  },
  "Resources": {
   "dataset": {
    "ARNFormats": [
     "arn:${Partition}:lookoutequipment:${Region}:${Account}:dataset/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "inference-scheduler": {
    "ARNFormats": [
     "arn:${Partition}:lookoutequipment:${Region}:${Account}:inference-scheduler/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "label-group": {
    "ARNFormats": [
     "arn:${Partition}:lookoutequipment:${Region}:${Account}:label-group/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "model": {
    "ARNFormats": [
     "arn:${Partition}:lookoutequipment:${Region}:${Account}:model/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "model-version": {
    "ARNFormats": [
     "arn:${Partition}:lookoutequipment:${Region}:${Account}:model/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "lookoutmetrics": {
  "Actions": {
   "activateanomalydetector": {
    "Resources": [
     "AnomalyDetector"
    ]
   },
   "backtestanomalydetector": {
    "Resources": [
     "AnomalyDetector"
    ]
   },
   "createalert": {
    "Resources": [
     "Alert",
     "AnomalyDetector"
    ]
   },
   "createanomalydetector": {
    "Resources": [
     "AnomalyDetector"
    ]
   },
   "createmetricset": {
    "Resources": [
     "AnomalyDetector",
     "MetricSet"
    ]
   },
   "deactivateanomalydetector": {
    "Resources": [
     "AnomalyDetector"
    ]
   },
   "deletealert": {
    "Resources": [
     "Alert"
    ]
   },
   "deleteanomalydetector": {
    "Resources": [
     "AnomalyDetector"
    ]
   },
   "describealert": {
    "Resources": [
     "Alert"
    ]
   },
   "describeanomalydetectionexecutions": {
    "Resources": [
     "AnomalyDetector"
    ]
   },
   "describeanomalydetector": {
    "Resources": [
     "AnomalyDetector"
    ]
   },
   "describemetricset": {
    "Resources": [
     "MetricSet"
    ]
   },
   "detectmetricsetconfig": {
    "Resources": [
     "AnomalyDetector"
    ]
   },
   "getanomalygroup": {
    "Resources": [
     "AnomalyDetector"
    ]
   },
   "getdataqualitymetrics": {
    "Resources": [
     "AnomalyDetector"
    ]
   },
   "getfeedback": {
    "Resources": [
     "AnomalyDetector"
    ]
   },
   "getsampledata": {},
   "listalerts": {
    "Resources": [
     "AnomalyDetector"
    ]
   },
   "listanomalydetectors": {},
   "listanomalygrouprelatedmetrics": {
    "Resources": [
     "AnomalyDetector"
    ]
   },
   "listanomalygroupsummaries": {
    "Resources": [
     "AnomalyDetector"
    ]
   },
   "listanomalygrouptimeseries": {
    "Resources": [
     "AnomalyDetector"
    ]
   },
   "listmetricsets": {
    "Resources": [
     "AnomalyDetector"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "Alert",
     "AnomalyDetector",
     "MetricSet"
    ]
   },
   "putfeedback": {
    "Resources": [
     "AnomalyDetector"
    ]
   },
   "tagresource": {
    "Resources": [
     "Alert",
     "AnomalyDetector",
     "MetricSet"
    ]
   },
   "untagresource": {
    "Resources": [
     "Alert",
     "AnomalyDetector",
     "MetricSet"
    ]
   },
   "updatealert": {
    "Resources": [
     "Alert"
    ]
   },
   "updateanomalydetector": {
    "Resources": [
     "AnomalyDetector"
    ]
   },
   "updatemetricset": {
    "Resources": [
     "MetricSet"
    ]
   }
  },
  "Resources": {
   "alert": {
    "ARNFormats": [
     "arn:${Partition}:lookoutmetrics:${Region}:${Account}:Alert:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "anomalydetector": {
    "ARNFormats": [
     "arn:${Partition}:lookoutmetrics:${Region}:${Account}:AnomalyDetector:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "metricset": {
    "ARNFormats": [
     "arn:${Partition}:lookoutmetrics:${Region}:${Account}:MetricSet/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "lookoutvision": {
  "Actions": {
   "createdataset": {},
   "createmodel": {
    "Resources": [
     "model"
    ]
   },
   "createproject": {
    "Resources": [
     "project"
    ]
   },
   "deletedataset": {},
   "deletemodel": {
    "Resources": [
     "model"
    ]
   },
   "deleteproject": {
    "Resources": [
     "project"
    ]
   },
   "describedataset": {},
   "describemodel": {
    "Resources": [
     "model"
    ]
   },
   "describemodelpackagingjob": {},
   "describeproject": {
    "Resources": [
     "project"
    ]
   },
   "describetrialdetection": {},
   "detectanomalies": {
    "Resources": [
     "model"
    ]
   },
   "listdatasetentries": {},
   "listmodelpackagingjobs": {},
   "listmodels": {},
   "listprojects": {},
   "listtagsforresource": {
    "Resources": [
     "model"
    ]
   },
   "listtrialdetections": {},
   "startmodel": {
    "Resources": [
     "model"
    ]
   },
   "startmodelpackagingjob": {
    "Resources": [
     "model"
    ]
   },
   "starttrialdetection": {},
   "stopmodel": {
    "Resources": [
     "model"
    ]
   },
   "tagresource": {
    "Resources": [
     "model"
    ]
   },
   "untagresource": {
    "Resources": [
     "model"
    ]
   },
   "updatedatasetentries": {}
  },
  "Resources": {
   "model": {
    "ARNFormats": [
     "arn:${Partition}:lookoutvision:${Region}:${Account}:model/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "project": {
    "ARNFormats": [
     "arn:${Partition}:lookoutvision:${Region}:${Account}:project/.*"
    ]
   }
  }
 },
 "m2": {
  "Actions": {
   "cancelbatchjobexecution": {
    "Resources": [
     "Application"
    ]
   },
   "createapplication": {},
   "createdatasetimporttask": {
    "Resources": [
     "Application"
    ]
   },
   "createdeployment": {
    "Resources": [
     "Application",
     "Environment"
    ]
   },
   "createenvironment": {},
   "deleteapplication": {
    "Resources": [
     "Application"
    ]
   },
   "deleteapplicationfromenvironment": {
    "Resources": [
     "Application"
    ]
   },
   "deleteenvironment": {
    "Resources": [
     "Environment"
    ]
   },
   "getapplication": {
    "Resources": [
     "Application"
    ]
   },
   "getapplicationversion": {
    "Resources": [
     "Application"
    ]
   },
   "getbatchjobexecution": {
    "Resources": [
     "Application"
    ]
   },
   "getdatasetdetails": {
    "Resources": [
     "Application"
    ]
   },
   "getdatasetimporttask": {
    "Resources": [
     "Application"
    ]
   },
   "getdeployment": {
    "Resources": [
     "Application"
    ]
   },
   "getenvironment": {
    "Resources": [
     "Environment"
    ]
   },
   "getsignedbluinsightsurl": {},
   "listapplications": {},
   "listapplicationversions": {
    "Resources": [
     "Application"
    ]
   },
   "listbatchjobdefinitions": {
    "Resources": [
     "Application"
    ]
   },
   "listbatchjobexecutions": {
    "Resources": [
     "Application"
    ]
   },
   "listbatchjobrestartpoints": {
    "Resources": [
     "Application"
    ]
   },
   "listdatasetimporthistory": {
    "Resources": [
     "Application"
    ]
   },
   "listdatasets": {
    "Resources": [
     "Application"
    ]
   },
   "listdeployments": {
    "Resources": [
     "Application"
    ]
   },
   "listengineversions": {},
   "listenvironments": {},
   "listtagsforresource": {},
   "startapplication": {
    "Resources": [
     "Application"
    ]
   },
   "startbatchjob": {
    "Resources": [
     "Application"
    ]
   },
   "stopapplication": {
    "Resources": [
     "Application"
    ]
   },
   "tagresource": {
    "Resources": [
     "Application",
     "Environment"
    ]
   },
   "untagresource": {
    "Resources": [
     "Application",
     "Environment"
    ]
   },
   "updateapplication": {
    "Resources": [
     "Application"
    ]
   },
   "updateenvironment": {
    "Resources": [
     "Environment"
    ]
   }
  },
  "Resources": {
   "application": {
    "ARNFormats": [
     "arn:${Partition}:m2:${Region}:${Account}:app/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "environment": {
    "ARNFormats": [
     "arn:${Partition}:m2:${Region}:${Account}:env/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "machinelearning": {
  "Actions": {
   "addtags": {
    "Resources": [
     "batchprediction",
     "datasource",
     "evaluation",
     "mlmodel"
    ]
   },
   "createbatchprediction": {
    "Resources": [
     "batchprediction",
     "datasource",
     "mlmodel"
    ]
   },
   "createdatasourcefromrds": {
    "Resources": [
     "datasource"
    ]
   },
   "createdatasourcefromredshift": {
    "Resources": [
     "datasource"
    ]
   },
   "createdatasourcefroms3": {
    "Resources": [
     "datasource"
    ]
   },
   "createevaluation": {
    "Resources": [
     "datasource",
     "evaluation",
     "mlmodel"
    ]
   },
   "createmlmodel": {
    "Resources": [
     "datasource",
     "mlmodel"
    ]
   },
   "createrealtimeendpoint": {
    "Resources": [
     "mlmodel"
    ]
   },
   "deletebatchprediction": {
    "Resources": [
     "batchprediction"
    ]
   },
   "deletedatasource": {
    "Resources": [
     "datasource"
    ]
   },
   "deleteevaluation": {
    "Resources": [
     "evaluation"
    ]
   },
   "deletemlmodel": {
    "Resources": [
     "mlmodel"
    ]
   },
   "deleterealtimeendpoint": {
    "Resources": [
     "mlmodel"
    ]
   },
   "deletetags": {
    "Resources": [
     "batchprediction",
     "datasource",
     "evaluation",
     "mlmodel"
    ]
   },
   "describebatchpredictions": {},
   "describedatasources": {},
   "describeevaluations": {},
   "describemlmodels": {},
   "describetags": {
    "Resources": [
     "batchprediction",
     "datasource",
     "evaluation",
     "mlmodel"
    ]
   },
   "getbatchprediction": {
    "Resources": [
     "batchprediction"
    ]
   },
   "getdatasource": {
    "Resources": [
     "datasource"
    ]
   },
   "getevaluation": {
    "Resources": [
     "datasource"
    ]
   },
   "getmlmodel": {
    "Resources": [
     "mlmodel"
    ]
   },
   "predict": {
    "Resources": [
     "mlmodel"
    ]
   },
   "updatebatchprediction": {
    "Resources": [
     "batchprediction"
    ]
   },
   "updatedatasource": {
    "Resources": [
     "datasource"
    ]
   },
   "updateevaluation": {
    "Resources": [
     "evaluation"
    ]
   },
   "updatemlmodel": {
    "Resources": [
     "mlmodel"
    ]
   }
  },
  "Resources": {
   "batchprediction": {
    "ARNFormats": [
     "arn:${Partition}:machinelearning:${Region}:${Account}:batchprediction/.*"
    ]
   },
   "datasource": {
    "ARNFormats": [
     "arn:${Partition}:machinelearning:${Region}:${Account}:datasource/.*"
    ]
   },
   "evaluation": {
    "ARNFormats": [
     "arn:${Partition}:machinelearning:${Region}:${Account}:evaluation/.*"
    ]
   },
   "mlmodel": {
    "ARNFormats": [
     "arn:${Partition}:machinelearning:${Region}:${Account}:mlmodel/.*"
    ]
   }
  }
 },
 "macie2": {
  "Actions": {
   "acceptinvitation": {},
   "batchgetcustomdataidentifiers": {
    "Resources": [
     "CustomDataIdentifier"
    ]
   },
   "batchupdateautomateddiscoveryaccounts": {},
   "createallowlist": {},
   "createclassificationjob": {
    "Resources": [
     "ClassificationJob"
    ]
   },
   "createcustomdataidentifier": {
    "Resources": [
     "CustomDataIdentifier"
    ]
   },
   "createfindingsfilter": {
    "Resources": [
     "FindingsFilter"
    ]
   },
   "createinvitations": {},
   "createmember": {
    "Resources": [
     "Member"
    ]
   },
   "createsamplefindings": {},
   "declineinvitations": {},
   "deleteallowlist": {
    "Resources": [
     "AllowList"
    ]
   },
   "deletecustomdataidentifier": {
    "Resources": [
     "CustomDataIdentifier"
    ]
   },
   "deletefindingsfilter": {
    "Resources": [
     "FindingsFilter"
    ]
   },
   "deleteinvitations": {},
   "deletemember": {
    "Resources": [
     "Member"
    ]
   },
   "describebuckets": {},
   "describeclassificationjob": {
    "Resources": [
     "ClassificationJob"
    ]
   },
   "describeorganizationconfiguration": {},
   "disablemacie": {},
   "disableorganizationadminaccount": {},
   "disassociatefromadministratoraccount": {},
   "disassociatefrommasteraccount": {},
   "disassociatemember": {
    "Resources": [
     "Member"
    ]
   },
   "enablemacie": {},
   "enableorganizationadminaccount": {},
   "getadministratoraccount": {},
   "getallowlist": {
    "Resources": [
     "AllowList"
    ]
   },
   "getautomateddiscoveryconfiguration": {},
   "getbucketstatistics": {},
   "getclassificationexportconfiguration": {},
   "getclassificationscope": {},
   "getcustomdataidentifier": {
    "Resources": [
     "CustomDataIdentifier"
    ]
   },
   "getfindings": {},
   "getfindingsfilter": {
    "Resources": [
     "FindingsFilter"
    ]
   },
   "getfindingspublicationconfiguration": {},
   "getfindingstatistics": {},
   "getinvitationscount": {},
   "getmaciesession": {},
   "getmasteraccount": {},
   "getmember": {
    "Resources": [
     "Member"
    ]
   },
   "getresourceprofile": {},
   "getrevealconfiguration": {},
   "getsensitivedataoccurrences": {},
   "getsensitivedataoccurrencesavailability": {},
   "getsensitivityinspectiontemplate": {},
   "getusagestatistics": {},
   "getusagetotals": {},
   "listallowlists": {},
   "listautomateddiscoveryaccounts": {},
   "listclassificationjobs": {},
   "listclassificationscopes": {},
   "listcustomdataidentifiers": {},
   "listfindings": {},
   "listfindingsfilters": {},
   "listinvitations": {},
   "listmanageddataidentifiers": {},
   "listmembers": {},
   "listorganizationadminaccounts": {},
   "listresourceprofileartifacts": {},
   "listresourceprofiledetections": {},
   "listsensitivityinspectiontemplates": {},
   "listtagsforresource": {
    "Resources": [
     "AllowList",
     "ClassificationJob",
     "CustomDataIdentifier",
     "FindingsFilter",
     "Member"
    ]
   },
   "putclassificationexportconfiguration": {},
   "putfindingspublicationconfiguration": {},
   "searchresources": {},
   "tagresource": {
    "Resources": [
     "AllowList",
     "ClassificationJob",
     "CustomDataIdentifier",
     "FindingsFilter",
     "Member"
    ]
   },
   "testcustomdataidentifier": {},
   "untagresource": {
    "Resources": [
     "AllowList",
     "ClassificationJob",
     "CustomDataIdentifier",
     "FindingsFilter",
     "Member"
    ]
   },
   "updateallowlist": {
    "Resources": [
     "AllowList"
    ]
   },
   "updateautomateddiscoveryconfiguration": {},
   "updateclassificationjob": {
    "Resources": [
     "ClassificationJob"
    ]
   },
   "updateclassificationscope": {},
   "updatefindingsfilter": {
    "Resources": [
     "FindingsFilter"
    ]
   },
   "updatemaciesession": {},
   "updatemembersession": {},
   "updateorganizationconfiguration": {},
   "updateresourceprofile": {},
   "updateresourceprofiledetections": {},
   "updaterevealconfiguration": {},
   "updatesensitivityinspectiontemplate": {}
  },
  "Resources": {
   "allowlist": {
    "ARNFormats": [
     "arn:${Partition}:macie2:${Region}:${Account}:allow-list/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "classificationjob": {
    "ARNFormats": [
     "arn:${Partition}:macie2:${Region}:${Account}:classification-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "customdataidentifier": {
    "ARNFormats": [
     "arn:${Partition}:macie2:${Region}:${Account}:custom-data-identifier/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "findingsfilter": {
    "ARNFormats": [
     "arn:${Partition}:macie2:${Region}:${Account}:findings-filter/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "member": {
    "ARNFormats": [
     "arn:${Partition}:macie2:${Region}:${Account}:member/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "managedblockchain": {
  "Actions": {
   "createaccessor": {},
   "createmember": {
    "Resources": [
     "network"
    ]
   },
   "createnetwork": {},
   "createnode": {
    "Resources": [
     "member",
     "network"
    ]
   },
   "createproposal": {
    "Resources": [
     "network"
    ]
   },
   "deleteaccessor": {
    "Resources": [
     "accessor"
    ]
   },
   "deletemember": {
    "Resources": [
     "member"
    ]
   },
   "deletenode": {
    "Resources": [
     "node"
    ]
   },
   "get": {},
   "getaccessor": {
    "Resources": [
     "accessor"
    ]
   },
   "getmember": {
    "Resources": [
     "member"
    ]
   },
   "getnetwork": {
    "Resources": [
     "network"
    ]
   },
   "getnode": {
    "Resources": [
     "node"
    ]
   },
   "getproposal": {
    "Resources": [
     "proposal"
    ]
   },
   "invoke": {},
   "invokerpcbitcoinmainnet": {},
   "invokerpcbitcointestnet": {},
   "invokerpcpolygonmainnet": {},
   "invokerpcpolygonmumbaitestnet": {},
   "listaccessors": {},
   "listinvitations": {},
   "listmembers": {
    "Resources": [
     "network"
    ]
   },
   "listnetworks": {},
   "listnodes": {
    "Resources": [
     "member",
     "network"
    ]
   },
   "listproposals": {
    "Resources": [
     "network"
    ]
   },
   "listproposalvotes": {
    "Resources": [
     "proposal"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "accessor",
     "invitation",
     "member",
     "network",
     "node",
     "proposal"
    ]
   },
   "post": {},
   "rejectinvitation": {
    "Resources": [
     "invitation"
    ]
   },
   "tagresource": {
    "Resources": [
     "accessor",
     "invitation",
     "member",
     "network",
     "node",
     "proposal"
    ]
   },
   "untagresource": {
    "Resources": [
     "accessor",
     "invitation",
     "member",
     "network",
     "node",
     "proposal"
    ]
   },
   "updatemember": {
    "Resources": [
     "member"
    ]
   },
   "updatenode": {
    "Resources": [
     "node"
    ]
   },
   "voteonproposal": {
    "Resources": [
     "proposal"
    ]
   }
  },
  "Resources": {
   "accessor": {
    "ARNFormats": [
     "arn:${Partition}:managedblockchain:${Region}:${Account}:accessors/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "invitation": {
    "ARNFormats": [
     "arn:${Partition}:managedblockchain:${Region}:${Account}:invitations/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "member": {
    "ARNFormats": [
     "arn:${Partition}:managedblockchain:${Region}:${Account}:members/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "network": {
    "ARNFormats": [
     "arn:${Partition}:managedblockchain:${Region}::networks/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "node": {
    "ARNFormats": [
     "arn:${Partition}:managedblockchain:${Region}:${Account}:nodes/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "proposal": {
    "ARNFormats": [
     "arn:${Partition}:managedblockchain:${Region}::proposals/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "managedblockchain-query": {
  "Actions": {
   "batchgettokenbalance": {},
   "getassetcontract": {},
   "gettokenbalance": {},
   "gettransaction": {},
   "listassetcontracts": {},
   "listfilteredtransactionevents": {},
   "listtokenbalances": {},
   "listtransactionevents": {},
   "listtransactions": {}
  },
  "Resources": {}
 },
 "mapcredits": {
  "Actions": {
   "listassociatedprograms": {
    "Resources": [
     "agreement"
    ]
   },
   "listquartercredits": {
    "Resources": [
     "agreement"
    ]
   },
   "listquarterspend": {
    "Resources": [
     "agreement"
    ]
   }
  },
  "Resources": {
   "agreement": {
    "ARNFormats": [
     "arn:${Partition}:mapcredits:::.*"
    ]
   }
  }
 },
 "marketplacecommerceanalytics": {
  "Actions": {
   "generatedataset": {},
   "startsupportdataexport": {}
  },
  "Resources": {}
 },
 "mechanicalturk": {
  "Actions": {
   "acceptqualificationrequest": {},
   "approveassignment": {},
   "associatequalificationwithworker": {},
   "createadditionalassignmentsforhit": {},
   "createhit": {},
   "createhittype": {},
   "createhitwithhittype": {},
   "createqualificationtype": {},
   "createworkerblock": {},
   "deletehit": {},
   "deletequalificationtype": {},
   "deleteworkerblock": {},
   "disassociatequalificationfromworker": {},
   "getaccountbalance": {},
   "getassignment": {},
   "getfileuploadurl": {},
   "gethit": {},
   "getqualificationscore": {},
   "getqualificationtype": {},
   "listassignmentsforhit": {},
   "listbonuspayments": {},
   "listhits": {},
   "listhitsforqualificationtype": {},
   "listqualificationrequests": {},
   "listqualificationtypes": {},
   "listreviewablehits": {},
   "listreviewpolicyresultsforhit": {},
   "listworkerblocks": {},
   "listworkerswithqualificationtype": {},
   "notifyworkers": {},
   "rejectassignment": {},
   "rejectqualificationrequest": {},
   "sendbonus": {},
   "sendtesteventnotification": {},
   "updateexpirationforhit": {},
   "updatehitreviewstatus": {},
   "updatehittypeofhit": {},
   "updatenotificationsettings": {},
   "updatequalificationtype": {}
  },
  "Resources": {}
 },
 "mediaconnect": {
  "Actions": {
   "addbridgeoutputs": {
    "Resources": [
     "Bridge"
    ]
   },
   "addbridgesources": {
    "Resources": [
     "Bridge"
    ]
   },
   "addflowmediastreams": {},
   "addflowoutputs": {},
   "addflowsources": {},
   "addflowvpcinterfaces": {},
   "createbridge": {
    "Resources": [
     "Bridge"
    ]
   },
   "createflow": {},
   "creategateway": {
    "Resources": [
     "Gateway"
    ]
   },
   "deletebridge": {
    "Resources": [
     "Bridge"
    ]
   },
   "deleteflow": {},
   "deletegateway": {
    "Resources": [
     "Gateway"
    ]
   },
   "deregistergatewayinstance": {
    "Resources": [
     "GatewayInstance"
    ]
   },
   "describebridge": {
    "Resources": [
     "Bridge"
    ]
   },
   "describeflow": {},
   "describeflowsourcemetadata": {},
   "describeflowsourcethumbnail": {},
   "describegateway": {
    "Resources": [
     "Gateway"
    ]
   },
   "describegatewayinstance": {
    "Resources": [
     "GatewayInstance"
    ]
   },
   "describeoffering": {},
   "describereservation": {},
   "discovergatewaypollendpoint": {},
   "grantflowentitlements": {},
   "listbridges": {
    "Resources": [
     "Bridge"
    ]
   },
   "listentitlements": {},
   "listflows": {},
   "listgatewayinstances": {
    "Resources": [
     "GatewayInstance"
    ]
   },
   "listgateways": {},
   "listofferings": {},
   "listreservations": {},
   "listtagsforresource": {},
   "pollgateway": {},
   "purchaseoffering": {},
   "removebridgeoutput": {
    "Resources": [
     "Bridge"
    ]
   },
   "removebridgesource": {
    "Resources": [
     "Bridge"
    ]
   },
   "removeflowmediastream": {},
   "removeflowoutput": {},
   "removeflowsource": {},
   "removeflowvpcinterface": {},
   "revokeflowentitlement": {},
   "startflow": {},
   "stopflow": {},
   "submitgatewaystatechange": {},
   "tagresource": {},
   "untagresource": {},
   "updatebridge": {
    "Resources": [
     "Bridge"
    ]
   },
   "updatebridgeoutput": {
    "Resources": [
     "Bridge"
    ]
   },
   "updatebridgesource": {
    "Resources": [
     "Bridge"
    ]
   },
   "updatebridgestate": {
    "Resources": [
     "Bridge"
    ]
   },
   "updateflow": {},
   "updateflowentitlement": {},
   "updateflowmediastream": {},
   "updateflowoutput": {},
   "updateflowsource": {},
   "updategatewayinstance": {
    "Resources": [
     "GatewayInstance"
    ]
   }
  },
  "Resources": {
   "bridge": {
    "ARNFormats": [
     "arn:${Partition}:mediaconnect:${Region}:${Account}:bridge:.*"
    ]
   },
   "entitlement": {
    "ARNFormats": [
     "arn:${Partition}:mediaconnect:${Region}:${Account}:entitlement:.*"
    ]
   },
   "flow": {
    "ARNFormats": [
     "arn:${Partition}:mediaconnect:${Region}:${Account}:flow:.*"
    ]
   },
   "gateway": {
    "ARNFormats": [
     "arn:${Partition}:mediaconnect:${Region}:${Account}:gateway:.*"
    ]
   },
   "gatewayinstance": {
    "ARNFormats": [
     "arn:${Partition}:mediaconnect:${Region}:${Account}:gateway:.*"
    ]
   },
   "output": {
    "ARNFormats": [
     "arn:${Partition}:mediaconnect:${Region}:${Account}:output:.*"
    ]
   },
   "source": {
    "ARNFormats": [
     "arn:${Partition}:mediaconnect:${Region}:${Account}:source:.*"
    ]
   }
  }
 },
 "mediaconvert": {
  "Actions": {
   "associatecertificate": {},
   "canceljob": {
    "Resources": [
     "Job"
    ]
   },
   "createjob": {
    "Resources": [
     "JobTemplate",
     "Preset",
     "Queue"
    ]
   },
   "createjobtemplate": {
    "Resources": [
     "Preset",
     "Queue"
    ]
   },
   "createpreset": {},
   "createqueue": {},
   "deletejobtemplate": {
    "Resources": [
     "JobTemplate"
    ]
   },
   "deletepolicy": {},
   "deletepreset": {
    "Resources": [
     "Preset"
    ]
   },
   "deletequeue": {
    "Resources": [
     "Queue"
    ]
   },
   "describeendpoints": {},
   "disassociatecertificate": {},
   "getjob": {
    "Resources": [
     "Job"
    ]
   },
   "getjobtemplate": {
    "Resources": [
     "JobTemplate"
    ]
   },
   "getpolicy": {},
   "getpreset": {
    "Resources": [
     "Preset"
    ]
   },
   "getqueue": {
    "Resources": [
     "Queue"
    ]
   },
   "listjobs": {
    "Resources": [
     "Queue"
    ]
   },
   "listjobtemplates": {},
   "listpresets": {},
   "listqueues": {},
   "listtagsforresource": {
    "Resources": [
     "JobTemplate",
     "Preset",
     "Queue"
    ]
   },
   "listversions": {},
   "probe": {},
   "putpolicy": {},
   "searchjobs": {
    "Resources": [
     "Queue"
    ]
   },
   "tagresource": {
    "Resources": [
     "JobTemplate",
     "Preset",
     "Queue"
    ]
   },
   "untagresource": {
    "Resources": [
     "JobTemplate",
     "Preset",
     "Queue"
    ]
   },
   "updatejobtemplate": {
    "Resources": [
     "JobTemplate",
     "Preset",
     "Queue"
    ]
   },
   "updatepreset": {
    "Resources": [
     "Preset"
    ]
   },
   "updatequeue": {
    "Resources": [
     "Queue"
    ]
   }
  },
  "Resources": {
   "certificateassociation": {
    "ARNFormats": [
     "arn:${Partition}:mediaconvert:${Region}:${Account}:certificates/.*"
    ]
   },
   "job": {
    "ARNFormats": [
     "arn:${Partition}:mediaconvert:${Region}:${Account}:jobs/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "jobtemplate": {
    "ARNFormats": [
     "arn:${Partition}:mediaconvert:${Region}:${Account}:jobTemplates/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "preset": {
    "ARNFormats": [
     "arn:${Partition}:mediaconvert:${Region}:${Account}:presets/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "queue": {
    "ARNFormats": [
     "arn:${Partition}:mediaconvert:${Region}:${Account}:queues/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "mediaimport": {
  "Actions": {
   "createdatabasebinarysnapshot": {}
  },
  "Resources": {}
 },
 "medialive": {
  "Actions": {
   "acceptinputdevicetransfer": {
    "Resources": [
     "input-device"
    ]
   },
   "batchdelete": {},
   "batchstart": {},
   "batchstop": {},
   "batchupdateschedule": {
    "Resources": [
     "channel"
    ]
   },
   "cancelinputdevicetransfer": {
    "Resources": [
     "input-device"
    ]
   },
   "claimdevice": {
    "Resources": [
     "input-device"
    ]
   },
   "createchannel": {
    "Resources": [
     "channel",
     "input"
    ]
   },
   "createchannelplacementgroup": {
    "Resources": [
     "channel-placement-group",
     "cluster"
    ]
   },
   "createcloudwatchalarmtemplate": {
    "Resources": [
     "cloudwatch-alarm-template",
     "cloudwatch-alarm-template-group"
    ]
   },
   "createcloudwatchalarmtemplategroup": {
    "Resources": [
     "cloudwatch-alarm-template-group"
    ]
   },
   "createcluster": {
    "Resources": [
     "cluster"
    ]
   },
   "createeventbridgeruletemplate": {
    "Resources": [
     "eventbridge-rule-template",
     "eventbridge-rule-template-group"
    ]
   },
   "createeventbridgeruletemplategroup": {
    "Resources": [
     "eventbridge-rule-template-group"
    ]
   },
   "createinput": {
    "Resources": [
     "input",
     "input-security-group"
    ]
   },
   "createinputsecuritygroup": {
    "Resources": [
     "input-security-group"
    ]
   },
   "createmultiplex": {
    "Resources": [
     "multiplex"
    ]
   },
   "createmultiplexprogram": {
    "Resources": [
     "multiplex"
    ]
   },
   "createnetwork": {
    "Resources": [
     "network"
    ]
   },
   "createnode": {
    "Resources": [
     "cluster",
     "node"
    ]
   },
   "createnoderegistrationscript": {
    "Resources": [
     "cluster"
    ]
   },
   "createpartnerinput": {
    "Resources": [
     "input"
    ]
   },
   "createsignalmap": {
    "Resources": [
     "signal-map"
    ]
   },
   "createtags": {
    "Resources": [
     "channel",
     "channel-placement-group",
     "cloudwatch-alarm-template",
     "cloudwatch-alarm-template-group",
     "cluster",
     "eventbridge-rule-template",
     "eventbridge-rule-template-group",
     "input",
     "input-security-group",
     "multiplex",
     "network",
     "node",
     "reservation",
     "signal-map"
    ]
   },
   "deletechannel": {
    "Resources": [
     "channel"
    ]
   },
   "deletechannelplacementgroup": {
    "Resources": [
     "channel-placement-group"
    ]
   },
   "deletecloudwatchalarmtemplate": {
    "Resources": [
     "cloudwatch-alarm-template"
    ]
   },
   "deletecloudwatchalarmtemplategroup": {
    "Resources": [
     "cloudwatch-alarm-template-group"
    ]
   },
   "deletecluster": {
    "Resources": [
     "cluster"
    ]
   },
   "deleteeventbridgeruletemplate": {
    "Resources": [
     "eventbridge-rule-template"
    ]
   },
   "deleteeventbridgeruletemplategroup": {
    "Resources": [
     "eventbridge-rule-template-group"
    ]
   },
   "deleteinput": {
    "Resources": [
     "input"
    ]
   },
   "deleteinputsecuritygroup": {
    "Resources": [
     "input-security-group"
    ]
   },
   "deletemultiplex": {
    "Resources": [
     "multiplex"
    ]
   },
   "deletemultiplexprogram": {
    "Resources": [
     "multiplex"
    ]
   },
   "deletenetwork": {
    "Resources": [
     "network"
    ]
   },
   "deletenode": {
    "Resources": [
     "node"
    ]
   },
   "deletereservation": {
    "Resources": [
     "reservation"
    ]
   },
   "deleteschedule": {
    "Resources": [
     "channel"
    ]
   },
   "deletesignalmap": {
    "Resources": [
     "signal-map"
    ]
   },
   "deletetags": {
    "Resources": [
     "channel",
     "channel-placement-group",
     "cloudwatch-alarm-template",
     "cloudwatch-alarm-template-group",
     "cluster",
     "eventbridge-rule-template",
     "eventbridge-rule-template-group",
     "input",
     "input-security-group",
     "multiplex",
     "network",
     "node",
     "reservation",
     "signal-map"
    ]
   },
   "describeaccountconfiguration": {},
   "describechannel": {
    "Resources": [
     "channel"
    ]
   },
   "describechannelplacementgroup": {
    "Resources": [
     "channel-placement-group"
    ]
   },
   "describecluster": {
    "Resources": [
     "cluster"
    ]
   },
   "describeinput": {
    "Resources": [
     "input"
    ]
   },
   "describeinputdevice": {
    "Resources": [
     "input-device"
    ]
   },
   "describeinputdevicethumbnail": {
    "Resources": [
     "input-device"
    ]
   },
   "describeinputsecuritygroup": {
    "Resources": [
     "input-security-group"
    ]
   },
   "describemultiplex": {
    "Resources": [
     "multiplex"
    ]
   },
   "describemultiplexprogram": {
    "Resources": [
     "multiplex"
    ]
   },
   "describenetwork": {
    "Resources": [
     "network"
    ]
   },
   "describenode": {
    "Resources": [
     "node"
    ]
   },
   "describeoffering": {
    "Resources": [
     "offering"
    ]
   },
   "describereservation": {
    "Resources": [
     "reservation"
    ]
   },
   "describeschedule": {
    "Resources": [
     "channel"
    ]
   },
   "describethumbnails": {
    "Resources": [
     "channel"
    ]
   },
   "getcloudwatchalarmtemplate": {
    "Resources": [
     "cloudwatch-alarm-template"
    ]
   },
   "getcloudwatchalarmtemplategroup": {
    "Resources": [
     "cloudwatch-alarm-template-group"
    ]
   },
   "geteventbridgeruletemplate": {
    "Resources": [
     "eventbridge-rule-template"
    ]
   },
   "geteventbridgeruletemplategroup": {
    "Resources": [
     "eventbridge-rule-template-group"
    ]
   },
   "getsignalmap": {
    "Resources": [
     "signal-map"
    ]
   },
   "listchannelplacementgroups": {},
   "listchannels": {},
   "listcloudwatchalarmtemplategroups": {},
   "listcloudwatchalarmtemplates": {},
   "listclusters": {},
   "listeventbridgeruletemplategroups": {},
   "listeventbridgeruletemplates": {},
   "listinputdevices": {},
   "listinputdevicetransfers": {},
   "listinputs": {},
   "listinputsecuritygroups": {},
   "listmultiplexes": {},
   "listmultiplexprograms": {},
   "listnetworks": {},
   "listnodes": {},
   "listofferings": {},
   "listreservations": {},
   "listsignalmaps": {},
   "listtagsforresource": {
    "Resources": [
     "channel",
     "channel-placement-group",
     "cloudwatch-alarm-template",
     "cloudwatch-alarm-template-group",
     "cluster",
     "eventbridge-rule-template",
     "eventbridge-rule-template-group",
     "input",
     "input-security-group",
     "multiplex",
     "network",
     "node",
     "reservation",
     "signal-map"
    ]
   },
   "listversions": {},
   "pollanywhere": {},
   "purchaseoffering": {
    "Resources": [
     "offering",
     "reservation"
    ]
   },
   "rebootinputdevice": {
    "Resources": [
     "input-device"
    ]
   },
   "rejectinputdevicetransfer": {
    "Resources": [
     "input-device"
    ]
   },
   "restartchannelpipelines": {
    "Resources": [
     "channel"
    ]
   },
   "startchannel": {
    "Resources": [
     "channel"
    ]
   },
   "startdeletemonitordeployment": {
    "Resources": [
     "signal-map"
    ]
   },
   "startinputdevice": {
    "Resources": [
     "input-device"
    ]
   },
   "startinputdevicemaintenancewindow": {
    "Resources": [
     "input-device"
    ]
   },
   "startmonitordeployment": {
    "Resources": [
     "signal-map"
    ]
   },
   "startmultiplex": {
    "Resources": [
     "multiplex"
    ]
   },
   "startupdatesignalmap": {
    "Resources": [
     "signal-map"
    ]
   },
   "stopchannel": {
    "Resources": [
     "channel"
    ]
   },
   "stopinputdevice": {
    "Resources": [
     "input-device"
    ]
   },
   "stopmultiplex": {
    "Resources": [
     "multiplex"
    ]
   },
   "submitanywherestatechange": {},
   "transferinputdevice": {
    "Resources": [
     "input-device"
    ]
   },
   "updateaccountconfiguration": {},
   "updatechannel": {
    "Resources": [
     "channel"
    ]
   },
   "updatechannelclass": {
    "Resources": [
     "channel"
    ]
   },
   "updatechannelplacementgroup": {
    "Resources": [
     "channel-placement-group"
    ]
   },
   "updatecloudwatchalarmtemplate": {
    "Resources": [
     "cloudwatch-alarm-template",
     "cloudwatch-alarm-template-group"
    ]
   },
   "updatecloudwatchalarmtemplategroup": {
    "Resources": [
     "cloudwatch-alarm-template-group"
    ]
   },
   "updatecluster": {
    "Resources": [
     "cluster"
    ]
   },
   "updateeventbridgeruletemplate": {
    "Resources": [
     "eventbridge-rule-template",
     "eventbridge-rule-template-group"
    ]
   },
   "updateeventbridgeruletemplategroup": {
    "Resources": [
     "eventbridge-rule-template-group"
    ]
   },
   "updateinput": {
    "Resources": [
     "input"
    ]
   },
   "updateinputdevice": {
    "Resources": [
     "input-device"
    ]
   },
   "updateinputsecuritygroup": {
    "Resources": [
     "input-security-group"
    ]
   },
   "updatemultiplex": {
    "Resources": [
     "multiplex"
    ]
   },
   "updatemultiplexprogram": {
    "Resources": [
     "multiplex"
    ]
   },
   "updatenetwork": {
    "Resources": [
     "network"
    ]
   },
   "updatenode": {
    "Resources": [
     "node"
    ]
   },
   "updatenodestate": {
    "Resources": [
     "node"
    ]
   },
   "updatereservation": {
    "Resources": [
     "reservation"
    ]
   }
  },
  "Resources": {
   "channel": {
    "ARNFormats": [
     "arn:${Partition}:medialive:${Region}:${Account}:channel:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "channel-placement-group": {
    "ARNFormats": [
     "arn:${Partition}:medialive:${Region}:${Account}:channelPlacementGroup:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "cloudwatch-alarm-template": {
    "ARNFormats": [
     "arn:${Partition}:medialive:${Region}:${Account}:cloudwatch-alarm-template:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "cloudwatch-alarm-template-group": {
    "ARNFormats": [
     "arn:${Partition}:medialive:${Region}:${Account}:cloudwatch-alarm-template-group:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "cluster": {
    "ARNFormats": [
     "arn:${Partition}:medialive:${Region}:${Account}:cluster:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "eventbridge-rule-template": {
    "ARNFormats": [
     "arn:${Partition}:medialive:${Region}:${Account}:eventbridge-rule-template:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "eventbridge-rule-template-group": {
    "ARNFormats": [
     "arn:${Partition}:medialive:${Region}:${Account}:eventbridge-rule-template-group:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "input": {
    "ARNFormats": [
     "arn:${Partition}:medialive:${Region}:${Account}:input:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "input-device": {
    "ARNFormats": [
     "arn:${Partition}:medialive:${Region}:${Account}:inputDevice:.*"
    ]
   },
   "input-security-group": {
    "ARNFormats": [
     "arn:${Partition}:medialive:${Region}:${Account}:inputSecurityGroup:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "multiplex": {
    "ARNFormats": [
     "arn:${Partition}:medialive:${Region}:${Account}:multiplex:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "network": {
    "ARNFormats": [
     "arn:${Partition}:medialive:${Region}:${Account}:network:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "node": {
    "ARNFormats": [
     "arn:${Partition}:medialive:${Region}:${Account}:node:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "offering": {
    "ARNFormats": [
     "arn:${Partition}:medialive:${Region}:${Account}:offering:.*"
    ]
   },
   "reservation": {
    "ARNFormats": [
     "arn:${Partition}:medialive:${Region}:${Account}:reservation:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "signal-map": {
    "ARNFormats": [
     "arn:${Partition}:medialive:${Region}:${Account}:signal-map:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "mediapackage": {
  "Actions": {
   "configurelogs": {
    "Resources": [
     "channels"
    ]
   },
   "createchannel": {},
   "createharvestjob": {},
   "createoriginendpoint": {},
   "deletechannel": {
    "Resources": [
     "channels"
    ]
   },
   "deleteoriginendpoint": {
    "Resources": [
     "origin_endpoints"
    ]
   },
   "describechannel": {
    "Resources": [
     "channels"
    ]
   },
   "describeharvestjob": {
    "Resources": [
     "harvest_jobs"
    ]
   },
   "describeoriginendpoint": {
    "Resources": [
     "origin_endpoints"
    ]
   },
   "listchannels": {},
   "listharvestjobs": {},
   "listoriginendpoints": {},
   "listtagsforresource": {
    "Resources": [
     "channels",
     "harvest_jobs",
     "origin_endpoints"
    ]
   },
   "rotatechannelcredentials": {
    "Resources": [
     "channels"
    ]
   },
   "rotateingestendpointcredentials": {
    "Resources": [
     "channels"
    ]
   },
   "tagresource": {
    "Resources": [
     "channels",
     "harvest_jobs",
     "origin_endpoints"
    ]
   },
   "untagresource": {
    "Resources": [
     "channels",
     "harvest_jobs",
     "origin_endpoints"
    ]
   },
   "updatechannel": {
    "Resources": [
     "channels"
    ]
   },
   "updateoriginendpoint": {
    "Resources": [
     "origin_endpoints"
    ]
   }
  },
  "Resources": {
   "channels": {
    "ARNFormats": [
     "arn:${Partition}:mediapackage:${Region}:${Account}:channels/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "harvest_jobs": {
    "ARNFormats": [
     "arn:${Partition}:mediapackage:${Region}:${Account}:harvest_jobs/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "origin_endpoints": {
    "ARNFormats": [
     "arn:${Partition}:mediapackage:${Region}:${Account}:origin_endpoints/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "mediapackage-vod": {
  "Actions": {
   "configurelogs": {
    "Resources": [
     "packaging-groups"
    ]
   },
   "createasset": {},
   "createpackagingconfiguration": {},
   "createpackaginggroup": {},
   "deleteasset": {
    "Resources": [
     "assets"
    ]
   },
   "deletepackagingconfiguration": {
    "Resources": [
     "packaging-configurations"
    ]
   },
   "deletepackaginggroup": {
    "Resources": [
     "packaging-groups"
    ]
   },
   "describeasset": {
    "Resources": [
     "assets"
    ]
   },
   "describepackagingconfiguration": {
    "Resources": [
     "packaging-configurations"
    ]
   },
   "describepackaginggroup": {
    "Resources": [
     "packaging-groups"
    ]
   },
   "listassets": {},
   "listpackagingconfigurations": {},
   "listpackaginggroups": {},
   "listtagsforresource": {
    "Resources": [
     "assets",
     "packaging-configurations",
     "packaging-groups"
    ]
   },
   "tagresource": {
    "Resources": [
     "assets",
     "packaging-configurations",
     "packaging-groups"
    ]
   },
   "untagresource": {
    "Resources": [
     "assets",
     "packaging-configurations",
     "packaging-groups"
    ]
   },
   "updatepackaginggroup": {
    "Resources": [
     "packaging-groups"
    ]
   }
  },
  "Resources": {
   "assets": {
    "ARNFormats": [
     "arn:${Partition}:mediapackage-vod:${Region}:${Account}:assets/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "packaging-configurations": {
    "ARNFormats": [
     "arn:${Partition}:mediapackage-vod:${Region}:${Account}:packaging-configurations/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "packaging-groups": {
    "ARNFormats": [
     "arn:${Partition}:mediapackage-vod:${Region}:${Account}:packaging-groups/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "mediapackagev2": {
  "Actions": {
   "cancelharvestjob": {
    "Resources": [
     "Channel",
     "ChannelGroup",
     "HarvestJob",
     "OriginEndpoint"
    ]
   },
   "createchannel": {
    "Resources": [
     "Channel",
     "ChannelGroup"
    ]
   },
   "createchannelgroup": {
    "Resources": [
     "ChannelGroup"
    ]
   },
   "createharvestjob": {
    "Resources": [
     "Channel",
     "ChannelGroup",
     "HarvestJob",
     "OriginEndpoint"
    ]
   },
   "createoriginendpoint": {
    "Resources": [
     "Channel",
     "ChannelGroup",
     "OriginEndpoint"
    ]
   },
   "deletechannel": {
    "Resources": [
     "Channel",
     "ChannelGroup"
    ]
   },
   "deletechannelgroup": {
    "Resources": [
     "ChannelGroup"
    ]
   },
   "deletechannelpolicy": {
    "Resources": [
     "Channel",
     "ChannelGroup",
     "ChannelPolicy"
    ]
   },
   "deleteoriginendpoint": {
    "Resources": [
     "Channel",
     "ChannelGroup",
     "OriginEndpoint"
    ]
   },
   "deleteoriginendpointpolicy": {
    "Resources": [
     "Channel",
     "ChannelGroup",
     "OriginEndpoint",
     "OriginEndpointPolicy"
    ]
   },
   "getchannel": {
    "Resources": [
     "Channel",
     "ChannelGroup"
    ]
   },
   "getchannelgroup": {
    "Resources": [
     "ChannelGroup"
    ]
   },
   "getchannelpolicy": {
    "Resources": [
     "Channel",
     "ChannelGroup",
     "ChannelPolicy"
    ]
   },
   "getharvestjob": {
    "Resources": [
     "Channel",
     "ChannelGroup",
     "HarvestJob",
     "OriginEndpoint"
    ]
   },
   "getheadobject": {
    "Resources": [
     "OriginEndpoint"
    ]
   },
   "getobject": {
    "Resources": [
     "OriginEndpoint"
    ]
   },
   "getoriginendpoint": {
    "Resources": [
     "Channel",
     "ChannelGroup",
     "OriginEndpoint"
    ]
   },
   "getoriginendpointpolicy": {
    "Resources": [
     "Channel",
     "ChannelGroup",
     "OriginEndpoint",
     "OriginEndpointPolicy"
    ]
   },
   "harvestobject": {
    "Resources": [
     "OriginEndpoint"
    ]
   },
   "listchannelgroups": {},
   "listchannels": {
    "Resources": [
     "ChannelGroup"
    ]
   },
   "listharvestjobs": {
    "Resources": [
     "ChannelGroup"
    ]
   },
   "listoriginendpoints": {
    "Resources": [
     "Channel",
     "ChannelGroup"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "Channel",
     "ChannelGroup",
     "HarvestJob",
     "OriginEndpoint"
    ]
   },
   "putchannelpolicy": {
    "Resources": [
     "Channel",
     "ChannelGroup",
     "ChannelPolicy"
    ]
   },
   "putobject": {
    "Resources": [
     "Channel"
    ]
   },
   "putoriginendpointpolicy": {
    "Resources": [
     "Channel",
     "ChannelGroup",
     "OriginEndpoint",
     "OriginEndpointPolicy"
    ]
   },
   "tagresource": {
    "Resources": [
     "Channel",
     "ChannelGroup",
     "HarvestJob",
     "OriginEndpoint"
    ]
   },
   "untagresource": {
    "Resources": [
     "Channel",
     "ChannelGroup",
     "HarvestJob",
     "OriginEndpoint"
    ]
   },
   "updatechannel": {
    "Resources": [
     "Channel",
     "ChannelGroup"
    ]
   },
   "updatechannelgroup": {
    "Resources": [
     "ChannelGroup"
    ]
   },
   "updateoriginendpoint": {
    "Resources": [
     "Channel",
     "ChannelGroup",
     "OriginEndpoint"
    ]
   }
  },
  "Resources": {
   "channel": {
    "ARNFormats": [
     "arn:${Partition}:mediapackagev2:${Region}:${Account}:channelGroup/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "channelgroup": {
    "ARNFormats": [
     "arn:${Partition}:mediapackagev2:${Region}:${Account}:channelGroup/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "channelpolicy": {
    "ARNFormats": [
     "arn:${Partition}:mediapackagev2:${Region}:${Account}:channelGroup/.*"
    ]
   },
   "harvestjob": {
    "ARNFormats": [
     "arn:${Partition}:mediapackagev2:${Region}:${Account}:channelGroup/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "originendpoint": {
    "ARNFormats": [
     "arn:${Partition}:mediapackagev2:${Region}:${Account}:channelGroup/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "originendpointpolicy": {
    "ARNFormats": [
     "arn:${Partition}:mediapackagev2:${Region}:${Account}:channelGroup/.*"
    ]
   }
  }
 },
 "mediastore": {
  "Actions": {
   "createcontainer": {},
   "deletecontainer": {
    "Resources": [
     "container"
    ]
   },
   "deletecontainerpolicy": {
    "Resources": [
     "container"
    ]
   },
   "deletecorspolicy": {
    "Resources": [
     "container"
    ]
   },
   "deletelifecyclepolicy": {
    "Resources": [
     "container"
    ]
   },
   "deletemetricpolicy": {
    "Resources": [
     "container"
    ]
   },
   "deleteobject": {
    "Resources": [
     "object"
    ]
   },
   "describecontainer": {
    "Resources": [
     "container"
    ]
   },
   "describeobject": {
    "Resources": [
     "object"
    ]
   },
   "getcontainerpolicy": {
    "Resources": [
     "container"
    ]
   },
   "getcorspolicy": {
    "Resources": [
     "container"
    ]
   },
   "getlifecyclepolicy": {
    "Resources": [
     "container"
    ]
   },
   "getmetricpolicy": {
    "Resources": [
     "container"
    ]
   },
   "getobject": {
    "Resources": [
     "object"
    ]
   },
   "listcontainers": {},
   "listitems": {
    "Resources": [
     "folder"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "container"
    ]
   },
   "putcontainerpolicy": {
    "Resources": [
     "container"
    ]
   },
   "putcorspolicy": {
    "Resources": [
     "container"
    ]
   },
   "putlifecyclepolicy": {
    "Resources": [
     "container"
    ]
   },
   "putmetricpolicy": {
    "Resources": [
     "container"
    ]
   },
   "putobject": {
    "Resources": [
     "object"
    ]
   },
   "startaccesslogging": {
    "Resources": [
     "container"
    ]
   },
   "stopaccesslogging": {
    "Resources": [
     "container"
    ]
   },
   "tagresource": {
    "Resources": [
     "container"
    ]
   },
   "untagresource": {
    "Resources": [
     "container"
    ]
   }
  },
  "Resources": {
   "container": {
    "ARNFormats": [
     "arn:${Partition}:mediastore:${Region}:${Account}:container/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "folder": {
    "ARNFormats": [
     "arn:${Partition}:mediastore:${Region}:${Account}:container/.*"
    ]
   },
   "object": {
    "ARNFormats": [
     "arn:${Partition}:mediastore:${Region}:${Account}:container/.*"
    ]
   }
  }
 },
 "mediatailor": {
  "Actions": {
   "configurelogsforchannel": {
    "Resources": [
     "channel"
    ]
   },
   "configurelogsforplaybackconfiguration": {
    "Resources": [
     "playbackConfiguration"
    ]
   },
   "createchannel": {},
   "createlivesource": {},
   "createprefetchschedule": {
    "Resources": [
     "playbackConfiguration"
    ]
   },
   "createprogram": {},
   "createsourcelocation": {},
   "createvodsource": {},
   "deletechannel": {
    "Resources": [
     "channel"
    ]
   },
   "deletechannelpolicy": {
    "Resources": [
     "channel"
    ]
   },
   "deletelivesource": {
    "Resources": [
     "liveSource"
    ]
   },
   "deleteplaybackconfiguration": {
    "Resources": [
     "playbackConfiguration"
    ]
   },
   "deleteprefetchschedule": {
    "Resources": [
     "playbackConfiguration",
     "prefetchSchedule"
    ]
   },
   "deleteprogram": {
    "Resources": [
     "program"
    ]
   },
   "deletesourcelocation": {
    "Resources": [
     "sourceLocation"
    ]
   },
   "deletevodsource": {
    "Resources": [
     "vodSource"
    ]
   },
   "describechannel": {
    "Resources": [
     "channel"
    ]
   },
   "describelivesource": {
    "Resources": [
     "liveSource"
    ]
   },
   "describeprogram": {
    "Resources": [
     "program"
    ]
   },
   "describesourcelocation": {
    "Resources": [
     "sourceLocation"
    ]
   },
   "describevodsource": {
    "Resources": [
     "vodSource"
    ]
   },
   "getchannelpolicy": {
    "Resources": [
     "channel"
    ]
   },
   "getchannelschedule": {
    "Resources": [
     "channel"
    ]
   },
   "getplaybackconfiguration": {
    "Resources": [
     "playbackConfiguration"
    ]
   },
   "getprefetchschedule": {
    "Resources": [
     "playbackConfiguration",
     "prefetchSchedule"
    ]
   },
   "listalerts": {},
   "listchannels": {},
   "listlivesources": {},
   "listplaybackconfigurations": {},
   "listprefetchschedules": {
    "Resources": [
     "playbackConfiguration"
    ]
   },
   "listsourcelocations": {},
   "listtagsforresource": {
    "Resources": [
     "channel",
     "liveSource",
     "playbackConfiguration",
     "sourceLocation",
     "vodSource"
    ]
   },
   "listvodsources": {},
   "putchannelpolicy": {
    "Resources": [
     "channel"
    ]
   },
   "putplaybackconfiguration": {},
   "startchannel": {
    "Resources": [
     "channel"
    ]
   },
   "stopchannel": {
    "Resources": [
     "channel"
    ]
   },
   "tagresource": {
    "Resources": [
     "channel",
     "liveSource",
     "playbackConfiguration",
     "sourceLocation",
     "vodSource"
    ]
   },
   "untagresource": {
    "Resources": [
     "channel",
     "liveSource",
     "playbackConfiguration",
     "sourceLocation",
     "vodSource"
    ]
   },
   "updatechannel": {
    "Resources": [
     "channel"
    ]
   },
   "updatelivesource": {
    "Resources": [
     "liveSource"
    ]
   },
   "updateprogram": {
    "Resources": [
     "program"
    ]
   },
   "updatesourcelocation": {
    "Resources": [
     "sourceLocation"
    ]
   },
   "updatevodsource": {
    "Resources": [
     "vodSource"
    ]
   }
  },
  "Resources": {
   "channel": {
    "ARNFormats": [
     "arn:${Partition}:mediatailor:${Region}:${Account}:channel/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "livesource": {
    "ARNFormats": [
     "arn:${Partition}:mediatailor:${Region}:${Account}:liveSource/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "playbackconfiguration": {
    "ARNFormats": [
     "arn:${Partition}:mediatailor:${Region}:${Account}:playbackConfiguration/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "prefetchschedule": {
    "ARNFormats": [
     "arn:${Partition}:mediatailor:${Region}:${Account}:prefetchSchedule/.*"
    ]
   },
   "program": {
    "ARNFormats": [
     "arn:${Partition}:mediatailor:${Region}:${Account}:program/.*"
    ]
   },
   "sourcelocation": {
    "ARNFormats": [
     "arn:${Partition}:mediatailor:${Region}:${Account}:sourceLocation/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "vodsource": {
    "ARNFormats": [
     "arn:${Partition}:mediatailor:${Region}:${Account}:vodSource/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "medical-imaging": {
  "Actions": {
   "copyimageset": {
    "Resources": [
     "datastore",
     "imageset"
    ]
   },
   "createdatastore": {},
   "deletedatastore": {
    "Resources": [
     "datastore"
    ]
   },
   "deleteimageset": {
    "Resources": [
     "datastore",
     "imageset"
    ]
   },
   "getdatastore": {
    "Resources": [
     "datastore"
    ]
   },
   "getdicomimportjob": {
    "Resources": [
     "datastore"
    ]
   },
   "getdicominstance": {
    "Resources": [
     "datastore"
    ]
   },
   "getdicominstanceframes": {
    "Resources": [
     "datastore"
    ]
   },
   "getdicominstancemetadata": {
    "Resources": [
     "datastore"
    ]
   },
   "getimageframe": {
    "Resources": [
     "datastore",
     "imageset"
    ]
   },
   "getimageset": {
    "Resources": [
     "datastore",
     "imageset"
    ]
   },
   "getimagesetmetadata": {
    "Resources": [
     "datastore",
     "imageset"
    ]
   },
   "listdatastores": {},
   "listdicomimportjobs": {
    "Resources": [
     "datastore"
    ]
   },
   "listimagesetversions": {
    "Resources": [
     "datastore",
     "imageset"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "datastore",
     "imageset"
    ]
   },
   "searchimagesets": {
    "Resources": [
     "datastore"
    ]
   },
   "startdicomimportjob": {
    "Resources": [
     "datastore"
    ]
   },
   "tagresource": {
    "Resources": [
     "datastore",
     "imageset"
    ]
   },
   "untagresource": {
    "Resources": [
     "datastore",
     "imageset"
    ]
   },
   "updateimagesetmetadata": {
    "Resources": [
     "datastore",
     "imageset"
    ]
   }
  },
  "Resources": {
   "datastore": {
    "ARNFormats": [
     "arn:${Partition}:medical-imaging:${Region}:${Account}:datastore/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "imageset": {
    "ARNFormats": [
     "arn:${Partition}:medical-imaging:${Region}:${Account}:datastore/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "memorydb": {
  "Actions": {
   "batchupdatecluster": {
    "Resources": [
     "cluster"
    ]
   },
   "connect": {
    "Resources": [
     "cluster",
     "user"
    ]
   },
   "copysnapshot": {
    "Resources": [
     "snapshot"
    ]
   },
   "createacl": {
    "Resources": [
     "user"
    ]
   },
   "createcluster": {
    "Resources": [
     "acl",
     "multiregioncluster",
     "parametergroup",
     "snapshot",
     "subnetgroup"
    ]
   },
   "createmultiregioncluster": {
    "Resources": [
     "multiregionparametergroup"
    ]
   },
   "createparametergroup": {},
   "createsnapshot": {
    "Resources": [
     "cluster"
    ]
   },
   "createsubnetgroup": {},
   "createuser": {},
   "deleteacl": {
    "Resources": [
     "acl"
    ]
   },
   "deletecluster": {
    "Resources": [
     "cluster",
     "multiregioncluster",
     "snapshot"
    ]
   },
   "deletemultiregioncluster": {
    "Resources": [
     "multiregioncluster"
    ]
   },
   "deleteparametergroup": {
    "Resources": [
     "parametergroup"
    ]
   },
   "deletesnapshot": {
    "Resources": [
     "snapshot"
    ]
   },
   "deletesubnetgroup": {
    "Resources": [
     "subnetgroup"
    ]
   },
   "deleteuser": {
    "Resources": [
     "user"
    ]
   },
   "describeacls": {
    "Resources": [
     "acl"
    ]
   },
   "describeclusters": {
    "Resources": [
     "cluster"
    ]
   },
   "describeengineversions": {},
   "describeevents": {},
   "describemultiregionclusters": {
    "Resources": [
     "multiregioncluster"
    ]
   },
   "describemultiregionparametergroups": {
    "Resources": [
     "multiregionparametergroup"
    ]
   },
   "describemultiregionparameters": {
    "Resources": [
     "multiregionparametergroup"
    ]
   },
   "describeparametergroups": {
    "Resources": [
     "parametergroup"
    ]
   },
   "describeparameters": {
    "Resources": [
     "parametergroup"
    ]
   },
   "describereservednodes": {
    "Resources": [
     "reservednode"
    ]
   },
   "describereservednodesofferings": {},
   "describeserviceupdates": {},
   "describesnapshots": {
    "Resources": [
     "snapshot"
    ]
   },
   "describesubnetgroups": {
    "Resources": [
     "subnetgroup"
    ]
   },
   "describeusers": {
    "Resources": [
     "user"
    ]
   },
   "failovershard": {
    "Resources": [
     "cluster"
    ]
   },
   "listallowedmultiregionclusterupdates": {
    "Resources": [
     "multiregioncluster"
    ]
   },
   "listallowednodetypeupdates": {
    "Resources": [
     "cluster"
    ]
   },
   "listtags": {
    "Resources": [
     "acl",
     "cluster",
     "multiregioncluster",
     "parametergroup",
     "snapshot",
     "subnetgroup",
     "user"
    ]
   },
   "purchasereservednodesoffering": {
    "Resources": [
     "reservednode"
    ]
   },
   "resetparametergroup": {
    "Resources": [
     "parametergroup"
    ]
   },
   "tagresource": {
    "Resources": [
     "acl",
     "cluster",
     "multiregioncluster",
     "parametergroup",
     "reservednode",
     "snapshot",
     "subnetgroup",
     "user"
    ]
   },
   "untagresource": {
    "Resources": [
     "acl",
     "cluster",
     "multiregioncluster",
     "parametergroup",
     "snapshot",
     "subnetgroup",
     "user"
    ]
   },
   "updateacl": {
    "Resources": [
     "acl",
     "user"
    ]
   },
   "updatecluster": {
    "Resources": [
     "acl",
     "cluster",
     "parametergroup"
    ]
   },
   "updatemultiregioncluster": {
    "Resources": [
     "multiregioncluster",
     "multiregionparametergroup"
    ]
   },
   "updateparametergroup": {
    "Resources": [
     "parametergroup"
    ]
   },
   "updatesubnetgroup": {
    "Resources": [
     "subnetgroup"
    ]
   },
   "updateuser": {
    "Resources": [
     "user"
    ]
   }
  },
  "Resources": {
   "acl": {
    "ARNFormats": [
     "arn:${Partition}:memorydb:${Region}:${Account}:acl/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "cluster": {
    "ARNFormats": [
     "arn:${Partition}:memorydb:${Region}:${Account}:cluster/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "multiregioncluster": {
    "ARNFormats": [
     "arn:${Partition}:memorydb::${Account}:multiregioncluster/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "memorydb:TLSEnabled"
    ]
   },
   "multiregionparametergroup": {
    "ARNFormats": [
     "arn:${Partition}:memorydb::${Account}:multiregionparametergroup/.*"
    ]
   },
   "parametergroup": {
    "ARNFormats": [
     "arn:${Partition}:memorydb:${Region}:${Account}:parametergroup/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "reservednode": {
    "ARNFormats": [
     "arn:${Partition}:memorydb:${Region}:${Account}:reservednode/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "snapshot": {
    "ARNFormats": [
     "arn:${Partition}:memorydb:${Region}:${Account}:snapshot/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "subnetgroup": {
    "ARNFormats": [
     "arn:${Partition}:memorydb:${Region}:${Account}:subnetgroup/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "user": {
    "ARNFormats": [
     "arn:${Partition}:memorydb:${Region}:${Account}:user/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "mgh": {
  "Actions": {
   "acceptconnection": {
    "Resources": [
     "ConnectionResource"
    ]
   },
   "associateautomationunitrole": {
    "Resources": [
     "AutomationUnitResource"
    ]
   },
   "associatecreatedartifact": {
    "Resources": [
     "migrationTask"
    ]
   },
   "associatediscoveredresource": {
    "Resources": [
     "migrationTask"
    ]
   },
   "associatesourceresource": {
    "Resources": [
     "migrationTask"
    ]
   },
   "batchassociateiamrolewithconnection": {
    "Resources": [
     "ConnectionResource"
    ]
   },
   "batchdisassociateiamrolefromconnection": {
    "Resources": [
     "ConnectionResource"
    ]
   },
   "createautomationrun": {},
   "createautomationunit": {},
   "createhomeregioncontrol": {},
   "createprogressupdatestream": {
    "Resources": [
     "progressUpdateStream"
    ]
   },
   "deleteautomationrun": {
    "Resources": [
     "AutomationRunResource"
    ]
   },
   "deleteautomationunit": {
    "Resources": [
     "AutomationUnitResource"
    ]
   },
   "deleteconnection": {
    "Resources": [
     "ConnectionResource"
    ]
   },
   "deletehomeregioncontrol": {},
   "deleteprogressupdatestream": {
    "Resources": [
     "progressUpdateStream"
    ]
   },
   "describeapplicationstate": {},
   "describeautomationrun": {
    "Resources": [
     "AutomationRunResource"
    ]
   },
   "describeautomationunit": {
    "Resources": [
     "AutomationUnitResource"
    ]
   },
   "describehomeregioncontrols": {},
   "describemigrationtask": {
    "Resources": [
     "migrationTask"
    ]
   },
   "disassociateautomationunitrole": {
    "Resources": [
     "AutomationUnitResource"
    ]
   },
   "disassociatecreatedartifact": {
    "Resources": [
     "migrationTask"
    ]
   },
   "disassociatediscoveredresource": {
    "Resources": [
     "migrationTask"
    ]
   },
   "disassociatesourceresource": {
    "Resources": [
     "migrationTask"
    ]
   },
   "getconnection": {
    "Resources": [
     "ConnectionResource"
    ]
   },
   "gethomeregion": {},
   "importmigrationtask": {
    "Resources": [
     "migrationTask"
    ]
   },
   "listapplicationstates": {},
   "listautomationruns": {},
   "listautomationunits": {},
   "listconnectionroles": {
    "Resources": [
     "ConnectionResource"
    ]
   },
   "listconnections": {},
   "listcreatedartifacts": {
    "Resources": [
     "migrationTask"
    ]
   },
   "listdiscoveredresources": {
    "Resources": [
     "migrationTask"
    ]
   },
   "listmigrationtasks": {},
   "listmigrationtaskupdates": {
    "Resources": [
     "migrationTask"
    ]
   },
   "listprogressupdatestreams": {},
   "listsourceresources": {
    "Resources": [
     "migrationTask"
    ]
   },
   "listtagsforresource": {},
   "notifyapplicationstate": {},
   "notifymigrationtaskstate": {
    "Resources": [
     "migrationTask"
    ]
   },
   "putresourceattributes": {
    "Resources": [
     "migrationTask"
    ]
   },
   "rejectconnection": {
    "Resources": [
     "ConnectionResource"
    ]
   },
   "tagresource": {},
   "untagresource": {}
  },
  "Resources": {
   "automationrunresource": {
    "ARNFormats": [
     "arn:${Partition}:mgh:${Region}:${Account}:automation-run/.*"
    ],
    "ConditionKeys": [
     "mgh:AutomationRunResourceRunID"
    ]
   },
   "automationunitresource": {
    "ARNFormats": [
     "arn:${Partition}:mgh:${Region}:${Account}:automation-unit/.*"
    ],
    "ConditionKeys": [
     "mgh:AutomationUnitResourceAutomationUnitArn"
    ]
   },
   "connectionresource": {
    "ARNFormats": [
     "arn:${Partition}:mgh:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "mgh:ConnectionResourceConnectionArn"
    ]
   },
   "migrationtask": {
    "ARNFormats": [
     "arn:${Partition}:mgh:${Region}:${Account}:progressUpdateStream/.*"
    ]
   },
   "progressupdatestream": {
    "ARNFormats": [
     "arn:${Partition}:mgh:${Region}:${Account}:progressUpdateStream/.*"
    ]
   }
  }
 },
 "mgn": {
  "Actions": {
   "archiveapplication": {
    "Resources": [
     "ApplicationResource"
    ]
   },
   "archivewave": {
    "Resources": [
     "WaveResource"
    ]
   },
   "associateapplications": {
    "Resources": [
     "ApplicationResource",
     "WaveResource"
    ]
   },
   "associatesourceservers": {
    "Resources": [
     "ApplicationResource",
     "SourceServerResource"
    ]
   },
   "batchcreatevolumesnapshotgroupformgn": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "batchdeletesnapshotrequestformgn": {},
   "changeserverlifecyclestate": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "createapplication": {},
   "createconnector": {},
   "createlaunchconfigurationtemplate": {},
   "createnetworkmigrationdefinition": {},
   "createreplicationconfigurationtemplate": {},
   "createvcenterclientformgn": {},
   "createwave": {},
   "deleteapplication": {
    "Resources": [
     "ApplicationResource"
    ]
   },
   "deleteconnector": {
    "Resources": [
     "ConnectorResource"
    ]
   },
   "deletejob": {
    "Resources": [
     "JobResource"
    ]
   },
   "deletelaunchconfigurationtemplate": {
    "Resources": [
     "LaunchConfigurationTemplateResource"
    ]
   },
   "deletenetworkmigrationdefinition": {
    "Resources": [
     "NetworkMigrationDefinitionResource"
    ]
   },
   "deletereplicationconfigurationtemplate": {
    "Resources": [
     "ReplicationConfigurationTemplateResource"
    ]
   },
   "deletesourceserver": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "deletevcenterclient": {
    "Resources": [
     "VcenterClientResource"
    ]
   },
   "deletewave": {
    "Resources": [
     "WaveResource"
    ]
   },
   "describejoblogitems": {
    "Resources": [
     "JobResource"
    ]
   },
   "describejobs": {},
   "describelaunchconfigurationtemplates": {},
   "describereplicationconfigurationtemplates": {},
   "describereplicationserverassociationsformgn": {},
   "describesnapshotrequestsformgn": {},
   "describesourceservers": {},
   "describevcenterclients": {},
   "disassociateapplications": {
    "Resources": [
     "ApplicationResource",
     "WaveResource"
    ]
   },
   "disassociatesourceservers": {
    "Resources": [
     "ApplicationResource",
     "SourceServerResource"
    ]
   },
   "disconnectfromservice": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "finalizecutover": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "getagentcommandformgn": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "getagentconfirmedresumeinfoformgn": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "getagentinstallationassetsformgn": {},
   "getagentreplicationinfoformgn": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "getagentruntimeconfigurationformgn": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "getagentsnapshotcreditsformgn": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "getchannelcommandsformgn": {},
   "getlaunchconfiguration": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "getnetworkmigrationdefinition": {
    "Resources": [
     "NetworkMigrationDefinitionResource"
    ]
   },
   "getnetworkmigrationmappersegmentconstruct": {
    "Resources": [
     "NetworkMigrationDefinitionResource"
    ]
   },
   "getreplicationconfiguration": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "getvcenterclientcommandsformgn": {
    "Resources": [
     "VcenterClientResource"
    ]
   },
   "initializeservice": {},
   "issueclientcertificateformgn": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "listapplications": {},
   "listconnectors": {},
   "listexporterrors": {
    "Resources": [
     "ExportResource"
    ]
   },
   "listexports": {},
   "listimporterrors": {
    "Resources": [
     "ImportResource"
    ]
   },
   "listimports": {},
   "listmanagedaccounts": {},
   "listnetworkmigrationanalyses": {
    "Resources": [
     "NetworkMigrationDefinitionResource"
    ]
   },
   "listnetworkmigrationanalysisresults": {
    "Resources": [
     "NetworkMigrationDefinitionResource"
    ]
   },
   "listnetworkmigrationcodegenerations": {
    "Resources": [
     "NetworkMigrationDefinitionResource"
    ]
   },
   "listnetworkmigrationcodegenerationsegments": {
    "Resources": [
     "NetworkMigrationDefinitionResource"
    ]
   },
   "listnetworkmigrationdefinitions": {},
   "listnetworkmigrationdeployedstacks": {
    "Resources": [
     "NetworkMigrationDefinitionResource"
    ]
   },
   "listnetworkmigrationdeployedstacksdeletions": {
    "Resources": [
     "NetworkMigrationDefinitionResource"
    ]
   },
   "listnetworkmigrationdeployments": {
    "Resources": [
     "NetworkMigrationDefinitionResource"
    ]
   },
   "listnetworkmigrationexecutions": {
    "Resources": [
     "NetworkMigrationDefinitionResource"
    ]
   },
   "listnetworkmigrationmappersegmentconstructs": {
    "Resources": [
     "NetworkMigrationDefinitionResource"
    ]
   },
   "listnetworkmigrationmappersegments": {
    "Resources": [
     "NetworkMigrationDefinitionResource"
    ]
   },
   "listnetworkmigrationmappings": {
    "Resources": [
     "NetworkMigrationDefinitionResource"
    ]
   },
   "listsourceserveractions": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "listtagsforresource": {},
   "listtemplateactions": {
    "Resources": [
     "LaunchConfigurationTemplateResource"
    ]
   },
   "listwaves": {},
   "markasarchived": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "notifyagentauthenticationformgn": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "notifyagentconnectedformgn": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "notifyagentdisconnectedformgn": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "notifyagentreplicationprogressformgn": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "notifyvcenterclientstartedformgn": {
    "Resources": [
     "VcenterClientResource"
    ]
   },
   "pausereplication": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "putsourceserveraction": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "puttemplateaction": {
    "Resources": [
     "LaunchConfigurationTemplateResource"
    ]
   },
   "registeragentformgn": {},
   "removesourceserveraction": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "removetemplateaction": {
    "Resources": [
     "LaunchConfigurationTemplateResource"
    ]
   },
   "resumereplication": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "retrydatareplication": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "sendagentlogsformgn": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "sendagentmetricsformgn": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "sendchannelcommandresultformgn": {},
   "sendclientlogsformgn": {},
   "sendclientmetricsformgn": {},
   "sendvcenterclientcommandresultformgn": {
    "Resources": [
     "VcenterClientResource"
    ]
   },
   "sendvcenterclientlogsformgn": {
    "Resources": [
     "VcenterClientResource"
    ]
   },
   "sendvcenterclientmetricsformgn": {
    "Resources": [
     "VcenterClientResource"
    ]
   },
   "startcutover": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "startexport": {},
   "startimport": {},
   "startnetworkmigrationanalysis": {
    "Resources": [
     "NetworkMigrationDefinitionResource"
    ]
   },
   "startnetworkmigrationcodegeneration": {
    "Resources": [
     "NetworkMigrationDefinitionResource"
    ]
   },
   "startnetworkmigrationdeployedstacksdeletion": {
    "Resources": [
     "NetworkMigrationDefinitionResource"
    ]
   },
   "startnetworkmigrationdeployment": {
    "Resources": [
     "NetworkMigrationDefinitionResource"
    ]
   },
   "startnetworkmigrationmapping": {
    "Resources": [
     "NetworkMigrationDefinitionResource"
    ]
   },
   "startreplication": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "starttest": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "stopreplication": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "tagresource": {
    "Resources": [
     "ApplicationResource",
     "ConnectorResource",
     "JobResource",
     "LaunchConfigurationTemplateResource",
     "ReplicationConfigurationTemplateResource",
     "SourceServerResource",
     "VcenterClientResource",
     "WaveResource"
    ]
   },
   "terminatetargetinstances": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "unarchiveapplication": {
    "Resources": [
     "ApplicationResource"
    ]
   },
   "unarchivewave": {
    "Resources": [
     "WaveResource"
    ]
   },
   "untagresource": {
    "Resources": [
     "ApplicationResource",
     "ConnectorResource",
     "JobResource",
     "LaunchConfigurationTemplateResource",
     "ReplicationConfigurationTemplateResource",
     "SourceServerResource",
     "VcenterClientResource",
     "WaveResource"
    ]
   },
   "updateagentbacklogformgn": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "updateagentconversioninfoformgn": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "updateagentreplicationinfoformgn": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "updateagentreplicationprocessstateformgn": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "updateagentsourcepropertiesformgn": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "updateapplication": {
    "Resources": [
     "ApplicationResource"
    ]
   },
   "updateconnector": {
    "Resources": [
     "ConnectorResource"
    ]
   },
   "updatelaunchconfiguration": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "updatelaunchconfigurationtemplate": {
    "Resources": [
     "LaunchConfigurationTemplateResource"
    ]
   },
   "updatenetworkmigrationdefinition": {
    "Resources": [
     "NetworkMigrationDefinitionResource"
    ]
   },
   "updatenetworkmigrationmappersegment": {
    "Resources": [
     "NetworkMigrationDefinitionResource"
    ]
   },
   "updatenetworkmigrationmappersegmentconstruct": {
    "Resources": [
     "NetworkMigrationDefinitionResource"
    ]
   },
   "updatereplicationconfiguration": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "updatereplicationconfigurationtemplate": {
    "Resources": [
     "ReplicationConfigurationTemplateResource"
    ]
   },
   "updatesourceserver": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "updatesourceserverreplicationtype": {
    "Resources": [
     "SourceServerResource"
    ]
   },
   "updatewave": {
    "Resources": [
     "WaveResource"
    ]
   },
   "verifyclientroleformgn": {}
  },
  "Resources": {
   "applicationresource": {
    "ARNFormats": [
     "arn:${Partition}:mgn:${Region}:${Account}:application/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "connectorresource": {
    "ARNFormats": [
     "arn:${Partition}:mgn:${Region}:${Account}:connector/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "exportresource": {
    "ARNFormats": [
     "arn:${Partition}:mgn:${Region}:${Account}:export/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "importresource": {
    "ARNFormats": [
     "arn:${Partition}:mgn:${Region}:${Account}:import/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "jobresource": {
    "ARNFormats": [
     "arn:${Partition}:mgn:${Region}:${Account}:job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "launchconfigurationtemplateresource": {
    "ARNFormats": [
     "arn:${Partition}:mgn:${Region}:${Account}:launch-configuration-template/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "networkmigrationdefinitionresource": {
    "ARNFormats": [
     "arn:${Partition}:mgn:${Region}:${Account}:network-migration-definition/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "replicationconfigurationtemplateresource": {
    "ARNFormats": [
     "arn:${Partition}:mgn:${Region}:${Account}:replication-configuration-template/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "sourceserverresource": {
    "ARNFormats": [
     "arn:${Partition}:mgn:${Region}:${Account}:source-server/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "vcenterclientresource": {
    "ARNFormats": [
     "arn:${Partition}:mgn:${Region}:${Account}:vcenter-client/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "waveresource": {
    "ARNFormats": [
     "arn:${Partition}:mgn:${Region}:${Account}:wave/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "migrationhub-orchestrator": {
  "Actions": {
   "createtemplate": {},
   "createworkflow": {
    "Resources": [
     "template"
    ]
   },
   "createworkflowstep": {
    "Resources": [
     "workflow"
    ]
   },
   "createworkflowstepgroup": {
    "Resources": [
     "workflow"
    ]
   },
   "deletetemplate": {
    "Resources": [
     "template"
    ]
   },
   "deleteworkflow": {
    "Resources": [
     "workflow"
    ]
   },
   "deleteworkflowstep": {
    "Resources": [
     "workflow"
    ]
   },
   "deleteworkflowstepgroup": {
    "Resources": [
     "workflow"
    ]
   },
   "getmessage": {},
   "gettemplate": {
    "Resources": [
     "template"
    ]
   },
   "gettemplatestep": {
    "Resources": [
     "template"
    ]
   },
   "gettemplatestepgroup": {
    "Resources": [
     "template"
    ]
   },
   "getworkflow": {
    "Resources": [
     "workflow"
    ]
   },
   "getworkflowstep": {
    "Resources": [
     "workflow"
    ]
   },
   "getworkflowstepgroup": {
    "Resources": [
     "workflow"
    ]
   },
   "listplugins": {},
   "listtagsforresource": {
    "Resources": [
     "template",
     "workflow"
    ]
   },
   "listtemplates": {},
   "listtemplatestepgroups": {
    "Resources": [
     "template"
    ]
   },
   "listtemplatesteps": {
    "Resources": [
     "template"
    ]
   },
   "listworkflows": {},
   "listworkflowstepgroups": {
    "Resources": [
     "workflow"
    ]
   },
   "listworkflowsteps": {
    "Resources": [
     "workflow"
    ]
   },
   "registerplugin": {},
   "retryworkflowstep": {
    "Resources": [
     "workflow"
    ]
   },
   "sendmessage": {},
   "startworkflow": {
    "Resources": [
     "workflow"
    ]
   },
   "stopworkflow": {
    "Resources": [
     "workflow"
    ]
   },
   "tagresource": {
    "Resources": [
     "template",
     "workflow"
    ]
   },
   "untagresource": {
    "Resources": [
     "template",
     "workflow"
    ]
   },
   "updatetemplate": {
    "Resources": [
     "template"
    ]
   },
   "updateworkflow": {
    "Resources": [
     "workflow"
    ]
   },
   "updateworkflowstep": {
    "Resources": [
     "workflow"
    ]
   },
   "updateworkflowstepgroup": {
    "Resources": [
     "workflow"
    ]
   }
  },
  "Resources": {
   "template": {
    "ARNFormats": [
     "arn:${Partition}:migrationhub-orchestrator:${Region}:${Account}:template/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "workflow": {
    "ARNFormats": [
     "arn:${Partition}:migrationhub-orchestrator:${Region}:${Account}:workflow/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "migrationhub-strategy": {
  "Actions": {
   "getantipattern": {},
   "getapplicationcomponentdetails": {},
   "getapplicationcomponentstrategies": {},
   "getassessment": {},
   "getimportfiletask": {},
   "getlatestassessmentid": {},
   "getmessage": {},
   "getportfoliopreferences": {},
   "getportfoliosummary": {},
   "getrecommendationreportdetails": {},
   "getserverdetails": {},
   "getserverstrategies": {},
   "listanalyzableservers": {},
   "listantipatterns": {},
   "listapplicationcomponents": {},
   "listcollectors": {},
   "listimportfiletask": {},
   "listjarartifacts": {},
   "listservers": {},
   "putlogdata": {},
   "putmetricdata": {},
   "putportfoliopreferences": {},
   "registercollector": {},
   "sendmessage": {},
   "startassessment": {},
   "startimportfiletask": {},
   "startrecommendationreportgeneration": {},
   "stopassessment": {},
   "updateapplicationcomponentconfig": {},
   "updatecollectorconfiguration": {},
   "updateserverconfig": {}
  },
  "Resources": {}
 },
 "mobileanalytics": {
  "Actions": {
   "getfinancialreports": {},
   "getreports": {},
   "putevents": {}
  },
  "Resources": {}
 },
 "mobiletargeting": {
  "Actions": {
   "createapp": {
    "Resources": [
     "apps"
    ]
   },
   "createcampaign": {
    "Resources": [
     "app"
    ]
   },
   "createemailtemplate": {
    "Resources": [
     "template"
    ]
   },
   "createexportjob": {
    "Resources": [
     "app"
    ]
   },
   "createimportjob": {
    "Resources": [
     "app"
    ]
   },
   "createinapptemplate": {
    "Resources": [
     "template"
    ]
   },
   "createjourney": {
    "Resources": [
     "journeys"
    ]
   },
   "createpushtemplate": {
    "Resources": [
     "template"
    ]
   },
   "createrecommenderconfiguration": {
    "Resources": [
     "recommenders"
    ]
   },
   "createsegment": {
    "Resources": [
     "app"
    ]
   },
   "createsmstemplate": {
    "Resources": [
     "template"
    ]
   },
   "createvoicetemplate": {
    "Resources": [
     "template"
    ]
   },
   "deleteadmchannel": {
    "Resources": [
     "channel"
    ]
   },
   "deleteapnschannel": {
    "Resources": [
     "channel"
    ]
   },
   "deleteapnssandboxchannel": {
    "Resources": [
     "channel"
    ]
   },
   "deleteapnsvoipchannel": {
    "Resources": [
     "channel"
    ]
   },
   "deleteapnsvoipsandboxchannel": {
    "Resources": [
     "channel"
    ]
   },
   "deleteapp": {
    "Resources": [
     "app"
    ]
   },
   "deletebaiduchannel": {
    "Resources": [
     "channel"
    ]
   },
   "deletecampaign": {
    "Resources": [
     "campaign"
    ]
   },
   "deleteemailchannel": {
    "Resources": [
     "channel"
    ]
   },
   "deleteemailtemplate": {
    "Resources": [
     "template"
    ]
   },
   "deleteendpoint": {
    "Resources": [
     "endpoint"
    ]
   },
   "deleteeventstream": {
    "Resources": [
     "event-stream"
    ]
   },
   "deletegcmchannel": {
    "Resources": [
     "channel"
    ]
   },
   "deleteinapptemplate": {
    "Resources": [
     "template"
    ]
   },
   "deletejourney": {
    "Resources": [
     "journey"
    ]
   },
   "deletepushtemplate": {
    "Resources": [
     "template"
    ]
   },
   "deleterecommenderconfiguration": {
    "Resources": [
     "recommender"
    ]
   },
   "deletesegment": {
    "Resources": [
     "segment"
    ]
   },
   "deletesmschannel": {
    "Resources": [
     "channel"
    ]
   },
   "deletesmstemplate": {
    "Resources": [
     "template"
    ]
   },
   "deleteuserendpoints": {
    "Resources": [
     "user"
    ]
   },
   "deletevoicechannel": {
    "Resources": [
     "channel"
    ]
   },
   "deletevoicetemplate": {
    "Resources": [
     "template"
    ]
   },
   "getadmchannel": {
    "Resources": [
     "channel"
    ]
   },
   "getapnschannel": {
    "Resources": [
     "channel"
    ]
   },
   "getapnssandboxchannel": {
    "Resources": [
     "channel"
    ]
   },
   "getapnsvoipchannel": {
    "Resources": [
     "channel"
    ]
   },
   "getapnsvoipsandboxchannel": {
    "Resources": [
     "channel"
    ]
   },
   "getapp": {
    "Resources": [
     "app"
    ]
   },
   "getapplicationdaterangekpi": {
    "Resources": [
     "application-metrics"
    ]
   },
   "getapplicationsettings": {
    "Resources": [
     "app"
    ]
   },
   "getapps": {
    "Resources": [
     "apps"
    ]
   },
   "getbaiduchannel": {
    "Resources": [
     "channel"
    ]
   },
   "getcampaign": {
    "Resources": [
     "campaign"
    ]
   },
   "getcampaignactivities": {
    "Resources": [
     "campaign"
    ]
   },
   "getcampaigndaterangekpi": {
    "Resources": [
     "campaign-metrics"
    ]
   },
   "getcampaigns": {
    "Resources": [
     "app"
    ]
   },
   "getcampaignversion": {
    "Resources": [
     "campaign"
    ]
   },
   "getcampaignversions": {
    "Resources": [
     "campaign"
    ]
   },
   "getchannels": {
    "Resources": [
     "channels"
    ]
   },
   "getemailchannel": {
    "Resources": [
     "channel"
    ]
   },
   "getemailtemplate": {
    "Resources": [
     "template"
    ]
   },
   "getendpoint": {
    "Resources": [
     "endpoint"
    ]
   },
   "geteventstream": {
    "Resources": [
     "event-stream"
    ]
   },
   "getexportjob": {
    "Resources": [
     "export-job"
    ]
   },
   "getexportjobs": {
    "Resources": [
     "app"
    ]
   },
   "getgcmchannel": {
    "Resources": [
     "channel"
    ]
   },
   "getimportjob": {
    "Resources": [
     "import-job"
    ]
   },
   "getimportjobs": {
    "Resources": [
     "app"
    ]
   },
   "getinappmessages": {
    "Resources": [
     "app"
    ]
   },
   "getinapptemplate": {
    "Resources": [
     "template"
    ]
   },
   "getjourney": {
    "Resources": [
     "journey"
    ]
   },
   "getjourneydaterangekpi": {
    "Resources": [
     "journey-metrics"
    ]
   },
   "getjourneyexecutionactivitymetrics": {
    "Resources": [
     "journey-execution-activity-metrics"
    ]
   },
   "getjourneyexecutionmetrics": {
    "Resources": [
     "journey-execution-metrics"
    ]
   },
   "getjourneyrunexecutionactivitymetrics": {
    "Resources": [
     "journey"
    ]
   },
   "getjourneyrunexecutionmetrics": {
    "Resources": [
     "journey"
    ]
   },
   "getjourneyruns": {
    "Resources": [
     "journey"
    ]
   },
   "getpushtemplate": {
    "Resources": [
     "template"
    ]
   },
   "getrecommenderconfiguration": {
    "Resources": [
     "recommender"
    ]
   },
   "getrecommenderconfigurations": {
    "Resources": [
     "recommenders"
    ]
   },
   "getreports": {
    "Resources": [
     "reports"
    ]
   },
   "getsegment": {
    "Resources": [
     "segment"
    ]
   },
   "getsegmentexportjobs": {
    "Resources": [
     "segment"
    ]
   },
   "getsegmentimportjobs": {
    "Resources": [
     "segment"
    ]
   },
   "getsegments": {
    "Resources": [
     "app"
    ]
   },
   "getsegmentversion": {
    "Resources": [
     "segment"
    ]
   },
   "getsegmentversions": {
    "Resources": [
     "segment"
    ]
   },
   "getsmschannel": {
    "Resources": [
     "channel"
    ]
   },
   "getsmstemplate": {
    "Resources": [
     "template"
    ]
   },
   "getuserendpoints": {
    "Resources": [
     "user"
    ]
   },
   "getvoicechannel": {
    "Resources": [
     "channel"
    ]
   },
   "getvoicetemplate": {
    "Resources": [
     "template"
    ]
   },
   "listjourneys": {
    "Resources": [
     "app"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "app",
     "campaign",
     "journey",
     "segment",
     "template"
    ]
   },
   "listtemplates": {
    "Resources": [
     "templates"
    ]
   },
   "listtemplateversions": {
    "Resources": [
     "template"
    ]
   },
   "phonenumbervalidate": {
    "Resources": [
     "phone-number-validate"
    ]
   },
   "putevents": {
    "Resources": [
     "events"
    ]
   },
   "puteventstream": {
    "Resources": [
     "event-stream"
    ]
   },
   "removeattributes": {
    "Resources": [
     "attribute"
    ]
   },
   "sendmessages": {
    "Resources": [
     "messages"
    ]
   },
   "sendotpmessage": {
    "Resources": [
     "otp"
    ]
   },
   "sendusersmessages": {
    "Resources": [
     "messages"
    ]
   },
   "tagresource": {
    "Resources": [
     "app",
     "campaign",
     "journey",
     "segment",
     "template"
    ]
   },
   "untagresource": {
    "Resources": [
     "app",
     "campaign",
     "journey",
     "segment",
     "template"
    ]
   },
   "updateadmchannel": {
    "Resources": [
     "channel"
    ]
   },
   "updateapnschannel": {
    "Resources": [
     "channel"
    ]
   },
   "updateapnssandboxchannel": {
    "Resources": [
     "channel"
    ]
   },
   "updateapnsvoipchannel": {
    "Resources": [
     "channel"
    ]
   },
   "updateapnsvoipsandboxchannel": {
    "Resources": [
     "channel"
    ]
   },
   "updateapplicationsettings": {
    "Resources": [
     "app"
    ]
   },
   "updatebaiduchannel": {
    "Resources": [
     "channel"
    ]
   },
   "updatecampaign": {
    "Resources": [
     "campaign"
    ]
   },
   "updateemailchannel": {
    "Resources": [
     "channel"
    ]
   },
   "updateemailtemplate": {
    "Resources": [
     "template"
    ]
   },
   "updateendpoint": {
    "Resources": [
     "endpoint"
    ]
   },
   "updateendpointsbatch": {
    "Resources": [
     "app"
    ]
   },
   "updategcmchannel": {
    "Resources": [
     "channel"
    ]
   },
   "updateinapptemplate": {
    "Resources": [
     "template"
    ]
   },
   "updatejourney": {
    "Resources": [
     "journey"
    ]
   },
   "updatejourneystate": {
    "Resources": [
     "journey"
    ]
   },
   "updatepushtemplate": {
    "Resources": [
     "template"
    ]
   },
   "updaterecommenderconfiguration": {
    "Resources": [
     "recommender"
    ]
   },
   "updatesegment": {
    "Resources": [
     "segment"
    ]
   },
   "updatesmschannel": {
    "Resources": [
     "channel"
    ]
   },
   "updatesmstemplate": {
    "Resources": [
     "template"
    ]
   },
   "updatetemplateactiveversion": {
    "Resources": [
     "template"
    ]
   },
   "updatevoicechannel": {
    "Resources": [
     "channel"
    ]
   },
   "updatevoicetemplate": {
    "Resources": [
     "template"
    ]
   },
   "verifyotpmessage": {
    "Resources": [
     "verify-otp"
    ]
   }
  },
  "Resources": {
   "app": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "application-metrics": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/.*"
    ]
   },
   "apps": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/*"
    ]
   },
   "attribute": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/.*"
    ]
   },
   "campaign": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "campaign-metrics": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/.*"
    ]
   },
   "channel": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/.*"
    ]
   },
   "channels": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/.*"
    ]
   },
   "endpoint": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/.*"
    ]
   },
   "event-stream": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/.*"
    ]
   },
   "events": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/.*"
    ]
   },
   "export-job": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/.*"
    ]
   },
   "import-job": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/.*"
    ]
   },
   "journey": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "journey-execution-activity-metrics": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/.*"
    ]
   },
   "journey-execution-metrics": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/.*"
    ]
   },
   "journey-metrics": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/.*"
    ]
   },
   "journeys": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/.*"
    ]
   },
   "messages": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/.*"
    ]
   },
   "otp": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/.*"
    ]
   },
   "phone-number-validate": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:phone/number/validate"
    ]
   },
   "recommender": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:recommenders/.*"
    ]
   },
   "recommenders": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:recommenders/*"
    ]
   },
   "reports": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:reports"
    ]
   },
   "segment": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "template": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:templates/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "templates": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:templates"
    ]
   },
   "user": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/.*"
    ]
   },
   "verify-otp": {
    "ARNFormats": [
     "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/.*"
    ]
   }
  }
 },
 "monitron": {
  "Actions": {
   "associateprojectadminuser": {
    "Resources": [
     "project"
    ]
   },
   "createproject": {},
   "createprojectuserassociation": {
    "Resources": [
     "project"
    ]
   },
   "createuseraccessroleassociation": {
    "Resources": [
     "project"
    ]
   },
   "deleteproject": {
    "Resources": [
     "project"
    ]
   },
   "deleteprojectuserassociation": {
    "Resources": [
     "project"
    ]
   },
   "deleteuseraccessroleassociation": {
    "Resources": [
     "project"
    ]
   },
   "disassociateprojectadminuser": {
    "Resources": [
     "project"
    ]
   },
   "getproject": {
    "Resources": [
     "project"
    ]
   },
   "getprojectadminuser": {
    "Resources": [
     "project"
    ]
   },
   "listprojectadminusers": {
    "Resources": [
     "project"
    ]
   },
   "listprojects": {},
   "listprojectuserassociations": {
    "Resources": [
     "project"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "project"
    ]
   },
   "listuseraccessroleassociations": {
    "Resources": [
     "project"
    ]
   },
   "tagresource": {
    "Resources": [
     "project"
    ]
   },
   "untagresource": {
    "Resources": [
     "project"
    ]
   },
   "updateproject": {
    "Resources": [
     "project"
    ]
   }
  },
  "Resources": {
   "project": {
    "ARNFormats": [
     "arn:${Partition}:monitron:${Region}:${Account}:project/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "mq": {
  "Actions": {
   "createbroker": {},
   "createconfiguration": {},
   "createreplicabroker": {
    "Resources": [
     "brokers"
    ]
   },
   "createtags": {
    "Resources": [
     "brokers",
     "configurations"
    ]
   },
   "createuser": {
    "Resources": [
     "brokers"
    ]
   },
   "deletebroker": {
    "Resources": [
     "brokers"
    ]
   },
   "deletetags": {
    "Resources": [
     "brokers",
     "configurations"
    ]
   },
   "deleteuser": {
    "Resources": [
     "brokers"
    ]
   },
   "describebroker": {
    "Resources": [
     "brokers"
    ]
   },
   "describebrokerenginetypes": {},
   "describebrokerinstanceoptions": {},
   "describeconfiguration": {
    "Resources": [
     "configurations"
    ]
   },
   "describeconfigurationrevision": {
    "Resources": [
     "configurations"
    ]
   },
   "describeuser": {
    "Resources": [
     "brokers"
    ]
   },
   "listbrokers": {},
   "listconfigurationrevisions": {
    "Resources": [
     "configurations"
    ]
   },
   "listconfigurations": {},
   "listtags": {
    "Resources": [
     "brokers",
     "configurations"
    ]
   },
   "listusers": {
    "Resources": [
     "brokers"
    ]
   },
   "promote": {
    "Resources": [
     "brokers"
    ]
   },
   "rebootbroker": {
    "Resources": [
     "brokers"
    ]
   },
   "updatebroker": {
    "Resources": [
     "brokers"
    ]
   },
   "updateconfiguration": {
    "Resources": [
     "configurations"
    ]
   },
   "updateuser": {
    "Resources": [
     "brokers"
    ]
   }
  },
  "Resources": {
   "brokers": {
    "ARNFormats": [
     "arn:${Partition}:mq:${Region}:${Account}:broker:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "configurations": {
    "ARNFormats": [
     "arn:${Partition}:mq:${Region}:${Account}:configuration:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "neptune-db": {
  "Actions": {
   "cancelloaderjob": {
    "Resources": [
     "database"
    ]
   },
   "cancelmldataprocessingjob": {
    "Resources": [
     "database"
    ]
   },
   "cancelmlmodeltrainingjob": {
    "Resources": [
     "database"
    ]
   },
   "cancelmlmodeltransformjob": {
    "Resources": [
     "database"
    ]
   },
   "cancelquery": {
    "Resources": [
     "database"
    ]
   },
   "connect": {
    "Resources": [
     "database"
    ]
   },
   "createmlendpoint": {
    "Resources": [
     "database"
    ]
   },
   "deletedataviaquery": {
    "Resources": [
     "database"
    ]
   },
   "deletemlendpoint": {
    "Resources": [
     "database"
    ]
   },
   "deletestatistics": {
    "Resources": [
     "database"
    ]
   },
   "getenginestatus": {
    "Resources": [
     "database"
    ]
   },
   "getgraphsummary": {
    "Resources": [
     "database"
    ]
   },
   "getloaderjobstatus": {
    "Resources": [
     "database"
    ]
   },
   "getmldataprocessingjobstatus": {
    "Resources": [
     "database"
    ]
   },
   "getmlendpointstatus": {
    "Resources": [
     "database"
    ]
   },
   "getmlmodeltrainingjobstatus": {
    "Resources": [
     "database"
    ]
   },
   "getmlmodeltransformjobstatus": {
    "Resources": [
     "database"
    ]
   },
   "getquerystatus": {
    "Resources": [
     "database"
    ]
   },
   "getstatisticsstatus": {
    "Resources": [
     "database"
    ]
   },
   "getstreamrecords": {
    "Resources": [
     "database"
    ]
   },
   "listloaderjobs": {
    "Resources": [
     "database"
    ]
   },
   "listmldataprocessingjobs": {
    "Resources": [
     "database"
    ]
   },
   "listmlendpoints": {
    "Resources": [
     "database"
    ]
   },
   "listmlmodeltrainingjobs": {
    "Resources": [
     "database"
    ]
   },
   "listmlmodeltransformjobs": {
    "Resources": [
     "database"
    ]
   },
   "managestatistics": {
    "Resources": [
     "database"
    ]
   },
   "readdataviaquery": {
    "Resources": [
     "database"
    ]
   },
   "resetdatabase": {
    "Resources": [
     "database"
    ]
   },
   "startloaderjob": {
    "Resources": [
     "database"
    ]
   },
   "startmldataprocessingjob": {
    "Resources": [
     "database"
    ]
   },
   "startmlmodeltrainingjob": {
    "Resources": [
     "database"
    ]
   },
   "startmlmodeltransformjob": {
    "Resources": [
     "database"
    ]
   },
   "writedataviaquery": {
    "Resources": [
     "database"
    ]
   }
  },
  "Resources": {
   "database": {
    "ARNFormats": [
     "arn:${Partition}:neptune-db:${Region}:${Account}:.*"
    ]
   }
  }
 },
 "neptune-graph": {
  "Actions": {
   "cancelexporttask": {
    "Resources": [
     "export-task"
    ]
   },
   "cancelimporttask": {
    "Resources": [
     "import-task"
    ]
   },
   "cancelquery": {
    "Resources": [
     "graph"
    ]
   },
   "creategraph": {
    "Resources": [
     "graph"
    ]
   },
   "creategraphsnapshot": {
    "Resources": [
     "graph",
     "graph-snapshot"
    ]
   },
   "creategraphusingimporttask": {
    "Resources": [
     "graph",
     "import-task"
    ]
   },
   "createprivategraphendpoint": {
    "Resources": [
     "graph"
    ]
   },
   "deletedataviaquery": {
    "Resources": [
     "graph"
    ]
   },
   "deletegraph": {
    "Resources": [
     "graph"
    ]
   },
   "deletegraphsnapshot": {
    "Resources": [
     "graph-snapshot"
    ]
   },
   "deleteprivategraphendpoint": {
    "Resources": [
     "graph"
    ]
   },
   "getenginestatus": {
    "Resources": [
     "graph"
    ]
   },
   "getexporttask": {
    "Resources": [
     "export-task"
    ]
   },
   "getgraph": {
    "Resources": [
     "graph"
    ]
   },
   "getgraphsnapshot": {
    "Resources": [
     "graph-snapshot"
    ]
   },
   "getgraphsummary": {
    "Resources": [
     "graph"
    ]
   },
   "getimporttask": {
    "Resources": [
     "import-task"
    ]
   },
   "getprivategraphendpoint": {
    "Resources": [
     "graph"
    ]
   },
   "getquerystatus": {
    "Resources": [
     "graph"
    ]
   },
   "getstatisticsstatus": {
    "Resources": [
     "graph"
    ]
   },
   "listexporttasks": {
    "Resources": [
     "export-task"
    ]
   },
   "listgraphs": {
    "Resources": [
     "graph"
    ]
   },
   "listgraphsnapshots": {
    "Resources": [
     "graph-snapshot"
    ]
   },
   "listimporttasks": {
    "Resources": [
     "import-task"
    ]
   },
   "listprivategraphendpoints": {
    "Resources": [
     "graph"
    ]
   },
   "listqueries": {
    "Resources": [
     "graph"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "graph",
     "graph-snapshot"
    ]
   },
   "readdataviaquery": {
    "Resources": [
     "graph"
    ]
   },
   "resetgraph": {
    "Resources": [
     "graph"
    ]
   },
   "restoregraphfromsnapshot": {
    "Resources": [
     "graph",
     "graph-snapshot"
    ]
   },
   "startexporttask": {
    "Resources": [
     "export-task",
     "graph"
    ]
   },
   "startimporttask": {
    "Resources": [
     "graph",
     "import-task"
    ]
   },
   "tagresource": {
    "Resources": [
     "graph",
     "graph-snapshot"
    ]
   },
   "untagresource": {
    "Resources": [
     "graph",
     "graph-snapshot"
    ]
   },
   "updategraph": {
    "Resources": [
     "graph"
    ]
   },
   "writedataviaquery": {
    "Resources": [
     "graph"
    ]
   }
  },
  "Resources": {
   "export-task": {
    "ARNFormats": [
     "arn:${Partition}:neptune-graph:${Region}:${Account}:export-task/.*"
    ]
   },
   "graph": {
    "ARNFormats": [
     "arn:${Partition}:neptune-graph:${Region}:${Account}:graph/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "graph-snapshot": {
    "ARNFormats": [
     "arn:${Partition}:neptune-graph:${Region}:${Account}:graph-snapshot/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "import-task": {
    "ARNFormats": [
     "arn:${Partition}:neptune-graph:${Region}:${Account}:import-task/.*"
    ]
   }
  }
 },
 "network-firewall": {
  "Actions": {
   "associatefirewallpolicy": {
    "Resources": [
     "Firewall",
     "FirewallPolicy"
    ]
   },
   "associatesubnets": {
    "Resources": [
     "Firewall"
    ]
   },
   "createfirewall": {
    "Resources": [
     "Firewall",
     "FirewallPolicy"
    ]
   },
   "createfirewallpolicy": {
    "Resources": [
     "FirewallPolicy",
     "StatefulRuleGroup",
     "StatelessRuleGroup",
     "TLSInspectionConfiguration"
    ]
   },
   "createrulegroup": {
    "Resources": [
     "StatefulRuleGroup",
     "StatelessRuleGroup"
    ]
   },
   "createtlsinspectionconfiguration": {
    "Resources": [
     "TLSInspectionConfiguration"
    ]
   },
   "deletefirewall": {
    "Resources": [
     "Firewall"
    ]
   },
   "deletefirewallpolicy": {
    "Resources": [
     "FirewallPolicy"
    ]
   },
   "deleteresourcepolicy": {
    "Resources": [
     "FirewallPolicy",
     "StatefulRuleGroup",
     "StatelessRuleGroup"
    ]
   },
   "deleterulegroup": {
    "Resources": [
     "StatefulRuleGroup",
     "StatelessRuleGroup"
    ]
   },
   "deletetlsinspectionconfiguration": {
    "Resources": [
     "TLSInspectionConfiguration"
    ]
   },
   "describefirewall": {
    "Resources": [
     "Firewall"
    ]
   },
   "describefirewallpolicy": {
    "Resources": [
     "FirewallPolicy",
     "StatefulRuleGroup",
     "StatelessRuleGroup",
     "TLSInspectionConfiguration"
    ]
   },
   "describeloggingconfiguration": {
    "Resources": [
     "Firewall"
    ]
   },
   "describeresourcepolicy": {
    "Resources": [
     "FirewallPolicy",
     "StatefulRuleGroup",
     "StatelessRuleGroup"
    ]
   },
   "describerulegroup": {
    "Resources": [
     "StatefulRuleGroup",
     "StatelessRuleGroup"
    ]
   },
   "describerulegroupmetadata": {
    "Resources": [
     "StatefulRuleGroup",
     "StatelessRuleGroup"
    ]
   },
   "describetlsinspectionconfiguration": {
    "Resources": [
     "TLSInspectionConfiguration"
    ]
   },
   "disassociatesubnets": {
    "Resources": [
     "Firewall"
    ]
   },
   "getanalysisreportresults": {
    "Resources": [
     "Firewall"
    ]
   },
   "listanalysisreports": {
    "Resources": [
     "Firewall"
    ]
   },
   "listfirewallpolicies": {
    "Resources": [
     "FirewallPolicy"
    ]
   },
   "listfirewalls": {
    "Resources": [
     "Firewall"
    ]
   },
   "listrulegroups": {},
   "listtagsforresource": {
    "Resources": [
     "Firewall",
     "FirewallPolicy",
     "StatefulRuleGroup",
     "StatelessRuleGroup",
     "TLSInspectionConfiguration"
    ]
   },
   "listtlsinspectionconfigurations": {
    "Resources": [
     "TLSInspectionConfiguration"
    ]
   },
   "putresourcepolicy": {
    "Resources": [
     "FirewallPolicy",
     "StatefulRuleGroup",
     "StatelessRuleGroup"
    ]
   },
   "startanalysisreport": {
    "Resources": [
     "Firewall"
    ]
   },
   "tagresource": {
    "Resources": [
     "Firewall",
     "FirewallPolicy",
     "StatefulRuleGroup",
     "StatelessRuleGroup",
     "TLSInspectionConfiguration"
    ]
   },
   "untagresource": {
    "Resources": [
     "Firewall",
     "FirewallPolicy",
     "StatefulRuleGroup",
     "StatelessRuleGroup",
     "TLSInspectionConfiguration"
    ]
   },
   "updatefirewallanalysissettings": {
    "Resources": [
     "Firewall"
    ]
   },
   "updatefirewalldeleteprotection": {
    "Resources": [
     "Firewall"
    ]
   },
   "updatefirewalldescription": {
    "Resources": [
     "Firewall"
    ]
   },
   "updatefirewallencryptionconfiguration": {
    "Resources": [
     "Firewall"
    ]
   },
   "updatefirewallpolicy": {
    "Resources": [
     "FirewallPolicy",
     "StatefulRuleGroup",
     "StatelessRuleGroup",
     "TLSInspectionConfiguration"
    ]
   },
   "updatefirewallpolicychangeprotection": {
    "Resources": [
     "Firewall"
    ]
   },
   "updateloggingconfiguration": {
    "Resources": [
     "Firewall"
    ]
   },
   "updaterulegroup": {
    "Resources": [
     "StatefulRuleGroup",
     "StatelessRuleGroup"
    ]
   },
   "updatesubnetchangeprotection": {
    "Resources": [
     "Firewall"
    ]
   },
   "updatetlsinspectionconfiguration": {
    "Resources": [
     "TLSInspectionConfiguration"
    ]
   }
  },
  "Resources": {
   "firewall": {
    "ARNFormats": [
     "arn:${Partition}:network-firewall:${Region}:${Account}:firewall/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "firewallpolicy": {
    "ARNFormats": [
     "arn:${Partition}:network-firewall:${Region}:${Account}:firewall-policy/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "statefulrulegroup": {
    "ARNFormats": [
     "arn:${Partition}:network-firewall:${Region}:${Account}:stateful-rulegroup/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "statelessrulegroup": {
    "ARNFormats": [
     "arn:${Partition}:network-firewall:${Region}:${Account}:stateless-rulegroup/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "tlsinspectionconfiguration": {
    "ARNFormats": [
     "arn:${Partition}:network-firewall:${Region}:${Account}:tls-configuration/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "networkflowmonitor": {
  "Actions": {
   "createmonitor": {
    "Resources": [
     "monitor"
    ]
   },
   "createscope": {},
   "deletemonitor": {
    "Resources": [
     "monitor"
    ]
   },
   "deletescope": {
    "Resources": [
     "scope"
    ]
   },
   "getmonitor": {
    "Resources": [
     "monitor"
    ]
   },
   "getqueryresultsmonitortopcontributors": {
    "Resources": [
     "monitor"
    ]
   },
   "getqueryresultsworkloadinsightstopcontributors": {
    "Resources": [
     "scope"
    ]
   },
   "getqueryresultsworkloadinsightstopcontributorsdata": {
    "Resources": [
     "scope"
    ]
   },
   "getquerystatusmonitortopcontributors": {
    "Resources": [
     "monitor"
    ]
   },
   "getquerystatusworkloadinsightstopcontributors": {
    "Resources": [
     "scope"
    ]
   },
   "getquerystatusworkloadinsightstopcontributorsdata": {
    "Resources": [
     "scope"
    ]
   },
   "getscope": {
    "Resources": [
     "scope"
    ]
   },
   "listmonitors": {},
   "listscopes": {},
   "listtagsforresource": {
    "Resources": [
     "monitor",
     "scope"
    ]
   },
   "publish": {},
   "startquerymonitortopcontributors": {
    "Resources": [
     "monitor"
    ]
   },
   "startqueryworkloadinsightstopcontributors": {
    "Resources": [
     "scope"
    ]
   },
   "startqueryworkloadinsightstopcontributorsdata": {
    "Resources": [
     "scope"
    ]
   },
   "stopquerymonitortopcontributors": {
    "Resources": [
     "monitor"
    ]
   },
   "stopqueryworkloadinsightstopcontributors": {
    "Resources": [
     "scope"
    ]
   },
   "stopqueryworkloadinsightstopcontributorsdata": {
    "Resources": [
     "scope"
    ]
   },
   "tagresource": {
    "Resources": [
     "monitor",
     "scope"
    ]
   },
   "untagresource": {
    "Resources": [
     "monitor",
     "scope"
    ]
   },
   "updatemonitor": {
    "Resources": [
     "monitor"
    ]
   },
   "updatescope": {
    "Resources": [
     "scope"
    ]
   }
  },
  "Resources": {
   "monitor": {
    "ARNFormats": [
     "arn:${Partition}:networkflowmonitor:${Region}:${Account}:monitor/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "scope": {
    "ARNFormats": [
     "arn:${Partition}:networkflowmonitor:${Region}:${Account}:scope/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "networkmanager": {
  "Actions": {
   "acceptattachment": {
    "Resources": [
     "attachment"
    ]
   },
   "associateconnectpeer": {
    "Resources": [
     "device",
     "global-network"
    ]
   },
   "associatecustomergateway": {
    "Resources": [
     "device",
     "global-network",
     "link"
    ]
   },
   "associatelink": {
    "Resources": [
     "device",
     "global-network",
     "link"
    ]
   },
   "associatetransitgatewayconnectpeer": {
    "Resources": [
     "device",
     "global-network",
     "link"
    ]
   },
   "createconnectattachment": {
    "Resources": [
     "attachment",
     "core-network"
    ]
   },
   "createconnection": {
    "Resources": [
     "global-network"
    ]
   },
   "createconnectpeer": {
    "Resources": [
     "attachment"
    ]
   },
   "createcorenetwork": {
    "Resources": [
     "global-network"
    ]
   },
   "createdevice": {
    "Resources": [
     "global-network"
    ]
   },
   "createdirectconnectgatewayattachment": {
    "Resources": [
     "core-network"
    ]
   },
   "createglobalnetwork": {},
   "createlink": {
    "Resources": [
     "global-network",
     "site"
    ]
   },
   "createsite": {
    "Resources": [
     "global-network"
    ]
   },
   "createsitetositevpnattachment": {
    "Resources": [
     "core-network"
    ]
   },
   "createtransitgatewaypeering": {
    "Resources": [
     "core-network"
    ]
   },
   "createtransitgatewayroutetableattachment": {
    "Resources": [
     "peering"
    ]
   },
   "createvpcattachment": {
    "Resources": [
     "core-network"
    ]
   },
   "deleteattachment": {
    "Resources": [
     "attachment"
    ]
   },
   "deleteconnection": {
    "Resources": [
     "connection",
     "global-network"
    ]
   },
   "deleteconnectpeer": {
    "Resources": [
     "connect-peer"
    ]
   },
   "deletecorenetwork": {
    "Resources": [
     "core-network"
    ]
   },
   "deletecorenetworkpolicyversion": {
    "Resources": [
     "core-network"
    ]
   },
   "deletedevice": {
    "Resources": [
     "device",
     "global-network"
    ]
   },
   "deleteglobalnetwork": {
    "Resources": [
     "global-network"
    ]
   },
   "deletelink": {
    "Resources": [
     "global-network",
     "link"
    ]
   },
   "deletepeering": {
    "Resources": [
     "peering"
    ]
   },
   "deleteresourcepolicy": {
    "Resources": [
     "core-network"
    ]
   },
   "deletesite": {
    "Resources": [
     "global-network",
     "site"
    ]
   },
   "deregistertransitgateway": {
    "Resources": [
     "global-network"
    ]
   },
   "describeglobalnetworks": {
    "Resources": [
     "global-network"
    ]
   },
   "disassociateconnectpeer": {
    "Resources": [
     "global-network"
    ]
   },
   "disassociatecustomergateway": {
    "Resources": [
     "global-network"
    ]
   },
   "disassociatelink": {
    "Resources": [
     "device",
     "global-network",
     "link"
    ]
   },
   "disassociatetransitgatewayconnectpeer": {
    "Resources": [
     "global-network"
    ]
   },
   "executecorenetworkchangeset": {
    "Resources": [
     "core-network"
    ]
   },
   "getconnectattachment": {
    "Resources": [
     "attachment"
    ]
   },
   "getconnections": {
    "Resources": [
     "connection",
     "global-network"
    ]
   },
   "getconnectpeer": {
    "Resources": [
     "connect-peer"
    ]
   },
   "getconnectpeerassociations": {
    "Resources": [
     "global-network"
    ]
   },
   "getcorenetwork": {
    "Resources": [
     "core-network"
    ]
   },
   "getcorenetworkchangeevents": {
    "Resources": [
     "core-network"
    ]
   },
   "getcorenetworkchangeset": {
    "Resources": [
     "core-network"
    ]
   },
   "getcorenetworkpolicy": {
    "Resources": [
     "core-network"
    ]
   },
   "getcustomergatewayassociations": {
    "Resources": [
     "global-network"
    ]
   },
   "getdevices": {
    "Resources": [
     "device",
     "global-network"
    ]
   },
   "getdirectconnectgatewayattachment": {
    "Resources": [
     "attachment"
    ]
   },
   "getlinkassociations": {
    "Resources": [
     "device",
     "global-network",
     "link"
    ]
   },
   "getlinks": {
    "Resources": [
     "global-network",
     "link"
    ]
   },
   "getnetworkresourcecounts": {
    "Resources": [
     "global-network"
    ]
   },
   "getnetworkresourcerelationships": {
    "Resources": [
     "global-network"
    ]
   },
   "getnetworkresources": {
    "Resources": [
     "global-network"
    ]
   },
   "getnetworkroutes": {
    "Resources": [
     "global-network"
    ]
   },
   "getnetworktelemetry": {
    "Resources": [
     "global-network"
    ]
   },
   "getresourcepolicy": {
    "Resources": [
     "core-network"
    ]
   },
   "getrouteanalysis": {
    "Resources": [
     "global-network"
    ]
   },
   "getsites": {
    "Resources": [
     "global-network",
     "site"
    ]
   },
   "getsitetositevpnattachment": {
    "Resources": [
     "attachment"
    ]
   },
   "gettransitgatewayconnectpeerassociations": {
    "Resources": [
     "global-network"
    ]
   },
   "gettransitgatewaypeering": {
    "Resources": [
     "peering"
    ]
   },
   "gettransitgatewayregistrations": {
    "Resources": [
     "global-network"
    ]
   },
   "gettransitgatewayroutetableattachment": {
    "Resources": [
     "attachment"
    ]
   },
   "getvpcattachment": {
    "Resources": [
     "attachment"
    ]
   },
   "listattachments": {
    "Resources": [
     "attachment"
    ]
   },
   "listconnectpeers": {
    "Resources": [
     "connect-peer"
    ]
   },
   "listcorenetworkpolicyversions": {
    "Resources": [
     "core-network"
    ]
   },
   "listcorenetworks": {},
   "listorganizationserviceaccessstatus": {},
   "listpeerings": {},
   "listtagsforresource": {
    "Resources": [
     "attachment",
     "connect-peer",
     "connection",
     "core-network",
     "device",
     "global-network",
     "link",
     "peering",
     "site"
    ]
   },
   "putcorenetworkpolicy": {
    "Resources": [
     "core-network"
    ]
   },
   "putresourcepolicy": {
    "Resources": [
     "core-network"
    ]
   },
   "registertransitgateway": {
    "Resources": [
     "global-network"
    ]
   },
   "rejectattachment": {
    "Resources": [
     "attachment"
    ]
   },
   "restorecorenetworkpolicyversion": {
    "Resources": [
     "core-network"
    ]
   },
   "startorganizationserviceaccessupdate": {},
   "startrouteanalysis": {
    "Resources": [
     "global-network"
    ]
   },
   "tagresource": {
    "Resources": [
     "attachment",
     "connect-peer",
     "connection",
     "core-network",
     "device",
     "global-network",
     "link",
     "peering",
     "site"
    ]
   },
   "untagresource": {
    "Resources": [
     "attachment",
     "connect-peer",
     "connection",
     "core-network",
     "device",
     "global-network",
     "link",
     "peering",
     "site"
    ]
   },
   "updateconnection": {
    "Resources": [
     "connection",
     "global-network"
    ]
   },
   "updatecorenetwork": {
    "Resources": [
     "core-network"
    ]
   },
   "updatedevice": {
    "Resources": [
     "device",
     "global-network"
    ]
   },
   "updatedirectconnectgatewayattachment": {
    "Resources": [
     "attachment"
    ]
   },
   "updateglobalnetwork": {
    "Resources": [
     "global-network"
    ]
   },
   "updatelink": {
    "Resources": [
     "global-network",
     "link"
    ]
   },
   "updatenetworkresourcemetadata": {
    "Resources": [
     "global-network"
    ]
   },
   "updatesite": {
    "Resources": [
     "global-network",
     "site"
    ]
   },
   "updatevpcattachment": {
    "Resources": [
     "attachment"
    ]
   }
  },
  "Resources": {
   "attachment": {
    "ARNFormats": [
     "arn:${Partition}:networkmanager::${Account}:attachment/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "connect-peer": {
    "ARNFormats": [
     "arn:${Partition}:networkmanager::${Account}:connect-peer/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "connection": {
    "ARNFormats": [
     "arn:${Partition}:networkmanager::${Account}:connection/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "core-network": {
    "ARNFormats": [
     "arn:${Partition}:networkmanager::${Account}:core-network/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "device": {
    "ARNFormats": [
     "arn:${Partition}:networkmanager::${Account}:device/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "global-network": {
    "ARNFormats": [
     "arn:${Partition}:networkmanager::${Account}:global-network/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "link": {
    "ARNFormats": [
     "arn:${Partition}:networkmanager::${Account}:link/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "peering": {
    "ARNFormats": [
     "arn:${Partition}:networkmanager::${Account}:peering/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "site": {
    "ARNFormats": [
     "arn:${Partition}:networkmanager::${Account}:site/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "networkmanager-chat": {
  "Actions": {
   "cancelmessageresponse": {},
   "createconversation": {},
   "deleteconversation": {},
   "listconversationmessages": {},
   "listconversations": {},
   "notifyconversationisactive": {},
   "sendconversationmessage": {}
  },
  "Resources": {}
 },
 "networkmonitor": {
  "Actions": {
   "createmonitor": {
    "Resources": [
     "monitor"
    ]
   },
   "createprobe": {},
   "deletemonitor": {
    "Resources": [
     "monitor"
    ]
   },
   "deleteprobe": {
    "Resources": [
     "probe"
    ]
   },
   "getmonitor": {
    "Resources": [
     "monitor"
    ]
   },
   "getprobe": {
    "Resources": [
     "probe"
    ]
   },
   "listmonitors": {},
   "listtagsforresource": {
    "Resources": [
     "monitor",
     "probe"
    ]
   },
   "tagresource": {
    "Resources": [
     "monitor",
     "probe"
    ]
   },
   "untagresource": {
    "Resources": [
     "monitor",
     "probe"
    ]
   },
   "updatemonitor": {
    "Resources": [
     "monitor"
    ]
   },
   "updateprobe": {
    "Resources": [
     "probe"
    ]
   }
  },
  "Resources": {
   "monitor": {
    "ARNFormats": [
     "arn:${Partition}:networkmonitor:${Region}:${Account}:monitor/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "probe": {
    "ARNFormats": [
     "arn:${Partition}:networkmonitor:${Region}:${Account}:probe/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "nimble": {
  "Actions": {
   "accepteulas": {
    "Resources": [
     "eula"
    ]
   },
   "createlaunchprofile": {
    "Resources": [
     "studio"
    ]
   },
   "createstreamingimage": {
    "Resources": [
     "studio"
    ]
   },
   "createstreamingsession": {
    "Resources": [
     "launch-profile"
    ]
   },
   "createstreamingsessionstream": {
    "Resources": [
     "streaming-session"
    ]
   },
   "createstudio": {
    "Resources": [
     "studio"
    ]
   },
   "createstudiocomponent": {
    "Resources": [
     "studio"
    ]
   },
   "deletelaunchprofile": {
    "Resources": [
     "launch-profile"
    ]
   },
   "deletelaunchprofilemember": {
    "Resources": [
     "launch-profile"
    ]
   },
   "deletestreamingimage": {
    "Resources": [
     "streaming-image"
    ]
   },
   "deletestreamingsession": {
    "Resources": [
     "streaming-session"
    ]
   },
   "deletestudio": {
    "Resources": [
     "studio"
    ]
   },
   "deletestudiocomponent": {
    "Resources": [
     "studio-component"
    ]
   },
   "deletestudiomember": {
    "Resources": [
     "studio"
    ]
   },
   "geteula": {
    "Resources": [
     "eula"
    ]
   },
   "getfeaturemap": {},
   "getlaunchprofile": {
    "Resources": [
     "launch-profile"
    ]
   },
   "getlaunchprofiledetails": {
    "Resources": [
     "launch-profile"
    ]
   },
   "getlaunchprofileinitialization": {
    "Resources": [
     "launch-profile"
    ]
   },
   "getlaunchprofilemember": {
    "Resources": [
     "launch-profile"
    ]
   },
   "getstreamingimage": {
    "Resources": [
     "streaming-image"
    ]
   },
   "getstreamingsession": {
    "Resources": [
     "streaming-session"
    ]
   },
   "getstreamingsessionbackup": {
    "Resources": [
     "streaming-session-backup"
    ]
   },
   "getstreamingsessionstream": {
    "Resources": [
     "streaming-session"
    ]
   },
   "getstudio": {
    "Resources": [
     "studio"
    ]
   },
   "getstudiocomponent": {
    "Resources": [
     "studio-component"
    ]
   },
   "getstudiomember": {
    "Resources": [
     "studio"
    ]
   },
   "listeulaacceptances": {
    "Resources": [
     "eula-acceptance"
    ]
   },
   "listeulas": {
    "Resources": [
     "eula"
    ]
   },
   "listlaunchprofilemembers": {
    "Resources": [
     "launch-profile"
    ]
   },
   "listlaunchprofiles": {
    "Resources": [
     "studio"
    ]
   },
   "liststreamingimages": {
    "Resources": [
     "studio"
    ]
   },
   "liststreamingsessionbackups": {
    "Resources": [
     "studio"
    ]
   },
   "liststreamingsessions": {
    "Resources": [
     "studio"
    ]
   },
   "liststudiocomponents": {
    "Resources": [
     "studio"
    ]
   },
   "liststudiomembers": {
    "Resources": [
     "studio"
    ]
   },
   "liststudios": {},
   "listtagsforresource": {
    "Resources": [
     "launch-profile",
     "streaming-image",
     "streaming-session",
     "streaming-session-backup",
     "studio",
     "studio-component"
    ]
   },
   "putlaunchprofilemembers": {
    "Resources": [
     "launch-profile"
    ]
   },
   "putstudiologevents": {
    "Resources": [
     "studio"
    ]
   },
   "putstudiomembers": {
    "Resources": [
     "studio"
    ]
   },
   "startstreamingsession": {
    "Resources": [
     "streaming-session",
     "streaming-session-backup"
    ]
   },
   "startstudiossoconfigurationrepair": {
    "Resources": [
     "studio"
    ]
   },
   "stopstreamingsession": {
    "Resources": [
     "streaming-session"
    ]
   },
   "tagresource": {
    "Resources": [
     "launch-profile",
     "streaming-image",
     "streaming-session",
     "streaming-session-backup",
     "studio",
     "studio-component"
    ]
   },
   "untagresource": {
    "Resources": [
     "launch-profile",
     "streaming-image",
     "streaming-session",
     "streaming-session-backup",
     "studio",
     "studio-component"
    ]
   },
   "updatelaunchprofile": {
    "Resources": [
     "launch-profile"
    ]
   },
   "updatelaunchprofilemember": {
    "Resources": [
     "launch-profile"
    ]
   },
   "updatestreamingimage": {
    "Resources": [
     "streaming-image"
    ]
   },
   "updatestudio": {
    "Resources": [
     "studio"
    ]
   },
   "updatestudiocomponent": {
    "Resources": [
     "studio-component"
    ]
   }
  },
  "Resources": {
   "eula": {
    "ARNFormats": [
     "arn:${Partition}:nimble:${Region}:${Account}:eula/.*"
    ]
   },
   "eula-acceptance": {
    "ARNFormats": [
     "arn:${Partition}:nimble:${Region}:${Account}:eula-acceptance/.*"
    ],
    "ConditionKeys": [
     "nimble:studioId"
    ]
   },
   "launch-profile": {
    "ARNFormats": [
     "arn:${Partition}:nimble:${Region}:${Account}:launch-profile/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "nimble:studioId"
    ]
   },
   "streaming-image": {
    "ARNFormats": [
     "arn:${Partition}:nimble:${Region}:${Account}:streaming-image/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "nimble:studioId"
    ]
   },
   "streaming-session": {
    "ARNFormats": [
     "arn:${Partition}:nimble:${Region}:${Account}:streaming-session/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "nimble:createdBy",
     "nimble:ownedBy"
    ]
   },
   "streaming-session-backup": {
    "ARNFormats": [
     "arn:${Partition}:nimble:${Region}:${Account}:streaming-session-backup/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "nimble:ownedBy"
    ]
   },
   "studio": {
    "ARNFormats": [
     "arn:${Partition}:nimble:${Region}:${Account}:studio/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "nimble:studioId"
    ]
   },
   "studio-component": {
    "ARNFormats": [
     "arn:${Partition}:nimble:${Region}:${Account}:studio-component/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "nimble:studioId"
    ]
   }
  }
 },
 "notifications": {
  "Actions": {
   "associatechannel": {
    "Resources": [
     "NotificationConfiguration"
    ]
   },
   "associatemanagednotificationaccountcontact": {
    "Resources": [
     "ManagedNotificationConfiguration"
    ]
   },
   "associatemanagednotificationadditionalchannel": {
    "Resources": [
     "ManagedNotificationConfiguration"
    ]
   },
   "createeventrule": {},
   "createnotificationconfiguration": {},
   "deleteeventrule": {
    "Resources": [
     "EventRule"
    ]
   },
   "deletenotificationconfiguration": {
    "Resources": [
     "NotificationConfiguration"
    ]
   },
   "deregisternotificationhub": {},
   "disablenotificationsaccessfororganization": {},
   "disassociatechannel": {
    "Resources": [
     "NotificationConfiguration"
    ]
   },
   "disassociatemanagednotificationaccountcontact": {
    "Resources": [
     "ManagedNotificationConfiguration"
    ]
   },
   "disassociatemanagednotificationadditionalchannel": {
    "Resources": [
     "ManagedNotificationConfiguration"
    ]
   },
   "enablenotificationsaccessfororganization": {},
   "geteventrule": {
    "Resources": [
     "EventRule"
    ]
   },
   "getfeatureoptinstatus": {},
   "getmanagednotificationchildevent": {
    "Resources": [
     "ManagedNotificationChildEvent"
    ]
   },
   "getmanagednotificationconfiguration": {
    "Resources": [
     "ManagedNotificationConfiguration"
    ]
   },
   "getmanagednotificationevent": {
    "Resources": [
     "ManagedNotificationEvent"
    ]
   },
   "getnotificationconfiguration": {
    "Resources": [
     "NotificationConfiguration"
    ]
   },
   "getnotificationevent": {
    "Resources": [
     "NotificationEvent"
    ]
   },
   "getnotificationsaccessfororganization": {},
   "listchannels": {
    "Resources": [
     "NotificationConfiguration"
    ]
   },
   "listeventrules": {},
   "listmanagednotificationchannelassociations": {
    "Resources": [
     "ManagedNotificationConfiguration"
    ]
   },
   "listmanagednotificationchildevents": {},
   "listmanagednotificationconfigurations": {},
   "listmanagednotificationevents": {},
   "listnotificationconfigurations": {},
   "listnotificationevents": {},
   "listnotificationhubs": {},
   "listtagsforresource": {},
   "putfeatureoptinstatus": {},
   "registernotificationhub": {},
   "tagresource": {
    "Resources": [
     "NotificationConfiguration"
    ]
   },
   "untagresource": {
    "Resources": [
     "NotificationConfiguration"
    ]
   },
   "updateeventrule": {
    "Resources": [
     "EventRule"
    ]
   },
   "updatenotificationconfiguration": {
    "Resources": [
     "NotificationConfiguration"
    ]
   }
  },
  "Resources": {
   "eventrule": {
    "ARNFormats": [
     "arn:${Partition}:notifications::${Account}:configuration/.*"
    ]
   },
   "managednotificationchildevent": {
    "ARNFormats": [
     "arn:${Partition}:notifications::${Account}:managed-notification-configuration/category/.*"
    ]
   },
   "managednotificationconfiguration": {
    "ARNFormats": [
     "arn:${Partition}:notifications::${Account}:managed-notification-configuration/category/.*"
    ]
   },
   "managednotificationevent": {
    "ARNFormats": [
     "arn:${Partition}:notifications::${Account}:managed-notification-configuration/category/.*"
    ]
   },
   "notificationconfiguration": {
    "ARNFormats": [
     "arn:${Partition}:notifications::${Account}:configuration/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "notificationevent": {
    "ARNFormats": [
     "arn:${Partition}:notifications:${Region}:${Account}:configuration/.*"
    ]
   }
  }
 },
 "notifications-contacts": {
  "Actions": {
   "activateemailcontact": {
    "Resources": [
     "EmailContactResource"
    ]
   },
   "createemailcontact": {},
   "deleteemailcontact": {
    "Resources": [
     "EmailContactResource"
    ]
   },
   "getemailcontact": {
    "Resources": [
     "EmailContactResource"
    ]
   },
   "listemailcontacts": {},
   "listtagsforresource": {},
   "sendactivationcode": {
    "Resources": [
     "EmailContactResource"
    ]
   },
   "tagresource": {
    "Resources": [
     "EmailContactResource"
    ]
   },
   "untagresource": {
    "Resources": [
     "EmailContactResource"
    ]
   }
  },
  "Resources": {
   "emailcontactresource": {
    "ARNFormats": [
     "arn:${Partition}:notifications-contacts::${Account}:emailcontact/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "oam": {
  "Actions": {
   "createlink": {
    "Resources": [
     "Sink"
    ]
   },
   "createsink": {},
   "deletelink": {
    "Resources": [
     "Link"
    ]
   },
   "deletesink": {
    "Resources": [
     "Sink"
    ]
   },
   "getlink": {
    "Resources": [
     "Link"
    ]
   },
   "getsink": {
    "Resources": [
     "Sink"
    ]
   },
   "getsinkpolicy": {
    "Resources": [
     "Sink"
    ]
   },
   "listattachedlinks": {
    "Resources": [
     "Sink"
    ]
   },
   "listlinks": {},
   "listsinks": {},
   "listtagsforresource": {
    "Resources": [
     "Link",
     "Sink"
    ]
   },
   "putsinkpolicy": {
    "Resources": [
     "Sink"
    ]
   },
   "tagresource": {
    "Resources": [
     "Link",
     "Sink"
    ]
   },
   "untagresource": {
    "Resources": [
     "Link",
     "Sink"
    ]
   },
   "updatelink": {
    "Resources": [
     "Link"
    ]
   }
  },
  "Resources": {
   "link": {
    "ARNFormats": [
     "arn:${Partition}:oam:${Region}:${Account}:link/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "sink": {
    "ARNFormats": [
     "arn:${Partition}:oam:${Region}:${Account}:sink/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "observabilityadmin": {
  "Actions": {
   "gettelemetryevaluationstatus": {},
   "gettelemetryevaluationstatusfororganization": {},
   "listresourcetelemetry": {},
   "listresourcetelemetryfororganization": {},
   "starttelemetryevaluation": {},
   "starttelemetryevaluationfororganization": {},
   "stoptelemetryevaluation": {},
   "stoptelemetryevaluationfororganization": {}
  },
  "Resources": {}
 },
 "omics": {
  "Actions": {
   "abortmultipartreadsetupload": {
    "Resources": [
     "sequenceStore"
    ]
   },
   "acceptshare": {},
   "batchdeletereadset": {
    "Resources": [
     "sequenceStore"
    ]
   },
   "cancelannotationimportjob": {},
   "cancelrun": {
    "Resources": [
     "run"
    ]
   },
   "cancelvariantimportjob": {},
   "completemultipartreadsetupload": {
    "Resources": [
     "sequenceStore"
    ]
   },
   "createannotationstore": {},
   "createannotationstoreversion": {
    "Resources": [
     "AnnotationStore"
    ]
   },
   "createmultipartreadsetupload": {
    "Resources": [
     "sequenceStore"
    ]
   },
   "createreferencestore": {},
   "createruncache": {},
   "createrungroup": {},
   "createsequencestore": {},
   "createshare": {},
   "createvariantstore": {},
   "createworkflow": {},
   "deleteannotationstore": {
    "Resources": [
     "AnnotationStore"
    ]
   },
   "deleteannotationstoreversions": {
    "Resources": [
     "AnnotationStore",
     "AnnotationStoreVersion"
    ]
   },
   "deletereference": {
    "Resources": [
     "reference",
     "referenceStore"
    ]
   },
   "deletereferencestore": {
    "Resources": [
     "referenceStore"
    ]
   },
   "deleterun": {
    "Resources": [
     "run"
    ]
   },
   "deleteruncache": {
    "Resources": [
     "runCache"
    ]
   },
   "deleterungroup": {
    "Resources": [
     "runGroup"
    ]
   },
   "deletes3accesspolicy": {
    "Resources": [
     "sequenceStore"
    ]
   },
   "deletesequencestore": {
    "Resources": [
     "sequenceStore"
    ]
   },
   "deleteshare": {},
   "deletevariantstore": {
    "Resources": [
     "VariantStore"
    ]
   },
   "deleteworkflow": {
    "Resources": [
     "workflow"
    ]
   },
   "getannotationimportjob": {},
   "getannotationstore": {
    "Resources": [
     "AnnotationStore"
    ]
   },
   "getannotationstoreversion": {
    "Resources": [
     "AnnotationStoreVersion"
    ]
   },
   "getreadset": {
    "Resources": [
     "readSet",
     "sequenceStore"
    ]
   },
   "getreadsetactivationjob": {
    "Resources": [
     "sequenceStore"
    ]
   },
   "getreadsetexportjob": {
    "Resources": [
     "sequenceStore"
    ]
   },
   "getreadsetimportjob": {
    "Resources": [
     "sequenceStore"
    ]
   },
   "getreadsetmetadata": {
    "Resources": [
     "readSet",
     "sequenceStore"
    ]
   },
   "getreference": {
    "Resources": [
     "reference",
     "referenceStore"
    ]
   },
   "getreferenceimportjob": {
    "Resources": [
     "referenceStore"
    ]
   },
   "getreferencemetadata": {
    "Resources": [
     "reference",
     "referenceStore"
    ]
   },
   "getreferencestore": {
    "Resources": [
     "referenceStore"
    ]
   },
   "getrun": {
    "Resources": [
     "run"
    ]
   },
   "getruncache": {
    "Resources": [
     "runCache"
    ]
   },
   "getrungroup": {
    "Resources": [
     "runGroup"
    ]
   },
   "getruntask": {
    "Resources": [
     "TaskResource",
     "run"
    ]
   },
   "gets3accesspolicy": {
    "Resources": [
     "sequenceStore"
    ]
   },
   "getsequencestore": {
    "Resources": [
     "sequenceStore"
    ]
   },
   "getshare": {},
   "getvariantimportjob": {},
   "getvariantstore": {
    "Resources": [
     "VariantStore"
    ]
   },
   "getworkflow": {
    "Resources": [
     "workflow"
    ]
   },
   "listannotationimportjobs": {},
   "listannotationstores": {},
   "listannotationstoreversions": {
    "Resources": [
     "AnnotationStore"
    ]
   },
   "listmultipartreadsetuploads": {
    "Resources": [
     "sequenceStore"
    ]
   },
   "listreadsetactivationjobs": {
    "Resources": [
     "sequenceStore"
    ]
   },
   "listreadsetexportjobs": {
    "Resources": [
     "sequenceStore"
    ]
   },
   "listreadsetimportjobs": {
    "Resources": [
     "sequenceStore"
    ]
   },
   "listreadsets": {
    "Resources": [
     "sequenceStore"
    ]
   },
   "listreadsetuploadparts": {
    "Resources": [
     "sequenceStore"
    ]
   },
   "listreferenceimportjobs": {
    "Resources": [
     "referenceStore"
    ]
   },
   "listreferences": {
    "Resources": [
     "referenceStore"
    ]
   },
   "listreferencestores": {},
   "listruncaches": {},
   "listrungroups": {},
   "listruns": {},
   "listruntasks": {
    "Resources": [
     "run"
    ]
   },
   "listsequencestores": {},
   "listshares": {},
   "listtagsforresource": {},
   "listvariantimportjobs": {},
   "listvariantstores": {},
   "listworkflows": {},
   "puts3accesspolicy": {
    "Resources": [
     "sequenceStore"
    ]
   },
   "startannotationimportjob": {
    "Resources": [
     "AnnotationStore",
     "AnnotationStoreVersion"
    ]
   },
   "startreadsetactivationjob": {
    "Resources": [
     "sequenceStore"
    ]
   },
   "startreadsetexportjob": {
    "Resources": [
     "sequenceStore"
    ]
   },
   "startreadsetimportjob": {
    "Resources": [
     "sequenceStore"
    ]
   },
   "startreferenceimportjob": {
    "Resources": [
     "referenceStore"
    ]
   },
   "startrun": {
    "Resources": [
     "run",
     "runCache",
     "runGroup",
     "workflow"
    ]
   },
   "startvariantimportjob": {
    "Resources": [
     "VariantStore"
    ]
   },
   "tagresource": {
    "Resources": [
     "AnnotationStore",
     "AnnotationStoreVersion",
     "VariantStore",
     "readSet",
     "reference",
     "referenceStore",
     "run",
     "runCache",
     "runGroup",
     "sequenceStore",
     "workflow"
    ]
   },
   "untagresource": {
    "Resources": [
     "AnnotationStore",
     "AnnotationStoreVersion",
     "VariantStore",
     "readSet",
     "reference",
     "referenceStore",
     "run",
     "runCache",
     "runGroup",
     "sequenceStore",
     "workflow"
    ]
   },
   "updateannotationstore": {
    "Resources": [
     "AnnotationStore"
    ]
   },
   "updateannotationstoreversion": {
    "Resources": [
     "AnnotationStoreVersion"
    ]
   },
   "updateruncache": {
    "Resources": [
     "runCache"
    ]
   },
   "updaterungroup": {
    "Resources": [
     "runGroup"
    ]
   },
   "updatesequencestore": {
    "Resources": [
     "sequenceStore"
    ]
   },
   "updatevariantstore": {
    "Resources": [
     "VariantStore"
    ]
   },
   "updateworkflow": {
    "Resources": [
     "workflow"
    ]
   },
   "uploadreadsetpart": {
    "Resources": [
     "sequenceStore"
    ]
   }
  },
  "Resources": {
   "annotationstore": {
    "ARNFormats": [
     "arn:${Partition}:omics:${Region}:${Account}:annotationStore/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "annotationstoreversion": {
    "ARNFormats": [
     "arn:${Partition}:omics:${Region}:${Account}:annotationStore/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "readset": {
    "ARNFormats": [
     "arn:${Partition}:omics:${Region}:${Account}:sequenceStore/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "reference": {
    "ARNFormats": [
     "arn:${Partition}:omics:${Region}:${Account}:referenceStore/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "referencestore": {
    "ARNFormats": [
     "arn:${Partition}:omics:${Region}:${Account}:referenceStore/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "run": {
    "ARNFormats": [
     "arn:${Partition}:omics:${Region}:${Account}:run/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "runcache": {
    "ARNFormats": [
     "arn:${Partition}:omics:${Region}:${Account}:runCache/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "rungroup": {
    "ARNFormats": [
     "arn:${Partition}:omics:${Region}:${Account}:runGroup/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "sequencestore": {
    "ARNFormats": [
     "arn:${Partition}:omics:${Region}:${Account}:sequenceStore/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "taggingresource": {
    "ARNFormats": [
     "arn:${Partition}:omics:${Region}:${Account}:tag/.*"
    ]
   },
   "taskresource": {
    "ARNFormats": [
     "arn:${Partition}:omics:${Region}:${Account}:task/.*"
    ]
   },
   "variantstore": {
    "ARNFormats": [
     "arn:${Partition}:omics:${Region}:${Account}:variantStore/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "workflow": {
    "ARNFormats": [
     "arn:${Partition}:omics:${Region}:${Account}:workflow/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "one": {
  "Actions": {
   "createdeviceactivationqrcode": {
    "Resources": [
     "device-instance"
    ]
   },
   "createdeviceconfigurationtemplate": {},
   "createdeviceinstance": {},
   "createdeviceinstanceconfiguration": {
    "Resources": [
     "device-instance"
    ]
   },
   "createsite": {},
   "deleteassociateddevice": {
    "Resources": [
     "device-instance"
    ]
   },
   "deletedeviceconfigurationtemplate": {
    "Resources": [
     "device-configuration-template"
    ]
   },
   "deletedeviceinstance": {
    "Resources": [
     "device-instance"
    ]
   },
   "deletesite": {
    "Resources": [
     "site"
    ]
   },
   "deleteuserv1": {
    "Resources": [
     "user"
    ]
   },
   "getdeviceconfigurationtemplate": {
    "Resources": [
     "device-configuration-template"
    ]
   },
   "getdeviceinstance": {
    "Resources": [
     "device-instance"
    ]
   },
   "getdeviceinstanceconfiguration": {
    "Resources": [
     "configuration"
    ]
   },
   "getsite": {
    "Resources": [
     "site"
    ]
   },
   "getsiteaddress": {
    "Resources": [
     "site"
    ]
   },
   "listdeviceconfigurationtemplates": {},
   "listdeviceinstances": {},
   "listsites": {},
   "listtagsforresource": {
    "Resources": [
     "device-configuration-template",
     "device-instance",
     "site"
    ]
   },
   "listusersv1": {},
   "rebootdevice": {
    "Resources": [
     "device-instance"
    ]
   },
   "tagresource": {
    "Resources": [
     "device-configuration-template",
     "device-instance",
     "site"
    ]
   },
   "untagresource": {
    "Resources": [
     "device-configuration-template",
     "device-instance",
     "site"
    ]
   },
   "updatedeviceconfigurationtemplate": {
    "Resources": [
     "device-configuration-template"
    ]
   },
   "updatedeviceinstance": {
    "Resources": [
     "device-instance"
    ]
   },
   "updatesite": {
    "Resources": [
     "site"
    ]
   },
   "updatesiteaddress": {
    "Resources": [
     "site"
    ]
   }
  },
  "Resources": {
   "configuration": {
    "ARNFormats": [
     "arn:${Partition}:one:${Region}:${Account}:device-instance/.*"
    ]
   },
   "device-configuration-template": {
    "ARNFormats": [
     "arn:${Partition}:one:${Region}:${Account}:device-configuration-template/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "device-instance": {
    "ARNFormats": [
     "arn:${Partition}:one:${Region}:${Account}:device-instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "site": {
    "ARNFormats": [
     "arn:${Partition}:one:${Region}:${Account}:site/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "user": {
    "ARNFormats": [
     "arn:${Partition}:one:${Region}:${Account}:user/.*"
    ]
   }
  }
 },
 "opensearch": {
  "Actions": {
   "applicationaccessall": {
    "Resources": [
     "application"
    ]
   },
   "canceldirectquery": {
    "Resources": [
     "datasource"
    ]
   },
   "getdirectquery": {
    "Resources": [
     "datasource"
    ]
   },
   "getdirectqueryresult": {
    "Resources": [
     "datasource"
    ]
   },
   "startdirectquery": {
    "Resources": [
     "datasource"
    ]
   }
  },
  "Resources": {
   "application": {
    "ARNFormats": [
     "arn:${Partition}:opensearch:${Region}:${Account}:application/.*"
    ]
   },
   "datasource": {
    "ARNFormats": [
     "arn:${Partition}:opensearch:${Region}:${Account}:datasource/.*"
    ]
   }
  }
 },
 "opsworks": {
  "Actions": {
   "assigninstance": {
    "Resources": [
     "stack"
    ]
   },
   "assignvolume": {
    "Resources": [
     "stack"
    ]
   },
   "associateelasticip": {
    "Resources": [
     "stack"
    ]
   },
   "attachelasticloadbalancer": {
    "Resources": [
     "stack"
    ]
   },
   "clonestack": {
    "Resources": [
     "stack"
    ]
   },
   "createapp": {
    "Resources": [
     "stack"
    ]
   },
   "createdeployment": {
    "Resources": [
     "stack"
    ]
   },
   "createinstance": {
    "Resources": [
     "stack"
    ]
   },
   "createlayer": {
    "Resources": [
     "stack"
    ]
   },
   "createstack": {},
   "createuserprofile": {},
   "deleteapp": {
    "Resources": [
     "stack"
    ]
   },
   "deleteinstance": {
    "Resources": [
     "stack"
    ]
   },
   "deletelayer": {
    "Resources": [
     "stack"
    ]
   },
   "deletestack": {
    "Resources": [
     "stack"
    ]
   },
   "deleteuserprofile": {},
   "deregisterecscluster": {
    "Resources": [
     "stack"
    ]
   },
   "deregisterelasticip": {
    "Resources": [
     "stack"
    ]
   },
   "deregisterinstance": {
    "Resources": [
     "stack"
    ]
   },
   "deregisterrdsdbinstance": {
    "Resources": [
     "stack"
    ]
   },
   "deregistervolume": {
    "Resources": [
     "stack"
    ]
   },
   "describeagentversions": {
    "Resources": [
     "stack"
    ]
   },
   "describeapps": {
    "Resources": [
     "stack"
    ]
   },
   "describecommands": {
    "Resources": [
     "stack"
    ]
   },
   "describedeployments": {
    "Resources": [
     "stack"
    ]
   },
   "describeecsclusters": {
    "Resources": [
     "stack"
    ]
   },
   "describeelasticips": {
    "Resources": [
     "stack"
    ]
   },
   "describeelasticloadbalancers": {
    "Resources": [
     "stack"
    ]
   },
   "describeinstances": {
    "Resources": [
     "stack"
    ]
   },
   "describelayers": {
    "Resources": [
     "stack"
    ]
   },
   "describeloadbasedautoscaling": {
    "Resources": [
     "stack"
    ]
   },
   "describemyuserprofile": {},
   "describeoperatingsystems": {},
   "describepermissions": {
    "Resources": [
     "stack"
    ]
   },
   "describeraidarrays": {
    "Resources": [
     "stack"
    ]
   },
   "describerdsdbinstances": {
    "Resources": [
     "stack"
    ]
   },
   "describeserviceerrors": {
    "Resources": [
     "stack"
    ]
   },
   "describestackprovisioningparameters": {
    "Resources": [
     "stack"
    ]
   },
   "describestacks": {
    "Resources": [
     "stack"
    ]
   },
   "describestacksummary": {
    "Resources": [
     "stack"
    ]
   },
   "describetimebasedautoscaling": {
    "Resources": [
     "stack"
    ]
   },
   "describeuserprofiles": {},
   "describevolumes": {
    "Resources": [
     "stack"
    ]
   },
   "detachelasticloadbalancer": {
    "Resources": [
     "stack"
    ]
   },
   "disassociateelasticip": {
    "Resources": [
     "stack"
    ]
   },
   "gethostnamesuggestion": {
    "Resources": [
     "stack"
    ]
   },
   "grantaccess": {
    "Resources": [
     "stack"
    ]
   },
   "listtags": {
    "Resources": [
     "stack"
    ]
   },
   "rebootinstance": {
    "Resources": [
     "stack"
    ]
   },
   "registerecscluster": {
    "Resources": [
     "stack"
    ]
   },
   "registerelasticip": {
    "Resources": [
     "stack"
    ]
   },
   "registerinstance": {
    "Resources": [
     "stack"
    ]
   },
   "registerrdsdbinstance": {
    "Resources": [
     "stack"
    ]
   },
   "registervolume": {
    "Resources": [
     "stack"
    ]
   },
   "setloadbasedautoscaling": {
    "Resources": [
     "stack"
    ]
   },
   "setpermission": {
    "Resources": [
     "stack"
    ]
   },
   "settimebasedautoscaling": {
    "Resources": [
     "stack"
    ]
   },
   "startinstance": {
    "Resources": [
     "stack"
    ]
   },
   "startstack": {
    "Resources": [
     "stack"
    ]
   },
   "stopinstance": {
    "Resources": [
     "stack"
    ]
   },
   "stopstack": {
    "Resources": [
     "stack"
    ]
   },
   "tagresource": {
    "Resources": [
     "stack"
    ]
   },
   "unassigninstance": {
    "Resources": [
     "stack"
    ]
   },
   "unassignvolume": {
    "Resources": [
     "stack"
    ]
   },
   "untagresource": {
    "Resources": [
     "stack"
    ]
   },
   "updateapp": {
    "Resources": [
     "stack"
    ]
   },
   "updateelasticip": {
    "Resources": [
     "stack"
    ]
   },
   "updateinstance": {
    "Resources": [
     "stack"
    ]
   },
   "updatelayer": {
    "Resources": [
     "stack"
    ]
   },
   "updatemyuserprofile": {},
   "updaterdsdbinstance": {
    "Resources": [
     "stack"
    ]
   },
   "updatestack": {
    "Resources": [
     "stack"
    ]
   },
   "updateuserprofile": {},
   "updatevolume": {
    "Resources": [
     "stack"
    ]
   }
  },
  "Resources": {
   "stack": {
    "ARNFormats": [
     "arn:${Partition}:opsworks:${Region}:${Account}:stack/.*"
    ]
   }
  }
 },
 "opsworks-cm": {
  "Actions": {
   "associatenode": {},
   "createbackup": {},
   "createserver": {},
   "deletebackup": {},
   "deleteserver": {},
   "describeaccountattributes": {},
   "describebackups": {},
   "describeevents": {},
   "describenodeassociationstatus": {},
   "describeservers": {},
   "disassociatenode": {},
   "exportserverengineattribute": {},
   "listtagsforresource": {},
   "restoreserver": {},
   "startmaintenance": {},
   "tagresource": {},
   "untagresource": {},
   "updateserver": {},
   "updateserverengineattributes": {}
  },
  "Resources": {
   "backup": {
    "ARNFormats": [
     "arn:${Partition}:opsworks-cm::${Account}:backup/.*"
    ]
   },
   "server": {
    "ARNFormats": [
     "arn:${Partition}:opsworks-cm::${Account}:server/.*"
    ]
   }
  }
 },
 "organizations": {
  "Actions": {
   "accepthandshake": {
    "Resources": [
     "handshake"
    ]
   },
   "attachpolicy": {
    "Resources": [
     "account",
     "organizationalunit",
     "policy",
     "root"
    ]
   },
   "cancelhandshake": {
    "Resources": [
     "handshake"
    ]
   },
   "closeaccount": {
    "Resources": [
     "account"
    ]
   },
   "createaccount": {},
   "creategovcloudaccount": {},
   "createorganization": {},
   "createorganizationalunit": {
    "Resources": [
     "organizationalunit",
     "root"
    ]
   },
   "createpolicy": {},
   "declinehandshake": {
    "Resources": [
     "handshake"
    ]
   },
   "deleteorganization": {},
   "deleteorganizationalunit": {
    "Resources": [
     "organizationalunit"
    ]
   },
   "deletepolicy": {
    "Resources": [
     "policy"
    ]
   },
   "deleteresourcepolicy": {},
   "deregisterdelegatedadministrator": {
    "Resources": [
     "account"
    ]
   },
   "describeaccount": {
    "Resources": [
     "account"
    ]
   },
   "describecreateaccountstatus": {},
   "describeeffectivepolicy": {
    "Resources": [
     "account"
    ]
   },
   "describehandshake": {
    "Resources": [
     "handshake"
    ]
   },
   "describeorganization": {},
   "describeorganizationalunit": {
    "Resources": [
     "organizationalunit"
    ]
   },
   "describepolicy": {
    "Resources": [
     "policy"
    ]
   },
   "describeresourcepolicy": {},
   "detachpolicy": {
    "Resources": [
     "account",
     "organizationalunit",
     "policy",
     "root"
    ]
   },
   "disableawsserviceaccess": {},
   "disablepolicytype": {
    "Resources": [
     "root"
    ]
   },
   "enableallfeatures": {},
   "enableawsserviceaccess": {},
   "enablepolicytype": {
    "Resources": [
     "root"
    ]
   },
   "inviteaccounttoorganization": {
    "Resources": [
     "account"
    ]
   },
   "leaveorganization": {},
   "listaccounts": {},
   "listaccountsforparent": {
    "Resources": [
     "organizationalunit",
     "root"
    ]
   },
   "listawsserviceaccessfororganization": {},
   "listchildren": {
    "Resources": [
     "organizationalunit",
     "root"
    ]
   },
   "listcreateaccountstatus": {},
   "listdelegatedadministrators": {},
   "listdelegatedservicesforaccount": {
    "Resources": [
     "account"
    ]
   },
   "listhandshakesforaccount": {},
   "listhandshakesfororganization": {},
   "listorganizationalunitsforparent": {
    "Resources": [
     "organizationalunit",
     "root"
    ]
   },
   "listparents": {
    "Resources": [
     "account",
     "organizationalunit"
    ]
   },
   "listpolicies": {},
   "listpoliciesfortarget": {
    "Resources": [
     "account",
     "organizationalunit",
     "root"
    ]
   },
   "listroots": {},
   "listtagsforresource": {
    "Resources": [
     "account",
     "organizationalunit",
     "policy",
     "resourcepolicy",
     "root"
    ]
   },
   "listtargetsforpolicy": {
    "Resources": [
     "policy"
    ]
   },
   "moveaccount": {
    "Resources": [
     "account",
     "organizationalunit",
     "root"
    ]
   },
   "putresourcepolicy": {
    "Resources": [
     "resourcepolicy"
    ]
   },
   "registerdelegatedadministrator": {
    "Resources": [
     "account"
    ]
   },
   "removeaccountfromorganization": {
    "Resources": [
     "account"
    ]
   },
   "tagresource": {
    "Resources": [
     "account",
     "organizationalunit",
     "policy",
     "resourcepolicy",
     "root"
    ]
   },
   "untagresource": {
    "Resources": [
     "account",
     "organizationalunit",
     "policy",
     "resourcepolicy",
     "root"
    ]
   },
   "updateorganizationalunit": {
    "Resources": [
     "organizationalunit"
    ]
   },
   "updatepolicy": {
    "Resources": [
     "policy"
    ]
   }
  },
  "Resources": {
   "account": {
    "ARNFormats": [
     "arn:${Partition}:organizations::${Account}:account/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "awspolicy": {
    "ARNFormats": [
     "arn:${Partition}:organizations::aws:policy/.*"
    ]
   },
   "handshake": {
    "ARNFormats": [
     "arn:${Partition}:organizations::${Account}:handshake/.*"
    ]
   },
   "organization": {
    "ARNFormats": [
     "arn:${Partition}:organizations::${Account}:organization/.*"
    ]
   },
   "organizationalunit": {
    "ARNFormats": [
     "arn:${Partition}:organizations::${Account}:ou/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "policy": {
    "ARNFormats": [
     "arn:${Partition}:organizations::${Account}:policy/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "resourcepolicy": {
    "ARNFormats": [
     "arn:${Partition}:organizations::${Account}:resourcepolicy/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "root": {
    "ARNFormats": [
     "arn:${Partition}:organizations::${Account}:root/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "osis": {
  "Actions": {
   "createpipeline": {},
   "deletepipeline": {
    "Resources": [
     "pipeline"
    ]
   },
   "getpipeline": {
    "Resources": [
     "pipeline"
    ]
   },
   "getpipelineblueprint": {
    "Resources": [
     "pipeline-blueprint"
    ]
   },
   "getpipelinechangeprogress": {
    "Resources": [
     "pipeline"
    ]
   },
   "ingest": {
    "Resources": [
     "pipeline"
    ]
   },
   "listpipelineblueprints": {},
   "listpipelines": {},
   "listtagsforresource": {
    "Resources": [
     "pipeline"
    ]
   },
   "startpipeline": {
    "Resources": [
     "pipeline"
    ]
   },
   "stoppipeline": {
    "Resources": [
     "pipeline"
    ]
   },
   "tagresource": {
    "Resources": [
     "pipeline"
    ]
   },
   "untagresource": {
    "Resources": [
     "pipeline"
    ]
   },
   "updatepipeline": {
    "Resources": [
     "pipeline"
    ]
   },
   "validatepipeline": {}
  },
  "Resources": {
   "pipeline": {
    "ARNFormats": [
     "arn:${Partition}:osis:${Region}:${Account}:pipeline/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "pipeline-blueprint": {
    "ARNFormats": [
     "arn:${Partition}:osis:${Region}:${Account}:blueprint/.*"
    ]
   }
  }
 },
 "outposts": {
  "Actions": {
   "cancelcapacitytask": {
    "Resources": [
     "outpost"
    ]
   },
   "cancelorder": {},
   "createorder": {
    "Resources": [
     "outpost"
    ]
   },
   "createoutpost": {
    "Resources": [
     "site"
    ]
   },
   "createprivateconnectivityconfig": {},
   "createsite": {},
   "deleteoutpost": {
    "Resources": [
     "outpost"
    ]
   },
   "deletesite": {
    "Resources": [
     "site"
    ]
   },
   "getcapacitytask": {
    "Resources": [
     "outpost"
    ]
   },
   "getcatalogitem": {},
   "getconnection": {},
   "getorder": {},
   "getoutpost": {
    "Resources": [
     "outpost"
    ]
   },
   "getoutpostinstancetypes": {
    "Resources": [
     "outpost"
    ]
   },
   "getoutpostsupportedinstancetypes": {
    "Resources": [
     "outpost"
    ]
   },
   "getprivateconnectivityconfig": {},
   "getsite": {
    "Resources": [
     "site"
    ]
   },
   "getsiteaddress": {
    "Resources": [
     "site"
    ]
   },
   "listassetinstances": {
    "Resources": [
     "outpost"
    ]
   },
   "listassets": {},
   "listblockinginstancesforcapacitytask": {
    "Resources": [
     "outpost"
    ]
   },
   "listcapacitytasks": {},
   "listcatalogitems": {},
   "listorders": {},
   "listoutposts": {},
   "listsites": {},
   "listtagsforresource": {},
   "startcapacitytask": {
    "Resources": [
     "outpost"
    ]
   },
   "startconnection": {},
   "tagresource": {
    "Resources": [
     "outpost",
     "site"
    ]
   },
   "untagresource": {
    "Resources": [
     "outpost",
     "site"
    ]
   },
   "updateoutpost": {
    "Resources": [
     "outpost"
    ]
   },
   "updatesite": {
    "Resources": [
     "site"
    ]
   },
   "updatesiteaddress": {
    "Resources": [
     "site"
    ]
   },
   "updatesiterackphysicalproperties": {
    "Resources": [
     "site"
    ]
   }
  },
  "Resources": {
   "outpost": {
    "ARNFormats": [
     "arn:${Partition}:outposts:${Region}:${Account}:outpost/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "site": {
    "ARNFormats": [
     "arn:${Partition}:outposts:${Region}:${Account}:site/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "panorama": {
  "Actions": {
   "createapplicationinstance": {},
   "createjobfordevices": {},
   "createnodefromtemplatejob": {},
   "createpackage": {},
   "createpackageimportjob": {},
   "deletedevice": {
    "Resources": [
     "device"
    ]
   },
   "deletepackage": {
    "Resources": [
     "package"
    ]
   },
   "deregisterpackageversion": {
    "Resources": [
     "package"
    ]
   },
   "describeapplicationinstance": {
    "Resources": [
     "applicationInstance"
    ]
   },
   "describeapplicationinstancedetails": {
    "Resources": [
     "applicationInstance"
    ]
   },
   "describedevice": {
    "Resources": [
     "device"
    ]
   },
   "describedevicejob": {},
   "describenode": {},
   "describenodefromtemplatejob": {},
   "describepackage": {
    "Resources": [
     "package"
    ]
   },
   "describepackageimportjob": {},
   "describepackageversion": {
    "Resources": [
     "package"
    ]
   },
   "describesoftware": {},
   "getwebsocketurl": {},
   "listapplicationinstancedependencies": {
    "Resources": [
     "applicationInstance"
    ]
   },
   "listapplicationinstancenodeinstances": {
    "Resources": [
     "applicationInstance"
    ]
   },
   "listapplicationinstances": {
    "Resources": [
     "device"
    ]
   },
   "listdevices": {},
   "listdevicesjobs": {
    "Resources": [
     "device"
    ]
   },
   "listnodefromtemplatejobs": {},
   "listnodes": {},
   "listpackageimportjobs": {},
   "listpackages": {},
   "listtagsforresource": {
    "Resources": [
     "applicationInstance",
     "device",
     "package"
    ]
   },
   "provisiondevice": {},
   "registerpackageversion": {
    "Resources": [
     "package"
    ]
   },
   "removeapplicationinstance": {
    "Resources": [
     "applicationInstance"
    ]
   },
   "signalapplicationinstancenodeinstances": {
    "Resources": [
     "applicationInstance"
    ]
   },
   "tagresource": {
    "Resources": [
     "applicationInstance",
     "device",
     "package"
    ]
   },
   "untagresource": {
    "Resources": [
     "applicationInstance",
     "device",
     "package"
    ]
   },
   "updatedevicemetadata": {
    "Resources": [
     "device"
    ]
   }
  },
  "Resources": {
   "applicationinstance": {
    "ARNFormats": [
     "arn:${Partition}:panorama:${Region}:${Account}:applicationInstance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "device": {
    "ARNFormats": [
     "arn:${Partition}:panorama:${Region}:${Account}:device/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "package": {
    "ARNFormats": [
     "arn:${Partition}:panorama:${Region}:${Account}:package/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "partnercentral": {
  "Actions": {
   "acceptengagementinvitation": {
    "Resources": [
     "engagement-invitation"
    ]
   },
   "assignopportunity": {
    "Resources": [
     "Opportunity"
    ]
   },
   "associateopportunity": {
    "Resources": [
     "Opportunity"
    ]
   },
   "createengagement": {},
   "createengagementinvitation": {},
   "createopportunity": {},
   "createresourcesnapshot": {
    "Resources": [
     "ResourceSnapshot"
    ]
   },
   "createresourcesnapshotjob": {},
   "deleteresourcesnapshotjob": {
    "Resources": [
     "resource-snapshot-job"
    ]
   },
   "disassociateopportunity": {
    "Resources": [
     "Opportunity"
    ]
   },
   "getawsopportunitysummary": {
    "Resources": [
     "Opportunity"
    ]
   },
   "getengagement": {
    "Resources": [
     "Engagement"
    ]
   },
   "getengagementinvitation": {
    "Resources": [
     "engagement-invitation"
    ]
   },
   "getopportunity": {
    "Resources": [
     "Opportunity"
    ]
   },
   "getresourcesnapshot": {
    "Resources": [
     "ResourceSnapshot"
    ]
   },
   "getresourcesnapshotjob": {
    "Resources": [
     "resource-snapshot-job"
    ]
   },
   "getsellingsystemsettings": {},
   "listengagementbyacceptinginvitationtasks": {},
   "listengagementfromopportunitytasks": {},
   "listengagementinvitations": {},
   "listengagementmembers": {
    "Resources": [
     "Engagement"
    ]
   },
   "listengagementresourceassociations": {
    "Resources": [
     "ResourceSnapshot"
    ]
   },
   "listengagements": {},
   "listopportunities": {},
   "listresourcesnapshotjobs": {},
   "listresourcesnapshots": {
    "Resources": [
     "ResourceSnapshot"
    ]
   },
   "listsolutions": {},
   "listtagsforresource": {},
   "putsellingsystemsettings": {},
   "rejectengagementinvitation": {
    "Resources": [
     "engagement-invitation"
    ]
   },
   "startengagementbyacceptinginvitationtask": {},
   "startengagementfromopportunitytask": {},
   "startresourcesnapshotjob": {
    "Resources": [
     "resource-snapshot-job"
    ]
   },
   "stopresourcesnapshotjob": {
    "Resources": [
     "resource-snapshot-job"
    ]
   },
   "submitopportunity": {
    "Resources": [
     "Opportunity"
    ]
   },
   "tagresource": {},
   "untagresource": {},
   "updateopportunity": {
    "Resources": [
     "Opportunity"
    ]
   }
  },
  "Resources": {
   "engagement": {
    "ARNFormats": [
     "arn:${Partition}:partnercentral:${Region}::catalog/.*"
    ]
   },
   "engagement-by-accepting-invitation-task": {
    "ARNFormats": [
     "arn:${Partition}:partnercentral:${Region}::catalog/.*"
    ]
   },
   "engagement-from-opportunity-task": {
    "ARNFormats": [
     "arn:${Partition}:partnercentral:${Region}::catalog/.*"
    ]
   },
   "engagement-invitation": {
    "ARNFormats": [
     "arn:${Partition}:partnercentral:${Region}::catalog/.*"
    ]
   },
   "opportunity": {
    "ARNFormats": [
     "arn:${Partition}:partnercentral:${Region}:${Account}:catalog/.*"
    ]
   },
   "resource-snapshot-job": {
    "ARNFormats": [
     "arn:${Partition}:partnercentral:${Region}:${Account}:catalog/.*"
    ]
   },
   "resourcesnapshot": {
    "ARNFormats": [
     "arn:${Partition}:partnercentral:${Region}:${Account}:catalog/.*"
    ]
   },
   "solution": {
    "ARNFormats": [
     "arn:${Partition}:partnercentral:${Region}:${Account}:catalog/.*"
    ]
   }
  }
 },
 "partnercentral-account-management": {
  "Actions": {
   "associatepartneraccount": {},
   "associatepartneruser": {},
   "disassociatepartneruser": {}
  },
  "Resources": {}
 },
 "payment-cryptography": {
  "Actions": {
   "createalias": {
    "Resources": [
     "alias",
     "key"
    ]
   },
   "createkey": {},
   "decryptdata": {},
   "deletealias": {
    "Resources": [
     "alias"
    ]
   },
   "deletekey": {
    "Resources": [
     "key"
    ]
   },
   "encryptdata": {},
   "exportkey": {
    "Resources": [
     "key"
    ]
   },
   "generatecardvalidationdata": {},
   "generatemac": {},
   "generatemacemvpinchange": {
    "Resources": [
     "alias",
     "key"
    ]
   },
   "generatepindata": {},
   "getalias": {
    "Resources": [
     "alias",
     "key"
    ]
   },
   "getkey": {
    "Resources": [
     "key"
    ]
   },
   "getparametersforexport": {},
   "getparametersforimport": {},
   "getpublickeycertificate": {
    "Resources": [
     "key"
    ]
   },
   "importkey": {},
   "listaliases": {},
   "listkeys": {},
   "listtagsforresource": {
    "Resources": [
     "key"
    ]
   },
   "reencryptdata": {},
   "restorekey": {
    "Resources": [
     "key"
    ]
   },
   "startkeyusage": {
    "Resources": [
     "key"
    ]
   },
   "stopkeyusage": {
    "Resources": [
     "key"
    ]
   },
   "tagresource": {
    "Resources": [
     "key"
    ]
   },
   "translatepindata": {},
   "untagresource": {
    "Resources": [
     "key"
    ]
   },
   "updatealias": {
    "Resources": [
     "alias",
     "key"
    ]
   },
   "verifyauthrequestcryptogram": {},
   "verifycardvalidationdata": {},
   "verifymac": {},
   "verifypindata": {}
  },
  "Resources": {
   "alias": {
    "ARNFormats": [
     "arn:${Partition}:payment-cryptography:${Region}:${Account}:alias/.*"
    ],
    "ConditionKeys": [
     "payment-cryptography:ResourceAliases"
    ]
   },
   "key": {
    "ARNFormats": [
     "arn:${Partition}:payment-cryptography:${Region}:${Account}:key/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "payment-cryptography:ResourceAliases"
    ]
   }
  }
 },
 "payments": {
  "Actions": {
   "acceptfinancingapplicationterms": {},
   "createfinancingapplication": {},
   "createpaymentinstrument": {},
   "deletepaymentinstrument": {},
   "getfinancingapplication": {},
   "getfinancingline": {},
   "getfinancinglinewithdrawal": {},
   "getfinancingoption": {},
   "getpaymentinstrument": {
    "Resources": [
     "payment-instrument"
    ]
   },
   "getpaymentstatus": {},
   "listfinancingapplications": {},
   "listfinancinglines": {},
   "listfinancinglinewithdrawals": {},
   "listpaymentinstruments": {},
   "listpaymentpreferences": {},
   "listpaymentprogramoptions": {},
   "listpaymentprogramstatus": {},
   "listtagsforresource": {
    "Resources": [
     "payment-instrument"
    ]
   },
   "makepayment": {},
   "tagresource": {
    "Resources": [
     "payment-instrument"
    ]
   },
   "untagresource": {
    "Resources": [
     "payment-instrument"
    ]
   },
   "updatefinancingapplication": {},
   "updatepaymentinstrument": {},
   "updatepaymentpreferences": {}
  },
  "Resources": {
   "payment-instrument": {
    "ARNFormats": [
     "arn:${Partition}:payments::${Account}:payment-instrument:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "pca-connector-ad": {
  "Actions": {
   "createconnector": {},
   "createdirectoryregistration": {},
   "createserviceprincipalname": {
    "Resources": [
     "DirectoryRegistration"
    ]
   },
   "createtemplate": {
    "Resources": [
     "Connector"
    ]
   },
   "createtemplategroupaccesscontrolentry": {
    "Resources": [
     "Template"
    ]
   },
   "deleteconnector": {
    "Resources": [
     "Connector"
    ]
   },
   "deletedirectoryregistration": {
    "Resources": [
     "DirectoryRegistration"
    ]
   },
   "deleteserviceprincipalname": {
    "Resources": [
     "DirectoryRegistration"
    ]
   },
   "deletetemplate": {
    "Resources": [
     "Template"
    ]
   },
   "deletetemplategroupaccesscontrolentry": {
    "Resources": [
     "Template"
    ]
   },
   "getconnector": {
    "Resources": [
     "Connector"
    ]
   },
   "getdirectoryregistration": {
    "Resources": [
     "DirectoryRegistration"
    ]
   },
   "getserviceprincipalname": {
    "Resources": [
     "DirectoryRegistration"
    ]
   },
   "gettemplate": {
    "Resources": [
     "Template"
    ]
   },
   "gettemplategroupaccesscontrolentry": {
    "Resources": [
     "Template"
    ]
   },
   "listconnectors": {},
   "listdirectoryregistrations": {},
   "listserviceprincipalnames": {
    "Resources": [
     "DirectoryRegistration"
    ]
   },
   "listtagsforresource": {},
   "listtemplategroupaccesscontrolentries": {
    "Resources": [
     "Template"
    ]
   },
   "listtemplates": {
    "Resources": [
     "Connector"
    ]
   },
   "tagresource": {
    "Resources": [
     "Connector",
     "DirectoryRegistration",
     "Template"
    ]
   },
   "untagresource": {
    "Resources": [
     "Connector",
     "DirectoryRegistration",
     "Template"
    ]
   },
   "updatetemplate": {
    "Resources": [
     "Template"
    ]
   },
   "updatetemplategroupaccesscontrolentry": {
    "Resources": [
     "Template"
    ]
   }
  },
  "Resources": {
   "connector": {
    "ARNFormats": [
     "arn:${Partition}:pca-connector-ad:${Region}:${Account}:connector/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "directoryregistration": {
    "ARNFormats": [
     "arn:${Partition}:pca-connector-ad:${Region}:${Account}:directory-registration/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "serviceprincipalname": {
    "ARNFormats": [
     "arn:${Partition}:pca-connector-ad:${Region}:${Account}:directory-registration/.*"
    ]
   },
   "template": {
    "ARNFormats": [
     "arn:${Partition}:pca-connector-ad:${Region}:${Account}:connector/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "templategroupaccesscontrolentry": {
    "ARNFormats": [
     "arn:${Partition}:pca-connector-ad:${Region}:${Account}:connector/.*"
    ]
   }
  }
 },
 "pca-connector-scep": {
  "Actions": {
   "createchallenge": {},
   "createconnector": {},
   "deletechallenge": {
    "Resources": [
     "Challenge"
    ]
   },
   "deleteconnector": {
    "Resources": [
     "Connector"
    ]
   },
   "getchallengemetadata": {
    "Resources": [
     "Challenge"
    ]
   },
   "getchallengepassword": {
    "Resources": [
     "Challenge"
    ]
   },
   "getconnector": {
    "Resources": [
     "Connector"
    ]
   },
   "listchallengemetadata": {},
   "listconnectors": {},
   "listtagsforresource": {},
   "tagresource": {
    "Resources": [
     "Challenge",
     "Connector"
    ]
   },
   "untagresource": {
    "Resources": [
     "Challenge",
     "Connector"
    ]
   }
  },
  "Resources": {
   "challenge": {
    "ARNFormats": [
     "arn:${Partition}:pca-connector-scep:${Region}:${Account}:connector/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "connector": {
    "ARNFormats": [
     "arn:${Partition}:pca-connector-scep:${Region}:${Account}:connector/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "pcs": {
  "Actions": {
   "allowvendedlogdeliveryforresource": {
    "Resources": [
     "cluster"
    ]
   },
   "createcluster": {},
   "createcomputenodegroup": {
    "Resources": [
     "cluster"
    ]
   },
   "createqueue": {
    "Resources": [
     "cluster"
    ]
   },
   "deletecluster": {
    "Resources": [
     "cluster"
    ]
   },
   "deletecomputenodegroup": {
    "Resources": [
     "cluster",
     "computenodegroup"
    ]
   },
   "deletequeue": {
    "Resources": [
     "cluster",
     "queue"
    ]
   },
   "getcluster": {
    "Resources": [
     "cluster"
    ]
   },
   "getcomputenodegroup": {
    "Resources": [
     "cluster",
     "computenodegroup"
    ]
   },
   "getqueue": {
    "Resources": [
     "cluster",
     "queue"
    ]
   },
   "listclusters": {},
   "listcomputenodegroups": {
    "Resources": [
     "cluster"
    ]
   },
   "listqueues": {
    "Resources": [
     "cluster"
    ]
   },
   "listtagsforresource": {},
   "registercomputenodegroupinstance": {
    "Resources": [
     "cluster"
    ]
   },
   "tagresource": {
    "Resources": [
     "cluster",
     "computenodegroup",
     "queue"
    ]
   },
   "untagresource": {
    "Resources": [
     "cluster",
     "computenodegroup",
     "queue"
    ]
   },
   "updatecomputenodegroup": {
    "Resources": [
     "cluster",
     "computenodegroup"
    ]
   },
   "updatequeue": {
    "Resources": [
     "cluster",
     "queue"
    ]
   }
  },
  "Resources": {
   "cluster": {
    "ARNFormats": [
     "arn:${Partition}:pcs:${Region}:${Account}:cluster/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "computenodegroup": {
    "ARNFormats": [
     "arn:${Partition}:pcs:${Region}:${Account}:cluster/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "queue": {
    "ARNFormats": [
     "arn:${Partition}:pcs:${Region}:${Account}:cluster/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "personalize": {
  "Actions": {
   "createbatchinferencejob": {
    "Resources": [
     "batchInferenceJob"
    ]
   },
   "createbatchsegmentjob": {
    "Resources": [
     "batchSegmentJob"
    ]
   },
   "createcampaign": {
    "Resources": [
     "campaign"
    ]
   },
   "createdatadeletionjob": {
    "Resources": [
     "dataDeletionJob"
    ]
   },
   "createdatainsightsjob": {
    "Resources": [
     "dataInsightsJob"
    ]
   },
   "createdataset": {
    "Resources": [
     "dataset"
    ]
   },
   "createdatasetexportjob": {
    "Resources": [
     "datasetExportJob"
    ]
   },
   "createdatasetgroup": {
    "Resources": [
     "datasetGroup"
    ]
   },
   "createdatasetimportjob": {
    "Resources": [
     "datasetImportJob"
    ]
   },
   "createeventtracker": {
    "Resources": [
     "eventTracker"
    ]
   },
   "createfilter": {
    "Resources": [
     "filter"
    ]
   },
   "createmetricattribution": {
    "Resources": [
     "metricAttribution"
    ]
   },
   "createrecommender": {
    "Resources": [
     "recommender"
    ]
   },
   "createschema": {
    "Resources": [
     "schema"
    ]
   },
   "createsolution": {
    "Resources": [
     "solution"
    ]
   },
   "createsolutionversion": {
    "Resources": [
     "solution"
    ]
   },
   "deletecampaign": {
    "Resources": [
     "campaign"
    ]
   },
   "deletedataset": {
    "Resources": [
     "dataset"
    ]
   },
   "deletedatasetgroup": {
    "Resources": [
     "datasetGroup"
    ]
   },
   "deleteeventtracker": {
    "Resources": [
     "eventTracker"
    ]
   },
   "deletefilter": {
    "Resources": [
     "filter"
    ]
   },
   "deletemetricattribution": {
    "Resources": [
     "metricAttribution"
    ]
   },
   "deleterecommender": {
    "Resources": [
     "recommender"
    ]
   },
   "deleteschema": {
    "Resources": [
     "schema"
    ]
   },
   "deletesolution": {
    "Resources": [
     "solution"
    ]
   },
   "describealgorithm": {
    "Resources": [
     "algorithm"
    ]
   },
   "describebatchinferencejob": {
    "Resources": [
     "batchInferenceJob"
    ]
   },
   "describebatchsegmentjob": {
    "Resources": [
     "batchSegmentJob"
    ]
   },
   "describecampaign": {
    "Resources": [
     "campaign"
    ]
   },
   "describedatadeletionjob": {
    "Resources": [
     "dataDeletionJob"
    ]
   },
   "describedatainsightsjob": {
    "Resources": [
     "dataInsightsJob"
    ]
   },
   "describedataset": {
    "Resources": [
     "dataset"
    ]
   },
   "describedatasetexportjob": {
    "Resources": [
     "datasetExportJob"
    ]
   },
   "describedatasetgroup": {
    "Resources": [
     "datasetGroup"
    ]
   },
   "describedatasetimportjob": {
    "Resources": [
     "datasetImportJob"
    ]
   },
   "describeeventtracker": {
    "Resources": [
     "eventTracker"
    ]
   },
   "describefeaturetransformation": {
    "Resources": [
     "featureTransformation"
    ]
   },
   "describefilter": {
    "Resources": [
     "filter"
    ]
   },
   "describemetricattribution": {
    "Resources": [
     "metricAttribution"
    ]
   },
   "describerecipe": {
    "Resources": [
     "recipe"
    ]
   },
   "describerecommender": {
    "Resources": [
     "recommender"
    ]
   },
   "describeschema": {
    "Resources": [
     "schema"
    ]
   },
   "describesolution": {
    "Resources": [
     "solution"
    ]
   },
   "describesolutionversion": {
    "Resources": [
     "solution"
    ]
   },
   "getactionrecommendations": {
    "Resources": [
     "campaign"
    ]
   },
   "getdatainsights": {
    "Resources": [
     "dataInsightsJob"
    ]
   },
   "getpersonalizedranking": {
    "Resources": [
     "campaign"
    ]
   },
   "getrecommendations": {
    "Resources": [
     "campaign"
    ]
   },
   "getsolutionmetrics": {
    "Resources": [
     "solution"
    ]
   },
   "listbatchinferencejobs": {},
   "listbatchsegmentjobs": {},
   "listcampaigns": {},
   "listdatadeletionjobs": {},
   "listdatainsightsjobs": {},
   "listdatasetexportjobs": {},
   "listdatasetgroups": {},
   "listdatasetimportjobs": {},
   "listdatasets": {},
   "listeventtrackers": {},
   "listfilters": {},
   "listmetricattributionmetrics": {},
   "listmetricattributions": {},
   "listrecipes": {},
   "listrecommenders": {},
   "listschemas": {},
   "listsolutions": {},
   "listsolutionversions": {},
   "listtagsforresource": {},
   "putactioninteractions": {},
   "putactions": {
    "Resources": [
     "dataset"
    ]
   },
   "putevents": {},
   "putitems": {
    "Resources": [
     "dataset"
    ]
   },
   "putusers": {
    "Resources": [
     "dataset"
    ]
   },
   "startrecommender": {
    "Resources": [
     "recommender"
    ]
   },
   "stoprecommender": {
    "Resources": [
     "recommender"
    ]
   },
   "stopsolutionversioncreation": {
    "Resources": [
     "solution"
    ]
   },
   "tagresource": {},
   "untagresource": {},
   "updatecampaign": {
    "Resources": [
     "campaign"
    ]
   },
   "updatedataset": {
    "Resources": [
     "dataset"
    ]
   },
   "updatemetricattribution": {
    "Resources": [
     "metricAttribution"
    ]
   },
   "updaterecommender": {
    "Resources": [
     "recommender"
    ]
   },
   "updatesolution": {
    "Resources": [
     "solution"
    ]
   }
  },
  "Resources": {
   "algorithm": {
    "ARNFormats": [
     "arn:${Partition}:personalize:::algorithm/.*"
    ]
   },
   "batchinferencejob": {
    "ARNFormats": [
     "arn:${Partition}:personalize:${Region}:${Account}:batch-inference-job/.*"
    ]
   },
   "batchsegmentjob": {
    "ARNFormats": [
     "arn:${Partition}:personalize:${Region}:${Account}:batch-segment-job/.*"
    ]
   },
   "campaign": {
    "ARNFormats": [
     "arn:${Partition}:personalize:${Region}:${Account}:campaign/.*"
    ]
   },
   "datadeletionjob": {
    "ARNFormats": [
     "arn:${Partition}:personalize:${Region}:${Account}:data-deletion-job/.*"
    ]
   },
   "datainsightsjob": {
    "ARNFormats": [
     "arn:${Partition}:personalize:${Region}:${Account}:data-insights-job/.*"
    ]
   },
   "dataset": {
    "ARNFormats": [
     "arn:${Partition}:personalize:${Region}:${Account}:dataset/.*"
    ]
   },
   "datasetexportjob": {
    "ARNFormats": [
     "arn:${Partition}:personalize:${Region}:${Account}:dataset-export-job/.*"
    ]
   },
   "datasetgroup": {
    "ARNFormats": [
     "arn:${Partition}:personalize:${Region}:${Account}:dataset-group/.*"
    ]
   },
   "datasetimportjob": {
    "ARNFormats": [
     "arn:${Partition}:personalize:${Region}:${Account}:dataset-import-job/.*"
    ]
   },
   "eventtracker": {
    "ARNFormats": [
     "arn:${Partition}:personalize:${Region}:${Account}:event-tracker/.*"
    ]
   },
   "featuretransformation": {
    "ARNFormats": [
     "arn:${Partition}:personalize:::feature-transformation/.*"
    ]
   },
   "filter": {
    "ARNFormats": [
     "arn:${Partition}:personalize:${Region}:${Account}:filter/.*"
    ]
   },
   "metricattribution": {
    "ARNFormats": [
     "arn:${Partition}:personalize:${Region}:${Account}:metric-attribution/.*"
    ]
   },
   "recipe": {
    "ARNFormats": [
     "arn:${Partition}:personalize:::recipe/.*"
    ]
   },
   "recommender": {
    "ARNFormats": [
     "arn:${Partition}:personalize:${Region}:${Account}:recommender/.*"
    ]
   },
   "schema": {
    "ARNFormats": [
     "arn:${Partition}:personalize:${Region}:${Account}:schema/.*"
    ]
   },
   "solution": {
    "ARNFormats": [
     "arn:${Partition}:personalize:${Region}:${Account}:solution/.*"
    ]
   }
  }
 },
 "pi": {
  "Actions": {
   "createperformanceanalysisreport": {
    "Resources": [
     "perf-reports-resource"
    ]
   },
   "deleteperformanceanalysisreport": {
    "Resources": [
     "perf-reports-resource"
    ]
   },
   "describedimensionkeys": {
    "Resources": [
     "metric-resource"
    ]
   },
   "getdimensionkeydetails": {
    "Resources": [
     "metric-resource"
    ]
   },
   "getperformanceanalysisreport": {
    "Resources": [
     "perf-reports-resource"
    ]
   },
   "getresourcemetadata": {
    "Resources": [
     "metric-resource"
    ]
   },
   "getresourcemetrics": {
    "Resources": [
     "metric-resource"
    ]
   },
   "listavailableresourcedimensions": {
    "Resources": [
     "metric-resource"
    ]
   },
   "listavailableresourcemetrics": {
    "Resources": [
     "metric-resource"
    ]
   },
   "listperformanceanalysisreports": {
    "Resources": [
     "perf-reports-resource"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "perf-reports-resource"
    ]
   },
   "tagresource": {
    "Resources": [
     "perf-reports-resource"
    ]
   },
   "untagresource": {
    "Resources": [
     "perf-reports-resource"
    ]
   }
  },
  "Resources": {
   "metric-resource": {
    "ARNFormats": [
     "arn:${Partition}:pi:${Region}:${Account}:metrics/.*"
    ]
   },
   "perf-reports-resource": {
    "ARNFormats": [
     "arn:${Partition}:pi:${Region}:${Account}:perf-reports/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "pipes": {
  "Actions": {
   "createpipe": {
    "Resources": [
     "pipe"
    ]
   },
   "deletepipe": {
    "Resources": [
     "pipe"
    ]
   },
   "describepipe": {
    "Resources": [
     "pipe"
    ]
   },
   "listpipes": {},
   "listtagsforresource": {
    "Resources": [
     "pipe"
    ]
   },
   "startpipe": {
    "Resources": [
     "pipe"
    ]
   },
   "stoppipe": {
    "Resources": [
     "pipe"
    ]
   },
   "tagresource": {
    "Resources": [
     "pipe"
    ]
   },
   "untagresource": {
    "Resources": [
     "pipe"
    ]
   },
   "updatepipe": {
    "Resources": [
     "pipe"
    ]
   }
  },
  "Resources": {
   "pipe": {
    "ARNFormats": [
     "arn:${Partition}:pipes:${Region}:${Account}:pipe/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "polly": {
  "Actions": {
   "deletelexicon": {
    "Resources": [
     "lexicon"
    ]
   },
   "describevoices": {},
   "getlexicon": {
    "Resources": [
     "lexicon"
    ]
   },
   "getspeechsynthesistask": {},
   "listlexicons": {},
   "listspeechsynthesistasks": {},
   "putlexicon": {
    "Resources": [
     "lexicon"
    ]
   },
   "startspeechsynthesistask": {
    "Resources": [
     "lexicon"
    ]
   },
   "synthesizespeech": {
    "Resources": [
     "lexicon"
    ]
   }
  },
  "Resources": {
   "lexicon": {
    "ARNFormats": [
     "arn:${Partition}:polly:${Region}:${Account}:lexicon/.*"
    ]
   }
  }
 },
 "pricing": {
  "Actions": {
   "describeservices": {},
   "getattributevalues": {},
   "getpricelistfileurl": {},
   "getproducts": {},
   "listpricelists": {}
  },
  "Resources": {}
 },
 "private-networks": {
  "Actions": {
   "acknowledgeorderreceipt": {
    "Resources": [
     "order"
    ]
   },
   "activatedeviceidentifier": {
    "Resources": [
     "device-identifier"
    ]
   },
   "activatenetworksite": {
    "Resources": [
     "network-site",
     "order"
    ]
   },
   "configureaccesspoint": {
    "Resources": [
     "network-resource"
    ]
   },
   "createnetwork": {
    "Resources": [
     "network"
    ]
   },
   "createnetworksite": {
    "Resources": [
     "network"
    ]
   },
   "deactivatedeviceidentifier": {
    "Resources": [
     "device-identifier"
    ]
   },
   "deletenetwork": {
    "Resources": [
     "network"
    ]
   },
   "deletenetworksite": {
    "Resources": [
     "network-site"
    ]
   },
   "getdeviceidentifier": {
    "Resources": [
     "device-identifier"
    ]
   },
   "getnetwork": {
    "Resources": [
     "network"
    ]
   },
   "getnetworkresource": {
    "Resources": [
     "network-resource"
    ]
   },
   "getnetworksite": {
    "Resources": [
     "network-site"
    ]
   },
   "getorder": {
    "Resources": [
     "order"
    ]
   },
   "listdeviceidentifiers": {
    "Resources": [
     "network"
    ]
   },
   "listnetworkresources": {
    "Resources": [
     "network"
    ]
   },
   "listnetworks": {},
   "listnetworksites": {
    "Resources": [
     "network"
    ]
   },
   "listorders": {
    "Resources": [
     "network"
    ]
   },
   "listtagsforresource": {},
   "ping": {},
   "startnetworkresourceupdate": {
    "Resources": [
     "network-resource"
    ]
   },
   "tagresource": {
    "Resources": [
     "device-identifier",
     "network",
     "network-resource",
     "network-site",
     "order"
    ]
   },
   "untagresource": {
    "Resources": [
     "device-identifier",
     "network",
     "network-resource",
     "network-site",
     "order"
    ]
   },
   "updatenetworksite": {
    "Resources": [
     "network-site"
    ]
   },
   "updatenetworksiteplan": {
    "Resources": [
     "network-site"
    ]
   }
  },
  "Resources": {
   "device-identifier": {
    "ARNFormats": [
     "arn:${Partition}:private-networks:${Region}:${Account}:device-identifier/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "network": {
    "ARNFormats": [
     "arn:${Partition}:private-networks:${Region}:${Account}:network/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "network-resource": {
    "ARNFormats": [
     "arn:${Partition}:private-networks:${Region}:${Account}:network-resource/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "network-site": {
    "ARNFormats": [
     "arn:${Partition}:private-networks:${Region}:${Account}:network-site/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "order": {
    "ARNFormats": [
     "arn:${Partition}:private-networks:${Region}:${Account}:order/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "profile": {
  "Actions": {
   "addprofilekey": {
    "Resources": [
     "domains"
    ]
   },
   "batchgetcalculatedattributeforprofile": {
    "Resources": [
     "calculated-attributes",
     "domains"
    ]
   },
   "batchgetprofile": {
    "Resources": [
     "domains"
    ]
   },
   "createcalculatedattributedefinition": {
    "Resources": [
     "calculated-attributes",
     "domains"
    ]
   },
   "createdomain": {
    "Resources": [
     "domains"
    ]
   },
   "createeventstream": {
    "Resources": [
     "domains",
     "event-streams"
    ]
   },
   "createeventtrigger": {
    "Resources": [
     "domains",
     "event-triggers"
    ]
   },
   "createintegrationworkflow": {
    "Resources": [
     "domains",
     "integrations"
    ]
   },
   "createprofile": {
    "Resources": [
     "domains"
    ]
   },
   "createsegmentdefinition": {
    "Resources": [
     "domains",
     "segment-definitions"
    ]
   },
   "createsegmentestimate": {
    "Resources": [
     "domains"
    ]
   },
   "createsegmentsnapshot": {
    "Resources": [
     "domains",
     "segment-definitions"
    ]
   },
   "createsnapshot": {
    "Resources": [
     "domains"
    ]
   },
   "deletecalculatedattributedefinition": {
    "Resources": [
     "calculated-attributes",
     "domains"
    ]
   },
   "deletedomain": {
    "Resources": [
     "domains"
    ]
   },
   "deleteeventstream": {
    "Resources": [
     "domains",
     "event-streams"
    ]
   },
   "deleteeventtrigger": {
    "Resources": [
     "domains",
     "event-triggers"
    ]
   },
   "deleteintegration": {
    "Resources": [
     "domains",
     "integrations"
    ]
   },
   "deleteprofile": {
    "Resources": [
     "domains"
    ]
   },
   "deleteprofilekey": {
    "Resources": [
     "domains"
    ]
   },
   "deleteprofileobject": {
    "Resources": [
     "domains",
     "object-types"
    ]
   },
   "deleteprofileobjecttype": {
    "Resources": [
     "domains",
     "object-types"
    ]
   },
   "deletesegmentdefinition": {
    "Resources": [
     "domains",
     "segment-definitions"
    ]
   },
   "deleteworkflow": {
    "Resources": [
     "domains"
    ]
   },
   "detectprofileobjecttype": {
    "Resources": [
     "domains"
    ]
   },
   "getautomergingpreview": {
    "Resources": [
     "domains"
    ]
   },
   "getcalculatedattributedefinition": {
    "Resources": [
     "calculated-attributes",
     "domains"
    ]
   },
   "getcalculatedattributeforprofile": {
    "Resources": [
     "calculated-attributes",
     "domains"
    ]
   },
   "getdomain": {
    "Resources": [
     "domains"
    ]
   },
   "geteventstream": {
    "Resources": [
     "domains",
     "event-streams"
    ]
   },
   "geteventtrigger": {
    "Resources": [
     "domains",
     "event-triggers"
    ]
   },
   "getidentityresolutionjob": {
    "Resources": [
     "domains"
    ]
   },
   "getintegration": {
    "Resources": [
     "domains",
     "integrations"
    ]
   },
   "getmatches": {
    "Resources": [
     "domains"
    ]
   },
   "getprofileobjecttype": {
    "Resources": [
     "domains",
     "object-types"
    ]
   },
   "getprofileobjecttypetemplate": {},
   "getsegmentdefinition": {
    "Resources": [
     "domains",
     "segment-definitions"
    ]
   },
   "getsegmentestimate": {
    "Resources": [
     "domains"
    ]
   },
   "getsegmentmembership": {
    "Resources": [
     "domains",
     "segment-definitions"
    ]
   },
   "getsegmentsnapshot": {
    "Resources": [
     "domains",
     "segment-definitions"
    ]
   },
   "getsimilarprofiles": {
    "Resources": [
     "domains"
    ]
   },
   "getsnapshot": {
    "Resources": [
     "domains"
    ]
   },
   "getworkflow": {
    "Resources": [
     "domains"
    ]
   },
   "getworkflowsteps": {
    "Resources": [
     "domains"
    ]
   },
   "listaccountintegrations": {},
   "listcalculatedattributedefinitions": {
    "Resources": [
     "domains"
    ]
   },
   "listcalculatedattributesforprofile": {
    "Resources": [
     "domains"
    ]
   },
   "listdomains": {},
   "listeventstreams": {
    "Resources": [
     "domains"
    ]
   },
   "listeventtriggers": {
    "Resources": [
     "domains"
    ]
   },
   "listidentityresolutionjobs": {
    "Resources": [
     "domains"
    ]
   },
   "listintegrations": {
    "Resources": [
     "domains"
    ]
   },
   "listobjecttypeattributes": {
    "Resources": [
     "domains",
     "object-types"
    ]
   },
   "listprofileattributevalues": {
    "Resources": [
     "domains"
    ]
   },
   "listprofileobjects": {
    "Resources": [
     "domains",
     "object-types"
    ]
   },
   "listprofileobjecttypes": {
    "Resources": [
     "domains"
    ]
   },
   "listprofileobjecttypetemplates": {},
   "listrulebasedmatches": {
    "Resources": [
     "domains"
    ]
   },
   "listsegmentdefinitions": {
    "Resources": [
     "domains"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "calculated-attributes",
     "domains",
     "event-streams",
     "integrations",
     "object-types"
    ]
   },
   "listworkflows": {
    "Resources": [
     "domains"
    ]
   },
   "mergeprofiles": {
    "Resources": [
     "domains"
    ]
   },
   "putintegration": {
    "Resources": [
     "domains",
     "integrations"
    ]
   },
   "putprofileobject": {
    "Resources": [
     "domains",
     "object-types"
    ]
   },
   "putprofileobjecttype": {
    "Resources": [
     "domains",
     "object-types"
    ]
   },
   "searchprofiles": {
    "Resources": [
     "domains"
    ]
   },
   "tagresource": {
    "Resources": [
     "calculated-attributes",
     "domains",
     "event-streams",
     "integrations",
     "object-types"
    ]
   },
   "untagresource": {
    "Resources": [
     "calculated-attributes",
     "domains",
     "event-streams",
     "integrations",
     "object-types"
    ]
   },
   "updatecalculatedattributedefinition": {
    "Resources": [
     "calculated-attributes",
     "domains"
    ]
   },
   "updatedomain": {
    "Resources": [
     "domains"
    ]
   },
   "updateeventtrigger": {
    "Resources": [
     "domains",
     "event-triggers"
    ]
   },
   "updateprofile": {
    "Resources": [
     "domains"
    ]
   }
  },
  "Resources": {
   "calculated-attributes": {
    "ARNFormats": [
     "arn:${Partition}:profile:${Region}:${Account}:domains/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "domains": {
    "ARNFormats": [
     "arn:${Partition}:profile:${Region}:${Account}:domains/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "event-streams": {
    "ARNFormats": [
     "arn:${Partition}:profile:${Region}:${Account}:domains/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "event-triggers": {
    "ARNFormats": [
     "arn:${Partition}:profile:${Region}:${Account}:domains/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "integrations": {
    "ARNFormats": [
     "arn:${Partition}:profile:${Region}:${Account}:domains/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "object-types": {
    "ARNFormats": [
     "arn:${Partition}:profile:${Region}:${Account}:domains/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "segment-definitions": {
    "ARNFormats": [
     "arn:${Partition}:profile:${Region}:${Account}:domains/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "proton": {
  "Actions": {
   "acceptenvironmentaccountconnection": {
    "Resources": [
     "environment-account-connection"
    ]
   },
   "cancelcomponentdeployment": {
    "Resources": [
     "component"
    ]
   },
   "cancelenvironmentdeployment": {
    "Resources": [
     "environment"
    ]
   },
   "cancelserviceinstancedeployment": {
    "Resources": [
     "service-instance"
    ]
   },
   "cancelservicepipelinedeployment": {
    "Resources": [
     "service"
    ]
   },
   "createcomponent": {
    "Resources": [
     "component"
    ]
   },
   "createenvironment": {
    "Resources": [
     "environment"
    ]
   },
   "createenvironmentaccountconnection": {},
   "createenvironmenttemplate": {
    "Resources": [
     "environment-template"
    ]
   },
   "createenvironmenttemplatemajorversion": {
    "Resources": [
     "environment-template"
    ]
   },
   "createenvironmenttemplateminorversion": {
    "Resources": [
     "environment-template"
    ]
   },
   "createenvironmenttemplateversion": {
    "Resources": [
     "environment-template"
    ]
   },
   "createrepository": {
    "Resources": [
     "repository"
    ]
   },
   "createservice": {
    "Resources": [
     "service"
    ]
   },
   "createserviceinstance": {
    "Resources": [
     "service-instance"
    ]
   },
   "createservicesyncconfig": {},
   "createservicetemplate": {
    "Resources": [
     "service-template"
    ]
   },
   "createservicetemplatemajorversion": {
    "Resources": [
     "service-template"
    ]
   },
   "createservicetemplateminorversion": {
    "Resources": [
     "service-template"
    ]
   },
   "createservicetemplateversion": {
    "Resources": [
     "service-template"
    ]
   },
   "createtemplatesyncconfig": {},
   "deleteaccountroles": {},
   "deletecomponent": {
    "Resources": [
     "component"
    ]
   },
   "deletedeployment": {
    "Resources": [
     "deployment"
    ]
   },
   "deleteenvironment": {
    "Resources": [
     "environment"
    ]
   },
   "deleteenvironmentaccountconnection": {
    "Resources": [
     "environment-account-connection"
    ]
   },
   "deleteenvironmenttemplate": {
    "Resources": [
     "environment-template"
    ]
   },
   "deleteenvironmenttemplatemajorversion": {
    "Resources": [
     "environment-template"
    ]
   },
   "deleteenvironmenttemplateminorversion": {
    "Resources": [
     "environment-template"
    ]
   },
   "deleteenvironmenttemplateversion": {
    "Resources": [
     "environment-template"
    ]
   },
   "deleterepository": {
    "Resources": [
     "repository"
    ]
   },
   "deleteservice": {
    "Resources": [
     "service"
    ]
   },
   "deleteservicesyncconfig": {},
   "deleteservicetemplate": {
    "Resources": [
     "service-template"
    ]
   },
   "deleteservicetemplatemajorversion": {
    "Resources": [
     "service-template"
    ]
   },
   "deleteservicetemplateminorversion": {
    "Resources": [
     "service-template"
    ]
   },
   "deleteservicetemplateversion": {
    "Resources": [
     "service-template"
    ]
   },
   "deletetemplatesyncconfig": {},
   "getaccountroles": {},
   "getaccountsettings": {},
   "getcomponent": {
    "Resources": [
     "component"
    ]
   },
   "getdeployment": {
    "Resources": [
     "deployment"
    ]
   },
   "getenvironment": {
    "Resources": [
     "environment"
    ]
   },
   "getenvironmentaccountconnection": {
    "Resources": [
     "environment-account-connection"
    ]
   },
   "getenvironmenttemplate": {
    "Resources": [
     "environment-template"
    ]
   },
   "getenvironmenttemplatemajorversion": {
    "Resources": [
     "environment-template"
    ]
   },
   "getenvironmenttemplateminorversion": {
    "Resources": [
     "environment-template"
    ]
   },
   "getenvironmenttemplateversion": {
    "Resources": [
     "environment-template"
    ]
   },
   "getrepository": {
    "Resources": [
     "repository"
    ]
   },
   "getrepositorysyncstatus": {},
   "getresourcessummary": {},
   "getresourcetemplateversionstatuscounts": {},
   "getservice": {
    "Resources": [
     "service"
    ]
   },
   "getserviceinstance": {
    "Resources": [
     "service-instance"
    ]
   },
   "getserviceinstancesyncstatus": {},
   "getservicesyncblockersummary": {},
   "getservicesyncconfig": {},
   "getservicetemplate": {
    "Resources": [
     "service-template"
    ]
   },
   "getservicetemplatemajorversion": {
    "Resources": [
     "service-template"
    ]
   },
   "getservicetemplateminorversion": {
    "Resources": [
     "service-template"
    ]
   },
   "getservicetemplateversion": {
    "Resources": [
     "service-template"
    ]
   },
   "gettemplatesyncconfig": {},
   "gettemplatesyncstatus": {},
   "listcomponentoutputs": {
    "Resources": [
     "component",
     "deployment"
    ]
   },
   "listcomponentprovisionedresources": {
    "Resources": [
     "component"
    ]
   },
   "listcomponents": {
    "Resources": [
     "environment",
     "service",
     "service-instance"
    ]
   },
   "listdeployments": {},
   "listenvironmentaccountconnections": {},
   "listenvironmentoutputs": {
    "Resources": [
     "deployment",
     "environment"
    ]
   },
   "listenvironmentprovisionedresources": {
    "Resources": [
     "environment"
    ]
   },
   "listenvironments": {},
   "listenvironmenttemplatemajorversions": {
    "Resources": [
     "environment-template"
    ]
   },
   "listenvironmenttemplateminorversions": {
    "Resources": [
     "environment-template"
    ]
   },
   "listenvironmenttemplates": {},
   "listenvironmenttemplateversions": {
    "Resources": [
     "environment-template"
    ]
   },
   "listrepositories": {},
   "listrepositorysyncdefinitions": {},
   "listserviceinstanceoutputs": {
    "Resources": [
     "deployment",
     "service",
     "service-instance"
    ]
   },
   "listserviceinstanceprovisionedresources": {
    "Resources": [
     "service",
     "service-instance"
    ]
   },
   "listserviceinstances": {},
   "listservicepipelineoutputs": {
    "Resources": [
     "deployment",
     "service"
    ]
   },
   "listservicepipelineprovisionedresources": {
    "Resources": [
     "service"
    ]
   },
   "listservices": {},
   "listservicetemplatemajorversions": {
    "Resources": [
     "service-template"
    ]
   },
   "listservicetemplateminorversions": {
    "Resources": [
     "service-template"
    ]
   },
   "listservicetemplates": {},
   "listservicetemplateversions": {
    "Resources": [
     "service-template"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "component",
     "environment",
     "environment-account-connection",
     "environment-template",
     "environment-template-major-version",
     "environment-template-minor-version",
     "environment-template-version",
     "repository",
     "service",
     "service-instance",
     "service-template",
     "service-template-major-version",
     "service-template-minor-version",
     "service-template-version"
    ]
   },
   "notifyresourcedeploymentstatuschange": {
    "Resources": [
     "environment",
     "service-instance"
    ]
   },
   "rejectenvironmentaccountconnection": {
    "Resources": [
     "environment-account-connection"
    ]
   },
   "tagresource": {
    "Resources": [
     "component",
     "environment",
     "environment-account-connection",
     "environment-template",
     "environment-template-major-version",
     "environment-template-minor-version",
     "environment-template-version",
     "repository",
     "service",
     "service-instance",
     "service-template",
     "service-template-major-version",
     "service-template-minor-version",
     "service-template-version"
    ]
   },
   "untagresource": {
    "Resources": [
     "component",
     "environment",
     "environment-account-connection",
     "environment-template",
     "environment-template-major-version",
     "environment-template-minor-version",
     "environment-template-version",
     "repository",
     "service",
     "service-instance",
     "service-template",
     "service-template-major-version",
     "service-template-minor-version",
     "service-template-version"
    ]
   },
   "updateaccountroles": {},
   "updateaccountsettings": {},
   "updatecomponent": {
    "Resources": [
     "component"
    ]
   },
   "updateenvironment": {
    "Resources": [
     "environment"
    ]
   },
   "updateenvironmentaccountconnection": {
    "Resources": [
     "environment-account-connection"
    ]
   },
   "updateenvironmenttemplate": {
    "Resources": [
     "environment-template"
    ]
   },
   "updateenvironmenttemplatemajorversion": {
    "Resources": [
     "environment-template"
    ]
   },
   "updateenvironmenttemplateminorversion": {
    "Resources": [
     "environment-template"
    ]
   },
   "updateenvironmenttemplateversion": {
    "Resources": [
     "environment-template"
    ]
   },
   "updateservice": {
    "Resources": [
     "service"
    ]
   },
   "updateserviceinstance": {
    "Resources": [
     "service-instance"
    ]
   },
   "updateservicepipeline": {
    "Resources": [
     "service"
    ]
   },
   "updateservicesyncblocker": {},
   "updateservicesyncconfig": {},
   "updateservicetemplate": {
    "Resources": [
     "service-template"
    ]
   },
   "updateservicetemplatemajorversion": {
    "Resources": [
     "service-template"
    ]
   },
   "updateservicetemplateminorversion": {
    "Resources": [
     "service-template"
    ]
   },
   "updateservicetemplateversion": {
    "Resources": [
     "service-template"
    ]
   },
   "updatetemplatesyncconfig": {}
  },
  "Resources": {
   "component": {
    "ARNFormats": [
     "arn:${Partition}:proton:${Region}:${Account}:component/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "deployment": {
    "ARNFormats": [
     "arn:${Partition}:proton:${Region}:${Account}:deployment/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "environment": {
    "ARNFormats": [
     "arn:${Partition}:proton:${Region}:${Account}:environment/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "environment-account-connection": {
    "ARNFormats": [
     "arn:${Partition}:proton:${Region}:${Account}:environment-account-connection/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "environment-template": {
    "ARNFormats": [
     "arn:${Partition}:proton:${Region}:${Account}:environment-template/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "environment-template-major-version": {
    "ARNFormats": [
     "arn:${Partition}:proton:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "environment-template-minor-version": {
    "ARNFormats": [
     "arn:${Partition}:proton:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "environment-template-version": {
    "ARNFormats": [
     "arn:${Partition}:proton:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "repository": {
    "ARNFormats": [
     "arn:${Partition}:proton:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "service": {
    "ARNFormats": [
     "arn:${Partition}:proton:${Region}:${Account}:service/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "service-instance": {
    "ARNFormats": [
     "arn:${Partition}:proton:${Region}:${Account}:service/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "service-template": {
    "ARNFormats": [
     "arn:${Partition}:proton:${Region}:${Account}:service-template/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "service-template-major-version": {
    "ARNFormats": [
     "arn:${Partition}:proton:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "service-template-minor-version": {
    "ARNFormats": [
     "arn:${Partition}:proton:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "service-template-version": {
    "ARNFormats": [
     "arn:${Partition}:proton:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "purchase-orders": {
  "Actions": {
   "addpurchaseorder": {
    "Resources": [
     "purchase-order"
    ]
   },
   "deletepurchaseorder": {
    "Resources": [
     "purchase-order"
    ]
   },
   "getconsoleactionsetenforced": {},
   "getpurchaseorder": {
    "Resources": [
     "purchase-order"
    ]
   },
   "listpurchaseorderinvoices": {
    "Resources": [
     "purchase-order"
    ]
   },
   "listpurchaseorders": {},
   "listtagsforresource": {
    "Resources": [
     "purchase-order"
    ]
   },
   "modifypurchaseorders": {
    "Resources": [
     "purchase-order"
    ]
   },
   "tagresource": {
    "Resources": [
     "purchase-order"
    ]
   },
   "untagresource": {
    "Resources": [
     "purchase-order"
    ]
   },
   "updateconsoleactionsetenforced": {},
   "updatepurchaseorder": {
    "Resources": [
     "purchase-order"
    ]
   },
   "updatepurchaseorderstatus": {
    "Resources": [
     "purchase-order"
    ]
   },
   "viewpurchaseorders": {
    "Resources": [
     "purchase-order"
    ]
   }
  },
  "Resources": {
   "purchase-order": {
    "ARNFormats": [
     "arn:${Partition}:purchase-orders::${Account}:purchase-order/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "q": {
  "Actions": {
   "associateconnectorresource": {},
   "createassignment": {
    "Resources": [
     "profile"
    ]
   },
   "createauthgrant": {},
   "createoauthappconnection": {},
   "createplugin": {
    "Resources": [
     "plugin"
    ]
   },
   "deleteassignment": {
    "Resources": [
     "profile"
    ]
   },
   "deleteplugin": {
    "Resources": [
     "plugin"
    ]
   },
   "generatecodefromcommands": {},
   "getconnector": {},
   "getconversation": {},
   "getidentitymetadata": {},
   "getplugin": {
    "Resources": [
     "plugin"
    ]
   },
   "gettroubleshootingresults": {},
   "listconversations": {},
   "listdashboardmetrics": {},
   "listpluginproviders": {},
   "listplugins": {
    "Resources": [
     "plugin"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "plugin"
    ]
   },
   "passrequest": {},
   "rejectconnector": {},
   "sendevent": {},
   "sendmessage": {},
   "startconversation": {},
   "starttroubleshootinganalysis": {},
   "starttroubleshootingresolutionexplanation": {},
   "tagresource": {
    "Resources": [
     "plugin"
    ]
   },
   "untagresource": {
    "Resources": [
     "plugin"
    ]
   },
   "updateauthgrant": {},
   "updateoauthappconnection": {},
   "updatetroubleshootingcommandresult": {},
   "useplugin": {
    "Resources": [
     "plugin"
    ]
   }
  },
  "Resources": {
   "plugin": {
    "ARNFormats": [
     "arn:${Partition}:qdeveloper:${Region}:${Account}:plugin/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "profile": {
    "ARNFormats": [
     "arn:${Partition}:codewhisperer:${Region}:${Account}:profile/.*"
    ]
   }
  }
 },
 "qapps": {
  "Actions": {
   "associatelibraryitemreview": {
    "Resources": [
     "qapp"
    ]
   },
   "associateqappwithuser": {
    "Resources": [
     "application",
     "qapp"
    ]
   },
   "batchcreatecategory": {
    "Resources": [
     "application"
    ]
   },
   "batchdeletecategory": {
    "Resources": [
     "application"
    ]
   },
   "batchupdatecategory": {
    "Resources": [
     "application"
    ]
   },
   "copyqapp": {
    "Resources": [
     "application",
     "qapp"
    ]
   },
   "createlibraryitem": {
    "Resources": [
     "application",
     "qapp"
    ]
   },
   "createlibraryitemreview": {
    "Resources": [
     "application",
     "qapp"
    ]
   },
   "createpresignedurl": {
    "Resources": [
     "qapp",
     "qapp-session"
    ]
   },
   "createqapp": {
    "Resources": [
     "application"
    ]
   },
   "createsubscriptiontoken": {
    "Resources": [
     "application"
    ]
   },
   "deletelibraryitem": {
    "Resources": [
     "application",
     "qapp"
    ]
   },
   "deleteqapp": {
    "Resources": [
     "application",
     "qapp"
    ]
   },
   "describeqapppermissions": {
    "Resources": [
     "application",
     "qapp"
    ]
   },
   "disassociatelibraryitemreview": {
    "Resources": [
     "qapp"
    ]
   },
   "disassociateqappfromuser": {
    "Resources": [
     "application",
     "qapp"
    ]
   },
   "exportqappsessiondata": {
    "Resources": [
     "qapp-session"
    ]
   },
   "getlibraryitem": {
    "Resources": [
     "application",
     "qapp"
    ]
   },
   "getqapp": {
    "Resources": [
     "application",
     "qapp"
    ]
   },
   "getqappsession": {
    "Resources": [
     "qapp-session"
    ]
   },
   "getqappsessionmetadata": {
    "Resources": [
     "qapp-session"
    ]
   },
   "importdocument": {
    "Resources": [
     "qapp",
     "qapp-session"
    ]
   },
   "importdocumenttoqapp": {
    "Resources": [
     "application",
     "qapp"
    ]
   },
   "importdocumenttoqappsession": {
    "Resources": [
     "application",
     "qapp-session"
    ]
   },
   "listcategories": {
    "Resources": [
     "application"
    ]
   },
   "listlibraryitems": {
    "Resources": [
     "application"
    ]
   },
   "listqapps": {
    "Resources": [
     "application"
    ]
   },
   "listqappsessiondata": {
    "Resources": [
     "qapp-session"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "qapp",
     "qapp-session"
    ]
   },
   "predictproblemstatementfromconversation": {
    "Resources": [
     "application"
    ]
   },
   "predictqapp": {
    "Resources": [
     "application"
    ]
   },
   "predictqappfromproblemstatement": {
    "Resources": [
     "application"
    ]
   },
   "startqappsession": {
    "Resources": [
     "application",
     "qapp"
    ]
   },
   "stopqappsession": {
    "Resources": [
     "application",
     "qapp-session"
    ]
   },
   "tagresource": {
    "Resources": [
     "qapp",
     "qapp-session"
    ]
   },
   "untagresource": {
    "Resources": [
     "qapp",
     "qapp-session"
    ]
   },
   "updatelibraryitem": {
    "Resources": [
     "application",
     "qapp"
    ]
   },
   "updatelibraryitemmetadata": {
    "Resources": [
     "qapp"
    ]
   },
   "updateqapp": {
    "Resources": [
     "application",
     "qapp"
    ]
   },
   "updateqapppermissions": {
    "Resources": [
     "application",
     "qapp"
    ]
   },
   "updateqappsession": {
    "Resources": [
     "qapp-session"
    ]
   },
   "updateqappsessionmetadata": {
    "Resources": [
     "qapp-session"
    ]
   }
  },
  "Resources": {
   "application": {
    "ARNFormats": [
     "arn:${Partition}:qbusiness:${Region}:${Account}:application/.*"
    ]
   },
   "qapp": {
    "ARNFormats": [
     "arn:${Partition}:qapps:${Region}:${Account}:application/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "qapp-session": {
    "ARNFormats": [
     "arn:${Partition}:qapps:${Region}:${Account}:application/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "qbusiness": {
  "Actions": {
   "adduserlicenses": {},
   "allowvendedlogdeliveryforresource": {
    "Resources": [
     "application"
    ]
   },
   "associatepermission": {
    "Resources": [
     "application"
    ]
   },
   "batchdeletedocument": {
    "Resources": [
     "application",
     "index"
    ]
   },
   "batchputdocument": {
    "Resources": [
     "application",
     "index"
    ]
   },
   "cancelsubscription": {
    "Resources": [
     "application",
     "subscription"
    ]
   },
   "chat": {
    "Resources": [
     "application"
    ]
   },
   "chatsync": {
    "Resources": [
     "application"
    ]
   },
   "createapplication": {},
   "createdataaccessor": {
    "Resources": [
     "application"
    ]
   },
   "createdatasource": {
    "Resources": [
     "application",
     "index"
    ]
   },
   "createindex": {
    "Resources": [
     "application"
    ]
   },
   "createintegration": {
    "Resources": [
     "application"
    ]
   },
   "createlicense": {},
   "createplugin": {
    "Resources": [
     "application"
    ]
   },
   "createretriever": {
    "Resources": [
     "application"
    ]
   },
   "createsubscription": {
    "Resources": [
     "application"
    ]
   },
   "createuser": {
    "Resources": [
     "application"
    ]
   },
   "createwebexperience": {
    "Resources": [
     "application"
    ]
   },
   "deleteapplication": {
    "Resources": [
     "application"
    ]
   },
   "deleteattachment": {
    "Resources": [
     "application"
    ]
   },
   "deletechatcontrolsconfiguration": {
    "Resources": [
     "application"
    ]
   },
   "deleteconversation": {
    "Resources": [
     "application"
    ]
   },
   "deletedataaccessor": {
    "Resources": [
     "application",
     "data-accessor"
    ]
   },
   "deletedatasource": {
    "Resources": [
     "application",
     "data-source",
     "index"
    ]
   },
   "deletegroup": {
    "Resources": [
     "application",
     "index"
    ]
   },
   "deleteindex": {
    "Resources": [
     "application",
     "index"
    ]
   },
   "deleteintegration": {
    "Resources": [
     "application",
     "integration"
    ]
   },
   "deleteplugin": {
    "Resources": [
     "application",
     "plugin"
    ]
   },
   "deleteretriever": {
    "Resources": [
     "application",
     "retriever"
    ]
   },
   "deleteuser": {
    "Resources": [
     "application"
    ]
   },
   "deletewebexperience": {
    "Resources": [
     "application",
     "web-experience"
    ]
   },
   "disableaclondatasource": {
    "Resources": [
     "application"
    ]
   },
   "disassociatepermission": {
    "Resources": [
     "application"
    ]
   },
   "getapplication": {
    "Resources": [
     "application"
    ]
   },
   "getchatcontrolsconfiguration": {
    "Resources": [
     "application"
    ]
   },
   "getdataaccessor": {
    "Resources": [
     "application",
     "data-accessor"
    ]
   },
   "getdatasource": {
    "Resources": [
     "application",
     "data-source",
     "index"
    ]
   },
   "getgroup": {
    "Resources": [
     "application",
     "index"
    ]
   },
   "getindex": {
    "Resources": [
     "application",
     "index"
    ]
   },
   "getintegration": {
    "Resources": [
     "application",
     "integration"
    ]
   },
   "getlicense": {
    "Resources": [
     "user-license"
    ]
   },
   "getmedia": {
    "Resources": [
     "application"
    ]
   },
   "getplugin": {
    "Resources": [
     "application",
     "plugin"
    ]
   },
   "getpolicy": {
    "Resources": [
     "application"
    ]
   },
   "getretriever": {
    "Resources": [
     "application",
     "retriever"
    ]
   },
   "getuser": {
    "Resources": [
     "application"
    ]
   },
   "getwebexperience": {
    "Resources": [
     "application",
     "web-experience"
    ]
   },
   "listapplications": {},
   "listattachments": {
    "Resources": [
     "application"
    ]
   },
   "listconversations": {
    "Resources": [
     "application"
    ]
   },
   "listdataaccessors": {
    "Resources": [
     "application"
    ]
   },
   "listdatasources": {
    "Resources": [
     "application",
     "index"
    ]
   },
   "listdatasourcesyncjobs": {
    "Resources": [
     "application",
     "data-source",
     "index"
    ]
   },
   "listdocuments": {
    "Resources": [
     "application",
     "index"
    ]
   },
   "listgroups": {
    "Resources": [
     "application",
     "index"
    ]
   },
   "listindices": {
    "Resources": [
     "application"
    ]
   },
   "listintegrations": {
    "Resources": [
     "application"
    ]
   },
   "listmessages": {
    "Resources": [
     "application"
    ]
   },
   "listpluginactions": {
    "Resources": [
     "application",
     "plugin"
    ]
   },
   "listplugins": {
    "Resources": [
     "application"
    ]
   },
   "listplugintypeactions": {},
   "listplugintypemetadata": {},
   "listretrievers": {
    "Resources": [
     "application"
    ]
   },
   "listsubscriptions": {
    "Resources": [
     "application"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "application",
     "data-accessor",
     "data-source",
     "index",
     "integration",
     "plugin",
     "retriever",
     "web-experience"
    ]
   },
   "listuserlicenses": {},
   "listwebexperiences": {
    "Resources": [
     "application"
    ]
   },
   "putfeedback": {
    "Resources": [
     "application"
    ]
   },
   "putgroup": {
    "Resources": [
     "application",
     "index"
    ]
   },
   "putresourcepolicy": {
    "Resources": [
     "application"
    ]
   },
   "removeuserlicenses": {},
   "searchrelevantcontent": {
    "Resources": [
     "application"
    ]
   },
   "startdatasourcesyncjob": {
    "Resources": [
     "application",
     "data-source",
     "index"
    ]
   },
   "startdeployment": {
    "Resources": [
     "application",
     "integration"
    ]
   },
   "stopdatasourcesyncjob": {
    "Resources": [
     "application",
     "data-source",
     "index"
    ]
   },
   "tagresource": {
    "Resources": [
     "application",
     "data-accessor",
     "data-source",
     "index",
     "integration",
     "plugin",
     "retriever",
     "web-experience"
    ]
   },
   "untagresource": {
    "Resources": [
     "application",
     "data-accessor",
     "data-source",
     "index",
     "integration",
     "plugin",
     "retriever",
     "web-experience"
    ]
   },
   "updateapplication": {
    "Resources": [
     "application"
    ]
   },
   "updatechatcontrolsconfiguration": {
    "Resources": [
     "application"
    ]
   },
   "updatedataaccessor": {
    "Resources": [
     "application",
     "data-accessor"
    ]
   },
   "updatedatasource": {
    "Resources": [
     "application",
     "data-source",
     "index"
    ]
   },
   "updateindex": {
    "Resources": [
     "application",
     "index"
    ]
   },
   "updateintegration": {
    "Resources": [
     "application",
     "integration"
    ]
   },
   "updateplugin": {
    "Resources": [
     "application",
     "plugin"
    ]
   },
   "updateretriever": {
    "Resources": [
     "application",
     "retriever"
    ]
   },
   "updatesubscription": {
    "Resources": [
     "application",
     "subscription"
    ]
   },
   "updateuser": {
    "Resources": [
     "application"
    ]
   },
   "updatewebexperience": {
    "Resources": [
     "application",
     "web-experience"
    ]
   }
  },
  "Resources": {
   "application": {
    "ARNFormats": [
     "arn:${Partition}:qbusiness:${Region}:${Account}:application/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "data-accessor": {
    "ARNFormats": [
     "arn:${Partition}:qbusiness:${Region}:${Account}:application/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "data-source": {
    "ARNFormats": [
     "arn:${Partition}:qbusiness:${Region}:${Account}:application/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "index": {
    "ARNFormats": [
     "arn:${Partition}:qbusiness:${Region}:${Account}:application/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "integration": {
    "ARNFormats": [
     "arn:${Partition}:qbusiness:${Region}:${Account}:application/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "plugin": {
    "ARNFormats": [
     "arn:${Partition}:qbusiness:${Region}:${Account}:application/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "retriever": {
    "ARNFormats": [
     "arn:${Partition}:qbusiness:${Region}:${Account}:application/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "subscription": {
    "ARNFormats": [
     "arn:${Partition}:qbusiness:${Region}:${Account}:application/.*"
    ]
   },
   "user-license": {
    "ARNFormats": [
     "arn:${Partition}:qbusiness:${Region}:${Account}:application/.*"
    ]
   },
   "web-experience": {
    "ARNFormats": [
     "arn:${Partition}:qbusiness:${Region}:${Account}:application/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "qdeveloper": {
  "Actions": {
   "exportartifact": {
    "Resources": [
     "codeTransformation"
    ]
   },
   "importartifact": {
    "Resources": [
     "codeTransformation"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "codeTransformation"
    ]
   },
   "startagentsession": {},
   "tagresource": {
    "Resources": [
     "codeTransformation"
    ]
   },
   "transformcode": {
    "Resources": [
     "codeTransformation"
    ]
   },
   "untagresource": {
    "Resources": [
     "codeTransformation"
    ]
   }
  },
  "Resources": {
   "codetransformation": {
    "ARNFormats": [
     "arn:${Partition}:qdeveloper:${Region}:${Account}:codeTransformation/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "qldb": {
  "Actions": {
   "canceljournalkinesisstream": {
    "Resources": [
     "stream"
    ]
   },
   "createledger": {
    "Resources": [
     "ledger"
    ]
   },
   "deleteledger": {
    "Resources": [
     "ledger"
    ]
   },
   "describejournalkinesisstream": {
    "Resources": [
     "stream"
    ]
   },
   "describejournals3export": {
    "Resources": [
     "ledger"
    ]
   },
   "describeledger": {
    "Resources": [
     "ledger"
    ]
   },
   "executestatement": {
    "Resources": [
     "ledger"
    ]
   },
   "exportjournaltos3": {
    "Resources": [
     "ledger"
    ]
   },
   "getblock": {
    "Resources": [
     "ledger"
    ]
   },
   "getdigest": {
    "Resources": [
     "ledger"
    ]
   },
   "getrevision": {
    "Resources": [
     "ledger"
    ]
   },
   "insertsampledata": {
    "Resources": [
     "ledger"
    ]
   },
   "listjournalkinesisstreamsforledger": {
    "Resources": [
     "stream"
    ]
   },
   "listjournals3exports": {},
   "listjournals3exportsforledger": {
    "Resources": [
     "ledger"
    ]
   },
   "listledgers": {},
   "listtagsforresource": {
    "Resources": [
     "catalog",
     "ledger",
     "stream",
     "table"
    ]
   },
   "partiqlcreateindex": {
    "Resources": [
     "table"
    ]
   },
   "partiqlcreatetable": {
    "Resources": [
     "table"
    ]
   },
   "partiqldelete": {
    "Resources": [
     "table"
    ]
   },
   "partiqldropindex": {
    "Resources": [
     "table"
    ]
   },
   "partiqldroptable": {
    "Resources": [
     "table"
    ]
   },
   "partiqlhistoryfunction": {
    "Resources": [
     "table"
    ]
   },
   "partiqlinsert": {
    "Resources": [
     "table"
    ]
   },
   "partiqlredact": {
    "Resources": [
     "table"
    ]
   },
   "partiqlselect": {
    "Resources": [
     "catalog",
     "table"
    ]
   },
   "partiqlundroptable": {
    "Resources": [
     "table"
    ]
   },
   "partiqlupdate": {
    "Resources": [
     "table"
    ]
   },
   "sendcommand": {
    "Resources": [
     "ledger"
    ]
   },
   "showcatalog": {
    "Resources": [
     "ledger"
    ]
   },
   "streamjournaltokinesis": {
    "Resources": [
     "stream"
    ]
   },
   "tagresource": {
    "Resources": [
     "catalog",
     "ledger",
     "stream",
     "table"
    ]
   },
   "untagresource": {
    "Resources": [
     "catalog",
     "ledger",
     "stream",
     "table"
    ]
   },
   "updateledger": {
    "Resources": [
     "ledger"
    ]
   },
   "updateledgerpermissionsmode": {
    "Resources": [
     "ledger"
    ]
   }
  },
  "Resources": {
   "catalog": {
    "ARNFormats": [
     "arn:${Partition}:qldb:${Region}:${Account}:ledger/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "ledger": {
    "ARNFormats": [
     "arn:${Partition}:qldb:${Region}:${Account}:ledger/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "stream": {
    "ARNFormats": [
     "arn:${Partition}:qldb:${Region}:${Account}:stream/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "table": {
    "ARNFormats": [
     "arn:${Partition}:qldb:${Region}:${Account}:ledger/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "quicksight": {
  "Actions": {
   "accountconfigurations": {},
   "batchcreatetopicreviewedanswer": {
    "Resources": [
     "topic"
    ]
   },
   "batchdeletetopicreviewedanswer": {
    "Resources": [
     "topic"
    ]
   },
   "cancelingestion": {
    "Resources": [
     "ingestion"
    ]
   },
   "createaccountcustomization": {},
   "createaccountsubscription": {},
   "createadmin": {
    "Resources": [
     "user"
    ]
   },
   "createanalysis": {
    "Resources": [
     "analysis"
    ]
   },
   "createbrand": {
    "Resources": [
     "brand"
    ]
   },
   "createcustompermissions": {
    "Resources": [
     "custompermissions"
    ]
   },
   "createdashboard": {
    "Resources": [
     "dashboard"
    ]
   },
   "createdataset": {
    "Resources": [
     "datasource"
    ]
   },
   "createdatasource": {},
   "createemailcustomizationtemplate": {
    "Resources": [
     "emailCustomizationTemplate"
    ]
   },
   "createfolder": {
    "Resources": [
     "folder"
    ]
   },
   "createfoldermembership": {
    "Resources": [
     "analysis",
     "dashboard",
     "dataset",
     "folder"
    ]
   },
   "creategroup": {
    "Resources": [
     "group"
    ]
   },
   "creategroupmembership": {
    "Resources": [
     "group"
    ]
   },
   "createiampolicyassignment": {
    "Resources": [
     "assignment"
    ]
   },
   "createingestion": {
    "Resources": [
     "ingestion"
    ]
   },
   "createnamespace": {
    "Resources": [
     "namespace"
    ]
   },
   "createreader": {
    "Resources": [
     "user"
    ]
   },
   "createrefreshschedule": {
    "Resources": [
     "refreshschedule"
    ]
   },
   "createrolemembership": {},
   "createtemplate": {
    "Resources": [
     "template"
    ]
   },
   "createtemplatealias": {
    "Resources": [
     "template"
    ]
   },
   "createtheme": {
    "Resources": [
     "theme"
    ]
   },
   "createthemealias": {
    "Resources": [
     "theme"
    ]
   },
   "createtopic": {
    "Resources": [
     "dataset"
    ]
   },
   "createtopicrefreshschedule": {
    "Resources": [
     "topic"
    ]
   },
   "createuser": {
    "Resources": [
     "user"
    ]
   },
   "createvpcconnection": {},
   "deleteaccountcustomization": {
    "Resources": [
     "customization"
    ]
   },
   "deleteaccountsubscription": {
    "Resources": [
     "account"
    ]
   },
   "deleteanalysis": {
    "Resources": [
     "analysis"
    ]
   },
   "deletebrand": {
    "Resources": [
     "brand"
    ]
   },
   "deletebrandassignment": {},
   "deletecustompermissions": {},
   "deletedashboard": {
    "Resources": [
     "dashboard"
    ]
   },
   "deletedataset": {
    "Resources": [
     "dataset"
    ]
   },
   "deletedatasetrefreshproperties": {
    "Resources": [
     "dataset"
    ]
   },
   "deletedatasource": {
    "Resources": [
     "datasource"
    ]
   },
   "deletedefaultqbusinessapplication": {},
   "deleteemailcustomizationtemplate": {
    "Resources": [
     "emailCustomizationTemplate"
    ]
   },
   "deletefolder": {
    "Resources": [
     "folder"
    ]
   },
   "deletefoldermembership": {
    "Resources": [
     "analysis",
     "dashboard",
     "dataset",
     "folder"
    ]
   },
   "deletegroup": {
    "Resources": [
     "group"
    ]
   },
   "deletegroupmembership": {
    "Resources": [
     "group"
    ]
   },
   "deleteiampolicyassignment": {
    "Resources": [
     "assignment"
    ]
   },
   "deleteidentitypropagationconfig": {},
   "deletenamespace": {
    "Resources": [
     "namespace"
    ]
   },
   "deleterefreshschedule": {
    "Resources": [
     "refreshschedule"
    ]
   },
   "deleterolecustompermission": {},
   "deleterolemembership": {},
   "deletetemplate": {
    "Resources": [
     "template"
    ]
   },
   "deletetemplatealias": {
    "Resources": [
     "template"
    ]
   },
   "deletetheme": {
    "Resources": [
     "theme"
    ]
   },
   "deletethemealias": {
    "Resources": [
     "theme"
    ]
   },
   "deletetopic": {
    "Resources": [
     "topic"
    ]
   },
   "deletetopicrefreshschedule": {
    "Resources": [
     "topic"
    ]
   },
   "deleteuser": {
    "Resources": [
     "user"
    ]
   },
   "deleteuserbyprincipalid": {
    "Resources": [
     "user"
    ]
   },
   "deleteusercustompermission": {
    "Resources": [
     "user"
    ]
   },
   "deletevpcconnection": {
    "Resources": [
     "vpcconnection"
    ]
   },
   "describeaccountcustomization": {
    "Resources": [
     "customization"
    ]
   },
   "describeaccountsettings": {},
   "describeaccountsubscription": {
    "Resources": [
     "account"
    ]
   },
   "describeanalysis": {
    "Resources": [
     "analysis"
    ]
   },
   "describeanalysispermissions": {
    "Resources": [
     "analysis"
    ]
   },
   "describeassetbundleexportjob": {
    "Resources": [
     "assetBundleExportJob"
    ]
   },
   "describeassetbundleimportjob": {
    "Resources": [
     "assetBundleImportJob"
    ]
   },
   "describebrand": {
    "Resources": [
     "brand"
    ]
   },
   "describebrandassignment": {},
   "describebrandpublishedversion": {
    "Resources": [
     "brand"
    ]
   },
   "describecustompermissions": {
    "Resources": [
     "custompermissions"
    ]
   },
   "describedashboard": {
    "Resources": [
     "dashboard"
    ]
   },
   "describedashboardpermissions": {
    "Resources": [
     "dashboard"
    ]
   },
   "describedashboardsnapshotjob": {
    "Resources": [
     "dashboardSnapshotJob"
    ]
   },
   "describedashboardsnapshotjobresult": {
    "Resources": [
     "dashboardSnapshotJob"
    ]
   },
   "describedashboardsqaconfiguration": {},
   "describedataset": {
    "Resources": [
     "dataset"
    ]
   },
   "describedatasetpermissions": {
    "Resources": [
     "dataset"
    ]
   },
   "describedatasetrefreshproperties": {
    "Resources": [
     "dataset"
    ]
   },
   "describedatasource": {
    "Resources": [
     "datasource"
    ]
   },
   "describedatasourcepermissions": {
    "Resources": [
     "datasource"
    ]
   },
   "describedefaultqbusinessapplication": {},
   "describeemailcustomizationtemplate": {
    "Resources": [
     "emailCustomizationTemplate"
    ]
   },
   "describefolder": {
    "Resources": [
     "folder"
    ]
   },
   "describefolderpermissions": {
    "Resources": [
     "folder"
    ]
   },
   "describefolderresolvedpermissions": {
    "Resources": [
     "folder"
    ]
   },
   "describegroup": {
    "Resources": [
     "group"
    ]
   },
   "describegroupmembership": {
    "Resources": [
     "group"
    ]
   },
   "describeiampolicyassignment": {
    "Resources": [
     "assignment"
    ]
   },
   "describeingestion": {
    "Resources": [
     "ingestion"
    ]
   },
   "describeiprestriction": {},
   "describekeyregistration": {},
   "describenamespace": {
    "Resources": [
     "namespace"
    ]
   },
   "describeqpersonalizationconfiguration": {},
   "describequicksightqsearchconfiguration": {},
   "describerefreshschedule": {
    "Resources": [
     "refreshschedule"
    ]
   },
   "describerolecustompermission": {},
   "describetemplate": {
    "Resources": [
     "template"
    ]
   },
   "describetemplatealias": {
    "Resources": [
     "template"
    ]
   },
   "describetemplatepermissions": {
    "Resources": [
     "template"
    ]
   },
   "describetheme": {
    "Resources": [
     "theme"
    ]
   },
   "describethemealias": {
    "Resources": [
     "theme"
    ]
   },
   "describethemepermissions": {
    "Resources": [
     "theme"
    ]
   },
   "describetopic": {
    "Resources": [
     "topic"
    ]
   },
   "describetopicpermissions": {
    "Resources": [
     "topic"
    ]
   },
   "describetopicrefresh": {
    "Resources": [
     "topic"
    ]
   },
   "describetopicrefreshschedule": {
    "Resources": [
     "topic"
    ]
   },
   "describeuser": {
    "Resources": [
     "user"
    ]
   },
   "describevpcconnection": {
    "Resources": [
     "vpcconnection"
    ]
   },
   "generateembedurlforanonymoususer": {
    "Resources": [
     "dashboard",
     "namespace",
     "theme",
     "topic"
    ]
   },
   "generateembedurlforregistereduser": {
    "Resources": [
     "user"
    ]
   },
   "generateembedurlforregistereduserwithidentity": {},
   "getanonymoususerembedurl": {},
   "getauthcode": {
    "Resources": [
     "user"
    ]
   },
   "getdashboardembedurl": {
    "Resources": [
     "dashboard"
    ]
   },
   "getgroupmapping": {},
   "getsessionembedurl": {},
   "listanalyses": {
    "Resources": [
     "analysis"
    ]
   },
   "listassetbundleexportjobs": {
    "Resources": [
     "assetBundleExportJob"
    ]
   },
   "listassetbundleimportjobs": {
    "Resources": [
     "assetBundleImportJob"
    ]
   },
   "listbrands": {},
   "listcustomermanagedkeys": {},
   "listcustompermissions": {},
   "listdashboards": {
    "Resources": [
     "dashboard"
    ]
   },
   "listdashboardversions": {
    "Resources": [
     "dashboard"
    ]
   },
   "listdatasets": {},
   "listdatasources": {},
   "listfoldermembers": {
    "Resources": [
     "folder"
    ]
   },
   "listfolders": {
    "Resources": [
     "folder"
    ]
   },
   "listfoldersforresource": {
    "Resources": [
     "analysis",
     "dashboard",
     "dataset",
     "datasource",
     "topic"
    ]
   },
   "listgroupmemberships": {
    "Resources": [
     "group"
    ]
   },
   "listgroups": {
    "Resources": [
     "group"
    ]
   },
   "listiampolicyassignments": {
    "Resources": [
     "assignment"
    ]
   },
   "listiampolicyassignmentsforuser": {
    "Resources": [
     "assignment"
    ]
   },
   "listidentitypropagationconfigs": {},
   "listingestions": {},
   "listkmskeysforuser": {},
   "listnamespaces": {},
   "listrefreshschedules": {},
   "listrolememberships": {},
   "listtagsforresource": {
    "Resources": [
     "analysis",
     "brand",
     "customization",
     "custompermissions",
     "dashboard",
     "dataset",
     "datasource",
     "folder",
     "template",
     "theme",
     "topic"
    ]
   },
   "listtemplatealiases": {
    "Resources": [
     "template"
    ]
   },
   "listtemplates": {
    "Resources": [
     "template"
    ]
   },
   "listtemplateversions": {
    "Resources": [
     "template"
    ]
   },
   "listthemealiases": {
    "Resources": [
     "theme"
    ]
   },
   "listthemes": {
    "Resources": [
     "theme"
    ]
   },
   "listthemeversions": {
    "Resources": [
     "theme"
    ]
   },
   "listtopicrefreshschedules": {},
   "listtopicreviewedanswers": {},
   "listtopics": {},
   "listusergroups": {
    "Resources": [
     "user"
    ]
   },
   "listusers": {
    "Resources": [
     "user"
    ]
   },
   "listvpcconnections": {},
   "passdataset": {
    "Resources": [
     "dataset"
    ]
   },
   "passdatasource": {
    "Resources": [
     "datasource"
    ]
   },
   "predictqaresults": {
    "Resources": [
     "dashboard",
     "topic"
    ]
   },
   "putdatasetrefreshproperties": {
    "Resources": [
     "dataset"
    ]
   },
   "registercustomermanagedkey": {},
   "registeruser": {
    "Resources": [
     "user"
    ]
   },
   "removecustomermanagedkey": {},
   "restoreanalysis": {
    "Resources": [
     "analysis"
    ]
   },
   "scopedownpolicy": {},
   "searchanalyses": {
    "Resources": [
     "analysis"
    ]
   },
   "searchdashboards": {
    "Resources": [
     "dashboard"
    ]
   },
   "searchdatasets": {
    "Resources": [
     "dataset"
    ]
   },
   "searchdatasources": {
    "Resources": [
     "datasource"
    ]
   },
   "searchdirectorygroups": {},
   "searchfolders": {
    "Resources": [
     "folder"
    ]
   },
   "searchgroups": {
    "Resources": [
     "group"
    ]
   },
   "searchtopics": {
    "Resources": [
     "topic"
    ]
   },
   "searchusers": {
    "Resources": [
     "user"
    ]
   },
   "setgroupmapping": {},
   "startassetbundleexportjob": {
    "Resources": [
     "assetBundleExportJob"
    ]
   },
   "startassetbundleimportjob": {
    "Resources": [
     "assetBundleImportJob"
    ]
   },
   "startdashboardsnapshotjob": {
    "Resources": [
     "dashboardSnapshotJob"
    ]
   },
   "startdashboardsnapshotjobschedule": {},
   "subscribe": {},
   "tagresource": {
    "Resources": [
     "analysis",
     "brand",
     "customization",
     "custompermissions",
     "dashboard",
     "dataset",
     "datasource",
     "folder",
     "ingestion",
     "template",
     "theme",
     "topic",
     "vpcconnection"
    ]
   },
   "unsubscribe": {},
   "untagresource": {
    "Resources": [
     "analysis",
     "brand",
     "customization",
     "custompermissions",
     "dashboard",
     "dataset",
     "datasource",
     "folder",
     "ingestion",
     "template",
     "theme",
     "topic",
     "vpcconnection"
    ]
   },
   "updateaccountcustomization": {
    "Resources": [
     "customization"
    ]
   },
   "updateaccountsettings": {},
   "updateanalysis": {
    "Resources": [
     "analysis"
    ]
   },
   "updateanalysispermissions": {
    "Resources": [
     "analysis"
    ]
   },
   "updateapplicationwithtokenexchangegrant": {},
   "updatebrand": {
    "Resources": [
     "brand"
    ]
   },
   "updatebrandassignment": {},
   "updatebrandpublishedversion": {
    "Resources": [
     "brand"
    ]
   },
   "updatecustompermissions": {
    "Resources": [
     "custompermissions"
    ]
   },
   "updatedashboard": {
    "Resources": [
     "dashboard"
    ]
   },
   "updatedashboardlinks": {
    "Resources": [
     "dashboard"
    ]
   },
   "updatedashboardpermissions": {
    "Resources": [
     "dashboard"
    ]
   },
   "updatedashboardpublishedversion": {
    "Resources": [
     "dashboard"
    ]
   },
   "updatedashboardsqaconfiguration": {},
   "updatedataset": {
    "Resources": [
     "dataset",
     "datasource"
    ]
   },
   "updatedatasetpermissions": {
    "Resources": [
     "dataset"
    ]
   },
   "updatedatasource": {
    "Resources": [
     "datasource"
    ]
   },
   "updatedatasourcepermissions": {
    "Resources": [
     "datasource"
    ]
   },
   "updatedefaultqbusinessapplication": {},
   "updateemailcustomizationtemplate": {
    "Resources": [
     "emailCustomizationTemplate"
    ]
   },
   "updatefolder": {
    "Resources": [
     "folder"
    ]
   },
   "updatefolderpermissions": {
    "Resources": [
     "folder"
    ]
   },
   "updategroup": {
    "Resources": [
     "group"
    ]
   },
   "updateiampolicyassignment": {
    "Resources": [
     "assignment"
    ]
   },
   "updateidentitypropagationconfig": {},
   "updateiprestriction": {},
   "updatekeyregistration": {},
   "updatepublicsharingsettings": {},
   "updateqpersonalizationconfiguration": {},
   "updatequicksightqsearchconfiguration": {},
   "updaterefreshschedule": {
    "Resources": [
     "refreshschedule"
    ]
   },
   "updateresourcepermissions": {},
   "updaterolecustompermission": {},
   "updatespicecapacityconfiguration": {},
   "updatetemplate": {
    "Resources": [
     "template"
    ]
   },
   "updatetemplatealias": {
    "Resources": [
     "template"
    ]
   },
   "updatetemplatepermissions": {
    "Resources": [
     "template"
    ]
   },
   "updatetheme": {
    "Resources": [
     "theme"
    ]
   },
   "updatethemealias": {
    "Resources": [
     "theme"
    ]
   },
   "updatethemepermissions": {
    "Resources": [
     "theme"
    ]
   },
   "updatetopic": {
    "Resources": [
     "dataset",
     "topic"
    ]
   },
   "updatetopicpermissions": {
    "Resources": [
     "topic"
    ]
   },
   "updatetopicrefreshschedule": {
    "Resources": [
     "topic"
    ]
   },
   "updateuser": {
    "Resources": [
     "user"
    ]
   },
   "updateusercustompermission": {
    "Resources": [
     "user"
    ]
   },
   "updatevpcconnection": {
    "Resources": [
     "vpcconnection"
    ]
   }
  },
  "Resources": {
   "account": {
    "ARNFormats": [
     "arn:${Partition}:quicksight:${Region}:${Account}:account/.*"
    ]
   },
   "analysis": {
    "ARNFormats": [
     "arn:${Partition}:quicksight:${Region}:${Account}:analysis/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "assetbundleexportjob": {
    "ARNFormats": [
     "arn:${Partition}:quicksight:${Region}:${Account}:asset-bundle-export-job/.*"
    ]
   },
   "assetbundleimportjob": {
    "ARNFormats": [
     "arn:${Partition}:quicksight:${Region}:${Account}:asset-bundle-import-job/.*"
    ]
   },
   "assignment": {
    "ARNFormats": [
     "arn:${Partition}:quicksight::${Account}:assignment/.*"
    ]
   },
   "brand": {
    "ARNFormats": [
     "arn:${Partition}:quicksight:${Region}:${Account}:brand/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "customization": {
    "ARNFormats": [
     "arn:${Partition}:quicksight:${Region}:${Account}:customization/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "custompermissions": {
    "ARNFormats": [
     "arn:${Partition}:quicksight:${Region}:${Account}:custompermissions/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "dashboard": {
    "ARNFormats": [
     "arn:${Partition}:quicksight:${Region}:${Account}:dashboard/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "dashboardsnapshotjob": {
    "ARNFormats": [
     "arn:${Partition}:quicksight:${Region}:${Account}:dashboard/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "dataset": {
    "ARNFormats": [
     "arn:${Partition}:quicksight:${Region}:${Account}:dataset/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "datasource": {
    "ARNFormats": [
     "arn:${Partition}:quicksight:${Region}:${Account}:datasource/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "emailcustomizationtemplate": {
    "ARNFormats": [
     "arn:${Partition}:quicksight:${Region}:${Account}:email-customization-template/.*"
    ]
   },
   "folder": {
    "ARNFormats": [
     "arn:${Partition}:quicksight:${Region}:${Account}:folder/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "group": {
    "ARNFormats": [
     "arn:${Partition}:quicksight:${Region}:${Account}:group/.*"
    ]
   },
   "ingestion": {
    "ARNFormats": [
     "arn:${Partition}:quicksight:${Region}:${Account}:dataset/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "namespace": {
    "ARNFormats": [
     "arn:${Partition}:quicksight:${Region}:${Account}:namespace/.*"
    ]
   },
   "refreshschedule": {
    "ARNFormats": [
     "arn:${Partition}:quicksight:${Region}:${Account}:dataset/.*"
    ]
   },
   "template": {
    "ARNFormats": [
     "arn:${Partition}:quicksight:${Region}:${Account}:template/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "theme": {
    "ARNFormats": [
     "arn:${Partition}:quicksight:${Region}:${Account}:theme/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "topic": {
    "ARNFormats": [
     "arn:${Partition}:quicksight:${Region}:${Account}:topic/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "user": {
    "ARNFormats": [
     "arn:${Partition}:quicksight:${Region}:${Account}:user/.*"
    ]
   },
   "vpcconnection": {
    "ARNFormats": [
     "arn:${Partition}:quicksight:${Region}:${Account}:vpcConnection/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "ram": {
  "Actions": {
   "acceptresourceshareinvitation": {
    "Resources": [
     "resource-share-invitation"
    ]
   },
   "associateresourceshare": {
    "Resources": [
     "resource-share"
    ]
   },
   "associateresourcesharepermission": {
    "Resources": [
     "customer-managed-permission",
     "permission",
     "resource-share"
    ]
   },
   "createpermission": {},
   "createpermissionversion": {
    "Resources": [
     "customer-managed-permission"
    ]
   },
   "createresourceshare": {},
   "deletepermission": {
    "Resources": [
     "customer-managed-permission"
    ]
   },
   "deletepermissionversion": {
    "Resources": [
     "customer-managed-permission"
    ]
   },
   "deleteresourceshare": {
    "Resources": [
     "resource-share"
    ]
   },
   "disassociateresourceshare": {
    "Resources": [
     "resource-share"
    ]
   },
   "disassociateresourcesharepermission": {
    "Resources": [
     "customer-managed-permission",
     "permission",
     "resource-share"
    ]
   },
   "enablesharingwithawsorganization": {},
   "getpermission": {
    "Resources": [
     "customer-managed-permission",
     "permission"
    ]
   },
   "getresourcepolicies": {},
   "getresourceshareassociations": {},
   "getresourceshareinvitations": {},
   "getresourceshares": {},
   "listpendinginvitationresources": {
    "Resources": [
     "resource-share-invitation"
    ]
   },
   "listpermissionassociations": {
    "Resources": [
     "customer-managed-permission",
     "permission"
    ]
   },
   "listpermissions": {},
   "listpermissionversions": {},
   "listprincipals": {},
   "listreplacepermissionassociationswork": {},
   "listresources": {},
   "listresourcesharepermissions": {
    "Resources": [
     "resource-share"
    ]
   },
   "listresourcetypes": {},
   "promotepermissioncreatedfrompolicy": {
    "Resources": [
     "customer-managed-permission"
    ]
   },
   "promoteresourcesharecreatedfrompolicy": {
    "Resources": [
     "resource-share"
    ]
   },
   "rejectresourceshareinvitation": {
    "Resources": [
     "resource-share-invitation"
    ]
   },
   "replacepermissionassociations": {
    "Resources": [
     "customer-managed-permission",
     "permission"
    ]
   },
   "setdefaultpermissionversion": {
    "Resources": [
     "customer-managed-permission"
    ]
   },
   "tagresource": {
    "Resources": [
     "customer-managed-permission",
     "resource-share"
    ]
   },
   "untagresource": {
    "Resources": [
     "customer-managed-permission",
     "resource-share"
    ]
   },
   "updateresourceshare": {
    "Resources": [
     "resource-share"
    ]
   }
  },
  "Resources": {
   "customer-managed-permission": {
    "ARNFormats": [
     "arn:${Partition}:ram:${Region}:${Account}:permission/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "ram:PermissionArn",
     "ram:PermissionResourceType"
    ]
   },
   "permission": {
    "ARNFormats": [
     "arn:${Partition}:ram::${Account}:permission/.*"
    ],
    "ConditionKeys": [
     "ram:PermissionArn",
     "ram:PermissionResourceType"
    ]
   },
   "resource-share": {
    "ARNFormats": [
     "arn:${Partition}:ram:${Region}:${Account}:resource-share/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "ram:AllowsExternalPrincipals",
     "ram:ResourceShareName"
    ]
   },
   "resource-share-invitation": {
    "ARNFormats": [
     "arn:${Partition}:ram:${Region}:${Account}:resource-share-invitation/.*"
    ],
    "ConditionKeys": [
     "ram:ShareOwnerAccountId"
    ]
   }
  }
 },
 "rbin": {
  "Actions": {
   "createrule": {
    "Resources": [
     "rule"
    ]
   },
   "deleterule": {
    "Resources": [
     "rule"
    ]
   },
   "getrule": {
    "Resources": [
     "rule"
    ]
   },
   "listrules": {},
   "listtagsforresource": {
    "Resources": [
     "rule"
    ]
   },
   "lockrule": {
    "Resources": [
     "rule"
    ]
   },
   "tagresource": {
    "Resources": [
     "rule"
    ]
   },
   "unlockrule": {
    "Resources": [
     "rule"
    ]
   },
   "untagresource": {
    "Resources": [
     "rule"
    ]
   },
   "updaterule": {
    "Resources": [
     "rule"
    ]
   }
  },
  "Resources": {
   "rule": {
    "ARNFormats": [
     "arn:${Partition}:rbin:${Region}:${Account}:rule/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "rds": {
  "Actions": {
   "addroletodbcluster": {
    "Resources": [
     "cluster"
    ]
   },
   "addroletodbinstance": {
    "Resources": [
     "db"
    ]
   },
   "addsourceidentifiertosubscription": {
    "Resources": [
     "es"
    ]
   },
   "addtagstoresource": {
    "Resources": [
     "cev",
     "cluster",
     "cluster-endpoint",
     "cluster-pg",
     "cluster-snapshot",
     "db",
     "deployment",
     "es",
     "integration",
     "og",
     "pg",
     "proxy",
     "proxy-endpoint",
     "ri",
     "secgrp",
     "shardgrp",
     "snapshot",
     "snapshot-tenant-database",
     "subgrp",
     "target-group",
     "tenant-database"
    ]
   },
   "applypendingmaintenanceaction": {
    "Resources": [
     "cluster",
     "db"
    ]
   },
   "authorizedbsecuritygroupingress": {
    "Resources": [
     "secgrp"
    ]
   },
   "backtrackdbcluster": {
    "Resources": [
     "cluster"
    ]
   },
   "cancelexporttask": {},
   "copycustomdbengineversion": {
    "Resources": [
     "cev"
    ]
   },
   "copydbclusterparametergroup": {
    "Resources": [
     "cluster-pg"
    ]
   },
   "copydbclustersnapshot": {
    "Resources": [
     "cluster-snapshot"
    ]
   },
   "copydbparametergroup": {
    "Resources": [
     "pg"
    ]
   },
   "copydbsnapshot": {
    "Resources": [
     "snapshot"
    ]
   },
   "copyoptiongroup": {
    "Resources": [
     "og"
    ]
   },
   "createbluegreendeployment": {
    "Resources": [
     "cluster",
     "cluster-pg",
     "db",
     "deployment",
     "pg"
    ]
   },
   "createcustomdbengineversion": {
    "Resources": [
     "cev"
    ]
   },
   "createdbcluster": {
    "Resources": [
     "cluster",
     "cluster-pg",
     "db",
     "global-cluster",
     "og",
     "subgrp"
    ]
   },
   "createdbclusterendpoint": {
    "Resources": [
     "cluster",
     "cluster-endpoint"
    ]
   },
   "createdbclusterparametergroup": {
    "Resources": [
     "cluster-pg"
    ]
   },
   "createdbclustersnapshot": {
    "Resources": [
     "cluster",
     "cluster-snapshot"
    ]
   },
   "createdbinstance": {
    "Resources": [
     "cluster",
     "db",
     "og",
     "pg",
     "secgrp",
     "subgrp"
    ]
   },
   "createdbinstancereadreplica": {
    "Resources": [
     "cluster",
     "db",
     "og",
     "pg",
     "subgrp"
    ]
   },
   "createdbparametergroup": {
    "Resources": [
     "pg"
    ]
   },
   "createdbproxy": {},
   "createdbproxyendpoint": {
    "Resources": [
     "proxy",
     "proxy-endpoint"
    ]
   },
   "createdbsecuritygroup": {
    "Resources": [
     "secgrp"
    ]
   },
   "createdbshardgroup": {
    "Resources": [
     "cluster",
     "shardgrp"
    ]
   },
   "createdbsnapshot": {
    "Resources": [
     "db",
     "snapshot"
    ]
   },
   "createdbsubnetgroup": {
    "Resources": [
     "subgrp"
    ]
   },
   "createeventsubscription": {
    "Resources": [
     "es"
    ]
   },
   "createglobalcluster": {
    "Resources": [
     "cluster",
     "global-cluster"
    ]
   },
   "createintegration": {
    "Resources": [
     "cluster",
     "integration"
    ]
   },
   "createoptiongroup": {
    "Resources": [
     "og"
    ]
   },
   "createtenantdatabase": {
    "Resources": [
     "db",
     "tenant-database"
    ]
   },
   "crossregioncommunication": {},
   "deletebluegreendeployment": {
    "Resources": [
     "deployment"
    ]
   },
   "deletecustomdbengineversion": {
    "Resources": [
     "cev"
    ]
   },
   "deletedbcluster": {
    "Resources": [
     "cluster",
     "cluster-snapshot"
    ]
   },
   "deletedbclusterautomatedbackup": {
    "Resources": [
     "cluster-auto-backup"
    ]
   },
   "deletedbclusterendpoint": {
    "Resources": [
     "cluster-endpoint"
    ]
   },
   "deletedbclusterparametergroup": {
    "Resources": [
     "cluster-pg"
    ]
   },
   "deletedbclustersnapshot": {
    "Resources": [
     "cluster-snapshot"
    ]
   },
   "deletedbinstance": {
    "Resources": [
     "db"
    ]
   },
   "deletedbinstanceautomatedbackup": {
    "Resources": [
     "auto-backup"
    ]
   },
   "deletedbparametergroup": {
    "Resources": [
     "pg"
    ]
   },
   "deletedbproxy": {
    "Resources": [
     "proxy"
    ]
   },
   "deletedbproxyendpoint": {
    "Resources": [
     "proxy-endpoint"
    ]
   },
   "deletedbsecuritygroup": {
    "Resources": [
     "secgrp"
    ]
   },
   "deletedbshardgroup": {
    "Resources": [
     "shardgrp"
    ]
   },
   "deletedbsnapshot": {
    "Resources": [
     "snapshot"
    ]
   },
   "deletedbsubnetgroup": {
    "Resources": [
     "subgrp"
    ]
   },
   "deleteeventsubscription": {
    "Resources": [
     "es"
    ]
   },
   "deleteglobalcluster": {
    "Resources": [
     "global-cluster"
    ]
   },
   "deleteintegration": {
    "Resources": [
     "integration"
    ]
   },
   "deleteoptiongroup": {
    "Resources": [
     "og"
    ]
   },
   "deletetenantdatabase": {
    "Resources": [
     "db",
     "tenant-database"
    ]
   },
   "deregisterdbproxytargets": {
    "Resources": [
     "cluster",
     "db",
     "proxy",
     "target-group"
    ]
   },
   "describeaccountattributes": {},
   "describebluegreendeployments": {
    "Resources": [
     "deployment"
    ]
   },
   "describecertificates": {},
   "describedbclusterautomatedbackups": {
    "Resources": [
     "cluster",
     "cluster-auto-backup"
    ]
   },
   "describedbclusterbacktracks": {
    "Resources": [
     "cluster"
    ]
   },
   "describedbclusterendpoints": {
    "Resources": [
     "cluster",
     "cluster-endpoint"
    ]
   },
   "describedbclusterparametergroups": {
    "Resources": [
     "cluster-pg"
    ]
   },
   "describedbclusterparameters": {
    "Resources": [
     "cluster-pg"
    ]
   },
   "describedbclusters": {
    "Resources": [
     "cluster"
    ]
   },
   "describedbclustersnapshotattributes": {
    "Resources": [
     "cluster-snapshot"
    ]
   },
   "describedbclustersnapshots": {
    "Resources": [
     "cluster",
     "cluster-snapshot"
    ]
   },
   "describedbengineversions": {},
   "describedbinstanceautomatedbackups": {
    "Resources": [
     "auto-backup",
     "db"
    ]
   },
   "describedbinstances": {
    "Resources": [
     "db"
    ]
   },
   "describedblogfiles": {
    "Resources": [
     "db"
    ]
   },
   "describedbparametergroups": {
    "Resources": [
     "pg"
    ]
   },
   "describedbparameters": {
    "Resources": [
     "pg"
    ]
   },
   "describedbproxies": {
    "Resources": [
     "proxy"
    ]
   },
   "describedbproxyendpoints": {
    "Resources": [
     "proxy",
     "proxy-endpoint"
    ]
   },
   "describedbproxytargetgroups": {
    "Resources": [
     "proxy"
    ]
   },
   "describedbproxytargets": {
    "Resources": [
     "proxy",
     "target-group"
    ]
   },
   "describedbrecommendations": {},
   "describedbsecuritygroups": {
    "Resources": [
     "secgrp"
    ]
   },
   "describedbshardgroups": {
    "Resources": [
     "shardgrp"
    ]
   },
   "describedbsnapshotattributes": {
    "Resources": [
     "snapshot"
    ]
   },
   "describedbsnapshots": {
    "Resources": [
     "db",
     "snapshot"
    ]
   },
   "describedbsnapshottenantdatabases": {
    "Resources": [
     "db",
     "snapshot",
     "snapshot-tenant-database"
    ]
   },
   "describedbsubnetgroups": {
    "Resources": [
     "subgrp"
    ]
   },
   "describeenginedefaultclusterparameters": {},
   "describeenginedefaultparameters": {},
   "describeeventcategories": {},
   "describeevents": {},
   "describeeventsubscriptions": {
    "Resources": [
     "es"
    ]
   },
   "describeexporttasks": {
    "Resources": [
     "cluster",
     "cluster-snapshot",
     "snapshot"
    ]
   },
   "describeglobalclusters": {
    "Resources": [
     "global-cluster"
    ]
   },
   "describeintegrations": {
    "Resources": [
     "integration"
    ]
   },
   "describeoptiongroupoptions": {},
   "describeoptiongroups": {
    "Resources": [
     "og"
    ]
   },
   "describeorderabledbinstanceoptions": {},
   "describependingmaintenanceactions": {
    "Resources": [
     "cluster",
     "db"
    ]
   },
   "describerecommendationgroups": {},
   "describerecommendations": {},
   "describereserveddbinstances": {
    "Resources": [
     "ri"
    ]
   },
   "describereserveddbinstancesofferings": {},
   "describesourceregions": {},
   "describetenantdatabases": {
    "Resources": [
     "db",
     "tenant-database"
    ]
   },
   "describevaliddbinstancemodifications": {
    "Resources": [
     "db"
    ]
   },
   "disablehttpendpoint": {
    "Resources": [
     "cluster"
    ]
   },
   "downloadcompletedblogfile": {
    "Resources": [
     "db"
    ]
   },
   "downloaddblogfileportion": {
    "Resources": [
     "db"
    ]
   },
   "enablehttpendpoint": {
    "Resources": [
     "cluster"
    ]
   },
   "failoverdbcluster": {
    "Resources": [
     "cluster"
    ]
   },
   "failoverglobalcluster": {
    "Resources": [
     "cluster",
     "global-cluster"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "cev",
     "cluster",
     "cluster-endpoint",
     "cluster-pg",
     "cluster-snapshot",
     "db",
     "es",
     "integration",
     "og",
     "pg",
     "proxy",
     "proxy-endpoint",
     "ri",
     "secgrp",
     "shardgrp",
     "snapshot",
     "snapshot-tenant-database",
     "subgrp",
     "target-group",
     "tenant-database"
    ]
   },
   "modifyactivitystream": {
    "Resources": [
     "db"
    ]
   },
   "modifycertificates": {},
   "modifycurrentdbclustercapacity": {
    "Resources": [
     "cluster"
    ]
   },
   "modifycustomdbengineversion": {
    "Resources": [
     "cev"
    ]
   },
   "modifydbcluster": {
    "Resources": [
     "cluster",
     "cluster-pg",
     "og",
     "pg"
    ]
   },
   "modifydbclusterendpoint": {
    "Resources": [
     "cluster-endpoint"
    ]
   },
   "modifydbclusterparametergroup": {
    "Resources": [
     "cluster-pg"
    ]
   },
   "modifydbclustersnapshotattribute": {
    "Resources": [
     "cluster-snapshot"
    ]
   },
   "modifydbinstance": {
    "Resources": [
     "db",
     "og",
     "pg",
     "secgrp",
     "subgrp"
    ]
   },
   "modifydbparametergroup": {
    "Resources": [
     "pg"
    ]
   },
   "modifydbproxy": {
    "Resources": [
     "proxy"
    ]
   },
   "modifydbproxyendpoint": {
    "Resources": [
     "proxy-endpoint"
    ]
   },
   "modifydbproxytargetgroup": {
    "Resources": [
     "target-group"
    ]
   },
   "modifydbrecommendation": {},
   "modifydbshardgroup": {
    "Resources": [
     "shardgrp"
    ]
   },
   "modifydbsnapshot": {
    "Resources": [
     "og",
     "snapshot"
    ]
   },
   "modifydbsnapshotattribute": {
    "Resources": [
     "snapshot"
    ]
   },
   "modifydbsubnetgroup": {
    "Resources": [
     "subgrp"
    ]
   },
   "modifyeventsubscription": {
    "Resources": [
     "es"
    ]
   },
   "modifyglobalcluster": {
    "Resources": [
     "global-cluster"
    ]
   },
   "modifyintegration": {
    "Resources": [
     "integration"
    ]
   },
   "modifyoptiongroup": {
    "Resources": [
     "og"
    ]
   },
   "modifyrecommendation": {},
   "modifytenantdatabase": {
    "Resources": [
     "db",
     "tenant-database"
    ]
   },
   "promotereadreplica": {
    "Resources": [
     "db"
    ]
   },
   "promotereadreplicadbcluster": {
    "Resources": [
     "cluster"
    ]
   },
   "purchasereserveddbinstancesoffering": {
    "Resources": [
     "ri"
    ]
   },
   "rebootdbcluster": {
    "Resources": [
     "cluster"
    ]
   },
   "rebootdbinstance": {
    "Resources": [
     "db"
    ]
   },
   "rebootdbshardgroup": {
    "Resources": [
     "shardgrp"
    ]
   },
   "registerdbproxytargets": {
    "Resources": [
     "target-group"
    ]
   },
   "removefromglobalcluster": {
    "Resources": [
     "cluster",
     "global-cluster"
    ]
   },
   "removerolefromdbcluster": {
    "Resources": [
     "cluster"
    ]
   },
   "removerolefromdbinstance": {
    "Resources": [
     "db"
    ]
   },
   "removesourceidentifierfromsubscription": {
    "Resources": [
     "es"
    ]
   },
   "removetagsfromresource": {
    "Resources": [
     "cev",
     "cluster",
     "cluster-endpoint",
     "cluster-pg",
     "cluster-snapshot",
     "db",
     "deployment",
     "es",
     "integration",
     "og",
     "pg",
     "proxy",
     "proxy-endpoint",
     "ri",
     "secgrp",
     "shardgrp",
     "snapshot",
     "snapshot-tenant-database",
     "subgrp",
     "target-group",
     "tenant-database"
    ]
   },
   "resetdbclusterparametergroup": {
    "Resources": [
     "cluster-pg"
    ]
   },
   "resetdbparametergroup": {
    "Resources": [
     "pg"
    ]
   },
   "restoredbclusterfroms3": {
    "Resources": [
     "cluster",
     "cluster-pg",
     "og",
     "subgrp"
    ]
   },
   "restoredbclusterfromsnapshot": {
    "Resources": [
     "cluster",
     "cluster-pg",
     "cluster-snapshot",
     "og",
     "snapshot",
     "subgrp"
    ]
   },
   "restoredbclustertopointintime": {
    "Resources": [
     "cluster",
     "cluster-auto-backup",
     "cluster-pg",
     "og",
     "subgrp"
    ]
   },
   "restoredbinstancefromdbsnapshot": {
    "Resources": [
     "cluster-snapshot",
     "db",
     "og",
     "pg",
     "snapshot",
     "subgrp"
    ]
   },
   "restoredbinstancefroms3": {
    "Resources": [
     "db",
     "og",
     "pg",
     "secgrp",
     "subgrp"
    ]
   },
   "restoredbinstancetopointintime": {
    "Resources": [
     "auto-backup",
     "db",
     "og",
     "pg",
     "subgrp"
    ]
   },
   "revokedbsecuritygroupingress": {
    "Resources": [
     "secgrp"
    ]
   },
   "startactivitystream": {
    "Resources": [
     "cluster",
     "db"
    ]
   },
   "startdbcluster": {
    "Resources": [
     "cluster"
    ]
   },
   "startdbinstance": {
    "Resources": [
     "db"
    ]
   },
   "startdbinstanceautomatedbackupsreplication": {
    "Resources": [
     "auto-backup",
     "db"
    ]
   },
   "startexporttask": {
    "Resources": [
     "cluster",
     "cluster-snapshot",
     "snapshot"
    ]
   },
   "stopactivitystream": {
    "Resources": [
     "cluster",
     "db"
    ]
   },
   "stopdbcluster": {
    "Resources": [
     "cluster"
    ]
   },
   "stopdbinstance": {
    "Resources": [
     "db",
     "snapshot"
    ]
   },
   "stopdbinstanceautomatedbackupsreplication": {
    "Resources": [
     "db"
    ]
   },
   "switchoverbluegreendeployment": {
    "Resources": [
     "deployment"
    ]
   },
   "switchoverglobalcluster": {
    "Resources": [
     "cluster",
     "global-cluster"
    ]
   },
   "switchoverreadreplica": {
    "Resources": [
     "db"
    ]
   }
  },
  "Resources": {
   "auto-backup": {
    "ARNFormats": [
     "arn:${Partition}:rds:${Region}:${Account}:auto-backup:.*"
    ]
   },
   "cev": {
    "ARNFormats": [
     "arn:${Partition}:rds:${Region}:${Account}:cev:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "cluster": {
    "ARNFormats": [
     "arn:${Partition}:rds:${Region}:${Account}:cluster:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "rds:cluster-tag/${TagKey}"
    ]
   },
   "cluster-auto-backup": {
    "ARNFormats": [
     "arn:${Partition}:rds:${Region}:${Account}:cluster-auto-backup:.*"
    ]
   },
   "cluster-endpoint": {
    "ARNFormats": [
     "arn:${Partition}:rds:${Region}:${Account}:cluster-endpoint:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "cluster-pg": {
    "ARNFormats": [
     "arn:${Partition}:rds:${Region}:${Account}:cluster-pg:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "rds:cluster-pg-tag/${TagKey}"
    ]
   },
   "cluster-snapshot": {
    "ARNFormats": [
     "arn:${Partition}:rds:${Region}:${Account}:cluster-snapshot:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "rds:cluster-snapshot-tag/${TagKey}"
    ]
   },
   "db": {
    "ARNFormats": [
     "arn:${Partition}:rds:${Region}:${Account}:db:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "rds:DatabaseClass",
     "rds:DatabaseEngine",
     "rds:DatabaseName",
     "rds:MultiAz",
     "rds:Piops",
     "rds:StorageEncrypted",
     "rds:StorageSize",
     "rds:Vpc",
     "rds:db-tag/${TagKey}"
    ]
   },
   "deployment": {
    "ARNFormats": [
     "arn:${Partition}:rds:${Region}:${Account}:deployment:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "es": {
    "ARNFormats": [
     "arn:${Partition}:rds:${Region}:${Account}:es:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "rds:es-tag/${TagKey}"
    ]
   },
   "global-cluster": {
    "ARNFormats": [
     "arn:${Partition}:rds::${Account}:global-cluster:.*"
    ]
   },
   "integration": {
    "ARNFormats": [
     "arn:${Partition}:rds:${Region}:${Account}:integration:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "og": {
    "ARNFormats": [
     "arn:${Partition}:rds:${Region}:${Account}:og:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "rds:og-tag/${TagKey}"
    ]
   },
   "pg": {
    "ARNFormats": [
     "arn:${Partition}:rds:${Region}:${Account}:pg:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "rds:pg-tag/${TagKey}"
    ]
   },
   "proxy": {
    "ARNFormats": [
     "arn:${Partition}:rds:${Region}:${Account}:db-proxy:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "proxy-endpoint": {
    "ARNFormats": [
     "arn:${Partition}:rds:${Region}:${Account}:db-proxy-endpoint:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "ri": {
    "ARNFormats": [
     "arn:${Partition}:rds:${Region}:${Account}:ri:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "rds:ri-tag/${TagKey}"
    ]
   },
   "secgrp": {
    "ARNFormats": [
     "arn:${Partition}:rds:${Region}:${Account}:secgrp:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "rds:secgrp-tag/${TagKey}"
    ]
   },
   "shardgrp": {
    "ARNFormats": [
     "arn:${Partition}:rds:${Region}:${Account}:shard-group:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "snapshot": {
    "ARNFormats": [
     "arn:${Partition}:rds:${Region}:${Account}:snapshot:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "rds:snapshot-tag/${TagKey}"
    ]
   },
   "snapshot-tenant-database": {
    "ARNFormats": [
     "arn:${Partition}:rds:${Region}:${Account}:snapshot-tenant-database:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "subgrp": {
    "ARNFormats": [
     "arn:${Partition}:rds:${Region}:${Account}:subgrp:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "rds:subgrp-tag/${TagKey}"
    ]
   },
   "target-group": {
    "ARNFormats": [
     "arn:${Partition}:rds:${Region}:${Account}:target-group:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "tenant-database": {
    "ARNFormats": [
     "arn:${Partition}:rds:${Region}:${Account}:tenant-database:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "rds-data": {
  "Actions": {
   "batchexecutestatement": {
    "Resources": [
     "cluster"
    ]
   },
   "begintransaction": {
    "Resources": [
     "cluster"
    ]
   },
   "committransaction": {
    "Resources": [
     "cluster"
    ]
   },
   "executesql": {
    "Resources": [
     "cluster"
    ]
   },
   "executestatement": {
    "Resources": [
     "cluster"
    ]
   },
   "rollbacktransaction": {
    "Resources": [
     "cluster"
    ]
   }
  },
  "Resources": {
   "cluster": {
    "ARNFormats": [
     "arn:${Partition}:rds:${Region}:${Account}:cluster:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys"
    ]
   }
  }
 },
 "rds-db": {
  "Actions": {
   "connect": {
    "Resources": [
     "db-user"
    ]
   }
  },
  "Resources": {
   "db-user": {
    "ARNFormats": [
     "arn:${Partition}:rds-db:${Region}:${Account}:dbuser:.*"
    ]
   }
  }
 },
 "redshift": {
  "Actions": {
   "acceptreservednodeexchange": {},
   "addpartner": {},
   "associatedatashareconsumer": {
    "Resources": [
     "datashare"
    ]
   },
   "authorizeclustersecuritygroupingress": {
    "Resources": [
     "securitygroup",
     "securitygroupingress-ec2securitygroup"
    ]
   },
   "authorizedatashare": {
    "Resources": [
     "datashare"
    ]
   },
   "authorizeendpointaccess": {},
   "authorizeinboundintegration": {
    "Resources": [
     "integration"
    ]
   },
   "authorizesnapshotaccess": {
    "Resources": [
     "snapshot"
    ]
   },
   "batchdeleteclustersnapshots": {
    "Resources": [
     "snapshot"
    ]
   },
   "batchmodifyclustersnapshots": {
    "Resources": [
     "snapshot"
    ]
   },
   "cancelquery": {},
   "cancelquerysession": {},
   "cancelresize": {
    "Resources": [
     "cluster"
    ]
   },
   "copyclustersnapshot": {
    "Resources": [
     "snapshot"
    ]
   },
   "createauthenticationprofile": {},
   "createcluster": {
    "Resources": [
     "cluster"
    ]
   },
   "createclusterparametergroup": {
    "Resources": [
     "parametergroup"
    ]
   },
   "createclustersecuritygroup": {
    "Resources": [
     "securitygroup"
    ]
   },
   "createclustersnapshot": {
    "Resources": [
     "snapshot"
    ]
   },
   "createclustersubnetgroup": {
    "Resources": [
     "subnetgroup"
    ]
   },
   "createclusteruser": {
    "Resources": [
     "dbuser"
    ]
   },
   "createcustomdomainassociation": {
    "Resources": [
     "cluster"
    ]
   },
   "createendpointaccess": {},
   "createeventsubscription": {
    "Resources": [
     "eventsubscription"
    ]
   },
   "createhsmclientcertificate": {
    "Resources": [
     "hsmclientcertificate"
    ]
   },
   "createhsmconfiguration": {
    "Resources": [
     "hsmconfiguration"
    ]
   },
   "createinboundintegration": {},
   "createintegration": {
    "Resources": [
     "integration"
    ]
   },
   "createqev2idcapplication": {},
   "createredshiftidcapplication": {},
   "createsavedquery": {},
   "createscheduledaction": {},
   "createsnapshotcopygrant": {
    "Resources": [
     "snapshotcopygrant"
    ]
   },
   "createsnapshotschedule": {
    "Resources": [
     "snapshotschedule"
    ]
   },
   "createtags": {
    "Resources": [
     "cluster",
     "eventsubscription",
     "hsmclientcertificate",
     "hsmconfiguration",
     "integration",
     "parametergroup",
     "securitygroup",
     "securitygroupingress-cidr",
     "securitygroupingress-ec2securitygroup",
     "snapshot",
     "snapshotcopygrant",
     "snapshotschedule",
     "subnetgroup",
     "usagelimit"
    ]
   },
   "createusagelimit": {
    "Resources": [
     "usagelimit"
    ]
   },
   "deauthorizedatashare": {
    "Resources": [
     "datashare"
    ]
   },
   "deleteauthenticationprofile": {},
   "deletecluster": {
    "Resources": [
     "cluster"
    ]
   },
   "deleteclusterparametergroup": {
    "Resources": [
     "parametergroup"
    ]
   },
   "deleteclustersecuritygroup": {
    "Resources": [
     "securitygroup"
    ]
   },
   "deleteclustersnapshot": {
    "Resources": [
     "snapshot"
    ]
   },
   "deleteclustersubnetgroup": {
    "Resources": [
     "subnetgroup"
    ]
   },
   "deletecustomdomainassociation": {
    "Resources": [
     "cluster"
    ]
   },
   "deleteendpointaccess": {},
   "deleteeventsubscription": {
    "Resources": [
     "eventsubscription"
    ]
   },
   "deletehsmclientcertificate": {
    "Resources": [
     "hsmclientcertificate"
    ]
   },
   "deletehsmconfiguration": {
    "Resources": [
     "hsmconfiguration"
    ]
   },
   "deleteintegration": {
    "Resources": [
     "integration"
    ]
   },
   "deletepartner": {},
   "deleteqev2idcapplication": {
    "Resources": [
     "qev2idcapplication"
    ]
   },
   "deleteredshiftidcapplication": {
    "Resources": [
     "redshiftidcapplication"
    ]
   },
   "deleteresourcepolicy": {
    "Resources": [
     "namespace"
    ]
   },
   "deletesavedqueries": {},
   "deletescheduledaction": {},
   "deletesnapshotcopygrant": {
    "Resources": [
     "snapshotcopygrant"
    ]
   },
   "deletesnapshotschedule": {
    "Resources": [
     "snapshotschedule"
    ]
   },
   "deletetags": {
    "Resources": [
     "cluster",
     "eventsubscription",
     "hsmclientcertificate",
     "hsmconfiguration",
     "integration",
     "parametergroup",
     "securitygroup",
     "securitygroupingress-cidr",
     "securitygroupingress-ec2securitygroup",
     "snapshot",
     "snapshotcopygrant",
     "snapshotschedule",
     "subnetgroup",
     "usagelimit"
    ]
   },
   "deleteusagelimit": {
    "Resources": [
     "usagelimit"
    ]
   },
   "deregisternamespace": {},
   "describeaccountattributes": {},
   "describeauthenticationprofiles": {},
   "describeclusterdbrevisions": {},
   "describeclusterparametergroups": {},
   "describeclusterparameters": {
    "Resources": [
     "parametergroup"
    ]
   },
   "describeclusters": {},
   "describeclustersecuritygroups": {},
   "describeclustersnapshots": {},
   "describeclustersubnetgroups": {},
   "describeclustertracks": {},
   "describeclusterversions": {},
   "describecustomdomainassociations": {},
   "describedatashares": {},
   "describedatasharesforconsumer": {},
   "describedatasharesforproducer": {},
   "describedefaultclusterparameters": {},
   "describeendpointaccess": {},
   "describeendpointauthorization": {},
   "describeeventcategories": {},
   "describeevents": {},
   "describeeventsubscriptions": {},
   "describehsmclientcertificates": {},
   "describehsmconfigurations": {},
   "describeinboundintegrations": {},
   "describeintegrations": {
    "Resources": [
     "integration"
    ]
   },
   "describeloggingstatus": {
    "Resources": [
     "cluster"
    ]
   },
   "describenodeconfigurationoptions": {},
   "describeorderableclusteroptions": {},
   "describepartners": {},
   "describeqev2idcapplications": {},
   "describequery": {},
   "describeredshiftidcapplications": {},
   "describereservednodeexchangestatus": {},
   "describereservednodeofferings": {},
   "describereservednodes": {},
   "describeresize": {
    "Resources": [
     "cluster"
    ]
   },
   "describesavedqueries": {},
   "describescheduledactions": {},
   "describesnapshotcopygrants": {},
   "describesnapshotschedules": {
    "Resources": [
     "snapshotschedule"
    ]
   },
   "describestorage": {},
   "describetable": {},
   "describetablerestorestatus": {},
   "describetags": {
    "Resources": [
     "cluster",
     "eventsubscription",
     "hsmclientcertificate",
     "hsmconfiguration",
     "integration",
     "parametergroup",
     "securitygroup",
     "securitygroupingress-cidr",
     "securitygroupingress-ec2securitygroup",
     "snapshot",
     "snapshotcopygrant",
     "snapshotschedule",
     "subnetgroup",
     "usagelimit"
    ]
   },
   "describeusagelimits": {
    "Resources": [
     "usagelimit"
    ]
   },
   "disablelogging": {
    "Resources": [
     "cluster"
    ]
   },
   "disablesnapshotcopy": {
    "Resources": [
     "cluster"
    ]
   },
   "disassociatedatashareconsumer": {
    "Resources": [
     "datashare"
    ]
   },
   "enablelogging": {
    "Resources": [
     "cluster"
    ]
   },
   "enablesnapshotcopy": {
    "Resources": [
     "cluster"
    ]
   },
   "executequery": {},
   "failoverprimarycompute": {
    "Resources": [
     "cluster"
    ]
   },
   "fetchresults": {},
   "getclustercredentials": {
    "Resources": [
     "dbgroup",
     "dbname",
     "dbuser"
    ]
   },
   "getclustercredentialswithiam": {
    "Resources": [
     "dbname"
    ]
   },
   "getreservednodeexchangeconfigurationoptions": {},
   "getreservednodeexchangeofferings": {},
   "getresourcepolicy": {
    "Resources": [
     "namespace"
    ]
   },
   "joingroup": {
    "Resources": [
     "dbgroup"
    ]
   },
   "listdatabases": {},
   "listrecommendations": {},
   "listsavedqueries": {},
   "listschemas": {},
   "listtables": {},
   "modifyaquaconfiguration": {
    "Resources": [
     "cluster"
    ]
   },
   "modifyauthenticationprofile": {},
   "modifycluster": {
    "Resources": [
     "cluster"
    ]
   },
   "modifyclusterdbrevision": {
    "Resources": [
     "cluster"
    ]
   },
   "modifyclusteriamroles": {
    "Resources": [
     "cluster"
    ]
   },
   "modifyclustermaintenance": {},
   "modifyclusterparametergroup": {
    "Resources": [
     "parametergroup"
    ]
   },
   "modifyclustersnapshot": {
    "Resources": [
     "snapshot"
    ]
   },
   "modifyclustersnapshotschedule": {
    "Resources": [
     "cluster"
    ]
   },
   "modifyclustersubnetgroup": {
    "Resources": [
     "subnetgroup"
    ]
   },
   "modifycustomdomainassociation": {
    "Resources": [
     "cluster"
    ]
   },
   "modifyendpointaccess": {},
   "modifyeventsubscription": {
    "Resources": [
     "eventsubscription"
    ]
   },
   "modifyintegration": {
    "Resources": [
     "integration"
    ]
   },
   "modifyqev2idcapplication": {
    "Resources": [
     "qev2idcapplication"
    ]
   },
   "modifyredshiftidcapplication": {
    "Resources": [
     "redshiftidcapplication"
    ]
   },
   "modifysavedquery": {},
   "modifyscheduledaction": {},
   "modifysnapshotcopyretentionperiod": {
    "Resources": [
     "cluster"
    ]
   },
   "modifysnapshotschedule": {
    "Resources": [
     "snapshotschedule"
    ]
   },
   "modifyusagelimit": {
    "Resources": [
     "usagelimit"
    ]
   },
   "pausecluster": {
    "Resources": [
     "cluster"
    ]
   },
   "purchasereservednodeoffering": {},
   "putresourcepolicy": {
    "Resources": [
     "namespace"
    ]
   },
   "rebootcluster": {
    "Resources": [
     "cluster"
    ]
   },
   "registernamespace": {},
   "rejectdatashare": {
    "Resources": [
     "datashare"
    ]
   },
   "resetclusterparametergroup": {
    "Resources": [
     "parametergroup"
    ]
   },
   "resizecluster": {
    "Resources": [
     "cluster"
    ]
   },
   "restorefromclustersnapshot": {
    "Resources": [
     "cluster",
     "snapshot"
    ]
   },
   "restoretablefromclustersnapshot": {
    "Resources": [
     "cluster",
     "snapshot"
    ]
   },
   "resumecluster": {
    "Resources": [
     "cluster"
    ]
   },
   "revokeclustersecuritygroupingress": {
    "Resources": [
     "securitygroup",
     "securitygroupingress-ec2securitygroup"
    ]
   },
   "revokeendpointaccess": {},
   "revokesnapshotaccess": {
    "Resources": [
     "snapshot"
    ]
   },
   "rotateencryptionkey": {
    "Resources": [
     "cluster"
    ]
   },
   "updatepartnerstatus": {},
   "viewqueriesfromconsole": {},
   "viewqueriesinconsole": {}
  },
  "Resources": {
   "cluster": {
    "ARNFormats": [
     "arn:${Partition}:redshift:${Region}:${Account}:cluster:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "datashare": {
    "ARNFormats": [
     "arn:${Partition}:redshift:${Region}:${Account}:datashare:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "dbgroup": {
    "ARNFormats": [
     "arn:${Partition}:redshift:${Region}:${Account}:dbgroup:.*"
    ]
   },
   "dbname": {
    "ARNFormats": [
     "arn:${Partition}:redshift:${Region}:${Account}:dbname:.*"
    ]
   },
   "dbuser": {
    "ARNFormats": [
     "arn:${Partition}:redshift:${Region}:${Account}:dbuser:.*"
    ]
   },
   "eventsubscription": {
    "ARNFormats": [
     "arn:${Partition}:redshift:${Region}:${Account}:eventsubscription:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "hsmclientcertificate": {
    "ARNFormats": [
     "arn:${Partition}:redshift:${Region}:${Account}:hsmclientcertificate:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "hsmconfiguration": {
    "ARNFormats": [
     "arn:${Partition}:redshift:${Region}:${Account}:hsmconfiguration:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "integration": {
    "ARNFormats": [
     "arn:${Partition}:redshift:${Region}:${Account}:integration:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "namespace": {
    "ARNFormats": [
     "arn:${Partition}:redshift:${Region}:${Account}:namespace:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "parametergroup": {
    "ARNFormats": [
     "arn:${Partition}:redshift:${Region}:${Account}:parametergroup:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "qev2idcapplication": {
    "ARNFormats": [
     "arn:${Partition}:redshift:${Region}:${Account}:qev2idcapplication:.*"
    ]
   },
   "redshiftidcapplication": {
    "ARNFormats": [
     "arn:${Partition}:redshift:${Region}:${Account}:redshiftidcapplication:.*"
    ]
   },
   "securitygroup": {
    "ARNFormats": [
     "arn:${Partition}:redshift:${Region}:${Account}:securitygroup:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "securitygroupingress-cidr": {
    "ARNFormats": [
     "arn:${Partition}:redshift:${Region}:${Account}:securitygroupingress:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "securitygroupingress-ec2securitygroup": {
    "ARNFormats": [
     "arn:${Partition}:redshift:${Region}:${Account}:securitygroupingress:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "snapshot": {
    "ARNFormats": [
     "arn:${Partition}:redshift:${Region}:${Account}:snapshot:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "snapshotcopygrant": {
    "ARNFormats": [
     "arn:${Partition}:redshift:${Region}:${Account}:snapshotcopygrant:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "snapshotschedule": {
    "ARNFormats": [
     "arn:${Partition}:redshift:${Region}:${Account}:snapshotschedule:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "subnetgroup": {
    "ARNFormats": [
     "arn:${Partition}:redshift:${Region}:${Account}:subnetgroup:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "usagelimit": {
    "ARNFormats": [
     "arn:${Partition}:redshift:${Region}:${Account}:usagelimit:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "redshift-data": {
  "Actions": {
   "batchexecutestatement": {
    "Resources": [
     "cluster",
     "workgroup"
    ]
   },
   "cancelstatement": {},
   "describestatement": {},
   "describetable": {
    "Resources": [
     "cluster",
     "workgroup"
    ]
   },
   "executestatement": {
    "Resources": [
     "cluster",
     "workgroup"
    ]
   },
   "getstagingbucketlocation": {
    "Resources": [
     "managed-workgroup"
    ]
   },
   "getstatementresult": {},
   "listdatabases": {
    "Resources": [
     "cluster",
     "workgroup"
    ]
   },
   "listschemas": {
    "Resources": [
     "cluster",
     "workgroup"
    ]
   },
   "liststatements": {},
   "listtables": {
    "Resources": [
     "cluster",
     "workgroup"
    ]
   }
  },
  "Resources": {
   "cluster": {
    "ARNFormats": [
     "arn:${Partition}:redshift:${Region}:${Account}:cluster:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "managed-workgroup": {
    "ARNFormats": [
     "arn:${Partition}:redshift-serverless:${Region}:${Account}:managed-workgroup/.*"
    ]
   },
   "workgroup": {
    "ARNFormats": [
     "arn:${Partition}:redshift-serverless:${Region}:${Account}:workgroup/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "redshift-serverless": {
  "Actions": {
   "convertrecoverypointtosnapshot": {
    "Resources": [
     "recoveryPoint",
     "snapshot"
    ]
   },
   "createcustomdomainassociation": {
    "Resources": [
     "workgroup"
    ]
   },
   "createendpointaccess": {
    "Resources": [
     "endpointAccess"
    ]
   },
   "createnamespace": {
    "Resources": [
     "namespace"
    ]
   },
   "createscheduledaction": {
    "Resources": [
     "namespace"
    ]
   },
   "createsnapshot": {
    "Resources": [
     "snapshot"
    ]
   },
   "createsnapshotcopyconfiguration": {
    "Resources": [
     "namespace"
    ]
   },
   "createusagelimit": {},
   "createworkgroup": {
    "Resources": [
     "workgroup"
    ]
   },
   "deletecustomdomainassociation": {
    "Resources": [
     "workgroup"
    ]
   },
   "deleteendpointaccess": {
    "Resources": [
     "endpointAccess"
    ]
   },
   "deletenamespace": {
    "Resources": [
     "namespace"
    ]
   },
   "deleteresourcepolicy": {},
   "deletescheduledaction": {},
   "deletesnapshot": {
    "Resources": [
     "snapshot"
    ]
   },
   "deletesnapshotcopyconfiguration": {},
   "deleteusagelimit": {},
   "deleteworkgroup": {
    "Resources": [
     "workgroup"
    ]
   },
   "describeonetimecredit": {},
   "getcredentials": {
    "Resources": [
     "workgroup"
    ]
   },
   "getcustomdomainassociation": {
    "Resources": [
     "workgroup"
    ]
   },
   "getendpointaccess": {
    "Resources": [
     "endpointAccess"
    ]
   },
   "getmanagedworkgroup": {
    "Resources": [
     "managed-workgroup"
    ]
   },
   "getnamespace": {
    "Resources": [
     "namespace"
    ]
   },
   "getrecoverypoint": {
    "Resources": [
     "recoveryPoint"
    ]
   },
   "getresourcepolicy": {},
   "getscheduledaction": {},
   "getsnapshot": {
    "Resources": [
     "snapshot"
    ]
   },
   "gettablerestorestatus": {},
   "gettrack": {},
   "getusagelimit": {},
   "getworkgroup": {
    "Resources": [
     "workgroup"
    ]
   },
   "listcustomdomainassociations": {},
   "listendpointaccess": {
    "Resources": [
     "endpointAccess"
    ]
   },
   "listmanagedworkgroups": {},
   "listnamespaces": {},
   "listrecoverypoints": {
    "Resources": [
     "namespace"
    ]
   },
   "listscheduledactions": {},
   "listsnapshotcopyconfigurations": {
    "Resources": [
     "namespace"
    ]
   },
   "listsnapshots": {
    "Resources": [
     "snapshot"
    ]
   },
   "listtablerestorestatus": {},
   "listtagsforresource": {
    "Resources": [
     "namespace",
     "workgroup"
    ]
   },
   "listtracks": {},
   "listusagelimits": {},
   "listworkgroups": {},
   "putresourcepolicy": {},
   "restorefromrecoverypoint": {
    "Resources": [
     "recoveryPoint"
    ]
   },
   "restorefromsnapshot": {
    "Resources": [
     "snapshot"
    ]
   },
   "restoretablefromrecoverypoint": {
    "Resources": [
     "namespace",
     "recoveryPoint"
    ]
   },
   "restoretablefromsnapshot": {
    "Resources": [
     "namespace",
     "snapshot"
    ]
   },
   "tagresource": {
    "Resources": [
     "namespace",
     "recoveryPoint",
     "snapshot",
     "workgroup"
    ]
   },
   "untagresource": {
    "Resources": [
     "namespace",
     "recoveryPoint",
     "snapshot",
     "workgroup"
    ]
   },
   "updatecustomdomainassociation": {
    "Resources": [
     "workgroup"
    ]
   },
   "updateendpointaccess": {
    "Resources": [
     "endpointAccess"
    ]
   },
   "updatenamespace": {
    "Resources": [
     "namespace"
    ]
   },
   "updatescheduledaction": {},
   "updatesnapshot": {
    "Resources": [
     "snapshot"
    ]
   },
   "updatesnapshotcopyconfiguration": {},
   "updateusagelimit": {},
   "updateworkgroup": {
    "Resources": [
     "workgroup"
    ]
   }
  },
  "Resources": {
   "endpointaccess": {
    "ARNFormats": [
     "arn:${Partition}:redshift-serverless:${Region}:${Account}:managedvpcendpoint/.*"
    ]
   },
   "managed-workgroup": {
    "ARNFormats": [
     "arn:${Partition}:redshift-serverless:${Region}:${Account}:managed-workgroup/.*"
    ]
   },
   "namespace": {
    "ARNFormats": [
     "arn:${Partition}:redshift-serverless:${Region}:${Account}:namespace/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "recoverypoint": {
    "ARNFormats": [
     "arn:${Partition}:redshift-serverless:${Region}:${Account}:recoverypoint/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "snapshot": {
    "ARNFormats": [
     "arn:${Partition}:redshift-serverless:${Region}:${Account}:snapshot/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "workgroup": {
    "ARNFormats": [
     "arn:${Partition}:redshift-serverless:${Region}:${Account}:workgroup/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "refactor-spaces": {
  "Actions": {
   "createapplication": {},
   "createenvironment": {},
   "createroute": {},
   "createservice": {},
   "deleteapplication": {
    "Resources": [
     "application"
    ]
   },
   "deleteenvironment": {
    "Resources": [
     "environment"
    ]
   },
   "deleteresourcepolicy": {},
   "deleteroute": {
    "Resources": [
     "route"
    ]
   },
   "deleteservice": {
    "Resources": [
     "service"
    ]
   },
   "getapplication": {
    "Resources": [
     "application"
    ]
   },
   "getenvironment": {
    "Resources": [
     "environment"
    ]
   },
   "getresourcepolicy": {},
   "getroute": {
    "Resources": [
     "route"
    ]
   },
   "getservice": {
    "Resources": [
     "service"
    ]
   },
   "listapplications": {
    "Resources": [
     "application"
    ]
   },
   "listenvironments": {},
   "listenvironmentvpcs": {
    "Resources": [
     "environment"
    ]
   },
   "listroutes": {
    "Resources": [
     "route"
    ]
   },
   "listservices": {
    "Resources": [
     "environment"
    ]
   },
   "listtagsforresource": {},
   "putresourcepolicy": {},
   "tagresource": {
    "Resources": [
     "application",
     "environment",
     "route",
     "service"
    ]
   },
   "untagresource": {
    "Resources": [
     "application",
     "environment",
     "route",
     "service"
    ]
   },
   "updateroute": {
    "Resources": [
     "route"
    ]
   }
  },
  "Resources": {
   "application": {
    "ARNFormats": [
     "arn:${Partition}:refactor-spaces:${Region}:${Account}:environment/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "refactor-spaces:ApplicationCreatedByAccount",
     "refactor-spaces:CreatedByAccountIds"
    ]
   },
   "environment": {
    "ARNFormats": [
     "arn:${Partition}:refactor-spaces:${Region}:${Account}:environment/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "route": {
    "ARNFormats": [
     "arn:${Partition}:refactor-spaces:${Region}:${Account}:environment/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "refactor-spaces:ApplicationCreatedByAccount",
     "refactor-spaces:CreatedByAccountIds",
     "refactor-spaces:RouteCreatedByAccount",
     "refactor-spaces:ServiceCreatedByAccount",
     "refactor-spaces:SourcePath"
    ]
   },
   "service": {
    "ARNFormats": [
     "arn:${Partition}:refactor-spaces:${Region}:${Account}:environment/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "refactor-spaces:ApplicationCreatedByAccount",
     "refactor-spaces:CreatedByAccountIds",
     "refactor-spaces:ServiceCreatedByAccount"
    ]
   }
  }
 },
 "rekognition": {
  "Actions": {
   "associatefaces": {
    "Resources": [
     "collection"
    ]
   },
   "comparefaces": {},
   "copyprojectversion": {
    "Resources": [
     "project",
     "projectversion"
    ]
   },
   "createcollection": {},
   "createdataset": {
    "Resources": [
     "project"
    ]
   },
   "createfacelivenesssession": {},
   "createproject": {
    "Resources": [
     "project"
    ]
   },
   "createprojectversion": {
    "Resources": [
     "project"
    ]
   },
   "createstreamprocessor": {
    "Resources": [
     "collection"
    ]
   },
   "createuser": {
    "Resources": [
     "collection"
    ]
   },
   "deletecollection": {
    "Resources": [
     "collection"
    ]
   },
   "deletedataset": {
    "Resources": [
     "dataset"
    ]
   },
   "deletefaces": {
    "Resources": [
     "collection"
    ]
   },
   "deleteproject": {
    "Resources": [
     "project"
    ]
   },
   "deleteprojectpolicy": {
    "Resources": [
     "project"
    ]
   },
   "deleteprojectversion": {
    "Resources": [
     "projectversion"
    ]
   },
   "deletestreamprocessor": {
    "Resources": [
     "streamprocessor"
    ]
   },
   "deleteuser": {
    "Resources": [
     "collection"
    ]
   },
   "describecollection": {
    "Resources": [
     "collection"
    ]
   },
   "describedataset": {
    "Resources": [
     "dataset"
    ]
   },
   "describeprojects": {},
   "describeprojectversions": {
    "Resources": [
     "project"
    ]
   },
   "describestreamprocessor": {
    "Resources": [
     "streamprocessor"
    ]
   },
   "detectcustomlabels": {
    "Resources": [
     "projectversion"
    ]
   },
   "detectfaces": {},
   "detectlabels": {},
   "detectmoderationlabels": {
    "Resources": [
     "projectversion"
    ]
   },
   "detectprotectiveequipment": {},
   "detecttext": {},
   "disassociatefaces": {
    "Resources": [
     "collection"
    ]
   },
   "distributedatasetentries": {
    "Resources": [
     "dataset"
    ]
   },
   "getcelebrityinfo": {},
   "getcelebrityrecognition": {},
   "getcontentmoderation": {},
   "getfacedetection": {},
   "getfacelivenesssessionresults": {},
   "getfacesearch": {},
   "getlabeldetection": {},
   "getmediaanalysisjob": {},
   "getpersontracking": {},
   "getsegmentdetection": {},
   "gettextdetection": {},
   "indexfaces": {
    "Resources": [
     "collection"
    ]
   },
   "listcollections": {},
   "listdatasetentries": {
    "Resources": [
     "dataset"
    ]
   },
   "listdatasetlabels": {
    "Resources": [
     "dataset"
    ]
   },
   "listfaces": {
    "Resources": [
     "collection"
    ]
   },
   "listmediaanalysisjobs": {},
   "listprojectpolicies": {
    "Resources": [
     "project"
    ]
   },
   "liststreamprocessors": {
    "Resources": [
     "streamprocessor"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "collection",
     "dataset",
     "project",
     "projectversion",
     "streamprocessor"
    ]
   },
   "listusers": {
    "Resources": [
     "collection"
    ]
   },
   "putprojectpolicy": {
    "Resources": [
     "project"
    ]
   },
   "recognizecelebrities": {},
   "searchfaces": {
    "Resources": [
     "collection"
    ]
   },
   "searchfacesbyimage": {
    "Resources": [
     "collection"
    ]
   },
   "searchusers": {
    "Resources": [
     "collection"
    ]
   },
   "searchusersbyimage": {
    "Resources": [
     "collection"
    ]
   },
   "startcelebrityrecognition": {},
   "startcontentmoderation": {},
   "startfacedetection": {},
   "startfacelivenesssession": {},
   "startfacesearch": {
    "Resources": [
     "collection"
    ]
   },
   "startlabeldetection": {},
   "startmediaanalysisjob": {
    "Resources": [
     "projectversion"
    ]
   },
   "startpersontracking": {},
   "startprojectversion": {
    "Resources": [
     "projectversion"
    ]
   },
   "startsegmentdetection": {},
   "startstreamprocessor": {
    "Resources": [
     "streamprocessor"
    ]
   },
   "starttextdetection": {},
   "stopprojectversion": {
    "Resources": [
     "projectversion"
    ]
   },
   "stopstreamprocessor": {
    "Resources": [
     "streamprocessor"
    ]
   },
   "tagresource": {
    "Resources": [
     "collection",
     "dataset",
     "project",
     "projectversion",
     "streamprocessor"
    ]
   },
   "untagresource": {
    "Resources": [
     "collection",
     "dataset",
     "project",
     "projectversion",
     "streamprocessor"
    ]
   },
   "updatedatasetentries": {
    "Resources": [
     "dataset"
    ]
   },
   "updatestreamprocessor": {
    "Resources": [
     "streamprocessor"
    ]
   }
  },
  "Resources": {
   "collection": {
    "ARNFormats": [
     "arn:${Partition}:rekognition:${Region}:${Account}:collection/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "dataset": {
    "ARNFormats": [
     "arn:${Partition}:rekognition:${Region}:${Account}:project/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "project": {
    "ARNFormats": [
     "arn:${Partition}:rekognition:${Region}:${Account}:project/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "projectversion": {
    "ARNFormats": [
     "arn:${Partition}:rekognition:${Region}:${Account}:project/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "streamprocessor": {
    "ARNFormats": [
     "arn:${Partition}:rekognition:${Region}:${Account}:streamprocessor/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "repostspace": {
  "Actions": {
   "batchaddrole": {
    "Resources": [
     "space"
    ]
   },
   "batchremoverole": {
    "Resources": [
     "space"
    ]
   },
   "createspace": {},
   "deletespace": {
    "Resources": [
     "space"
    ]
   },
   "deregisteradmin": {
    "Resources": [
     "space"
    ]
   },
   "getspace": {
    "Resources": [
     "space"
    ]
   },
   "listspaces": {},
   "listtagsforresource": {
    "Resources": [
     "space"
    ]
   },
   "registeradmin": {
    "Resources": [
     "space"
    ]
   },
   "sendinvites": {
    "Resources": [
     "space"
    ]
   },
   "tagresource": {
    "Resources": [
     "space"
    ]
   },
   "untagresource": {
    "Resources": [
     "space"
    ]
   },
   "updatespace": {
    "Resources": [
     "space"
    ]
   }
  },
  "Resources": {
   "space": {
    "ARNFormats": [
     "arn:${Partition}:repostspace:${Region}:${Account}:space/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "resiliencehub": {
  "Actions": {
   "acceptresourcegroupingrecommendations": {
    "Resources": [
     "application"
    ]
   },
   "adddraftappversionresourcemappings": {
    "Resources": [
     "application"
    ]
   },
   "batchupdaterecommendationstatus": {
    "Resources": [
     "application"
    ]
   },
   "createapp": {},
   "createappversionappcomponent": {
    "Resources": [
     "application"
    ]
   },
   "createappversionresource": {
    "Resources": [
     "application"
    ]
   },
   "createrecommendationtemplate": {
    "Resources": [
     "application"
    ]
   },
   "createresiliencypolicy": {},
   "deleteapp": {
    "Resources": [
     "application"
    ]
   },
   "deleteappassessment": {
    "Resources": [
     "application"
    ]
   },
   "deleteappinputsource": {
    "Resources": [
     "application"
    ]
   },
   "deleteappversionappcomponent": {
    "Resources": [
     "application"
    ]
   },
   "deleteappversionresource": {
    "Resources": [
     "application"
    ]
   },
   "deleterecommendationtemplate": {
    "Resources": [
     "application"
    ]
   },
   "deleteresiliencypolicy": {
    "Resources": [
     "resiliency-policy"
    ]
   },
   "describeapp": {
    "Resources": [
     "application"
    ]
   },
   "describeappassessment": {
    "Resources": [
     "application"
    ]
   },
   "describeappversion": {
    "Resources": [
     "application"
    ]
   },
   "describeappversionappcomponent": {
    "Resources": [
     "application"
    ]
   },
   "describeappversionresource": {
    "Resources": [
     "application"
    ]
   },
   "describeappversionresourcesresolutionstatus": {
    "Resources": [
     "application"
    ]
   },
   "describeappversiontemplate": {
    "Resources": [
     "application"
    ]
   },
   "describedraftappversionresourcesimportstatus": {
    "Resources": [
     "application"
    ]
   },
   "describemetricsexport": {},
   "describeresiliencypolicy": {
    "Resources": [
     "resiliency-policy"
    ]
   },
   "describeresourcegroupingrecommendationtask": {
    "Resources": [
     "application"
    ]
   },
   "importresourcestodraftappversion": {
    "Resources": [
     "application"
    ]
   },
   "listalarmrecommendations": {
    "Resources": [
     "application"
    ]
   },
   "listappassessmentcompliancedrifts": {
    "Resources": [
     "application"
    ]
   },
   "listappassessmentresourcedrifts": {
    "Resources": [
     "application"
    ]
   },
   "listappassessments": {},
   "listappcomponentcompliances": {
    "Resources": [
     "application"
    ]
   },
   "listappcomponentrecommendations": {
    "Resources": [
     "application"
    ]
   },
   "listappinputsources": {
    "Resources": [
     "application"
    ]
   },
   "listapps": {},
   "listappversionappcomponents": {
    "Resources": [
     "application"
    ]
   },
   "listappversionresourcemappings": {
    "Resources": [
     "application"
    ]
   },
   "listappversionresources": {
    "Resources": [
     "application"
    ]
   },
   "listappversions": {
    "Resources": [
     "application"
    ]
   },
   "listmetrics": {},
   "listrecommendationtemplates": {
    "Resources": [
     "application"
    ]
   },
   "listresiliencypolicies": {},
   "listresourcegroupingrecommendations": {
    "Resources": [
     "application"
    ]
   },
   "listsoprecommendations": {
    "Resources": [
     "application"
    ]
   },
   "listsuggestedresiliencypolicies": {},
   "listtagsforresource": {},
   "listtestrecommendations": {
    "Resources": [
     "application"
    ]
   },
   "listunsupportedappversionresources": {
    "Resources": [
     "application"
    ]
   },
   "publishappversion": {
    "Resources": [
     "application"
    ]
   },
   "putdraftappversiontemplate": {
    "Resources": [
     "application"
    ]
   },
   "rejectresourcegroupingrecommendations": {
    "Resources": [
     "application"
    ]
   },
   "removedraftappversionresourcemappings": {
    "Resources": [
     "application"
    ]
   },
   "resolveappversionresources": {
    "Resources": [
     "application"
    ]
   },
   "startappassessment": {
    "Resources": [
     "application"
    ]
   },
   "startmetricsexport": {},
   "startresourcegroupingrecommendationtask": {
    "Resources": [
     "application"
    ]
   },
   "tagresource": {
    "Resources": [
     "app-assessment",
     "application",
     "recommendation-template",
     "resiliency-policy"
    ]
   },
   "untagresource": {
    "Resources": [
     "app-assessment",
     "application",
     "recommendation-template",
     "resiliency-policy"
    ]
   },
   "updateapp": {
    "Resources": [
     "application"
    ]
   },
   "updateappversion": {
    "Resources": [
     "application"
    ]
   },
   "updateappversionappcomponent": {
    "Resources": [
     "application"
    ]
   },
   "updateappversionresource": {
    "Resources": [
     "application"
    ]
   },
   "updateresiliencypolicy": {
    "Resources": [
     "resiliency-policy"
    ]
   }
  },
  "Resources": {
   "app-assessment": {
    "ARNFormats": [
     "arn:${Partition}:resiliencehub:${Region}:${Account}:app-assessment/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "application": {
    "ARNFormats": [
     "arn:${Partition}:resiliencehub:${Region}:${Account}:app/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "recommendation-template": {
    "ARNFormats": [
     "arn:${Partition}:resiliencehub:${Region}:${Account}:recommendation-template/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "resiliency-policy": {
    "ARNFormats": [
     "arn:${Partition}:resiliencehub:${Region}:${Account}:resiliency-policy/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "resource-explorer": {
  "Actions": {
   "listresources": {},
   "listresourcetypes": {},
   "listtags": {}
  },
  "Resources": {}
 },
 "resource-explorer-2": {
  "Actions": {
   "associatedefaultview": {},
   "batchgetview": {},
   "createindex": {},
   "createmanagedview": {},
   "createview": {},
   "deleteindex": {
    "Resources": [
     "index"
    ]
   },
   "deleteresourcepolicy": {
    "Resources": [
     "view"
    ]
   },
   "deleteview": {
    "Resources": [
     "view"
    ]
   },
   "disassociatedefaultview": {},
   "getaccountlevelserviceconfiguration": {},
   "getdefaultview": {},
   "getindex": {},
   "getmanagedview": {
    "Resources": [
     "managed-view"
    ]
   },
   "getresourcepolicy": {
    "Resources": [
     "view"
    ]
   },
   "getview": {
    "Resources": [
     "view"
    ]
   },
   "listindexes": {},
   "listindexesformembers": {},
   "listmanagedviews": {},
   "listsupportedresourcetypes": {},
   "listtagsforresource": {
    "Resources": [
     "index",
     "view"
    ]
   },
   "listviews": {},
   "putresourcepolicy": {
    "Resources": [
     "view"
    ]
   },
   "search": {
    "Resources": [
     "view"
    ]
   },
   "tagresource": {
    "Resources": [
     "index",
     "view"
    ]
   },
   "untagresource": {
    "Resources": [
     "index",
     "view"
    ]
   },
   "updateindextype": {
    "Resources": [
     "index"
    ]
   },
   "updateview": {
    "Resources": [
     "view"
    ]
   }
  },
  "Resources": {
   "index": {
    "ARNFormats": [
     "arn:${Partition}:resource-explorer-2:${Region}:${Account}:index/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "managed-view": {
    "ARNFormats": [
     "arn:${Partition}:resource-explorer-2:${Region}:${Account}:managed-view/.*"
    ]
   },
   "view": {
    "ARNFormats": [
     "arn:${Partition}:resource-explorer-2:${Region}:${Account}:view/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "resource-groups": {
  "Actions": {
   "associateresource": {
    "Resources": [
     "group"
    ]
   },
   "canceltagsynctask": {
    "Resources": [
     "group"
    ]
   },
   "creategroup": {},
   "deletegroup": {
    "Resources": [
     "group"
    ]
   },
   "deletegrouppolicy": {
    "Resources": [
     "group"
    ]
   },
   "disassociateresource": {
    "Resources": [
     "group"
    ]
   },
   "getaccountsettings": {},
   "getgroup": {
    "Resources": [
     "group"
    ]
   },
   "getgroupconfiguration": {
    "Resources": [
     "group"
    ]
   },
   "getgrouppolicy": {
    "Resources": [
     "group"
    ]
   },
   "getgroupquery": {
    "Resources": [
     "group"
    ]
   },
   "gettags": {
    "Resources": [
     "group"
    ]
   },
   "gettagsynctask": {
    "Resources": [
     "group"
    ]
   },
   "groupresources": {
    "Resources": [
     "group"
    ]
   },
   "listgroupingstatuses": {
    "Resources": [
     "group"
    ]
   },
   "listgroupresources": {
    "Resources": [
     "group"
    ]
   },
   "listgroups": {},
   "listresourcetypes": {},
   "listtagsynctasks": {
    "Resources": [
     "group"
    ]
   },
   "putgroupconfiguration": {
    "Resources": [
     "group"
    ]
   },
   "putgrouppolicy": {
    "Resources": [
     "group"
    ]
   },
   "searchresources": {},
   "starttagsynctask": {
    "Resources": [
     "group"
    ]
   },
   "tag": {
    "Resources": [
     "group"
    ]
   },
   "ungroupresources": {
    "Resources": [
     "group"
    ]
   },
   "untag": {
    "Resources": [
     "group"
    ]
   },
   "updateaccountsettings": {},
   "updategroup": {
    "Resources": [
     "group"
    ]
   },
   "updategroupquery": {
    "Resources": [
     "group"
    ]
   }
  },
  "Resources": {
   "group": {
    "ARNFormats": [
     "arn:${Partition}:resource-groups:${Region}:${Account}:group/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "tagsynctask": {
    "ARNFormats": [
     "arn:${Partition}:resource-groups:${Region}:${Account}:group/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "rhelkb": {
  "Actions": {
   "getrhelurl": {}
  },
  "Resources": {}
 },
 "robomaker": {
  "Actions": {
   "batchdeleteworlds": {},
   "batchdescribesimulationjob": {},
   "canceldeploymentjob": {
    "Resources": [
     "deploymentJob"
    ]
   },
   "cancelsimulationjob": {
    "Resources": [
     "simulationJob"
    ]
   },
   "cancelsimulationjobbatch": {
    "Resources": [
     "simulationJobBatch"
    ]
   },
   "cancelworldexportjob": {
    "Resources": [
     "worldExportJob"
    ]
   },
   "cancelworldgenerationjob": {
    "Resources": [
     "worldGenerationJob"
    ]
   },
   "createdeploymentjob": {},
   "createfleet": {},
   "createrobot": {},
   "createrobotapplication": {},
   "createrobotapplicationversion": {
    "Resources": [
     "robotApplication"
    ]
   },
   "createsimulationapplication": {},
   "createsimulationapplicationversion": {
    "Resources": [
     "simulationApplication"
    ]
   },
   "createsimulationjob": {},
   "createworldexportjob": {
    "Resources": [
     "world"
    ]
   },
   "createworldgenerationjob": {
    "Resources": [
     "worldTemplate"
    ]
   },
   "createworldtemplate": {},
   "deletefleet": {
    "Resources": [
     "deploymentFleet"
    ]
   },
   "deleterobot": {
    "Resources": [
     "robot"
    ]
   },
   "deleterobotapplication": {
    "Resources": [
     "robotApplication"
    ]
   },
   "deletesimulationapplication": {
    "Resources": [
     "simulationApplication"
    ]
   },
   "deleteworldtemplate": {
    "Resources": [
     "worldTemplate"
    ]
   },
   "deregisterrobot": {
    "Resources": [
     "deploymentFleet",
     "robot"
    ]
   },
   "describedeploymentjob": {
    "Resources": [
     "deploymentJob"
    ]
   },
   "describefleet": {
    "Resources": [
     "deploymentFleet"
    ]
   },
   "describerobot": {
    "Resources": [
     "robot"
    ]
   },
   "describerobotapplication": {
    "Resources": [
     "robotApplication"
    ]
   },
   "describesimulationapplication": {
    "Resources": [
     "simulationApplication"
    ]
   },
   "describesimulationjob": {
    "Resources": [
     "simulationJob"
    ]
   },
   "describesimulationjobbatch": {
    "Resources": [
     "simulationJobBatch"
    ]
   },
   "describeworld": {
    "Resources": [
     "world"
    ]
   },
   "describeworldexportjob": {
    "Resources": [
     "worldExportJob"
    ]
   },
   "describeworldgenerationjob": {
    "Resources": [
     "worldGenerationJob"
    ]
   },
   "describeworldtemplate": {
    "Resources": [
     "worldTemplate"
    ]
   },
   "getworldtemplatebody": {
    "Resources": [
     "worldTemplate"
    ]
   },
   "listdeploymentjobs": {},
   "listfleets": {},
   "listrobotapplications": {},
   "listrobots": {},
   "listsimulationapplications": {},
   "listsimulationjobbatches": {},
   "listsimulationjobs": {},
   "listsupportedavailabilityzones": {},
   "listtagsforresource": {
    "Resources": [
     "deploymentFleet",
     "deploymentJob",
     "robot",
     "robotApplication",
     "simulationApplication",
     "simulationJob",
     "simulationJobBatch",
     "world",
     "worldExportJob",
     "worldGenerationJob",
     "worldTemplate"
    ]
   },
   "listworldexportjobs": {},
   "listworldgenerationjobs": {},
   "listworlds": {},
   "listworldtemplates": {},
   "registerrobot": {
    "Resources": [
     "deploymentFleet",
     "robot"
    ]
   },
   "restartsimulationjob": {
    "Resources": [
     "simulationJob"
    ]
   },
   "startsimulationjobbatch": {},
   "syncdeploymentjob": {
    "Resources": [
     "deploymentFleet"
    ]
   },
   "tagresource": {
    "Resources": [
     "deploymentFleet",
     "deploymentJob",
     "robot",
     "robotApplication",
     "simulationApplication",
     "simulationJob",
     "simulationJobBatch",
     "world",
     "worldExportJob",
     "worldGenerationJob",
     "worldTemplate"
    ]
   },
   "untagresource": {
    "Resources": [
     "deploymentFleet",
     "deploymentJob",
     "robot",
     "robotApplication",
     "simulationApplication",
     "simulationJob",
     "simulationJobBatch",
     "world",
     "worldExportJob",
     "worldGenerationJob",
     "worldTemplate"
    ]
   },
   "updaterobotapplication": {
    "Resources": [
     "robotApplication"
    ]
   },
   "updaterobotdeployment": {},
   "updatesimulationapplication": {
    "Resources": [
     "simulationApplication"
    ]
   },
   "updateworldtemplate": {
    "Resources": [
     "worldTemplate"
    ]
   }
  },
  "Resources": {
   "deploymentfleet": {
    "ARNFormats": [
     "arn:${Partition}:robomaker:${Region}:${Account}:deployment-fleet/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "deploymentjob": {
    "ARNFormats": [
     "arn:${Partition}:robomaker:${Region}:${Account}:deployment-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "robot": {
    "ARNFormats": [
     "arn:${Partition}:robomaker:${Region}:${Account}:robot/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "robotapplication": {
    "ARNFormats": [
     "arn:${Partition}:robomaker:${Region}:${Account}:robot-application/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "simulationapplication": {
    "ARNFormats": [
     "arn:${Partition}:robomaker:${Region}:${Account}:simulation-application/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "simulationjob": {
    "ARNFormats": [
     "arn:${Partition}:robomaker:${Region}:${Account}:simulation-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "simulationjobbatch": {
    "ARNFormats": [
     "arn:${Partition}:robomaker:${Region}:${Account}:simulation-job-batch/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "world": {
    "ARNFormats": [
     "arn:${Partition}:robomaker:${Region}:${Account}:world/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "worldexportjob": {
    "ARNFormats": [
     "arn:${Partition}:robomaker:${Region}:${Account}:world-export-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "worldgenerationjob": {
    "ARNFormats": [
     "arn:${Partition}:robomaker:${Region}:${Account}:world-generation-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "worldtemplate": {
    "ARNFormats": [
     "arn:${Partition}:robomaker:${Region}:${Account}:world-template/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "rolesanywhere": {
  "Actions": {
   "createprofile": {},
   "createtrustanchor": {},
   "deleteattributemapping": {
    "Resources": [
     "profile"
    ]
   },
   "deletecrl": {
    "Resources": [
     "crl"
    ]
   },
   "deleteprofile": {
    "Resources": [
     "profile"
    ]
   },
   "deletetrustanchor": {
    "Resources": [
     "trust-anchor"
    ]
   },
   "disablecrl": {
    "Resources": [
     "crl"
    ]
   },
   "disableprofile": {
    "Resources": [
     "profile"
    ]
   },
   "disabletrustanchor": {
    "Resources": [
     "trust-anchor"
    ]
   },
   "enablecrl": {
    "Resources": [
     "crl"
    ]
   },
   "enableprofile": {
    "Resources": [
     "profile"
    ]
   },
   "enabletrustanchor": {
    "Resources": [
     "trust-anchor"
    ]
   },
   "getcrl": {
    "Resources": [
     "crl"
    ]
   },
   "getprofile": {
    "Resources": [
     "profile"
    ]
   },
   "getsubject": {
    "Resources": [
     "subject"
    ]
   },
   "gettrustanchor": {
    "Resources": [
     "trust-anchor"
    ]
   },
   "importcrl": {},
   "listcrls": {},
   "listprofiles": {},
   "listsubjects": {},
   "listtagsforresource": {},
   "listtrustanchors": {},
   "putattributemapping": {
    "Resources": [
     "profile"
    ]
   },
   "putnotificationsettings": {
    "Resources": [
     "trust-anchor"
    ]
   },
   "resetnotificationsettings": {
    "Resources": [
     "trust-anchor"
    ]
   },
   "tagresource": {
    "Resources": [
     "crl",
     "profile",
     "subject",
     "trust-anchor"
    ]
   },
   "untagresource": {
    "Resources": [
     "crl",
     "profile",
     "subject",
     "trust-anchor"
    ]
   },
   "updatecrl": {
    "Resources": [
     "crl"
    ]
   },
   "updateprofile": {
    "Resources": [
     "profile"
    ]
   },
   "updatetrustanchor": {
    "Resources": [
     "trust-anchor"
    ]
   }
  },
  "Resources": {
   "crl": {
    "ARNFormats": [
     "arn:${Partition}:rolesanywhere:${Region}:${Account}:crl/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "profile": {
    "ARNFormats": [
     "arn:${Partition}:rolesanywhere:${Region}:${Account}:profile/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "subject": {
    "ARNFormats": [
     "arn:${Partition}:rolesanywhere:${Region}:${Account}:subject/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "trust-anchor": {
    "ARNFormats": [
     "arn:${Partition}:rolesanywhere:${Region}:${Account}:trust-anchor/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "route53": {
  "Actions": {
   "activatekeysigningkey": {
    "Resources": [
     "hostedzone"
    ]
   },
   "associatevpcwithhostedzone": {
    "Resources": [
     "hostedzone"
    ]
   },
   "changecidrcollection": {
    "Resources": [
     "cidrcollection"
    ]
   },
   "changeresourcerecordsets": {
    "Resources": [
     "hostedzone"
    ]
   },
   "changetagsforresource": {
    "Resources": [
     "healthcheck",
     "hostedzone"
    ]
   },
   "createcidrcollection": {},
   "createhealthcheck": {},
   "createhostedzone": {},
   "createkeysigningkey": {
    "Resources": [
     "hostedzone"
    ]
   },
   "createqueryloggingconfig": {
    "Resources": [
     "hostedzone"
    ]
   },
   "createreusabledelegationset": {},
   "createtrafficpolicy": {},
   "createtrafficpolicyinstance": {
    "Resources": [
     "hostedzone",
     "trafficpolicy"
    ]
   },
   "createtrafficpolicyversion": {
    "Resources": [
     "trafficpolicy"
    ]
   },
   "createvpcassociationauthorization": {
    "Resources": [
     "hostedzone"
    ]
   },
   "deactivatekeysigningkey": {
    "Resources": [
     "hostedzone"
    ]
   },
   "deletecidrcollection": {
    "Resources": [
     "cidrcollection"
    ]
   },
   "deletehealthcheck": {
    "Resources": [
     "healthcheck"
    ]
   },
   "deletehostedzone": {
    "Resources": [
     "hostedzone"
    ]
   },
   "deletekeysigningkey": {
    "Resources": [
     "hostedzone"
    ]
   },
   "deletequeryloggingconfig": {
    "Resources": [
     "queryloggingconfig"
    ]
   },
   "deletereusabledelegationset": {
    "Resources": [
     "delegationset"
    ]
   },
   "deletetrafficpolicy": {
    "Resources": [
     "trafficpolicy"
    ]
   },
   "deletetrafficpolicyinstance": {
    "Resources": [
     "trafficpolicyinstance"
    ]
   },
   "deletevpcassociationauthorization": {
    "Resources": [
     "hostedzone"
    ]
   },
   "disablehostedzonednssec": {
    "Resources": [
     "hostedzone"
    ]
   },
   "disassociatevpcfromhostedzone": {
    "Resources": [
     "hostedzone"
    ]
   },
   "enablehostedzonednssec": {
    "Resources": [
     "hostedzone"
    ]
   },
   "getaccountlimit": {},
   "getchange": {
    "Resources": [
     "change"
    ]
   },
   "getcheckeripranges": {},
   "getdnssec": {
    "Resources": [
     "hostedzone"
    ]
   },
   "getgeolocation": {},
   "gethealthcheck": {
    "Resources": [
     "healthcheck"
    ]
   },
   "gethealthcheckcount": {},
   "gethealthchecklastfailurereason": {
    "Resources": [
     "healthcheck"
    ]
   },
   "gethealthcheckstatus": {
    "Resources": [
     "healthcheck"
    ]
   },
   "gethostedzone": {
    "Resources": [
     "hostedzone"
    ]
   },
   "gethostedzonecount": {},
   "gethostedzonelimit": {
    "Resources": [
     "hostedzone"
    ]
   },
   "getqueryloggingconfig": {
    "Resources": [
     "queryloggingconfig"
    ]
   },
   "getreusabledelegationset": {
    "Resources": [
     "delegationset"
    ]
   },
   "getreusabledelegationsetlimit": {
    "Resources": [
     "delegationset"
    ]
   },
   "gettrafficpolicy": {
    "Resources": [
     "trafficpolicy"
    ]
   },
   "gettrafficpolicyinstance": {
    "Resources": [
     "trafficpolicyinstance"
    ]
   },
   "gettrafficpolicyinstancecount": {},
   "listcidrblocks": {
    "Resources": [
     "cidrcollection"
    ]
   },
   "listcidrcollections": {},
   "listcidrlocations": {
    "Resources": [
     "cidrcollection"
    ]
   },
   "listgeolocations": {},
   "listhealthchecks": {},
   "listhostedzones": {},
   "listhostedzonesbyname": {},
   "listhostedzonesbyvpc": {},
   "listqueryloggingconfigs": {
    "Resources": [
     "hostedzone"
    ]
   },
   "listresourcerecordsets": {
    "Resources": [
     "hostedzone"
    ]
   },
   "listreusabledelegationsets": {},
   "listtagsforresource": {
    "Resources": [
     "healthcheck",
     "hostedzone"
    ]
   },
   "listtagsforresources": {
    "Resources": [
     "healthcheck",
     "hostedzone"
    ]
   },
   "listtrafficpolicies": {},
   "listtrafficpolicyinstances": {},
   "listtrafficpolicyinstancesbyhostedzone": {
    "Resources": [
     "hostedzone"
    ]
   },
   "listtrafficpolicyinstancesbypolicy": {
    "Resources": [
     "trafficpolicy"
    ]
   },
   "listtrafficpolicyversions": {
    "Resources": [
     "trafficpolicy"
    ]
   },
   "listvpcassociationauthorizations": {
    "Resources": [
     "hostedzone"
    ]
   },
   "testdnsanswer": {},
   "updatehealthcheck": {
    "Resources": [
     "healthcheck"
    ]
   },
   "updatehostedzonecomment": {
    "Resources": [
     "hostedzone"
    ]
   },
   "updatetrafficpolicycomment": {
    "Resources": [
     "trafficpolicy"
    ]
   },
   "updatetrafficpolicyinstance": {
    "Resources": [
     "trafficpolicyinstance"
    ]
   }
  },
  "Resources": {
   "change": {
    "ARNFormats": [
     "arn:${Partition}:route53:::change/.*"
    ]
   },
   "cidrcollection": {
    "ARNFormats": [
     "arn:${Partition}:route53:::cidrcollection/.*"
    ]
   },
   "delegationset": {
    "ARNFormats": [
     "arn:${Partition}:route53:::delegationset/.*"
    ]
   },
   "healthcheck": {
    "ARNFormats": [
     "arn:${Partition}:route53:::healthcheck/.*"
    ]
   },
   "hostedzone": {
    "ARNFormats": [
     "arn:${Partition}:route53:::hostedzone/.*"
    ]
   },
   "queryloggingconfig": {
    "ARNFormats": [
     "arn:${Partition}:route53:::queryloggingconfig/.*"
    ]
   },
   "trafficpolicy": {
    "ARNFormats": [
     "arn:${Partition}:route53:::trafficpolicy/.*"
    ]
   },
   "trafficpolicyinstance": {
    "ARNFormats": [
     "arn:${Partition}:route53:::trafficpolicyinstance/.*"
    ]
   },
   "vpc": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:vpc/.*"
    ]
   }
  }
 },
 "route53-recovery-cluster": {
  "Actions": {
   "getroutingcontrolstate": {
    "Resources": [
     "routingcontrol"
    ]
   },
   "listroutingcontrols": {},
   "updateroutingcontrolstate": {
    "Resources": [
     "routingcontrol"
    ]
   },
   "updateroutingcontrolstates": {
    "Resources": [
     "routingcontrol"
    ]
   }
  },
  "Resources": {
   "routingcontrol": {
    "ARNFormats": [
     "arn:${Partition}:route53-recovery-control::${Account}:controlpanel/.*"
    ]
   }
  }
 },
 "route53-recovery-control-config": {
  "Actions": {
   "createcluster": {
    "Resources": [
     "cluster"
    ]
   },
   "createcontrolpanel": {
    "Resources": [
     "controlpanel"
    ]
   },
   "createroutingcontrol": {
    "Resources": [
     "routingcontrol"
    ]
   },
   "createsafetyrule": {
    "Resources": [
     "safetyrule"
    ]
   },
   "deletecluster": {
    "Resources": [
     "cluster"
    ]
   },
   "deletecontrolpanel": {
    "Resources": [
     "controlpanel"
    ]
   },
   "deleteroutingcontrol": {
    "Resources": [
     "routingcontrol"
    ]
   },
   "deletesafetyrule": {
    "Resources": [
     "safetyrule"
    ]
   },
   "describecluster": {
    "Resources": [
     "cluster"
    ]
   },
   "describecontrolpanel": {
    "Resources": [
     "controlpanel"
    ]
   },
   "describeroutingcontrol": {
    "Resources": [
     "routingcontrol"
    ]
   },
   "describeroutingcontrolbyname": {
    "Resources": [
     "routingcontrol"
    ]
   },
   "describesafetyrule": {
    "Resources": [
     "safetyrule"
    ]
   },
   "getresourcepolicy": {
    "Resources": [
     "cluster"
    ]
   },
   "listassociatedroute53healthchecks": {},
   "listclusters": {},
   "listcontrolpanels": {},
   "listroutingcontrols": {},
   "listsafetyrules": {
    "Resources": [
     "controlpanel"
    ]
   },
   "listtagsforresource": {},
   "tagresource": {
    "Resources": [
     "cluster",
     "controlpanel",
     "safetyrule"
    ]
   },
   "untagresource": {
    "Resources": [
     "cluster",
     "controlpanel",
     "safetyrule"
    ]
   },
   "updatecluster": {
    "Resources": [
     "cluster"
    ]
   },
   "updatecontrolpanel": {
    "Resources": [
     "controlpanel"
    ]
   },
   "updateroutingcontrol": {
    "Resources": [
     "routingcontrol"
    ]
   },
   "updatesafetyrule": {
    "Resources": [
     "safetyrule"
    ]
   }
  },
  "Resources": {
   "cluster": {
    "ARNFormats": [
     "arn:${Partition}:route53-recovery-control::${Account}:cluster/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "controlpanel": {
    "ARNFormats": [
     "arn:${Partition}:route53-recovery-control::${Account}:controlpanel/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "routingcontrol": {
    "ARNFormats": [
     "arn:${Partition}:route53-recovery-control::${Account}:controlpanel/.*"
    ]
   },
   "safetyrule": {
    "ARNFormats": [
     "arn:${Partition}:route53-recovery-control::${Account}:controlpanel/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "route53-recovery-readiness": {
  "Actions": {
   "createcell": {
    "Resources": [
     "cell"
    ]
   },
   "createcrossaccountauthorization": {},
   "createreadinesscheck": {
    "Resources": [
     "readinesscheck"
    ]
   },
   "createrecoverygroup": {
    "Resources": [
     "recoverygroup"
    ]
   },
   "createresourceset": {
    "Resources": [
     "resourceset"
    ]
   },
   "deletecell": {
    "Resources": [
     "cell"
    ]
   },
   "deletecrossaccountauthorization": {},
   "deletereadinesscheck": {
    "Resources": [
     "readinesscheck"
    ]
   },
   "deleterecoverygroup": {
    "Resources": [
     "recoverygroup"
    ]
   },
   "deleteresourceset": {
    "Resources": [
     "resourceset"
    ]
   },
   "getarchitecturerecommendations": {
    "Resources": [
     "recoverygroup"
    ]
   },
   "getcell": {
    "Resources": [
     "cell"
    ]
   },
   "getcellreadinesssummary": {
    "Resources": [
     "cell"
    ]
   },
   "getreadinesscheck": {
    "Resources": [
     "readinesscheck"
    ]
   },
   "getreadinesscheckresourcestatus": {
    "Resources": [
     "readinesscheck"
    ]
   },
   "getreadinesscheckstatus": {
    "Resources": [
     "readinesscheck"
    ]
   },
   "getrecoverygroup": {
    "Resources": [
     "recoverygroup"
    ]
   },
   "getrecoverygroupreadinesssummary": {
    "Resources": [
     "recoverygroup"
    ]
   },
   "getresourceset": {
    "Resources": [
     "resourceset"
    ]
   },
   "listcells": {},
   "listcrossaccountauthorizations": {},
   "listreadinesschecks": {},
   "listrecoverygroups": {},
   "listresourcesets": {},
   "listrules": {},
   "listtagsforresources": {},
   "tagresource": {
    "Resources": [
     "cell",
     "readinesscheck",
     "recoverygroup",
     "resourceset"
    ]
   },
   "untagresource": {
    "Resources": [
     "cell",
     "readinesscheck",
     "recoverygroup",
     "resourceset"
    ]
   },
   "updatecell": {
    "Resources": [
     "cell"
    ]
   },
   "updatereadinesscheck": {
    "Resources": [
     "readinesscheck"
    ]
   },
   "updaterecoverygroup": {
    "Resources": [
     "recoverygroup"
    ]
   },
   "updateresourceset": {
    "Resources": [
     "resourceset"
    ]
   }
  },
  "Resources": {
   "cell": {
    "ARNFormats": [
     "arn:${Partition}:route53-recovery-readiness::${Account}:cell/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "readinesscheck": {
    "ARNFormats": [
     "arn:${Partition}:route53-recovery-readiness::${Account}:readiness-check/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "recoverygroup": {
    "ARNFormats": [
     "arn:${Partition}:route53-recovery-readiness::${Account}:recovery-group/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "resourceset": {
    "ARNFormats": [
     "arn:${Partition}:route53-recovery-readiness::${Account}:resource-set/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "route53domains": {
  "Actions": {
   "acceptdomaintransferfromanotherawsaccount": {},
   "associatedelegationsignertodomain": {},
   "canceldomaintransfertoanotherawsaccount": {},
   "checkdomainavailability": {},
   "checkdomaintransferability": {},
   "deletedomain": {},
   "deletetagsfordomain": {},
   "disabledomainautorenew": {},
   "disabledomaintransferlock": {},
   "disassociatedelegationsignerfromdomain": {},
   "enabledomainautorenew": {},
   "enabledomaintransferlock": {},
   "getcontactreachabilitystatus": {},
   "getdomaindetail": {},
   "getdomainsuggestions": {},
   "getoperationdetail": {},
   "listdomains": {},
   "listoperations": {},
   "listprices": {},
   "listtagsfordomain": {},
   "pushdomain": {},
   "registerdomain": {},
   "rejectdomaintransferfromanotherawsaccount": {},
   "renewdomain": {},
   "resendcontactreachabilityemail": {},
   "resendoperationauthorization": {},
   "retrievedomainauthcode": {},
   "transferdomain": {},
   "transferdomaintoanotherawsaccount": {},
   "updatedomaincontact": {},
   "updatedomaincontactprivacy": {},
   "updatedomainnameservers": {},
   "updatetagsfordomain": {},
   "viewbilling": {}
  },
  "Resources": {}
 },
 "route53profiles": {
  "Actions": {
   "associateprofile": {},
   "associateresourcetoprofile": {},
   "createprofile": {},
   "deleteprofile": {},
   "disassociateprofile": {},
   "disassociateresourcefromprofile": {},
   "getprofile": {},
   "getprofileassociation": {},
   "getprofilepolicy": {
    "Resources": [
     "profile"
    ]
   },
   "getprofileresourceassociation": {},
   "listprofileassociations": {},
   "listprofileresourceassociations": {},
   "listprofiles": {},
   "listtagsforresource": {},
   "putprofilepolicy": {
    "Resources": [
     "profile"
    ]
   },
   "tagresource": {
    "Resources": [
     "profile",
     "profile-association"
    ]
   },
   "untagresource": {
    "Resources": [
     "profile",
     "profile-association"
    ]
   },
   "updateprofileresourceassociation": {}
  },
  "Resources": {
   "profile": {
    "ARNFormats": [
     "arn:${Partition}:route53profiles:${Region}:${Account}:profile/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "profile-association": {
    "ARNFormats": [
     "arn:${Partition}:route53profiles:${Region}:${Account}:profile-association/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "route53resolver": {
  "Actions": {
   "associatefirewallrulegroup": {
    "Resources": [
     "firewall-rule-group-association"
    ]
   },
   "associateresolverendpointipaddress": {
    "Resources": [
     "resolver-endpoint"
    ]
   },
   "associateresolverquerylogconfig": {
    "Resources": [
     "resolver-query-log-config"
    ]
   },
   "associateresolverrule": {
    "Resources": [
     "resolver-rule"
    ]
   },
   "createfirewalldomainlist": {
    "Resources": [
     "firewall-domain-list"
    ]
   },
   "createfirewallrule": {
    "Resources": [
     "firewall-domain-list",
     "firewall-rule-group"
    ]
   },
   "createfirewallrulegroup": {
    "Resources": [
     "firewall-rule-group"
    ]
   },
   "createoutpostresolver": {
    "Resources": [
     "outpost-resolver"
    ]
   },
   "createresolverendpoint": {
    "Resources": [
     "resolver-endpoint"
    ]
   },
   "createresolverquerylogconfig": {},
   "createresolverrule": {
    "Resources": [
     "resolver-rule"
    ]
   },
   "deletefirewalldomainlist": {
    "Resources": [
     "firewall-domain-list"
    ]
   },
   "deletefirewallrule": {
    "Resources": [
     "firewall-domain-list",
     "firewall-rule-group"
    ]
   },
   "deletefirewallrulegroup": {
    "Resources": [
     "firewall-rule-group"
    ]
   },
   "deleteoutpostresolver": {
    "Resources": [
     "outpost-resolver"
    ]
   },
   "deleteresolverendpoint": {
    "Resources": [
     "resolver-endpoint"
    ]
   },
   "deleteresolverquerylogconfig": {
    "Resources": [
     "resolver-query-log-config"
    ]
   },
   "deleteresolverrule": {
    "Resources": [
     "resolver-rule"
    ]
   },
   "disassociatefirewallrulegroup": {
    "Resources": [
     "firewall-rule-group-association"
    ]
   },
   "disassociateresolverendpointipaddress": {
    "Resources": [
     "resolver-endpoint"
    ]
   },
   "disassociateresolverquerylogconfig": {
    "Resources": [
     "resolver-query-log-config"
    ]
   },
   "disassociateresolverrule": {
    "Resources": [
     "resolver-rule"
    ]
   },
   "getfirewallconfig": {
    "Resources": [
     "firewall-config"
    ]
   },
   "getfirewalldomainlist": {
    "Resources": [
     "firewall-domain-list"
    ]
   },
   "getfirewallrulegroup": {
    "Resources": [
     "firewall-rule-group"
    ]
   },
   "getfirewallrulegroupassociation": {
    "Resources": [
     "firewall-rule-group-association"
    ]
   },
   "getfirewallrulegrouppolicy": {
    "Resources": [
     "firewall-rule-group"
    ]
   },
   "getoutpostresolver": {
    "Resources": [
     "outpost-resolver"
    ]
   },
   "getresolverconfig": {
    "Resources": [
     "resolver-config"
    ]
   },
   "getresolverdnssecconfig": {
    "Resources": [
     "resolver-dnssec-config"
    ]
   },
   "getresolverendpoint": {
    "Resources": [
     "resolver-endpoint"
    ]
   },
   "getresolverquerylogconfig": {
    "Resources": [
     "resolver-query-log-config"
    ]
   },
   "getresolverquerylogconfigassociation": {},
   "getresolverquerylogconfigpolicy": {
    "Resources": [
     "resolver-query-log-config"
    ]
   },
   "getresolverrule": {
    "Resources": [
     "resolver-rule"
    ]
   },
   "getresolverruleassociation": {
    "Resources": [
     "resolver-rule"
    ]
   },
   "getresolverrulepolicy": {
    "Resources": [
     "resolver-rule"
    ]
   },
   "importfirewalldomains": {
    "Resources": [
     "firewall-domain-list"
    ]
   },
   "listfirewallconfigs": {},
   "listfirewalldomainlists": {},
   "listfirewalldomains": {
    "Resources": [
     "firewall-domain-list"
    ]
   },
   "listfirewallrulegroupassociations": {},
   "listfirewallrulegroups": {},
   "listfirewallrules": {
    "Resources": [
     "firewall-rule-group"
    ]
   },
   "listoutpostresolvers": {},
   "listresolverconfigs": {
    "Resources": [
     "resolver-config"
    ]
   },
   "listresolverdnssecconfigs": {
    "Resources": [
     "resolver-dnssec-config"
    ]
   },
   "listresolverendpointipaddresses": {
    "Resources": [
     "resolver-endpoint"
    ]
   },
   "listresolverendpoints": {},
   "listresolverquerylogconfigassociations": {},
   "listresolverquerylogconfigs": {},
   "listresolverruleassociations": {},
   "listresolverrules": {},
   "listtagsforresource": {
    "Resources": [
     "firewall-domain-list",
     "firewall-rule-group",
     "firewall-rule-group-association",
     "outpost-resolver",
     "resolver-endpoint",
     "resolver-query-log-config",
     "resolver-rule"
    ]
   },
   "putfirewallrulegrouppolicy": {
    "Resources": [
     "firewall-rule-group"
    ]
   },
   "putresolverquerylogconfigpolicy": {
    "Resources": [
     "resolver-query-log-config"
    ]
   },
   "putresolverrulepolicy": {
    "Resources": [
     "resolver-rule"
    ]
   },
   "tagresource": {
    "Resources": [
     "firewall-config",
     "firewall-domain-list",
     "firewall-rule-group",
     "firewall-rule-group-association",
     "outpost-resolver",
     "resolver-dnssec-config",
     "resolver-endpoint",
     "resolver-query-log-config",
     "resolver-rule"
    ]
   },
   "untagresource": {
    "Resources": [
     "firewall-config",
     "firewall-domain-list",
     "firewall-rule-group",
     "firewall-rule-group-association",
     "outpost-resolver",
     "resolver-dnssec-config",
     "resolver-endpoint",
     "resolver-query-log-config",
     "resolver-rule"
    ]
   },
   "updatefirewallconfig": {
    "Resources": [
     "firewall-config"
    ]
   },
   "updatefirewalldomains": {
    "Resources": [
     "firewall-domain-list"
    ]
   },
   "updatefirewallrule": {
    "Resources": [
     "firewall-domain-list",
     "firewall-rule-group"
    ]
   },
   "updatefirewallrulegroupassociation": {
    "Resources": [
     "firewall-rule-group-association"
    ]
   },
   "updateoutpostresolver": {
    "Resources": [
     "outpost-resolver"
    ]
   },
   "updateresolverconfig": {
    "Resources": [
     "resolver-config"
    ]
   },
   "updateresolverdnssecconfig": {
    "Resources": [
     "resolver-dnssec-config"
    ]
   },
   "updateresolverendpoint": {
    "Resources": [
     "resolver-endpoint"
    ]
   },
   "updateresolverrule": {
    "Resources": [
     "resolver-rule"
    ]
   }
  },
  "Resources": {
   "firewall-config": {
    "ARNFormats": [
     "arn:${Partition}:route53resolver:${Region}:${Account}:firewall-config/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "firewall-domain-list": {
    "ARNFormats": [
     "arn:${Partition}:route53resolver:${Region}:${Account}:firewall-domain-list/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "firewall-rule-group": {
    "ARNFormats": [
     "arn:${Partition}:route53resolver:${Region}:${Account}:firewall-rule-group/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "firewall-rule-group-association": {
    "ARNFormats": [
     "arn:${Partition}:route53resolver:${Region}:${Account}:firewall-rule-group-association/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "outpost-resolver": {
    "ARNFormats": [
     "arn:${Partition}:route53resolver:${Region}:${Account}:outpost-resolver/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "resolver-config": {
    "ARNFormats": [
     "arn:${Partition}:route53resolver:${Region}:${Account}:resolver-config/.*"
    ]
   },
   "resolver-dnssec-config": {
    "ARNFormats": [
     "arn:${Partition}:route53resolver:${Region}:${Account}:resolver-dnssec-config/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "resolver-endpoint": {
    "ARNFormats": [
     "arn:${Partition}:route53resolver:${Region}:${Account}:resolver-endpoint/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "resolver-query-log-config": {
    "ARNFormats": [
     "arn:${Partition}:route53resolver:${Region}:${Account}:resolver-query-log-config/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "resolver-rule": {
    "ARNFormats": [
     "arn:${Partition}:route53resolver:${Region}:${Account}:resolver-rule/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "rum": {
  "Actions": {
   "batchcreaterummetricdefinitions": {
    "Resources": [
     "AppMonitorResource"
    ]
   },
   "batchdeleterummetricdefinitions": {
    "Resources": [
     "AppMonitorResource"
    ]
   },
   "batchgetrummetricdefinitions": {
    "Resources": [
     "AppMonitorResource"
    ]
   },
   "createappmonitor": {
    "Resources": [
     "AppMonitorResource"
    ]
   },
   "deleteappmonitor": {
    "Resources": [
     "AppMonitorResource"
    ]
   },
   "deleteresourcepolicy": {
    "Resources": [
     "AppMonitorResource"
    ]
   },
   "deleterummetricsdestination": {
    "Resources": [
     "AppMonitorResource"
    ]
   },
   "getappmonitor": {
    "Resources": [
     "AppMonitorResource"
    ]
   },
   "getappmonitordata": {
    "Resources": [
     "AppMonitorResource"
    ]
   },
   "getresourcepolicy": {
    "Resources": [
     "AppMonitorResource"
    ]
   },
   "listappmonitors": {},
   "listrummetricsdestinations": {
    "Resources": [
     "AppMonitorResource"
    ]
   },
   "listtagsforresource": {},
   "putresourcepolicy": {
    "Resources": [
     "AppMonitorResource"
    ]
   },
   "putrumevents": {
    "Resources": [
     "AppMonitorResource"
    ]
   },
   "putrummetricsdestination": {
    "Resources": [
     "AppMonitorResource"
    ]
   },
   "tagresource": {
    "Resources": [
     "AppMonitorResource"
    ]
   },
   "untagresource": {
    "Resources": [
     "AppMonitorResource"
    ]
   },
   "updateappmonitor": {
    "Resources": [
     "AppMonitorResource"
    ]
   },
   "updaterummetricdefinition": {
    "Resources": [
     "AppMonitorResource"
    ]
   }
  },
  "Resources": {
   "appmonitorresource": {
    "ARNFormats": [
     "arn:${Partition}:rum:${Region}:${Account}:appmonitor/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "s3": {
  "Actions": {
   "abortmultipartupload": {
    "Resources": [
     "object"
    ]
   },
   "associateaccessgrantsidentitycenter": {
    "Resources": [
     "accessgrantsinstance"
    ]
   },
   "bypassgovernanceretention": {
    "Resources": [
     "object"
    ]
   },
   "createaccessgrant": {
    "Resources": [
     "accessgrantslocation"
    ]
   },
   "createaccessgrantsinstance": {
    "Resources": [
     "accessgrantsinstance"
    ]
   },
   "createaccessgrantslocation": {
    "Resources": [
     "accessgrantsinstance"
    ]
   },
   "createaccesspoint": {
    "Resources": [
     "accesspoint"
    ]
   },
   "createaccesspointforobjectlambda": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "createbucket": {
    "Resources": [
     "bucket"
    ]
   },
   "createbucketmetadatatableconfiguration": {
    "Resources": [
     "bucket"
    ]
   },
   "createjob": {},
   "createmultiregionaccesspoint": {
    "Resources": [
     "multiregionaccesspoint"
    ]
   },
   "createstoragelensgroup": {},
   "deleteaccessgrant": {
    "Resources": [
     "accessgrant"
    ]
   },
   "deleteaccessgrantsinstance": {
    "Resources": [
     "accessgrantsinstance"
    ]
   },
   "deleteaccessgrantsinstanceresourcepolicy": {
    "Resources": [
     "accessgrantsinstance"
    ]
   },
   "deleteaccessgrantslocation": {
    "Resources": [
     "accessgrantslocation"
    ]
   },
   "deleteaccesspoint": {
    "Resources": [
     "accesspoint"
    ]
   },
   "deleteaccesspointforobjectlambda": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "deleteaccesspointpolicy": {
    "Resources": [
     "accesspoint"
    ]
   },
   "deleteaccesspointpolicyforobjectlambda": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "deletebucket": {
    "Resources": [
     "bucket"
    ]
   },
   "deletebucketmetadatatableconfiguration": {
    "Resources": [
     "bucket"
    ]
   },
   "deletebucketpolicy": {
    "Resources": [
     "bucket"
    ]
   },
   "deletebucketwebsite": {
    "Resources": [
     "bucket"
    ]
   },
   "deletejobtagging": {
    "Resources": [
     "job"
    ]
   },
   "deletemultiregionaccesspoint": {
    "Resources": [
     "multiregionaccesspoint"
    ]
   },
   "deleteobject": {
    "Resources": [
     "object"
    ]
   },
   "deleteobjecttagging": {
    "Resources": [
     "object"
    ]
   },
   "deleteobjectversion": {
    "Resources": [
     "object"
    ]
   },
   "deleteobjectversiontagging": {
    "Resources": [
     "object"
    ]
   },
   "deletestoragelensconfiguration": {
    "Resources": [
     "storagelensconfiguration"
    ]
   },
   "deletestoragelensconfigurationtagging": {
    "Resources": [
     "storagelensconfiguration"
    ]
   },
   "deletestoragelensgroup": {
    "Resources": [
     "storagelensgroup"
    ]
   },
   "describejob": {
    "Resources": [
     "job"
    ]
   },
   "describemultiregionaccesspointoperation": {
    "Resources": [
     "multiregionaccesspointrequestarn"
    ]
   },
   "dissociateaccessgrantsidentitycenter": {
    "Resources": [
     "accessgrantsinstance"
    ]
   },
   "getaccelerateconfiguration": {
    "Resources": [
     "bucket"
    ]
   },
   "getaccessgrant": {
    "Resources": [
     "accessgrant"
    ]
   },
   "getaccessgrantsinstance": {
    "Resources": [
     "accessgrantsinstance"
    ]
   },
   "getaccessgrantsinstanceforprefix": {
    "Resources": [
     "accessgrantsinstance"
    ]
   },
   "getaccessgrantsinstanceresourcepolicy": {
    "Resources": [
     "accessgrantsinstance"
    ]
   },
   "getaccessgrantslocation": {
    "Resources": [
     "accessgrantslocation"
    ]
   },
   "getaccesspoint": {},
   "getaccesspointconfigurationforobjectlambda": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "getaccesspointforobjectlambda": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "getaccesspointpolicy": {
    "Resources": [
     "accesspoint"
    ]
   },
   "getaccesspointpolicyforobjectlambda": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "getaccesspointpolicystatus": {
    "Resources": [
     "accesspoint"
    ]
   },
   "getaccesspointpolicystatusforobjectlambda": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "getaccountpublicaccessblock": {},
   "getanalyticsconfiguration": {
    "Resources": [
     "bucket"
    ]
   },
   "getbucketacl": {
    "Resources": [
     "bucket"
    ]
   },
   "getbucketcors": {
    "Resources": [
     "bucket"
    ]
   },
   "getbucketlocation": {
    "Resources": [
     "bucket"
    ]
   },
   "getbucketlogging": {
    "Resources": [
     "bucket"
    ]
   },
   "getbucketmetadatatableconfiguration": {
    "Resources": [
     "bucket"
    ]
   },
   "getbucketnotification": {
    "Resources": [
     "bucket"
    ]
   },
   "getbucketobjectlockconfiguration": {
    "Resources": [
     "bucket"
    ]
   },
   "getbucketownershipcontrols": {
    "Resources": [
     "bucket"
    ]
   },
   "getbucketpolicy": {
    "Resources": [
     "bucket"
    ]
   },
   "getbucketpolicystatus": {
    "Resources": [
     "bucket"
    ]
   },
   "getbucketpublicaccessblock": {
    "Resources": [
     "bucket"
    ]
   },
   "getbucketrequestpayment": {
    "Resources": [
     "bucket"
    ]
   },
   "getbuckettagging": {
    "Resources": [
     "bucket"
    ]
   },
   "getbucketversioning": {
    "Resources": [
     "bucket"
    ]
   },
   "getbucketwebsite": {
    "Resources": [
     "bucket"
    ]
   },
   "getdataaccess": {
    "Resources": [
     "accessgrantsinstance"
    ]
   },
   "getencryptionconfiguration": {
    "Resources": [
     "bucket"
    ]
   },
   "getintelligenttieringconfiguration": {
    "Resources": [
     "bucket"
    ]
   },
   "getinventoryconfiguration": {
    "Resources": [
     "bucket"
    ]
   },
   "getjobtagging": {
    "Resources": [
     "job"
    ]
   },
   "getlifecycleconfiguration": {
    "Resources": [
     "bucket"
    ]
   },
   "getmetricsconfiguration": {
    "Resources": [
     "bucket"
    ]
   },
   "getmultiregionaccesspoint": {
    "Resources": [
     "multiregionaccesspoint"
    ]
   },
   "getmultiregionaccesspointpolicy": {
    "Resources": [
     "multiregionaccesspoint"
    ]
   },
   "getmultiregionaccesspointpolicystatus": {
    "Resources": [
     "multiregionaccesspoint"
    ]
   },
   "getmultiregionaccesspointroutes": {
    "Resources": [
     "multiregionaccesspoint"
    ]
   },
   "getobject": {
    "Resources": [
     "object"
    ]
   },
   "getobjectacl": {
    "Resources": [
     "object"
    ]
   },
   "getobjectattributes": {
    "Resources": [
     "accesspoint",
     "object"
    ]
   },
   "getobjectlegalhold": {
    "Resources": [
     "object"
    ]
   },
   "getobjectretention": {
    "Resources": [
     "object"
    ]
   },
   "getobjecttagging": {
    "Resources": [
     "object"
    ]
   },
   "getobjecttorrent": {
    "Resources": [
     "object"
    ]
   },
   "getobjectversion": {
    "Resources": [
     "object"
    ]
   },
   "getobjectversionacl": {
    "Resources": [
     "object"
    ]
   },
   "getobjectversionattributes": {
    "Resources": [
     "object"
    ]
   },
   "getobjectversionforreplication": {
    "Resources": [
     "object"
    ]
   },
   "getobjectversiontagging": {
    "Resources": [
     "object"
    ]
   },
   "getobjectversiontorrent": {
    "Resources": [
     "object"
    ]
   },
   "getreplicationconfiguration": {
    "Resources": [
     "bucket"
    ]
   },
   "getstoragelensconfiguration": {
    "Resources": [
     "storagelensconfiguration"
    ]
   },
   "getstoragelensconfigurationtagging": {
    "Resources": [
     "storagelensconfiguration"
    ]
   },
   "getstoragelensdashboard": {
    "Resources": [
     "storagelensconfiguration"
    ]
   },
   "getstoragelensgroup": {
    "Resources": [
     "storagelensgroup"
    ]
   },
   "initiatereplication": {
    "Resources": [
     "object"
    ]
   },
   "listaccessgrants": {
    "Resources": [
     "accessgrantsinstance"
    ]
   },
   "listaccessgrantsinstances": {},
   "listaccessgrantslocations": {
    "Resources": [
     "accessgrantsinstance"
    ]
   },
   "listaccesspoints": {},
   "listaccesspointsforobjectlambda": {},
   "listallmybuckets": {},
   "listbucket": {
    "Resources": [
     "bucket"
    ]
   },
   "listbucketmultipartuploads": {
    "Resources": [
     "bucket"
    ]
   },
   "listbucketversions": {
    "Resources": [
     "bucket"
    ]
   },
   "listcalleraccessgrants": {
    "Resources": [
     "accessgrantsinstance"
    ]
   },
   "listjobs": {},
   "listmultipartuploadparts": {
    "Resources": [
     "object"
    ]
   },
   "listmultiregionaccesspoints": {},
   "liststoragelensconfigurations": {},
   "liststoragelensgroups": {},
   "listtagsforresource": {
    "Resources": [
     "accessgrant",
     "accessgrantsinstance",
     "accessgrantslocation",
     "storagelensgroup"
    ]
   },
   "objectowneroverridetobucketowner": {
    "Resources": [
     "object"
    ]
   },
   "pausereplication": {
    "Resources": [
     "bucket"
    ]
   },
   "putaccelerateconfiguration": {
    "Resources": [
     "bucket"
    ]
   },
   "putaccessgrantsinstanceresourcepolicy": {
    "Resources": [
     "accessgrantsinstance"
    ]
   },
   "putaccesspointconfigurationforobjectlambda": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "putaccesspointpolicy": {
    "Resources": [
     "accesspoint"
    ]
   },
   "putaccesspointpolicyforobjectlambda": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "putaccesspointpublicaccessblock": {},
   "putaccountpublicaccessblock": {},
   "putanalyticsconfiguration": {
    "Resources": [
     "bucket"
    ]
   },
   "putbucketacl": {
    "Resources": [
     "bucket"
    ]
   },
   "putbucketcors": {
    "Resources": [
     "bucket"
    ]
   },
   "putbucketlogging": {
    "Resources": [
     "bucket"
    ]
   },
   "putbucketnotification": {
    "Resources": [
     "bucket"
    ]
   },
   "putbucketobjectlockconfiguration": {
    "Resources": [
     "bucket"
    ]
   },
   "putbucketownershipcontrols": {
    "Resources": [
     "bucket"
    ]
   },
   "putbucketpolicy": {
    "Resources": [
     "bucket"
    ]
   },
   "putbucketpublicaccessblock": {
    "Resources": [
     "bucket"
    ]
   },
   "putbucketrequestpayment": {
    "Resources": [
     "bucket"
    ]
   },
   "putbuckettagging": {
    "Resources": [
     "bucket"
    ]
   },
   "putbucketversioning": {
    "Resources": [
     "bucket"
    ]
   },
   "putbucketwebsite": {
    "Resources": [
     "bucket"
    ]
   },
   "putencryptionconfiguration": {
    "Resources": [
     "bucket"
    ]
   },
   "putintelligenttieringconfiguration": {
    "Resources": [
     "bucket"
    ]
   },
   "putinventoryconfiguration": {
    "Resources": [
     "bucket"
    ]
   },
   "putjobtagging": {
    "Resources": [
     "job"
    ]
   },
   "putlifecycleconfiguration": {
    "Resources": [
     "bucket"
    ]
   },
   "putmetricsconfiguration": {
    "Resources": [
     "bucket"
    ]
   },
   "putmultiregionaccesspointpolicy": {
    "Resources": [
     "multiregionaccesspoint"
    ]
   },
   "putobject": {
    "Resources": [
     "object"
    ]
   },
   "putobjectacl": {
    "Resources": [
     "object"
    ]
   },
   "putobjectlegalhold": {
    "Resources": [
     "object"
    ]
   },
   "putobjectretention": {
    "Resources": [
     "object"
    ]
   },
   "putobjecttagging": {
    "Resources": [
     "object"
    ]
   },
   "putobjectversionacl": {
    "Resources": [
     "object"
    ]
   },
   "putobjectversiontagging": {
    "Resources": [
     "object"
    ]
   },
   "putreplicationconfiguration": {
    "Resources": [
     "bucket"
    ]
   },
   "putstoragelensconfiguration": {},
   "putstoragelensconfigurationtagging": {
    "Resources": [
     "storagelensconfiguration"
    ]
   },
   "replicatedelete": {
    "Resources": [
     "object"
    ]
   },
   "replicateobject": {
    "Resources": [
     "object"
    ]
   },
   "replicatetags": {
    "Resources": [
     "object"
    ]
   },
   "restoreobject": {
    "Resources": [
     "object"
    ]
   },
   "submitmultiregionaccesspointroutes": {
    "Resources": [
     "multiregionaccesspoint"
    ]
   },
   "tagresource": {
    "Resources": [
     "accessgrant",
     "accessgrantsinstance",
     "accessgrantslocation",
     "storagelensgroup"
    ]
   },
   "untagresource": {
    "Resources": [
     "accessgrant",
     "accessgrantsinstance",
     "accessgrantslocation",
     "storagelensgroup"
    ]
   },
   "updateaccessgrantslocation": {
    "Resources": [
     "accessgrantslocation"
    ]
   },
   "updatejobpriority": {
    "Resources": [
     "job"
    ]
   },
   "updatejobstatus": {
    "Resources": [
     "job"
    ]
   },
   "updatestoragelensgroup": {
    "Resources": [
     "storagelensgroup"
    ]
   }
  },
  "Resources": {
   "accessgrant": {
    "ARNFormats": [
     "arn:${Partition}:s3:${Region}:${Account}:access-grants/default/grant/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys"
    ]
   },
   "accessgrantsinstance": {
    "ARNFormats": [
     "arn:${Partition}:s3:${Region}:${Account}:access-grants/default"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys"
    ]
   },
   "accessgrantslocation": {
    "ARNFormats": [
     "arn:${Partition}:s3:${Region}:${Account}:access-grants/default/location/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys"
    ]
   },
   "accesspoint": {
    "ARNFormats": [
     "arn:${Partition}:s3:${Region}:${Account}:accesspoint/.*"
    ]
   },
   "bucket": {
    "ARNFormats": [
     "arn:${Partition}:s3:::.*"
    ]
   },
   "job": {
    "ARNFormats": [
     "arn:${Partition}:s3:${Region}:${Account}:job/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys"
    ]
   },
   "multiregionaccesspoint": {
    "ARNFormats": [
     "arn:${Partition}:s3::${Account}:accesspoint/.*"
    ]
   },
   "multiregionaccesspointrequestarn": {
    "ARNFormats": [
     "arn:${Partition}:s3:us-west-2:${Account}:async-request/mrap/.*"
    ]
   },
   "object": {
    "ARNFormats": [
     "arn:${Partition}:s3:::.*"
    ]
   },
   "objectlambdaaccesspoint": {
    "ARNFormats": [
     "arn:${Partition}:s3-object-lambda:${Region}:${Account}:accesspoint/.*"
    ]
   },
   "storagelensconfiguration": {
    "ARNFormats": [
     "arn:${Partition}:s3:${Region}:${Account}:storage-lens/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys"
    ]
   },
   "storagelensgroup": {
    "ARNFormats": [
     "arn:${Partition}:s3:${Region}:${Account}:storage-lens-group/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys"
    ]
   }
  }
 },
 "s3-object-lambda": {
  "Actions": {
   "abortmultipartupload": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "deleteobject": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "deleteobjecttagging": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "deleteobjectversion": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "deleteobjectversiontagging": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "getobject": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "getobjectacl": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "getobjectlegalhold": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "getobjectretention": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "getobjecttagging": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "getobjectversion": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "getobjectversionacl": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "getobjectversiontagging": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "listbucket": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "listbucketmultipartuploads": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "listbucketversions": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "listmultipartuploadparts": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "putobject": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "putobjectacl": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "putobjectlegalhold": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "putobjectretention": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "putobjecttagging": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "putobjectversionacl": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "putobjectversiontagging": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "restoreobject": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   },
   "writegetobjectresponse": {
    "Resources": [
     "objectlambdaaccesspoint"
    ]
   }
  },
  "Resources": {
   "objectlambdaaccesspoint": {
    "ARNFormats": [
     "arn:${Partition}:s3-object-lambda:${Region}:${Account}:accesspoint/.*"
    ]
   }
  }
 },
 "s3-outposts": {
  "Actions": {
   "abortmultipartupload": {
    "Resources": [
     "object"
    ]
   },
   "createaccesspoint": {
    "Resources": [
     "accesspoint"
    ]
   },
   "createbucket": {
    "Resources": [
     "bucket"
    ]
   },
   "createendpoint": {
    "Resources": [
     "endpoint"
    ]
   },
   "deleteaccesspoint": {
    "Resources": [
     "accesspoint"
    ]
   },
   "deleteaccesspointpolicy": {
    "Resources": [
     "accesspoint"
    ]
   },
   "deletebucket": {
    "Resources": [
     "bucket"
    ]
   },
   "deletebucketpolicy": {
    "Resources": [
     "bucket"
    ]
   },
   "deleteendpoint": {
    "Resources": [
     "endpoint"
    ]
   },
   "deleteobject": {
    "Resources": [
     "object"
    ]
   },
   "deleteobjecttagging": {
    "Resources": [
     "object"
    ]
   },
   "deleteobjectversion": {
    "Resources": [
     "object"
    ]
   },
   "deleteobjectversiontagging": {
    "Resources": [
     "object"
    ]
   },
   "getaccesspoint": {},
   "getaccesspointpolicy": {
    "Resources": [
     "accesspoint"
    ]
   },
   "getbucket": {
    "Resources": [
     "bucket"
    ]
   },
   "getbucketpolicy": {
    "Resources": [
     "bucket"
    ]
   },
   "getbuckettagging": {
    "Resources": [
     "bucket"
    ]
   },
   "getbucketversioning": {
    "Resources": [
     "bucket"
    ]
   },
   "getlifecycleconfiguration": {
    "Resources": [
     "bucket"
    ]
   },
   "getobject": {
    "Resources": [
     "object"
    ]
   },
   "getobjecttagging": {
    "Resources": [
     "object"
    ]
   },
   "getobjectversion": {
    "Resources": [
     "object"
    ]
   },
   "getobjectversionforreplication": {
    "Resources": [
     "object"
    ]
   },
   "getobjectversiontagging": {
    "Resources": [
     "object"
    ]
   },
   "getreplicationconfiguration": {
    "Resources": [
     "bucket"
    ]
   },
   "listaccesspoints": {},
   "listbucket": {
    "Resources": [
     "accesspoint",
     "bucket"
    ]
   },
   "listbucketmultipartuploads": {
    "Resources": [
     "accesspoint",
     "bucket"
    ]
   },
   "listbucketversions": {
    "Resources": [
     "bucket"
    ]
   },
   "listendpoints": {},
   "listmultipartuploadparts": {
    "Resources": [
     "object"
    ]
   },
   "listoutpostswiths3": {},
   "listregionalbuckets": {},
   "listsharedendpoints": {},
   "putaccesspointpolicy": {
    "Resources": [
     "accesspoint"
    ]
   },
   "putbucketpolicy": {
    "Resources": [
     "bucket"
    ]
   },
   "putbuckettagging": {
    "Resources": [
     "bucket"
    ]
   },
   "putbucketversioning": {
    "Resources": [
     "bucket"
    ]
   },
   "putlifecycleconfiguration": {
    "Resources": [
     "bucket"
    ]
   },
   "putobject": {
    "Resources": [
     "object"
    ]
   },
   "putobjectacl": {
    "Resources": [
     "object"
    ]
   },
   "putobjecttagging": {
    "Resources": [
     "object"
    ]
   },
   "putobjectversiontagging": {
    "Resources": [
     "object"
    ]
   },
   "putreplicationconfiguration": {
    "Resources": [
     "bucket"
    ]
   },
   "replicatedelete": {
    "Resources": [
     "object"
    ]
   },
   "replicateobject": {
    "Resources": [
     "object"
    ]
   },
   "replicatetags": {
    "Resources": [
     "object"
    ]
   }
  },
  "Resources": {
   "accesspoint": {
    "ARNFormats": [
     "arn:${Partition}:s3-outposts:${Region}:${Account}:outpost/.*"
    ]
   },
   "bucket": {
    "ARNFormats": [
     "arn:${Partition}:s3-outposts:${Region}:${Account}:outpost/.*"
    ]
   },
   "endpoint": {
    "ARNFormats": [
     "arn:${Partition}:s3-outposts:${Region}:${Account}:outpost/.*"
    ]
   },
   "object": {
    "ARNFormats": [
     "arn:${Partition}:s3-outposts:${Region}:${Account}:outpost/.*"
    ]
   }
  }
 },
 "s3express": {
  "Actions": {
   "createbucket": {
    "Resources": [
     "bucket"
    ]
   },
   "createsession": {
    "Resources": [
     "bucket"
    ]
   },
   "deletebucket": {
    "Resources": [
     "bucket"
    ]
   },
   "deletebucketpolicy": {
    "Resources": [
     "bucket"
    ]
   },
   "getbucketpolicy": {
    "Resources": [
     "bucket"
    ]
   },
   "getencryptionconfiguration": {
    "Resources": [
     "bucket"
    ]
   },
   "getlifecycleconfiguration": {
    "Resources": [
     "bucket"
    ]
   },
   "listallmydirectorybuckets": {},
   "putbucketpolicy": {
    "Resources": [
     "bucket"
    ]
   },
   "putencryptionconfiguration": {
    "Resources": [
     "bucket"
    ]
   },
   "putlifecycleconfiguration": {
    "Resources": [
     "bucket"
    ]
   }
  },
  "Resources": {
   "bucket": {
    "ARNFormats": [
     "arn:${Partition}:s3express:${Region}:${Account}:bucket/.*"
    ]
   }
  }
 },
 "s3tables": {
  "Actions": {
   "createnamespace": {
    "Resources": [
     "TableBucket"
    ]
   },
   "createtable": {
    "Resources": [
     "TableBucket"
    ]
   },
   "createtablebucket": {
    "Resources": [
     "TableBucket"
    ]
   },
   "deletenamespace": {
    "Resources": [
     "TableBucket"
    ]
   },
   "deletetable": {
    "Resources": [
     "Table"
    ]
   },
   "deletetablebucket": {
    "Resources": [
     "TableBucket"
    ]
   },
   "deletetablebucketpolicy": {
    "Resources": [
     "TableBucket"
    ]
   },
   "deletetablepolicy": {
    "Resources": [
     "Table"
    ]
   },
   "getnamespace": {
    "Resources": [
     "TableBucket"
    ]
   },
   "gettable": {
    "Resources": [
     "Table"
    ]
   },
   "gettablebucket": {
    "Resources": [
     "TableBucket"
    ]
   },
   "gettablebucketmaintenanceconfiguration": {
    "Resources": [
     "TableBucket"
    ]
   },
   "gettablebucketpolicy": {
    "Resources": [
     "TableBucket"
    ]
   },
   "gettabledata": {
    "Resources": [
     "Table"
    ]
   },
   "gettablemaintenanceconfiguration": {
    "Resources": [
     "Table"
    ]
   },
   "gettablemaintenancejobstatus": {
    "Resources": [
     "Table"
    ]
   },
   "gettablemetadatalocation": {
    "Resources": [
     "Table"
    ]
   },
   "gettablepolicy": {
    "Resources": [
     "Table"
    ]
   },
   "listnamespaces": {
    "Resources": [
     "TableBucket"
    ]
   },
   "listtablebuckets": {},
   "listtables": {
    "Resources": [
     "TableBucket"
    ]
   },
   "puttablebucketmaintenanceconfiguration": {
    "Resources": [
     "TableBucket"
    ]
   },
   "puttablebucketpolicy": {
    "Resources": [
     "TableBucket"
    ]
   },
   "puttabledata": {
    "Resources": [
     "Table"
    ]
   },
   "puttablemaintenanceconfiguration": {
    "Resources": [
     "Table"
    ]
   },
   "puttablepolicy": {
    "Resources": [
     "Table"
    ]
   },
   "renametable": {
    "Resources": [
     "Table"
    ]
   },
   "updatetablemetadatalocation": {
    "Resources": [
     "Table"
    ]
   }
  },
  "Resources": {
   "table": {
    "ARNFormats": [
     "arn:${Partition}:s3tables:${Region}:${Account}:bucket/.*"
    ],
    "ConditionKeys": [
     "s3tables:namespace",
     "s3tables:tableName"
    ]
   },
   "tablebucket": {
    "ARNFormats": [
     "arn:${Partition}:s3tables:${Region}:${Account}:bucket/.*"
    ]
   }
  }
 },
 "sagemaker": {
  "Actions": {
   "addassociation": {
    "Resources": [
     "action",
     "artifact",
     "context",
     "experiment",
     "experiment-trial-component"
    ]
   },
   "addtags": {
    "Resources": [
     "action",
     "algorithm",
     "app",
     "app-image-config",
     "artifact",
     "automl-job",
     "cluster",
     "cluster-scheduler-config",
     "code-repository",
     "compilation-job",
     "compute-quota",
     "context",
     "data-quality-job-definition",
     "device",
     "device-fleet",
     "domain",
     "edge-deployment-plan",
     "edge-packaging-job",
     "endpoint",
     "endpoint-config",
     "experiment",
     "experiment-trial",
     "experiment-trial-component",
     "feature-group",
     "flow-definition",
     "hub",
     "hub-content",
     "human-task-ui",
     "hyper-parameter-tuning-job",
     "image",
     "inference-component",
     "inference-recommendations-job",
     "labeling-job",
     "mlflow-tracking-server",
     "model",
     "model-bias-job-definition",
     "model-card",
     "model-explainability-job-definition",
     "model-package",
     "model-package-group",
     "model-quality-job-definition",
     "monitoring-schedule",
     "notebook-instance",
     "optimization-job",
     "partner-app",
     "pipeline",
     "processing-job",
     "project",
     "reserved-capacity",
     "space",
     "studio-lifecycle-config",
     "training-job",
     "training-plan",
     "transform-job",
     "user-profile",
     "workteam"
    ]
   },
   "associatetrialcomponent": {
    "Resources": [
     "experiment-trial",
     "experiment-trial-component"
    ]
   },
   "batchdeleteclusternodes": {
    "Resources": [
     "cluster"
    ]
   },
   "batchdescribemodelpackage": {
    "Resources": [
     "model-package"
    ]
   },
   "batchgetmetrics": {
    "Resources": [
     "experiment-trial-component",
     "training-job"
    ]
   },
   "batchgetrecord": {
    "Resources": [
     "feature-group"
    ]
   },
   "batchputmetrics": {
    "Resources": [
     "experiment-trial-component",
     "training-job"
    ]
   },
   "callpartnerappapi": {
    "Resources": [
     "partner-app"
    ]
   },
   "createaction": {
    "Resources": [
     "action"
    ]
   },
   "createalgorithm": {
    "Resources": [
     "algorithm"
    ]
   },
   "createapp": {
    "Resources": [
     "app"
    ]
   },
   "createappimageconfig": {
    "Resources": [
     "app-image-config"
    ]
   },
   "createartifact": {
    "Resources": [
     "artifact"
    ]
   },
   "createautomljob": {
    "Resources": [
     "automl-job"
    ]
   },
   "createautomljobv2": {
    "Resources": [
     "automl-job"
    ]
   },
   "createcluster": {
    "Resources": [
     "cluster",
     "reserved-capacity",
     "training-plan"
    ]
   },
   "createclusterschedulerconfig": {
    "Resources": [
     "cluster",
     "cluster-scheduler-config"
    ]
   },
   "createcoderepository": {
    "Resources": [
     "code-repository"
    ]
   },
   "createcompilationjob": {
    "Resources": [
     "compilation-job"
    ]
   },
   "createcomputequota": {
    "Resources": [
     "cluster",
     "compute-quota"
    ]
   },
   "createcontext": {
    "Resources": [
     "context"
    ]
   },
   "createdataqualityjobdefinition": {
    "Resources": [
     "data-quality-job-definition"
    ]
   },
   "createdevicefleet": {
    "Resources": [
     "device-fleet"
    ]
   },
   "createdomain": {
    "Resources": [
     "domain"
    ]
   },
   "createedgedeploymentplan": {
    "Resources": [
     "edge-deployment-plan"
    ]
   },
   "createedgedeploymentstage": {
    "Resources": [
     "edge-deployment-plan"
    ]
   },
   "createedgepackagingjob": {
    "Resources": [
     "edge-packaging-job"
    ]
   },
   "createendpoint": {
    "Resources": [
     "endpoint",
     "endpoint-config"
    ]
   },
   "createendpointconfig": {
    "Resources": [
     "endpoint-config"
    ]
   },
   "createexperiment": {
    "Resources": [
     "experiment"
    ]
   },
   "createfeaturegroup": {
    "Resources": [
     "feature-group"
    ]
   },
   "createflowdefinition": {
    "Resources": [
     "flow-definition"
    ]
   },
   "createhub": {
    "Resources": [
     "hub"
    ]
   },
   "createhubcontentreference": {
    "Resources": [
     "hub",
     "hub-content"
    ]
   },
   "createhumantaskui": {
    "Resources": [
     "human-task-ui"
    ]
   },
   "createhyperparametertuningjob": {
    "Resources": [
     "hyper-parameter-tuning-job"
    ]
   },
   "createimage": {
    "Resources": [
     "image"
    ]
   },
   "createimageversion": {
    "Resources": [
     "image"
    ]
   },
   "createinferencecomponent": {
    "Resources": [
     "endpoint",
     "inference-component"
    ]
   },
   "createinferenceexperiment": {
    "Resources": [
     "inference-experiment"
    ]
   },
   "createinferencerecommendationsjob": {
    "Resources": [
     "inference-recommendations-job"
    ]
   },
   "createlabelingjob": {
    "Resources": [
     "labeling-job"
    ]
   },
   "createlineagegrouppolicy": {},
   "createmlflowtrackingserver": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "createmodel": {
    "Resources": [
     "model"
    ]
   },
   "createmodelbiasjobdefinition": {
    "Resources": [
     "model-bias-job-definition"
    ]
   },
   "createmodelcard": {
    "Resources": [
     "model-card"
    ]
   },
   "createmodelcardexportjob": {
    "Resources": [
     "model-card"
    ]
   },
   "createmodelexplainabilityjobdefinition": {
    "Resources": [
     "model-explainability-job-definition"
    ]
   },
   "createmodelpackage": {
    "Resources": [
     "model-package",
     "model-package-group"
    ]
   },
   "createmodelpackagegroup": {
    "Resources": [
     "model-package-group"
    ]
   },
   "createmodelqualityjobdefinition": {
    "Resources": [
     "model-quality-job-definition"
    ]
   },
   "createmonitoringschedule": {
    "Resources": [
     "monitoring-schedule"
    ]
   },
   "createnotebookinstance": {
    "Resources": [
     "notebook-instance"
    ]
   },
   "createnotebookinstancelifecycleconfig": {
    "Resources": [
     "notebook-instance-lifecycle-config"
    ]
   },
   "createoptimizationjob": {
    "Resources": [
     "optimization-job"
    ]
   },
   "createpartnerapp": {
    "Resources": [
     "partner-app"
    ]
   },
   "createpartnerapppresignedurl": {
    "Resources": [
     "partner-app"
    ]
   },
   "createpipeline": {
    "Resources": [
     "pipeline"
    ]
   },
   "createpresigneddomainurl": {
    "Resources": [
     "user-profile"
    ]
   },
   "createpresignedmlflowtrackingserverurl": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "createpresignednotebookinstanceurl": {
    "Resources": [
     "notebook-instance"
    ]
   },
   "createprocessingjob": {
    "Resources": [
     "processing-job"
    ]
   },
   "createproject": {
    "Resources": [
     "project"
    ]
   },
   "createreservedcapacity": {
    "Resources": [
     "reserved-capacity"
    ]
   },
   "createsharedmodel": {
    "Resources": [
     "shared-model"
    ]
   },
   "createspace": {
    "Resources": [
     "space"
    ]
   },
   "createstudiolifecycleconfig": {
    "Resources": [
     "studio-lifecycle-config"
    ]
   },
   "createtrainingjob": {
    "Resources": [
     "reserved-capacity",
     "training-job",
     "training-plan"
    ]
   },
   "createtrainingplan": {
    "Resources": [
     "training-plan"
    ]
   },
   "createtransformjob": {
    "Resources": [
     "transform-job"
    ]
   },
   "createtrial": {
    "Resources": [
     "experiment",
     "experiment-trial"
    ]
   },
   "createtrialcomponent": {
    "Resources": [
     "experiment-trial-component"
    ]
   },
   "createuserprofile": {
    "Resources": [
     "user-profile"
    ]
   },
   "createworkforce": {
    "Resources": [
     "workforce"
    ]
   },
   "createworkteam": {
    "Resources": [
     "workteam"
    ]
   },
   "deleteaction": {
    "Resources": [
     "action"
    ]
   },
   "deletealgorithm": {
    "Resources": [
     "algorithm"
    ]
   },
   "deleteapp": {
    "Resources": [
     "app"
    ]
   },
   "deleteappimageconfig": {
    "Resources": [
     "app-image-config"
    ]
   },
   "deleteartifact": {
    "Resources": [
     "artifact"
    ]
   },
   "deleteassociation": {
    "Resources": [
     "action",
     "artifact",
     "context",
     "experiment",
     "experiment-trial-component"
    ]
   },
   "deletecluster": {
    "Resources": [
     "cluster"
    ]
   },
   "deleteclusterschedulerconfig": {
    "Resources": [
     "cluster-scheduler-config"
    ]
   },
   "deletecoderepository": {
    "Resources": [
     "code-repository"
    ]
   },
   "deletecompilationjob": {
    "Resources": [
     "compilation-job"
    ]
   },
   "deletecomputequota": {
    "Resources": [
     "compute-quota"
    ]
   },
   "deletecontext": {
    "Resources": [
     "context"
    ]
   },
   "deletedataqualityjobdefinition": {
    "Resources": [
     "data-quality-job-definition"
    ]
   },
   "deletedevicefleet": {
    "Resources": [
     "device-fleet"
    ]
   },
   "deletedomain": {
    "Resources": [
     "domain"
    ]
   },
   "deleteedgedeploymentplan": {
    "Resources": [
     "edge-deployment-plan"
    ]
   },
   "deleteedgedeploymentstage": {
    "Resources": [
     "edge-deployment-plan"
    ]
   },
   "deleteendpoint": {
    "Resources": [
     "endpoint"
    ]
   },
   "deleteendpointconfig": {
    "Resources": [
     "endpoint-config"
    ]
   },
   "deleteexperiment": {
    "Resources": [
     "experiment"
    ]
   },
   "deletefeaturegroup": {
    "Resources": [
     "feature-group"
    ]
   },
   "deleteflowdefinition": {
    "Resources": [
     "flow-definition"
    ]
   },
   "deletehub": {
    "Resources": [
     "hub"
    ]
   },
   "deletehubcontent": {
    "Resources": [
     "hub",
     "hub-content"
    ]
   },
   "deletehubcontentreference": {
    "Resources": [
     "hub",
     "hub-content"
    ]
   },
   "deletehumanloop": {
    "Resources": [
     "human-loop"
    ]
   },
   "deletehumantaskui": {
    "Resources": [
     "human-task-ui"
    ]
   },
   "deletehyperparametertuningjob": {
    "Resources": [
     "hyper-parameter-tuning-job"
    ]
   },
   "deleteimage": {
    "Resources": [
     "image"
    ]
   },
   "deleteimageversion": {
    "Resources": [
     "image-version"
    ]
   },
   "deleteinferencecomponent": {
    "Resources": [
     "inference-component"
    ]
   },
   "deleteinferenceexperiment": {
    "Resources": [
     "inference-experiment"
    ]
   },
   "deletelineagegrouppolicy": {},
   "deletemlflowtrackingserver": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "deletemodel": {
    "Resources": [
     "model"
    ]
   },
   "deletemodelbiasjobdefinition": {
    "Resources": [
     "model-bias-job-definition"
    ]
   },
   "deletemodelcard": {
    "Resources": [
     "model-card"
    ]
   },
   "deletemodelexplainabilityjobdefinition": {
    "Resources": [
     "model-explainability-job-definition"
    ]
   },
   "deletemodelpackage": {
    "Resources": [
     "model-package"
    ]
   },
   "deletemodelpackagegroup": {
    "Resources": [
     "model-package-group"
    ]
   },
   "deletemodelpackagegrouppolicy": {
    "Resources": [
     "model-package-group"
    ]
   },
   "deletemodelqualityjobdefinition": {
    "Resources": [
     "model-quality-job-definition"
    ]
   },
   "deletemonitoringschedule": {
    "Resources": [
     "monitoring-schedule"
    ]
   },
   "deletenotebookinstance": {
    "Resources": [
     "notebook-instance"
    ]
   },
   "deletenotebookinstancelifecycleconfig": {
    "Resources": [
     "notebook-instance-lifecycle-config"
    ]
   },
   "deleteoptimizationjob": {
    "Resources": [
     "optimization-job"
    ]
   },
   "deletepartnerapp": {
    "Resources": [
     "partner-app"
    ]
   },
   "deletepipeline": {
    "Resources": [
     "pipeline"
    ]
   },
   "deleteproject": {
    "Resources": [
     "project"
    ]
   },
   "deleterecord": {
    "Resources": [
     "feature-group"
    ]
   },
   "deleteresourcepolicy": {},
   "deletespace": {
    "Resources": [
     "space"
    ]
   },
   "deletestudiolifecycleconfig": {
    "Resources": [
     "studio-lifecycle-config"
    ]
   },
   "deletetags": {
    "Resources": [
     "action",
     "algorithm",
     "app",
     "app-image-config",
     "artifact",
     "automl-job",
     "cluster",
     "cluster-scheduler-config",
     "code-repository",
     "compilation-job",
     "compute-quota",
     "context",
     "data-quality-job-definition",
     "device",
     "device-fleet",
     "domain",
     "edge-deployment-plan",
     "edge-packaging-job",
     "endpoint",
     "endpoint-config",
     "experiment",
     "experiment-trial",
     "experiment-trial-component",
     "feature-group",
     "flow-definition",
     "hub",
     "hub-content",
     "human-task-ui",
     "hyper-parameter-tuning-job",
     "image",
     "inference-component",
     "inference-recommendations-job",
     "labeling-job",
     "mlflow-tracking-server",
     "model",
     "model-bias-job-definition",
     "model-card",
     "model-explainability-job-definition",
     "model-package",
     "model-package-group",
     "model-quality-job-definition",
     "monitoring-schedule",
     "notebook-instance",
     "optimization-job",
     "partner-app",
     "pipeline",
     "processing-job",
     "project",
     "reserved-capacity",
     "space",
     "studio-lifecycle-config",
     "training-job",
     "training-plan",
     "transform-job",
     "user-profile",
     "workteam"
    ]
   },
   "deletetrial": {
    "Resources": [
     "experiment-trial"
    ]
   },
   "deletetrialcomponent": {
    "Resources": [
     "experiment-trial-component"
    ]
   },
   "deleteuserprofile": {
    "Resources": [
     "user-profile"
    ]
   },
   "deleteworkforce": {
    "Resources": [
     "workforce"
    ]
   },
   "deleteworkteam": {
    "Resources": [
     "workteam"
    ]
   },
   "deployhubmodel": {
    "Resources": [
     "hub",
     "hub-content"
    ]
   },
   "deregisterdevices": {
    "Resources": [
     "device"
    ]
   },
   "describeaction": {
    "Resources": [
     "action"
    ]
   },
   "describealgorithm": {
    "Resources": [
     "algorithm"
    ]
   },
   "describeapp": {
    "Resources": [
     "app"
    ]
   },
   "describeappimageconfig": {
    "Resources": [
     "app-image-config"
    ]
   },
   "describeartifact": {
    "Resources": [
     "artifact"
    ]
   },
   "describeautomljob": {
    "Resources": [
     "automl-job"
    ]
   },
   "describeautomljobv2": {
    "Resources": [
     "automl-job"
    ]
   },
   "describecluster": {
    "Resources": [
     "cluster"
    ]
   },
   "describeclusternode": {
    "Resources": [
     "cluster"
    ]
   },
   "describeclusterschedulerconfig": {
    "Resources": [
     "cluster-scheduler-config"
    ]
   },
   "describecoderepository": {
    "Resources": [
     "code-repository"
    ]
   },
   "describecompilationjob": {
    "Resources": [
     "compilation-job"
    ]
   },
   "describecomputequota": {
    "Resources": [
     "compute-quota"
    ]
   },
   "describecontext": {
    "Resources": [
     "context"
    ]
   },
   "describedataqualityjobdefinition": {
    "Resources": [
     "data-quality-job-definition"
    ]
   },
   "describedevice": {
    "Resources": [
     "device"
    ]
   },
   "describedevicefleet": {
    "Resources": [
     "device-fleet"
    ]
   },
   "describedomain": {
    "Resources": [
     "domain"
    ]
   },
   "describeedgedeploymentplan": {
    "Resources": [
     "edge-deployment-plan"
    ]
   },
   "describeedgepackagingjob": {
    "Resources": [
     "edge-packaging-job"
    ]
   },
   "describeendpoint": {
    "Resources": [
     "endpoint"
    ]
   },
   "describeendpointconfig": {
    "Resources": [
     "endpoint-config"
    ]
   },
   "describeexperiment": {
    "Resources": [
     "experiment"
    ]
   },
   "describefeaturegroup": {
    "Resources": [
     "feature-group"
    ]
   },
   "describefeaturemetadata": {
    "Resources": [
     "feature-group"
    ]
   },
   "describeflowdefinition": {
    "Resources": [
     "flow-definition"
    ]
   },
   "describehub": {
    "Resources": [
     "hub"
    ]
   },
   "describehubcontent": {
    "Resources": [
     "hub",
     "hub-content"
    ]
   },
   "describehumanloop": {
    "Resources": [
     "human-loop"
    ]
   },
   "describehumantaskui": {
    "Resources": [
     "human-task-ui"
    ]
   },
   "describehyperparametertuningjob": {
    "Resources": [
     "hyper-parameter-tuning-job"
    ]
   },
   "describeimage": {
    "Resources": [
     "image"
    ]
   },
   "describeimageversion": {
    "Resources": [
     "image-version"
    ]
   },
   "describeinferencecomponent": {
    "Resources": [
     "inference-component"
    ]
   },
   "describeinferenceexperiment": {
    "Resources": [
     "inference-experiment"
    ]
   },
   "describeinferencerecommendationsjob": {
    "Resources": [
     "inference-recommendations-job"
    ]
   },
   "describelabelingjob": {
    "Resources": [
     "labeling-job"
    ]
   },
   "describelineagegroup": {},
   "describemlflowtrackingserver": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "describemodel": {
    "Resources": [
     "model"
    ]
   },
   "describemodelbiasjobdefinition": {
    "Resources": [
     "model-bias-job-definition"
    ]
   },
   "describemodelcard": {
    "Resources": [
     "model-card"
    ]
   },
   "describemodelcardexportjob": {
    "Resources": [
     "model-card-export-job"
    ]
   },
   "describemodelexplainabilityjobdefinition": {
    "Resources": [
     "model-explainability-job-definition"
    ]
   },
   "describemodelpackage": {
    "Resources": [
     "model-package"
    ]
   },
   "describemodelpackagegroup": {
    "Resources": [
     "model-package-group"
    ]
   },
   "describemodelqualityjobdefinition": {
    "Resources": [
     "model-quality-job-definition"
    ]
   },
   "describemonitoringschedule": {
    "Resources": [
     "monitoring-schedule"
    ]
   },
   "describenotebookinstance": {
    "Resources": [
     "notebook-instance"
    ]
   },
   "describenotebookinstancelifecycleconfig": {
    "Resources": [
     "notebook-instance-lifecycle-config"
    ]
   },
   "describeoptimizationjob": {
    "Resources": [
     "optimization-job"
    ]
   },
   "describepartnerapp": {
    "Resources": [
     "partner-app"
    ]
   },
   "describepipeline": {
    "Resources": [
     "pipeline"
    ]
   },
   "describepipelinedefinitionforexecution": {
    "Resources": [
     "pipeline-execution"
    ]
   },
   "describepipelineexecution": {
    "Resources": [
     "pipeline-execution"
    ]
   },
   "describeprocessingjob": {
    "Resources": [
     "processing-job"
    ]
   },
   "describeproject": {
    "Resources": [
     "project"
    ]
   },
   "describesharedmodel": {
    "Resources": [
     "shared-model"
    ]
   },
   "describespace": {
    "Resources": [
     "space"
    ]
   },
   "describestudiolifecycleconfig": {
    "Resources": [
     "studio-lifecycle-config"
    ]
   },
   "describesubscribedworkteam": {
    "Resources": [
     "workteam"
    ]
   },
   "describetrainingjob": {
    "Resources": [
     "training-job"
    ]
   },
   "describetrainingplan": {
    "Resources": [
     "training-plan"
    ]
   },
   "describetransformjob": {
    "Resources": [
     "transform-job"
    ]
   },
   "describetrial": {
    "Resources": [
     "experiment-trial"
    ]
   },
   "describetrialcomponent": {
    "Resources": [
     "experiment-trial-component"
    ]
   },
   "describeuserprofile": {
    "Resources": [
     "user-profile"
    ]
   },
   "describeworkforce": {
    "Resources": [
     "workforce"
    ]
   },
   "describeworkteam": {
    "Resources": [
     "workteam"
    ]
   },
   "disablesagemakerservicecatalogportfolio": {},
   "disassociatetrialcomponent": {
    "Resources": [
     "experiment-trial",
     "experiment-trial-component",
     "processing-job"
    ]
   },
   "enablesagemakerservicecatalogportfolio": {},
   "getdeployments": {
    "Resources": [
     "device"
    ]
   },
   "getdevicefleetreport": {
    "Resources": [
     "device-fleet"
    ]
   },
   "getdeviceregistration": {
    "Resources": [
     "device"
    ]
   },
   "getlineagegrouppolicy": {},
   "getmodelpackagegrouppolicy": {
    "Resources": [
     "model-package-group"
    ]
   },
   "getrecord": {
    "Resources": [
     "feature-group"
    ]
   },
   "getresourcepolicy": {},
   "getsagemakerservicecatalogportfoliostatus": {},
   "getscalingconfigurationrecommendation": {
    "Resources": [
     "inference-recommendations-job"
    ]
   },
   "getsearchsuggestions": {},
   "importhubcontent": {
    "Resources": [
     "hub",
     "hub-content"
    ]
   },
   "invokeendpoint": {
    "Resources": [
     "endpoint",
     "inference-component"
    ]
   },
   "invokeendpointasync": {
    "Resources": [
     "endpoint"
    ]
   },
   "invokeendpointwithresponsestream": {
    "Resources": [
     "endpoint",
     "inference-component"
    ]
   },
   "listactions": {},
   "listalgorithms": {},
   "listaliases": {
    "Resources": [
     "image",
     "image-version"
    ]
   },
   "listappimageconfigs": {},
   "listapps": {},
   "listartifacts": {},
   "listassociations": {},
   "listautomljobs": {},
   "listcandidatesforautomljob": {},
   "listclusternodes": {
    "Resources": [
     "cluster"
    ]
   },
   "listclusters": {},
   "listclusterschedulerconfigs": {},
   "listcoderepositories": {},
   "listcompilationjobs": {},
   "listcomputequotas": {},
   "listcontexts": {},
   "listdataqualityjobdefinitions": {},
   "listdevicefleets": {},
   "listdevices": {},
   "listdomains": {},
   "listedgedeploymentplans": {},
   "listedgepackagingjobs": {},
   "listendpointconfigs": {},
   "listendpoints": {},
   "listexperiments": {},
   "listfeaturegroups": {},
   "listflowdefinitions": {},
   "listhubcontents": {
    "Resources": [
     "hub"
    ]
   },
   "listhubcontentversions": {
    "Resources": [
     "hub",
     "hub-content"
    ]
   },
   "listhubs": {},
   "listhumanloops": {},
   "listhumantaskuis": {},
   "listhyperparametertuningjobs": {},
   "listimages": {},
   "listimageversions": {
    "Resources": [
     "image"
    ]
   },
   "listinferencecomponents": {},
   "listinferenceexperiments": {},
   "listinferencerecommendationsjobs": {},
   "listinferencerecommendationsjobsteps": {},
   "listlabelingjobs": {},
   "listlabelingjobsforworkteam": {
    "Resources": [
     "workteam"
    ]
   },
   "listlineagegroups": {},
   "listmlflowtrackingservers": {},
   "listmodelbiasjobdefinitions": {},
   "listmodelcardexportjobs": {
    "Resources": [
     "model-card"
    ]
   },
   "listmodelcards": {},
   "listmodelcardversions": {
    "Resources": [
     "model-card"
    ]
   },
   "listmodelexplainabilityjobdefinitions": {},
   "listmodelmetadata": {},
   "listmodelpackagegroups": {},
   "listmodelpackages": {
    "Resources": [
     "model-package"
    ]
   },
   "listmodelqualityjobdefinitions": {},
   "listmodels": {},
   "listmonitoringalerthistory": {},
   "listmonitoringalerts": {},
   "listmonitoringexecutions": {},
   "listmonitoringschedules": {},
   "listnotebookinstancelifecycleconfigs": {},
   "listnotebookinstances": {},
   "listoptimizationjobs": {},
   "listpartnerapps": {},
   "listpipelineexecutions": {
    "Resources": [
     "pipeline"
    ]
   },
   "listpipelineexecutionsteps": {
    "Resources": [
     "pipeline-execution"
    ]
   },
   "listpipelineparametersforexecution": {
    "Resources": [
     "pipeline-execution"
    ]
   },
   "listpipelines": {},
   "listprocessingjobs": {},
   "listprojects": {},
   "listresourcecatalogs": {},
   "listsharedmodelevents": {},
   "listsharedmodels": {},
   "listsharedmodelversions": {
    "Resources": [
     "shared-model"
    ]
   },
   "listspaces": {},
   "liststagedevices": {},
   "liststudiolifecycleconfigs": {},
   "listsubscribedworkteams": {},
   "listtags": {
    "Resources": [
     "action",
     "algorithm",
     "app",
     "app-image-config",
     "artifact",
     "automl-job",
     "cluster",
     "cluster-scheduler-config",
     "code-repository",
     "compilation-job",
     "compute-quota",
     "context",
     "data-quality-job-definition",
     "device",
     "device-fleet",
     "domain",
     "edge-deployment-plan",
     "edge-packaging-job",
     "endpoint",
     "endpoint-config",
     "experiment",
     "experiment-trial",
     "experiment-trial-component",
     "feature-group",
     "flow-definition",
     "hub",
     "hub-content",
     "human-task-ui",
     "hyper-parameter-tuning-job",
     "image",
     "inference-component",
     "inference-recommendations-job",
     "labeling-job",
     "mlflow-tracking-server",
     "model",
     "model-bias-job-definition",
     "model-card",
     "model-explainability-job-definition",
     "model-package",
     "model-package-group",
     "model-quality-job-definition",
     "monitoring-schedule",
     "notebook-instance",
     "optimization-job",
     "partner-app",
     "pipeline",
     "processing-job",
     "project",
     "reserved-capacity",
     "space",
     "studio-lifecycle-config",
     "training-job",
     "training-plan",
     "transform-job",
     "user-profile",
     "workteam"
    ]
   },
   "listtrainingjobs": {},
   "listtrainingjobsforhyperparametertuningjob": {
    "Resources": [
     "hyper-parameter-tuning-job"
    ]
   },
   "listtrainingplans": {},
   "listtransformjobs": {},
   "listtrialcomponents": {},
   "listtrials": {},
   "listuserprofiles": {},
   "listworkforces": {},
   "listworkteams": {},
   "putlineagegrouppolicy": {},
   "putmodelpackagegrouppolicy": {
    "Resources": [
     "model-package-group"
    ]
   },
   "putrecord": {
    "Resources": [
     "feature-group"
    ]
   },
   "putresourcepolicy": {},
   "querylineage": {},
   "registerdevices": {
    "Resources": [
     "device"
    ]
   },
   "renderuitemplate": {},
   "retrypipelineexecution": {
    "Resources": [
     "pipeline-execution"
    ]
   },
   "search": {},
   "searchtrainingplanofferings": {},
   "sendheartbeat": {
    "Resources": [
     "device"
    ]
   },
   "sendpipelineexecutionstepfailure": {
    "Resources": [
     "pipeline-execution"
    ]
   },
   "sendpipelineexecutionstepsuccess": {
    "Resources": [
     "pipeline-execution"
    ]
   },
   "sendsharedmodelevent": {
    "Resources": [
     "shared-model-event"
    ]
   },
   "startedgedeploymentstage": {
    "Resources": [
     "edge-deployment-plan"
    ]
   },
   "starthumanloop": {
    "Resources": [
     "flow-definition"
    ]
   },
   "startinferenceexperiment": {
    "Resources": [
     "inference-experiment"
    ]
   },
   "startmlflowtrackingserver": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "startmonitoringschedule": {
    "Resources": [
     "monitoring-schedule"
    ]
   },
   "startnotebookinstance": {
    "Resources": [
     "notebook-instance"
    ]
   },
   "startpipelineexecution": {
    "Resources": [
     "pipeline"
    ]
   },
   "stopautomljob": {
    "Resources": [
     "automl-job"
    ]
   },
   "stopcompilationjob": {
    "Resources": [
     "compilation-job"
    ]
   },
   "stopedgedeploymentstage": {
    "Resources": [
     "edge-deployment-plan"
    ]
   },
   "stopedgepackagingjob": {
    "Resources": [
     "edge-packaging-job"
    ]
   },
   "stophumanloop": {
    "Resources": [
     "human-loop"
    ]
   },
   "stophyperparametertuningjob": {
    "Resources": [
     "hyper-parameter-tuning-job"
    ]
   },
   "stopinferenceexperiment": {
    "Resources": [
     "inference-experiment"
    ]
   },
   "stopinferencerecommendationsjob": {
    "Resources": [
     "inference-recommendations-job"
    ]
   },
   "stoplabelingjob": {
    "Resources": [
     "labeling-job"
    ]
   },
   "stopmlflowtrackingserver": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "stopmonitoringschedule": {
    "Resources": [
     "monitoring-schedule"
    ]
   },
   "stopnotebookinstance": {
    "Resources": [
     "notebook-instance"
    ]
   },
   "stopoptimizationjob": {
    "Resources": [
     "optimization-job"
    ]
   },
   "stoppipelineexecution": {
    "Resources": [
     "pipeline-execution"
    ]
   },
   "stopprocessingjob": {
    "Resources": [
     "processing-job"
    ]
   },
   "stoptrainingjob": {
    "Resources": [
     "training-job"
    ]
   },
   "stoptransformjob": {
    "Resources": [
     "transform-job"
    ]
   },
   "trainhubmodel": {
    "Resources": [
     "hub",
     "hub-content"
    ]
   },
   "updateaction": {
    "Resources": [
     "action"
    ]
   },
   "updateappimageconfig": {
    "Resources": [
     "app-image-config"
    ]
   },
   "updateartifact": {
    "Resources": [
     "artifact"
    ]
   },
   "updatecluster": {
    "Resources": [
     "cluster",
     "reserved-capacity",
     "training-plan"
    ]
   },
   "updateclusterschedulerconfig": {
    "Resources": [
     "cluster-scheduler-config"
    ]
   },
   "updateclustersoftware": {
    "Resources": [
     "cluster"
    ]
   },
   "updatecoderepository": {
    "Resources": [
     "code-repository"
    ]
   },
   "updatecomputequota": {
    "Resources": [
     "compute-quota"
    ]
   },
   "updatecontext": {
    "Resources": [
     "context"
    ]
   },
   "updatedevicefleet": {
    "Resources": [
     "device-fleet"
    ]
   },
   "updatedevices": {
    "Resources": [
     "device"
    ]
   },
   "updatedomain": {
    "Resources": [
     "domain"
    ]
   },
   "updateendpoint": {
    "Resources": [
     "endpoint",
     "endpoint-config"
    ]
   },
   "updateendpointweightsandcapacities": {
    "Resources": [
     "endpoint"
    ]
   },
   "updateexperiment": {
    "Resources": [
     "experiment"
    ]
   },
   "updatefeaturegroup": {
    "Resources": [
     "feature-group"
    ]
   },
   "updatefeaturemetadata": {
    "Resources": [
     "feature-group"
    ]
   },
   "updatehub": {
    "Resources": [
     "hub"
    ]
   },
   "updatehubcontent": {
    "Resources": [
     "hub",
     "hub-content"
    ]
   },
   "updatehubcontentreference": {
    "Resources": [
     "hub",
     "hub-content"
    ]
   },
   "updateimage": {
    "Resources": [
     "image"
    ]
   },
   "updateimageversion": {
    "Resources": [
     "image-version"
    ]
   },
   "updateinferencecomponent": {
    "Resources": [
     "inference-component"
    ]
   },
   "updateinferencecomponentruntimeconfig": {
    "Resources": [
     "inference-component"
    ]
   },
   "updateinferenceexperiment": {
    "Resources": [
     "inference-experiment"
    ]
   },
   "updatemlflowtrackingserver": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "updatemodelcard": {
    "Resources": [
     "model-card"
    ]
   },
   "updatemodelpackage": {
    "Resources": [
     "model-package"
    ]
   },
   "updatemonitoringalert": {
    "Resources": [
     "monitoring-schedule",
     "monitoring-schedule-alert"
    ]
   },
   "updatemonitoringschedule": {
    "Resources": [
     "monitoring-schedule"
    ]
   },
   "updatenotebookinstance": {
    "Resources": [
     "notebook-instance"
    ]
   },
   "updatenotebookinstancelifecycleconfig": {
    "Resources": [
     "notebook-instance-lifecycle-config"
    ]
   },
   "updatepartnerapp": {
    "Resources": [
     "partner-app"
    ]
   },
   "updatepipeline": {
    "Resources": [
     "pipeline"
    ]
   },
   "updatepipelineexecution": {
    "Resources": [
     "pipeline-execution"
    ]
   },
   "updateproject": {
    "Resources": [
     "project"
    ]
   },
   "updatesharedmodel": {
    "Resources": [
     "shared-model"
    ]
   },
   "updatespace": {
    "Resources": [
     "space"
    ]
   },
   "updatetrainingjob": {
    "Resources": [
     "training-job"
    ]
   },
   "updatetrial": {
    "Resources": [
     "experiment-trial"
    ]
   },
   "updatetrialcomponent": {
    "Resources": [
     "experiment-trial-component"
    ]
   },
   "updateuserprofile": {
    "Resources": [
     "user-profile"
    ]
   },
   "updateworkforce": {
    "Resources": [
     "workforce"
    ]
   },
   "updateworkteam": {
    "Resources": [
     "workteam"
    ]
   }
  },
  "Resources": {
   "action": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:action/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "algorithm": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:algorithm/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "app": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:app/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "app-image-config": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:app-image-config/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "artifact": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:artifact/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "automl-job": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:automl-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "cluster": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:cluster/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "cluster-scheduler-config": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:cluster-scheduler-config/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "code-repository": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:code-repository/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "compilation-job": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:compilation-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "compute-quota": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:compute-quota/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "context": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:context/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "data-quality-job-definition": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:data-quality-job-definition/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "device": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:device-fleet/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "device-fleet": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:device-fleet/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "domain": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:domain/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "edge-deployment-plan": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:edge-deployment/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "edge-packaging-job": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:edge-packaging-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "endpoint": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:endpoint/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "endpoint-config": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:endpoint-config/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "experiment": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:experiment/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "experiment-trial": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:experiment-trial/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "experiment-trial-component": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:experiment-trial-component/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "feature-group": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:feature-group/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "flow-definition": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:flow-definition/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "hub": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:hub/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "hub-content": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:hub-content/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "human-loop": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:human-loop/.*"
    ]
   },
   "human-task-ui": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:human-task-ui/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "hyper-parameter-tuning-job": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:hyper-parameter-tuning-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "image": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:image/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "image-version": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:image-version/.*"
    ]
   },
   "inference-component": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:inference-component/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "inference-experiment": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:inference-experiment/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "inference-recommendations-job": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:inference-recommendations-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "labeling-job": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:labeling-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "lineage-group": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:lineage-group/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "mlflow-tracking-server": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:mlflow-tracking-server/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "model": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:model/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "model-bias-job-definition": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:model-bias-job-definition/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "model-card": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:model-card/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "model-card-export-job": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:model-card/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "model-explainability-job-definition": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:model-explainability-job-definition/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "model-package": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:model-package/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "model-package-group": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:model-package-group/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "model-quality-job-definition": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:model-quality-job-definition/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "monitoring-schedule": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:monitoring-schedule/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "monitoring-schedule-alert": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:monitoring-schedule/.*"
    ]
   },
   "notebook-instance": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:notebook-instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "notebook-instance-lifecycle-config": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:notebook-instance-lifecycle-config/.*"
    ]
   },
   "optimization-job": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:optimization-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "partner-app": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:partner-app/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "pipeline": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:pipeline/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "pipeline-execution": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:pipeline/.*"
    ]
   },
   "processing-job": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:processing-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "project": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:project/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "reserved-capacity": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:reserved-capacity/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "sagemaker-catalog": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:sagemaker-catalog/.*"
    ]
   },
   "shared-model": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:shared-model/.*"
    ]
   },
   "shared-model-event": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:shared-model-event/.*"
    ]
   },
   "space": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:space/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "studio-lifecycle-config": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:studio-lifecycle-config/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "training-job": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:training-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "training-plan": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:training-plan/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "transform-job": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:transform-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "user-profile": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:user-profile/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "workforce": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:workforce/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   },
   "workteam": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:workteam/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "sagemaker-data-science-assistant": {
  "Actions": {
   "sendconversation": {}
  },
  "Resources": {}
 },
 "sagemaker-geospatial": {
  "Actions": {
   "deleteearthobservationjob": {
    "Resources": [
     "EarthObservationJob"
    ]
   },
   "deletevectorenrichmentjob": {
    "Resources": [
     "VectorEnrichmentJob"
    ]
   },
   "exportearthobservationjob": {
    "Resources": [
     "EarthObservationJob"
    ]
   },
   "exportvectorenrichmentjob": {
    "Resources": [
     "VectorEnrichmentJob"
    ]
   },
   "getearthobservationjob": {
    "Resources": [
     "EarthObservationJob"
    ]
   },
   "getrasterdatacollection": {
    "Resources": [
     "RasterDataCollection"
    ]
   },
   "gettile": {
    "Resources": [
     "EarthObservationJob"
    ]
   },
   "getvectorenrichmentjob": {
    "Resources": [
     "VectorEnrichmentJob"
    ]
   },
   "listearthobservationjobs": {},
   "listrasterdatacollections": {},
   "listtagsforresource": {
    "Resources": [
     "EarthObservationJob",
     "RasterDataCollection",
     "VectorEnrichmentJob"
    ]
   },
   "listvectorenrichmentjobs": {},
   "searchrasterdatacollection": {},
   "startearthobservationjob": {
    "Resources": [
     "EarthObservationJob"
    ]
   },
   "startvectorenrichmentjob": {
    "Resources": [
     "VectorEnrichmentJob"
    ]
   },
   "stopearthobservationjob": {
    "Resources": [
     "EarthObservationJob"
    ]
   },
   "stopvectorenrichmentjob": {
    "Resources": [
     "VectorEnrichmentJob"
    ]
   },
   "tagresource": {
    "Resources": [
     "EarthObservationJob",
     "RasterDataCollection",
     "VectorEnrichmentJob"
    ]
   },
   "untagresource": {
    "Resources": [
     "EarthObservationJob",
     "RasterDataCollection",
     "VectorEnrichmentJob"
    ]
   }
  },
  "Resources": {
   "earthobservationjob": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker-geospatial:${Region}:${Account}:earth-observation-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "rasterdatacollection": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker-geospatial:${Region}:${Account}:raster-data-collection/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "vectorenrichmentjob": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker-geospatial:${Region}:${Account}:vector-enrichment-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "sagemaker-groundtruth-synthetic": {
  "Actions": {
   "createproject": {},
   "deleteproject": {},
   "getaccountdetails": {},
   "getbatch": {},
   "getproject": {},
   "listbatchdatatransfers": {},
   "listbatchsummaries": {},
   "listprojectdatatransfers": {},
   "listprojectsummaries": {},
   "startbatchdatatransfer": {},
   "startprojectdatatransfer": {},
   "updatebatch": {}
  },
  "Resources": {}
 },
 "sagemaker-mlflow": {
  "Actions": {
   "accessui": {},
   "createexperiment": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "createmodelversion": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "createregisteredmodel": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "createrun": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "deleteexperiment": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "deletemodelversion": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "deletemodelversiontag": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "deleteregisteredmodel": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "deleteregisteredmodelalias": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "deleteregisteredmodeltag": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "deleterun": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "deletetag": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "deletetraces": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "deletetracetag": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "endtrace": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "getdownloaduriformodelversionartifacts": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "getexperiment": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "getexperimentbyname": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "getlatestmodelversions": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "getmetrichistory": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "getmodelversion": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "getmodelversionbyalias": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "getregisteredmodel": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "getrun": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "gettraceinfo": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "listartifacts": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "logbatch": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "loginputs": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "logmetric": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "logmodel": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "logparam": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "renameregisteredmodel": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "restoreexperiment": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "restorerun": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "searchexperiments": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "searchmodelversions": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "searchregisteredmodels": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "searchruns": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "searchtraces": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "setexperimenttag": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "setmodelversiontag": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "setregisteredmodelalias": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "setregisteredmodeltag": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "settag": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "settracetag": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "starttrace": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "transitionmodelversionstage": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "updateexperiment": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "updatemodelversion": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "updateregisteredmodel": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   },
   "updaterun": {
    "Resources": [
     "mlflow-tracking-server"
    ]
   }
  },
  "Resources": {
   "mlflow-tracking-server": {
    "ARNFormats": [
     "arn:${Partition}:sagemaker:${Region}:${Account}:mlflow-tracking-server/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sagemaker:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "savingsplans": {
  "Actions": {
   "createsavingsplan": {},
   "deletequeuedsavingsplan": {
    "Resources": [
     "savingsplan"
    ]
   },
   "describesavingsplanrates": {
    "Resources": [
     "savingsplan"
    ]
   },
   "describesavingsplans": {
    "Resources": [
     "savingsplan"
    ]
   },
   "describesavingsplansofferingrates": {},
   "describesavingsplansofferings": {},
   "listtagsforresource": {
    "Resources": [
     "savingsplan"
    ]
   },
   "returnsavingsplan": {
    "Resources": [
     "savingsplan"
    ]
   },
   "tagresource": {
    "Resources": [
     "savingsplan"
    ]
   },
   "untagresource": {
    "Resources": [
     "savingsplan"
    ]
   }
  },
  "Resources": {
   "savingsplan": {
    "ARNFormats": [
     "arn:${Partition}:savingsplans::${Account}:savingsplan/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "scheduler": {
  "Actions": {
   "createschedule": {
    "Resources": [
     "schedule"
    ]
   },
   "createschedulegroup": {
    "Resources": [
     "schedule-group"
    ]
   },
   "deleteschedule": {
    "Resources": [
     "schedule"
    ]
   },
   "deleteschedulegroup": {
    "Resources": [
     "schedule-group"
    ]
   },
   "getschedule": {
    "Resources": [
     "schedule"
    ]
   },
   "getschedulegroup": {
    "Resources": [
     "schedule-group"
    ]
   },
   "listschedulegroups": {},
   "listschedules": {},
   "listtagsforresource": {
    "Resources": [
     "schedule-group"
    ]
   },
   "tagresource": {
    "Resources": [
     "schedule-group"
    ]
   },
   "untagresource": {
    "Resources": [
     "schedule-group"
    ]
   },
   "updateschedule": {
    "Resources": [
     "schedule"
    ]
   }
  },
  "Resources": {
   "schedule": {
    "ARNFormats": [
     "arn:${Partition}:scheduler:${Region}:${Account}:schedule/.*"
    ]
   },
   "schedule-group": {
    "ARNFormats": [
     "arn:${Partition}:scheduler:${Region}:${Account}:schedule-group/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "schemas": {
  "Actions": {
   "creatediscoverer": {},
   "createregistry": {
    "Resources": [
     "registry"
    ]
   },
   "createschema": {
    "Resources": [
     "schema"
    ]
   },
   "deletediscoverer": {
    "Resources": [
     "discoverer"
    ]
   },
   "deleteregistry": {
    "Resources": [
     "registry"
    ]
   },
   "deleteresourcepolicy": {
    "Resources": [
     "registry"
    ]
   },
   "deleteschema": {
    "Resources": [
     "schema"
    ]
   },
   "deleteschemaversion": {
    "Resources": [
     "schema"
    ]
   },
   "describecodebinding": {
    "Resources": [
     "schema"
    ]
   },
   "describediscoverer": {
    "Resources": [
     "discoverer"
    ]
   },
   "describeregistry": {
    "Resources": [
     "registry"
    ]
   },
   "describeschema": {
    "Resources": [
     "schema"
    ]
   },
   "exportschema": {
    "Resources": [
     "registry",
     "schema"
    ]
   },
   "getcodebindingsource": {
    "Resources": [
     "schema"
    ]
   },
   "getdiscoveredschema": {},
   "getresourcepolicy": {
    "Resources": [
     "registry"
    ]
   },
   "listdiscoverers": {
    "Resources": [
     "discoverer"
    ]
   },
   "listregistries": {
    "Resources": [
     "registry"
    ]
   },
   "listschemas": {
    "Resources": [
     "schema"
    ]
   },
   "listschemaversions": {
    "Resources": [
     "schema"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "discoverer",
     "registry",
     "schema"
    ]
   },
   "putcodebinding": {
    "Resources": [
     "schema"
    ]
   },
   "putresourcepolicy": {
    "Resources": [
     "registry"
    ]
   },
   "searchschemas": {
    "Resources": [
     "schema"
    ]
   },
   "startdiscoverer": {
    "Resources": [
     "discoverer"
    ]
   },
   "stopdiscoverer": {
    "Resources": [
     "discoverer"
    ]
   },
   "tagresource": {
    "Resources": [
     "discoverer",
     "registry",
     "schema"
    ]
   },
   "untagresource": {
    "Resources": [
     "discoverer",
     "registry",
     "schema"
    ]
   },
   "updatediscoverer": {
    "Resources": [
     "discoverer"
    ]
   },
   "updateregistry": {
    "Resources": [
     "registry"
    ]
   },
   "updateschema": {
    "Resources": [
     "schema"
    ]
   }
  },
  "Resources": {
   "discoverer": {
    "ARNFormats": [
     "arn:${Partition}:schemas:${Region}:${Account}:discoverer/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "registry": {
    "ARNFormats": [
     "arn:${Partition}:schemas:${Region}:${Account}:registry/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "schema": {
    "ARNFormats": [
     "arn:${Partition}:schemas:${Region}:${Account}:schema/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "scn": {
  "Actions": {
   "assignadminpermissionstouser": {
    "Resources": [
     "instance"
    ]
   },
   "createbillofmaterialsimportjob": {
    "Resources": [
     "instance"
    ]
   },
   "createdataintegrationflow": {
    "Resources": [
     "instance"
    ]
   },
   "createdatalakedataset": {
    "Resources": [
     "instance"
    ]
   },
   "createinstance": {
    "Resources": [
     "instance"
    ]
   },
   "createssoapplication": {
    "Resources": [
     "instance"
    ]
   },
   "deletedataintegrationflow": {
    "Resources": [
     "data-integration-flow"
    ]
   },
   "deletedatalakedataset": {
    "Resources": [
     "dataset"
    ]
   },
   "deleteinstance": {
    "Resources": [
     "instance"
    ]
   },
   "deletessoapplication": {
    "Resources": [
     "instance"
    ]
   },
   "describeinstance": {
    "Resources": [
     "instance"
    ]
   },
   "getbillofmaterialsimportjob": {
    "Resources": [
     "bill-of-materials-import-job"
    ]
   },
   "getdataintegrationflow": {
    "Resources": [
     "data-integration-flow"
    ]
   },
   "getdatalakedataset": {
    "Resources": [
     "dataset"
    ]
   },
   "getinstance": {
    "Resources": [
     "instance"
    ]
   },
   "listadminusers": {
    "Resources": [
     "instance"
    ]
   },
   "listdataintegrationflows": {
    "Resources": [
     "instance"
    ]
   },
   "listdatalakedatasets": {
    "Resources": [
     "instance"
    ]
   },
   "listinstances": {
    "Resources": [
     "instance"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "instance"
    ]
   },
   "removeadminpermissionsforuser": {
    "Resources": [
     "instance"
    ]
   },
   "senddataintegrationevent": {
    "Resources": [
     "instance"
    ]
   },
   "tagresource": {
    "Resources": [
     "instance"
    ]
   },
   "untagresource": {
    "Resources": [
     "instance"
    ]
   },
   "updatedataintegrationflow": {
    "Resources": [
     "data-integration-flow"
    ]
   },
   "updatedatalakedataset": {
    "Resources": [
     "dataset"
    ]
   },
   "updateinstance": {
    "Resources": [
     "instance"
    ]
   }
  },
  "Resources": {
   "bill-of-materials-import-job": {
    "ARNFormats": [
     "arn:${Partition}:scn:${Region}:${Account}:instance/.*"
    ]
   },
   "data-integration-flow": {
    "ARNFormats": [
     "arn:${Partition}:scn:${Region}:${Account}:instance/.*"
    ]
   },
   "dataset": {
    "ARNFormats": [
     "arn:${Partition}:scn:${Region}:${Account}:instance/.*"
    ]
   },
   "instance": {
    "ARNFormats": [
     "arn:${Partition}:scn:${Region}:${Account}:instance/.*"
    ]
   }
  }
 },
 "sdb": {
  "Actions": {
   "batchdeleteattributes": {
    "Resources": [
     "domain"
    ]
   },
   "batchputattributes": {
    "Resources": [
     "domain"
    ]
   },
   "createdomain": {
    "Resources": [
     "domain"
    ]
   },
   "deleteattributes": {
    "Resources": [
     "domain"
    ]
   },
   "deletedomain": {
    "Resources": [
     "domain"
    ]
   },
   "domainmetadata": {
    "Resources": [
     "domain"
    ]
   },
   "getattributes": {
    "Resources": [
     "domain"
    ]
   },
   "listdomains": {},
   "putattributes": {
    "Resources": [
     "domain"
    ]
   },
   "select": {
    "Resources": [
     "domain"
    ]
   }
  },
  "Resources": {
   "domain": {
    "ARNFormats": [
     "arn:${Partition}:sdb:${Region}:${Account}:domain/.*"
    ]
   }
  }
 },
 "secretsmanager": {
  "Actions": {
   "batchgetsecretvalue": {},
   "cancelrotatesecret": {
    "Resources": [
     "Secret"
    ]
   },
   "createsecret": {
    "Resources": [
     "Secret"
    ]
   },
   "deleteresourcepolicy": {
    "Resources": [
     "Secret"
    ]
   },
   "deletesecret": {
    "Resources": [
     "Secret"
    ]
   },
   "describesecret": {
    "Resources": [
     "Secret"
    ]
   },
   "getrandompassword": {},
   "getresourcepolicy": {
    "Resources": [
     "Secret"
    ]
   },
   "getsecretvalue": {
    "Resources": [
     "Secret"
    ]
   },
   "listsecrets": {},
   "listsecretversionids": {
    "Resources": [
     "Secret"
    ]
   },
   "putresourcepolicy": {
    "Resources": [
     "Secret"
    ]
   },
   "putsecretvalue": {
    "Resources": [
     "Secret"
    ]
   },
   "removeregionsfromreplication": {
    "Resources": [
     "Secret"
    ]
   },
   "replicatesecrettoregions": {
    "Resources": [
     "Secret"
    ]
   },
   "restoresecret": {
    "Resources": [
     "Secret"
    ]
   },
   "rotatesecret": {
    "Resources": [
     "Secret"
    ]
   },
   "stopreplicationtoreplica": {
    "Resources": [
     "Secret"
    ]
   },
   "tagresource": {
    "Resources": [
     "Secret"
    ]
   },
   "untagresource": {
    "Resources": [
     "Secret"
    ]
   },
   "updatesecret": {
    "Resources": [
     "Secret"
    ]
   },
   "updatesecretversionstage": {
    "Resources": [
     "Secret"
    ]
   },
   "validateresourcepolicy": {
    "Resources": [
     "Secret"
    ]
   }
  },
  "Resources": {
   "secret": {
    "ARNFormats": [
     "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "secretsmanager:ResourceTag/tag-key",
     "secretsmanager:resource/AllowRotationLambdaArn"
    ]
   }
  }
 },
 "security-ir": {
  "Actions": {
   "batchgetmemberaccountdetails": {
    "Resources": [
     "membership"
    ]
   },
   "cancelmembership": {
    "Resources": [
     "membership"
    ]
   },
   "closecase": {
    "Resources": [
     "case"
    ]
   },
   "createcase": {},
   "createcasecomment": {
    "Resources": [
     "case"
    ]
   },
   "createmembership": {},
   "getcase": {
    "Resources": [
     "case"
    ]
   },
   "getcaseattachmentdownloadurl": {
    "Resources": [
     "case"
    ]
   },
   "getcaseattachmentuploadurl": {
    "Resources": [
     "case"
    ]
   },
   "getmembership": {
    "Resources": [
     "membership"
    ]
   },
   "listcaseedits": {
    "Resources": [
     "case"
    ]
   },
   "listcases": {},
   "listcomments": {
    "Resources": [
     "case"
    ]
   },
   "listmemberships": {},
   "listtagsforresource": {
    "Resources": [
     "case",
     "membership"
    ]
   },
   "tagresource": {
    "Resources": [
     "case",
     "membership"
    ]
   },
   "untagresource": {
    "Resources": [
     "case",
     "membership"
    ]
   },
   "updatecase": {
    "Resources": [
     "case"
    ]
   },
   "updatecasecomment": {
    "Resources": [
     "case"
    ]
   },
   "updatecasestatus": {
    "Resources": [
     "case"
    ]
   },
   "updatemembership": {
    "Resources": [
     "membership"
    ]
   },
   "updateresolvertype": {
    "Resources": [
     "case"
    ]
   }
  },
  "Resources": {
   "case": {
    "ARNFormats": [
     "arn:${Partition}:security-ir:${Region}:${Account}:case/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "membership": {
    "ARNFormats": [
     "arn:${Partition}:security-ir:${Region}:${Account}:membership/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "securityhub": {
  "Actions": {
   "acceptadministratorinvitation": {
    "Resources": [
     "hub"
    ]
   },
   "acceptinvitation": {
    "Resources": [
     "hub"
    ]
   },
   "batchdeleteautomationrules": {
    "Resources": [
     "automation-rule"
    ]
   },
   "batchdisablestandards": {
    "Resources": [
     "hub"
    ]
   },
   "batchenablestandards": {
    "Resources": [
     "hub"
    ]
   },
   "batchgetautomationrules": {
    "Resources": [
     "automation-rule"
    ]
   },
   "batchgetconfigurationpolicyassociations": {},
   "batchgetcontrolevaluations": {
    "Resources": [
     "hub"
    ]
   },
   "batchgetsecuritycontrols": {},
   "batchgetstandardscontrolassociations": {},
   "batchimportfindings": {
    "Resources": [
     "product"
    ]
   },
   "batchupdateautomationrules": {
    "Resources": [
     "automation-rule"
    ]
   },
   "batchupdatefindings": {
    "Resources": [
     "hub"
    ]
   },
   "batchupdatestandardscontrolassociations": {},
   "createactiontarget": {
    "Resources": [
     "hub"
    ]
   },
   "createautomationrule": {},
   "createconfigurationpolicy": {},
   "createfindingaggregator": {},
   "createinsight": {
    "Resources": [
     "hub"
    ]
   },
   "createmembers": {
    "Resources": [
     "hub"
    ]
   },
   "declineinvitations": {
    "Resources": [
     "hub"
    ]
   },
   "deleteactiontarget": {
    "Resources": [
     "hub"
    ]
   },
   "deleteconfigurationpolicy": {
    "Resources": [
     "configuration-policy"
    ]
   },
   "deletefindingaggregator": {
    "Resources": [
     "finding-aggregator"
    ]
   },
   "deleteinsight": {
    "Resources": [
     "hub"
    ]
   },
   "deleteinvitations": {
    "Resources": [
     "hub"
    ]
   },
   "deletemembers": {
    "Resources": [
     "hub"
    ]
   },
   "describeactiontargets": {
    "Resources": [
     "hub"
    ]
   },
   "describehub": {
    "Resources": [
     "hub"
    ]
   },
   "describeorganizationconfiguration": {
    "Resources": [
     "hub"
    ]
   },
   "describeproducts": {
    "Resources": [
     "hub"
    ]
   },
   "describestandards": {
    "Resources": [
     "hub"
    ]
   },
   "describestandardscontrols": {
    "Resources": [
     "hub"
    ]
   },
   "disableimportfindingsforproduct": {
    "Resources": [
     "hub"
    ]
   },
   "disableorganizationadminaccount": {
    "Resources": [
     "hub"
    ]
   },
   "disablesecurityhub": {
    "Resources": [
     "hub"
    ]
   },
   "disassociatefromadministratoraccount": {
    "Resources": [
     "hub"
    ]
   },
   "disassociatefrommasteraccount": {
    "Resources": [
     "hub"
    ]
   },
   "disassociatemembers": {
    "Resources": [
     "hub"
    ]
   },
   "enableimportfindingsforproduct": {
    "Resources": [
     "hub"
    ]
   },
   "enableorganizationadminaccount": {
    "Resources": [
     "hub"
    ]
   },
   "enablesecurityhub": {
    "Resources": [
     "hub"
    ]
   },
   "getadhocinsightresults": {
    "Resources": [
     "hub"
    ]
   },
   "getadministratoraccount": {
    "Resources": [
     "hub"
    ]
   },
   "getconfigurationpolicy": {
    "Resources": [
     "configuration-policy"
    ]
   },
   "getconfigurationpolicyassociation": {},
   "getcontrolfindingsummary": {
    "Resources": [
     "hub"
    ]
   },
   "getenabledstandards": {
    "Resources": [
     "hub"
    ]
   },
   "getfindingaggregator": {
    "Resources": [
     "finding-aggregator"
    ]
   },
   "getfindinghistory": {
    "Resources": [
     "hub"
    ]
   },
   "getfindings": {
    "Resources": [
     "hub"
    ]
   },
   "getfreetrialenddate": {
    "Resources": [
     "hub"
    ]
   },
   "getfreetrialusage": {
    "Resources": [
     "hub"
    ]
   },
   "getinsightfindingtrend": {
    "Resources": [
     "hub"
    ]
   },
   "getinsightresults": {
    "Resources": [
     "hub"
    ]
   },
   "getinsights": {
    "Resources": [
     "hub"
    ]
   },
   "getinvitationscount": {
    "Resources": [
     "hub"
    ]
   },
   "getmasteraccount": {
    "Resources": [
     "hub"
    ]
   },
   "getmembers": {
    "Resources": [
     "hub"
    ]
   },
   "getsecuritycontroldefinition": {},
   "getusage": {
    "Resources": [
     "hub"
    ]
   },
   "invitemembers": {
    "Resources": [
     "hub"
    ]
   },
   "listautomationrules": {},
   "listconfigurationpolicies": {},
   "listconfigurationpolicyassociations": {},
   "listcontrolevaluationsummaries": {
    "Resources": [
     "hub"
    ]
   },
   "listenabledproductsforimport": {
    "Resources": [
     "hub"
    ]
   },
   "listfindingaggregators": {},
   "listinvitations": {
    "Resources": [
     "hub"
    ]
   },
   "listmembers": {
    "Resources": [
     "hub"
    ]
   },
   "listorganizationadminaccounts": {
    "Resources": [
     "hub"
    ]
   },
   "listsecuritycontroldefinitions": {},
   "liststandardscontrolassociations": {},
   "listtagsforresource": {
    "Resources": [
     "automation-rule",
     "configuration-policy",
     "hub"
    ]
   },
   "sendfindingevents": {
    "Resources": [
     "hub"
    ]
   },
   "sendinsightevents": {
    "Resources": [
     "hub"
    ]
   },
   "startconfigurationpolicyassociation": {
    "Resources": [
     "configuration-policy"
    ]
   },
   "startconfigurationpolicydisassociation": {
    "Resources": [
     "configuration-policy"
    ]
   },
   "tagresource": {
    "Resources": [
     "automation-rule",
     "configuration-policy",
     "hub"
    ]
   },
   "untagresource": {
    "Resources": [
     "automation-rule",
     "configuration-policy",
     "hub"
    ]
   },
   "updateactiontarget": {
    "Resources": [
     "hub"
    ]
   },
   "updateconfigurationpolicy": {
    "Resources": [
     "configuration-policy"
    ]
   },
   "updatefindingaggregator": {
    "Resources": [
     "finding-aggregator"
    ]
   },
   "updatefindings": {
    "Resources": [
     "hub"
    ]
   },
   "updateinsight": {
    "Resources": [
     "hub"
    ]
   },
   "updateorganizationconfiguration": {
    "Resources": [
     "hub"
    ]
   },
   "updatesecuritycontrol": {},
   "updatesecurityhubconfiguration": {
    "Resources": [
     "hub"
    ]
   },
   "updatestandardscontrol": {
    "Resources": [
     "hub"
    ]
   }
  },
  "Resources": {
   "automation-rule": {
    "ARNFormats": [
     "arn:${Partition}:securityhub:${Region}:${Account}:automation-rule/.*"
    ]
   },
   "configuration-policy": {
    "ARNFormats": [
     "arn:${Partition}:securityhub:${Region}:${Account}:configuration-policy/.*"
    ]
   },
   "finding-aggregator": {
    "ARNFormats": [
     "arn:${Partition}:securityhub:${Region}:${Account}:finding-aggregator/.*"
    ]
   },
   "hub": {
    "ARNFormats": [
     "arn:${Partition}:securityhub:${Region}:${Account}:hub/default"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "product": {
    "ARNFormats": [
     "arn:${Partition}:securityhub:${Region}:${Account}:product/.*"
    ]
   }
  }
 },
 "securitylake": {
  "Actions": {
   "createawslogsource": {
    "Resources": [
     "data-lake"
    ]
   },
   "createcustomlogsource": {
    "Resources": [
     "data-lake"
    ]
   },
   "createdatalake": {
    "Resources": [
     "data-lake"
    ]
   },
   "createdatalakeexceptionsubscription": {},
   "createdatalakeorganizationconfiguration": {
    "Resources": [
     "data-lake"
    ]
   },
   "createsubscriber": {},
   "createsubscribernotification": {
    "Resources": [
     "subscriber"
    ]
   },
   "deleteawslogsource": {
    "Resources": [
     "data-lake"
    ]
   },
   "deletecustomlogsource": {
    "Resources": [
     "data-lake"
    ]
   },
   "deletedatalake": {
    "Resources": [
     "data-lake"
    ]
   },
   "deletedatalakeexceptionsubscription": {},
   "deletedatalakeorganizationconfiguration": {
    "Resources": [
     "data-lake"
    ]
   },
   "deletesubscriber": {
    "Resources": [
     "subscriber"
    ]
   },
   "deletesubscribernotification": {
    "Resources": [
     "subscriber"
    ]
   },
   "deregisterdatalakedelegatedadministrator": {},
   "getdatalakeexceptionsubscription": {},
   "getdatalakeorganizationconfiguration": {
    "Resources": [
     "data-lake"
    ]
   },
   "getdatalakesources": {
    "Resources": [
     "data-lake"
    ]
   },
   "getsubscriber": {
    "Resources": [
     "subscriber"
    ]
   },
   "listdatalakeexceptions": {},
   "listdatalakes": {},
   "listlogsources": {},
   "listsubscribers": {},
   "listtagsforresource": {
    "Resources": [
     "data-lake",
     "subscriber"
    ]
   },
   "registerdatalakedelegatedadministrator": {},
   "tagresource": {
    "Resources": [
     "data-lake",
     "subscriber"
    ]
   },
   "untagresource": {
    "Resources": [
     "data-lake",
     "subscriber"
    ]
   },
   "updatedatalake": {
    "Resources": [
     "data-lake"
    ]
   },
   "updatedatalakeexceptionsubscription": {},
   "updatesubscriber": {
    "Resources": [
     "subscriber"
    ]
   },
   "updatesubscribernotification": {
    "Resources": [
     "subscriber"
    ]
   }
  },
  "Resources": {
   "data-lake": {
    "ARNFormats": [
     "arn:${Partition}:securitylake:${Region}:${Account}:data-lake/default"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "subscriber": {
    "ARNFormats": [
     "arn:${Partition}:securitylake:${Region}:${Account}:subscriber/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "serverlessrepo": {
  "Actions": {
   "createapplication": {},
   "createapplicationversion": {
    "Resources": [
     "applications"
    ]
   },
   "createcloudformationchangeset": {
    "Resources": [
     "applications"
    ]
   },
   "createcloudformationtemplate": {
    "Resources": [
     "applications"
    ]
   },
   "deleteapplication": {
    "Resources": [
     "applications"
    ]
   },
   "getapplication": {
    "Resources": [
     "applications"
    ]
   },
   "getapplicationpolicy": {
    "Resources": [
     "applications"
    ]
   },
   "getcloudformationtemplate": {
    "Resources": [
     "applications"
    ]
   },
   "listapplicationdependencies": {
    "Resources": [
     "applications"
    ]
   },
   "listapplications": {},
   "listapplicationversions": {
    "Resources": [
     "applications"
    ]
   },
   "putapplicationpolicy": {
    "Resources": [
     "applications"
    ]
   },
   "searchapplications": {},
   "unshareapplication": {
    "Resources": [
     "applications"
    ]
   },
   "updateapplication": {
    "Resources": [
     "applications"
    ]
   }
  },
  "Resources": {
   "applications": {
    "ARNFormats": [
     "arn:${Partition}:serverlessrepo:${Region}:${Account}:applications/.*"
    ]
   }
  }
 },
 "servicecatalog": {
  "Actions": {
   "acceptportfolioshare": {
    "Resources": [
     "Portfolio"
    ]
   },
   "associateattributegroup": {
    "Resources": [
     "Application",
     "AttributeGroup"
    ]
   },
   "associatebudgetwithresource": {},
   "associateprincipalwithportfolio": {
    "Resources": [
     "Portfolio"
    ]
   },
   "associateproductwithportfolio": {},
   "associateresource": {
    "Resources": [
     "Application"
    ]
   },
   "associateserviceactionwithprovisioningartifact": {
    "Resources": [
     "Product"
    ]
   },
   "associatetagoptionwithresource": {
    "Resources": [
     "Portfolio",
     "Product"
    ]
   },
   "batchassociateserviceactionwithprovisioningartifact": {},
   "batchdisassociateserviceactionfromprovisioningartifact": {},
   "copyproduct": {},
   "createapplication": {
    "Resources": [
     "Application"
    ]
   },
   "createattributegroup": {
    "Resources": [
     "AttributeGroup"
    ]
   },
   "createconstraint": {
    "Resources": [
     "Product"
    ]
   },
   "createportfolio": {
    "Resources": [
     "Portfolio"
    ]
   },
   "createportfolioshare": {
    "Resources": [
     "Portfolio"
    ]
   },
   "createproduct": {
    "Resources": [
     "Product"
    ]
   },
   "createprovisionedproductplan": {},
   "createprovisioningartifact": {
    "Resources": [
     "Product"
    ]
   },
   "createserviceaction": {},
   "createtagoption": {},
   "deleteapplication": {
    "Resources": [
     "Application"
    ]
   },
   "deleteattributegroup": {
    "Resources": [
     "AttributeGroup"
    ]
   },
   "deleteconstraint": {},
   "deleteportfolio": {
    "Resources": [
     "Portfolio"
    ]
   },
   "deleteportfolioshare": {
    "Resources": [
     "Portfolio"
    ]
   },
   "deleteproduct": {
    "Resources": [
     "Product"
    ]
   },
   "deleteprovisionedproductplan": {},
   "deleteprovisioningartifact": {
    "Resources": [
     "Product"
    ]
   },
   "deleteresourcepolicy": {
    "Resources": [
     "Application",
     "AttributeGroup"
    ]
   },
   "deleteserviceaction": {},
   "deletetagoption": {},
   "describeconstraint": {},
   "describecopyproductstatus": {},
   "describeportfolio": {
    "Resources": [
     "Portfolio"
    ]
   },
   "describeportfolioshares": {
    "Resources": [
     "Portfolio"
    ]
   },
   "describeportfoliosharestatus": {},
   "describeproduct": {
    "Resources": [
     "Product"
    ]
   },
   "describeproductasadmin": {
    "Resources": [
     "Product"
    ]
   },
   "describeproductview": {},
   "describeprovisionedproduct": {},
   "describeprovisionedproductplan": {},
   "describeprovisioningartifact": {
    "Resources": [
     "Product"
    ]
   },
   "describeprovisioningparameters": {
    "Resources": [
     "Product"
    ]
   },
   "describerecord": {},
   "describeserviceaction": {},
   "describeserviceactionexecutionparameters": {},
   "describetagoption": {},
   "disableawsorganizationsaccess": {},
   "disassociateattributegroup": {
    "Resources": [
     "Application",
     "AttributeGroup"
    ]
   },
   "disassociatebudgetfromresource": {},
   "disassociateprincipalfromportfolio": {
    "Resources": [
     "Portfolio"
    ]
   },
   "disassociateproductfromportfolio": {},
   "disassociateresource": {
    "Resources": [
     "Application"
    ]
   },
   "disassociateserviceactionfromprovisioningartifact": {
    "Resources": [
     "Product"
    ]
   },
   "disassociatetagoptionfromresource": {
    "Resources": [
     "Portfolio",
     "Product"
    ]
   },
   "enableawsorganizationsaccess": {},
   "executeprovisionedproductplan": {},
   "executeprovisionedproductserviceaction": {},
   "getapplication": {
    "Resources": [
     "Application"
    ]
   },
   "getassociatedresource": {
    "Resources": [
     "Application"
    ]
   },
   "getattributegroup": {
    "Resources": [
     "AttributeGroup"
    ]
   },
   "getawsorganizationsaccessstatus": {},
   "getconfiguration": {},
   "getprovisionedproductoutputs": {},
   "getresourcepolicy": {
    "Resources": [
     "Application",
     "AttributeGroup"
    ]
   },
   "importasprovisionedproduct": {
    "Resources": [
     "Product"
    ]
   },
   "listacceptedportfolioshares": {},
   "listapplications": {},
   "listassociatedattributegroups": {
    "Resources": [
     "Application"
    ]
   },
   "listassociatedresources": {
    "Resources": [
     "Application"
    ]
   },
   "listattributegroups": {},
   "listattributegroupsforapplication": {
    "Resources": [
     "Application"
    ]
   },
   "listbudgetsforresource": {},
   "listconstraintsforportfolio": {},
   "listlaunchpaths": {
    "Resources": [
     "Product"
    ]
   },
   "listorganizationportfolioaccess": {},
   "listportfolioaccess": {
    "Resources": [
     "Portfolio"
    ]
   },
   "listportfolios": {},
   "listportfoliosforproduct": {
    "Resources": [
     "Product"
    ]
   },
   "listprincipalsforportfolio": {
    "Resources": [
     "Portfolio"
    ]
   },
   "listprovisionedproductplans": {},
   "listprovisioningartifacts": {
    "Resources": [
     "Product"
    ]
   },
   "listprovisioningartifactsforserviceaction": {},
   "listrecordhistory": {},
   "listresourcesfortagoption": {},
   "listserviceactions": {},
   "listserviceactionsforprovisioningartifact": {
    "Resources": [
     "Product"
    ]
   },
   "liststackinstancesforprovisionedproduct": {},
   "listtagoptions": {},
   "listtagsforresource": {
    "Resources": [
     "Application",
     "AttributeGroup"
    ]
   },
   "notifyprovisionproductengineworkflowresult": {},
   "notifyterminateprovisionedproductengineworkflowresult": {},
   "notifyupdateprovisionedproductengineworkflowresult": {},
   "provisionproduct": {
    "Resources": [
     "Product"
    ]
   },
   "putconfiguration": {},
   "putresourcepolicy": {
    "Resources": [
     "Application",
     "AttributeGroup"
    ]
   },
   "rejectportfolioshare": {
    "Resources": [
     "Portfolio"
    ]
   },
   "scanprovisionedproducts": {},
   "searchproducts": {},
   "searchproductsasadmin": {},
   "searchprovisionedproducts": {},
   "syncresource": {},
   "tagresource": {
    "Resources": [
     "Application",
     "AttributeGroup"
    ]
   },
   "terminateprovisionedproduct": {},
   "untagresource": {
    "Resources": [
     "Application",
     "AttributeGroup"
    ]
   },
   "updateapplication": {
    "Resources": [
     "Application"
    ]
   },
   "updateattributegroup": {
    "Resources": [
     "AttributeGroup"
    ]
   },
   "updateconstraint": {},
   "updateportfolio": {
    "Resources": [
     "Portfolio"
    ]
   },
   "updateportfolioshare": {
    "Resources": [
     "Portfolio"
    ]
   },
   "updateproduct": {
    "Resources": [
     "Product"
    ]
   },
   "updateprovisionedproduct": {},
   "updateprovisionedproductproperties": {},
   "updateprovisioningartifact": {
    "Resources": [
     "Product"
    ]
   },
   "updateserviceaction": {},
   "updatetagoption": {}
  },
  "Resources": {
   "application": {
    "ARNFormats": [
     "arn:${Partition}:servicecatalog:${Region}:${Account}:/applications/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "attributegroup": {
    "ARNFormats": [
     "arn:${Partition}:servicecatalog:${Region}:${Account}:/attribute-groups/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "portfolio": {
    "ARNFormats": [
     "arn:${Partition}:catalog:${Region}:${Account}:portfolio/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "product": {
    "ARNFormats": [
     "arn:${Partition}:catalog:${Region}:${Account}:product/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "servicediscovery": {
  "Actions": {
   "createhttpnamespace": {},
   "createprivatednsnamespace": {},
   "createpublicdnsnamespace": {},
   "createservice": {
    "Resources": [
     "namespace",
     "service"
    ]
   },
   "deletenamespace": {
    "Resources": [
     "namespace"
    ]
   },
   "deleteservice": {
    "Resources": [
     "service"
    ]
   },
   "deleteserviceattributes": {
    "Resources": [
     "service"
    ]
   },
   "deregisterinstance": {
    "Resources": [
     "service"
    ]
   },
   "discoverinstances": {},
   "discoverinstancesrevision": {},
   "getinstance": {},
   "getinstanceshealthstatus": {},
   "getnamespace": {
    "Resources": [
     "namespace"
    ]
   },
   "getoperation": {},
   "getservice": {
    "Resources": [
     "service"
    ]
   },
   "getserviceattributes": {
    "Resources": [
     "service"
    ]
   },
   "listinstances": {},
   "listnamespaces": {},
   "listoperations": {},
   "listservices": {},
   "listtagsforresource": {},
   "registerinstance": {
    "Resources": [
     "service"
    ]
   },
   "tagresource": {},
   "untagresource": {},
   "updatehttpnamespace": {
    "Resources": [
     "namespace"
    ]
   },
   "updateinstancecustomhealthstatus": {},
   "updateprivatednsnamespace": {
    "Resources": [
     "namespace"
    ]
   },
   "updatepublicdnsnamespace": {
    "Resources": [
     "namespace"
    ]
   },
   "updateservice": {
    "Resources": [
     "service"
    ]
   },
   "updateserviceattributes": {
    "Resources": [
     "service"
    ]
   }
  },
  "Resources": {
   "namespace": {
    "ARNFormats": [
     "arn:${Partition}:servicediscovery:${Region}:${Account}:namespace/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "service": {
    "ARNFormats": [
     "arn:${Partition}:servicediscovery:${Region}:${Account}:service/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "serviceextract": {
  "Actions": {
   "getconfig": {}
  },
  "Resources": {}
 },
 "servicequotas": {
  "Actions": {
   "associateservicequotatemplate": {},
   "deleteservicequotaincreaserequestfromtemplate": {},
   "disassociateservicequotatemplate": {},
   "getassociationforservicequotatemplate": {},
   "getawsdefaultservicequota": {},
   "getrequestedservicequotachange": {},
   "getservicequota": {},
   "getservicequotaincreaserequestfromtemplate": {},
   "listawsdefaultservicequotas": {},
   "listrequestedservicequotachangehistory": {},
   "listrequestedservicequotachangehistorybyquota": {},
   "listservicequotaincreaserequestsintemplate": {},
   "listservicequotas": {},
   "listservices": {},
   "listtagsforresource": {},
   "putservicequotaincreaserequestintotemplate": {
    "Resources": [
     "quota"
    ]
   },
   "requestservicequotaincrease": {
    "Resources": [
     "quota"
    ]
   },
   "tagresource": {},
   "untagresource": {}
  },
  "Resources": {
   "quota": {
    "ARNFormats": [
     "arn:${Partition}:servicequotas:${Region}:${Account}:.*"
    ]
   }
  }
 },
 "ses": {
  "Actions": {
   "allowvendedlogdeliveryforresource": {
    "Resources": [
     "mailmanager-ingress-point",
     "mailmanager-rule-set"
    ]
   },
   "batchgetmetricdata": {
    "Resources": [
     "configuration-set",
     "identity"
    ]
   },
   "cancelexportjob": {
    "Resources": [
     "export-job"
    ]
   },
   "clonereceiptruleset": {},
   "createaddoninstance": {},
   "createaddonsubscription": {},
   "createaddresslist": {},
   "createaddresslistimportjob": {
    "Resources": [
     "mailmanager-address-list"
    ]
   },
   "createarchive": {},
   "createconfigurationset": {
    "Resources": [
     "configuration-set",
     "dedicated-ip-pool",
     "mailmanager-archive"
    ]
   },
   "createconfigurationseteventdestination": {
    "Resources": [
     "configuration-set"
    ]
   },
   "createconfigurationsettrackingoptions": {},
   "createcontact": {
    "Resources": [
     "contact-list"
    ]
   },
   "createcontactlist": {
    "Resources": [
     "contact-list"
    ]
   },
   "createcustomverificationemailtemplate": {
    "Resources": [
     "custom-verification-email-template"
    ]
   },
   "creatededicatedippool": {
    "Resources": [
     "dedicated-ip-pool"
    ]
   },
   "createdeliverabilitytestreport": {
    "Resources": [
     "identity"
    ]
   },
   "createemailidentity": {
    "Resources": [
     "identity"
    ]
   },
   "createemailidentitypolicy": {
    "Resources": [
     "identity"
    ]
   },
   "createemailtemplate": {
    "Resources": [
     "template"
    ]
   },
   "createexportjob": {},
   "createimportjob": {},
   "createingresspoint": {},
   "createmultiregionendpoint": {},
   "createreceiptfilter": {},
   "createreceiptrule": {},
   "createreceiptruleset": {},
   "createrelay": {},
   "createruleset": {},
   "createtemplate": {},
   "createtrafficpolicy": {},
   "deleteaddoninstance": {
    "Resources": [
     "addon-instance"
    ]
   },
   "deleteaddonsubscription": {
    "Resources": [
     "addon-subscription"
    ]
   },
   "deleteaddresslist": {
    "Resources": [
     "mailmanager-address-list"
    ]
   },
   "deletearchive": {
    "Resources": [
     "mailmanager-archive"
    ]
   },
   "deleteconfigurationset": {
    "Resources": [
     "configuration-set"
    ]
   },
   "deleteconfigurationseteventdestination": {
    "Resources": [
     "configuration-set"
    ]
   },
   "deleteconfigurationsettrackingoptions": {},
   "deletecontact": {
    "Resources": [
     "contact-list"
    ]
   },
   "deletecontactlist": {
    "Resources": [
     "contact-list"
    ]
   },
   "deletecustomverificationemailtemplate": {
    "Resources": [
     "custom-verification-email-template"
    ]
   },
   "deletededicatedippool": {
    "Resources": [
     "dedicated-ip-pool"
    ]
   },
   "deleteemailidentity": {
    "Resources": [
     "identity"
    ]
   },
   "deleteemailidentitypolicy": {
    "Resources": [
     "identity"
    ]
   },
   "deleteemailtemplate": {
    "Resources": [
     "template"
    ]
   },
   "deleteidentity": {},
   "deleteidentitypolicy": {},
   "deleteingresspoint": {
    "Resources": [
     "mailmanager-ingress-point"
    ]
   },
   "deletemultiregionendpoint": {
    "Resources": [
     "multi-region-endpoint"
    ]
   },
   "deletereceiptfilter": {},
   "deletereceiptrule": {},
   "deletereceiptruleset": {},
   "deleterelay": {
    "Resources": [
     "mailmanager-smtp-relay"
    ]
   },
   "deleteruleset": {
    "Resources": [
     "mailmanager-rule-set"
    ]
   },
   "deletesuppresseddestination": {},
   "deletetemplate": {},
   "deletetrafficpolicy": {
    "Resources": [
     "mailmanager-traffic-policy"
    ]
   },
   "deleteverifiedemailaddress": {},
   "deregistermemberfromaddresslist": {
    "Resources": [
     "mailmanager-address-list"
    ]
   },
   "describeactivereceiptruleset": {},
   "describeconfigurationset": {},
   "describereceiptrule": {},
   "describereceiptruleset": {},
   "getaccount": {},
   "getaccountsendingenabled": {},
   "getaddoninstance": {
    "Resources": [
     "addon-instance"
    ]
   },
   "getaddonsubscription": {
    "Resources": [
     "addon-subscription"
    ]
   },
   "getaddresslist": {
    "Resources": [
     "mailmanager-address-list"
    ]
   },
   "getaddresslistimportjob": {
    "Resources": [
     "mailmanager-address-list"
    ]
   },
   "getarchive": {
    "Resources": [
     "mailmanager-archive"
    ]
   },
   "getarchiveexport": {
    "Resources": [
     "mailmanager-archive"
    ]
   },
   "getarchivemessage": {
    "Resources": [
     "mailmanager-archive"
    ]
   },
   "getarchivemessagecontent": {
    "Resources": [
     "mailmanager-archive"
    ]
   },
   "getarchivesearch": {
    "Resources": [
     "mailmanager-archive"
    ]
   },
   "getarchivesearchresults": {
    "Resources": [
     "mailmanager-archive"
    ]
   },
   "getblacklistreports": {},
   "getconfigurationset": {
    "Resources": [
     "configuration-set"
    ]
   },
   "getconfigurationseteventdestinations": {
    "Resources": [
     "configuration-set"
    ]
   },
   "getcontact": {
    "Resources": [
     "contact-list"
    ]
   },
   "getcontactlist": {
    "Resources": [
     "contact-list"
    ]
   },
   "getcustomverificationemailtemplate": {
    "Resources": [
     "custom-verification-email-template"
    ]
   },
   "getdedicatedip": {},
   "getdedicatedippool": {
    "Resources": [
     "dedicated-ip-pool"
    ]
   },
   "getdedicatedips": {
    "Resources": [
     "dedicated-ip-pool"
    ]
   },
   "getdeliverabilitydashboardoptions": {},
   "getdeliverabilitytestreport": {
    "Resources": [
     "deliverability-test-report"
    ]
   },
   "getdomaindeliverabilitycampaign": {},
   "getdomainstatisticsreport": {
    "Resources": [
     "identity"
    ]
   },
   "getemailidentity": {
    "Resources": [
     "identity"
    ]
   },
   "getemailidentitypolicies": {
    "Resources": [
     "identity"
    ]
   },
   "getemailtemplate": {
    "Resources": [
     "template"
    ]
   },
   "getexportjob": {
    "Resources": [
     "export-job"
    ]
   },
   "getidentitydkimattributes": {},
   "getidentitymailfromdomainattributes": {},
   "getidentitynotificationattributes": {},
   "getidentitypolicies": {},
   "getidentityverificationattributes": {},
   "getimportjob": {
    "Resources": [
     "import-job"
    ]
   },
   "getingresspoint": {
    "Resources": [
     "mailmanager-ingress-point"
    ]
   },
   "getmemberofaddresslist": {
    "Resources": [
     "mailmanager-address-list"
    ]
   },
   "getmessageinsights": {},
   "getmultiregionendpoint": {
    "Resources": [
     "multi-region-endpoint"
    ]
   },
   "getrelay": {
    "Resources": [
     "mailmanager-smtp-relay"
    ]
   },
   "getruleset": {
    "Resources": [
     "mailmanager-rule-set"
    ]
   },
   "getsendquota": {},
   "getsendstatistics": {},
   "getsuppresseddestination": {},
   "gettemplate": {},
   "gettrafficpolicy": {
    "Resources": [
     "mailmanager-traffic-policy"
    ]
   },
   "listaddoninstances": {},
   "listaddonsubscriptions": {},
   "listaddresslistimportjobs": {
    "Resources": [
     "mailmanager-address-list"
    ]
   },
   "listaddresslists": {},
   "listarchiveexports": {},
   "listarchives": {},
   "listarchivesearches": {},
   "listconfigurationsets": {},
   "listcontactlists": {},
   "listcontacts": {
    "Resources": [
     "contact-list"
    ]
   },
   "listcustomverificationemailtemplates": {},
   "listdedicatedippools": {},
   "listdeliverabilitytestreports": {},
   "listdomaindeliverabilitycampaigns": {},
   "listemailidentities": {},
   "listemailtemplates": {},
   "listexportjobs": {},
   "listidentities": {},
   "listidentitypolicies": {},
   "listimportjobs": {},
   "listingresspoints": {},
   "listmembersofaddresslist": {
    "Resources": [
     "mailmanager-address-list"
    ]
   },
   "listmultiregionendpoints": {},
   "listreceiptfilters": {},
   "listreceiptrulesets": {},
   "listrecommendations": {
    "Resources": [
     "identity"
    ]
   },
   "listrelays": {},
   "listrulesets": {},
   "listsuppresseddestinations": {},
   "listtagsforresource": {
    "Resources": [
     "addon-instance",
     "addon-subscription",
     "configuration-set",
     "contact-list",
     "dedicated-ip-pool",
     "deliverability-test-report",
     "identity",
     "mailmanager-archive",
     "mailmanager-ingress-point",
     "mailmanager-rule-set",
     "mailmanager-smtp-relay",
     "mailmanager-traffic-policy"
    ]
   },
   "listtemplates": {},
   "listtrafficpolicies": {},
   "listverifiedemailaddresses": {},
   "putaccountdedicatedipwarmupattributes": {},
   "putaccountdetails": {},
   "putaccountsendingattributes": {},
   "putaccountsuppressionattributes": {},
   "putaccountvdmattributes": {},
   "putconfigurationsetarchivingoptions": {
    "Resources": [
     "configuration-set",
     "mailmanager-archive"
    ]
   },
   "putconfigurationsetdeliveryoptions": {
    "Resources": [
     "configuration-set",
     "dedicated-ip-pool"
    ]
   },
   "putconfigurationsetreputationoptions": {
    "Resources": [
     "configuration-set"
    ]
   },
   "putconfigurationsetsendingoptions": {
    "Resources": [
     "configuration-set"
    ]
   },
   "putconfigurationsetsuppressionoptions": {
    "Resources": [
     "configuration-set"
    ]
   },
   "putconfigurationsettrackingoptions": {
    "Resources": [
     "configuration-set"
    ]
   },
   "putconfigurationsetvdmoptions": {
    "Resources": [
     "configuration-set"
    ]
   },
   "putdedicatedipinpool": {
    "Resources": [
     "dedicated-ip-pool"
    ]
   },
   "putdedicatedippoolscalingattributes": {
    "Resources": [
     "dedicated-ip-pool"
    ]
   },
   "putdedicatedipwarmupattributes": {},
   "putdeliverabilitydashboardoption": {},
   "putemailidentityconfigurationsetattributes": {
    "Resources": [
     "configuration-set",
     "identity"
    ]
   },
   "putemailidentitydkimattributes": {
    "Resources": [
     "identity"
    ]
   },
   "putemailidentitydkimsigningattributes": {
    "Resources": [
     "identity"
    ]
   },
   "putemailidentityfeedbackattributes": {
    "Resources": [
     "identity"
    ]
   },
   "putemailidentitymailfromattributes": {
    "Resources": [
     "identity"
    ]
   },
   "putidentitypolicy": {},
   "putsuppresseddestination": {},
   "registermembertoaddresslist": {
    "Resources": [
     "mailmanager-address-list"
    ]
   },
   "reorderreceiptruleset": {},
   "replicateemailidentitydkimsigningkey": {
    "Resources": [
     "identity"
    ]
   },
   "sendbounce": {
    "Resources": [
     "identity"
    ]
   },
   "sendbulkemail": {
    "Resources": [
     "configuration-set",
     "identity",
     "template"
    ]
   },
   "sendbulktemplatedemail": {
    "Resources": [
     "configuration-set",
     "identity",
     "template"
    ]
   },
   "sendcustomverificationemail": {
    "Resources": [
     "custom-verification-email-template",
     "identity"
    ]
   },
   "sendemail": {
    "Resources": [
     "configuration-set",
     "identity",
     "template"
    ]
   },
   "sendrawemail": {
    "Resources": [
     "configuration-set",
     "identity"
    ]
   },
   "sendtemplatedemail": {
    "Resources": [
     "configuration-set",
     "identity",
     "template"
    ]
   },
   "setactivereceiptruleset": {},
   "setidentitydkimenabled": {},
   "setidentityfeedbackforwardingenabled": {},
   "setidentityheadersinnotificationsenabled": {},
   "setidentitymailfromdomain": {},
   "setidentitynotificationtopic": {},
   "setreceiptruleposition": {},
   "startaddresslistimportjob": {
    "Resources": [
     "mailmanager-address-list"
    ]
   },
   "startarchiveexport": {
    "Resources": [
     "mailmanager-archive"
    ]
   },
   "startarchivesearch": {
    "Resources": [
     "mailmanager-archive"
    ]
   },
   "stopaddresslistimportjob": {
    "Resources": [
     "mailmanager-address-list"
    ]
   },
   "stoparchiveexport": {
    "Resources": [
     "mailmanager-archive"
    ]
   },
   "stoparchivesearch": {
    "Resources": [
     "mailmanager-archive"
    ]
   },
   "tagresource": {
    "Resources": [
     "addon-instance",
     "addon-subscription",
     "configuration-set",
     "contact-list",
     "dedicated-ip-pool",
     "deliverability-test-report",
     "identity",
     "mailmanager-address-list",
     "mailmanager-archive",
     "mailmanager-ingress-point",
     "mailmanager-rule-set",
     "mailmanager-smtp-relay",
     "mailmanager-traffic-policy"
    ]
   },
   "testrenderemailtemplate": {
    "Resources": [
     "template"
    ]
   },
   "testrendertemplate": {},
   "untagresource": {
    "Resources": [
     "addon-instance",
     "addon-subscription",
     "configuration-set",
     "contact-list",
     "dedicated-ip-pool",
     "deliverability-test-report",
     "identity",
     "mailmanager-address-list",
     "mailmanager-archive",
     "mailmanager-ingress-point",
     "mailmanager-rule-set",
     "mailmanager-smtp-relay",
     "mailmanager-traffic-policy"
    ]
   },
   "updateaccountsendingenabled": {},
   "updatearchive": {
    "Resources": [
     "mailmanager-archive"
    ]
   },
   "updateconfigurationseteventdestination": {
    "Resources": [
     "configuration-set"
    ]
   },
   "updateconfigurationsetreputationmetricsenabled": {},
   "updateconfigurationsetsendingenabled": {},
   "updateconfigurationsettrackingoptions": {},
   "updatecontact": {
    "Resources": [
     "contact-list"
    ]
   },
   "updatecontactlist": {
    "Resources": [
     "contact-list"
    ]
   },
   "updatecustomverificationemailtemplate": {
    "Resources": [
     "custom-verification-email-template"
    ]
   },
   "updateemailidentitypolicy": {
    "Resources": [
     "identity"
    ]
   },
   "updateemailtemplate": {
    "Resources": [
     "template"
    ]
   },
   "updateingresspoint": {
    "Resources": [
     "mailmanager-ingress-point"
    ]
   },
   "updatereceiptrule": {},
   "updaterelay": {
    "Resources": [
     "mailmanager-smtp-relay"
    ]
   },
   "updateruleset": {
    "Resources": [
     "mailmanager-rule-set"
    ]
   },
   "updatetemplate": {},
   "updatetrafficpolicy": {
    "Resources": [
     "mailmanager-traffic-policy"
    ]
   },
   "verifydomaindkim": {},
   "verifydomainidentity": {},
   "verifyemailaddress": {},
   "verifyemailidentity": {}
  },
  "Resources": {
   "addon-instance": {
    "ARNFormats": [
     "arn:${Partition}:ses:${Region}:${Account}:addon-instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "addon-subscription": {
    "ARNFormats": [
     "arn:${Partition}:ses:${Region}:${Account}:addon-subscription/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "configuration-set": {
    "ARNFormats": [
     "arn:${Partition}:ses:${Region}:${Account}:configuration-set/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "contact-list": {
    "ARNFormats": [
     "arn:${Partition}:ses:${Region}:${Account}:contact-list/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "custom-verification-email-template": {
    "ARNFormats": [
     "arn:${Partition}:ses:${Region}:${Account}:custom-verification-email-template/.*"
    ]
   },
   "dedicated-ip-pool": {
    "ARNFormats": [
     "arn:${Partition}:ses:${Region}:${Account}:dedicated-ip-pool/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "deliverability-test-report": {
    "ARNFormats": [
     "arn:${Partition}:ses:${Region}:${Account}:deliverability-test-report/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "export-job": {
    "ARNFormats": [
     "arn:${Partition}:ses:${Region}:${Account}:export-job/.*"
    ]
   },
   "identity": {
    "ARNFormats": [
     "arn:${Partition}:ses:${Region}:${Account}:identity/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "import-job": {
    "ARNFormats": [
     "arn:${Partition}:ses:${Region}:${Account}:import-job/.*"
    ]
   },
   "mailmanager-address-list": {
    "ARNFormats": [
     "arn:${Partition}:ses:${Region}:${Account}:mailmanager-address-list/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "mailmanager-archive": {
    "ARNFormats": [
     "arn:${Partition}:ses:${Region}:${Account}:mailmanager-archive/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "mailmanager-ingress-point": {
    "ARNFormats": [
     "arn:${Partition}:ses:${Region}:${Account}:mailmanager-ingress-point/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "ses:MailManagerIngressPointType"
    ]
   },
   "mailmanager-rule-set": {
    "ARNFormats": [
     "arn:${Partition}:ses:${Region}:${Account}:mailmanager-rule-set/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "mailmanager-smtp-relay": {
    "ARNFormats": [
     "arn:${Partition}:ses:${Region}:${Account}:mailmanager-smtp-relay/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "mailmanager-traffic-policy": {
    "ARNFormats": [
     "arn:${Partition}:ses:${Region}:${Account}:mailmanager-traffic-policy/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "multi-region-endpoint": {
    "ARNFormats": [
     "arn:${Partition}:ses:${Region}:${Account}:multi-region-endpoint/.*"
    ]
   },
   "template": {
    "ARNFormats": [
     "arn:${Partition}:ses:${Region}:${Account}:template/.*"
    ]
   }
  }
 },
 "shield": {
  "Actions": {
   "associatedrtlogbucket": {},
   "associatedrtrole": {},
   "associatehealthcheck": {
    "Resources": [
     "protection"
    ]
   },
   "associateproactiveengagementdetails": {},
   "createprotection": {},
   "createprotectiongroup": {},
   "createsubscription": {},
   "deleteprotection": {
    "Resources": [
     "protection"
    ]
   },
   "deleteprotectiongroup": {
    "Resources": [
     "protection-group"
    ]
   },
   "deletesubscription": {},
   "describeattack": {
    "Resources": [
     "attack"
    ]
   },
   "describeattackstatistics": {},
   "describedrtaccess": {},
   "describeemergencycontactsettings": {},
   "describeprotection": {
    "Resources": [
     "protection"
    ]
   },
   "describeprotectiongroup": {
    "Resources": [
     "protection-group"
    ]
   },
   "describesubscription": {},
   "disableapplicationlayerautomaticresponse": {},
   "disableproactiveengagement": {},
   "disassociatedrtlogbucket": {},
   "disassociatedrtrole": {},
   "disassociatehealthcheck": {
    "Resources": [
     "protection"
    ]
   },
   "enableapplicationlayerautomaticresponse": {},
   "enableproactiveengagement": {},
   "getsubscriptionstate": {},
   "listattacks": {},
   "listprotectiongroups": {},
   "listprotections": {},
   "listresourcesinprotectiongroup": {
    "Resources": [
     "protection-group"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "protection",
     "protection-group"
    ]
   },
   "tagresource": {
    "Resources": [
     "protection",
     "protection-group"
    ]
   },
   "untagresource": {
    "Resources": [
     "protection",
     "protection-group"
    ]
   },
   "updateapplicationlayerautomaticresponse": {},
   "updateemergencycontactsettings": {},
   "updateprotectiongroup": {
    "Resources": [
     "protection-group"
    ]
   },
   "updatesubscription": {}
  },
  "Resources": {
   "attack": {
    "ARNFormats": [
     "arn:${Partition}:shield::${Account}:attack/.*"
    ]
   },
   "protection": {
    "ARNFormats": [
     "arn:${Partition}:shield::${Account}:protection/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "protection-group": {
    "ARNFormats": [
     "arn:${Partition}:shield::${Account}:protection-group/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "signer": {
  "Actions": {
   "addprofilepermission": {
    "Resources": [
     "signing-profile"
    ]
   },
   "cancelsigningprofile": {
    "Resources": [
     "signing-profile"
    ]
   },
   "describesigningjob": {
    "Resources": [
     "signing-job"
    ]
   },
   "getrevocationstatus": {
    "Resources": [
     "signing-job",
     "signing-profile"
    ]
   },
   "getsigningplatform": {},
   "getsigningprofile": {
    "Resources": [
     "signing-profile"
    ]
   },
   "listprofilepermissions": {
    "Resources": [
     "signing-profile"
    ]
   },
   "listsigningjobs": {},
   "listsigningplatforms": {},
   "listsigningprofiles": {},
   "listtagsforresource": {
    "Resources": [
     "signing-profile"
    ]
   },
   "putsigningprofile": {},
   "removeprofilepermission": {
    "Resources": [
     "signing-profile"
    ]
   },
   "revokesignature": {
    "Resources": [
     "signing-job"
    ]
   },
   "revokesigningprofile": {
    "Resources": [
     "signing-profile"
    ]
   },
   "signpayload": {
    "Resources": [
     "signing-profile"
    ]
   },
   "startsigningjob": {
    "Resources": [
     "signing-profile"
    ]
   },
   "tagresource": {
    "Resources": [
     "signing-profile"
    ]
   },
   "untagresource": {
    "Resources": [
     "signing-profile"
    ]
   }
  },
  "Resources": {
   "signing-job": {
    "ARNFormats": [
     "arn:${Partition}:signer:${Region}:${Account}:/signing-jobs/.*"
    ]
   },
   "signing-profile": {
    "ARNFormats": [
     "arn:${Partition}:signer:${Region}:${Account}:/signing-profiles/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "signin": {
  "Actions": {
   "createtrustedidentitypropagationapplicationforconsole": {},
   "listtrustedidentitypropagationapplicationsforconsole": {}
  },
  "Resources": {}
 },
 "simspaceweaver": {
  "Actions": {
   "createsnapshot": {
    "Resources": [
     "Simulation"
    ]
   },
   "deleteapp": {
    "Resources": [
     "Simulation"
    ]
   },
   "deletesimulation": {
    "Resources": [
     "Simulation"
    ]
   },
   "describeapp": {
    "Resources": [
     "Simulation"
    ]
   },
   "describesimulation": {
    "Resources": [
     "Simulation"
    ]
   },
   "listapps": {
    "Resources": [
     "Simulation"
    ]
   },
   "listsimulations": {},
   "listtagsforresource": {},
   "startapp": {
    "Resources": [
     "Simulation"
    ]
   },
   "startclock": {
    "Resources": [
     "Simulation"
    ]
   },
   "startsimulation": {},
   "stopapp": {
    "Resources": [
     "Simulation"
    ]
   },
   "stopclock": {
    "Resources": [
     "Simulation"
    ]
   },
   "stopsimulation": {
    "Resources": [
     "Simulation"
    ]
   },
   "tagresource": {
    "Resources": [
     "Simulation"
    ]
   },
   "untagresource": {
    "Resources": [
     "Simulation"
    ]
   }
  },
  "Resources": {
   "simulation": {
    "ARNFormats": [
     "arn:${Partition}:simspaceweaver:${Region}:${Account}:simulation/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "sms": {
  "Actions": {
   "createapp": {},
   "createreplicationjob": {},
   "deleteapp": {},
   "deleteapplaunchconfiguration": {},
   "deleteappreplicationconfiguration": {},
   "deleteappvalidationconfiguration": {},
   "deletereplicationjob": {},
   "deleteservercatalog": {},
   "disassociateconnector": {},
   "generatechangeset": {},
   "generatetemplate": {},
   "getapp": {},
   "getapplaunchconfiguration": {},
   "getappreplicationconfiguration": {},
   "getappvalidationconfiguration": {},
   "getappvalidationoutput": {},
   "getconnectors": {},
   "getmessages": {},
   "getreplicationjobs": {},
   "getreplicationruns": {},
   "getservers": {},
   "importappcatalog": {},
   "importservercatalog": {},
   "launchapp": {},
   "listapps": {},
   "notifyappvalidationoutput": {},
   "putapplaunchconfiguration": {},
   "putappreplicationconfiguration": {},
   "putappvalidationconfiguration": {},
   "sendmessage": {},
   "startappreplication": {},
   "startondemandappreplication": {},
   "startondemandreplicationrun": {},
   "stopappreplication": {},
   "terminateapp": {},
   "updateapp": {},
   "updatereplicationjob": {}
  },
  "Resources": {}
 },
 "sms-voice": {
  "Actions": {
   "associateoriginationidentity": {
    "Resources": [
     "PhoneNumber",
     "Pool",
     "SenderId"
    ]
   },
   "associateprotectconfiguration": {
    "Resources": [
     "ConfigurationSet",
     "ProtectConfiguration"
    ]
   },
   "createconfigurationset": {},
   "createconfigurationseteventdestination": {},
   "createeventdestination": {
    "Resources": [
     "ConfigurationSet"
    ]
   },
   "createoptoutlist": {},
   "createpool": {
    "Resources": [
     "PhoneNumber",
     "SenderId"
    ]
   },
   "createprotectconfiguration": {},
   "createregistration": {},
   "createregistrationassociation": {
    "Resources": [
     "PhoneNumber",
     "Registration"
    ]
   },
   "createregistrationattachment": {},
   "createregistrationversion": {
    "Resources": [
     "Registration"
    ]
   },
   "createverifieddestinationnumber": {},
   "deleteaccountdefaultprotectconfiguration": {},
   "deleteconfigurationset": {
    "Resources": [
     "ConfigurationSet"
    ]
   },
   "deleteconfigurationseteventdestination": {},
   "deletedefaultmessagetype": {
    "Resources": [
     "ConfigurationSet"
    ]
   },
   "deletedefaultsenderid": {
    "Resources": [
     "ConfigurationSet"
    ]
   },
   "deleteeventdestination": {
    "Resources": [
     "ConfigurationSet"
    ]
   },
   "deletekeyword": {
    "Resources": [
     "PhoneNumber",
     "Pool"
    ]
   },
   "deletemediamessagespendlimitoverride": {},
   "deleteoptedoutnumber": {
    "Resources": [
     "OptOutList"
    ]
   },
   "deleteoptoutlist": {
    "Resources": [
     "OptOutList"
    ]
   },
   "deletepool": {
    "Resources": [
     "Pool"
    ]
   },
   "deleteprotectconfiguration": {
    "Resources": [
     "ProtectConfiguration"
    ]
   },
   "deleteprotectconfigurationrulesetnumberoverride": {
    "Resources": [
     "ProtectConfiguration"
    ]
   },
   "deleteregistration": {
    "Resources": [
     "Registration"
    ]
   },
   "deleteregistrationattachment": {
    "Resources": [
     "RegistrationAttachment"
    ]
   },
   "deleteregistrationfieldvalue": {
    "Resources": [
     "Registration"
    ]
   },
   "deleteresourcepolicy": {
    "Resources": [
     "OptOutList",
     "PhoneNumber",
     "Pool",
     "SenderId"
    ]
   },
   "deletetextmessagespendlimitoverride": {},
   "deleteverifieddestinationnumber": {
    "Resources": [
     "VerifiedDestinationNumber"
    ]
   },
   "deletevoicemessagespendlimitoverride": {},
   "describeaccountattributes": {},
   "describeaccountlimits": {},
   "describeconfigurationsets": {
    "Resources": [
     "ConfigurationSet"
    ]
   },
   "describekeywords": {
    "Resources": [
     "PhoneNumber",
     "Pool"
    ]
   },
   "describeoptedoutnumbers": {
    "Resources": [
     "OptOutList"
    ]
   },
   "describeoptoutlists": {
    "Resources": [
     "OptOutList"
    ]
   },
   "describephonenumbers": {
    "Resources": [
     "PhoneNumber"
    ]
   },
   "describepools": {
    "Resources": [
     "Pool"
    ]
   },
   "describeprotectconfigurations": {
    "Resources": [
     "ProtectConfiguration"
    ]
   },
   "describeregistrationattachments": {
    "Resources": [
     "RegistrationAttachment"
    ]
   },
   "describeregistrationfielddefinitions": {},
   "describeregistrationfieldvalues": {
    "Resources": [
     "Registration"
    ]
   },
   "describeregistrations": {
    "Resources": [
     "Registration"
    ]
   },
   "describeregistrationsectiondefinitions": {},
   "describeregistrationtypedefinitions": {},
   "describeregistrationversions": {
    "Resources": [
     "Registration"
    ]
   },
   "describesenderids": {
    "Resources": [
     "SenderId"
    ]
   },
   "describespendlimits": {},
   "describeverifieddestinationnumbers": {
    "Resources": [
     "VerifiedDestinationNumber"
    ]
   },
   "disassociateoriginationidentity": {
    "Resources": [
     "PhoneNumber",
     "Pool",
     "SenderId"
    ]
   },
   "disassociateprotectconfiguration": {
    "Resources": [
     "ConfigurationSet",
     "ProtectConfiguration"
    ]
   },
   "discardregistrationversion": {
    "Resources": [
     "Registration"
    ]
   },
   "getconfigurationseteventdestinations": {},
   "getprotectconfigurationcountryruleset": {
    "Resources": [
     "ProtectConfiguration"
    ]
   },
   "getresourcepolicy": {
    "Resources": [
     "OptOutList",
     "PhoneNumber",
     "Pool",
     "SenderId"
    ]
   },
   "listconfigurationsets": {},
   "listpooloriginationidentities": {
    "Resources": [
     "Pool"
    ]
   },
   "listprotectconfigurationrulesetnumberoverrides": {
    "Resources": [
     "ProtectConfiguration"
    ]
   },
   "listregistrationassociations": {
    "Resources": [
     "Registration"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "ConfigurationSet",
     "OptOutList",
     "PhoneNumber",
     "Pool",
     "ProtectConfiguration",
     "Registration",
     "RegistrationAttachment",
     "SenderId",
     "VerifiedDestinationNumber"
    ]
   },
   "putkeyword": {
    "Resources": [
     "PhoneNumber",
     "Pool"
    ]
   },
   "putmessagefeedback": {
    "Resources": [
     "Message"
    ]
   },
   "putoptedoutnumber": {
    "Resources": [
     "OptOutList"
    ]
   },
   "putprotectconfigurationrulesetnumberoverride": {
    "Resources": [
     "ProtectConfiguration"
    ]
   },
   "putregistrationfieldvalue": {
    "Resources": [
     "Registration"
    ]
   },
   "putresourcepolicy": {
    "Resources": [
     "OptOutList",
     "PhoneNumber",
     "Pool",
     "SenderId"
    ]
   },
   "releasephonenumber": {
    "Resources": [
     "PhoneNumber"
    ]
   },
   "releasesenderid": {
    "Resources": [
     "SenderId"
    ]
   },
   "requestphonenumber": {
    "Resources": [
     "Pool"
    ]
   },
   "requestsenderid": {},
   "senddestinationnumberverificationcode": {
    "Resources": [
     "PhoneNumber",
     "Pool",
     "SenderId"
    ]
   },
   "sendmediamessage": {
    "Resources": [
     "PhoneNumber",
     "Pool"
    ]
   },
   "sendtextmessage": {
    "Resources": [
     "PhoneNumber",
     "Pool",
     "SenderId"
    ]
   },
   "sendvoicemessage": {
    "Resources": [
     "PhoneNumber",
     "Pool"
    ]
   },
   "setaccountdefaultprotectconfiguration": {
    "Resources": [
     "ProtectConfiguration"
    ]
   },
   "setdefaultmessagefeedbackenabled": {
    "Resources": [
     "ConfigurationSet"
    ]
   },
   "setdefaultmessagetype": {
    "Resources": [
     "ConfigurationSet"
    ]
   },
   "setdefaultsenderid": {
    "Resources": [
     "ConfigurationSet"
    ]
   },
   "setmediamessagespendlimitoverride": {},
   "settextmessagespendlimitoverride": {},
   "setvoicemessagespendlimitoverride": {},
   "submitregistrationversion": {
    "Resources": [
     "Registration"
    ]
   },
   "tagresource": {
    "Resources": [
     "ConfigurationSet",
     "OptOutList",
     "PhoneNumber",
     "Pool",
     "ProtectConfiguration",
     "Registration",
     "RegistrationAttachment",
     "SenderId",
     "VerifiedDestinationNumber"
    ]
   },
   "untagresource": {
    "Resources": [
     "ConfigurationSet",
     "OptOutList",
     "PhoneNumber",
     "Pool",
     "ProtectConfiguration",
     "Registration",
     "RegistrationAttachment",
     "SenderId",
     "VerifiedDestinationNumber"
    ]
   },
   "updateconfigurationseteventdestination": {},
   "updateeventdestination": {
    "Resources": [
     "ConfigurationSet"
    ]
   },
   "updatephonenumber": {
    "Resources": [
     "PhoneNumber"
    ]
   },
   "updatepool": {
    "Resources": [
     "Pool"
    ]
   },
   "updateprotectconfiguration": {
    "Resources": [
     "ProtectConfiguration"
    ]
   },
   "updateprotectconfigurationcountryruleset": {
    "Resources": [
     "ProtectConfiguration"
    ]
   },
   "updatesenderid": {
    "Resources": [
     "SenderId"
    ]
   },
   "verifydestinationnumber": {
    "Resources": [
     "VerifiedDestinationNumber"
    ]
   }
  },
  "Resources": {
   "configurationset": {
    "ARNFormats": [
     "arn:${Partition}:sms-voice:${Region}:${Account}:configuration-set/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "message": {
    "ARNFormats": [
     "arn:${Partition}:sms-voice:${Region}:${Account}:message/.*"
    ]
   },
   "optoutlist": {
    "ARNFormats": [
     "arn:${Partition}:sms-voice:${Region}:${Account}:opt-out-list/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "phonenumber": {
    "ARNFormats": [
     "arn:${Partition}:sms-voice:${Region}:${Account}:phone-number/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "pool": {
    "ARNFormats": [
     "arn:${Partition}:sms-voice:${Region}:${Account}:pool/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "protectconfiguration": {
    "ARNFormats": [
     "arn:${Partition}:sms-voice:${Region}:${Account}:protect-configuration/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "registration": {
    "ARNFormats": [
     "arn:${Partition}:sms-voice:${Region}:${Account}:registration/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "registrationattachment": {
    "ARNFormats": [
     "arn:${Partition}:sms-voice:${Region}:${Account}:registration-attachment/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "senderid": {
    "ARNFormats": [
     "arn:${Partition}:sms-voice:${Region}:${Account}:sender-id/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "verifieddestinationnumber": {
    "ARNFormats": [
     "arn:${Partition}:sms-voice:${Region}:${Account}:verified-destination-number/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "snow-device-management": {
  "Actions": {
   "canceltask": {
    "Resources": [
     "task"
    ]
   },
   "createtask": {},
   "describedevice": {
    "Resources": [
     "managed-device"
    ]
   },
   "describedeviceec2instances": {
    "Resources": [
     "managed-device"
    ]
   },
   "describeexecution": {},
   "describetask": {
    "Resources": [
     "task"
    ]
   },
   "listdeviceresources": {
    "Resources": [
     "managed-device"
    ]
   },
   "listdevices": {},
   "listexecutions": {},
   "listtagsforresource": {},
   "listtasks": {},
   "tagresource": {
    "Resources": [
     "managed-device",
     "task"
    ]
   },
   "untagresource": {
    "Resources": [
     "managed-device",
     "task"
    ]
   }
  },
  "Resources": {
   "managed-device": {
    "ARNFormats": [
     "arn:${Partition}:snow-device-management:${Region}:${Account}:managed-device/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "task": {
    "ARNFormats": [
     "arn:${Partition}:snow-device-management:${Region}:${Account}:task/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "snowball": {
  "Actions": {
   "cancelcluster": {},
   "canceljob": {},
   "createaddress": {},
   "createcluster": {},
   "createjob": {},
   "createlongtermpricing": {},
   "createreturnshippinglabel": {},
   "describeaddress": {},
   "describeaddresses": {},
   "describecluster": {},
   "describejob": {},
   "describereturnshippinglabel": {},
   "getjobmanifest": {},
   "getjobunlockcode": {},
   "getsnowballusage": {},
   "getsoftwareupdates": {},
   "listclusterjobs": {},
   "listclusters": {},
   "listcompatibleimages": {},
   "listjobs": {},
   "listlongtermpricing": {},
   "listpickuplocations": {},
   "listserviceversions": {},
   "updatecluster": {},
   "updatejob": {},
   "updatejobshipmentstate": {},
   "updatelongtermpricing": {}
  },
  "Resources": {}
 },
 "sns": {
  "Actions": {
   "addpermission": {
    "Resources": [
     "topic"
    ]
   },
   "checkifphonenumberisoptedout": {},
   "confirmsubscription": {
    "Resources": [
     "topic"
    ]
   },
   "createplatformapplication": {},
   "createplatformendpoint": {},
   "createsmssandboxphonenumber": {},
   "createtopic": {
    "Resources": [
     "topic"
    ]
   },
   "deleteendpoint": {},
   "deleteplatformapplication": {},
   "deletesmssandboxphonenumber": {},
   "deletetopic": {
    "Resources": [
     "topic"
    ]
   },
   "getdataprotectionpolicy": {
    "Resources": [
     "topic"
    ]
   },
   "getendpointattributes": {},
   "getplatformapplicationattributes": {},
   "getsmsattributes": {},
   "getsmssandboxaccountstatus": {},
   "getsubscriptionattributes": {},
   "gettopicattributes": {
    "Resources": [
     "topic"
    ]
   },
   "listendpointsbyplatformapplication": {},
   "listoriginationnumbers": {},
   "listphonenumbersoptedout": {},
   "listplatformapplications": {},
   "listsmssandboxphonenumbers": {},
   "listsubscriptions": {},
   "listsubscriptionsbytopic": {
    "Resources": [
     "topic"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "topic"
    ]
   },
   "listtopics": {},
   "optinphonenumber": {},
   "publish": {
    "Resources": [
     "topic"
    ]
   },
   "putdataprotectionpolicy": {
    "Resources": [
     "topic"
    ]
   },
   "removepermission": {
    "Resources": [
     "topic"
    ]
   },
   "setendpointattributes": {},
   "setplatformapplicationattributes": {},
   "setsmsattributes": {},
   "setsubscriptionattributes": {},
   "settopicattributes": {
    "Resources": [
     "topic"
    ]
   },
   "subscribe": {
    "Resources": [
     "topic"
    ]
   },
   "tagresource": {
    "Resources": [
     "topic"
    ]
   },
   "unsubscribe": {},
   "untagresource": {
    "Resources": [
     "topic"
    ]
   },
   "verifysmssandboxphonenumber": {}
  },
  "Resources": {
   "topic": {
    "ARNFormats": [
     "arn:${Partition}:sns:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "social-messaging": {
  "Actions": {
   "associatewhatsappbusinessaccount": {},
   "deletewhatsappmessagemedia": {
    "Resources": [
     "phone-number-id"
    ]
   },
   "disassociatewhatsappbusinessaccount": {
    "Resources": [
     "waba"
    ]
   },
   "getlinkedwhatsappbusinessaccount": {
    "Resources": [
     "waba"
    ]
   },
   "getlinkedwhatsappbusinessaccountphonenumber": {
    "Resources": [
     "phone-number-id"
    ]
   },
   "getwhatsappmessagemedia": {
    "Resources": [
     "phone-number-id"
    ]
   },
   "listlinkedwhatsappbusinessaccounts": {},
   "listtagsforresource": {
    "Resources": [
     "phone-number-id",
     "waba"
    ]
   },
   "postwhatsappmessagemedia": {
    "Resources": [
     "phone-number-id"
    ]
   },
   "putwhatsappbusinessaccounteventdestinations": {
    "Resources": [
     "waba"
    ]
   },
   "sendwhatsappmessage": {
    "Resources": [
     "phone-number-id"
    ]
   },
   "tagresource": {
    "Resources": [
     "phone-number-id",
     "waba"
    ]
   },
   "untagresource": {
    "Resources": [
     "phone-number-id",
     "waba"
    ]
   }
  },
  "Resources": {
   "phone-number-id": {
    "ARNFormats": [
     "arn:${Partition}:social-messaging:${Region}:${Account}:phone-number-id/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "waba": {
    "ARNFormats": [
     "arn:${Partition}:social-messaging:${Region}:${Account}:waba/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "sqlworkbench": {
  "Actions": {
   "associateconnectionwithchart": {
    "Resources": [
     "chart",
     "connection"
    ]
   },
   "associateconnectionwithtab": {
    "Resources": [
     "connection"
    ]
   },
   "associatenotebookwithtab": {
    "Resources": [
     "notebook"
    ]
   },
   "associatequerywithtab": {
    "Resources": [
     "query"
    ]
   },
   "batchdeletefolder": {},
   "batchgetnotebookcell": {
    "Resources": [
     "notebook"
    ]
   },
   "createaccount": {},
   "createchart": {
    "Resources": [
     "chart"
    ]
   },
   "createconnection": {
    "Resources": [
     "connection"
    ]
   },
   "createfolder": {},
   "createnotebook": {
    "Resources": [
     "notebook"
    ]
   },
   "createnotebookcell": {
    "Resources": [
     "notebook"
    ]
   },
   "createnotebookfromversion": {
    "Resources": [
     "notebook"
    ]
   },
   "createnotebookversion": {
    "Resources": [
     "notebook"
    ]
   },
   "createsavedquery": {
    "Resources": [
     "query"
    ]
   },
   "deletechart": {
    "Resources": [
     "chart"
    ]
   },
   "deleteconnection": {
    "Resources": [
     "connection"
    ]
   },
   "deletenotebook": {
    "Resources": [
     "notebook"
    ]
   },
   "deletenotebookcell": {
    "Resources": [
     "notebook"
    ]
   },
   "deletenotebookversion": {
    "Resources": [
     "notebook"
    ]
   },
   "deleteqcustomcontext": {},
   "deletesavedquery": {
    "Resources": [
     "query"
    ]
   },
   "deletesqlgenerationcontext": {},
   "deletetab": {},
   "driverexecute": {
    "Resources": [
     "connection"
    ]
   },
   "duplicatenotebook": {
    "Resources": [
     "notebook"
    ]
   },
   "exportnotebook": {
    "Resources": [
     "notebook"
    ]
   },
   "generatesession": {},
   "getaccountinfo": {},
   "getaccountsettings": {},
   "getautocompletionmetadata": {},
   "getautocompletionresource": {},
   "getchart": {
    "Resources": [
     "chart"
    ]
   },
   "getconnection": {
    "Resources": [
     "connection"
    ]
   },
   "getnotebook": {
    "Resources": [
     "notebook"
    ]
   },
   "getnotebookversion": {
    "Resources": [
     "notebook"
    ]
   },
   "getqcustomcontext": {},
   "getqsqlpromptquotas": {},
   "getqsqlrecommendations": {},
   "getqueryexecutionhistory": {},
   "getsavedquery": {
    "Resources": [
     "query"
    ]
   },
   "getschemainference": {},
   "getsqlgenerationcontext": {},
   "getsqlrecommendations": {},
   "getuserinfo": {},
   "getuserworkspacesettings": {},
   "importnotebook": {
    "Resources": [
     "notebook"
    ]
   },
   "listconnections": {},
   "listdatabases": {},
   "listfiles": {},
   "listnotebooks": {},
   "listnotebookversions": {
    "Resources": [
     "notebook"
    ]
   },
   "listqueryexecutionhistory": {},
   "listredshiftclusters": {},
   "listsampledatabases": {},
   "listsavedqueryversions": {
    "Resources": [
     "query"
    ]
   },
   "listtabs": {},
   "listtaggedresources": {},
   "listtagsforresource": {
    "Resources": [
     "chart",
     "connection",
     "notebook",
     "query"
    ]
   },
   "passaccountsettings": {},
   "putqcustomcontext": {},
   "putsqlgenerationcontext": {},
   "puttab": {},
   "putuserworkspacesettings": {},
   "restorenotebookversion": {
    "Resources": [
     "notebook"
    ]
   },
   "tagresource": {
    "Resources": [
     "chart",
     "connection",
     "notebook",
     "query"
    ]
   },
   "untagresource": {
    "Resources": [
     "chart",
     "connection",
     "notebook",
     "query"
    ]
   },
   "updateaccountconnectionsettings": {},
   "updateaccountexportsettings": {},
   "updateaccountgeneralsettings": {},
   "updateaccountqsqlsettings": {},
   "updatechart": {
    "Resources": [
     "chart"
    ]
   },
   "updateconnection": {
    "Resources": [
     "connection"
    ]
   },
   "updatefilefolder": {
    "Resources": [
     "chart",
     "query"
    ]
   },
   "updatefolder": {},
   "updatenotebook": {
    "Resources": [
     "notebook"
    ]
   },
   "updatenotebookcellcontent": {
    "Resources": [
     "notebook"
    ]
   },
   "updatenotebookcelllayout": {
    "Resources": [
     "notebook"
    ]
   },
   "updatesavedquery": {
    "Resources": [
     "query"
    ]
   }
  },
  "Resources": {
   "chart": {
    "ARNFormats": [
     "arn:${Partition}:sqlworkbench:${Region}:${Account}:chart/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "connection": {
    "ARNFormats": [
     "arn:${Partition}:sqlworkbench:${Region}:${Account}:connection/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "notebook": {
    "ARNFormats": [
     "arn:${Partition}:sqlworkbench:${Region}:${Account}:notebook/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "query": {
    "ARNFormats": [
     "arn:${Partition}:sqlworkbench:${Region}:${Account}:query/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "sqs": {
  "Actions": {
   "addpermission": {
    "Resources": [
     "queue"
    ]
   },
   "cancelmessagemovetask": {
    "Resources": [
     "queue"
    ]
   },
   "changemessagevisibility": {
    "Resources": [
     "queue"
    ]
   },
   "createqueue": {
    "Resources": [
     "queue"
    ]
   },
   "deletemessage": {
    "Resources": [
     "queue"
    ]
   },
   "deletequeue": {
    "Resources": [
     "queue"
    ]
   },
   "getqueueattributes": {
    "Resources": [
     "queue"
    ]
   },
   "getqueueurl": {
    "Resources": [
     "queue"
    ]
   },
   "listdeadlettersourcequeues": {
    "Resources": [
     "queue"
    ]
   },
   "listmessagemovetasks": {
    "Resources": [
     "queue"
    ]
   },
   "listqueues": {},
   "listqueuetags": {
    "Resources": [
     "queue"
    ]
   },
   "purgequeue": {
    "Resources": [
     "queue"
    ]
   },
   "receivemessage": {
    "Resources": [
     "queue"
    ]
   },
   "removepermission": {
    "Resources": [
     "queue"
    ]
   },
   "sendmessage": {
    "Resources": [
     "queue"
    ]
   },
   "setqueueattributes": {
    "Resources": [
     "queue"
    ]
   },
   "startmessagemovetask": {
    "Resources": [
     "queue"
    ]
   },
   "tagqueue": {
    "Resources": [
     "queue"
    ]
   },
   "untagqueue": {
    "Resources": [
     "queue"
    ]
   }
  },
  "Resources": {
   "queue": {
    "ARNFormats": [
     "arn:${Partition}:sqs:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "ssm": {
  "Actions": {
   "addtagstoresource": {
    "Resources": [
     "association",
     "automation-execution",
     "document",
     "instance",
     "maintenancewindow",
     "managed-instance",
     "opsitem",
     "opsmetadata",
     "parameter",
     "patchbaseline",
     "task"
    ]
   },
   "associateopsitemrelateditem": {
    "Resources": [
     "opsitem"
    ]
   },
   "cancelcommand": {},
   "cancelmaintenancewindowexecution": {
    "Resources": [
     "maintenancewindow"
    ]
   },
   "createactivation": {},
   "createassociation": {
    "Resources": [
     "association",
     "document",
     "instance",
     "managed-instance"
    ]
   },
   "createassociationbatch": {
    "Resources": [
     "document",
     "instance",
     "managed-instance"
    ]
   },
   "createdocument": {
    "Resources": [
     "document"
    ]
   },
   "createmaintenancewindow": {},
   "createopsitem": {},
   "createopsmetadata": {},
   "createpatchbaseline": {},
   "createresourcedatasync": {
    "Resources": [
     "resourcedatasync"
    ]
   },
   "deleteactivation": {},
   "deleteassociation": {
    "Resources": [
     "association",
     "document",
     "instance",
     "managed-instance"
    ]
   },
   "deletedocument": {
    "Resources": [
     "document"
    ]
   },
   "deleteinventory": {},
   "deletemaintenancewindow": {
    "Resources": [
     "maintenancewindow"
    ]
   },
   "deleteopsitem": {
    "Resources": [
     "opsitem"
    ]
   },
   "deleteopsmetadata": {
    "Resources": [
     "opsmetadata"
    ]
   },
   "deleteparameter": {
    "Resources": [
     "parameter"
    ]
   },
   "deleteparameters": {
    "Resources": [
     "parameter"
    ]
   },
   "deletepatchbaseline": {
    "Resources": [
     "patchbaseline"
    ]
   },
   "deleteresourcedatasync": {
    "Resources": [
     "resourcedatasync"
    ]
   },
   "deleteresourcepolicy": {
    "Resources": [
     "opsitemgroup",
     "parameter"
    ]
   },
   "deregistermanagedinstance": {
    "Resources": [
     "managed-instance"
    ]
   },
   "deregisterpatchbaselineforpatchgroup": {
    "Resources": [
     "patchbaseline"
    ]
   },
   "deregistertargetfrommaintenancewindow": {
    "Resources": [
     "maintenancewindow",
     "windowtarget"
    ]
   },
   "deregistertaskfrommaintenancewindow": {
    "Resources": [
     "maintenancewindow",
     "windowtask"
    ]
   },
   "describeactivations": {},
   "describeassociation": {
    "Resources": [
     "association",
     "document",
     "instance",
     "managed-instance"
    ]
   },
   "describeassociationexecutions": {
    "Resources": [
     "association"
    ]
   },
   "describeassociationexecutiontargets": {
    "Resources": [
     "association"
    ]
   },
   "describeautomationexecutions": {},
   "describeautomationstepexecutions": {
    "Resources": [
     "automation-execution"
    ]
   },
   "describeavailablepatches": {},
   "describedocument": {
    "Resources": [
     "document"
    ]
   },
   "describedocumentparameters": {
    "Resources": [
     "document"
    ]
   },
   "describedocumentpermission": {
    "Resources": [
     "document"
    ]
   },
   "describeeffectiveinstanceassociations": {
    "Resources": [
     "instance",
     "managed-instance"
    ]
   },
   "describeeffectivepatchesforpatchbaseline": {
    "Resources": [
     "patchbaseline"
    ]
   },
   "describeinstanceassociationsstatus": {
    "Resources": [
     "instance",
     "managed-instance"
    ]
   },
   "describeinstanceinformation": {},
   "describeinstancepatches": {
    "Resources": [
     "instance",
     "managed-instance"
    ]
   },
   "describeinstancepatchstates": {
    "Resources": [
     "instance",
     "managed-instance"
    ]
   },
   "describeinstancepatchstatesforpatchgroup": {},
   "describeinstanceproperties": {},
   "describeinventorydeletions": {},
   "describemaintenancewindowexecutions": {
    "Resources": [
     "maintenancewindow"
    ]
   },
   "describemaintenancewindowexecutiontaskinvocations": {},
   "describemaintenancewindowexecutiontasks": {},
   "describemaintenancewindows": {},
   "describemaintenancewindowschedule": {},
   "describemaintenancewindowsfortarget": {},
   "describemaintenancewindowtargets": {
    "Resources": [
     "maintenancewindow"
    ]
   },
   "describemaintenancewindowtasks": {
    "Resources": [
     "maintenancewindow"
    ]
   },
   "describeopsitems": {},
   "describeparameters": {},
   "describepatchbaselines": {},
   "describepatchgroups": {},
   "describepatchgroupstate": {},
   "describepatchproperties": {},
   "describesessions": {},
   "disassociateopsitemrelateditem": {
    "Resources": [
     "opsitem"
    ]
   },
   "executeapi": {},
   "getautomationexecution": {
    "Resources": [
     "automation-execution"
    ]
   },
   "getcalendar": {
    "Resources": [
     "document"
    ]
   },
   "getcalendarstate": {
    "Resources": [
     "document"
    ]
   },
   "getcommandinvocation": {},
   "getconnectionstatus": {
    "Resources": [
     "instance",
     "managed-instance",
     "task"
    ]
   },
   "getdefaultpatchbaseline": {
    "Resources": [
     "patchbaseline"
    ]
   },
   "getdeployablepatchsnapshotforinstance": {},
   "getdocument": {
    "Resources": [
     "document"
    ]
   },
   "getexecutionpreview": {},
   "getinventory": {},
   "getinventoryschema": {},
   "getmaintenancewindow": {
    "Resources": [
     "maintenancewindow"
    ]
   },
   "getmaintenancewindowexecution": {},
   "getmaintenancewindowexecutiontask": {},
   "getmaintenancewindowexecutiontaskinvocation": {},
   "getmaintenancewindowtask": {
    "Resources": [
     "maintenancewindow"
    ]
   },
   "getmanifest": {},
   "getopsitem": {
    "Resources": [
     "opsitem"
    ]
   },
   "getopsmetadata": {
    "Resources": [
     "opsmetadata"
    ]
   },
   "getopssummary": {
    "Resources": [
     "resourcedatasync"
    ]
   },
   "getparameter": {
    "Resources": [
     "parameter"
    ]
   },
   "getparameterhistory": {
    "Resources": [
     "parameter"
    ]
   },
   "getparameters": {
    "Resources": [
     "parameter"
    ]
   },
   "getparametersbypath": {
    "Resources": [
     "parameter"
    ]
   },
   "getpatchbaseline": {
    "Resources": [
     "patchbaseline"
    ]
   },
   "getpatchbaselineforpatchgroup": {},
   "getresourcepolicies": {
    "Resources": [
     "opsitemgroup",
     "parameter"
    ]
   },
   "getservicesetting": {
    "Resources": [
     "servicesetting"
    ]
   },
   "labelparameterversion": {
    "Resources": [
     "parameter"
    ]
   },
   "listassociations": {},
   "listassociationversions": {
    "Resources": [
     "association"
    ]
   },
   "listcommandinvocations": {},
   "listcommands": {},
   "listcomplianceitems": {},
   "listcompliancesummaries": {},
   "listdocumentmetadatahistory": {
    "Resources": [
     "document"
    ]
   },
   "listdocuments": {},
   "listdocumentversions": {
    "Resources": [
     "document"
    ]
   },
   "listinstanceassociations": {
    "Resources": [
     "instance",
     "managed-instance"
    ]
   },
   "listinventoryentries": {},
   "listnodes": {
    "Resources": [
     "resourcedatasync"
    ]
   },
   "listnodessummary": {
    "Resources": [
     "resourcedatasync"
    ]
   },
   "listopsitemevents": {},
   "listopsitemrelateditems": {},
   "listopsmetadata": {},
   "listresourcecompliancesummaries": {},
   "listresourcedatasync": {},
   "listtagsforresource": {
    "Resources": [
     "association",
     "automation-execution",
     "document",
     "maintenancewindow",
     "managed-instance",
     "opsitem",
     "opsmetadata",
     "parameter",
     "patchbaseline"
    ]
   },
   "modifydocumentpermission": {
    "Resources": [
     "document"
    ]
   },
   "putcalendar": {
    "Resources": [
     "document"
    ]
   },
   "putcomplianceitems": {
    "Resources": [
     "instance",
     "managed-instance"
    ]
   },
   "putconfigurepackageresult": {},
   "putinventory": {},
   "putparameter": {
    "Resources": [
     "parameter"
    ]
   },
   "putresourcepolicy": {
    "Resources": [
     "opsitemgroup",
     "parameter"
    ]
   },
   "registerdefaultpatchbaseline": {
    "Resources": [
     "patchbaseline"
    ]
   },
   "registermanagedinstance": {},
   "registerpatchbaselineforpatchgroup": {
    "Resources": [
     "patchbaseline"
    ]
   },
   "registertargetwithmaintenancewindow": {
    "Resources": [
     "maintenancewindow"
    ]
   },
   "registertaskwithmaintenancewindow": {
    "Resources": [
     "maintenancewindow"
    ]
   },
   "removetagsfromresource": {
    "Resources": [
     "association",
     "automation-execution",
     "document",
     "instance",
     "maintenancewindow",
     "managed-instance",
     "opsitem",
     "opsmetadata",
     "parameter",
     "patchbaseline",
     "task"
    ]
   },
   "resetservicesetting": {
    "Resources": [
     "servicesetting"
    ]
   },
   "resumesession": {
    "Resources": [
     "session"
    ]
   },
   "sendautomationsignal": {
    "Resources": [
     "automation-execution"
    ]
   },
   "sendcommand": {
    "Resources": [
     "bucket",
     "document",
     "instance",
     "managed-instance"
    ]
   },
   "startassociationsonce": {
    "Resources": [
     "association"
    ]
   },
   "startautomationexecution": {
    "Resources": [
     "automation-definition"
    ]
   },
   "startchangerequestexecution": {
    "Resources": [
     "automation-definition"
    ]
   },
   "startexecutionpreview": {},
   "startsession": {
    "Resources": [
     "document",
     "instance",
     "managed-instance",
     "task"
    ]
   },
   "stopautomationexecution": {
    "Resources": [
     "automation-execution"
    ]
   },
   "terminatesession": {
    "Resources": [
     "session"
    ]
   },
   "unlabelparameterversion": {
    "Resources": [
     "parameter"
    ]
   },
   "updateassociation": {
    "Resources": [
     "association",
     "document",
     "instance",
     "managed-instance"
    ]
   },
   "updateassociationstatus": {
    "Resources": [
     "document",
     "instance",
     "managed-instance"
    ]
   },
   "updatedocument": {
    "Resources": [
     "document"
    ]
   },
   "updatedocumentdefaultversion": {
    "Resources": [
     "document"
    ]
   },
   "updatedocumentmetadata": {
    "Resources": [
     "document"
    ]
   },
   "updateinstanceassociationstatus": {
    "Resources": [
     "association",
     "instance",
     "managed-instance"
    ]
   },
   "updateinstanceinformation": {
    "Resources": [
     "instance",
     "managed-instance"
    ]
   },
   "updatemaintenancewindow": {
    "Resources": [
     "maintenancewindow"
    ]
   },
   "updatemaintenancewindowtarget": {
    "Resources": [
     "maintenancewindow",
     "windowtarget"
    ]
   },
   "updatemaintenancewindowtask": {
    "Resources": [
     "maintenancewindow",
     "windowtask"
    ]
   },
   "updatemanagedinstancerole": {
    "Resources": [
     "iam-role",
     "managed-instance"
    ]
   },
   "updateopsitem": {
    "Resources": [
     "opsitem"
    ]
   },
   "updateopsmetadata": {
    "Resources": [
     "opsmetadata"
    ]
   },
   "updatepatchbaseline": {
    "Resources": [
     "patchbaseline"
    ]
   },
   "updateresourcedatasync": {
    "Resources": [
     "resourcedatasync"
    ]
   },
   "updateservicesetting": {
    "Resources": [
     "servicesetting"
    ]
   }
  },
  "Resources": {
   "association": {
    "ARNFormats": [
     "arn:${Partition}:ssm:${Region}:${Account}:association/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "automation-definition": {
    "ARNFormats": [
     "arn:${Partition}:ssm:${Region}:${Account}:.*"
    ]
   },
   "automation-execution": {
    "ARNFormats": [
     "arn:${Partition}:ssm:${Region}:${Account}:automation-execution/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "ssm:resourceTag/tag-key"
    ]
   },
   "bucket": {
    "ARNFormats": [
     "arn:${Partition}:s3:::.*"
    ]
   },
   "document": {
    "ARNFormats": [
     "arn:${Partition}:ssm:${Region}:${Account}:document/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "ssm:DocumentCategories",
     "ssm:resourceTag/${TagKey}"
    ]
   },
   "iam-role": {
    "ARNFormats": [
     "arn:${Partition}:iam::${Account}:role/.*"
    ]
   },
   "instance": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "ssm:resourceTag/${TagKey}"
    ]
   },
   "maintenancewindow": {
    "ARNFormats": [
     "arn:${Partition}:ssm:${Region}:${Account}:maintenancewindow/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "ssm:resourceTag/tag-key"
    ]
   },
   "managed-instance": {
    "ARNFormats": [
     "arn:${Partition}:ssm:${Region}:${Account}:managed-instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "ssm:resourceTag/tag-key"
    ]
   },
   "managed-instance-inventory": {
    "ARNFormats": [
     "arn:${Partition}:ssm:${Region}:${Account}:managed-instance-inventory/.*"
    ]
   },
   "opsitem": {
    "ARNFormats": [
     "arn:${Partition}:ssm:${Region}:${Account}:opsitem/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "opsitemgroup": {
    "ARNFormats": [
     "arn:${Partition}:ssm:${Region}:${Account}:opsitemgroup/default"
    ]
   },
   "opsmetadata": {
    "ARNFormats": [
     "arn:${Partition}:ssm:${Region}:${Account}:opsmetadata/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "ssm:resourceTag/${TagKey}"
    ]
   },
   "parameter": {
    "ARNFormats": [
     "arn:${Partition}:ssm:${Region}:${Account}:parameter/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "ssm:resourceTag/tag-key"
    ]
   },
   "patchbaseline": {
    "ARNFormats": [
     "arn:${Partition}:ssm:${Region}:${Account}:patchbaseline/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "ssm:resourceTag/tag-key"
    ]
   },
   "resourcedatasync": {
    "ARNFormats": [
     "arn:${Partition}:ssm:${Region}:${Account}:resource-data-sync/.*"
    ]
   },
   "servicesetting": {
    "ARNFormats": [
     "arn:${Partition}:ssm:${Region}:${Account}:servicesetting/.*"
    ]
   },
   "session": {
    "ARNFormats": [
     "arn:${Partition}:ssm:${Region}:${Account}:session/.*"
    ],
    "ConditionKeys": [
     "ssm:resourceTag/aws:ssmmessages:session-id",
     "ssm:resourceTag/aws:ssmmessages:target-id"
    ]
   },
   "task": {
    "ARNFormats": [
     "arn:${Partition}:ecs:${Region}:${Account}:task/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "windowtarget": {
    "ARNFormats": [
     "arn:${Partition}:ssm:${Region}:${Account}:windowtarget/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "ssm:resourceTag/tag-key"
    ]
   },
   "windowtask": {
    "ARNFormats": [
     "arn:${Partition}:ssm:${Region}:${Account}:windowtask/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "ssm:resourceTag/tag-key"
    ]
   }
  }
 },
 "ssm-contacts": {
  "Actions": {
   "acceptpage": {
    "Resources": [
     "page"
    ]
   },
   "activatecontactchannel": {
    "Resources": [
     "contactchannel"
    ]
   },
   "associatecontact": {
    "Resources": [
     "contact"
    ]
   },
   "createcontact": {
    "Resources": [
     "contact"
    ]
   },
   "createcontactchannel": {
    "Resources": [
     "contact"
    ]
   },
   "createrotation": {
    "Resources": [
     "rotation"
    ]
   },
   "createrotationoverride": {
    "Resources": [
     "rotation"
    ]
   },
   "deactivatecontactchannel": {
    "Resources": [
     "contactchannel"
    ]
   },
   "deletecontact": {
    "Resources": [
     "contact"
    ]
   },
   "deletecontactchannel": {
    "Resources": [
     "contactchannel"
    ]
   },
   "deleterotation": {
    "Resources": [
     "rotation"
    ]
   },
   "deleterotationoverride": {
    "Resources": [
     "rotation"
    ]
   },
   "describeengagement": {
    "Resources": [
     "engagement"
    ]
   },
   "describepage": {
    "Resources": [
     "page"
    ]
   },
   "getcontact": {
    "Resources": [
     "contact"
    ]
   },
   "getcontactchannel": {
    "Resources": [
     "contactchannel"
    ]
   },
   "getcontactpolicy": {
    "Resources": [
     "contact"
    ]
   },
   "getrotation": {
    "Resources": [
     "rotation"
    ]
   },
   "getrotationoverride": {
    "Resources": [
     "rotation"
    ]
   },
   "listcontactchannels": {
    "Resources": [
     "contact"
    ]
   },
   "listcontacts": {},
   "listengagements": {},
   "listpagereceipts": {
    "Resources": [
     "page"
    ]
   },
   "listpageresolutions": {
    "Resources": [
     "page"
    ]
   },
   "listpagesbycontact": {
    "Resources": [
     "contact"
    ]
   },
   "listpagesbyengagement": {
    "Resources": [
     "engagement"
    ]
   },
   "listpreviewrotationshifts": {},
   "listrotationoverrides": {
    "Resources": [
     "rotation"
    ]
   },
   "listrotations": {},
   "listrotationshifts": {
    "Resources": [
     "rotation"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "contact",
     "rotation"
    ]
   },
   "putcontactpolicy": {
    "Resources": [
     "contact"
    ]
   },
   "sendactivationcode": {
    "Resources": [
     "contactchannel"
    ]
   },
   "startengagement": {
    "Resources": [
     "contact"
    ]
   },
   "stopengagement": {
    "Resources": [
     "engagement"
    ]
   },
   "tagresource": {
    "Resources": [
     "contact",
     "rotation"
    ]
   },
   "untagresource": {
    "Resources": [
     "contact",
     "rotation"
    ]
   },
   "updatecontact": {
    "Resources": [
     "contact"
    ]
   },
   "updatecontactchannel": {
    "Resources": [
     "contactchannel"
    ]
   },
   "updaterotation": {
    "Resources": [
     "rotation"
    ]
   }
  },
  "Resources": {
   "contact": {
    "ARNFormats": [
     "arn:${Partition}:ssm-contacts:${Region}:${Account}:contact/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "contactchannel": {
    "ARNFormats": [
     "arn:${Partition}:ssm-contacts:${Region}:${Account}:contactchannel/.*"
    ]
   },
   "engagement": {
    "ARNFormats": [
     "arn:${Partition}:ssm-contacts:${Region}:${Account}:engagement/.*"
    ]
   },
   "page": {
    "ARNFormats": [
     "arn:${Partition}:ssm-contacts:${Region}:${Account}:page/.*"
    ]
   },
   "rotation": {
    "ARNFormats": [
     "arn:${Partition}:ssm-contacts:${Region}:${Account}:rotation/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "ssm-guiconnect": {
  "Actions": {
   "cancelconnection": {},
   "getconnection": {},
   "listconnections": {},
   "startconnection": {}
  },
  "Resources": {}
 },
 "ssm-incidents": {
  "Actions": {
   "batchgetincidentfindings": {
    "Resources": [
     "incident-record",
     "response-plan"
    ]
   },
   "createreplicationset": {},
   "createresponseplan": {},
   "createtimelineevent": {
    "Resources": [
     "incident-record",
     "response-plan"
    ]
   },
   "deleteincidentrecord": {
    "Resources": [
     "incident-record"
    ]
   },
   "deletereplicationset": {
    "Resources": [
     "replication-set"
    ]
   },
   "deleteresourcepolicy": {
    "Resources": [
     "response-plan"
    ]
   },
   "deleteresponseplan": {
    "Resources": [
     "response-plan"
    ]
   },
   "deletetimelineevent": {
    "Resources": [
     "incident-record"
    ]
   },
   "getincidentrecord": {
    "Resources": [
     "incident-record",
     "response-plan"
    ]
   },
   "getreplicationset": {
    "Resources": [
     "replication-set"
    ]
   },
   "getresourcepolicies": {
    "Resources": [
     "response-plan"
    ]
   },
   "getresponseplan": {
    "Resources": [
     "response-plan"
    ]
   },
   "gettimelineevent": {
    "Resources": [
     "incident-record",
     "response-plan"
    ]
   },
   "listincidentfindings": {
    "Resources": [
     "incident-record",
     "response-plan"
    ]
   },
   "listincidentrecords": {},
   "listrelateditems": {
    "Resources": [
     "incident-record",
     "response-plan"
    ]
   },
   "listreplicationsets": {},
   "listresponseplans": {},
   "listtagsforresource": {
    "Resources": [
     "incident-record",
     "replication-set",
     "response-plan"
    ]
   },
   "listtimelineevents": {
    "Resources": [
     "incident-record",
     "response-plan"
    ]
   },
   "putresourcepolicy": {
    "Resources": [
     "response-plan"
    ]
   },
   "startincident": {
    "Resources": [
     "response-plan"
    ]
   },
   "tagresource": {
    "Resources": [
     "incident-record",
     "replication-set",
     "response-plan"
    ]
   },
   "untagresource": {
    "Resources": [
     "incident-record",
     "replication-set",
     "response-plan"
    ]
   },
   "updatedeletionprotection": {
    "Resources": [
     "replication-set"
    ]
   },
   "updateincidentrecord": {
    "Resources": [
     "incident-record",
     "response-plan"
    ]
   },
   "updaterelateditems": {
    "Resources": [
     "incident-record",
     "response-plan"
    ]
   },
   "updatereplicationset": {
    "Resources": [
     "replication-set"
    ]
   },
   "updateresponseplan": {
    "Resources": [
     "response-plan"
    ]
   },
   "updatetimelineevent": {
    "Resources": [
     "incident-record",
     "response-plan"
    ]
   }
  },
  "Resources": {
   "incident-record": {
    "ARNFormats": [
     "arn:${Partition}:ssm-incidents::${Account}:incident-record/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "replication-set": {
    "ARNFormats": [
     "arn:${Partition}:ssm-incidents::${Account}:replication-set/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "response-plan": {
    "ARNFormats": [
     "arn:${Partition}:ssm-incidents::${Account}:response-plan/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "ssm-quicksetup": {
  "Actions": {
   "createconfigurationmanager": {
    "Resources": [
     "configuration-manager"
    ]
   },
   "deleteconfigurationmanager": {
    "Resources": [
     "configuration-manager"
    ]
   },
   "getconfiguration": {
    "Resources": [
     "configuration-manager"
    ]
   },
   "getconfigurationmanager": {
    "Resources": [
     "configuration-manager"
    ]
   },
   "getservicesettings": {},
   "listconfigurationmanagers": {},
   "listconfigurations": {
    "Resources": [
     "configuration-manager"
    ]
   },
   "listquicksetuptypes": {},
   "listtagsforresource": {
    "Resources": [
     "configuration-manager"
    ]
   },
   "tagresource": {
    "Resources": [
     "configuration-manager"
    ]
   },
   "untagresource": {
    "Resources": [
     "configuration-manager"
    ]
   },
   "updateconfigurationdefinition": {
    "Resources": [
     "configuration-manager"
    ]
   },
   "updateconfigurationmanager": {
    "Resources": [
     "configuration-manager"
    ]
   },
   "updateservicesettings": {}
  },
  "Resources": {
   "configuration-manager": {
    "ARNFormats": [
     "arn:${Partition}:ssm-quicksetup:${Region}:${Account}:configuration-manager/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "ssm-sap": {
  "Actions": {
   "backupdatabase": {},
   "deleteresourcepermission": {},
   "deregisterapplication": {
    "Resources": [
     "application"
    ]
   },
   "getapplication": {},
   "getcomponent": {
    "Resources": [
     "component"
    ]
   },
   "getdatabase": {},
   "getoperation": {},
   "getresourcepermission": {},
   "listapplications": {},
   "listcomponents": {
    "Resources": [
     "application"
    ]
   },
   "listdatabases": {},
   "listoperationevents": {},
   "listoperations": {},
   "listtagsforresource": {},
   "putresourcepermission": {},
   "registerapplication": {},
   "restoredatabase": {},
   "startapplication": {
    "Resources": [
     "application"
    ]
   },
   "startapplicationrefresh": {
    "Resources": [
     "application"
    ]
   },
   "stopapplication": {
    "Resources": [
     "application"
    ]
   },
   "tagresource": {
    "Resources": [
     "application",
     "component",
     "database"
    ]
   },
   "untagresource": {
    "Resources": [
     "application",
     "component",
     "database"
    ]
   },
   "updateapplicationsettings": {
    "Resources": [
     "application"
    ]
   },
   "updatehanabackupsettings": {}
  },
  "Resources": {
   "application": {
    "ARNFormats": [
     "arn:${Partition}:ssm-sap:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "component": {
    "ARNFormats": [
     "arn:${Partition}:ssm-sap:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "database": {
    "ARNFormats": [
     "arn:${Partition}:ssm-sap:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "ssmmessages": {
  "Actions": {
   "createcontrolchannel": {},
   "createdatachannel": {},
   "opencontrolchannel": {},
   "opendatachannel": {}
  },
  "Resources": {}
 },
 "sso": {
  "Actions": {
   "associatedirectory": {},
   "associateprofile": {},
   "attachcustomermanagedpolicyreferencetopermissionset": {
    "Resources": [
     "Instance",
     "PermissionSet"
    ]
   },
   "attachmanagedpolicytopermissionset": {
    "Resources": [
     "Instance",
     "PermissionSet"
    ]
   },
   "createaccountassignment": {
    "Resources": [
     "Account",
     "Instance",
     "PermissionSet"
    ]
   },
   "createapplication": {
    "Resources": [
     "ApplicationProvider",
     "Instance"
    ]
   },
   "createapplicationassignment": {
    "Resources": [
     "Application"
    ]
   },
   "createapplicationinstance": {},
   "createapplicationinstancecertificate": {},
   "createinstance": {
    "Resources": [
     "Instance"
    ]
   },
   "createinstanceaccesscontrolattributeconfiguration": {
    "Resources": [
     "Instance"
    ]
   },
   "createmanagedapplicationinstance": {},
   "createpermissionset": {
    "Resources": [
     "Instance",
     "PermissionSet"
    ]
   },
   "createprofile": {},
   "createtrust": {},
   "createtrustedtokenissuer": {
    "Resources": [
     "Instance"
    ]
   },
   "deleteaccountassignment": {
    "Resources": [
     "Account",
     "Instance",
     "PermissionSet"
    ]
   },
   "deleteapplication": {
    "Resources": [
     "Application"
    ]
   },
   "deleteapplicationaccessscope": {
    "Resources": [
     "Application"
    ]
   },
   "deleteapplicationassignment": {
    "Resources": [
     "Application"
    ]
   },
   "deleteapplicationauthenticationmethod": {
    "Resources": [
     "Application"
    ]
   },
   "deleteapplicationgrant": {
    "Resources": [
     "Application"
    ]
   },
   "deleteapplicationinstance": {},
   "deleteapplicationinstancecertificate": {},
   "deleteinlinepolicyfrompermissionset": {
    "Resources": [
     "Instance",
     "PermissionSet"
    ]
   },
   "deleteinstance": {
    "Resources": [
     "Instance"
    ]
   },
   "deleteinstanceaccesscontrolattributeconfiguration": {
    "Resources": [
     "Instance"
    ]
   },
   "deletemanagedapplicationinstance": {},
   "deletepermissionsboundaryfrompermissionset": {
    "Resources": [
     "Instance",
     "PermissionSet"
    ]
   },
   "deletepermissionset": {
    "Resources": [
     "Instance",
     "PermissionSet"
    ]
   },
   "deletepermissionspolicy": {},
   "deleteprofile": {},
   "deletetrustedtokenissuer": {
    "Resources": [
     "TrustedTokenIssuer"
    ]
   },
   "describeaccountassignmentcreationstatus": {
    "Resources": [
     "Instance"
    ]
   },
   "describeaccountassignmentdeletionstatus": {
    "Resources": [
     "Instance"
    ]
   },
   "describeapplication": {
    "Resources": [
     "Application"
    ]
   },
   "describeapplicationassignment": {
    "Resources": [
     "Application"
    ]
   },
   "describeapplicationprovider": {
    "Resources": [
     "ApplicationProvider"
    ]
   },
   "describedirectories": {},
   "describeinstance": {
    "Resources": [
     "Instance"
    ]
   },
   "describeinstanceaccesscontrolattributeconfiguration": {
    "Resources": [
     "Instance"
    ]
   },
   "describepermissionset": {
    "Resources": [
     "Instance",
     "PermissionSet"
    ]
   },
   "describepermissionsetprovisioningstatus": {
    "Resources": [
     "Instance"
    ]
   },
   "describepermissionspolicies": {},
   "describeregisteredregions": {},
   "describetrustedtokenissuer": {
    "Resources": [
     "TrustedTokenIssuer"
    ]
   },
   "describetrusts": {},
   "detachcustomermanagedpolicyreferencefrompermissionset": {
    "Resources": [
     "Instance",
     "PermissionSet"
    ]
   },
   "detachmanagedpolicyfrompermissionset": {
    "Resources": [
     "Instance",
     "PermissionSet"
    ]
   },
   "disassociatedirectory": {},
   "disassociateprofile": {},
   "getapplicationaccessscope": {
    "Resources": [
     "Application"
    ]
   },
   "getapplicationassignmentconfiguration": {
    "Resources": [
     "Application"
    ]
   },
   "getapplicationauthenticationmethod": {
    "Resources": [
     "Application"
    ]
   },
   "getapplicationgrant": {
    "Resources": [
     "Application"
    ]
   },
   "getapplicationinstance": {},
   "getapplicationtemplate": {},
   "getinlinepolicyforpermissionset": {
    "Resources": [
     "Instance",
     "PermissionSet"
    ]
   },
   "getmanagedapplicationinstance": {},
   "getmfadevicemanagementfordirectory": {},
   "getpermissionsboundaryforpermissionset": {
    "Resources": [
     "Instance",
     "PermissionSet"
    ]
   },
   "getpermissionset": {},
   "getpermissionspolicy": {},
   "getprofile": {},
   "getsharedssoconfiguration": {},
   "getssoconfiguration": {},
   "getssostatus": {},
   "gettrust": {},
   "importapplicationinstanceserviceprovidermetadata": {},
   "listaccountassignmentcreationstatus": {
    "Resources": [
     "Instance"
    ]
   },
   "listaccountassignmentdeletionstatus": {
    "Resources": [
     "Instance"
    ]
   },
   "listaccountassignments": {
    "Resources": [
     "Account",
     "Instance",
     "PermissionSet"
    ]
   },
   "listaccountassignmentsforprincipal": {
    "Resources": [
     "Instance"
    ]
   },
   "listaccountsforprovisionedpermissionset": {
    "Resources": [
     "Instance",
     "PermissionSet"
    ]
   },
   "listapplicationaccessscopes": {
    "Resources": [
     "Application"
    ]
   },
   "listapplicationassignments": {
    "Resources": [
     "Application"
    ]
   },
   "listapplicationassignmentsforprincipal": {
    "Resources": [
     "Instance"
    ]
   },
   "listapplicationauthenticationmethods": {
    "Resources": [
     "Application"
    ]
   },
   "listapplicationgrants": {
    "Resources": [
     "Application"
    ]
   },
   "listapplicationinstancecertificates": {},
   "listapplicationinstances": {},
   "listapplicationproviders": {
    "Resources": [
     "ApplicationProvider"
    ]
   },
   "listapplications": {},
   "listapplicationtemplates": {},
   "listcustomermanagedpolicyreferencesinpermissionset": {
    "Resources": [
     "Instance",
     "PermissionSet"
    ]
   },
   "listdirectoryassociations": {},
   "listinstances": {},
   "listmanagedpoliciesinpermissionset": {
    "Resources": [
     "Instance",
     "PermissionSet"
    ]
   },
   "listpermissionsetprovisioningstatus": {
    "Resources": [
     "Instance"
    ]
   },
   "listpermissionsets": {
    "Resources": [
     "Instance"
    ]
   },
   "listpermissionsetsprovisionedtoaccount": {
    "Resources": [
     "Account",
     "Instance"
    ]
   },
   "listprofileassociations": {},
   "listprofiles": {},
   "listtagsforresource": {
    "Resources": [
     "Application",
     "Instance",
     "PermissionSet",
     "TrustedTokenIssuer"
    ]
   },
   "listtrustedtokenissuers": {
    "Resources": [
     "Instance"
    ]
   },
   "provisionpermissionset": {
    "Resources": [
     "Account",
     "Instance",
     "PermissionSet"
    ]
   },
   "putapplicationaccessscope": {
    "Resources": [
     "Application"
    ]
   },
   "putapplicationassignmentconfiguration": {
    "Resources": [
     "Application"
    ]
   },
   "putapplicationauthenticationmethod": {
    "Resources": [
     "Application"
    ]
   },
   "putapplicationgrant": {
    "Resources": [
     "Application"
    ]
   },
   "putinlinepolicytopermissionset": {
    "Resources": [
     "Instance",
     "PermissionSet"
    ]
   },
   "putmfadevicemanagementfordirectory": {},
   "putpermissionsboundarytopermissionset": {
    "Resources": [
     "Instance",
     "PermissionSet"
    ]
   },
   "putpermissionspolicy": {},
   "searchgroups": {},
   "searchusers": {},
   "startsso": {},
   "tagresource": {
    "Resources": [
     "Application",
     "Instance",
     "PermissionSet",
     "TrustedTokenIssuer"
    ]
   },
   "untagresource": {
    "Resources": [
     "Application",
     "Instance",
     "PermissionSet",
     "TrustedTokenIssuer"
    ]
   },
   "updateapplication": {
    "Resources": [
     "Application"
    ]
   },
   "updateapplicationinstanceactivecertificate": {},
   "updateapplicationinstancedisplaydata": {},
   "updateapplicationinstanceresponseconfiguration": {},
   "updateapplicationinstanceresponseschemaconfiguration": {},
   "updateapplicationinstancesecurityconfiguration": {},
   "updateapplicationinstanceserviceproviderconfiguration": {},
   "updateapplicationinstancestatus": {},
   "updatedirectoryassociation": {},
   "updateinstance": {
    "Resources": [
     "Instance"
    ]
   },
   "updateinstanceaccesscontrolattributeconfiguration": {
    "Resources": [
     "Instance"
    ]
   },
   "updatemanagedapplicationinstancestatus": {},
   "updatepermissionset": {
    "Resources": [
     "Instance",
     "PermissionSet"
    ]
   },
   "updateprofile": {},
   "updatessoconfiguration": {},
   "updatetrust": {},
   "updatetrustedtokenissuer": {
    "Resources": [
     "TrustedTokenIssuer"
    ]
   }
  },
  "Resources": {
   "account": {
    "ARNFormats": [
     "arn:${Partition}:sso:::account/.*"
    ]
   },
   "application": {
    "ARNFormats": [
     "arn:${Partition}:sso::${AccountId}:application/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "sso:ApplicationAccount"
    ]
   },
   "applicationprovider": {
    "ARNFormats": [
     "arn:${Partition}:sso::aws:applicationProvider/.*"
    ]
   },
   "instance": {
    "ARNFormats": [
     "arn:${Partition}:sso:::instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "permissionset": {
    "ARNFormats": [
     "arn:${Partition}:sso:::permissionSet/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "trustedtokenissuer": {
    "ARNFormats": [
     "arn:${Partition}:sso::${AccountId}:trustedTokenIssuer/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "sso-directory": {
  "Actions": {
   "addmembertogroup": {},
   "completevirtualmfadeviceregistration": {},
   "completewebauthndeviceregistration": {},
   "createalias": {},
   "createbearertoken": {},
   "createexternalidpconfigurationfordirectory": {},
   "creategroup": {},
   "createprovisioningtenant": {},
   "createuser": {},
   "deletebearertoken": {},
   "deleteexternalidpcertificate": {},
   "deleteexternalidpconfigurationfordirectory": {},
   "deletegroup": {},
   "deletemfadeviceforuser": {},
   "deleteprovisioningtenant": {},
   "deleteuser": {},
   "describedirectory": {},
   "describegroup": {},
   "describegroups": {},
   "describeprovisioningtenant": {},
   "describeuser": {},
   "describeuserbyuniqueattribute": {},
   "describeusers": {},
   "disableexternalidpconfigurationfordirectory": {},
   "disableuser": {},
   "enableexternalidpconfigurationfordirectory": {},
   "enableuser": {},
   "getawsspconfigurationfordirectory": {},
   "getgroupid": {},
   "getuserid": {},
   "getuserpoolinfo": {},
   "importexternalidpcertificate": {},
   "ismemberingroup": {},
   "ismemberingroups": {},
   "listbearertokens": {},
   "listexternalidpcertificates": {},
   "listexternalidpconfigurationsfordirectory": {},
   "listgroups": {},
   "listgroupsformember": {},
   "listgroupsforuser": {},
   "listmembersingroup": {},
   "listmfadevicesforuser": {},
   "listprovisioningtenants": {},
   "listusers": {},
   "removememberfromgroup": {},
   "searchgroups": {},
   "searchusers": {},
   "startvirtualmfadeviceregistration": {},
   "startwebauthndeviceregistration": {},
   "updateexternalidpconfigurationfordirectory": {},
   "updategroup": {},
   "updategroupdisplayname": {},
   "updatemfadeviceforuser": {},
   "updatepassword": {},
   "updateuser": {},
   "updateusername": {},
   "verifyemail": {}
  },
  "Resources": {}
 },
 "sso-oauth": {
  "Actions": {
   "createtokenwithiam": {
    "Resources": [
     "Application"
    ]
   }
  },
  "Resources": {
   "application": {
    "ARNFormats": [
     "arn:${Partition}:sso::${AccountId}:application/.*"
    ]
   }
  }
 },
 "states": {
  "Actions": {
   "createactivity": {
    "Resources": [
     "activity"
    ]
   },
   "createstatemachine": {
    "Resources": [
     "statemachine"
    ]
   },
   "createstatemachinealias": {
    "Resources": [
     "statemachine"
    ]
   },
   "deleteactivity": {
    "Resources": [
     "activity"
    ]
   },
   "deletestatemachine": {
    "Resources": [
     "statemachine"
    ]
   },
   "deletestatemachinealias": {
    "Resources": [
     "statemachine"
    ]
   },
   "deletestatemachineversion": {
    "Resources": [
     "statemachine"
    ]
   },
   "describeactivity": {
    "Resources": [
     "activity"
    ]
   },
   "describeexecution": {
    "Resources": [
     "execution",
     "express"
    ]
   },
   "describemaprun": {
    "Resources": [
     "maprun"
    ]
   },
   "describestatemachine": {
    "Resources": [
     "statemachine"
    ]
   },
   "describestatemachinealias": {
    "Resources": [
     "statemachine"
    ]
   },
   "describestatemachineforexecution": {
    "Resources": [
     "execution"
    ]
   },
   "getactivitytask": {
    "Resources": [
     "activity"
    ]
   },
   "getexecutionhistory": {
    "Resources": [
     "execution"
    ]
   },
   "invokehttpendpoint": {},
   "listactivities": {},
   "listexecutions": {
    "Resources": [
     "maprun",
     "statemachine"
    ]
   },
   "listmapruns": {
    "Resources": [
     "execution"
    ]
   },
   "liststatemachinealiases": {
    "Resources": [
     "statemachine"
    ]
   },
   "liststatemachines": {},
   "liststatemachineversions": {
    "Resources": [
     "statemachine"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "activity",
     "statemachine"
    ]
   },
   "publishstatemachineversion": {
    "Resources": [
     "statemachine"
    ]
   },
   "redriveexecution": {
    "Resources": [
     "execution"
    ]
   },
   "revealsecrets": {},
   "sendtaskfailure": {},
   "sendtaskheartbeat": {},
   "sendtasksuccess": {},
   "startexecution": {
    "Resources": [
     "statemachine"
    ]
   },
   "startsyncexecution": {
    "Resources": [
     "statemachine"
    ]
   },
   "stopexecution": {
    "Resources": [
     "execution"
    ]
   },
   "tagresource": {
    "Resources": [
     "activity",
     "statemachine"
    ]
   },
   "teststate": {},
   "untagresource": {
    "Resources": [
     "activity",
     "statemachine"
    ]
   },
   "updatemaprun": {
    "Resources": [
     "maprun"
    ]
   },
   "updatestatemachine": {
    "Resources": [
     "statemachine"
    ]
   },
   "updatestatemachinealias": {
    "Resources": [
     "statemachine"
    ]
   },
   "validatestatemachinedefinition": {}
  },
  "Resources": {
   "activity": {
    "ARNFormats": [
     "arn:${Partition}:states:${Region}:${Account}:activity:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "execution": {
    "ARNFormats": [
     "arn:${Partition}:states:${Region}:${Account}:execution:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "express": {
    "ARNFormats": [
     "arn:${Partition}:states:${Region}:${Account}:express:.*"
    ]
   },
   "labelled execution": {
    "ARNFormats": [
     "arn:${Partition}:states:${Region}:${Account}:execution:.*"
    ]
   },
   "labelled express": {
    "ARNFormats": [
     "arn:${Partition}:states:${Region}:${Account}:express:.*"
    ]
   },
   "maprun": {
    "ARNFormats": [
     "arn:${Partition}:states:${Region}:${Account}:mapRun:.*"
    ]
   },
   "statemachine": {
    "ARNFormats": [
     "arn:${Partition}:states:${Region}:${Account}:stateMachine:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "statemachinealias": {
    "ARNFormats": [
     "arn:${Partition}:states:${Region}:${Account}:stateMachine:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "statemachineversion": {
    "ARNFormats": [
     "arn:${Partition}:states:${Region}:${Account}:stateMachine:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "storagegateway": {
  "Actions": {
   "activategateway": {},
   "addcache": {
    "Resources": [
     "gateway"
    ]
   },
   "addtagstoresource": {
    "Resources": [
     "cache-report",
     "fs-association",
     "gateway",
     "share",
     "tape",
     "tapepool",
     "volume"
    ]
   },
   "adduploadbuffer": {
    "Resources": [
     "gateway"
    ]
   },
   "addworkingstorage": {
    "Resources": [
     "gateway"
    ]
   },
   "assigntapepool": {
    "Resources": [
     "tape",
     "tapepool"
    ]
   },
   "associatefilesystem": {
    "Resources": [
     "gateway"
    ]
   },
   "attachvolume": {
    "Resources": [
     "gateway",
     "volume"
    ]
   },
   "bypassgovernanceretention": {
    "Resources": [
     "tapepool"
    ]
   },
   "cancelarchival": {
    "Resources": [
     "gateway",
     "tape"
    ]
   },
   "cancelcachereport": {
    "Resources": [
     "cache-report"
    ]
   },
   "cancelretrieval": {
    "Resources": [
     "gateway",
     "tape"
    ]
   },
   "createcachediscsivolume": {
    "Resources": [
     "gateway",
     "volume"
    ]
   },
   "createnfsfileshare": {
    "Resources": [
     "gateway"
    ]
   },
   "createsmbfileshare": {
    "Resources": [
     "gateway"
    ]
   },
   "createsnapshot": {
    "Resources": [
     "volume"
    ]
   },
   "createsnapshotfromvolumerecoverypoint": {
    "Resources": [
     "volume"
    ]
   },
   "createstorediscsivolume": {
    "Resources": [
     "gateway"
    ]
   },
   "createtapepool": {},
   "createtapes": {
    "Resources": [
     "gateway",
     "tapepool"
    ]
   },
   "createtapewithbarcode": {
    "Resources": [
     "gateway",
     "tapepool"
    ]
   },
   "deleteautomatictapecreationpolicy": {
    "Resources": [
     "gateway"
    ]
   },
   "deletebandwidthratelimit": {
    "Resources": [
     "gateway"
    ]
   },
   "deletecachereport": {
    "Resources": [
     "cache-report"
    ]
   },
   "deletechapcredentials": {
    "Resources": [
     "target"
    ]
   },
   "deletefileshare": {
    "Resources": [
     "share"
    ]
   },
   "deletegateway": {
    "Resources": [
     "gateway"
    ]
   },
   "deletesnapshotschedule": {
    "Resources": [
     "volume"
    ]
   },
   "deletetape": {
    "Resources": [
     "gateway",
     "tape"
    ]
   },
   "deletetapearchive": {},
   "deletetapepool": {
    "Resources": [
     "tapepool"
    ]
   },
   "deletevolume": {
    "Resources": [
     "volume"
    ]
   },
   "describeavailabilitymonitortest": {
    "Resources": [
     "gateway"
    ]
   },
   "describebandwidthratelimit": {
    "Resources": [
     "gateway"
    ]
   },
   "describebandwidthratelimitschedule": {
    "Resources": [
     "gateway"
    ]
   },
   "describecache": {
    "Resources": [
     "gateway"
    ]
   },
   "describecachediscsivolumes": {
    "Resources": [
     "volume"
    ]
   },
   "describecachereport": {
    "Resources": [
     "cache-report"
    ]
   },
   "describechapcredentials": {
    "Resources": [
     "target"
    ]
   },
   "describefilesystemassociations": {
    "Resources": [
     "fs-association"
    ]
   },
   "describegatewayinformation": {
    "Resources": [
     "gateway"
    ]
   },
   "describemaintenancestarttime": {
    "Resources": [
     "gateway"
    ]
   },
   "describenfsfileshares": {
    "Resources": [
     "share"
    ]
   },
   "describesmbfileshares": {
    "Resources": [
     "share"
    ]
   },
   "describesmbsettings": {
    "Resources": [
     "gateway"
    ]
   },
   "describesnapshotschedule": {
    "Resources": [
     "volume"
    ]
   },
   "describestorediscsivolumes": {
    "Resources": [
     "volume"
    ]
   },
   "describetapearchives": {},
   "describetaperecoverypoints": {
    "Resources": [
     "gateway"
    ]
   },
   "describetapes": {
    "Resources": [
     "gateway"
    ]
   },
   "describeuploadbuffer": {
    "Resources": [
     "gateway"
    ]
   },
   "describevtldevices": {
    "Resources": [
     "gateway"
    ]
   },
   "describeworkingstorage": {
    "Resources": [
     "gateway"
    ]
   },
   "detachvolume": {
    "Resources": [
     "volume"
    ]
   },
   "disablegateway": {
    "Resources": [
     "gateway"
    ]
   },
   "disassociatefilesystem": {
    "Resources": [
     "fs-association"
    ]
   },
   "evictfilesfailingupload": {
    "Resources": [
     "share"
    ]
   },
   "joindomain": {
    "Resources": [
     "gateway"
    ]
   },
   "listautomatictapecreationpolicies": {},
   "listcachereports": {},
   "listfileshares": {},
   "listfilesystemassociations": {},
   "listgateways": {},
   "listlocaldisks": {
    "Resources": [
     "gateway"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "gateway",
     "share",
     "tape",
     "volume"
    ]
   },
   "listtapepools": {},
   "listtapes": {},
   "listvolumeinitiators": {
    "Resources": [
     "volume"
    ]
   },
   "listvolumerecoverypoints": {
    "Resources": [
     "gateway"
    ]
   },
   "listvolumes": {},
   "notifywhenuploaded": {
    "Resources": [
     "share"
    ]
   },
   "refreshcache": {
    "Resources": [
     "share"
    ]
   },
   "removetagsfromresource": {
    "Resources": [
     "cache-report",
     "fs-association",
     "gateway",
     "share",
     "tape",
     "tapepool",
     "volume"
    ]
   },
   "resetcache": {
    "Resources": [
     "gateway"
    ]
   },
   "retrievetapearchive": {
    "Resources": [
     "gateway",
     "tape"
    ]
   },
   "retrievetaperecoverypoint": {
    "Resources": [
     "gateway",
     "tape"
    ]
   },
   "setlocalconsolepassword": {
    "Resources": [
     "gateway"
    ]
   },
   "setsmbguestpassword": {
    "Resources": [
     "gateway"
    ]
   },
   "shutdowngateway": {
    "Resources": [
     "gateway"
    ]
   },
   "startavailabilitymonitortest": {
    "Resources": [
     "gateway"
    ]
   },
   "startcachereport": {
    "Resources": [
     "share"
    ]
   },
   "startgateway": {
    "Resources": [
     "gateway"
    ]
   },
   "updateautomatictapecreationpolicy": {
    "Resources": [
     "gateway",
     "tapepool"
    ]
   },
   "updatebandwidthratelimit": {
    "Resources": [
     "gateway"
    ]
   },
   "updatebandwidthratelimitschedule": {
    "Resources": [
     "gateway"
    ]
   },
   "updatechapcredentials": {
    "Resources": [
     "target"
    ]
   },
   "updatefilesystemassociation": {
    "Resources": [
     "fs-association"
    ]
   },
   "updategatewayinformation": {
    "Resources": [
     "gateway"
    ]
   },
   "updategatewaysoftwarenow": {
    "Resources": [
     "gateway"
    ]
   },
   "updatemaintenancestarttime": {
    "Resources": [
     "gateway"
    ]
   },
   "updatenfsfileshare": {
    "Resources": [
     "share"
    ]
   },
   "updatesmbfileshare": {
    "Resources": [
     "share"
    ]
   },
   "updatesmbfilesharevisibility": {
    "Resources": [
     "gateway"
    ]
   },
   "updatesmblocalgroups": {
    "Resources": [
     "gateway"
    ]
   },
   "updatesmbsecuritystrategy": {
    "Resources": [
     "gateway"
    ]
   },
   "updatesnapshotschedule": {
    "Resources": [
     "volume"
    ]
   },
   "updatevtldevicetype": {
    "Resources": [
     "device"
    ]
   }
  },
  "Resources": {
   "cache-report": {
    "ARNFormats": [
     "arn:${Partition}:storagegateway:${Region}:${Account}:share/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "device": {
    "ARNFormats": [
     "arn:${Partition}:storagegateway:${Region}:${Account}:gateway/.*"
    ]
   },
   "fs-association": {
    "ARNFormats": [
     "arn:${Partition}:storagegateway:${Region}:${Account}:fs-association/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "gateway": {
    "ARNFormats": [
     "arn:${Partition}:storagegateway:${Region}:${Account}:gateway/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "share": {
    "ARNFormats": [
     "arn:${Partition}:storagegateway:${Region}:${Account}:share/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "tape": {
    "ARNFormats": [
     "arn:${Partition}:storagegateway:${Region}:${Account}:tape/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "tapepool": {
    "ARNFormats": [
     "arn:${Partition}:storagegateway:${Region}:${Account}:tapepool/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "target": {
    "ARNFormats": [
     "arn:${Partition}:storagegateway:${Region}:${Account}:gateway/.*"
    ]
   },
   "volume": {
    "ARNFormats": [
     "arn:${Partition}:storagegateway:${Region}:${Account}:gateway/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "sts": {
  "Actions": {
   "assumerole": {
    "Resources": [
     "role"
    ]
   },
   "assumerolewithsaml": {
    "Resources": [
     "role"
    ]
   },
   "assumerolewithwebidentity": {
    "Resources": [
     "role"
    ]
   },
   "assumeroot": {
    "Resources": [
     "root-user"
    ]
   },
   "decodeauthorizationmessage": {},
   "getaccesskeyinfo": {},
   "getcalleridentity": {},
   "getfederationtoken": {
    "Resources": [
     "user"
    ]
   },
   "getservicebearertoken": {},
   "getsessiontoken": {},
   "setcontext": {
    "Resources": [
     "role",
     "self-session"
    ]
   },
   "setsourceidentity": {
    "Resources": [
     "role",
     "user"
    ]
   },
   "tagsession": {
    "Resources": [
     "role",
     "user"
    ]
   }
  },
  "Resources": {
   "role": {
    "ARNFormats": [
     "arn:${Partition}:iam::${Account}:role/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "iam:ResourceTag/${TagKey}"
    ]
   },
   "root-user": {
    "ARNFormats": [
     "arn:${Partition}:iam::${Account}:root"
    ]
   },
   "self-session": {
    "ARNFormats": [
     "arn:${Partition}:sts::${Account}:self"
    ]
   },
   "user": {
    "ARNFormats": [
     "arn:${Partition}:iam::${Account}:user/.*"
    ]
   }
  }
 },
 "support": {
  "Actions": {
   "addattachmentstoset": {},
   "addcommunicationtocase": {},
   "createcase": {},
   "describeattachment": {},
   "describecaseattributes": {},
   "describecases": {},
   "describecommunication": {},
   "describecommunications": {},
   "describecreatecaseoptions": {},
   "describeissuetypes": {},
   "describeservices": {},
   "describeseveritylevels": {},
   "describesupportedlanguages": {},
   "describesupportlevel": {},
   "describetrustedadvisorcheckrefreshstatuses": {},
   "describetrustedadvisorcheckresult": {},
   "describetrustedadvisorchecks": {},
   "describetrustedadvisorchecksummaries": {},
   "getinteraction": {},
   "initiatecallforcase": {},
   "initiatechatforcase": {},
   "putcaseattributes": {},
   "ratecasecommunication": {},
   "refreshtrustedadvisorcheck": {},
   "resolvecase": {},
   "searchforcases": {},
   "startinteraction": {}
  },
  "Resources": {}
 },
 "supportapp": {
  "Actions": {
   "createslackchannelconfiguration": {},
   "deleteaccountalias": {},
   "deleteslackchannelconfiguration": {},
   "deleteslackworkspaceconfiguration": {},
   "describeslackchannels": {},
   "getaccountalias": {},
   "getslackoauthparameters": {},
   "listslackchannelconfigurations": {},
   "listslackworkspaceconfigurations": {},
   "putaccountalias": {},
   "redeemslackoauthcode": {},
   "registerslackworkspacefororganization": {},
   "updateslackchannelconfiguration": {}
  },
  "Resources": {}
 },
 "supportplans": {
  "Actions": {
   "createsupportplanschedule": {},
   "getsupportplan": {},
   "getsupportplanupdatestatus": {},
   "listsupportplanmodifiers": {},
   "startsupportplanupdate": {}
  },
  "Resources": {}
 },
 "supportrecommendations": {
  "Actions": {
   "getsupporttroubleshootingresponse": {},
   "startsupporttroubleshooting": {}
  },
  "Resources": {}
 },
 "sustainability": {
  "Actions": {
   "getcarbonfootprintsummary": {}
  },
  "Resources": {}
 },
 "swf": {
  "Actions": {
   "canceltimer": {
    "Resources": [
     "domain"
    ]
   },
   "cancelworkflowexecution": {
    "Resources": [
     "domain"
    ]
   },
   "completeworkflowexecution": {
    "Resources": [
     "domain"
    ]
   },
   "continueasnewworkflowexecution": {
    "Resources": [
     "domain"
    ]
   },
   "countclosedworkflowexecutions": {
    "Resources": [
     "domain"
    ]
   },
   "countopenworkflowexecutions": {
    "Resources": [
     "domain"
    ]
   },
   "countpendingactivitytasks": {
    "Resources": [
     "domain"
    ]
   },
   "countpendingdecisiontasks": {
    "Resources": [
     "domain"
    ]
   },
   "deleteactivitytype": {
    "Resources": [
     "domain"
    ]
   },
   "deleteworkflowtype": {
    "Resources": [
     "domain"
    ]
   },
   "deprecateactivitytype": {
    "Resources": [
     "domain"
    ]
   },
   "deprecatedomain": {
    "Resources": [
     "domain"
    ]
   },
   "deprecateworkflowtype": {
    "Resources": [
     "domain"
    ]
   },
   "describeactivitytype": {
    "Resources": [
     "domain"
    ]
   },
   "describedomain": {
    "Resources": [
     "domain"
    ]
   },
   "describeworkflowexecution": {
    "Resources": [
     "domain"
    ]
   },
   "describeworkflowtype": {
    "Resources": [
     "domain"
    ]
   },
   "failworkflowexecution": {
    "Resources": [
     "domain"
    ]
   },
   "getworkflowexecutionhistory": {
    "Resources": [
     "domain"
    ]
   },
   "listactivitytypes": {
    "Resources": [
     "domain"
    ]
   },
   "listclosedworkflowexecutions": {
    "Resources": [
     "domain"
    ]
   },
   "listdomains": {},
   "listopenworkflowexecutions": {
    "Resources": [
     "domain"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "domain"
    ]
   },
   "listworkflowtypes": {
    "Resources": [
     "domain"
    ]
   },
   "pollforactivitytask": {
    "Resources": [
     "domain"
    ]
   },
   "pollfordecisiontask": {
    "Resources": [
     "domain"
    ]
   },
   "recordactivitytaskheartbeat": {
    "Resources": [
     "domain"
    ]
   },
   "recordmarker": {
    "Resources": [
     "domain"
    ]
   },
   "registeractivitytype": {
    "Resources": [
     "domain"
    ]
   },
   "registerdomain": {},
   "registerworkflowtype": {
    "Resources": [
     "domain"
    ]
   },
   "requestcancelactivitytask": {
    "Resources": [
     "domain"
    ]
   },
   "requestcancelexternalworkflowexecution": {
    "Resources": [
     "domain"
    ]
   },
   "requestcancelworkflowexecution": {
    "Resources": [
     "domain"
    ]
   },
   "respondactivitytaskcanceled": {
    "Resources": [
     "domain"
    ]
   },
   "respondactivitytaskcompleted": {
    "Resources": [
     "domain"
    ]
   },
   "respondactivitytaskfailed": {
    "Resources": [
     "domain"
    ]
   },
   "responddecisiontaskcompleted": {
    "Resources": [
     "domain"
    ]
   },
   "scheduleactivitytask": {
    "Resources": [
     "domain"
    ]
   },
   "signalexternalworkflowexecution": {
    "Resources": [
     "domain"
    ]
   },
   "signalworkflowexecution": {
    "Resources": [
     "domain"
    ]
   },
   "startchildworkflowexecution": {
    "Resources": [
     "domain"
    ]
   },
   "starttimer": {
    "Resources": [
     "domain"
    ]
   },
   "startworkflowexecution": {
    "Resources": [
     "domain"
    ]
   },
   "tagresource": {
    "Resources": [
     "domain"
    ]
   },
   "terminateworkflowexecution": {
    "Resources": [
     "domain"
    ]
   },
   "undeprecateactivitytype": {
    "Resources": [
     "domain"
    ]
   },
   "undeprecatedomain": {
    "Resources": [
     "domain"
    ]
   },
   "undeprecateworkflowtype": {
    "Resources": [
     "domain"
    ]
   },
   "untagresource": {
    "Resources": [
     "domain"
    ]
   }
  },
  "Resources": {
   "domain": {
    "ARNFormats": [
     "arn:${Partition}:swf::${Account}:/domain/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "synthetics": {
  "Actions": {
   "associateresource": {
    "Resources": [
     "group"
    ]
   },
   "createcanary": {},
   "creategroup": {},
   "deletecanary": {
    "Resources": [
     "canary"
    ]
   },
   "deletegroup": {
    "Resources": [
     "group"
    ]
   },
   "describecanaries": {},
   "describecanarieslastrun": {},
   "describeruntimeversions": {},
   "disassociateresource": {
    "Resources": [
     "group"
    ]
   },
   "getcanary": {
    "Resources": [
     "canary"
    ]
   },
   "getcanaryruns": {
    "Resources": [
     "canary"
    ]
   },
   "getgroup": {
    "Resources": [
     "group"
    ]
   },
   "listassociatedgroups": {
    "Resources": [
     "canary"
    ]
   },
   "listgroupresources": {
    "Resources": [
     "group"
    ]
   },
   "listgroups": {},
   "listtagsforresource": {
    "Resources": [
     "canary",
     "group"
    ]
   },
   "startcanary": {
    "Resources": [
     "canary"
    ]
   },
   "stopcanary": {
    "Resources": [
     "canary"
    ]
   },
   "tagresource": {
    "Resources": [
     "canary",
     "group"
    ]
   },
   "untagresource": {
    "Resources": [
     "canary",
     "group"
    ]
   },
   "updatecanary": {
    "Resources": [
     "canary"
    ]
   }
  },
  "Resources": {
   "canary": {
    "ARNFormats": [
     "arn:${Partition}:synthetics:${Region}:${Account}:canary:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "group": {
    "ARNFormats": [
     "arn:${Partition}:synthetics:${Region}:${Account}:group:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "tag": {
  "Actions": {
   "describereportcreation": {},
   "getcompliancesummary": {},
   "getresources": {},
   "gettagkeys": {},
   "gettagvalues": {},
   "startreportcreation": {},
   "tagresources": {},
   "untagresources": {}
  },
  "Resources": {}
 },
 "tax": {
  "Actions": {
   "batchdeletetaxregistration": {},
   "batchputtaxregistration": {},
   "deletesupplementaltaxregistration": {},
   "deletetaxregistration": {},
   "getexemptions": {},
   "gettaxinforeportingdocument": {},
   "gettaxinheritance": {},
   "gettaxinterview": {},
   "gettaxregistration": {},
   "gettaxregistrationdocument": {},
   "listsupplementaltaxregistrations": {},
   "listtaxregistrations": {},
   "putsupplementaltaxregistration": {},
   "puttaxinheritance": {},
   "puttaxinterview": {},
   "puttaxregistration": {},
   "updateexemptions": {}
  },
  "Resources": {}
 },
 "textract": {
  "Actions": {
   "analyzedocument": {},
   "analyzeexpense": {},
   "analyzeid": {},
   "createadapter": {},
   "createadapterversion": {
    "Resources": [
     "adapter"
    ]
   },
   "deleteadapter": {
    "Resources": [
     "adapter"
    ]
   },
   "deleteadapterversion": {
    "Resources": [
     "adapterversion"
    ]
   },
   "detectdocumenttext": {},
   "getadapter": {
    "Resources": [
     "adapter"
    ]
   },
   "getadapterversion": {
    "Resources": [
     "adapterversion"
    ]
   },
   "getdocumentanalysis": {},
   "getdocumenttextdetection": {},
   "getexpenseanalysis": {},
   "getlendinganalysis": {},
   "getlendinganalysissummary": {},
   "listadapters": {},
   "listadapterversions": {},
   "listtagsforresource": {
    "Resources": [
     "adapter",
     "adapterversion"
    ]
   },
   "startdocumentanalysis": {},
   "startdocumenttextdetection": {},
   "startexpenseanalysis": {},
   "startlendinganalysis": {},
   "tagresource": {
    "Resources": [
     "adapter",
     "adapterversion"
    ]
   },
   "untagresource": {
    "Resources": [
     "adapter",
     "adapterversion"
    ]
   },
   "updateadapter": {
    "Resources": [
     "adapter"
    ]
   }
  },
  "Resources": {
   "adapter": {
    "ARNFormats": [
     "arn:${Partition}:textract:${Region}:${Account}:/adapters/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "adapterversion": {
    "ARNFormats": [
     "arn:${Partition}:textract:${Region}:${Account}:/adapters/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "thinclient": {
  "Actions": {
   "createenvironment": {},
   "deletedevice": {
    "Resources": [
     "device"
    ]
   },
   "deleteenvironment": {
    "Resources": [
     "environment"
    ]
   },
   "deregisterdevice": {
    "Resources": [
     "device"
    ]
   },
   "getdevice": {
    "Resources": [
     "device"
    ]
   },
   "getdevicedetails": {
    "Resources": [
     "device"
    ]
   },
   "getenvironment": {
    "Resources": [
     "environment"
    ]
   },
   "getsoftwareset": {
    "Resources": [
     "softwareset"
    ]
   },
   "listdevices": {},
   "listdevicesessions": {
    "Resources": [
     "device"
    ]
   },
   "listenvironments": {},
   "listsoftwaresets": {},
   "listtagsforresource": {
    "Resources": [
     "device",
     "environment",
     "softwareset"
    ]
   },
   "tagresource": {
    "Resources": [
     "device",
     "environment",
     "softwareset"
    ]
   },
   "untagresource": {
    "Resources": [
     "device",
     "environment",
     "softwareset"
    ]
   },
   "updatedevice": {
    "Resources": [
     "device"
    ]
   },
   "updateenvironment": {
    "Resources": [
     "environment"
    ]
   },
   "updatesoftwareset": {
    "Resources": [
     "softwareset"
    ]
   }
  },
  "Resources": {
   "device": {
    "ARNFormats": [
     "arn:${Partition}:thinclient:${Region}:${Account}:device/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "environment": {
    "ARNFormats": [
     "arn:${Partition}:thinclient:${Region}:${Account}:environment/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "softwareset": {
    "ARNFormats": [
     "arn:${Partition}:thinclient:${Region}:${Account}:softwareset/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "timestream": {
  "Actions": {
   "cancelquery": {},
   "createbatchloadtask": {
    "Resources": [
     "table"
    ]
   },
   "createdatabase": {
    "Resources": [
     "database"
    ]
   },
   "createscheduledquery": {},
   "createtable": {
    "Resources": [
     "table"
    ]
   },
   "deletedatabase": {
    "Resources": [
     "database"
    ]
   },
   "deletescheduledquery": {
    "Resources": [
     "scheduled-query"
    ]
   },
   "deletetable": {
    "Resources": [
     "table"
    ]
   },
   "describeaccountsettings": {},
   "describebatchloadtask": {},
   "describedatabase": {
    "Resources": [
     "database"
    ]
   },
   "describeendpoints": {},
   "describescheduledquery": {
    "Resources": [
     "scheduled-query"
    ]
   },
   "describetable": {
    "Resources": [
     "table"
    ]
   },
   "executescheduledquery": {
    "Resources": [
     "scheduled-query"
    ]
   },
   "getawsbackupstatus": {},
   "getawsrestorestatus": {},
   "listbatchloadtasks": {},
   "listdatabases": {},
   "listmeasures": {
    "Resources": [
     "table"
    ]
   },
   "listscheduledqueries": {},
   "listtables": {
    "Resources": [
     "database"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "database",
     "scheduled-query",
     "table"
    ]
   },
   "preparequery": {
    "Resources": [
     "table"
    ]
   },
   "resumebatchloadtask": {},
   "select": {
    "Resources": [
     "table"
    ]
   },
   "selectvalues": {},
   "startawsbackupjob": {
    "Resources": [
     "table"
    ]
   },
   "startawsrestorejob": {
    "Resources": [
     "table"
    ]
   },
   "tagresource": {
    "Resources": [
     "database",
     "scheduled-query",
     "table"
    ]
   },
   "unload": {
    "Resources": [
     "table"
    ]
   },
   "untagresource": {
    "Resources": [
     "database",
     "scheduled-query",
     "table"
    ]
   },
   "updateaccountsettings": {},
   "updatedatabase": {
    "Resources": [
     "database"
    ]
   },
   "updatescheduledquery": {
    "Resources": [
     "scheduled-query"
    ]
   },
   "updatetable": {
    "Resources": [
     "table"
    ]
   },
   "writerecords": {
    "Resources": [
     "table"
    ]
   }
  },
  "Resources": {
   "database": {
    "ARNFormats": [
     "arn:${Partition}:timestream:${Region}:${Account}:database/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "scheduled-query": {
    "ARNFormats": [
     "arn:${Partition}:timestream:${Region}:${Account}:scheduled-query/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "table": {
    "ARNFormats": [
     "arn:${Partition}:timestream:${Region}:${Account}:database/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "timestream-influxdb": {
  "Actions": {
   "createdbcluster": {
    "Resources": [
     "db-parameter-group"
    ]
   },
   "createdbinstance": {
    "Resources": [
     "db-parameter-group"
    ]
   },
   "createdbparametergroup": {},
   "deletedbcluster": {
    "Resources": [
     "db-cluster"
    ]
   },
   "deletedbinstance": {
    "Resources": [
     "db-instance"
    ]
   },
   "getdbcluster": {
    "Resources": [
     "db-cluster"
    ]
   },
   "getdbinstance": {
    "Resources": [
     "db-instance"
    ]
   },
   "getdbparametergroup": {
    "Resources": [
     "db-parameter-group"
    ]
   },
   "listdbclusters": {},
   "listdbinstances": {},
   "listdbinstancesforcluster": {
    "Resources": [
     "db-cluster"
    ]
   },
   "listdbparametergroups": {},
   "listtagsforresource": {
    "Resources": [
     "db-cluster",
     "db-instance",
     "db-parameter-group"
    ]
   },
   "tagresource": {
    "Resources": [
     "db-cluster",
     "db-instance",
     "db-parameter-group"
    ]
   },
   "untagresource": {
    "Resources": [
     "db-cluster",
     "db-instance",
     "db-parameter-group"
    ]
   },
   "updatedbcluster": {
    "Resources": [
     "db-cluster",
     "db-parameter-group"
    ]
   },
   "updatedbinstance": {
    "Resources": [
     "db-instance",
     "db-parameter-group"
    ]
   }
  },
  "Resources": {
   "db-cluster": {
    "ARNFormats": [
     "arn:${Partition}:timestream-influxdb:${Region}:${Account}:db-cluster/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "db-instance": {
    "ARNFormats": [
     "arn:${Partition}:timestream-influxdb:${Region}:${Account}:db-instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "db-parameter-group": {
    "ARNFormats": [
     "arn:${Partition}:timestream-influxdb:${Region}:${Account}:db-parameter-group/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "tiros": {
  "Actions": {
   "createquery": {},
   "extendquery": {},
   "getqueryanswer": {},
   "getqueryexplanation": {},
   "getqueryextensionaccounts": {}
  },
  "Resources": {}
 },
 "tnb": {
  "Actions": {
   "cancelsolnetworkoperation": {
    "Resources": [
     "network-operation"
    ]
   },
   "createsolfunctionpackage": {
    "Resources": [
     "function-package"
    ]
   },
   "createsolnetworkinstance": {
    "Resources": [
     "network-instance",
     "network-package"
    ]
   },
   "createsolnetworkpackage": {
    "Resources": [
     "network-package"
    ]
   },
   "deletesolfunctionpackage": {
    "Resources": [
     "function-package"
    ]
   },
   "deletesolnetworkinstance": {
    "Resources": [
     "network-instance"
    ]
   },
   "deletesolnetworkpackage": {
    "Resources": [
     "network-package"
    ]
   },
   "getsolfunctioninstance": {
    "Resources": [
     "function-instance"
    ]
   },
   "getsolfunctionpackage": {
    "Resources": [
     "function-package"
    ]
   },
   "getsolfunctionpackagecontent": {
    "Resources": [
     "function-package"
    ]
   },
   "getsolfunctionpackagedescriptor": {
    "Resources": [
     "function-package"
    ]
   },
   "getsolnetworkinstance": {
    "Resources": [
     "network-instance"
    ]
   },
   "getsolnetworkoperation": {
    "Resources": [
     "network-operation"
    ]
   },
   "getsolnetworkpackage": {
    "Resources": [
     "network-package"
    ]
   },
   "getsolnetworkpackagecontent": {
    "Resources": [
     "network-package"
    ]
   },
   "getsolnetworkpackagedescriptor": {
    "Resources": [
     "network-package"
    ]
   },
   "instantiatesolnetworkinstance": {
    "Resources": [
     "network-instance"
    ]
   },
   "listsolfunctioninstances": {
    "Resources": [
     "function-instance"
    ]
   },
   "listsolfunctionpackages": {
    "Resources": [
     "function-package"
    ]
   },
   "listsolnetworkinstances": {
    "Resources": [
     "network-instance"
    ]
   },
   "listsolnetworkoperations": {
    "Resources": [
     "network-operation"
    ]
   },
   "listsolnetworkpackages": {
    "Resources": [
     "network-package"
    ]
   },
   "listtagsforresource": {},
   "putsolfunctionpackagecontent": {
    "Resources": [
     "function-package"
    ]
   },
   "putsolnetworkpackagecontent": {
    "Resources": [
     "network-package"
    ]
   },
   "tagresource": {
    "Resources": [
     "function-instance",
     "function-package",
     "network-instance",
     "network-operation",
     "network-package"
    ]
   },
   "terminatesolnetworkinstance": {
    "Resources": [
     "network-instance"
    ]
   },
   "untagresource": {
    "Resources": [
     "function-instance",
     "function-package",
     "network-instance",
     "network-operation",
     "network-package"
    ]
   },
   "updatesolfunctionpackage": {
    "Resources": [
     "function-package"
    ]
   },
   "updatesolnetworkinstance": {
    "Resources": [
     "function-instance",
     "network-instance"
    ]
   },
   "updatesolnetworkpackage": {
    "Resources": [
     "network-package"
    ]
   },
   "validatesolfunctionpackagecontent": {
    "Resources": [
     "function-package"
    ]
   },
   "validatesolnetworkpackagecontent": {
    "Resources": [
     "network-package"
    ]
   }
  },
  "Resources": {
   "function-instance": {
    "ARNFormats": [
     "arn:${Partition}:tnb:${Region}:${Account}:function-instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "function-package": {
    "ARNFormats": [
     "arn:${Partition}:tnb:${Region}:${Account}:function-package/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "network-instance": {
    "ARNFormats": [
     "arn:${Partition}:tnb:${Region}:${Account}:network-instance/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "network-operation": {
    "ARNFormats": [
     "arn:${Partition}:tnb:${Region}:${Account}:network-operation/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "network-package": {
    "ARNFormats": [
     "arn:${Partition}:tnb:${Region}:${Account}:network-package/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "transcribe": {
  "Actions": {
   "createcallanalyticscategory": {},
   "createlanguagemodel": {},
   "createmedicalvocabulary": {},
   "createvocabulary": {},
   "createvocabularyfilter": {},
   "deletecallanalyticscategory": {
    "Resources": [
     "callanalyticscategory"
    ]
   },
   "deletecallanalyticsjob": {
    "Resources": [
     "callanalyticsjob"
    ]
   },
   "deletelanguagemodel": {
    "Resources": [
     "languagemodel"
    ]
   },
   "deletemedicalscribejob": {
    "Resources": [
     "medicalscribejob"
    ]
   },
   "deletemedicaltranscriptionjob": {
    "Resources": [
     "medicaltranscriptionjob"
    ]
   },
   "deletemedicalvocabulary": {
    "Resources": [
     "medicalvocabulary"
    ]
   },
   "deletetranscriptionjob": {
    "Resources": [
     "transcriptionjob"
    ]
   },
   "deletevocabulary": {
    "Resources": [
     "vocabulary"
    ]
   },
   "deletevocabularyfilter": {
    "Resources": [
     "vocabularyfilter"
    ]
   },
   "describelanguagemodel": {
    "Resources": [
     "languagemodel"
    ]
   },
   "getcallanalyticscategory": {
    "Resources": [
     "callanalyticscategory"
    ]
   },
   "getcallanalyticsjob": {
    "Resources": [
     "callanalyticsjob"
    ]
   },
   "getmedicalscribejob": {
    "Resources": [
     "medicalscribejob"
    ]
   },
   "getmedicalscribestream": {},
   "getmedicaltranscriptionjob": {
    "Resources": [
     "medicaltranscriptionjob"
    ]
   },
   "getmedicalvocabulary": {
    "Resources": [
     "medicalvocabulary"
    ]
   },
   "gettranscriptionjob": {
    "Resources": [
     "transcriptionjob"
    ]
   },
   "getvocabulary": {
    "Resources": [
     "vocabulary"
    ]
   },
   "getvocabularyfilter": {
    "Resources": [
     "vocabularyfilter"
    ]
   },
   "listcallanalyticscategories": {},
   "listcallanalyticsjobs": {},
   "listlanguagemodels": {},
   "listmedicalscribejobs": {},
   "listmedicaltranscriptionjobs": {},
   "listmedicalvocabularies": {},
   "listtagsforresource": {},
   "listtranscriptionjobs": {},
   "listvocabularies": {},
   "listvocabularyfilters": {},
   "startcallanalyticsjob": {},
   "startcallanalyticsstreamtranscription": {},
   "startcallanalyticsstreamtranscriptionwebsocket": {},
   "startmedicalscribejob": {},
   "startmedicalscribestream": {},
   "startmedicalstreamtranscription": {},
   "startmedicalstreamtranscriptionwebsocket": {},
   "startmedicaltranscriptionjob": {},
   "startstreamtranscription": {},
   "startstreamtranscriptionwebsocket": {},
   "starttranscriptionjob": {},
   "tagresource": {},
   "untagresource": {},
   "updatecallanalyticscategory": {
    "Resources": [
     "callanalyticscategory"
    ]
   },
   "updatemedicalvocabulary": {
    "Resources": [
     "medicalvocabulary"
    ]
   },
   "updatevocabulary": {
    "Resources": [
     "vocabulary"
    ]
   },
   "updatevocabularyfilter": {
    "Resources": [
     "vocabularyfilter"
    ]
   }
  },
  "Resources": {
   "callanalyticscategory": {
    "ARNFormats": [
     "arn:${Partition}:transcribe:${Region}:${Account}:analytics-category/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "callanalyticsjob": {
    "ARNFormats": [
     "arn:${Partition}:transcribe:${Region}:${Account}:analytics/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "languagemodel": {
    "ARNFormats": [
     "arn:${Partition}:transcribe:${Region}:${Account}:language-model/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "medicalscribejob": {
    "ARNFormats": [
     "arn:${Partition}:transcribe:${Region}:${Account}:medical-scribe-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "medicaltranscriptionjob": {
    "ARNFormats": [
     "arn:${Partition}:transcribe:${Region}:${Account}:medical-transcription-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "medicalvocabulary": {
    "ARNFormats": [
     "arn:${Partition}:transcribe:${Region}:${Account}:medical-vocabulary/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "transcriptionjob": {
    "ARNFormats": [
     "arn:${Partition}:transcribe:${Region}:${Account}:transcription-job/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "vocabulary": {
    "ARNFormats": [
     "arn:${Partition}:transcribe:${Region}:${Account}:vocabulary/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "vocabularyfilter": {
    "ARNFormats": [
     "arn:${Partition}:transcribe:${Region}:${Account}:vocabulary-filter/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "transfer": {
  "Actions": {
   "createaccess": {
    "Resources": [
     "server"
    ]
   },
   "createagreement": {
    "Resources": [
     "server"
    ]
   },
   "createconnector": {},
   "createprofile": {},
   "createserver": {},
   "createuser": {
    "Resources": [
     "server"
    ]
   },
   "createwebapp": {},
   "createworkflow": {},
   "deleteaccess": {
    "Resources": [
     "server"
    ]
   },
   "deleteagreement": {
    "Resources": [
     "agreement"
    ]
   },
   "deletecertificate": {
    "Resources": [
     "certificate"
    ]
   },
   "deleteconnector": {
    "Resources": [
     "connector"
    ]
   },
   "deletehostkey": {
    "Resources": [
     "host-key"
    ]
   },
   "deleteprofile": {
    "Resources": [
     "profile"
    ]
   },
   "deleteserver": {
    "Resources": [
     "server"
    ]
   },
   "deletesshpublickey": {
    "Resources": [
     "user"
    ]
   },
   "deleteuser": {
    "Resources": [
     "user"
    ]
   },
   "deletewebapp": {
    "Resources": [
     "webapp"
    ]
   },
   "deletewebappcustomization": {
    "Resources": [
     "webapp"
    ]
   },
   "deleteworkflow": {
    "Resources": [
     "workflow"
    ]
   },
   "describeaccess": {
    "Resources": [
     "server"
    ]
   },
   "describeagreement": {
    "Resources": [
     "agreement"
    ]
   },
   "describecertificate": {
    "Resources": [
     "certificate"
    ]
   },
   "describeconnector": {
    "Resources": [
     "connector"
    ]
   },
   "describeexecution": {
    "Resources": [
     "workflow"
    ]
   },
   "describehostkey": {
    "Resources": [
     "host-key"
    ]
   },
   "describeprofile": {
    "Resources": [
     "profile"
    ]
   },
   "describesecuritypolicy": {},
   "describeserver": {
    "Resources": [
     "server"
    ]
   },
   "describeuser": {
    "Resources": [
     "user"
    ]
   },
   "describewebapp": {
    "Resources": [
     "webapp"
    ]
   },
   "describewebappcustomization": {
    "Resources": [
     "webapp"
    ]
   },
   "describeworkflow": {
    "Resources": [
     "workflow"
    ]
   },
   "importcertificate": {},
   "importhostkey": {
    "Resources": [
     "server"
    ]
   },
   "importsshpublickey": {
    "Resources": [
     "user"
    ]
   },
   "listaccesses": {
    "Resources": [
     "server"
    ]
   },
   "listagreements": {
    "Resources": [
     "server"
    ]
   },
   "listcertificates": {},
   "listconnectors": {},
   "listexecutions": {
    "Resources": [
     "workflow"
    ]
   },
   "listfiletransferresults": {
    "Resources": [
     "connector"
    ]
   },
   "listhostkeys": {
    "Resources": [
     "server"
    ]
   },
   "listprofiles": {},
   "listsecuritypolicies": {},
   "listservers": {},
   "listtagsforresource": {
    "Resources": [
     "agreement",
     "certificate",
     "connector",
     "host-key",
     "profile",
     "server",
     "user",
     "workflow"
    ]
   },
   "listusers": {
    "Resources": [
     "server"
    ]
   },
   "listwebapps": {},
   "listworkflows": {},
   "sendworkflowstepstate": {
    "Resources": [
     "workflow"
    ]
   },
   "startdirectorylisting": {
    "Resources": [
     "connector"
    ]
   },
   "startfiletransfer": {
    "Resources": [
     "connector"
    ]
   },
   "startserver": {
    "Resources": [
     "server"
    ]
   },
   "stopserver": {
    "Resources": [
     "server"
    ]
   },
   "tagresource": {
    "Resources": [
     "agreement",
     "certificate",
     "connector",
     "host-key",
     "profile",
     "server",
     "user",
     "webapp",
     "workflow"
    ]
   },
   "testconnection": {
    "Resources": [
     "connector"
    ]
   },
   "testidentityprovider": {
    "Resources": [
     "user"
    ]
   },
   "untagresource": {
    "Resources": [
     "agreement",
     "certificate",
     "connector",
     "host-key",
     "profile",
     "server",
     "user",
     "webapp",
     "workflow"
    ]
   },
   "updateaccess": {},
   "updateagreement": {
    "Resources": [
     "agreement"
    ]
   },
   "updatecertificate": {
    "Resources": [
     "certificate"
    ]
   },
   "updateconnector": {
    "Resources": [
     "connector"
    ]
   },
   "updatehostkey": {
    "Resources": [
     "host-key"
    ]
   },
   "updateprofile": {
    "Resources": [
     "profile"
    ]
   },
   "updateserver": {
    "Resources": [
     "server"
    ]
   },
   "updateuser": {
    "Resources": [
     "user"
    ]
   },
   "updatewebapp": {
    "Resources": [
     "webapp"
    ]
   },
   "updatewebappcustomization": {
    "Resources": [
     "webapp"
    ]
   }
  },
  "Resources": {
   "agreement": {
    "ARNFormats": [
     "arn:${Partition}:transfer:${Region}:${Account}:agreement/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "certificate": {
    "ARNFormats": [
     "arn:${Partition}:transfer:${Region}:${Account}:certificate/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "connector": {
    "ARNFormats": [
     "arn:${Partition}:transfer:${Region}:${Account}:connector/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "host-key": {
    "ARNFormats": [
     "arn:${Partition}:transfer:${Region}:${Account}:host-key/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "profile": {
    "ARNFormats": [
     "arn:${Partition}:transfer:${Region}:${Account}:profile/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "server": {
    "ARNFormats": [
     "arn:${Partition}:transfer:${Region}:${Account}:server/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "user": {
    "ARNFormats": [
     "arn:${Partition}:transfer:${Region}:${Account}:user/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "webapp": {
    "ARNFormats": [
     "arn:${Partition}:transfer:${Region}:${Account}:webapp/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "workflow": {
    "ARNFormats": [
     "arn:${Partition}:transfer:${Region}:${Account}:workflow/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "translate": {
  "Actions": {
   "createparalleldata": {
    "Resources": [
     "parallel-data"
    ]
   },
   "deleteparalleldata": {
    "Resources": [
     "parallel-data"
    ]
   },
   "deleteterminology": {
    "Resources": [
     "terminology"
    ]
   },
   "describetexttranslationjob": {},
   "getparalleldata": {
    "Resources": [
     "parallel-data"
    ]
   },
   "getterminology": {
    "Resources": [
     "terminology"
    ]
   },
   "importterminology": {
    "Resources": [
     "terminology"
    ]
   },
   "listlanguages": {},
   "listparalleldata": {},
   "listtagsforresource": {
    "Resources": [
     "parallel-data",
     "terminology"
    ]
   },
   "listterminologies": {},
   "listtexttranslationjobs": {},
   "starttexttranslationjob": {
    "Resources": [
     "parallel-data",
     "terminology"
    ]
   },
   "stoptexttranslationjob": {},
   "tagresource": {
    "Resources": [
     "parallel-data",
     "terminology"
    ]
   },
   "translatedocument": {
    "Resources": [
     "terminology"
    ]
   },
   "translatetext": {
    "Resources": [
     "parallel-data",
     "terminology"
    ]
   },
   "untagresource": {
    "Resources": [
     "parallel-data",
     "terminology"
    ]
   },
   "updateparalleldata": {
    "Resources": [
     "parallel-data"
    ]
   }
  },
  "Resources": {
   "parallel-data": {
    "ARNFormats": [
     "arn:${Partition}:translate:${Region}:${Account}:parallel-data/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "terminology": {
    "ARNFormats": [
     "arn:${Partition}:translate:${Region}:${Account}:terminology/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "trustedadvisor": {
  "Actions": {
   "batchupdaterecommendationresourceexclusion": {},
   "createengagement": {},
   "createengagementattachment": {},
   "createengagementcommunication": {},
   "deletenotificationconfigurationfordelegatedadmin": {},
   "describeaccount": {},
   "describeaccountaccess": {},
   "describecheckitems": {
    "Resources": [
     "checks"
    ]
   },
   "describecheckrefreshstatuses": {
    "Resources": [
     "checks"
    ]
   },
   "describechecks": {},
   "describecheckstatushistorychanges": {
    "Resources": [
     "checks"
    ]
   },
   "describechecksummaries": {
    "Resources": [
     "checks"
    ]
   },
   "describenotificationconfigurations": {},
   "describenotificationpreferences": {},
   "describeorganization": {},
   "describeorganizationaccounts": {},
   "describereports": {},
   "describerisk": {},
   "describeriskresources": {},
   "describerisks": {},
   "describeservicemetadata": {},
   "downloadrisk": {},
   "excludecheckitems": {
    "Resources": [
     "checks"
    ]
   },
   "generatereport": {},
   "getengagement": {},
   "getengagementattachment": {},
   "getengagementtype": {},
   "getorganizationrecommendation": {},
   "getrecommendation": {},
   "includecheckitems": {
    "Resources": [
     "checks"
    ]
   },
   "listaccountsforparent": {},
   "listchecks": {},
   "listengagementcommunications": {},
   "listengagements": {},
   "listengagementtypes": {},
   "listorganizationalunitsforparent": {},
   "listorganizationrecommendationaccounts": {},
   "listorganizationrecommendationresources": {},
   "listorganizationrecommendations": {},
   "listrecommendationresources": {},
   "listrecommendations": {},
   "listroots": {},
   "refreshcheck": {
    "Resources": [
     "checks"
    ]
   },
   "setaccountaccess": {},
   "setorganizationaccess": {},
   "updateengagement": {},
   "updateengagementstatus": {},
   "updatenotificationconfigurations": {},
   "updatenotificationpreferences": {},
   "updateorganizationrecommendationlifecycle": {},
   "updaterecommendationlifecycle": {},
   "updateriskstatus": {}
  },
  "Resources": {
   "checks": {
    "ARNFormats": [
     "arn:${Partition}:trustedadvisor:${Region}:${Account}:checks/.*"
    ]
   }
  }
 },
 "ts": {
  "Actions": {
   "getexecution": {
    "Resources": [
     "execution"
    ]
   },
   "getexecutionoutput": {
    "Resources": [
     "execution"
    ]
   },
   "gettool": {
    "Resources": [
     "tool"
    ]
   },
   "listexecutions": {},
   "listtagsforresource": {
    "Resources": [
     "execution"
    ]
   },
   "listtools": {},
   "startexecution": {},
   "tagresource": {
    "Resources": [
     "execution"
    ]
   },
   "untagresource": {
    "Resources": [
     "execution"
    ]
   }
  },
  "Resources": {
   "execution": {
    "ARNFormats": [
     "arn:${Partition}:ts::${Account}:execution/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "tool": {
    "ARNFormats": [
     "arn:${Partition}:ts::aws:tool/.*"
    ]
   }
  }
 },
 "user-subscriptions": {
  "Actions": {
   "createclaim": {},
   "deleteclaim": {},
   "listapplicationclaims": {},
   "listclaims": {},
   "listusersubscriptions": {},
   "updateclaim": {}
  },
  "Resources": {}
 },
 "vendor-insights": {
  "Actions": {
   "activatesecurityprofile": {
    "Resources": [
     "SecurityProfile"
    ]
   },
   "associatedatasource": {
    "Resources": [
     "SecurityProfile"
    ]
   },
   "createdatasource": {},
   "createsecurityprofile": {},
   "deactivatesecurityprofile": {
    "Resources": [
     "SecurityProfile"
    ]
   },
   "deletedatasource": {
    "Resources": [
     "DataSource"
    ]
   },
   "disassociatedatasource": {
    "Resources": [
     "SecurityProfile"
    ]
   },
   "getdatasource": {
    "Resources": [
     "DataSource"
    ]
   },
   "getentitledsecurityprofilesnapshot": {
    "Resources": [
     "SecurityProfile"
    ]
   },
   "getprofileaccessterms": {},
   "getsecurityprofile": {
    "Resources": [
     "SecurityProfile"
    ]
   },
   "getsecurityprofilesnapshot": {
    "Resources": [
     "SecurityProfile"
    ]
   },
   "listdatasources": {},
   "listentitledsecurityprofiles": {},
   "listentitledsecurityprofilesnapshots": {
    "Resources": [
     "SecurityProfile"
    ]
   },
   "listsecurityprofiles": {},
   "listsecurityprofilesnapshots": {
    "Resources": [
     "SecurityProfile"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "DataSource",
     "SecurityProfile"
    ]
   },
   "tagresource": {
    "Resources": [
     "DataSource",
     "SecurityProfile"
    ]
   },
   "untagresource": {
    "Resources": [
     "DataSource",
     "SecurityProfile"
    ]
   },
   "updatedatasource": {
    "Resources": [
     "DataSource"
    ]
   },
   "updatesecurityprofile": {
    "Resources": [
     "SecurityProfile"
    ]
   },
   "updatesecurityprofilesnapshotcreationconfiguration": {
    "Resources": [
     "SecurityProfile"
    ]
   },
   "updatesecurityprofilesnapshotreleaseconfiguration": {
    "Resources": [
     "SecurityProfile"
    ]
   }
  },
  "Resources": {
   "datasource": {
    "ARNFormats": [
     "arn:${Partition}:vendor-insights:::data-source:.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys"
    ]
   },
   "securityprofile": {
    "ARNFormats": [
     "arn:${Partition}:vendor-insights:::security-profile:.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys"
    ]
   }
  }
 },
 "verified-access": {
  "Actions": {
   "allowverifiedaccess": {}
  },
  "Resources": {}
 },
 "verifiedpermissions": {
  "Actions": {
   "createidentitysource": {
    "Resources": [
     "policy-store"
    ]
   },
   "createpolicy": {
    "Resources": [
     "policy-store"
    ]
   },
   "createpolicystore": {},
   "createpolicytemplate": {
    "Resources": [
     "policy-store"
    ]
   },
   "deleteidentitysource": {
    "Resources": [
     "policy-store"
    ]
   },
   "deletepolicy": {
    "Resources": [
     "policy-store"
    ]
   },
   "deletepolicystore": {
    "Resources": [
     "policy-store"
    ]
   },
   "deletepolicytemplate": {
    "Resources": [
     "policy-store"
    ]
   },
   "getidentitysource": {
    "Resources": [
     "policy-store"
    ]
   },
   "getpolicy": {
    "Resources": [
     "policy-store"
    ]
   },
   "getpolicystore": {
    "Resources": [
     "policy-store"
    ]
   },
   "getpolicytemplate": {
    "Resources": [
     "policy-store"
    ]
   },
   "getschema": {
    "Resources": [
     "policy-store"
    ]
   },
   "isauthorized": {
    "Resources": [
     "policy-store"
    ]
   },
   "isauthorizedwithtoken": {
    "Resources": [
     "policy-store"
    ]
   },
   "listidentitysources": {
    "Resources": [
     "policy-store"
    ]
   },
   "listpolicies": {
    "Resources": [
     "policy-store"
    ]
   },
   "listpolicystores": {},
   "listpolicytemplates": {
    "Resources": [
     "policy-store"
    ]
   },
   "putschema": {
    "Resources": [
     "policy-store"
    ]
   },
   "updateidentitysource": {
    "Resources": [
     "policy-store"
    ]
   },
   "updatepolicy": {
    "Resources": [
     "policy-store"
    ]
   },
   "updatepolicystore": {
    "Resources": [
     "policy-store"
    ]
   },
   "updatepolicytemplate": {
    "Resources": [
     "policy-store"
    ]
   }
  },
  "Resources": {
   "policy-store": {
    "ARNFormats": [
     "arn:${Partition}:verifiedpermissions::${Account}:policy-store/.*"
    ]
   }
  }
 },
 "voiceid": {
  "Actions": {
   "associatefraudster": {
    "Resources": [
     "domain"
    ]
   },
   "createdomain": {},
   "createwatchlist": {
    "Resources": [
     "domain"
    ]
   },
   "deletedomain": {
    "Resources": [
     "domain"
    ]
   },
   "deletefraudster": {
    "Resources": [
     "domain"
    ]
   },
   "deletespeaker": {
    "Resources": [
     "domain"
    ]
   },
   "deletewatchlist": {
    "Resources": [
     "domain"
    ]
   },
   "describecomplianceconsent": {},
   "describedomain": {
    "Resources": [
     "domain"
    ]
   },
   "describefraudster": {
    "Resources": [
     "domain"
    ]
   },
   "describefraudsterregistrationjob": {
    "Resources": [
     "domain"
    ]
   },
   "describespeaker": {
    "Resources": [
     "domain"
    ]
   },
   "describespeakerenrollmentjob": {
    "Resources": [
     "domain"
    ]
   },
   "describewatchlist": {
    "Resources": [
     "domain"
    ]
   },
   "disassociatefraudster": {
    "Resources": [
     "domain"
    ]
   },
   "evaluatesession": {
    "Resources": [
     "domain"
    ]
   },
   "listdomains": {},
   "listfraudsterregistrationjobs": {
    "Resources": [
     "domain"
    ]
   },
   "listfraudsters": {
    "Resources": [
     "domain"
    ]
   },
   "listspeakerenrollmentjobs": {
    "Resources": [
     "domain"
    ]
   },
   "listspeakers": {
    "Resources": [
     "domain"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "domain"
    ]
   },
   "listwatchlists": {
    "Resources": [
     "domain"
    ]
   },
   "optoutspeaker": {
    "Resources": [
     "domain"
    ]
   },
   "registercomplianceconsent": {},
   "startfraudsterregistrationjob": {
    "Resources": [
     "domain"
    ]
   },
   "startspeakerenrollmentjob": {
    "Resources": [
     "domain"
    ]
   },
   "tagresource": {
    "Resources": [
     "domain"
    ]
   },
   "untagresource": {
    "Resources": [
     "domain"
    ]
   },
   "updatedomain": {
    "Resources": [
     "domain"
    ]
   },
   "updatewatchlist": {
    "Resources": [
     "domain"
    ]
   }
  },
  "Resources": {
   "domain": {
    "ARNFormats": [
     "arn:${Partition}:voiceid:${Region}:${Account}:domain/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "vpc-lattice": {
  "Actions": {
   "associateviaawsservice-eventsandstates": {},
   "createaccesslogsubscription": {
    "Resources": [
     "AccessLogSubscription",
     "ResourceConfiguration",
     "Service",
     "ServiceNetwork"
    ]
   },
   "createlistener": {
    "Resources": [
     "Listener"
    ]
   },
   "createresourceconfiguration": {
    "Resources": [
     "ResourceConfiguration",
     "ResourceGateway"
    ]
   },
   "createresourcegateway": {
    "Resources": [
     "ResourceGateway"
    ]
   },
   "createrule": {
    "Resources": [
     "Rule"
    ]
   },
   "createservice": {
    "Resources": [
     "Service"
    ]
   },
   "createservicenetwork": {
    "Resources": [
     "ServiceNetwork"
    ]
   },
   "createservicenetworkresourceassociation": {
    "Resources": [
     "ResourceConfiguration",
     "ServiceNetwork",
     "ServiceNetworkResourceAssociation"
    ]
   },
   "createservicenetworkserviceassociation": {
    "Resources": [
     "Service",
     "ServiceNetwork",
     "ServiceNetworkServiceAssociation"
    ]
   },
   "createservicenetworkvpcassociation": {
    "Resources": [
     "ServiceNetwork",
     "ServiceNetworkVpcAssociation"
    ]
   },
   "createservicenetworkvpcendpointassociation": {},
   "createtargetgroup": {
    "Resources": [
     "TargetGroup"
    ]
   },
   "deleteaccesslogsubscription": {
    "Resources": [
     "AccessLogSubscription"
    ]
   },
   "deleteauthpolicy": {
    "Resources": [
     "Service",
     "ServiceNetwork"
    ]
   },
   "deletelistener": {
    "Resources": [
     "Listener"
    ]
   },
   "deleteresourceconfiguration": {
    "Resources": [
     "ResourceConfiguration"
    ]
   },
   "deleteresourceendpointassociation": {
    "Resources": [
     "ResourceEndpointAssociation"
    ]
   },
   "deleteresourcegateway": {
    "Resources": [
     "ResourceGateway"
    ]
   },
   "deleteresourcepolicy": {
    "Resources": [
     "ResourceConfiguration",
     "Service",
     "ServiceNetwork"
    ]
   },
   "deleterule": {
    "Resources": [
     "Rule"
    ]
   },
   "deleteservice": {
    "Resources": [
     "Service"
    ]
   },
   "deleteservicenetwork": {
    "Resources": [
     "ServiceNetwork"
    ]
   },
   "deleteservicenetworkresourceassociation": {
    "Resources": [
     "ServiceNetworkResourceAssociation"
    ]
   },
   "deleteservicenetworkserviceassociation": {
    "Resources": [
     "ServiceNetworkServiceAssociation"
    ]
   },
   "deleteservicenetworkvpcassociation": {
    "Resources": [
     "ServiceNetworkVpcAssociation"
    ]
   },
   "deletetargetgroup": {
    "Resources": [
     "TargetGroup"
    ]
   },
   "deregistertargets": {
    "Resources": [
     "TargetGroup"
    ]
   },
   "getaccesslogsubscription": {
    "Resources": [
     "AccessLogSubscription"
    ]
   },
   "getauthpolicy": {
    "Resources": [
     "Service",
     "ServiceNetwork"
    ]
   },
   "getlistener": {
    "Resources": [
     "Listener"
    ]
   },
   "getresourceconfiguration": {
    "Resources": [
     "ResourceConfiguration"
    ]
   },
   "getresourcegateway": {
    "Resources": [
     "ResourceGateway"
    ]
   },
   "getresourcepolicy": {
    "Resources": [
     "ResourceConfiguration",
     "Service",
     "ServiceNetwork"
    ]
   },
   "getrule": {
    "Resources": [
     "Rule"
    ]
   },
   "getservice": {
    "Resources": [
     "Service"
    ]
   },
   "getservicenetwork": {
    "Resources": [
     "ServiceNetwork"
    ]
   },
   "getservicenetworkresourceassociation": {
    "Resources": [
     "ServiceNetworkResourceAssociation"
    ]
   },
   "getservicenetworkserviceassociation": {
    "Resources": [
     "ServiceNetworkServiceAssociation"
    ]
   },
   "getservicenetworkvpcassociation": {
    "Resources": [
     "ServiceNetworkVpcAssociation"
    ]
   },
   "gettargetgroup": {
    "Resources": [
     "TargetGroup"
    ]
   },
   "listaccesslogsubscriptions": {},
   "listlisteners": {},
   "listresourceconfigurations": {},
   "listresourceendpointassociations": {},
   "listresourcegateways": {},
   "listrules": {},
   "listservicenetworkresourceassociations": {},
   "listservicenetworks": {},
   "listservicenetworkserviceassociations": {},
   "listservicenetworkvpcassociations": {},
   "listservicenetworkvpcendpointassociations": {},
   "listservices": {},
   "listtagsforresource": {},
   "listtargetgroups": {},
   "listtargets": {
    "Resources": [
     "TargetGroup"
    ]
   },
   "putauthpolicy": {
    "Resources": [
     "Service",
     "ServiceNetwork"
    ]
   },
   "putresourcepolicy": {
    "Resources": [
     "ResourceConfiguration",
     "Service",
     "ServiceNetwork"
    ]
   },
   "registertargets": {
    "Resources": [
     "TargetGroup"
    ]
   },
   "tagresource": {
    "Resources": [
     "AccessLogSubscription",
     "Listener",
     "ResourceConfiguration",
     "ResourceEndpointAssociation",
     "ResourceGateway",
     "Rule",
     "Service",
     "ServiceNetwork",
     "ServiceNetworkResourceAssociation",
     "ServiceNetworkServiceAssociation",
     "ServiceNetworkVpcAssociation",
     "TargetGroup"
    ]
   },
   "untagresource": {
    "Resources": [
     "AccessLogSubscription",
     "Listener",
     "ResourceConfiguration",
     "ResourceEndpointAssociation",
     "ResourceGateway",
     "Rule",
     "Service",
     "ServiceNetwork",
     "ServiceNetworkResourceAssociation",
     "ServiceNetworkServiceAssociation",
     "ServiceNetworkVpcAssociation",
     "TargetGroup"
    ]
   },
   "updateaccesslogsubscription": {
    "Resources": [
     "AccessLogSubscription"
    ]
   },
   "updatelistener": {
    "Resources": [
     "Listener"
    ]
   },
   "updateresourceconfiguration": {
    "Resources": [
     "ResourceConfiguration"
    ]
   },
   "updateresourcegateway": {
    "Resources": [
     "ResourceGateway"
    ]
   },
   "updaterule": {
    "Resources": [
     "Rule"
    ]
   },
   "updateservice": {
    "Resources": [
     "Service"
    ]
   },
   "updateservicenetwork": {
    "Resources": [
     "ServiceNetwork"
    ]
   },
   "updateservicenetworkvpcassociation": {
    "Resources": [
     "ServiceNetworkVpcAssociation"
    ]
   },
   "updatetargetgroup": {
    "Resources": [
     "TargetGroup"
    ]
   }
  },
  "Resources": {
   "accesslogsubscription": {
    "ARNFormats": [
     "arn:${Partition}:vpc-lattice:${Region}:${Account}:accesslogsubscription/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys"
    ]
   },
   "listener": {
    "ARNFormats": [
     "arn:${Partition}:vpc-lattice:${Region}:${Account}:service/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "vpc-lattice:Protocol",
     "vpc-lattice:TargetGroupArns"
    ]
   },
   "resourceconfiguration": {
    "ARNFormats": [
     "arn:${Partition}:vpc-lattice:${Region}:${Account}:resourceconfiguration/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys"
    ]
   },
   "resourceendpointassociation": {
    "ARNFormats": [
     "arn:${Partition}:vpc-lattice:${Region}:${Account}:resourceendpointassociation/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "vpc-lattice:ResourceConfigurationArn",
     "vpc-lattice:VpcEndpointId"
    ]
   },
   "resourcegateway": {
    "ARNFormats": [
     "arn:${Partition}:vpc-lattice:${Region}:${Account}:resourcegateway/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "vpc-lattice:VpcId"
    ]
   },
   "rule": {
    "ARNFormats": [
     "arn:${Partition}:vpc-lattice:${Region}:${Account}:service/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "vpc-lattice:TargetGroupArns"
    ]
   },
   "service": {
    "ARNFormats": [
     "arn:${Partition}:vpc-lattice:${Region}:${Account}:service/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "vpc-lattice:AuthType"
    ]
   },
   "servicenetwork": {
    "ARNFormats": [
     "arn:${Partition}:vpc-lattice:${Region}:${Account}:servicenetwork/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "vpc-lattice:AuthType"
    ]
   },
   "servicenetworkresourceassociation": {
    "ARNFormats": [
     "arn:${Partition}:vpc-lattice:${Region}:${Account}:servicenetworkresourceassociation/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "vpc-lattice:ResourceConfigurationArn",
     "vpc-lattice:ServiceNetworkArn"
    ]
   },
   "servicenetworkserviceassociation": {
    "ARNFormats": [
     "arn:${Partition}:vpc-lattice:${Region}:${Account}:servicenetworkserviceassociation/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "vpc-lattice:ServiceArn",
     "vpc-lattice:ServiceNetworkArn"
    ]
   },
   "servicenetworkvpcassociation": {
    "ARNFormats": [
     "arn:${Partition}:vpc-lattice:${Region}:${Account}:servicenetworkvpcassociation/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "vpc-lattice:SecurityGroupIds",
     "vpc-lattice:ServiceNetworkArn",
     "vpc-lattice:VpcId"
    ]
   },
   "targetgroup": {
    "ARNFormats": [
     "arn:${Partition}:vpc-lattice:${Region}:${Account}:targetgroup/.*"
    ],
    "ConditionKeys": [
     "aws:RequestTag/${TagKey}",
     "aws:ResourceTag/${TagKey}",
     "aws:TagKeys",
     "vpc-lattice:VpcId"
    ]
   }
  }
 },
 "vpc-lattice-svcs": {
  "Actions": {
   "connect": {
    "Resources": [
     "TCP Service"
    ]
   },
   "invoke": {
    "Resources": [
     "Service"
    ]
   }
  },
  "Resources": {
   "service": {
    "ARNFormats": [
     "arn:${Partition}:vpc-lattice:${Region}:${Account}:service/.*"
    ]
   },
   "tcp service": {
    "ARNFormats": [
     "arn:${Partition}:vpc-lattice:${Region}:${Account}:service/.*"
    ]
   }
  }
 },
 "vpce": {
  "Actions": {
   "allowmultiregion": {}
  },
  "Resources": {}
 },
 "waf": {
  "Actions": {
   "createbytematchset": {
    "Resources": [
     "bytematchset"
    ]
   },
   "creategeomatchset": {
    "Resources": [
     "geomatchset"
    ]
   },
   "createipset": {
    "Resources": [
     "ipset"
    ]
   },
   "createratebasedrule": {
    "Resources": [
     "ratebasedrule"
    ]
   },
   "createregexmatchset": {
    "Resources": [
     "regexmatchset"
    ]
   },
   "createregexpatternset": {
    "Resources": [
     "regexpatternset"
    ]
   },
   "createrule": {
    "Resources": [
     "rule"
    ]
   },
   "createrulegroup": {
    "Resources": [
     "rulegroup"
    ]
   },
   "createsizeconstraintset": {
    "Resources": [
     "sizeconstraintset"
    ]
   },
   "createsqlinjectionmatchset": {
    "Resources": [
     "sqlinjectionmatchset"
    ]
   },
   "createwebacl": {
    "Resources": [
     "webacl"
    ]
   },
   "createwebaclmigrationstack": {
    "Resources": [
     "webacl"
    ]
   },
   "createxssmatchset": {
    "Resources": [
     "xssmatchset"
    ]
   },
   "deletebytematchset": {
    "Resources": [
     "bytematchset"
    ]
   },
   "deletegeomatchset": {
    "Resources": [
     "geomatchset"
    ]
   },
   "deleteipset": {
    "Resources": [
     "ipset"
    ]
   },
   "deleteloggingconfiguration": {
    "Resources": [
     "webacl"
    ]
   },
   "deletepermissionpolicy": {
    "Resources": [
     "rulegroup"
    ]
   },
   "deleteratebasedrule": {
    "Resources": [
     "ratebasedrule"
    ]
   },
   "deleteregexmatchset": {
    "Resources": [
     "regexmatchset"
    ]
   },
   "deleteregexpatternset": {
    "Resources": [
     "regexpatternset"
    ]
   },
   "deleterule": {
    "Resources": [
     "rule"
    ]
   },
   "deleterulegroup": {
    "Resources": [
     "rulegroup"
    ]
   },
   "deletesizeconstraintset": {
    "Resources": [
     "sizeconstraintset"
    ]
   },
   "deletesqlinjectionmatchset": {
    "Resources": [
     "sqlinjectionmatchset"
    ]
   },
   "deletewebacl": {
    "Resources": [
     "webacl"
    ]
   },
   "deletexssmatchset": {
    "Resources": [
     "xssmatchset"
    ]
   },
   "getbytematchset": {
    "Resources": [
     "bytematchset"
    ]
   },
   "getchangetoken": {},
   "getchangetokenstatus": {},
   "getgeomatchset": {
    "Resources": [
     "geomatchset"
    ]
   },
   "getipset": {
    "Resources": [
     "ipset"
    ]
   },
   "getloggingconfiguration": {
    "Resources": [
     "webacl"
    ]
   },
   "getpermissionpolicy": {
    "Resources": [
     "rulegroup"
    ]
   },
   "getratebasedrule": {
    "Resources": [
     "ratebasedrule"
    ]
   },
   "getratebasedrulemanagedkeys": {
    "Resources": [
     "ratebasedrule"
    ]
   },
   "getregexmatchset": {
    "Resources": [
     "regexmatchset"
    ]
   },
   "getregexpatternset": {
    "Resources": [
     "regexpatternset"
    ]
   },
   "getrule": {
    "Resources": [
     "rule"
    ]
   },
   "getrulegroup": {
    "Resources": [
     "rulegroup"
    ]
   },
   "getsampledrequests": {
    "Resources": [
     "webacl"
    ]
   },
   "getsizeconstraintset": {
    "Resources": [
     "sizeconstraintset"
    ]
   },
   "getsqlinjectionmatchset": {
    "Resources": [
     "sqlinjectionmatchset"
    ]
   },
   "getwebacl": {
    "Resources": [
     "webacl"
    ]
   },
   "getxssmatchset": {
    "Resources": [
     "xssmatchset"
    ]
   },
   "listactivatedrulesinrulegroup": {},
   "listbytematchsets": {},
   "listgeomatchsets": {},
   "listipsets": {},
   "listloggingconfigurations": {},
   "listratebasedrules": {},
   "listregexmatchsets": {},
   "listregexpatternsets": {},
   "listrulegroups": {},
   "listrules": {},
   "listsizeconstraintsets": {},
   "listsqlinjectionmatchsets": {},
   "listsubscribedrulegroups": {},
   "listtagsforresource": {
    "Resources": [
     "ratebasedrule",
     "rule",
     "rulegroup",
     "webacl"
    ]
   },
   "listwebacls": {},
   "listxssmatchsets": {},
   "putloggingconfiguration": {
    "Resources": [
     "webacl"
    ]
   },
   "putpermissionpolicy": {
    "Resources": [
     "rulegroup"
    ]
   },
   "tagresource": {
    "Resources": [
     "ratebasedrule",
     "rule",
     "rulegroup",
     "webacl"
    ]
   },
   "untagresource": {
    "Resources": [
     "ratebasedrule",
     "rule",
     "rulegroup",
     "webacl"
    ]
   },
   "updatebytematchset": {
    "Resources": [
     "bytematchset"
    ]
   },
   "updategeomatchset": {
    "Resources": [
     "geomatchset"
    ]
   },
   "updateipset": {
    "Resources": [
     "ipset"
    ]
   },
   "updateratebasedrule": {
    "Resources": [
     "ratebasedrule"
    ]
   },
   "updateregexmatchset": {
    "Resources": [
     "regexmatchset"
    ]
   },
   "updateregexpatternset": {
    "Resources": [
     "regexpatternset"
    ]
   },
   "updaterule": {
    "Resources": [
     "rule"
    ]
   },
   "updaterulegroup": {
    "Resources": [
     "rulegroup"
    ]
   },
   "updatesizeconstraintset": {
    "Resources": [
     "sizeconstraintset"
    ]
   },
   "updatesqlinjectionmatchset": {
    "Resources": [
     "sqlinjectionmatchset"
    ]
   },
   "updatewebacl": {
    "Resources": [
     "webacl"
    ]
   },
   "updatexssmatchset": {
    "Resources": [
     "xssmatchset"
    ]
   }
  },
  "Resources": {
   "bytematchset": {
    "ARNFormats": [
     "arn:${Partition}:waf::${Account}:bytematchset/.*"
    ]
   },
   "geomatchset": {
    "ARNFormats": [
     "arn:${Partition}:waf::${Account}:geomatchset/.*"
    ]
   },
   "ipset": {
    "ARNFormats": [
     "arn:${Partition}:waf::${Account}:ipset/.*"
    ]
   },
   "ratebasedrule": {
    "ARNFormats": [
     "arn:${Partition}:waf::${Account}:ratebasedrule/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "regexmatchset": {
    "ARNFormats": [
     "arn:${Partition}:waf::${Account}:regexmatch/.*"
    ]
   },
   "regexpatternset": {
    "ARNFormats": [
     "arn:${Partition}:waf::${Account}:regexpatternset/.*"
    ]
   },
   "rule": {
    "ARNFormats": [
     "arn:${Partition}:waf::${Account}:rule/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "rulegroup": {
    "ARNFormats": [
     "arn:${Partition}:waf::${Account}:rulegroup/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "sizeconstraintset": {
    "ARNFormats": [
     "arn:${Partition}:waf::${Account}:sizeconstraintset/.*"
    ]
   },
   "sqlinjectionmatchset": {
    "ARNFormats": [
     "arn:${Partition}:waf::${Account}:sqlinjectionset/.*"
    ]
   },
   "webacl": {
    "ARNFormats": [
     "arn:${Partition}:waf::${Account}:webacl/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "xssmatchset": {
    "ARNFormats": [
     "arn:${Partition}:waf::${Account}:xssmatchset/.*"
    ]
   }
  }
 },
 "waf-regional": {
  "Actions": {
   "associatewebacl": {
    "Resources": [
     "loadbalancer/app/",
     "webacl"
    ]
   },
   "createbytematchset": {
    "Resources": [
     "bytematchset"
    ]
   },
   "creategeomatchset": {
    "Resources": [
     "geomatchset"
    ]
   },
   "createipset": {
    "Resources": [
     "ipset"
    ]
   },
   "createratebasedrule": {
    "Resources": [
     "ratebasedrule"
    ]
   },
   "createregexmatchset": {
    "Resources": [
     "regexmatchset"
    ]
   },
   "createregexpatternset": {
    "Resources": [
     "regexpatternset"
    ]
   },
   "createrule": {
    "Resources": [
     "rule"
    ]
   },
   "createrulegroup": {
    "Resources": [
     "rulegroup"
    ]
   },
   "createsizeconstraintset": {
    "Resources": [
     "sizeconstraintset"
    ]
   },
   "createsqlinjectionmatchset": {
    "Resources": [
     "sqlinjectionmatchset"
    ]
   },
   "createwebacl": {
    "Resources": [
     "webacl"
    ]
   },
   "createwebaclmigrationstack": {
    "Resources": [
     "webacl"
    ]
   },
   "createxssmatchset": {
    "Resources": [
     "xssmatchset"
    ]
   },
   "deletebytematchset": {
    "Resources": [
     "bytematchset"
    ]
   },
   "deletegeomatchset": {
    "Resources": [
     "geomatchset"
    ]
   },
   "deleteipset": {
    "Resources": [
     "ipset"
    ]
   },
   "deleteloggingconfiguration": {
    "Resources": [
     "webacl"
    ]
   },
   "deletepermissionpolicy": {
    "Resources": [
     "rulegroup"
    ]
   },
   "deleteratebasedrule": {
    "Resources": [
     "ratebasedrule"
    ]
   },
   "deleteregexmatchset": {
    "Resources": [
     "regexmatchset"
    ]
   },
   "deleteregexpatternset": {
    "Resources": [
     "regexpatternset"
    ]
   },
   "deleterule": {
    "Resources": [
     "rule"
    ]
   },
   "deleterulegroup": {
    "Resources": [
     "rulegroup"
    ]
   },
   "deletesizeconstraintset": {
    "Resources": [
     "sizeconstraintset"
    ]
   },
   "deletesqlinjectionmatchset": {
    "Resources": [
     "sqlinjectionmatchset"
    ]
   },
   "deletewebacl": {
    "Resources": [
     "webacl"
    ]
   },
   "deletexssmatchset": {
    "Resources": [
     "xssmatchset"
    ]
   },
   "disassociatewebacl": {
    "Resources": [
     "loadbalancer/app/"
    ]
   },
   "getbytematchset": {
    "Resources": [
     "bytematchset"
    ]
   },
   "getchangetoken": {},
   "getchangetokenstatus": {},
   "getgeomatchset": {
    "Resources": [
     "geomatchset"
    ]
   },
   "getipset": {
    "Resources": [
     "ipset"
    ]
   },
   "getloggingconfiguration": {
    "Resources": [
     "webacl"
    ]
   },
   "getpermissionpolicy": {
    "Resources": [
     "rulegroup"
    ]
   },
   "getratebasedrule": {
    "Resources": [
     "ratebasedrule"
    ]
   },
   "getratebasedrulemanagedkeys": {
    "Resources": [
     "ratebasedrule"
    ]
   },
   "getregexmatchset": {
    "Resources": [
     "regexmatchset"
    ]
   },
   "getregexpatternset": {
    "Resources": [
     "regexpatternset"
    ]
   },
   "getrule": {
    "Resources": [
     "rule"
    ]
   },
   "getrulegroup": {
    "Resources": [
     "rulegroup"
    ]
   },
   "getsampledrequests": {
    "Resources": [
     "webacl"
    ]
   },
   "getsizeconstraintset": {
    "Resources": [
     "sizeconstraintset"
    ]
   },
   "getsqlinjectionmatchset": {
    "Resources": [
     "sqlinjectionmatchset"
    ]
   },
   "getwebacl": {
    "Resources": [
     "webacl"
    ]
   },
   "getwebaclforresource": {
    "Resources": [
     "loadbalancer/app/"
    ]
   },
   "getxssmatchset": {
    "Resources": [
     "xssmatchset"
    ]
   },
   "listactivatedrulesinrulegroup": {},
   "listbytematchsets": {},
   "listgeomatchsets": {},
   "listipsets": {},
   "listloggingconfigurations": {},
   "listratebasedrules": {},
   "listregexmatchsets": {},
   "listregexpatternsets": {},
   "listresourcesforwebacl": {
    "Resources": [
     "webacl"
    ]
   },
   "listrulegroups": {},
   "listrules": {},
   "listsizeconstraintsets": {},
   "listsqlinjectionmatchsets": {},
   "listsubscribedrulegroups": {},
   "listtagsforresource": {
    "Resources": [
     "ratebasedrule",
     "rule",
     "rulegroup",
     "webacl"
    ]
   },
   "listwebacls": {},
   "listxssmatchsets": {},
   "putloggingconfiguration": {
    "Resources": [
     "webacl"
    ]
   },
   "putpermissionpolicy": {
    "Resources": [
     "rulegroup"
    ]
   },
   "tagresource": {
    "Resources": [
     "ratebasedrule",
     "rule",
     "rulegroup",
     "webacl"
    ]
   },
   "untagresource": {
    "Resources": [
     "ratebasedrule",
     "rule",
     "rulegroup",
     "webacl"
    ]
   },
   "updatebytematchset": {
    "Resources": [
     "bytematchset"
    ]
   },
   "updategeomatchset": {
    "Resources": [
     "geomatchset"
    ]
   },
   "updateipset": {
    "Resources": [
     "ipset"
    ]
   },
   "updateratebasedrule": {
    "Resources": [
     "ratebasedrule"
    ]
   },
   "updateregexmatchset": {
    "Resources": [
     "regexmatchset"
    ]
   },
   "updateregexpatternset": {
    "Resources": [
     "regexpatternset"
    ]
   },
   "updaterule": {
    "Resources": [
     "rule"
    ]
   },
   "updaterulegroup": {
    "Resources": [
     "rulegroup"
    ]
   },
   "updatesizeconstraintset": {
    "Resources": [
     "sizeconstraintset"
    ]
   },
   "updatesqlinjectionmatchset": {
    "Resources": [
     "sqlinjectionmatchset"
    ]
   },
   "updatewebacl": {
    "Resources": [
     "webacl"
    ]
   },
   "updatexssmatchset": {
    "Resources": [
     "xssmatchset"
    ]
   }
  },
  "Resources": {
   "bytematchset": {
    "ARNFormats": [
     "arn:${Partition}:waf-regional:${Region}:${Account}:bytematchset/.*"
    ]
   },
   "geomatchset": {
    "ARNFormats": [
     "arn:${Partition}:waf-regional:${Region}:${Account}:geomatchset/.*"
    ]
   },
   "ipset": {
    "ARNFormats": [
     "arn:${Partition}:waf-regional:${Region}:${Account}:ipset/.*"
    ]
   },
   "loadbalancer/app/": {
    "ARNFormats": [
     "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:loadbalancer/app/.*"
    ]
   },
   "ratebasedrule": {
    "ARNFormats": [
     "arn:${Partition}:waf-regional:${Region}:${Account}:ratebasedrule/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "regexmatchset": {
    "ARNFormats": [
     "arn:${Partition}:waf-regional:${Region}:${Account}:regexmatch/.*"
    ]
   },
   "regexpatternset": {
    "ARNFormats": [
     "arn:${Partition}:waf-regional:${Region}:${Account}:regexpatternset/.*"
    ]
   },
   "rule": {
    "ARNFormats": [
     "arn:${Partition}:waf-regional:${Region}:${Account}:rule/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "rulegroup": {
    "ARNFormats": [
     "arn:${Partition}:waf-regional:${Region}:${Account}:rulegroup/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "sizeconstraintset": {
    "ARNFormats": [
     "arn:${Partition}:waf-regional:${Region}:${Account}:sizeconstraintset/.*"
    ]
   },
   "sqlinjectionmatchset": {
    "ARNFormats": [
     "arn:${Partition}:waf-regional:${Region}:${Account}:sqlinjectionset/.*"
    ]
   },
   "webacl": {
    "ARNFormats": [
     "arn:${Partition}:waf-regional:${Region}:${Account}:webacl/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "xssmatchset": {
    "ARNFormats": [
     "arn:${Partition}:waf-regional:${Region}:${Account}:xssmatchset/.*"
    ]
   }
  }
 },
 "wafv2": {
  "Actions": {
   "associatewebacl": {
    "Resources": [
     "apigateway",
     "apprunner",
     "appsync",
     "loadbalancer/app/",
     "userpool",
     "verified-access-instance",
     "webacl"
    ]
   },
   "checkcapacity": {},
   "createapikey": {},
   "createipset": {
    "Resources": [
     "ipset"
    ]
   },
   "createregexpatternset": {
    "Resources": [
     "regexpatternset"
    ]
   },
   "createrulegroup": {
    "Resources": [
     "ipset",
     "regexpatternset",
     "rulegroup"
    ]
   },
   "createwebacl": {
    "Resources": [
     "ipset",
     "managedruleset",
     "regexpatternset",
     "rulegroup",
     "webacl"
    ]
   },
   "deleteapikey": {},
   "deletefirewallmanagerrulegroups": {
    "Resources": [
     "webacl"
    ]
   },
   "deleteipset": {
    "Resources": [
     "ipset"
    ]
   },
   "deleteloggingconfiguration": {
    "Resources": [
     "webacl"
    ]
   },
   "deletepermissionpolicy": {
    "Resources": [
     "rulegroup"
    ]
   },
   "deleteregexpatternset": {
    "Resources": [
     "regexpatternset"
    ]
   },
   "deleterulegroup": {
    "Resources": [
     "rulegroup"
    ]
   },
   "deletewebacl": {
    "Resources": [
     "webacl"
    ]
   },
   "describeallmanagedproducts": {},
   "describemanagedproductsbyvendor": {},
   "describemanagedrulegroup": {},
   "disassociatefirewallmanager": {
    "Resources": [
     "webacl"
    ]
   },
   "disassociatewebacl": {
    "Resources": [
     "apigateway",
     "apprunner",
     "appsync",
     "loadbalancer/app/",
     "userpool",
     "verified-access-instance"
    ]
   },
   "generatemobilesdkreleaseurl": {},
   "getdecryptedapikey": {},
   "getipset": {
    "Resources": [
     "ipset"
    ]
   },
   "getloggingconfiguration": {
    "Resources": [
     "webacl"
    ]
   },
   "getmanagedruleset": {
    "Resources": [
     "managedruleset"
    ]
   },
   "getmobilesdkrelease": {},
   "getpermissionpolicy": {
    "Resources": [
     "rulegroup"
    ]
   },
   "getratebasedstatementmanagedkeys": {
    "Resources": [
     "webacl"
    ]
   },
   "getregexpatternset": {
    "Resources": [
     "regexpatternset"
    ]
   },
   "getrulegroup": {
    "Resources": [
     "rulegroup"
    ]
   },
   "getsampledrequests": {
    "Resources": [
     "webacl"
    ]
   },
   "getwebacl": {
    "Resources": [
     "webacl"
    ]
   },
   "getwebaclforresource": {
    "Resources": [
     "apigateway",
     "apprunner",
     "appsync",
     "loadbalancer/app/",
     "userpool",
     "verified-access-instance",
     "webacl"
    ]
   },
   "listapikeys": {},
   "listavailablemanagedrulegroups": {},
   "listavailablemanagedrulegroupversions": {},
   "listipsets": {},
   "listloggingconfigurations": {},
   "listmanagedrulesets": {},
   "listmobilesdkreleases": {},
   "listregexpatternsets": {},
   "listresourcesforwebacl": {
    "Resources": [
     "apprunner",
     "userpool",
     "verified-access-instance",
     "webacl"
    ]
   },
   "listrulegroups": {},
   "listtagsforresource": {
    "Resources": [
     "ipset",
     "regexpatternset",
     "rulegroup",
     "webacl"
    ]
   },
   "listwebacls": {},
   "putfirewallmanagerrulegroups": {
    "Resources": [
     "webacl"
    ]
   },
   "putloggingconfiguration": {
    "Resources": [
     "webacl"
    ]
   },
   "putmanagedrulesetversions": {
    "Resources": [
     "managedruleset",
     "rulegroup"
    ]
   },
   "putpermissionpolicy": {
    "Resources": [
     "rulegroup"
    ]
   },
   "tagresource": {
    "Resources": [
     "ipset",
     "regexpatternset",
     "rulegroup",
     "webacl"
    ]
   },
   "untagresource": {
    "Resources": [
     "ipset",
     "regexpatternset",
     "rulegroup",
     "webacl"
    ]
   },
   "updateipset": {
    "Resources": [
     "ipset"
    ]
   },
   "updatemanagedrulesetversionexpirydate": {
    "Resources": [
     "managedruleset"
    ]
   },
   "updateregexpatternset": {
    "Resources": [
     "regexpatternset"
    ]
   },
   "updaterulegroup": {
    "Resources": [
     "ipset",
     "regexpatternset",
     "rulegroup"
    ]
   },
   "updatewebacl": {
    "Resources": [
     "ipset",
     "managedruleset",
     "regexpatternset",
     "rulegroup",
     "webacl"
    ]
   }
  },
  "Resources": {
   "apigateway": {
    "ARNFormats": [
     "arn:${Partition}:apigateway:${Region}::/restapis/.*"
    ]
   },
   "apprunner": {
    "ARNFormats": [
     "arn:${Partition}:apprunner:${Region}:${Account}:service/.*"
    ]
   },
   "appsync": {
    "ARNFormats": [
     "arn:${Partition}:appsync:${Region}:${Account}:apis/.*"
    ]
   },
   "ipset": {
    "ARNFormats": [
     "arn:${Partition}:wafv2:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "loadbalancer/app/": {
    "ARNFormats": [
     "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:loadbalancer/app/.*"
    ]
   },
   "managedruleset": {
    "ARNFormats": [
     "arn:${Partition}:wafv2:${Region}:${Account}:.*"
    ]
   },
   "regexpatternset": {
    "ARNFormats": [
     "arn:${Partition}:wafv2:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "rulegroup": {
    "ARNFormats": [
     "arn:${Partition}:wafv2:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "userpool": {
    "ARNFormats": [
     "arn:${Partition}:cognito-idp:${Region}:${Account}:userpool/.*"
    ]
   },
   "verified-access-instance": {
    "ARNFormats": [
     "arn:${Partition}:ec2:${Region}:${Account}:verified-access-instance/.*"
    ]
   },
   "webacl": {
    "ARNFormats": [
     "arn:${Partition}:wafv2:${Region}:${Account}:.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "wam": {
  "Actions": {
   "authenticatepackager": {}
  },
  "Resources": {}
 },
 "wellarchitected": {
  "Actions": {
   "associatelenses": {
    "Resources": [
     "workload"
    ]
   },
   "associateprofiles": {
    "Resources": [
     "workload"
    ]
   },
   "configureintegration": {},
   "createlensshare": {
    "Resources": [
     "lens"
    ]
   },
   "createlensversion": {
    "Resources": [
     "lens"
    ]
   },
   "createmilestone": {
    "Resources": [
     "workload"
    ]
   },
   "createprofile": {},
   "createprofileshare": {
    "Resources": [
     "profile"
    ]
   },
   "createreviewtemplate": {},
   "createtemplateshare": {
    "Resources": [
     "review-template"
    ]
   },
   "createworkload": {},
   "createworkloadshare": {
    "Resources": [
     "workload"
    ]
   },
   "deletelens": {
    "Resources": [
     "lens"
    ]
   },
   "deletelensshare": {
    "Resources": [
     "lens"
    ]
   },
   "deleteprofile": {
    "Resources": [
     "profile"
    ]
   },
   "deleteprofileshare": {
    "Resources": [
     "profile"
    ]
   },
   "deletereviewtemplate": {
    "Resources": [
     "review-template"
    ]
   },
   "deletetemplateshare": {
    "Resources": [
     "review-template"
    ]
   },
   "deleteworkload": {
    "Resources": [
     "workload"
    ]
   },
   "deleteworkloadshare": {
    "Resources": [
     "workload"
    ]
   },
   "disassociatelenses": {
    "Resources": [
     "workload"
    ]
   },
   "disassociateprofiles": {
    "Resources": [
     "workload"
    ]
   },
   "exportlens": {
    "Resources": [
     "lens"
    ]
   },
   "getanswer": {
    "Resources": [
     "workload"
    ]
   },
   "getconsolidatedreport": {},
   "getglobalsettings": {},
   "getlens": {
    "Resources": [
     "lens"
    ]
   },
   "getlensreview": {
    "Resources": [
     "workload"
    ]
   },
   "getlensreviewreport": {
    "Resources": [
     "workload"
    ]
   },
   "getlensversiondifference": {
    "Resources": [
     "lens"
    ]
   },
   "getmilestone": {
    "Resources": [
     "workload"
    ]
   },
   "getprofile": {
    "Resources": [
     "profile"
    ]
   },
   "getprofiletemplate": {},
   "getreviewtemplate": {
    "Resources": [
     "review-template"
    ]
   },
   "getreviewtemplateanswer": {
    "Resources": [
     "review-template"
    ]
   },
   "getreviewtemplatelensreview": {
    "Resources": [
     "review-template"
    ]
   },
   "getworkload": {
    "Resources": [
     "workload"
    ]
   },
   "importlens": {},
   "listanswers": {
    "Resources": [
     "workload"
    ]
   },
   "listcheckdetails": {
    "Resources": [
     "workload"
    ]
   },
   "listchecksummaries": {
    "Resources": [
     "workload"
    ]
   },
   "listlenses": {},
   "listlensreviewimprovements": {
    "Resources": [
     "workload"
    ]
   },
   "listlensreviews": {
    "Resources": [
     "workload"
    ]
   },
   "listlensshares": {
    "Resources": [
     "lens"
    ]
   },
   "listmilestones": {
    "Resources": [
     "workload"
    ]
   },
   "listnotifications": {},
   "listprofilenotifications": {},
   "listprofiles": {},
   "listprofileshares": {
    "Resources": [
     "profile"
    ]
   },
   "listreviewtemplateanswers": {
    "Resources": [
     "review-template"
    ]
   },
   "listreviewtemplates": {},
   "listshareinvitations": {},
   "listtagsforresource": {
    "Resources": [
     "lens",
     "profile",
     "review-template",
     "workload"
    ]
   },
   "listtemplateshares": {
    "Resources": [
     "review-template"
    ]
   },
   "listworkloads": {},
   "listworkloadshares": {
    "Resources": [
     "workload"
    ]
   },
   "tagresource": {
    "Resources": [
     "lens",
     "profile",
     "review-template",
     "workload"
    ]
   },
   "untagresource": {
    "Resources": [
     "lens",
     "profile",
     "review-template",
     "workload"
    ]
   },
   "updateanswer": {
    "Resources": [
     "workload"
    ]
   },
   "updateglobalsettings": {},
   "updateintegration": {
    "Resources": [
     "workload"
    ]
   },
   "updatelensreview": {
    "Resources": [
     "workload"
    ]
   },
   "updateprofile": {
    "Resources": [
     "profile"
    ]
   },
   "updatereviewtemplate": {
    "Resources": [
     "review-template"
    ]
   },
   "updatereviewtemplateanswer": {
    "Resources": [
     "review-template"
    ]
   },
   "updatereviewtemplatelensreview": {
    "Resources": [
     "review-template"
    ]
   },
   "updateshareinvitation": {},
   "updateworkload": {
    "Resources": [
     "workload"
    ]
   },
   "updateworkloadshare": {
    "Resources": [
     "workload"
    ]
   },
   "upgradelensreview": {
    "Resources": [
     "workload"
    ]
   },
   "upgradeprofileversion": {
    "Resources": [
     "profile",
     "workload"
    ]
   },
   "upgradereviewtemplatelensreview": {
    "Resources": [
     "review-template"
    ]
   }
  },
  "Resources": {
   "lens": {
    "ARNFormats": [
     "arn:${Partition}:wellarchitected:${Region}:${Account}:lens/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "profile": {
    "ARNFormats": [
     "arn:${Partition}:wellarchitected:${Region}:${Account}:profile/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "review-template": {
    "ARNFormats": [
     "arn:${Partition}:wellarchitected:${Region}:${Account}:review-template/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "workload": {
    "ARNFormats": [
     "arn:${Partition}:wellarchitected:${Region}:${Account}:workload/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "wickr": {
  "Actions": {
   "createadminsession": {
    "Resources": [
     "network"
    ]
   },
   "createnetwork": {},
   "deletenetwork": {},
   "listnetworks": {},
   "listtagsforresource": {},
   "tagresource": {
    "Resources": [
     "network"
    ]
   },
   "untagresource": {
    "Resources": [
     "network"
    ]
   },
   "updatenetworkdetails": {
    "Resources": [
     "network"
    ]
   }
  },
  "Resources": {
   "network": {
    "ARNFormats": [
     "arn:${Partition}:wickr:${Region}:${Account}:network/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "wisdom": {
  "Actions": {
   "activatemessagetemplate": {
    "Resources": [
     "KnowledgeBase",
     "MessageTemplate"
    ]
   },
   "allowvendedlogdeliveryforresource": {
    "Resources": [
     "Assistant"
    ]
   },
   "createaiagent": {
    "Resources": [
     "Assistant"
    ]
   },
   "createaiagentversion": {
    "Resources": [
     "AIAgent",
     "Assistant"
    ]
   },
   "createaiguardrail": {
    "Resources": [
     "Assistant"
    ]
   },
   "createaiguardrailversion": {
    "Resources": [
     "AIGuardrail",
     "Assistant"
    ]
   },
   "createaiprompt": {
    "Resources": [
     "Assistant"
    ]
   },
   "createaipromptversion": {
    "Resources": [
     "AIPrompt",
     "Assistant"
    ]
   },
   "createassistant": {},
   "createassistantassociation": {
    "Resources": [
     "Assistant"
    ]
   },
   "createcontent": {
    "Resources": [
     "KnowledgeBase"
    ]
   },
   "createcontentassociation": {
    "Resources": [
     "Content",
     "KnowledgeBase"
    ]
   },
   "createknowledgebase": {},
   "createmessagetemplate": {
    "Resources": [
     "KnowledgeBase"
    ]
   },
   "createmessagetemplateattachment": {
    "Resources": [
     "KnowledgeBase",
     "MessageTemplate"
    ]
   },
   "createmessagetemplateversion": {
    "Resources": [
     "KnowledgeBase",
     "MessageTemplate"
    ]
   },
   "createquickresponse": {},
   "createsession": {},
   "deactivatemessagetemplate": {
    "Resources": [
     "KnowledgeBase",
     "MessageTemplate"
    ]
   },
   "deleteaiagent": {
    "Resources": [
     "AIAgent",
     "Assistant"
    ]
   },
   "deleteaiagentversion": {
    "Resources": [
     "AIAgent",
     "Assistant"
    ]
   },
   "deleteaiguardrail": {
    "Resources": [
     "AIGuardrail",
     "Assistant"
    ]
   },
   "deleteaiguardrailversion": {
    "Resources": [
     "AIGuardrail",
     "Assistant"
    ]
   },
   "deleteaiprompt": {
    "Resources": [
     "AIPrompt",
     "Assistant"
    ]
   },
   "deleteaipromptversion": {
    "Resources": [
     "AIPrompt",
     "Assistant"
    ]
   },
   "deleteassistant": {
    "Resources": [
     "Assistant"
    ]
   },
   "deleteassistantassociation": {
    "Resources": [
     "Assistant",
     "AssistantAssociation"
    ]
   },
   "deletecontent": {
    "Resources": [
     "Content",
     "KnowledgeBase"
    ]
   },
   "deletecontentassociation": {
    "Resources": [
     "Content",
     "ContentAssociation",
     "KnowledgeBase"
    ]
   },
   "deleteimportjob": {
    "Resources": [
     "KnowledgeBase"
    ]
   },
   "deleteknowledgebase": {
    "Resources": [
     "KnowledgeBase"
    ]
   },
   "deletemessagetemplate": {
    "Resources": [
     "KnowledgeBase",
     "MessageTemplate"
    ]
   },
   "deletemessagetemplateattachment": {
    "Resources": [
     "KnowledgeBase",
     "MessageTemplate"
    ]
   },
   "deletequickresponse": {
    "Resources": [
     "KnowledgeBase",
     "QuickResponse"
    ]
   },
   "getaiagent": {
    "Resources": [
     "AIAgent",
     "Assistant"
    ]
   },
   "getaiguardrail": {
    "Resources": [
     "AIGuardrail",
     "Assistant"
    ]
   },
   "getaiprompt": {
    "Resources": [
     "AIPrompt",
     "Assistant"
    ]
   },
   "getassistant": {
    "Resources": [
     "Assistant"
    ]
   },
   "getassistantassociation": {
    "Resources": [
     "Assistant",
     "AssistantAssociation"
    ]
   },
   "getcontent": {
    "Resources": [
     "Content",
     "KnowledgeBase"
    ]
   },
   "getcontentassociation": {
    "Resources": [
     "Content",
     "ContentAssociation",
     "KnowledgeBase"
    ]
   },
   "getcontentsummary": {
    "Resources": [
     "Content",
     "KnowledgeBase"
    ]
   },
   "getimportjob": {
    "Resources": [
     "KnowledgeBase"
    ]
   },
   "getknowledgebase": {
    "Resources": [
     "KnowledgeBase"
    ]
   },
   "getmessagetemplate": {
    "Resources": [
     "KnowledgeBase",
     "MessageTemplate"
    ]
   },
   "getnextmessage": {
    "Resources": [
     "Assistant",
     "Session"
    ]
   },
   "getquickresponse": {
    "Resources": [
     "KnowledgeBase",
     "QuickResponse"
    ]
   },
   "getrecommendations": {
    "Resources": [
     "Assistant"
    ]
   },
   "getsession": {
    "Resources": [
     "Assistant",
     "Session"
    ]
   },
   "listaiagents": {
    "Resources": [
     "Assistant"
    ]
   },
   "listaiagentversions": {
    "Resources": [
     "AIAgent",
     "Assistant"
    ]
   },
   "listaiguardrails": {
    "Resources": [
     "Assistant"
    ]
   },
   "listaiguardrailversions": {
    "Resources": [
     "AIGuardrail",
     "Assistant"
    ]
   },
   "listaiprompts": {
    "Resources": [
     "Assistant"
    ]
   },
   "listaipromptversions": {
    "Resources": [
     "AIPrompt",
     "Assistant"
    ]
   },
   "listassistantassociations": {},
   "listassistants": {},
   "listcontentassociations": {
    "Resources": [
     "Content",
     "KnowledgeBase"
    ]
   },
   "listcontents": {
    "Resources": [
     "KnowledgeBase"
    ]
   },
   "listimportjobs": {
    "Resources": [
     "KnowledgeBase"
    ]
   },
   "listknowledgebases": {},
   "listmessages": {
    "Resources": [
     "Assistant",
     "Session"
    ]
   },
   "listmessagetemplates": {
    "Resources": [
     "KnowledgeBase"
    ]
   },
   "listmessagetemplateversions": {
    "Resources": [
     "KnowledgeBase",
     "MessageTemplate"
    ]
   },
   "listquickresponses": {
    "Resources": [
     "KnowledgeBase"
    ]
   },
   "listtagsforresource": {},
   "notifyrecommendationsreceived": {},
   "putfeedback": {
    "Resources": [
     "Assistant"
    ]
   },
   "queryassistant": {
    "Resources": [
     "Assistant"
    ]
   },
   "removeassistantaiagent": {
    "Resources": [
     "Assistant"
    ]
   },
   "removeknowledgebasetemplateuri": {
    "Resources": [
     "KnowledgeBase"
    ]
   },
   "rendermessagetemplate": {
    "Resources": [
     "KnowledgeBase",
     "MessageTemplate"
    ]
   },
   "searchcontent": {
    "Resources": [
     "KnowledgeBase"
    ]
   },
   "searchmessagetemplates": {
    "Resources": [
     "KnowledgeBase"
    ]
   },
   "searchquickresponses": {
    "Resources": [
     "KnowledgeBase"
    ]
   },
   "searchsessions": {},
   "sendmessage": {
    "Resources": [
     "Assistant",
     "Session"
    ]
   },
   "startcontentupload": {
    "Resources": [
     "KnowledgeBase"
    ]
   },
   "startimportjob": {
    "Resources": [
     "KnowledgeBase"
    ]
   },
   "tagresource": {
    "Resources": [
     "Assistant",
     "AssistantAssociation",
     "Content",
     "ContentAssociation",
     "KnowledgeBase",
     "MessageTemplate",
     "QuickResponse",
     "Session"
    ]
   },
   "untagresource": {
    "Resources": [
     "Assistant",
     "AssistantAssociation",
     "Content",
     "ContentAssociation",
     "KnowledgeBase",
     "MessageTemplate",
     "QuickResponse",
     "Session"
    ]
   },
   "updateaiagent": {
    "Resources": [
     "AIAgent",
     "Assistant"
    ]
   },
   "updateaiguardrail": {
    "Resources": [
     "AIGuardrail",
     "Assistant"
    ]
   },
   "updateaiprompt": {
    "Resources": [
     "AIPrompt",
     "Assistant"
    ]
   },
   "updateassistantaiagent": {
    "Resources": [
     "Assistant"
    ]
   },
   "updatecontent": {
    "Resources": [
     "Content",
     "KnowledgeBase"
    ]
   },
   "updateknowledgebasetemplateuri": {
    "Resources": [
     "KnowledgeBase"
    ]
   },
   "updatemessagetemplate": {
    "Resources": [
     "KnowledgeBase",
     "MessageTemplate"
    ]
   },
   "updatemessagetemplatemetadata": {
    "Resources": [
     "KnowledgeBase",
     "MessageTemplate"
    ]
   },
   "updatequickresponse": {
    "Resources": [
     "KnowledgeBase",
     "QuickResponse"
    ]
   },
   "updatesession": {
    "Resources": [
     "Assistant",
     "Session"
    ]
   },
   "updatesessiondata": {
    "Resources": [
     "Assistant",
     "Session"
    ]
   }
  },
  "Resources": {
   "aiagent": {
    "ARNFormats": [
     "arn:${Partition}:wisdom:${Region}:${Account}:ai-agent/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "aiguardrail": {
    "ARNFormats": [
     "arn:${Partition}:wisdom:${Region}:${Account}:ai-guardrail/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "aiprompt": {
    "ARNFormats": [
     "arn:${Partition}:wisdom:${Region}:${Account}:ai-prompt/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "assistant": {
    "ARNFormats": [
     "arn:${Partition}:wisdom:${Region}:${Account}:assistant/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "assistantassociation": {
    "ARNFormats": [
     "arn:${Partition}:wisdom:${Region}:${Account}:association/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "content": {
    "ARNFormats": [
     "arn:${Partition}:wisdom:${Region}:${Account}:content/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "contentassociation": {
    "ARNFormats": [
     "arn:${Partition}:wisdom:${Region}:${Account}:content-association/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "knowledgebase": {
    "ARNFormats": [
     "arn:${Partition}:wisdom:${Region}:${Account}:knowledge-base/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "messagetemplate": {
    "ARNFormats": [
     "arn:${Partition}:wisdom:${Region}:${Account}:message-template/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}",
     "wisdom:MessageTemplate/RoutingProfileArn"
    ]
   },
   "quickresponse": {
    "ARNFormats": [
     "arn:${Partition}:wisdom:${Region}:${Account}:quick-response/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "session": {
    "ARNFormats": [
     "arn:${Partition}:wisdom:${Region}:${Account}:session/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "workdocs": {
  "Actions": {
   "abortdocumentversionupload": {},
   "activateuser": {},
   "addnotificationpermissions": {},
   "addresourcepermissions": {},
   "addusertogroup": {},
   "checkalias": {},
   "createcomment": {},
   "createcustommetadata": {},
   "createfolder": {},
   "createinstance": {},
   "createlabels": {},
   "createnotificationsubscription": {},
   "createuser": {},
   "deactivateuser": {},
   "deletecomment": {},
   "deletecustommetadata": {},
   "deletedocument": {},
   "deletedocumentversion": {},
   "deletefolder": {},
   "deletefoldercontents": {},
   "deleteinstance": {},
   "deletelabels": {},
   "deletenotificationpermissions": {},
   "deletenotificationsubscription": {},
   "deleteuser": {},
   "deregisterdirectory": {},
   "describeactivities": {},
   "describeavailabledirectories": {},
   "describecomments": {},
   "describedocumentversions": {},
   "describefoldercontents": {},
   "describegroups": {},
   "describeinstanceexports": {},
   "describeinstances": {},
   "describenotificationpermissions": {},
   "describenotificationsubscriptions": {},
   "describeresourcepermissions": {},
   "describerootfolders": {},
   "describeusers": {},
   "downloaddocumentversion": {},
   "getcurrentuser": {},
   "getdocument": {},
   "getdocumentpath": {},
   "getdocumentversion": {},
   "getfolder": {},
   "getfolderpath": {},
   "getgroup": {},
   "getresources": {},
   "initiatedocumentversionupload": {},
   "registerdirectory": {},
   "removeallresourcepermissions": {},
   "removeresourcepermission": {},
   "restoredocumentversions": {},
   "searchresources": {},
   "startinstanceexport": {
    "Resources": [
     "organization"
    ]
   },
   "updatedocument": {},
   "updatedocumentversion": {},
   "updatefolder": {},
   "updateinstancealias": {},
   "updateuser": {},
   "updateuseradministrativesettings": {}
  },
  "Resources": {
   "organization": {
    "ARNFormats": [
     "arn:${Partition}:workdocs:${Region}:${Account}:organization/.*"
    ]
   }
  }
 },
 "worklink": {
  "Actions": {
   "associatedomain": {
    "Resources": [
     "fleet"
    ]
   },
   "associatewebsiteauthorizationprovider": {
    "Resources": [
     "fleet"
    ]
   },
   "associatewebsitecertificateauthority": {
    "Resources": [
     "fleet"
    ]
   },
   "createfleet": {},
   "deletefleet": {
    "Resources": [
     "fleet"
    ]
   },
   "describeauditstreamconfiguration": {
    "Resources": [
     "fleet"
    ]
   },
   "describecompanynetworkconfiguration": {
    "Resources": [
     "fleet"
    ]
   },
   "describedevice": {
    "Resources": [
     "fleet"
    ]
   },
   "describedevicepolicyconfiguration": {
    "Resources": [
     "fleet"
    ]
   },
   "describedomain": {
    "Resources": [
     "fleet"
    ]
   },
   "describefleetmetadata": {
    "Resources": [
     "fleet"
    ]
   },
   "describeidentityproviderconfiguration": {
    "Resources": [
     "fleet"
    ]
   },
   "describewebsitecertificateauthority": {
    "Resources": [
     "fleet"
    ]
   },
   "disassociatedomain": {
    "Resources": [
     "fleet"
    ]
   },
   "disassociatewebsiteauthorizationprovider": {
    "Resources": [
     "fleet"
    ]
   },
   "disassociatewebsitecertificateauthority": {
    "Resources": [
     "fleet"
    ]
   },
   "listdevices": {
    "Resources": [
     "fleet"
    ]
   },
   "listdomains": {
    "Resources": [
     "fleet"
    ]
   },
   "listfleets": {},
   "listtagsforresource": {
    "Resources": [
     "fleet"
    ]
   },
   "listwebsiteauthorizationproviders": {
    "Resources": [
     "fleet"
    ]
   },
   "listwebsitecertificateauthorities": {
    "Resources": [
     "fleet"
    ]
   },
   "restoredomainaccess": {
    "Resources": [
     "fleet"
    ]
   },
   "revokedomainaccess": {
    "Resources": [
     "fleet"
    ]
   },
   "searchentity": {
    "Resources": [
     "fleet"
    ]
   },
   "signoutuser": {
    "Resources": [
     "fleet"
    ]
   },
   "tagresource": {
    "Resources": [
     "fleet"
    ]
   },
   "untagresource": {
    "Resources": [
     "fleet"
    ]
   },
   "updateauditstreamconfiguration": {
    "Resources": [
     "fleet"
    ]
   },
   "updatecompanynetworkconfiguration": {
    "Resources": [
     "fleet"
    ]
   },
   "updatedevicepolicyconfiguration": {
    "Resources": [
     "fleet"
    ]
   },
   "updatedomainmetadata": {
    "Resources": [
     "fleet"
    ]
   },
   "updatefleetmetadata": {
    "Resources": [
     "fleet"
    ]
   },
   "updateidentityproviderconfiguration": {
    "Resources": [
     "fleet"
    ]
   }
  },
  "Resources": {
   "fleet": {
    "ARNFormats": [
     "arn:${Partition}:worklink::${Account}:fleet/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "workmail": {
  "Actions": {
   "allowvendedlogdeliveryforresource": {
    "Resources": [
     "organization"
    ]
   },
   "associatedelegatetoresource": {
    "Resources": [
     "organization"
    ]
   },
   "associatemembertogroup": {
    "Resources": [
     "organization"
    ]
   },
   "assumeimpersonationrole": {
    "Resources": [
     "organization"
    ]
   },
   "cancelmailboxexportjob": {
    "Resources": [
     "organization"
    ]
   },
   "createalias": {
    "Resources": [
     "organization"
    ]
   },
   "createavailabilityconfiguration": {
    "Resources": [
     "organization"
    ]
   },
   "creategroup": {
    "Resources": [
     "organization"
    ]
   },
   "createidentitycenterapplication": {},
   "createimpersonationrole": {
    "Resources": [
     "organization"
    ]
   },
   "createinboundmailflowrule": {
    "Resources": [
     "organization"
    ]
   },
   "createmaildomain": {
    "Resources": [
     "organization"
    ]
   },
   "createmobiledeviceaccessrule": {
    "Resources": [
     "organization"
    ]
   },
   "createorganization": {},
   "createoutboundmailflowrule": {
    "Resources": [
     "organization"
    ]
   },
   "createresource": {
    "Resources": [
     "organization"
    ]
   },
   "createsmtpgateway": {
    "Resources": [
     "organization"
    ]
   },
   "createuser": {
    "Resources": [
     "organization"
    ]
   },
   "deleteaccesscontrolrule": {
    "Resources": [
     "organization"
    ]
   },
   "deletealias": {
    "Resources": [
     "organization"
    ]
   },
   "deleteavailabilityconfiguration": {
    "Resources": [
     "organization"
    ]
   },
   "deleteemailmonitoringconfiguration": {
    "Resources": [
     "organization"
    ]
   },
   "deletegroup": {
    "Resources": [
     "organization"
    ]
   },
   "deleteidentitycenterapplication": {},
   "deleteidentityproviderconfiguration": {
    "Resources": [
     "organization"
    ]
   },
   "deleteimpersonationrole": {
    "Resources": [
     "organization"
    ]
   },
   "deleteinboundmailflowrule": {
    "Resources": [
     "organization"
    ]
   },
   "deletemailboxpermissions": {
    "Resources": [
     "organization"
    ]
   },
   "deletemaildomain": {
    "Resources": [
     "organization"
    ]
   },
   "deletemobiledevice": {
    "Resources": [
     "organization"
    ]
   },
   "deletemobiledeviceaccessoverride": {
    "Resources": [
     "organization"
    ]
   },
   "deletemobiledeviceaccessrule": {
    "Resources": [
     "organization"
    ]
   },
   "deleteorganization": {
    "Resources": [
     "organization"
    ]
   },
   "deleteoutboundmailflowrule": {
    "Resources": [
     "organization"
    ]
   },
   "deletepersonalaccesstoken": {
    "Resources": [
     "organization"
    ]
   },
   "deleteresource": {
    "Resources": [
     "organization"
    ]
   },
   "deleteretentionpolicy": {
    "Resources": [
     "organization"
    ]
   },
   "deletesmtpgateway": {
    "Resources": [
     "organization"
    ]
   },
   "deleteuser": {
    "Resources": [
     "organization"
    ]
   },
   "delivertomailbox": {
    "Resources": [
     "organization"
    ]
   },
   "deregisterfromworkmail": {
    "Resources": [
     "organization"
    ]
   },
   "deregistermaildomain": {
    "Resources": [
     "organization"
    ]
   },
   "describeemailmonitoringconfiguration": {
    "Resources": [
     "organization"
    ]
   },
   "describeentity": {
    "Resources": [
     "organization"
    ]
   },
   "describegroup": {
    "Resources": [
     "organization"
    ]
   },
   "describeidentityproviderconfiguration": {
    "Resources": [
     "organization"
    ]
   },
   "describeinbounddmarcsettings": {
    "Resources": [
     "organization"
    ]
   },
   "describeinboundmailflowrule": {
    "Resources": [
     "organization"
    ]
   },
   "describemailboxexportjob": {
    "Resources": [
     "organization"
    ]
   },
   "describemaildomains": {
    "Resources": [
     "organization"
    ]
   },
   "describeorganization": {
    "Resources": [
     "organization"
    ]
   },
   "describeoutboundmailflowrule": {
    "Resources": [
     "organization"
    ]
   },
   "describeresource": {
    "Resources": [
     "organization"
    ]
   },
   "describesmtpgateway": {
    "Resources": [
     "organization"
    ]
   },
   "describeuser": {
    "Resources": [
     "organization"
    ]
   },
   "disassociatedelegatefromresource": {
    "Resources": [
     "organization"
    ]
   },
   "disassociatememberfromgroup": {
    "Resources": [
     "organization"
    ]
   },
   "enablemaildomain": {
    "Resources": [
     "organization"
    ]
   },
   "getaccesscontroleffect": {
    "Resources": [
     "organization"
    ]
   },
   "getdefaultretentionpolicy": {
    "Resources": [
     "organization"
    ]
   },
   "getimpersonationrole": {
    "Resources": [
     "organization"
    ]
   },
   "getimpersonationroleeffect": {
    "Resources": [
     "organization"
    ]
   },
   "getjournalingrules": {
    "Resources": [
     "organization"
    ]
   },
   "getmailboxdetails": {
    "Resources": [
     "organization"
    ]
   },
   "getmaildomain": {
    "Resources": [
     "organization"
    ]
   },
   "getmaildomaindetails": {
    "Resources": [
     "organization"
    ]
   },
   "getmobiledeviceaccesseffect": {
    "Resources": [
     "organization"
    ]
   },
   "getmobiledeviceaccessoverride": {
    "Resources": [
     "organization"
    ]
   },
   "getmobiledevicedetails": {
    "Resources": [
     "organization"
    ]
   },
   "getmobiledevicesforuser": {
    "Resources": [
     "organization"
    ]
   },
   "getmobilepolicydetails": {
    "Resources": [
     "organization"
    ]
   },
   "getpersonalaccesstokenmetadata": {
    "Resources": [
     "organization"
    ]
   },
   "listaccesscontrolrules": {
    "Resources": [
     "organization"
    ]
   },
   "listaliases": {
    "Resources": [
     "organization"
    ]
   },
   "listavailabilityconfigurations": {
    "Resources": [
     "organization"
    ]
   },
   "listgroupmembers": {
    "Resources": [
     "organization"
    ]
   },
   "listgroups": {
    "Resources": [
     "organization"
    ]
   },
   "listgroupsforentity": {
    "Resources": [
     "organization"
    ]
   },
   "listimpersonationroles": {
    "Resources": [
     "organization"
    ]
   },
   "listinboundmailflowrules": {
    "Resources": [
     "organization"
    ]
   },
   "listmailboxexportjobs": {
    "Resources": [
     "organization"
    ]
   },
   "listmailboxpermissions": {
    "Resources": [
     "organization"
    ]
   },
   "listmaildomains": {
    "Resources": [
     "organization"
    ]
   },
   "listmobiledeviceaccessoverrides": {
    "Resources": [
     "organization"
    ]
   },
   "listmobiledeviceaccessrules": {
    "Resources": [
     "organization"
    ]
   },
   "listorganizations": {},
   "listoutboundmailflowrules": {
    "Resources": [
     "organization"
    ]
   },
   "listpersonalaccesstokens": {
    "Resources": [
     "organization"
    ]
   },
   "listresourcedelegates": {
    "Resources": [
     "organization"
    ]
   },
   "listresources": {
    "Resources": [
     "organization"
    ]
   },
   "listsmtpgateways": {
    "Resources": [
     "organization"
    ]
   },
   "listtagsforresource": {
    "Resources": [
     "organization"
    ]
   },
   "listusers": {
    "Resources": [
     "organization"
    ]
   },
   "putaccesscontrolrule": {
    "Resources": [
     "organization"
    ]
   },
   "putemailmonitoringconfiguration": {
    "Resources": [
     "organization"
    ]
   },
   "putidentityproviderconfiguration": {
    "Resources": [
     "organization"
    ]
   },
   "putinbounddmarcsettings": {
    "Resources": [
     "organization"
    ]
   },
   "putmailboxpermissions": {
    "Resources": [
     "organization"
    ]
   },
   "putmobiledeviceaccessoverride": {
    "Resources": [
     "organization"
    ]
   },
   "putretentionpolicy": {
    "Resources": [
     "organization"
    ]
   },
   "registermaildomain": {
    "Resources": [
     "organization"
    ]
   },
   "registertoworkmail": {
    "Resources": [
     "organization"
    ]
   },
   "resetpassword": {
    "Resources": [
     "organization"
    ]
   },
   "searchmembers": {
    "Resources": [
     "organization"
    ]
   },
   "setdefaultmaildomain": {
    "Resources": [
     "organization"
    ]
   },
   "setjournalingrules": {
    "Resources": [
     "organization"
    ]
   },
   "setmobilepolicydetails": {
    "Resources": [
     "organization"
    ]
   },
   "startmailboxexportjob": {
    "Resources": [
     "organization"
    ]
   },
   "tagresource": {
    "Resources": [
     "organization"
    ]
   },
   "testavailabilityconfiguration": {
    "Resources": [
     "organization"
    ]
   },
   "testinboundmailflowrules": {
    "Resources": [
     "organization"
    ]
   },
   "testoutboundmailflowrules": {
    "Resources": [
     "organization"
    ]
   },
   "untagresource": {
    "Resources": [
     "organization"
    ]
   },
   "updateavailabilityconfiguration": {
    "Resources": [
     "organization"
    ]
   },
   "updatedefaultmaildomain": {
    "Resources": [
     "organization"
    ]
   },
   "updategroup": {
    "Resources": [
     "organization"
    ]
   },
   "updateimpersonationrole": {
    "Resources": [
     "organization"
    ]
   },
   "updateinboundmailflowrule": {
    "Resources": [
     "organization"
    ]
   },
   "updatemailboxquota": {
    "Resources": [
     "organization"
    ]
   },
   "updatemobiledeviceaccessrule": {
    "Resources": [
     "organization"
    ]
   },
   "updateoutboundmailflowrule": {
    "Resources": [
     "organization"
    ]
   },
   "updateprimaryemailaddress": {
    "Resources": [
     "organization"
    ]
   },
   "updateresource": {
    "Resources": [
     "organization"
    ]
   },
   "updatesmtpgateway": {
    "Resources": [
     "organization"
    ]
   },
   "updateuser": {
    "Resources": [
     "organization"
    ]
   },
   "wipemobiledevice": {
    "Resources": [
     "organization"
    ]
   }
  },
  "Resources": {
   "organization": {
    "ARNFormats": [
     "arn:${Partition}:workmail:${Region}:${Account}:organization/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "workmailmessageflow": {
  "Actions": {
   "getrawmessagecontent": {
    "Resources": [
     "RawMessage"
    ]
   },
   "putrawmessagecontent": {
    "Resources": [
     "RawMessage"
    ]
   }
  },
  "Resources": {
   "rawmessage": {
    "ARNFormats": [
     "arn:${Partition}:workmailmessageflow:${Region}:${Account}:message/.*"
    ]
   }
  }
 },
 "workspaces": {
  "Actions": {
   "acceptaccountlinkinvitation": {},
   "associateconnectionalias": {
    "Resources": [
     "connectionalias",
     "directoryid"
    ]
   },
   "associateipgroups": {
    "Resources": [
     "directoryid",
     "workspaceipgroup"
    ]
   },
   "associateworkspaceapplication": {
    "Resources": [
     "workspaceapplication",
     "workspaceid"
    ]
   },
   "authorizeiprules": {
    "Resources": [
     "workspaceipgroup"
    ]
   },
   "copyworkspaceimage": {
    "Resources": [
     "workspaceimage"
    ]
   },
   "createaccountlinkinvitation": {},
   "createconnectclientaddin": {
    "Resources": [
     "directoryid"
    ]
   },
   "createconnectionalias": {},
   "createipgroup": {},
   "createstandbyworkspaces": {
    "Resources": [
     "directoryid",
     "workspaceid"
    ]
   },
   "createtags": {},
   "createupdatedworkspaceimage": {
    "Resources": [
     "workspaceimage"
    ]
   },
   "createworkspacebundle": {
    "Resources": [
     "workspacebundle",
     "workspaceimage"
    ]
   },
   "createworkspaceimage": {
    "Resources": [
     "workspaceid"
    ]
   },
   "createworkspaces": {
    "Resources": [
     "directoryid",
     "workspacebundle",
     "workspaceid"
    ]
   },
   "createworkspacespool": {
    "Resources": [
     "directoryid",
     "workspacebundle",
     "workspacespoolid"
    ]
   },
   "deleteaccountlinkinvitation": {},
   "deleteclientbranding": {
    "Resources": [
     "directoryid"
    ]
   },
   "deleteconnectclientaddin": {
    "Resources": [
     "directoryid"
    ]
   },
   "deleteconnectionalias": {
    "Resources": [
     "connectionalias"
    ]
   },
   "deleteipgroup": {
    "Resources": [
     "workspaceipgroup"
    ]
   },
   "deletetags": {},
   "deleteworkspacebundle": {
    "Resources": [
     "workspacebundle"
    ]
   },
   "deleteworkspaceimage": {
    "Resources": [
     "workspaceimage"
    ]
   },
   "deployworkspaceapplications": {
    "Resources": [
     "workspaceid"
    ]
   },
   "deregisterworkspacedirectory": {
    "Resources": [
     "directoryid"
    ]
   },
   "describeaccount": {},
   "describeaccountmodifications": {},
   "describeapplicationassociations": {
    "Resources": [
     "workspaceapplication"
    ]
   },
   "describeapplications": {},
   "describebundleassociations": {
    "Resources": [
     "workspacebundle"
    ]
   },
   "describeclientbranding": {
    "Resources": [
     "directoryid"
    ]
   },
   "describeclientproperties": {
    "Resources": [
     "directoryid"
    ]
   },
   "describeconnectclientaddins": {
    "Resources": [
     "directoryid"
    ]
   },
   "describeconnectionaliases": {},
   "describeconnectionaliaspermissions": {
    "Resources": [
     "connectionalias"
    ]
   },
   "describeimageassociations": {
    "Resources": [
     "workspaceimage"
    ]
   },
   "describeipgroups": {
    "Resources": [
     "workspaceipgroup"
    ]
   },
   "describetags": {},
   "describeworkspaceassociations": {
    "Resources": [
     "workspaceid"
    ]
   },
   "describeworkspacebundles": {},
   "describeworkspacedirectories": {},
   "describeworkspaceimagepermissions": {
    "Resources": [
     "workspaceimage"
    ]
   },
   "describeworkspaceimages": {},
   "describeworkspaces": {},
   "describeworkspacesconnectionstatus": {},
   "describeworkspacesnapshots": {
    "Resources": [
     "workspaceid"
    ]
   },
   "describeworkspacespools": {},
   "describeworkspacespoolsessions": {
    "Resources": [
     "workspacespoolid"
    ]
   },
   "disassociateconnectionalias": {
    "Resources": [
     "connectionalias"
    ]
   },
   "disassociateipgroups": {
    "Resources": [
     "directoryid",
     "workspaceipgroup"
    ]
   },
   "disassociateworkspaceapplication": {
    "Resources": [
     "workspaceapplication",
     "workspaceid"
    ]
   },
   "getaccountlink": {},
   "importclientbranding": {
    "Resources": [
     "directoryid"
    ]
   },
   "importworkspaceimage": {},
   "listaccountlinks": {},
   "listavailablemanagementcidrranges": {},
   "migrateworkspace": {
    "Resources": [
     "workspacebundle",
     "workspaceid"
    ]
   },
   "modifyaccount": {},
   "modifycertificatebasedauthproperties": {
    "Resources": [
     "directoryid"
    ]
   },
   "modifyclientproperties": {
    "Resources": [
     "directoryid"
    ]
   },
   "modifyendpointencryptionmode": {
    "Resources": [
     "directoryid"
    ]
   },
   "modifysamlproperties": {
    "Resources": [
     "directoryid"
    ]
   },
   "modifyselfservicepermissions": {
    "Resources": [
     "directoryid"
    ]
   },
   "modifystreamingproperties": {
    "Resources": [
     "directoryid"
    ]
   },
   "modifyworkspaceaccessproperties": {
    "Resources": [
     "directoryid"
    ]
   },
   "modifyworkspacecreationproperties": {
    "Resources": [
     "directoryid"
    ]
   },
   "modifyworkspaceproperties": {
    "Resources": [
     "workspaceid"
    ]
   },
   "modifyworkspacestate": {
    "Resources": [
     "workspaceid"
    ]
   },
   "rebootworkspaces": {
    "Resources": [
     "workspaceid"
    ]
   },
   "rebuildworkspaces": {
    "Resources": [
     "workspaceid"
    ]
   },
   "registerworkspacedirectory": {
    "Resources": [
     "directoryid"
    ]
   },
   "rejectaccountlinkinvitation": {},
   "restoreworkspace": {
    "Resources": [
     "workspaceid"
    ]
   },
   "revokeiprules": {
    "Resources": [
     "workspaceipgroup"
    ]
   },
   "startworkspaces": {
    "Resources": [
     "workspaceid"
    ]
   },
   "startworkspacespool": {
    "Resources": [
     "workspacespoolid"
    ]
   },
   "stopworkspaces": {
    "Resources": [
     "workspaceid"
    ]
   },
   "stopworkspacespool": {
    "Resources": [
     "workspacespoolid"
    ]
   },
   "stream": {
    "Resources": [
     "directoryid"
    ]
   },
   "terminateworkspaces": {
    "Resources": [
     "workspaceid"
    ]
   },
   "terminateworkspacespool": {
    "Resources": [
     "workspacespoolid"
    ]
   },
   "terminateworkspacespoolsession": {},
   "updateconnectclientaddin": {
    "Resources": [
     "directoryid"
    ]
   },
   "updateconnectionaliaspermission": {
    "Resources": [
     "connectionalias"
    ]
   },
   "updaterulesofipgroup": {
    "Resources": [
     "workspaceipgroup"
    ]
   },
   "updateworkspacebundle": {
    "Resources": [
     "workspacebundle",
     "workspaceimage"
    ]
   },
   "updateworkspaceimagepermission": {
    "Resources": [
     "workspaceimage"
    ]
   },
   "updateworkspacespool": {
    "Resources": [
     "workspacespoolid"
    ]
   }
  },
  "Resources": {
   "connectionalias": {
    "ARNFormats": [
     "arn:${Partition}:workspaces:${Region}:${Account}:connectionalias/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "directoryid": {
    "ARNFormats": [
     "arn:${Partition}:workspaces:${Region}:${Account}:directory/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "workspaceapplication": {
    "ARNFormats": [
     "arn:${Partition}:workspaces:${Region}:${Account}:workspaceapplication/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "workspacebundle": {
    "ARNFormats": [
     "arn:${Partition}:workspaces:${Region}:${Account}:workspacebundle/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "workspaceid": {
    "ARNFormats": [
     "arn:${Partition}:workspaces:${Region}:${Account}:workspace/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "workspaceimage": {
    "ARNFormats": [
     "arn:${Partition}:workspaces:${Region}:${Account}:workspaceimage/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "workspaceipgroup": {
    "ARNFormats": [
     "arn:${Partition}:workspaces:${Region}:${Account}:workspaceipgroup/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "workspacespoolid": {
    "ARNFormats": [
     "arn:${Partition}:workspaces:${Region}:${Account}:workspacespool/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "workspaces-web": {
  "Actions": {
   "associatebrowsersettings": {
    "Resources": [
     "browserSettings",
     "portal"
    ]
   },
   "associatedataprotectionsettings": {
    "Resources": [
     "dataProtectionSettings",
     "portal"
    ]
   },
   "associateipaccesssettings": {
    "Resources": [
     "ipAccessSettings",
     "portal"
    ]
   },
   "associatenetworksettings": {
    "Resources": [
     "networkSettings",
     "portal"
    ]
   },
   "associatetruststore": {
    "Resources": [
     "portal",
     "trustStore"
    ]
   },
   "associateuseraccessloggingsettings": {
    "Resources": [
     "portal",
     "userAccessLoggingSettings"
    ]
   },
   "associateusersettings": {
    "Resources": [
     "portal",
     "userSettings"
    ]
   },
   "createbrowsersettings": {},
   "createdataprotectionsettings": {},
   "createidentityprovider": {
    "Resources": [
     "identityProvider",
     "portal"
    ]
   },
   "createipaccesssettings": {},
   "createnetworksettings": {},
   "createportal": {},
   "createtruststore": {},
   "createuseraccessloggingsettings": {},
   "createusersettings": {},
   "deletebrowsersettings": {
    "Resources": [
     "browserSettings"
    ]
   },
   "deletedataprotectionsettings": {
    "Resources": [
     "dataProtectionSettings"
    ]
   },
   "deleteidentityprovider": {
    "Resources": [
     "identityProvider",
     "portal"
    ]
   },
   "deleteipaccesssettings": {
    "Resources": [
     "ipAccessSettings"
    ]
   },
   "deletenetworksettings": {
    "Resources": [
     "networkSettings"
    ]
   },
   "deleteportal": {
    "Resources": [
     "portal"
    ]
   },
   "deletetruststore": {
    "Resources": [
     "trustStore"
    ]
   },
   "deleteuseraccessloggingsettings": {
    "Resources": [
     "userAccessLoggingSettings"
    ]
   },
   "deleteusersettings": {
    "Resources": [
     "userSettings"
    ]
   },
   "disassociatebrowsersettings": {
    "Resources": [
     "portal"
    ]
   },
   "disassociatedataprotectionsettings": {
    "Resources": [
     "portal"
    ]
   },
   "disassociateipaccesssettings": {
    "Resources": [
     "portal"
    ]
   },
   "disassociatenetworksettings": {
    "Resources": [
     "portal"
    ]
   },
   "disassociatetruststore": {
    "Resources": [
     "portal"
    ]
   },
   "disassociateuseraccessloggingsettings": {
    "Resources": [
     "portal"
    ]
   },
   "disassociateusersettings": {
    "Resources": [
     "portal"
    ]
   },
   "expiresession": {
    "Resources": [
     "portal"
    ]
   },
   "getbrowsersettings": {
    "Resources": [
     "browserSettings"
    ]
   },
   "getdataprotectionsettings": {
    "Resources": [
     "dataProtectionSettings"
    ]
   },
   "getidentityprovider": {
    "Resources": [
     "identityProvider"
    ]
   },
   "getipaccesssettings": {
    "Resources": [
     "ipAccessSettings"
    ]
   },
   "getnetworksettings": {
    "Resources": [
     "networkSettings"
    ]
   },
   "getportal": {
    "Resources": [
     "portal"
    ]
   },
   "getportalserviceprovidermetadata": {
    "Resources": [
     "portal"
    ]
   },
   "getsession": {
    "Resources": [
     "portal"
    ]
   },
   "gettruststore": {
    "Resources": [
     "trustStore"
    ]
   },
   "gettruststorecertificate": {
    "Resources": [
     "trustStore"
    ]
   },
   "getuseraccessloggingsettings": {
    "Resources": [
     "userAccessLoggingSettings"
    ]
   },
   "getusersettings": {
    "Resources": [
     "userSettings"
    ]
   },
   "listbrowsersettings": {},
   "listdataprotectionsettings": {},
   "listidentityproviders": {
    "Resources": [
     "identityProvider"
    ]
   },
   "listipaccesssettings": {},
   "listnetworksettings": {},
   "listportals": {},
   "listsessions": {
    "Resources": [
     "portal"
    ]
   },
   "listtagsforresource": {},
   "listtruststorecertificates": {},
   "listtruststores": {},
   "listuseraccessloggingsettings": {},
   "listusersettings": {},
   "tagresource": {
    "Resources": [
     "browserSettings",
     "dataProtectionSettings",
     "identityProvider",
     "ipAccessSettings",
     "networkSettings",
     "portal",
     "trustStore",
     "userAccessLoggingSettings",
     "userSettings"
    ]
   },
   "untagresource": {
    "Resources": [
     "browserSettings",
     "dataProtectionSettings",
     "identityProvider",
     "ipAccessSettings",
     "networkSettings",
     "portal",
     "trustStore",
     "userAccessLoggingSettings",
     "userSettings"
    ]
   },
   "updatebrowsersettings": {
    "Resources": [
     "browserSettings"
    ]
   },
   "updatedataprotectionsettings": {
    "Resources": [
     "dataProtectionSettings"
    ]
   },
   "updateidentityprovider": {
    "Resources": [
     "identityProvider",
     "portal"
    ]
   },
   "updateipaccesssettings": {
    "Resources": [
     "ipAccessSettings"
    ]
   },
   "updatenetworksettings": {
    "Resources": [
     "networkSettings"
    ]
   },
   "updateportal": {
    "Resources": [
     "portal"
    ]
   },
   "updatetruststore": {
    "Resources": [
     "trustStore"
    ]
   },
   "updateuseraccessloggingsettings": {
    "Resources": [
     "userAccessLoggingSettings"
    ]
   },
   "updateusersettings": {
    "Resources": [
     "userSettings"
    ]
   }
  },
  "Resources": {
   "browsersettings": {
    "ARNFormats": [
     "arn:${Partition}:workspaces-web:${Region}:${Account}:browserSettings/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "dataprotectionsettings": {
    "ARNFormats": [
     "arn:${Partition}:workspaces-web:${Region}:${Account}:dataProtectionSettings/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "identityprovider": {
    "ARNFormats": [
     "arn:${Partition}:workspaces-web:${Region}:${Account}:identityProvider/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "ipaccesssettings": {
    "ARNFormats": [
     "arn:${Partition}:workspaces-web:${Region}:${Account}:ipAccessSettings/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "networksettings": {
    "ARNFormats": [
     "arn:${Partition}:workspaces-web:${Region}:${Account}:networkSettings/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "portal": {
    "ARNFormats": [
     "arn:${Partition}:workspaces-web:${Region}:${Account}:portal/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "truststore": {
    "ARNFormats": [
     "arn:${Partition}:workspaces-web:${Region}:${Account}:trustStore/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "useraccessloggingsettings": {
    "ARNFormats": [
     "arn:${Partition}:workspaces-web:${Region}:${Account}:userAccessLoggingSettings/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "usersettings": {
    "ARNFormats": [
     "arn:${Partition}:workspaces-web:${Region}:${Account}:userSettings/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 },
 "xray": {
  "Actions": {
   "batchgettraces": {},
   "batchgettracesummarybyid": {},
   "canceltraceretrieval": {},
   "creategroup": {
    "Resources": [
     "group"
    ]
   },
   "createsamplingrule": {
    "Resources": [
     "sampling-rule"
    ]
   },
   "deletegroup": {
    "Resources": [
     "group"
    ]
   },
   "deleteresourcepolicy": {},
   "deletesamplingrule": {
    "Resources": [
     "sampling-rule"
    ]
   },
   "getdistincttracegraphs": {},
   "getencryptionconfig": {},
   "getgroup": {
    "Resources": [
     "group"
    ]
   },
   "getgroups": {},
   "getindexingrules": {},
   "getinsight": {},
   "getinsightevents": {},
   "getinsightimpactgraph": {},
   "getinsightsummaries": {},
   "getretrievedtracesgraph": {},
   "getsamplingrules": {},
   "getsamplingstatisticsummaries": {},
   "getsamplingtargets": {},
   "getservicegraph": {},
   "gettimeseriesservicestatistics": {},
   "gettracegraph": {},
   "gettracesegmentdestination": {},
   "gettracesummaries": {},
   "link": {},
   "listresourcepolicies": {},
   "listretrievedtraces": {},
   "listtagsforresource": {
    "Resources": [
     "group",
     "sampling-rule"
    ]
   },
   "putencryptionconfig": {},
   "putresourcepolicy": {},
   "putspans": {},
   "putspansforindexing": {},
   "puttelemetryrecords": {},
   "puttracesegments": {},
   "starttraceretrieval": {},
   "tagresource": {
    "Resources": [
     "group",
     "sampling-rule"
    ]
   },
   "untagresource": {
    "Resources": [
     "group",
     "sampling-rule"
    ]
   },
   "updategroup": {
    "Resources": [
     "group"
    ]
   },
   "updateindexingrule": {},
   "updatesamplingrule": {
    "Resources": [
     "sampling-rule"
    ]
   },
   "updatetracesegmentdestination": {}
  },
  "Resources": {
   "group": {
    "ARNFormats": [
     "arn:${Partition}:xray:${Region}:${Account}:group/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   },
   "sampling-rule": {
    "ARNFormats": [
     "arn:${Partition}:xray:${Region}:${Account}:sampling-rule/.*"
    ],
    "ConditionKeys": [
     "aws:ResourceTag/${TagKey}"
    ]
   }
  }
 }
}
