{
  "VPCPolicyServiceActionMap": {
    "Amazon DynamoDB For VPC Policies": [
      "DescribeContinuousBackups",
      "DescribeBackup",
      "DescribeReservedCapacity",
      "PurchaseReservedCapacityOfferings",
      "ListBackups",
      "DeleteItem",
      "Query",
      "DeleteBackup",
      "DescribeTable",
      "CreateTable",
      "BatchGetItem",
      "BatchWriteItem",
      "DeleteTable",
      "RestoreTableFromBackup",
      "GetItem",
      "DescribeLimits",
      "UpdateTable",
      "UpdateItem",
      "DescribeReservedCapacityOfferings",
      "ListTables",
      "Scan",
      "PutItem",
      "CreateBackup"
    ]
  },
  "conditionKeys": [
    "aws:CurrentTime",
    "aws:EpochTime",
    "aws:MultiFactorAuthAge",
    "aws:MultiFactorAuthPresent",
    "aws:PrincipalArn",
    "aws:PrincipalOrgID",
    "aws:PrincipalTag/${TagKey}",
    "aws:PrincipalType",
    "aws:Referer",
    "aws:RequestTag/${TagKey}",
    "aws:RequestedRegion",
    "aws:SecureTransport",
    "aws:SourceAccount",
    "aws:SourceArn",
    "aws:SourceIp",
    "aws:SourceVpc",
    "aws:SourceVpce",
    "aws:TagKeys",
    "aws:TokenIssueTime",
    "aws:UserAgent",
    "aws:userid",
    "aws:username"
  ],
  "conditionOperators": [
    "ArnEquals",
    "ArnEqualsIfExists",
    "ArnLike",
    "ArnLikeIfExists",
    "ArnNotEquals",
    "ArnNotEqualsIfExists",
    "ArnNotLike",
    "ArnNotLikeIfExists",
    "BinaryEquals",
    "BinaryEqualsIfExists",
    "BinaryNotEquals",
    "BinaryNotEqualsIfExists",
    "Bool",
    "BoolIfExists",
    "DateEquals",
    "DateEqualsIfExists",
    "DateGreaterThan",
    "DateGreaterThanEquals",
    "DateGreaterThanEqualsIfExists",
    "DateGreaterThanIfExists",
    "DateLessThan",
    "DateLessThanEquals",
    "DateLessThanEqualsIfExists",
    "DateLessThanIfExists",
    "DateNotEquals",
    "DateNotEqualsIfExists",
    "IpAddress",
    "IpAddressIfExists",
    "NotIpAddress",
    "NotIpAddressIfExists",
    "Null",
    "NumericEquals",
    "NumericEqualsIfExists",
    "NumericGreaterThan",
    "NumericGreaterThanEquals",
    "NumericGreaterThanEqualsIfExists",
    "NumericGreaterThanIfExists",
    "NumericLessThan",
    "NumericLessThanEquals",
    "NumericLessThanEqualsIfExists",
    "NumericLessThanIfExists",
    "NumericNotEquals",
    "NumericNotEqualsIfExists",
    "StringEquals",
    "StringEqualsIfExists",
    "StringEqualsIgnoreCase",
    "StringEqualsIgnoreCaseIfExists",
    "StringLike",
    "StringLikeIfExists",
    "StringNotEquals",
    "StringNotEqualsIfExists",
    "StringNotEqualsIgnoreCase",
    "StringNotEqualsIgnoreCaseIfExists",
    "StringNotLike",
    "StringNotLikeIfExists"
  ],
  "policyTypes": {
    "IAMPolicy": {
      "AssociatedService": [
        "*"
      ],
      "Name": "IAM Policy"
    },
    "S3Policy": {
      "AssociatedService": [
        "Amazon S3"
      ],
      "Name": "S3 Bucket Policy"
    },
    "SNSPolicy": {
      "AssociatedService": [
        "Amazon SNS"
      ],
      "Name": "SNS Topic Policy"
    },
    "SQSPolicy": {
      "AssociatedService": [
        "Amazon SQS"
      ],
      "Name": "SQS Queue Policy"
    },
    "VPCPolicy": {
      "AssociatedService": [
        "Amazon S3",
        "Amazon DynamoDB For VPC Policies"
      ],
      "Name": "VPC Endpoint Policy"
    }
  },
  "serviceMap": {
    "AWS Accounts": {
      "Actions": [
        "DisableRegion",
        "EnableRegion",
        "ListRegions"
      ],
      "HasResource": false,
      "StringPrefix": "account",
      "conditionKeys": [
        "account:TargetRegion"
      ]
    },
    "AWS Amplify": {
      "ARNFormat": "arn:aws:amplify:<region>:<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:amplify:.+:.+:.+",
      "Actions": [
        "CreateApp",
        "CreateBackendEnvironment",
        "CreateBranch",
        "CreateDeployment",
        "CreateDomainAssociation",
        "CreateWebHook",
        "DeleteApp",
        "DeleteBackendEnvironment",
        "DeleteBranch",
        "DeleteDomainAssociation",
        "DeleteJob",
        "DeleteWebHook",
        "GenerateAccessLogs",
        "GetApp",
        "GetArtifactUrl",
        "GetBackendEnvironment",
        "GetBranch",
        "GetDomainAssociation",
        "GetJob",
        "GetWebHook",
        "ListApps",
        "ListArtifacts",
        "ListBackendEnvironments",
        "ListBranches",
        "ListDomainAssociations",
        "ListJobs",
        "ListWebHooks",
        "StartDeployment",
        "StartJob",
        "StopJob",
        "TagResource",
        "UntagResource",
        "UpdateApp",
        "UpdateBranch",
        "UpdateDomainAssociation",
        "UpdateWebHook"
      ],
      "HasResource": true,
      "StringPrefix": "amplify",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS App Mesh": {
      "ARNFormat": "arn:aws:appmesh:<region>:<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:appmesh:.+:.+:.+",
      "Actions": [
        "CreateMesh",
        "CreateRoute",
        "CreateVirtualNode",
        "CreateVirtualRouter",
        "CreateVirtualService",
        "DeleteMesh",
        "DeleteRoute",
        "DeleteVirtualNode",
        "DeleteVirtualRouter",
        "DeleteVirtualService",
        "DescribeMesh",
        "DescribeRoute",
        "DescribeVirtualNode",
        "DescribeVirtualRouter",
        "DescribeVirtualService",
        "ListMeshes",
        "ListRoutes",
        "ListTagsForResource",
        "ListVirtualNodes",
        "ListVirtualRouters",
        "ListVirtualServices",
        "StreamAggregatedResources",
        "TagResource",
        "UntagResource",
        "UpdateMesh",
        "UpdateRoute",
        "UpdateVirtualNode",
        "UpdateVirtualRouter",
        "UpdateVirtualService"
      ],
      "HasResource": true,
      "StringPrefix": "appmesh",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS App Mesh Preview": {
      "ARNFormat": "arn:aws:appmesh-preview:<region>:<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:appmesh-preview:.+:.+:.+",
      "Actions": [
        "CreateMesh",
        "CreateRoute",
        "CreateVirtualNode",
        "CreateVirtualRouter",
        "CreateVirtualService",
        "DeleteMesh",
        "DeleteRoute",
        "DeleteVirtualNode",
        "DeleteVirtualRouter",
        "DeleteVirtualService",
        "DescribeMesh",
        "DescribeRoute",
        "DescribeVirtualNode",
        "DescribeVirtualRouter",
        "DescribeVirtualService",
        "ListMeshes",
        "ListRoutes",
        "ListVirtualNodes",
        "ListVirtualRouters",
        "ListVirtualServices",
        "StreamAggregatedResources",
        "UpdateMesh",
        "UpdateRoute",
        "UpdateVirtualNode",
        "UpdateVirtualRouter",
        "UpdateVirtualService"
      ],
      "HasResource": true,
      "StringPrefix": "appmesh-preview"
    },
    "AWS AppConfig": {
      "ARNFormat": "arn:aws:appconfig:<region>:<account-id>:<relative-id>",
      "ARNRegex": "^arn:aws:appconfig:.+",
      "Actions": [
        "CreateApplication",
        "CreateConfigurationProfile",
        "CreateDeploymentStrategy",
        "CreateEnvironment",
        "DeleteApplication",
        "DeleteConfigurationProfile",
        "DeleteDeploymentStrategy",
        "DeleteEnvironment",
        "GetApplication",
        "GetConfiguration",
        "GetConfigurationProfile",
        "GetDeployment",
        "GetDeploymentStrategy",
        "GetEnvironment",
        "ListApplications",
        "ListConfigurationProfiles",
        "ListDeploymentStrategies",
        "ListDeployments",
        "ListEnvironments",
        "ListTagsForResource",
        "StartDeployment",
        "StopDeployment",
        "TagResource",
        "UntagResource",
        "UpdateApplication",
        "UpdateConfigurationProfile",
        "UpdateDeploymentStrategy",
        "UpdateEnvironment",
        "ValidateConfiguration"
      ],
      "HasResource": true,
      "StringPrefix": "appconfig",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS AppSync": {
      "ARNFormat": "arn:aws:appsync:<region>:<account>:<resourceType>/<resourcePath>",
      "ARNRegex": "^arn:aws:appsync:.+",
      "Actions": [
        "CreateApiKey",
        "CreateDataSource",
        "CreateFunction",
        "CreateGraphqlApi",
        "CreateResolver",
        "CreateType",
        "DeleteApiKey",
        "DeleteDataSource",
        "DeleteFunction",
        "DeleteGraphqlApi",
        "DeleteResolver",
        "DeleteType",
        "GetDataSource",
        "GetFunction",
        "GetGraphqlApi",
        "GetIntrospectionSchema",
        "GetResolver",
        "GetSchemaCreationStatus",
        "GetType",
        "GraphQL",
        "ListApiKeys",
        "ListDataSources",
        "ListFunctions",
        "ListGraphqlApis",
        "ListResolvers",
        "ListResolversByFunction",
        "ListTagsForResource",
        "ListTypes",
        "StartSchemaCreation",
        "TagResource",
        "UntagResource",
        "UpdateApiKey",
        "UpdateDataSource",
        "UpdateFunction",
        "UpdateGraphqlApi",
        "UpdateResolver",
        "UpdateType"
      ],
      "HasResource": true,
      "StringPrefix": "appsync",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS Artifact": {
      "ARNFormat": "arn:aws:artifact::<resource>",
      "ARNRegex": "^arn:aws:artifact::.+",
      "Actions": [
        "AcceptAgreement",
        "DownloadAgreement",
        "Get",
        "TerminateAgreement"
      ],
      "HasResource": true,
      "StringPrefix": "artifact"
    },
    "AWS Auto Scaling": {
      "Actions": [
        "CreateScalingPlan",
        "DeleteScalingPlan",
        "DescribeScalingPlanResources",
        "DescribeScalingPlans",
        "GetScalingPlanResourceForecastData",
        "UpdateScalingPlan"
      ],
      "HasResource": false,
      "StringPrefix": "autoscaling-plans"
    },
    "AWS Backup": {
      "ARNFormat": "arn:<partition>:backup:<region>:<account-id>:<resource-type>:<resource_name>",
      "ARNRegex": "^arn:${Partition}:backup:.+:.+:.+",
      "Actions": [
        "CopyIntoBackupVault",
        "CreateBackupPlan",
        "CreateBackupSelection",
        "CreateBackupVault",
        "DeleteBackupPlan",
        "DeleteBackupSelection",
        "DeleteBackupVault",
        "DeleteBackupVaultAccessPolicy",
        "DeleteBackupVaultNotifications",
        "DeleteRecoveryPoint",
        "DescribeBackupJob",
        "DescribeBackupVault",
        "DescribeCopyJob",
        "DescribeProtectedResource",
        "DescribeRecoveryPoint",
        "DescribeRestoreJob",
        "ExportBackupPlanTemplate",
        "GetBackupPlan",
        "GetBackupPlanFromJSON",
        "GetBackupPlanFromTemplate",
        "GetBackupSelection",
        "GetBackupVaultAccessPolicy",
        "GetBackupVaultNotifications",
        "GetRecoveryPointRestoreMetadata",
        "GetSupportedResourceTypes",
        "ListBackupJobs",
        "ListBackupPlanTemplates",
        "ListBackupPlanVersions",
        "ListBackupPlans",
        "ListBackupSelections",
        "ListBackupVaults",
        "ListCopyJobs",
        "ListProtectedResources",
        "ListRecoveryPointsByBackupVault",
        "ListRecoveryPointsByResource",
        "ListRestoreJobs",
        "ListTags",
        "PutBackupVaultAccessPolicy",
        "PutBackupVaultNotifications",
        "StartBackupJob",
        "StartCopyJob",
        "StartRestoreJob",
        "StopBackupJob",
        "TagResource",
        "UntagResource",
        "UpdateBackupPlan",
        "UpdateRecoveryPointLifecycle"
      ],
      "HasResource": true,
      "StringPrefix": "backup",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS Backup storage": {
      "ARNFormat": "arn:aws:backup-storage:<region>:<account-id>:<resource-type>:<resource_name>",
      "ARNRegex": "^^arn:aws:backup-storage:.+:.+:.+",
      "Actions": [
        "MountCapsule"
      ],
      "HasResource": false,
      "StringPrefix": "backup-storage"
    },
    "AWS Batch": {
      "ARNFormat": "arn:aws:batch:<region>:<account_ID>:<resource_type>/<relative_ID>",
      "ARNRegex": "^arn:aws:batch:.+",
      "Actions": [
        "CancelJob",
        "CreateComputeEnvironment",
        "CreateJobQueue",
        "DeleteComputeEnvironment",
        "DeleteJobQueue",
        "DeregisterJobDefinition",
        "DescribeComputeEnvironments",
        "DescribeJobDefinitions",
        "DescribeJobQueues",
        "DescribeJobs",
        "ListJobs",
        "RegisterJobDefinition",
        "SubmitJob",
        "TerminateJob",
        "UpdateComputeEnvironment",
        "UpdateJobQueue"
      ],
      "HasResource": true,
      "StringPrefix": "batch",
      "conditionKeys": [
        "batch:Image",
        "batch:Privileged",
        "batch:User"
      ]
    },
    "AWS Billing": {
      "Actions": [
        "ModifyAccount",
        "ModifyBilling",
        "ModifyPaymentMethods",
        "ViewAccount",
        "ViewBilling",
        "ViewPaymentMethods",
        "ViewUsage"
      ],
      "HasResource": false,
      "StringPrefix": "aws-portal"
    },
    "AWS Budget Service": {
      "ARNFormat": "arn:aws:budgets::<account_ID>:budget/<budgetname>",
      "ARNRegex": "^arn:aws:budgets::.+:.+",
      "Actions": [
        "ModifyBudget",
        "ViewBudget"
      ],
      "HasResource": true,
      "StringPrefix": "budgets"
    },
    "AWS Certificate Manager": {
      "ARNFormat": "arn:aws:acm:<region>:<account_ID>:<arn_type>/<resource_id>",
      "ARNRegex": "^arn:aws:acm:.+:[0-9]+:.+",
      "Actions": [
        "AddTagsToCertificate",
        "DeleteCertificate",
        "DescribeCertificate",
        "ExportCertificate",
        "GetCertificate",
        "ImportCertificate",
        "ListCertificates",
        "ListTagsForCertificate",
        "RemoveTagsFromCertificate",
        "RenewCertificate",
        "RequestCertificate",
        "ResendValidationEmail",
        "UpdateCertificateOptions"
      ],
      "HasResource": true,
      "StringPrefix": "acm",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS Certificate Manager Private Certificate Authority": {
      "ARNFormat": "arn:aws:acm-pca:<region>:<account_ID>:<arn_type>/<resource_id>",
      "ARNRegex": "^arn:aws:acm-pca:.+:[0-9]+:.+",
      "Actions": [
        "CreateCertificateAuthority",
        "CreateCertificateAuthorityAuditReport",
        "CreatePermission",
        "DeleteCertificateAuthority",
        "DeletePermission",
        "DescribeCertificateAuthority",
        "DescribeCertificateAuthorityAuditReport",
        "GetCertificate",
        "GetCertificateAuthorityCertificate",
        "GetCertificateAuthorityCsr",
        "ImportCertificateAuthorityCertificate",
        "IssueCertificate",
        "ListCertificateAuthorities",
        "ListPermissions",
        "ListTags",
        "RestoreCertificateAuthority",
        "RevokeCertificate",
        "TagCertificateAuthority",
        "UntagCertificateAuthority",
        "UpdateCertificateAuthority"
      ],
      "HasResource": true,
      "StringPrefix": "acm-pca",
      "conditionKeys": [
        "acm-pca:TemplateArn",
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS Chatbot": {
      "ARNFormat": "arn:${Partition}:chatbot::<account>:<resourceType>/<resourceName>",
      "ARNRegex": "^arn:${Partition}:chatbot:.+",
      "Actions": [
        "CreateChimeWebhookConfiguration",
        "CreateSlackChannelConfiguration",
        "DeleteChimeWebhookConfiguration",
        "DeleteSlackChannelConfiguration",
        "DescribeChimeWebhookConfigurations",
        "DescribeSlackChannelConfigurations",
        "DescribeSlackChannels",
        "DescribeSlackWorkspaces",
        "GetSlackOauthParameters",
        "RedeemSlackOauthCode",
        "UpdateChimeWebhookConfiguration",
        "UpdateSlackChannelConfiguration"
      ],
      "HasResource": true,
      "StringPrefix": "chatbot"
    },
    "AWS Cloud Map": {
      "ARNFormat": "arn:aws:servicediscovery:<region>:<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:servicediscovery:.+",
      "Actions": [
        "CreateHttpNamespace",
        "CreatePrivateDnsNamespace",
        "CreatePublicDnsNamespace",
        "CreateService",
        "DeleteNamespace",
        "DeleteService",
        "DeregisterInstance",
        "DiscoverInstances",
        "GetInstance",
        "GetInstancesHealthStatus",
        "GetNamespace",
        "GetOperation",
        "GetService",
        "ListInstances",
        "ListNamespaces",
        "ListOperations",
        "ListServices",
        "ListTagsForResource",
        "RegisterInstance",
        "TagResource",
        "UntagResource",
        "UpdateInstanceCustomHealthStatus",
        "UpdateService"
      ],
      "HasResource": true,
      "StringPrefix": "servicediscovery",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "servicediscovery:NamespaceArn",
        "servicediscovery:NamespaceName",
        "servicediscovery:ServiceArn",
        "servicediscovery:ServiceName"
      ]
    },
    "AWS Cloud9": {
      "ARNFormat": "arn:aws:cloud9:<region>:<account-id>:<resource_type>:<resource_id>",
      "ARNRegex": "^arn:aws:cloud9:.+:[0-9]+:.+:.+",
      "Actions": [
        "CreateEnvironmentEC2",
        "CreateEnvironmentMembership",
        "DeleteEnvironment",
        "DeleteEnvironmentMembership",
        "DescribeEnvironmentMemberships",
        "DescribeEnvironmentStatus",
        "DescribeEnvironments",
        "GetUserSettings",
        "ListEnvironments",
        "ListTagsForResource",
        "TagResource",
        "UntagResource",
        "UpdateEnvironment",
        "UpdateEnvironmentMembership",
        "UpdateUserSettings"
      ],
      "HasResource": true,
      "StringPrefix": "cloud9",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "cloud9:EnvironmentId",
        "cloud9:EnvironmentName",
        "cloud9:InstanceType",
        "cloud9:Permissions",
        "cloud9:SubnetId",
        "cloud9:UserArn"
      ]
    },
    "AWS CloudFormation": {
      "ARNFormat": "arn:aws:cloudformation:<region>:<account>:<relative-id>",
      "ARNRegex": "^arn:aws:cloudformation:.+:[0-9]+:.+",
      "Actions": [
        "CancelUpdateStack",
        "ContinueUpdateRollback",
        "CreateChangeSet",
        "CreateStack",
        "CreateStackInstances",
        "CreateStackSet",
        "CreateUploadBucket",
        "DeleteChangeSet",
        "DeleteStack",
        "DeleteStackInstances",
        "DeleteStackSet",
        "DeregisterType",
        "DescribeAccountLimits",
        "DescribeChangeSet",
        "DescribeStackDriftDetectionStatus",
        "DescribeStackEvents",
        "DescribeStackInstance",
        "DescribeStackResource",
        "DescribeStackResourceDrifts",
        "DescribeStackResources",
        "DescribeStackSet",
        "DescribeStackSetOperation",
        "DescribeStacks",
        "DescribeType",
        "DescribeTypeRegistration",
        "DetectStackDrift",
        "DetectStackResourceDrift",
        "DetectStackSetDrift",
        "EstimateTemplateCost",
        "ExecuteChangeSet",
        "GetStackPolicy",
        "GetTemplate",
        "GetTemplateSummary",
        "ListChangeSets",
        "ListExports",
        "ListImports",
        "ListStackInstances",
        "ListStackResources",
        "ListStackSetOperationResults",
        "ListStackSetOperations",
        "ListStackSets",
        "ListStacks",
        "ListTypeRegistrations",
        "ListTypeVersions",
        "ListTypes",
        "RegisterType",
        "SetStackPolicy",
        "SetTypeDefaultVersion",
        "SignalResource",
        "StopStackSetOperation",
        "TagResource",
        "UntagResource",
        "UpdateStack",
        "UpdateStackInstances",
        "UpdateStackSet",
        "UpdateTerminationProtection",
        "ValidateTemplate"
      ],
      "HasResource": true,
      "StringPrefix": "cloudformation",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "cloudformation:ChangeSetName",
        "cloudformation:ImportResourceTypes",
        "cloudformation:ResourceTypes",
        "cloudformation:RoleArn",
        "cloudformation:StackPolicyUrl",
        "cloudformation:TemplateUrl"
      ]
    },
    "AWS CloudHSM": {
      "ARNFormat": "arn:<partition>:cloudhsm:<region>:<accountID>:<relative-id>",
      "ARNRegex": "^arn:<partition>:cloudhsm:.+",
      "Actions": [
        "AddTagsToResource",
        "CopyBackupToRegion",
        "CreateCluster",
        "CreateHapg",
        "CreateHsm",
        "CreateLunaClient",
        "DeleteBackup",
        "DeleteCluster",
        "DeleteHapg",
        "DeleteHsm",
        "DeleteLunaClient",
        "DescribeBackups",
        "DescribeClusters",
        "DescribeHapg",
        "DescribeHsm",
        "DescribeLunaClient",
        "GetConfig",
        "InitializeCluster",
        "ListAvailableZones",
        "ListHapgs",
        "ListHsms",
        "ListLunaClients",
        "ListTags",
        "ListTagsForResource",
        "ModifyHapg",
        "ModifyHsm",
        "ModifyLunaClient",
        "RemoveTagsFromResource",
        "RestoreBackup",
        "TagResource",
        "UntagResource"
      ],
      "HasResource": true,
      "StringPrefix": "cloudhsm",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS CloudTrail": {
      "ARNFormat": "arn:aws:cloudtrail:<region>:<account>:<resource>",
      "ARNRegex": "^arn:aws:cloudtrail:.+:[0-9]+:.+",
      "Actions": [
        "AddTags",
        "CreateTrail",
        "DeleteTrail",
        "DescribeTrails",
        "GetEventSelectors",
        "GetInsightSelectors",
        "GetTrail",
        "GetTrailStatus",
        "ListPublicKeys",
        "ListTags",
        "ListTrails",
        "LookupEvents",
        "PutEventSelectors",
        "PutInsightSelectors",
        "RemoveTags",
        "StartLogging",
        "StopLogging",
        "UpdateTrail"
      ],
      "HasResource": true,
      "StringPrefix": "cloudtrail"
    },
    "AWS Code Signing for Amazon FreeRTOS": {
      "ARNFormat": "arn:aws:signer:<region>::<signer_resource_path>",
      "ARNRegex": "^arn:aws:signer:.+",
      "Actions": [
        "CancelSigningProfile",
        "DescribeSigningJob",
        "GetSigningPlatform",
        "GetSigningProfile",
        "ListSigningJobs",
        "ListSigningPlatforms",
        "ListSigningProfiles",
        "ListTagsForResource",
        "PutSigningProfile",
        "StartSigningJob",
        "TagResource",
        "UntagResource"
      ],
      "HasResource": true,
      "StringPrefix": "signer",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS CodeArtifact": {
      "ARNFormat": "arn:${Partition}:codeartifact:<region>:<account_ID>:<resource_type>/<resource_id>",
      "ARNRegex": "^arn:${Partition}:codeartifact:.+:[0-9]+:.+/.+",
      "Actions": [
        "AssociateExternalConnection",
        "AssociateWithDownstreamRepository",
        "CopyPackageVersions",
        "CreateDomain",
        "CreateRepository",
        "DeleteDomain",
        "DeleteDomainPermissionsPolicy",
        "DeletePackageVersions",
        "DeleteRepository",
        "DeleteRepositoryPermissionsPolicy",
        "DescribeDomain",
        "DescribePackageVersion",
        "DescribeRepository",
        "DisassociateExternalConnection",
        "DisposePackageVersions",
        "GetAuthorizationToken",
        "GetDomainPermissionsPolicy",
        "GetPackageVersionAsset",
        "GetPackageVersionReadme",
        "GetRepositoryEndpoint",
        "GetRepositoryPermissionsPolicy",
        "ListDomains",
        "ListPackageVersionAssets",
        "ListPackageVersionDependencies",
        "ListPackageVersions",
        "ListPackages",
        "ListRepositories",
        "ListRepositoriesInDomain",
        "PublishPackageVersion",
        "PutDomainPermissionsPolicy",
        "PutPackageMetadata",
        "PutRepositoryPermissionsPolicy",
        "ReadFromRepository",
        "UpdatePackageVersionsStatus",
        "UpdateRepository"
      ],
      "HasResource": true,
      "StringPrefix": "codeartifact"
    },
    "AWS CodeBuild": {
      "ARNFormat": "arn:${Partition}:codebuild:<region>:<account_ID>:<resource_type>/<resource_id>",
      "ARNRegex": "^arn:${Partition}:codebuild:.+:[0-9]+:.+/.+",
      "Actions": [
        "BatchDeleteBuilds",
        "BatchGetBuilds",
        "BatchGetProjects",
        "BatchGetReportGroups",
        "BatchGetReports",
        "BatchPutTestCases",
        "CreateProject",
        "CreateReport",
        "CreateReportGroup",
        "CreateWebhook",
        "DeleteOAuthToken",
        "DeleteProject",
        "DeleteReport",
        "DeleteReportGroup",
        "DeleteResourcePolicy",
        "DeleteSourceCredentials",
        "DeleteWebhook",
        "DescribeTestCases",
        "GetResourcePolicy",
        "ImportSourceCredentials",
        "InvalidateProjectCache",
        "ListBuilds",
        "ListBuildsForProject",
        "ListConnectedOAuthAccounts",
        "ListCuratedEnvironmentImages",
        "ListProjects",
        "ListReportGroups",
        "ListReports",
        "ListReportsForReportGroup",
        "ListRepositories",
        "ListSharedProjects",
        "ListSharedReportGroups",
        "ListSourceCredentials",
        "PersistOAuthToken",
        "PutResourcePolicy",
        "StartBuild",
        "StopBuild",
        "UpdateProject",
        "UpdateReport",
        "UpdateReportGroup",
        "UpdateWebhook"
      ],
      "HasResource": true,
      "StringPrefix": "codebuild",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS CodeCommit": {
      "ARNFormat": "arn:aws:codecommit:<region>:<account_ID>:<repository_name>",
      "ARNRegex": "^arn:aws:codecommit:.+",
      "Actions": [
        "AssociateApprovalRuleTemplateWithRepository",
        "BatchAssociateApprovalRuleTemplateWithRepositories",
        "BatchDescribeMergeConflicts",
        "BatchDisassociateApprovalRuleTemplateFromRepositories",
        "BatchGetCommits",
        "BatchGetPullRequests",
        "BatchGetRepositories",
        "CancelUploadArchive",
        "CreateApprovalRuleTemplate",
        "CreateBranch",
        "CreateCommit",
        "CreatePullRequest",
        "CreatePullRequestApprovalRule",
        "CreateRepository",
        "CreateUnreferencedMergeCommit",
        "DeleteApprovalRuleTemplate",
        "DeleteBranch",
        "DeleteCommentContent",
        "DeleteFile",
        "DeletePullRequestApprovalRule",
        "DeleteRepository",
        "DescribeMergeConflicts",
        "DescribePullRequestEvents",
        "DisassociateApprovalRuleTemplateFromRepository",
        "EvaluatePullRequestApprovalRules",
        "GetApprovalRuleTemplate",
        "GetBlob",
        "GetBranch",
        "GetComment",
        "GetCommentsForComparedCommit",
        "GetCommentsForPullRequest",
        "GetCommit",
        "GetCommitHistory",
        "GetCommitsFromMergeBase",
        "GetDifferences",
        "GetFile",
        "GetFolder",
        "GetMergeCommit",
        "GetMergeConflicts",
        "GetMergeOptions",
        "GetObjectIdentifier",
        "GetPullRequest",
        "GetPullRequestApprovalStates",
        "GetPullRequestOverrideState",
        "GetReferences",
        "GetRepository",
        "GetRepositoryTriggers",
        "GetTree",
        "GetUploadArchiveStatus",
        "GitPull",
        "GitPush",
        "ListApprovalRuleTemplates",
        "ListAssociatedApprovalRuleTemplatesForRepository",
        "ListBranches",
        "ListPullRequests",
        "ListRepositories",
        "ListRepositoriesForApprovalRuleTemplate",
        "ListTagsForResource",
        "MergeBranchesByFastForward",
        "MergeBranchesBySquash",
        "MergeBranchesByThreeWay",
        "MergePullRequestByFastForward",
        "MergePullRequestBySquash",
        "MergePullRequestByThreeWay",
        "OverridePullRequestApprovalRules",
        "PostCommentForComparedCommit",
        "PostCommentForPullRequest",
        "PostCommentReply",
        "PutFile",
        "PutRepositoryTriggers",
        "TagResource",
        "TestRepositoryTriggers",
        "UntagResource",
        "UpdateApprovalRuleTemplateContent",
        "UpdateApprovalRuleTemplateDescription",
        "UpdateApprovalRuleTemplateName",
        "UpdateComment",
        "UpdateDefaultBranch",
        "UpdatePullRequestApprovalRuleContent",
        "UpdatePullRequestApprovalState",
        "UpdatePullRequestDescription",
        "UpdatePullRequestStatus",
        "UpdatePullRequestTitle",
        "UpdateRepositoryDescription",
        "UpdateRepositoryName",
        "UploadArchive"
      ],
      "HasResource": true,
      "StringPrefix": "codecommit",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "codecommit:References"
      ]
    },
    "AWS CodeDeploy": {
      "ARNFormat": "arn:aws:codedeploy:region:account:resource-type:resource-specifier",
      "ARNRegex": "^arn:aws:codedeploy:.+",
      "Actions": [
        "AddTagsToOnPremisesInstances",
        "BatchGetApplicationRevisions",
        "BatchGetApplications",
        "BatchGetDeploymentGroups",
        "BatchGetDeploymentInstances",
        "BatchGetDeploymentTargets",
        "BatchGetDeployments",
        "BatchGetOnPremisesInstances",
        "ContinueDeployment",
        "CreateApplication",
        "CreateCloudFormationDeployment",
        "CreateDeployment",
        "CreateDeploymentConfig",
        "CreateDeploymentGroup",
        "DeleteApplication",
        "DeleteDeploymentConfig",
        "DeleteDeploymentGroup",
        "DeleteGitHubAccountToken",
        "DeleteResourcesByExternalId",
        "DeregisterOnPremisesInstance",
        "GetApplication",
        "GetApplicationRevision",
        "GetDeployment",
        "GetDeploymentConfig",
        "GetDeploymentGroup",
        "GetDeploymentInstance",
        "GetDeploymentTarget",
        "GetOnPremisesInstance",
        "ListApplicationRevisions",
        "ListApplications",
        "ListDeploymentConfigs",
        "ListDeploymentGroups",
        "ListDeploymentInstances",
        "ListDeploymentTargets",
        "ListDeployments",
        "ListGitHubAccountTokenNames",
        "ListOnPremisesInstances",
        "ListTagsForResource",
        "PutLifecycleEventHookExecutionStatus",
        "RegisterApplicationRevision",
        "RegisterOnPremisesInstance",
        "RemoveTagsFromOnPremisesInstances",
        "SkipWaitTimeForInstanceTermination",
        "StopDeployment",
        "TagResource",
        "UntagResource",
        "UpdateApplication",
        "UpdateDeploymentGroup"
      ],
      "HasResource": true,
      "StringPrefix": "codedeploy",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS CodePipeline": {
      "ARNFormat": "arn:aws:codepipeline:<region>:<account_ID>:<path_to_pipeline_resource>",
      "ARNRegex": "arn:aws:codepipeline:.+",
      "Actions": [
        "AcknowledgeJob",
        "AcknowledgeThirdPartyJob",
        "CreateCustomActionType",
        "CreatePipeline",
        "DeleteCustomActionType",
        "DeletePipeline",
        "DeleteWebhook",
        "DeregisterWebhookWithThirdParty",
        "DisableStageTransition",
        "EnableStageTransition",
        "GetJobDetails",
        "GetPipeline",
        "GetPipelineExecution",
        "GetPipelineState",
        "GetThirdPartyJobDetails",
        "ListActionExecutions",
        "ListActionTypes",
        "ListPipelineExecutions",
        "ListPipelines",
        "ListTagsForResource",
        "ListWebhooks",
        "PollForJobs",
        "PollForThirdPartyJobs",
        "PutActionRevision",
        "PutApprovalResult",
        "PutJobFailureResult",
        "PutJobSuccessResult",
        "PutThirdPartyJobFailureResult",
        "PutThirdPartyJobSuccessResult",
        "PutWebhook",
        "RegisterWebhookWithThirdParty",
        "RetryStageExecution",
        "StartPipelineExecution",
        "StopPipelineExecution",
        "TagResource",
        "UntagResource",
        "UpdatePipeline"
      ],
      "HasResource": true,
      "StringPrefix": "codepipeline",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS CodeStar": {
      "ARNFormat": "arn:aws:codestar:<region>:<account_ID>:<resource_type>/<resource_id>",
      "ARNRegex": "^arn:aws:codestar:.+:[0-9]+:project/.+",
      "Actions": [
        "AssociateTeamMember",
        "CreateProject",
        "CreateUserProfile",
        "DeleteExtendedAccess",
        "DeleteProject",
        "DeleteUserProfile",
        "DescribeProject",
        "DescribeUserProfile",
        "DisassociateTeamMember",
        "GetExtendedAccess",
        "ListProjects",
        "ListResources",
        "ListTagsForProject",
        "ListTeamMembers",
        "ListUserProfiles",
        "PutExtendedAccess",
        "TagProject",
        "UntagProject",
        "UpdateProject",
        "UpdateTeamMember",
        "UpdateUserProfile"
      ],
      "HasResource": true,
      "StringPrefix": "codestar",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "iam:ResourceTag/${TagKey}"
      ]
    },
    "AWS CodeStar Connections": {
      "ARNFormat": "arn:aws:codestar-connections:<region>:<account-id>:<resource-type>/<resource_id>",
      "ARNRegex": "^arn:aws:codestar-connections:.+:.+:.+",
      "Actions": [
        "CreateConnection",
        "DeleteConnection",
        "GetConnection",
        "GetIndividualAccessToken",
        "GetInstallationUrl",
        "ListConnections",
        "ListInstallationTargets",
        "ListTagsForResource",
        "PassConnection",
        "StartOAuthHandshake",
        "TagResource",
        "UntagResource",
        "UpdateConnectionInstallation",
        "UseConnection"
      ],
      "HasResource": true,
      "StringPrefix": "codestar-connections",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "codestar-connections:BranchName",
        "codestar-connections:FullRepositoryId",
        "codestar-connections:InstallationId",
        "codestar-connections:OwnerId",
        "codestar-connections:PassedToService",
        "codestar-connections:ProviderAction",
        "codestar-connections:ProviderPermissionsRequired",
        "codestar-connections:ProviderType",
        "codestar-connections:ProviderTypeFilter",
        "codestar-connections:RepositoryName"
      ]
    },
    "AWS CodeStar Notifications": {
      "ARNFormat": "arn:aws:codestar-notifications:<region>:<account-id>:<resource-type>/<resource_id>",
      "ARNRegex": "^arn:aws:codestar-notifications:.+:.+:.+",
      "Actions": [
        "CreateNotificationRule",
        "DeleteNotificationRule",
        "DeleteTarget",
        "DescribeNotificationRule",
        "ListEventTypes",
        "ListNotificationRules",
        "ListTagsForResource",
        "ListTargets",
        "Subscribe",
        "TagResource",
        "Unsubscribe",
        "UntagResource",
        "UpdateNotificationRule"
      ],
      "HasResource": true,
      "StringPrefix": "codestar-notifications",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "codestar-notifications:NotificationsForResource"
      ]
    },
    "AWS Config": {
      "ARNFormat": "arn:<partition>:config:<region>:<account>:<resourceType>/<resourceId>",
      "ARNRegex": "arn:<partition>:config:.+",
      "Actions": [
        "BatchGetAggregateResourceConfig",
        "BatchGetResourceConfig",
        "DeleteAggregationAuthorization",
        "DeleteConfigRule",
        "DeleteConfigurationAggregator",
        "DeleteConfigurationRecorder",
        "DeleteConformancePack",
        "DeleteDeliveryChannel",
        "DeleteEvaluationResults",
        "DeleteOrganizationConfigRule",
        "DeleteOrganizationConformancePack",
        "DeletePendingAggregationRequest",
        "DeleteRemediationConfiguration",
        "DeleteRemediationExceptions",
        "DeleteRetentionConfiguration",
        "DeliverConfigSnapshot",
        "DescribeAggregateComplianceByConfigRules",
        "DescribeAggregationAuthorizations",
        "DescribeComplianceByConfigRule",
        "DescribeComplianceByResource",
        "DescribeConfigRuleEvaluationStatus",
        "DescribeConfigRules",
        "DescribeConfigurationAggregatorSourcesStatus",
        "DescribeConfigurationAggregators",
        "DescribeConfigurationRecorderStatus",
        "DescribeConfigurationRecorders",
        "DescribeConformancePackCompliance",
        "DescribeConformancePackStatus",
        "DescribeConformancePacks",
        "DescribeDeliveryChannelStatus",
        "DescribeDeliveryChannels",
        "DescribeOrganizationConfigRuleStatuses",
        "DescribeOrganizationConfigRules",
        "DescribeOrganizationConformancePackStatuses",
        "DescribeOrganizationConformancePacks",
        "DescribePendingAggregationRequests",
        "DescribeRemediationConfigurations",
        "DescribeRemediationExceptions",
        "DescribeRemediationExecutionStatus",
        "DescribeRetentionConfigurations",
        "GetAggregateComplianceDetailsByConfigRule",
        "GetAggregateConfigRuleComplianceSummary",
        "GetAggregateDiscoveredResourceCounts",
        "GetAggregateResourceConfig",
        "GetComplianceDetailsByConfigRule",
        "GetComplianceDetailsByResource",
        "GetComplianceSummaryByConfigRule",
        "GetComplianceSummaryByResourceType",
        "GetConformancePackComplianceDetails",
        "GetConformancePackComplianceSummary",
        "GetDiscoveredResourceCounts",
        "GetOrganizationConfigRuleDetailedStatus",
        "GetOrganizationConformancePackDetailedStatus",
        "GetResourceConfigHistory",
        "GetResources",
        "GetTagKeys",
        "ListAggregateDiscoveredResources",
        "ListDiscoveredResources",
        "ListTagsForResource",
        "PutAggregationAuthorization",
        "PutConfigRule",
        "PutConfigurationAggregator",
        "PutConfigurationRecorder",
        "PutConformancePack",
        "PutDeliveryChannel",
        "PutEvaluations",
        "PutOrganizationConfigRule",
        "PutOrganizationConformancePack",
        "PutRemediationConfigurations",
        "PutRemediationExceptions",
        "PutRetentionConfiguration",
        "SelectAggregateResourceConfig",
        "SelectResourceConfig",
        "StartConfigRulesEvaluation",
        "StartConfigurationRecorder",
        "StartRemediationExecution",
        "StopConfigurationRecorder",
        "TagResource",
        "UntagResource"
      ],
      "HasResource": true,
      "StringPrefix": "config",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS Connector Service": {
      "ARNFormat": "arn:aws:<serviceName>:<region>:<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:<serviceName>:.+:.+:.+",
      "Actions": [
        "GetConnectorHealth",
        "RegisterConnector",
        "ValidateConnectorId"
      ],
      "HasResource": false,
      "StringPrefix": "awsconnector"
    },
    "AWS Cost Explorer Service": {
      "ARNFormat": "arn:aws:ce::<account_ID>:ce",
      "ARNRegex": "^arn:aws:ce::.+:.+",
      "Actions": [
        "CreateCostCategoryDefinition",
        "DeleteCostCategoryDefinition",
        "DescribeCostCategoryDefinition",
        "GetCostAndUsage",
        "GetCostAndUsageWithResources",
        "GetCostForecast",
        "GetDimensionValues",
        "GetReservationCoverage",
        "GetReservationPurchaseRecommendation",
        "GetReservationUtilization",
        "GetRightsizingRecommendation",
        "GetSavingsPlansCoverage",
        "GetSavingsPlansPurchaseRecommendation",
        "GetSavingsPlansUtilization",
        "GetSavingsPlansUtilizationDetails",
        "GetTags",
        "GetUsageForecast",
        "ListCostCategoryDefinitions",
        "UpdateCostCategoryDefinition"
      ],
      "HasResource": false,
      "StringPrefix": "ce"
    },
    "AWS Cost and Usage Report": {
      "ARNFormat": "arn:aws:cur:<region>:<account_ID>:definition/<reportname>",
      "ARNRegex": "^arn:aws:cur:.+:.+:.+",
      "Actions": [
        "DeleteReportDefinition",
        "DescribeReportDefinitions",
        "ModifyReportDefinition",
        "PutReportDefinition"
      ],
      "HasResource": true,
      "StringPrefix": "cur"
    },
    "AWS Data Exchange": {
      "ARNFormat": "arn:aws:dataexchange:<region>:<account-id>:<resource-type>/<resource_id>",
      "ARNRegex": "^arn:aws:dataexchange:.+:.*:.+",
      "Actions": [
        "CancelJob",
        "CreateAsset",
        "CreateDataSet",
        "CreateJob",
        "CreateRevision",
        "DeleteAsset",
        "DeleteDataSet",
        "DeleteRevision",
        "GetAsset",
        "GetDataSet",
        "GetJob",
        "GetRevision",
        "ListDataSetRevisions",
        "ListDataSets",
        "ListJobs",
        "ListRevisionAssets",
        "ListTagsForResource",
        "StartJob",
        "TagResource",
        "UntagResource",
        "UpdateAsset",
        "UpdateDataSet",
        "UpdateRevision"
      ],
      "HasResource": true,
      "StringPrefix": "dataexchange",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "dataexchange:JobType"
      ]
    },
    "AWS Database Migration Service": {
      "ARNFormat": "arn:aws:dms:<region>:<account>:<resource>",
      "ARNRegex": "arn:aws:dms:.+",
      "Actions": [
        "AddTagsToResource",
        "ApplyPendingMaintenanceAction",
        "CreateEndpoint",
        "CreateEventSubscription",
        "CreateReplicationInstance",
        "CreateReplicationSubnetGroup",
        "CreateReplicationTask",
        "DeleteCertificate",
        "DeleteEndpoint",
        "DeleteEventSubscription",
        "DeleteReplicationInstance",
        "DeleteReplicationSubnetGroup",
        "DeleteReplicationTask",
        "DescribeAccountAttributes",
        "DescribeCertificates",
        "DescribeConnections",
        "DescribeEndpointTypes",
        "DescribeEndpoints",
        "DescribeEventCategories",
        "DescribeEventSubscriptions",
        "DescribeEvents",
        "DescribeOrderableReplicationInstances",
        "DescribeRefreshSchemasStatus",
        "DescribeReplicationInstanceTaskLogs",
        "DescribeReplicationInstances",
        "DescribeReplicationSubnetGroups",
        "DescribeReplicationTaskAssessmentResults",
        "DescribeReplicationTasks",
        "DescribeSchemas",
        "DescribeTableStatistics",
        "ImportCertificate",
        "ListTagsForResource",
        "ModifyEndpoint",
        "ModifyEventSubscription",
        "ModifyReplicationInstance",
        "ModifyReplicationSubnetGroup",
        "ModifyReplicationTask",
        "RebootReplicationInstance",
        "RefreshSchemas",
        "ReloadTables",
        "RemoveTagsFromResource",
        "StartReplicationTask",
        "StartReplicationTaskAssessment",
        "StopReplicationTask",
        "TestConnection"
      ],
      "HasResource": true,
      "StringPrefix": "dms",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "dms:cert-tag/${TagKey}",
        "dms:endpoint-tag/${TagKey}",
        "dms:es-tag/${TagKey}",
        "dms:rep-tag/${TagKey}",
        "dms:req-tag/${TagKey}",
        "dms:subgrp-tag/${TagKey}",
        "dms:task-tag/${TagKey}"
      ]
    },
    "AWS DeepComposer": {
      "ARNFormat": "arn:aws:deepcomposer:<region>:<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:deepcomposer:.+:.+:.+",
      "Actions": [
        "AssociateCoupon",
        "CreateAudio",
        "CreateComposition",
        "CreateModel",
        "DeleteComposition",
        "DeleteModel",
        "GetComposition",
        "GetModel",
        "GetSampleModel",
        "ListCompositions",
        "ListModels",
        "ListSampleModels",
        "ListTrainingTopics",
        "UpdateComposition",
        "UpdateModel"
      ],
      "HasResource": true,
      "StringPrefix": "deepcomposer"
    },
    "AWS DeepLens": {
      "ARNFormat": "arn:aws:deeplens:<region>:<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:deeplens:.+:.+:.+",
      "Actions": [
        "AssociateServiceRoleToAccount",
        "BatchGetDevice",
        "BatchGetModel",
        "BatchGetProject",
        "CreateDeviceCertificates",
        "CreateModel",
        "CreateProject",
        "DeleteModel",
        "DeleteProject",
        "DeployProject",
        "DeregisterDevice",
        "GetAssociatedResources",
        "GetDeploymentStatus",
        "GetDevice",
        "GetModel",
        "GetProject",
        "ImportProjectFromTemplate",
        "ListDeployments",
        "ListDevices",
        "ListModels",
        "ListProjects",
        "RegisterDevice",
        "RemoveProject",
        "UpdateProject"
      ],
      "HasResource": true,
      "StringPrefix": "deeplens"
    },
    "AWS DeepRacer": {
      "ARNFormat": "arn:aws:deepracer:<region>:<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:deepracer:.+",
      "Actions": [
        "CloneReinforcementLearningModel",
        "CreateAccountResources",
        "CreateLeaderboardSubmission",
        "CreateReinforcementLearningModel",
        "DeleteAccountResources",
        "DeleteModel",
        "GetAccountResources",
        "GetAlias",
        "GetEvaluation",
        "GetLatestUserSubmission",
        "GetLeaderboard",
        "GetModel",
        "GetRankedUserSubmission",
        "GetTrack",
        "GetTrainingJob",
        "ListEvaluations",
        "ListLeaderboardSubmissions",
        "ListLeaderboards",
        "ListModels",
        "ListTracks",
        "ListTrainingJobs",
        "SetAlias",
        "StartEvaluation",
        "StopEvaluation",
        "StopTrainingReinforcementLearningModel",
        "TestRewardFunction"
      ],
      "HasResource": true,
      "StringPrefix": "deepracer"
    },
    "AWS Device Farm": {
      "ARNFormat": "arn:aws:devicefarm:<region>:<account-id>:<resource-type>:<resource-id>",
      "ARNRegex": "^arn:aws:devicefarm:.+",
      "Actions": [
        "CreateDevicePool",
        "CreateInstanceProfile",
        "CreateNetworkProfile",
        "CreateProject",
        "CreateRemoteAccessSession",
        "CreateTestGridProject",
        "CreateTestGridUrl",
        "CreateUpload",
        "CreateVPCEConfiguration",
        "DeleteDevicePool",
        "DeleteInstanceProfile",
        "DeleteNetworkProfile",
        "DeleteProject",
        "DeleteRemoteAccessSession",
        "DeleteRun",
        "DeleteTestGridProject",
        "DeleteUpload",
        "DeleteVPCEConfiguration",
        "GetAccountSettings",
        "GetDevice",
        "GetDeviceInstance",
        "GetDevicePool",
        "GetDevicePoolCompatibility",
        "GetInstanceProfile",
        "GetJob",
        "GetNetworkProfile",
        "GetOfferingStatus",
        "GetProject",
        "GetRemoteAccessSession",
        "GetRun",
        "GetSuite",
        "GetTest",
        "GetTestGridProject",
        "GetTestGridSession",
        "GetUpload",
        "GetVPCEConfiguration",
        "InstallToRemoteAccessSession",
        "ListArtifacts",
        "ListDeviceInstances",
        "ListDevicePools",
        "ListDevices",
        "ListInstanceProfiles",
        "ListJobs",
        "ListNetworkProfiles",
        "ListOfferingPromotions",
        "ListOfferingTransactions",
        "ListOfferings",
        "ListProjects",
        "ListRemoteAccessSessions",
        "ListRuns",
        "ListSamples",
        "ListSuites",
        "ListTagsForResource",
        "ListTestGridProjects",
        "ListTestGridSessionActions",
        "ListTestGridSessionArtifacts",
        "ListTestGridSessions",
        "ListTests",
        "ListUniqueProblems",
        "ListUploads",
        "ListVPCEConfigurations",
        "PurchaseOffering",
        "RenewOffering",
        "ScheduleRun",
        "StopJob",
        "StopRemoteAccessSession",
        "StopRun",
        "TagResource",
        "UntagResource",
        "UpdateDeviceInstance",
        "UpdateDevicePool",
        "UpdateInstanceProfile",
        "UpdateNetworkProfile",
        "UpdateProject",
        "UpdateTestGridProject",
        "UpdateUpload",
        "UpdateVPCEConfiguration"
      ],
      "HasResource": true,
      "StringPrefix": "devicefarm",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS Direct Connect": {
      "ARNFormat": "arn:${Partition}:directconnect:${Region}:${Account}:${ResourceType}/${ResourceId}",
      "ARNRegex": "^arn:${Partition}:directconnect:.+",
      "Actions": [
        "AcceptDirectConnectGatewayAssociationProposal",
        "AllocateConnectionOnInterconnect",
        "AllocateHostedConnection",
        "AllocatePrivateVirtualInterface",
        "AllocatePublicVirtualInterface",
        "AllocateTransitVirtualInterface",
        "AssociateConnectionWithLag",
        "AssociateHostedConnection",
        "AssociateVirtualInterface",
        "ConfirmConnection",
        "ConfirmPrivateVirtualInterface",
        "ConfirmPublicVirtualInterface",
        "ConfirmTransitVirtualInterface",
        "CreateBGPPeer",
        "CreateConnection",
        "CreateDirectConnectGateway",
        "CreateDirectConnectGatewayAssociation",
        "CreateDirectConnectGatewayAssociationProposal",
        "CreateInterconnect",
        "CreateLag",
        "CreatePrivateVirtualInterface",
        "CreatePublicVirtualInterface",
        "CreateTransitVirtualInterface",
        "DeleteBGPPeer",
        "DeleteConnection",
        "DeleteDirectConnectGateway",
        "DeleteDirectConnectGatewayAssociation",
        "DeleteDirectConnectGatewayAssociationProposal",
        "DeleteInterconnect",
        "DeleteLag",
        "DeleteVirtualInterface",
        "DescribeConnectionLoa",
        "DescribeConnections",
        "DescribeConnectionsOnInterconnect",
        "DescribeDirectConnectGatewayAssociationProposals",
        "DescribeDirectConnectGatewayAssociations",
        "DescribeDirectConnectGatewayAttachments",
        "DescribeDirectConnectGateways",
        "DescribeHostedConnections",
        "DescribeInterconnectLoa",
        "DescribeInterconnects",
        "DescribeLags",
        "DescribeLoa",
        "DescribeLocations",
        "DescribeTags",
        "DescribeVirtualGateways",
        "DescribeVirtualInterfaces",
        "DisassociateConnectionFromLag",
        "ListVirtualInterfaceTestHistory",
        "StartBgpFailoverTest",
        "StopBgpFailoverTest",
        "TagResource",
        "UntagResource",
        "UpdateDirectConnectGatewayAssociation",
        "UpdateLag",
        "UpdateVirtualInterfaceAttributes"
      ],
      "HasResource": true,
      "StringPrefix": "directconnect",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS Directory Service": {
      "ARNFormat": "arn:<partition>:ds:<region>:<accountID>:<relative-id>",
      "ARNRegex": "^arn:<partition>:ds:.+",
      "Actions": [
        "AcceptSharedDirectory",
        "AddIpRoutes",
        "AddTagsToResource",
        "AuthorizeApplication",
        "CancelSchemaExtension",
        "CheckAlias",
        "ConnectDirectory",
        "CreateAlias",
        "CreateComputer",
        "CreateConditionalForwarder",
        "CreateDirectory",
        "CreateIdentityPoolDirectory",
        "CreateLogSubscription",
        "CreateMicrosoftAD",
        "CreateSnapshot",
        "CreateTrust",
        "DeleteConditionalForwarder",
        "DeleteDirectory",
        "DeleteLogSubscription",
        "DeleteSnapshot",
        "DeleteTrust",
        "DeregisterCertificate",
        "DeregisterEventTopic",
        "DescribeCertificate",
        "DescribeConditionalForwarders",
        "DescribeDirectories",
        "DescribeDomainControllers",
        "DescribeEventTopics",
        "DescribeLDAPSSettings",
        "DescribeSharedDirectories",
        "DescribeSnapshots",
        "DescribeTrusts",
        "DisableLDAPS",
        "DisableRadius",
        "DisableSso",
        "EnableLDAPS",
        "EnableRadius",
        "EnableSso",
        "GetAuthorizedApplicationDetails",
        "GetDirectoryLimits",
        "GetSnapshotLimits",
        "ListAuthorizedApplications",
        "ListCertificates",
        "ListIpRoutes",
        "ListLogSubscriptions",
        "ListSchemaExtensions",
        "ListTagsForResource",
        "RegisterCertificate",
        "RegisterEventTopic",
        "RejectSharedDirectory",
        "RemoveIpRoutes",
        "RemoveTagsFromResource",
        "ResetUserPassword",
        "RestoreFromSnapshot",
        "ShareDirectory",
        "StartSchemaExtension",
        "UnauthorizeApplication",
        "UnshareDirectory",
        "UpdateConditionalForwarder",
        "UpdateNumberOfDomainControllers",
        "UpdateRadius",
        "UpdateTrust",
        "VerifyTrust"
      ],
      "HasResource": true,
      "StringPrefix": "ds",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS Elastic Beanstalk": {
      "ARNFormat": "arn:aws:elasticbeanstalk:<region>:<account_ID>:<resource_type>/<path_to_resource>",
      "ARNRegex": "^arn:aws:elasticbeanstalk:.+:.*:.+/.+",
      "Actions": [
        "AbortEnvironmentUpdate",
        "AddTags",
        "ApplyEnvironmentManagedAction",
        "CheckDNSAvailability",
        "ComposeEnvironments",
        "CreateApplication",
        "CreateApplicationVersion",
        "CreateConfigurationTemplate",
        "CreateEnvironment",
        "CreatePlatformVersion",
        "CreateStorageLocation",
        "DeleteApplication",
        "DeleteApplicationVersion",
        "DeleteConfigurationTemplate",
        "DeleteEnvironmentConfiguration",
        "DeletePlatformVersion",
        "DescribeAccountAttributes",
        "DescribeApplicationVersions",
        "DescribeApplications",
        "DescribeConfigurationOptions",
        "DescribeConfigurationSettings",
        "DescribeEnvironmentHealth",
        "DescribeEnvironmentManagedActionHistory",
        "DescribeEnvironmentManagedActions",
        "DescribeEnvironmentResources",
        "DescribeEnvironments",
        "DescribeEvents",
        "DescribeInstancesHealth",
        "DescribePlatformVersion",
        "ListAvailableSolutionStacks",
        "ListPlatformBranches",
        "ListPlatformVersions",
        "ListTagsForResource",
        "RebuildEnvironment",
        "RemoveTags",
        "RequestEnvironmentInfo",
        "RestartAppServer",
        "RetrieveEnvironmentInfo",
        "SwapEnvironmentCNAMEs",
        "TerminateEnvironment",
        "UpdateApplication",
        "UpdateApplicationResourceLifecycle",
        "UpdateApplicationVersion",
        "UpdateConfigurationTemplate",
        "UpdateEnvironment",
        "ValidateConfigurationSettings"
      ],
      "HasResource": true,
      "StringPrefix": "elasticbeanstalk",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "elasticbeanstalk:FromApplication",
        "elasticbeanstalk:FromApplicationVersion",
        "elasticbeanstalk:FromConfigurationTemplate",
        "elasticbeanstalk:FromEnvironment",
        "elasticbeanstalk:FromPlatform",
        "elasticbeanstalk:FromSolutionStack",
        "elasticbeanstalk:InApplication"
      ]
    },
    "AWS Elemental MediaConnect": {
      "ARNFormat": "arn:${Partition}:mediaconnect:${Region}:${Account}:<namespace>:<relative-id>:<relative-name>",
      "ARNRegex": "^arn:${Partition}:mediaconnect:.+",
      "Actions": [
        "AddFlowOutputs",
        "CreateFlow",
        "DeleteFlow",
        "DescribeFlow",
        "GrantFlowEntitlements",
        "ListEntitlements",
        "ListFlows",
        "RemoveFlowOutput",
        "RevokeFlowEntitlement",
        "StartFlow",
        "StopFlow",
        "UpdateFlowEntitlement",
        "UpdateFlowOutput",
        "UpdateFlowSource"
      ],
      "HasResource": true,
      "StringPrefix": "mediaconnect"
    },
    "AWS Elemental MediaConvert": {
      "ARNFormat": "arn:${Partition}:mediaconvert:<region>:<account>:<resourceType>/<resourceId>",
      "ARNRegex": "^arn:${Partition}:mediaconvert:.+",
      "Actions": [
        "AssociateCertificate",
        "CancelJob",
        "CreateJob",
        "CreateJobTemplate",
        "CreatePreset",
        "CreateQueue",
        "DeleteJobTemplate",
        "DeletePreset",
        "DeleteQueue",
        "DescribeEndpoints",
        "DisassociateCertificate",
        "GetJob",
        "GetJobTemplate",
        "GetPreset",
        "GetQueue",
        "ListJobTemplates",
        "ListJobs",
        "ListPresets",
        "ListQueues",
        "ListTagsForResource",
        "TagResource",
        "UntagResource",
        "UpdateJobTemplate",
        "UpdatePreset",
        "UpdateQueue"
      ],
      "HasResource": true,
      "StringPrefix": "mediaconvert",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS Elemental MediaLive": {
      "ARNFormat": "arn:${Partition}:medialive:${Region}:${Account}:${ResourceType}:${ResourcePath}",
      "ARNRegex": "^arn:${Partition}:medialive:.+",
      "Actions": [
        "BatchUpdateSchedule",
        "CreateChannel",
        "CreateInput",
        "CreateInputSecurityGroup",
        "CreateMultiplex",
        "CreateTags",
        "DeleteChannel",
        "DeleteInput",
        "DeleteInputSecurityGroup",
        "DeleteMultiplex",
        "DeleteReservation",
        "DeleteTags",
        "DescribeChannel",
        "DescribeInput",
        "DescribeInputDevice",
        "DescribeInputSecurityGroup",
        "DescribeMultiplex",
        "DescribeOffering",
        "DescribeReservation",
        "DescribeSchedule",
        "ListChannels",
        "ListInputDevices",
        "ListInputSecurityGroups",
        "ListInputs",
        "ListMultiplexes",
        "ListOfferings",
        "ListReservations",
        "ListTagsForResource",
        "PurchaseOffering",
        "StartChannel",
        "StartMultiplex",
        "StopChannel",
        "StopMultiplex",
        "UpdateChannel",
        "UpdateChannelClass",
        "UpdateInput",
        "UpdateInputDevice",
        "UpdateInputSecurityGroup",
        "UpdateMultiplex",
        "UpdateReservation"
      ],
      "HasResource": true,
      "StringPrefix": "medialive",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS Elemental MediaPackage": {
      "ARNFormat": "arn:aws:mediapackage:<region>:<account_ID>:<resource>/<identifier>",
      "ARNRegex": "^arn:aws:mediapackage:.+",
      "Actions": [
        "CreateChannel",
        "CreateOriginEndpoint",
        "DeleteChannel",
        "DeleteOriginEndpoint",
        "DescribeChannel",
        "DescribeOriginEndpoint",
        "ListChannels",
        "ListOriginEndpoints",
        "ListTagsForResource",
        "RotateIngestEndpointCredentials",
        "TagResource",
        "UntagResource",
        "UpdateChannel",
        "UpdateOriginEndpoint"
      ],
      "HasResource": true,
      "StringPrefix": "mediapackage",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS Elemental MediaPackage VOD": {
      "ARNFormat": "arn:aws:mediapackage-vod:<Region>:<Account>:<ResourceType>/<ResourceName>",
      "ARNRegex": "^arn:aws:mediapackage-vod:.+:.+:.+",
      "Actions": [
        "CreateAsset",
        "CreatePackagingConfiguration",
        "CreatePackagingGroup",
        "DeleteAsset",
        "DeletePackagingConfiguration",
        "DeletePackagingGroup",
        "DescribeAsset",
        "DescribePackagingConfiguration",
        "DescribePackagingGroup",
        "ListAssets",
        "ListPackagingConfigurations",
        "ListPackagingGroups"
      ],
      "HasResource": true,
      "StringPrefix": "mediapackage-vod"
    },
    "AWS Elemental MediaStore": {
      "ARNFormat": "arn:aws:mediastore:<Region>:<Account>:<Resource>",
      "ARNRegex": "^arn:aws:mediastore:.+:.+",
      "Actions": [
        "CreateContainer",
        "DeleteContainer",
        "DeleteContainerPolicy",
        "DeleteCorsPolicy",
        "DeleteLifecyclePolicy",
        "DeleteMetricPolicy",
        "DeleteObject",
        "DescribeContainer",
        "DescribeObject",
        "GetContainerPolicy",
        "GetCorsPolicy",
        "GetLifecyclePolicy",
        "GetMetricPolicy",
        "GetObject",
        "ListContainers",
        "ListItems",
        "ListTagsForResource",
        "PutContainerPolicy",
        "PutCorsPolicy",
        "PutLifecyclePolicy",
        "PutMetricPolicy",
        "PutObject",
        "StartAccessLogging",
        "StopAccessLogging",
        "TagResource",
        "UntagResource"
      ],
      "HasResource": true,
      "StringPrefix": "mediastore"
    },
    "AWS Elemental MediaTailor": {
      "ARNFormat": "arn:aws:mediatailor:<region>:<account-id>:<resource-type>/<resource-name>",
      "ARNRegex": "^arn:aws:mediatailor:.+:.+:.+",
      "Actions": [
        "DeletePlaybackConfiguration",
        "GetPlaybackConfiguration",
        "ListPlaybackConfigurations",
        "ListTagsForResource",
        "PutPlaybackConfiguration",
        "TagResource",
        "UntagResource"
      ],
      "HasResource": true,
      "StringPrefix": "mediatailor",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS Firewall Manager": {
      "ARNFormat": "arn:aws:fms:<region>:<account_id>:<resource>/<resource_id>",
      "ARNRegex": "^arn:aws:fms:.+:[0-9]+:.+/.+",
      "Actions": [
        "AssociateAdminAccount",
        "DeleteNotificationChannel",
        "DeletePolicy",
        "DisassociateAdminAccount",
        "GetAdminAccount",
        "GetComplianceDetail",
        "GetNotificationChannel",
        "GetPolicy",
        "GetProtectionStatus",
        "ListComplianceStatus",
        "ListMemberAccounts",
        "ListPolicies",
        "ListTagsForResource",
        "PutNotificationChannel",
        "PutPolicy",
        "TagResource",
        "UntagResource"
      ],
      "HasResource": true,
      "StringPrefix": "fms",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS Global Accelerator": {
      "ARNFormat": "arn:aws:globalaccelerator::<account>:accelerator/<AcceleratorId>",
      "ARNRegex": "^arn:aws:globalaccelerator::.+:.+",
      "Actions": [
        "AdvertiseByoipCidr",
        "CreateAccelerator",
        "CreateEndpointGroup",
        "CreateListener",
        "DeleteAccelerator",
        "DeleteEndpointGroup",
        "DeleteListener",
        "DeprovisionByoipCidr",
        "DescribeAccelerator",
        "DescribeAcceleratorAttributes",
        "DescribeEndpointGroup",
        "DescribeListener",
        "ListAccelerators",
        "ListByoipCidrs",
        "ListEndpointGroups",
        "ListListeners",
        "ListTagsForResource",
        "ProvisionByoipCidr",
        "TagResource",
        "UntagResource",
        "UpdateAccelerator",
        "UpdateAcceleratorAttributes",
        "UpdateEndpointGroup",
        "UpdateListener",
        "WithdrawByoipCidr"
      ],
      "HasResource": true,
      "StringPrefix": "globalaccelerator",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS Glue": {
      "ARNFormat": "arn:aws:glue:<region>:<accountID>:<resourceType>/<resourcePath>",
      "ARNRegex": "^arn:aws:glue:.+:.+",
      "Actions": [
        "BatchCreatePartition",
        "BatchDeleteConnection",
        "BatchDeletePartition",
        "BatchDeleteTable",
        "BatchDeleteTableVersion",
        "BatchGetCrawlers",
        "BatchGetDevEndpoints",
        "BatchGetJobs",
        "BatchGetPartition",
        "BatchGetTriggers",
        "BatchGetWorkflows",
        "BatchStopJobRun",
        "CancelMLTaskRun",
        "CreateClassifier",
        "CreateConnection",
        "CreateCrawler",
        "CreateDatabase",
        "CreateDevEndpoint",
        "CreateJob",
        "CreateMLTransform",
        "CreatePartition",
        "CreateScript",
        "CreateSecurityConfiguration",
        "CreateTable",
        "CreateTrigger",
        "CreateUserDefinedFunction",
        "CreateWorkflow",
        "DeleteClassifier",
        "DeleteConnection",
        "DeleteCrawler",
        "DeleteDatabase",
        "DeleteDevEndpoint",
        "DeleteJob",
        "DeleteMLTransform",
        "DeletePartition",
        "DeleteResourcePolicy",
        "DeleteSecurityConfiguration",
        "DeleteTable",
        "DeleteTableVersion",
        "DeleteTrigger",
        "DeleteUserDefinedFunction",
        "DeleteWorkflow",
        "GetCatalogImportStatus",
        "GetClassifier",
        "GetClassifiers",
        "GetConnection",
        "GetConnections",
        "GetCrawler",
        "GetCrawlerMetrics",
        "GetCrawlers",
        "GetDataCatalogEncryptionSettings",
        "GetDatabase",
        "GetDatabases",
        "GetDataflowGraph",
        "GetDevEndpoint",
        "GetDevEndpoints",
        "GetJob",
        "GetJobBookmark",
        "GetJobRun",
        "GetJobRuns",
        "GetJobs",
        "GetMLTaskRun",
        "GetMLTaskRuns",
        "GetMLTransform",
        "GetMLTransforms",
        "GetMapping",
        "GetPartition",
        "GetPartitions",
        "GetPlan",
        "GetResourcePolicy",
        "GetSecurityConfiguration",
        "GetSecurityConfigurations",
        "GetTable",
        "GetTableVersion",
        "GetTableVersions",
        "GetTables",
        "GetTags",
        "GetTrigger",
        "GetTriggers",
        "GetUserDefinedFunction",
        "GetUserDefinedFunctions",
        "GetWorkflow",
        "GetWorkflowRun",
        "GetWorkflowRunProperties",
        "GetWorkflowRuns",
        "ImportCatalogToGlue",
        "ListCrawlers",
        "ListDevEndpoints",
        "ListJobs",
        "ListMLTransforms",
        "ListTriggers",
        "ListWorkflows",
        "PutDataCatalogEncryptionSettings",
        "PutResourcePolicy",
        "PutWorkflowRunProperties",
        "ResetJobBookmark",
        "SearchTables",
        "StartCrawler",
        "StartCrawlerSchedule",
        "StartExportLabelsTaskRun",
        "StartImportLabelsTaskRun",
        "StartJobRun",
        "StartMLEvaluationTaskRun",
        "StartMLLabelingSetGenerationTaskRun",
        "StartTrigger",
        "StartWorkflowRun",
        "StopCrawler",
        "StopCrawlerSchedule",
        "StopTrigger",
        "TagResource",
        "UntagResource",
        "UpdateClassifier",
        "UpdateConnection",
        "UpdateCrawler",
        "UpdateCrawlerSchedule",
        "UpdateDatabase",
        "UpdateDevEndpoint",
        "UpdateJob",
        "UpdateMLTransform",
        "UpdatePartition",
        "UpdateTable",
        "UpdateTrigger",
        "UpdateUserDefinedFunction",
        "UpdateWorkflow",
        "UseMLTransforms"
      ],
      "HasResource": true,
      "StringPrefix": "glue",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS Ground Station": {
      "ARNFormat": "arn:aws:groundstation:<region>:<accountID>:<resourceType>/<resourceId>",
      "ARNRegex": "^arn:aws:groundstation:.+",
      "Actions": [
        "CancelContact",
        "CreateConfig",
        "CreateDataflowEndpointGroup",
        "CreateMissionProfile",
        "DeleteConfig",
        "DeleteDataflowEndpointGroup",
        "DeleteMissionProfile",
        "DescribeContact",
        "GetConfig",
        "GetDataflowEndpointGroup",
        "GetMinuteUsage",
        "GetMissionProfile",
        "GetSatellite",
        "ListConfigs",
        "ListContacts",
        "ListDataflowEndpointGroups",
        "ListGroundStations",
        "ListMissionProfiles",
        "ListSatellites",
        "ListTagsForResource",
        "ReserveContact",
        "TagResource",
        "UntagResource",
        "UpdateConfig",
        "UpdateMissionProfile"
      ],
      "HasResource": true,
      "StringPrefix": "groundstation",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "groundstation:configId",
        "groundstation:configType",
        "groundstation:contactId",
        "groundstation:dataflowEndpointGroupId",
        "groundstation:groundStationId",
        "groundstation:missionProfileId",
        "groundstation:satelliteId"
      ]
    },
    "AWS Health APIs and Notifications": {
      "ARNFormat": "arn:aws:health::<namespace>:<relative-id>",
      "ARNRegex": "^arn:aws:health:[^:]*:[^:]*:.+",
      "Actions": [
        "DescribeAffectedAccountsForOrganization",
        "DescribeAffectedEntities",
        "DescribeAffectedEntitiesForOrganization",
        "DescribeEntityAggregates",
        "DescribeEventAggregates",
        "DescribeEventDetails",
        "DescribeEventDetailsForOrganization",
        "DescribeEventTypes",
        "DescribeEvents",
        "DescribeEventsForOrganization",
        "DescribeHealthServiceStatusForOrganization",
        "DisableHealthServiceAccessForOrganization",
        "EnableHealthServiceAccessForOrganization"
      ],
      "HasResource": true,
      "StringPrefix": "health",
      "conditionKeys": [
        "health:eventTypeCode",
        "health:service"
      ]
    },
    "AWS IQ": {
      "ARNFormat": "arn:aws:iq::<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:iq::.+",
      "Actions": [
        "CreateProject"
      ],
      "HasResource": false,
      "StringPrefix": "iq"
    },
    "AWS IQ Permissions": {
      "ARNFormat": "arn:aws:iq-permission::<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:iq-permission::.+",
      "Actions": [
        "ApproveAccessGrant"
      ],
      "HasResource": false,
      "StringPrefix": "iq-permission"
    },
    "AWS Import Export Disk Service": {
      "Actions": [
        "CancelJob",
        "CreateJob",
        "GetShippingLabel",
        "GetStatus",
        "ListJobs",
        "UpdateJob"
      ],
      "HasResource": false,
      "StringPrefix": "importexport"
    },
    "AWS IoT": {
      "ARNFormat": "arn:aws:iot:<region>:<account_ID>:<type>/<name>",
      "ARNRegex": "^arn:aws:iot:.+:[0-9]+:.+",
      "Actions": [
        "AcceptCertificateTransfer",
        "AddThingToBillingGroup",
        "AddThingToThingGroup",
        "AssociateTargetsWithJob",
        "AttachPolicy",
        "AttachPrincipalPolicy",
        "AttachSecurityProfile",
        "AttachThingPrincipal",
        "CancelAuditMitigationActionsTask",
        "CancelAuditTask",
        "CancelCertificateTransfer",
        "CancelJob",
        "CancelJobExecution",
        "ClearDefaultAuthorizer",
        "CloseTunnel",
        "Connect",
        "CreateAuthorizer",
        "CreateBillingGroup",
        "CreateCertificateFromCsr",
        "CreateDimension",
        "CreateDynamicThingGroup",
        "CreateJob",
        "CreateKeysAndCertificate",
        "CreateMitigationAction",
        "CreateOTAUpdate",
        "CreatePolicy",
        "CreatePolicyVersion",
        "CreateProvisioningClaim",
        "CreateProvisioningTemplate",
        "CreateProvisioningTemplateVersion",
        "CreateRoleAlias",
        "CreateScheduledAudit",
        "CreateSecurityProfile",
        "CreateStream",
        "CreateThing",
        "CreateThingGroup",
        "CreateThingType",
        "CreateTopicRule",
        "DeleteAccountAuditConfiguration",
        "DeleteAuthorizer",
        "DeleteBillingGroup",
        "DeleteCACertificate",
        "DeleteCertificate",
        "DeleteDimension",
        "DeleteDynamicThingGroup",
        "DeleteJob",
        "DeleteJobExecution",
        "DeleteMitigationAction",
        "DeleteOTAUpdate",
        "DeletePolicy",
        "DeletePolicyVersion",
        "DeleteProvisioningTemplate",
        "DeleteProvisioningTemplateVersion",
        "DeleteRegistrationCode",
        "DeleteRoleAlias",
        "DeleteScheduledAudit",
        "DeleteSecurityProfile",
        "DeleteStream",
        "DeleteThing",
        "DeleteThingGroup",
        "DeleteThingShadow",
        "DeleteThingType",
        "DeleteTopicRule",
        "DeleteV2LoggingLevel",
        "DeprecateThingType",
        "DescribeAccountAuditConfiguration",
        "DescribeAuditMitigationActionsTask",
        "DescribeAuditTask",
        "DescribeAuthorizer",
        "DescribeBillingGroup",
        "DescribeCACertificate",
        "DescribeCertificate",
        "DescribeDefaultAuthorizer",
        "DescribeDimension",
        "DescribeEndpoint",
        "DescribeEventConfigurations",
        "DescribeIndex",
        "DescribeJob",
        "DescribeJobExecution",
        "DescribeMitigationAction",
        "DescribeProvisioningTemplate",
        "DescribeProvisioningTemplateVersion",
        "DescribeRoleAlias",
        "DescribeScheduledAudit",
        "DescribeSecurityProfile",
        "DescribeStream",
        "DescribeThing",
        "DescribeThingGroup",
        "DescribeThingRegistrationTask",
        "DescribeThingType",
        "DescribeTunnel",
        "DetachPolicy",
        "DetachPrincipalPolicy",
        "DetachSecurityProfile",
        "DetachThingPrincipal",
        "DisableTopicRule",
        "EnableTopicRule",
        "GetCardinality",
        "GetEffectivePolicies",
        "GetIndexingConfiguration",
        "GetJobDocument",
        "GetLoggingOptions",
        "GetOTAUpdate",
        "GetPendingJobExecutions",
        "GetPercentiles",
        "GetPolicy",
        "GetPolicyVersion",
        "GetRegistrationCode",
        "GetStatistics",
        "GetThingShadow",
        "GetTopicRule",
        "GetV2LoggingOptions",
        "ListActiveViolations",
        "ListAttachedPolicies",
        "ListAuditFindings",
        "ListAuditMitigationActionsExecutions",
        "ListAuditMitigationActionsTasks",
        "ListAuditTasks",
        "ListAuthorizers",
        "ListBillingGroups",
        "ListCACertificates",
        "ListCertificates",
        "ListCertificatesByCA",
        "ListDimensions",
        "ListIndices",
        "ListJobExecutionsForJob",
        "ListJobExecutionsForThing",
        "ListJobs",
        "ListMitigationActions",
        "ListNamedShadowsForThing",
        "ListOTAUpdates",
        "ListOutgoingCertificates",
        "ListPolicies",
        "ListPolicyPrincipals",
        "ListPolicyVersions",
        "ListPrincipalPolicies",
        "ListPrincipalThings",
        "ListProvisioningTemplateVersions",
        "ListProvisioningTemplates",
        "ListRoleAliases",
        "ListScheduledAudits",
        "ListSecurityProfiles",
        "ListSecurityProfilesForTarget",
        "ListStreams",
        "ListTagsForResource",
        "ListTargetsForPolicy",
        "ListTargetsForSecurityProfile",
        "ListThingGroups",
        "ListThingGroupsForThing",
        "ListThingPrincipals",
        "ListThingRegistrationTaskReports",
        "ListThingRegistrationTasks",
        "ListThingTypes",
        "ListThings",
        "ListThingsInBillingGroup",
        "ListThingsInThingGroup",
        "ListTopicRules",
        "ListTunnels",
        "ListV2LoggingLevels",
        "ListViolationEvents",
        "OpenTunnel",
        "Publish",
        "Receive",
        "RegisterCACertificate",
        "RegisterCertificate",
        "RegisterCertificateWithoutCA",
        "RegisterThing",
        "RejectCertificateTransfer",
        "RemoveThingFromBillingGroup",
        "RemoveThingFromThingGroup",
        "ReplaceTopicRule",
        "SearchIndex",
        "SetDefaultAuthorizer",
        "SetDefaultPolicyVersion",
        "SetLoggingOptions",
        "SetV2LoggingLevel",
        "SetV2LoggingOptions",
        "StartAuditMitigationActionsTask",
        "StartNextPendingJobExecution",
        "StartOnDemandAuditTask",
        "StartThingRegistrationTask",
        "StopThingRegistrationTask",
        "Subscribe",
        "TagResource",
        "TestAuthorization",
        "TestInvokeAuthorizer",
        "TransferCertificate",
        "UntagResource",
        "UpdateAccountAuditConfiguration",
        "UpdateAuthorizer",
        "UpdateBillingGroup",
        "UpdateCACertificate",
        "UpdateCertificate",
        "UpdateDimension",
        "UpdateDynamicThingGroup",
        "UpdateEventConfigurations",
        "UpdateIndexingConfiguration",
        "UpdateJob",
        "UpdateJobExecution",
        "UpdateMitigationAction",
        "UpdateProvisioningTemplate",
        "UpdateRoleAlias",
        "UpdateScheduledAudit",
        "UpdateSecurityProfile",
        "UpdateStream",
        "UpdateThing",
        "UpdateThingGroup",
        "UpdateThingGroupsForThing",
        "UpdateThingShadow",
        "ValidateSecurityProfileBehaviors"
      ],
      "HasResource": true,
      "StringPrefix": "iot",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "iot:Delete",
        "iot:ThingGroupArn",
        "iot:TunnelDestinationService"
      ]
    },
    "AWS IoT 1-Click": {
      "ARNFormat": "arn:aws:iot1click:<region>:<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:iot1click:.+:[0-9]+:.+",
      "Actions": [
        "AssociateDeviceWithPlacement",
        "ClaimDevicesByClaimCode",
        "CreatePlacement",
        "CreateProject",
        "DeletePlacement",
        "DeleteProject",
        "DescribeDevice",
        "DescribePlacement",
        "DescribeProject",
        "DisassociateDeviceFromPlacement",
        "FinalizeDeviceClaim",
        "GetDeviceMethods",
        "GetDevicesInPlacement",
        "InitiateDeviceClaim",
        "InvokeDeviceMethod",
        "ListDeviceEvents",
        "ListDevices",
        "ListPlacements",
        "ListProjects",
        "ListTagsForResource",
        "TagResource",
        "UnclaimDevice",
        "UntagResource",
        "UpdateDeviceState",
        "UpdatePlacement",
        "UpdateProject"
      ],
      "HasResource": true,
      "StringPrefix": "iot1click",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS IoT Analytics": {
      "ARNFormat": "arn:aws:iotanalytics:<region>:<account_ID>:<type>/<name>",
      "ARNRegex": "^arn:aws:iotanalytics:.+",
      "Actions": [
        "BatchPutMessage",
        "CancelPipelineReprocessing",
        "CreateChannel",
        "CreateDataset",
        "CreateDatasetContent",
        "CreateDatastore",
        "CreatePipeline",
        "DeleteChannel",
        "DeleteDataset",
        "DeleteDatasetContent",
        "DeleteDatastore",
        "DeletePipeline",
        "DescribeChannel",
        "DescribeDataset",
        "DescribeDatastore",
        "DescribeLoggingOptions",
        "DescribePipeline",
        "GetDatasetContent",
        "ListChannels",
        "ListDatasets",
        "ListDatastores",
        "ListPipelines",
        "ListTagsForResource",
        "PutLoggingOptions",
        "RunPipelineActivity",
        "SampleChannelData",
        "StartPipelineReprocessing",
        "TagResource",
        "UntagResource",
        "UpdateChannel",
        "UpdateDataset",
        "UpdateDatastore",
        "UpdatePipeline"
      ],
      "HasResource": true,
      "StringPrefix": "iotanalytics",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "iotanalytics:ResourceTag/${TagKey}"
      ]
    },
    "AWS IoT Device Tester": {
      "ARNFormat": "arn:aws:iot-device-tester:<region>:<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:iot-device-tester:.+:.+:.+",
      "Actions": [
        "CheckVersion",
        "DownloadTestSuite",
        "LatestIdt",
        "SendMetrics",
        "SupportedVersion"
      ],
      "HasResource": false,
      "StringPrefix": "iot-device-tester"
    },
    "AWS IoT Events": {
      "ARNFormat": "arn:aws:iotevents:<region>:<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:iotevents:.+",
      "Actions": [
        "BatchPutMessage",
        "BatchUpdateDetector",
        "CreateDetectorModel",
        "CreateInput",
        "DeleteDetectorModel",
        "DeleteInput",
        "DescribeDetector",
        "DescribeDetectorModel",
        "DescribeInput",
        "DescribeLoggingOptions",
        "ListDetectorModelVersions",
        "ListDetectorModels",
        "ListDetectors",
        "ListInputs",
        "ListTagsForResource",
        "PutLoggingOptions",
        "TagResource",
        "UntagResource",
        "UpdateDetectorModel",
        "UpdateInput",
        "UpdateInputRouting"
      ],
      "HasResource": true,
      "StringPrefix": "iotevents",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS IoT Greengrass": {
      "ARNFormat": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/${resourceType}/${resourcePath}",
      "ARNRegex": "^arn:${Partition}:greengrass:.+:[0-9]+:.+",
      "Actions": [
        "AssociateRoleToGroup",
        "AssociateServiceRoleToAccount",
        "CreateConnectorDefinition",
        "CreateConnectorDefinitionVersion",
        "CreateCoreDefinition",
        "CreateCoreDefinitionVersion",
        "CreateDeployment",
        "CreateDeviceDefinition",
        "CreateDeviceDefinitionVersion",
        "CreateFunctionDefinition",
        "CreateFunctionDefinitionVersion",
        "CreateGroup",
        "CreateGroupCertificateAuthority",
        "CreateGroupVersion",
        "CreateLoggerDefinition",
        "CreateLoggerDefinitionVersion",
        "CreateResourceDefinition",
        "CreateResourceDefinitionVersion",
        "CreateSoftwareUpdateJob",
        "CreateSubscriptionDefinition",
        "CreateSubscriptionDefinitionVersion",
        "DeleteConnectorDefinition",
        "DeleteCoreDefinition",
        "DeleteDeviceDefinition",
        "DeleteFunctionDefinition",
        "DeleteGroup",
        "DeleteLoggerDefinition",
        "DeleteResourceDefinition",
        "DeleteSubscriptionDefinition",
        "DisassociateRoleFromGroup",
        "DisassociateServiceRoleFromAccount",
        "GetAssociatedRole",
        "GetBulkDeploymentStatus",
        "GetConnectivityInfo",
        "GetConnectorDefinition",
        "GetConnectorDefinitionVersion",
        "GetCoreDefinition",
        "GetCoreDefinitionVersion",
        "GetDeploymentStatus",
        "GetDeviceDefinition",
        "GetDeviceDefinitionVersion",
        "GetFunctionDefinition",
        "GetFunctionDefinitionVersion",
        "GetGroup",
        "GetGroupCertificateAuthority",
        "GetGroupCertificateConfiguration",
        "GetGroupVersion",
        "GetLoggerDefinition",
        "GetLoggerDefinitionVersion",
        "GetResourceDefinition",
        "GetResourceDefinitionVersion",
        "GetServiceRoleForAccount",
        "GetSubscriptionDefinition",
        "GetSubscriptionDefinitionVersion",
        "ListBulkDeploymentDetailedReports",
        "ListBulkDeployments",
        "ListConnectorDefinitionVersions",
        "ListConnectorDefinitions",
        "ListCoreDefinitionVersions",
        "ListCoreDefinitions",
        "ListDeployments",
        "ListDeviceDefinitionVersions",
        "ListDeviceDefinitions",
        "ListFunctionDefinitionVersions",
        "ListFunctionDefinitions",
        "ListGroupCertificateAuthorities",
        "ListGroupVersions",
        "ListGroups",
        "ListLoggerDefinitionVersions",
        "ListLoggerDefinitions",
        "ListResourceDefinitionVersions",
        "ListResourceDefinitions",
        "ListSubscriptionDefinitionVersions",
        "ListSubscriptionDefinitions",
        "ListTagsForResource",
        "ResetDeployments",
        "StartBulkDeployment",
        "StopBulkDeployment",
        "TagResource",
        "UntagResource",
        "UpdateConnectivityInfo",
        "UpdateConnectorDefinition",
        "UpdateCoreDefinition",
        "UpdateDeviceDefinition",
        "UpdateFunctionDefinition",
        "UpdateGroup",
        "UpdateGroupCertificateConfiguration",
        "UpdateLoggerDefinition",
        "UpdateResourceDefinition",
        "UpdateSubscriptionDefinition"
      ],
      "HasResource": true,
      "StringPrefix": "greengrass",
      "conditionKeys": [
        "aws:CurrentTime",
        "aws:EpochTime",
        "aws:MultiFactorAuthAge",
        "aws:MultiFactorAuthPresent",
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:SecureTransport",
        "aws:TagKeys",
        "aws:UserAgent"
      ]
    },
    "AWS IoT SiteWise": {
      "ARNFormat": "arn:aws:iotsitewise:<region>:<account_ID>:<type>/<name>",
      "ARNRegex": "^arn:${Partition}:iotsitewise:.+-\\d+:\\d{12}:.+",
      "Actions": [
        "AssociateAssets",
        "BatchAssociateProjectAssets",
        "BatchDisassociateProjectAssets",
        "BatchPutAssetPropertyValue",
        "CreateAccessPolicy",
        "CreateAsset",
        "CreateAssetModel",
        "CreateDashboard",
        "CreateGateway",
        "CreatePortal",
        "CreateProject",
        "DeleteAccessPolicy",
        "DeleteAsset",
        "DeleteAssetModel",
        "DeleteDashboard",
        "DeleteGateway",
        "DeletePortal",
        "DeleteProject",
        "DescribeAccessPolicy",
        "DescribeAsset",
        "DescribeAssetModel",
        "DescribeAssetProperty",
        "DescribeDashboard",
        "DescribeGateway",
        "DescribeGatewayCapabilityConfiguration",
        "DescribeLoggingOptions",
        "DescribePortal",
        "DescribeProject",
        "DisassociateAssets",
        "GetAssetPropertyAggregates",
        "GetAssetPropertyValue",
        "GetAssetPropertyValueHistory",
        "ListAccessPolicies",
        "ListAssetModels",
        "ListAssets",
        "ListAssociatedAssets",
        "ListDashboards",
        "ListGateways",
        "ListPortals",
        "ListProjectAssets",
        "ListProjects",
        "ListTagsForResource",
        "PutLoggingOptions",
        "TagResource",
        "UntagResource",
        "UpdateAccessPolicy",
        "UpdateAsset",
        "UpdateAssetModel",
        "UpdateAssetProperty",
        "UpdateDashboard",
        "UpdateGateway",
        "UpdateGatewayCapabilityConfiguration",
        "UpdatePortal",
        "UpdateProject"
      ],
      "HasResource": true,
      "StringPrefix": "iotsitewise",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "iotsitewise:assetHierarchyPath",
        "iotsitewise:childAssetId",
        "iotsitewise:group",
        "iotsitewise:portal",
        "iotsitewise:project",
        "iotsitewise:propertyId",
        "iotsitewise:user"
      ]
    },
    "AWS IoT Things Graph": {
      "ARNFormat": "arn:aws:iotthingsgraph:<region>:<account_id>:<type>/<name>",
      "ARNRegex": "^arn:aws:iotthingsgraph:.+:.+:.+",
      "Actions": [
        "AssociateEntityToThing",
        "CreateFlowTemplate",
        "CreateSystemInstance",
        "CreateSystemTemplate",
        "DeleteFlowTemplate",
        "DeleteNamespace",
        "DeleteSystemInstance",
        "DeleteSystemTemplate",
        "DeploySystemInstance",
        "DeprecateFlowTemplate",
        "DeprecateSystemTemplate",
        "DescribeNamespace",
        "DissociateEntityFromThing",
        "GetEntities",
        "GetFlowTemplate",
        "GetFlowTemplateRevisions",
        "GetNamespaceDeletionStatus",
        "GetSystemInstance",
        "GetSystemTemplate",
        "GetSystemTemplateRevisions",
        "GetUploadStatus",
        "ListFlowExecutionMessages",
        "ListTagsForResource",
        "SearchEntities",
        "SearchFlowExecutions",
        "SearchFlowTemplates",
        "SearchSystemInstances",
        "SearchSystemTemplates",
        "SearchThings",
        "TagResource",
        "UndeploySystemInstance",
        "UntagResource",
        "UpdateFlowTemplate",
        "UpdateSystemTemplate",
        "UploadEntityDefinitions"
      ],
      "HasResource": true,
      "StringPrefix": "iotthingsgraph",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS Key Management Service": {
      "ARNFormat": "arn:aws:kms:<region>:<account_id>:<resource_type>/<id>",
      "ARNRegex": "^arn:aws:kms:.+",
      "Actions": [
        "CancelKeyDeletion",
        "ConnectCustomKeyStore",
        "CreateAlias",
        "CreateCustomKeyStore",
        "CreateGrant",
        "CreateKey",
        "Decrypt",
        "DeleteAlias",
        "DeleteCustomKeyStore",
        "DeleteImportedKeyMaterial",
        "DescribeCustomKeyStores",
        "DescribeKey",
        "DisableKey",
        "DisableKeyRotation",
        "DisconnectCustomKeyStore",
        "EnableKey",
        "EnableKeyRotation",
        "Encrypt",
        "GenerateDataKey",
        "GenerateDataKeyPair",
        "GenerateDataKeyPairWithoutPlaintext",
        "GenerateDataKeyWithoutPlaintext",
        "GenerateRandom",
        "GetKeyPolicy",
        "GetKeyRotationStatus",
        "GetParametersForImport",
        "GetPublicKey",
        "ImportKeyMaterial",
        "ListAliases",
        "ListGrants",
        "ListKeyPolicies",
        "ListKeys",
        "ListResourceTags",
        "ListRetirableGrants",
        "PutKeyPolicy",
        "ReEncryptFrom",
        "ReEncryptTo",
        "RetireGrant",
        "RevokeGrant",
        "ScheduleKeyDeletion",
        "Sign",
        "TagResource",
        "UntagResource",
        "UpdateAlias",
        "UpdateCustomKeyStore",
        "UpdateKeyDescription",
        "Verify"
      ],
      "HasResource": true,
      "StringPrefix": "kms",
      "conditionKeys": [
        "kms:BypassPolicyLockoutSafetyCheck",
        "kms:CallerAccount",
        "kms:CustomerMasterKeySpec",
        "kms:CustomerMasterKeyUsage",
        "kms:DataKeyPairSpec",
        "kms:EncryptionAlgorithm",
        "kms:EncryptionContextKeys",
        "kms:ExpirationModel",
        "kms:GrantConstraintType",
        "kms:GrantIsForAWSResource",
        "kms:GrantOperations",
        "kms:GranteePrincipal",
        "kms:KeyOrigin",
        "kms:MessageType",
        "kms:ReEncryptOnSameKey",
        "kms:RetiringPrincipal",
        "kms:SigningAlgorithm",
        "kms:ValidTo",
        "kms:ViaService",
        "kms:WrappingAlgorithm",
        "kms:WrappingKeySpec"
      ]
    },
    "AWS Lake Formation": {
      "Actions": [
        "BatchGrantPermissions",
        "BatchRevokePermissions",
        "DeregisterResource",
        "DescribeResource",
        "GetDataAccess",
        "GetDataLakeSettings",
        "GetEffectivePermissionsForPath",
        "GrantPermissions",
        "ListPermissions",
        "ListResources",
        "PutDataLakeSettings",
        "RegisterResource",
        "RevokePermissions",
        "UpdateResource"
      ],
      "HasResource": false,
      "StringPrefix": "lakeformation"
    },
    "AWS Lambda": {
      "ARNFormat": "arn:aws:lambda:<region>:<account>:<resourceType>:<resourceId>",
      "ARNRegex": "^arn:aws:lambda:.+",
      "Actions": [
        "AddLayerVersionPermission",
        "AddPermission",
        "CreateAlias",
        "CreateEventSourceMapping",
        "CreateFunction",
        "DeleteAlias",
        "DeleteEventSourceMapping",
        "DeleteFunction",
        "DeleteFunctionConcurrency",
        "DeleteFunctionEventInvokeConfig",
        "DeleteLayerVersion",
        "DeleteProvisionedConcurrencyConfig",
        "DisableReplication",
        "EnableReplication",
        "GetAccountSettings",
        "GetAlias",
        "GetEventSourceMapping",
        "GetFunction",
        "GetFunctionConcurrency",
        "GetFunctionConfiguration",
        "GetFunctionEventInvokeConfig",
        "GetLayerVersion",
        "GetLayerVersionByArn",
        "GetLayerVersionPolicy",
        "GetPolicy",
        "GetProvisionedConcurrencyConfig",
        "InvokeAsync",
        "InvokeFunction",
        "ListAliases",
        "ListEventSourceMappings",
        "ListFunctionEventInvokeConfigs",
        "ListFunctions",
        "ListLayerVersions",
        "ListLayers",
        "ListProvisionedConcurrencyConfigs",
        "ListTags",
        "ListVersionsByFunction",
        "PublishLayerVersion",
        "PublishVersion",
        "PutFunctionConcurrency",
        "PutFunctionEventInvokeConfig",
        "PutProvisionedConcurrencyConfig",
        "RemoveLayerVersionPermission",
        "RemovePermission",
        "TagResource",
        "UntagResource",
        "UpdateAlias",
        "UpdateEventSourceMapping",
        "UpdateFunctionCode",
        "UpdateFunctionConfiguration",
        "UpdateFunctionEventInvokeConfig"
      ],
      "HasResource": true,
      "StringPrefix": "lambda",
      "conditionKeys": [
        "lambda:FunctionArn",
        "lambda:Layer",
        "lambda:Principal"
      ]
    },
    "AWS License Manager": {
      "ARNFormat": "arn:aws:license-manager:<region>:<account-id>:<resourceType>/<resourceId>",
      "ARNRegex": "^arn:aws:license-manager:.+:.+:.+",
      "Actions": [
        "CreateLicenseConfiguration",
        "DeleteLicenseConfiguration",
        "GetLicenseConfiguration",
        "GetServiceSettings",
        "ListAssociationsForLicenseConfiguration",
        "ListLicenseConfigurations",
        "ListLicenseSpecificationsForResource",
        "ListResourceInventory",
        "ListTagsForResource",
        "ListUsageForLicenseConfiguration",
        "TagResource",
        "UntagResource",
        "UpdateLicenseConfiguration",
        "UpdateLicenseSpecificationsForResource",
        "UpdateServiceSettings"
      ],
      "HasResource": true,
      "StringPrefix": "license-manager",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "license-manager:ResourceTag/${TagKey}"
      ]
    },
    "AWS Marketplace": {
      "Actions": [
        "AcceptAgreementApprovalRequest",
        "CancelAgreementRequest",
        "DescribeAgreement",
        "GetAgreementApprovalRequest",
        "GetAgreementRequest",
        "GetAgreementTerms",
        "ListAgreementApprovalRequests",
        "ListAgreementRequests",
        "RejectAgreementApprovalRequest",
        "SearchAgreements",
        "Subscribe",
        "Unsubscribe",
        "UpdateAgreementApprovalRequest",
        "ViewSubscriptions"
      ],
      "HasResource": false,
      "StringPrefix": "aws-marketplace",
      "conditionKeys": [
        "aws-marketplace:AgreementType",
        "aws-marketplace:PartyType"
      ]
    },
    "AWS Marketplace Catalog": {
      "ARNFormat": "arn:aws:aws-marketplace:<region>:<account>:<catalog>/<resource_type>/<resource_id>",
      "ARNRegex": "^arn:aws:aws-marketplace:::.+",
      "Actions": [
        "CancelChangeSet",
        "CompleteTask",
        "DescribeChangeSet",
        "DescribeEntity",
        "DescribeTask",
        "ListChangeSets",
        "ListEntities",
        "ListTasks",
        "StartChangeSet",
        "UpdateTask"
      ],
      "HasResource": true,
      "StringPrefix": "aws-marketplace",
      "conditionKeys": [
        "catalog:ChangeType"
      ]
    },
    "AWS Marketplace Entitlement Service": {
      "Actions": [
        "GetEntitlements"
      ],
      "HasResource": false,
      "StringPrefix": "aws-marketplace"
    },
    "AWS Marketplace Image Building Service": {
      "Actions": [
        "DescribeBuilds",
        "ListBuilds",
        "StartBuild"
      ],
      "HasResource": false,
      "StringPrefix": "aws-marketplace"
    },
    "AWS Marketplace Management Portal": {
      "Actions": [
        "uploadFiles",
        "viewMarketing",
        "viewReports",
        "viewSettings",
        "viewSupport"
      ],
      "HasResource": false,
      "StringPrefix": "aws-marketplace-management"
    },
    "AWS Marketplace Metering Service": {
      "Actions": [
        "BatchMeterUsage",
        "MeterUsage",
        "RegisterUsage",
        "ResolveCustomer"
      ],
      "HasResource": false,
      "StringPrefix": "aws-marketplace"
    },
    "AWS Marketplace Procurement Systems Integration": {
      "Actions": [
        "DescribeProcurementSystemConfiguration",
        "PutProcurementSystemConfiguration"
      ],
      "HasResource": false,
      "StringPrefix": "aws-marketplace"
    },
    "AWS Migration Hub": {
      "ARNFormat": "arn:aws:mgh:<region>:<namespace>:<relative-id>",
      "ARNRegex": "^arn:aws:mgh:[a-z0-9-]+:[0-9]{12}:.+",
      "Actions": [
        "AssociateCreatedArtifact",
        "AssociateDiscoveredResource",
        "CreateHomeRegionControl",
        "CreateProgressUpdateStream",
        "DeleteProgressUpdateStream",
        "DescribeApplicationState",
        "DescribeHomeRegionControls",
        "DescribeMigrationTask",
        "DisassociateCreatedArtifact",
        "DisassociateDiscoveredResource",
        "GetHomeRegion",
        "ImportMigrationTask",
        "ListCreatedArtifacts",
        "ListDiscoveredResources",
        "ListMigrationTasks",
        "ListProgressUpdateStreams",
        "NotifyApplicationState",
        "NotifyMigrationTaskState",
        "PutResourceAttributes"
      ],
      "HasResource": true,
      "StringPrefix": "mgh"
    },
    "AWS Mobile Hub": {
      "ARNFormat": "arn:aws:mobilehub:<region>:<aws_account_ID>:project/<project_ID>",
      "ARNRegex": "^arn:aws:mobilehub:.+:[0-9]+:.+",
      "Actions": [
        "CreateProject",
        "CreateServiceRole",
        "DeleteProject",
        "DeleteProjectSnapshot",
        "DeployToStage",
        "DescribeBundle",
        "ExportBundle",
        "ExportProject",
        "GenerateProjectParameters",
        "GetProject",
        "GetProjectSnapshot",
        "ImportProject",
        "InstallBundle",
        "ListAvailableConnectors",
        "ListAvailableFeatures",
        "ListAvailableRegions",
        "ListBundles",
        "ListProjectSnapshots",
        "ListProjects",
        "SynchronizeProject",
        "UpdateProject",
        "ValidateProject",
        "VerifyServiceRole"
      ],
      "HasResource": true,
      "StringPrefix": "mobilehub"
    },
    "AWS OpsWorks": {
      "ARNFormat": "arn:aws:<serviceName>:<region>:<account>:<resourceType>/<resourceName>",
      "ARNRegex": "^arn:aws:opsworks:.+",
      "Actions": [
        "AssignInstance",
        "AssignVolume",
        "AssociateElasticIp",
        "AttachElasticLoadBalancer",
        "CloneStack",
        "CreateApp",
        "CreateDeployment",
        "CreateInstance",
        "CreateLayer",
        "CreateStack",
        "CreateUserProfile",
        "DeleteApp",
        "DeleteInstance",
        "DeleteLayer",
        "DeleteStack",
        "DeleteUserProfile",
        "DeregisterEcsCluster",
        "DeregisterElasticIp",
        "DeregisterInstance",
        "DeregisterRdsDbInstance",
        "DeregisterVolume",
        "DescribeAgentVersions",
        "DescribeApps",
        "DescribeCommands",
        "DescribeDeployments",
        "DescribeEcsClusters",
        "DescribeElasticIps",
        "DescribeElasticLoadBalancers",
        "DescribeInstances",
        "DescribeLayers",
        "DescribeLoadBasedAutoScaling",
        "DescribeMyUserProfile",
        "DescribePermissions",
        "DescribeRaidArrays",
        "DescribeRdsDbInstances",
        "DescribeServiceErrors",
        "DescribeStackProvisioningParameters",
        "DescribeStackSummary",
        "DescribeStacks",
        "DescribeTimeBasedAutoScaling",
        "DescribeUserProfiles",
        "DescribeVolumes",
        "DetachElasticLoadBalancer",
        "DisassociateElasticIp",
        "GetHostnameSuggestion",
        "GrantAccess",
        "ListTags",
        "RebootInstance",
        "RegisterEcsCluster",
        "RegisterElasticIp",
        "RegisterInstance",
        "RegisterRdsDbInstance",
        "RegisterVolume",
        "SetLoadBasedAutoScaling",
        "SetPermission",
        "SetTimeBasedAutoScaling",
        "StartInstance",
        "StartStack",
        "StopInstance",
        "StopStack",
        "TagResource",
        "UnassignInstance",
        "UnassignVolume",
        "UntagResource",
        "UpdateApp",
        "UpdateElasticIp",
        "UpdateInstance",
        "UpdateLayer",
        "UpdateMyUserProfile",
        "UpdateRdsDbInstance",
        "UpdateStack",
        "UpdateUserProfile",
        "UpdateVolume"
      ],
      "HasResource": true,
      "StringPrefix": "opsworks"
    },
    "AWS OpsWorks Configuration Management": {
      "ARNFormat": "arn:aws:opsworks-cm:<region>:<account>:<resourceType>/<id>",
      "ARNRegex": "^arn:aws:opsworks-cm:.+:[0-9]+:.+",
      "Actions": [
        "AssociateNode",
        "CreateBackup",
        "CreateServer",
        "DeleteBackup",
        "DeleteServer",
        "DescribeAccountAttributes",
        "DescribeBackups",
        "DescribeEvents",
        "DescribeNodeAssociationStatus",
        "DescribeServers",
        "DisassociateNode",
        "RestoreServer",
        "StartMaintenance",
        "UpdateServer",
        "UpdateServerEngineAttributes"
      ],
      "HasResource": false,
      "StringPrefix": "opsworks-cm"
    },
    "AWS Organizations": {
      "ARNFormat": "arn:${Partition}:organizations::<masterAccountId>:<resource>/o-<organizationId>(/<resourceType>/<resourceId>)?",
      "ARNRegex": "^arn:${Partition}:organizations::.+:.+",
      "Actions": [
        "AcceptHandshake",
        "AttachPolicy",
        "CancelHandshake",
        "CreateAccount",
        "CreateGovCloudAccount",
        "CreateOrganization",
        "CreateOrganizationalUnit",
        "CreatePolicy",
        "DeclineHandshake",
        "DeleteOrganization",
        "DeleteOrganizationalUnit",
        "DeletePolicy",
        "DeregisterDelegatedAdministrator",
        "DescribeAccount",
        "DescribeCreateAccountStatus",
        "DescribeEffectivePolicy",
        "DescribeHandshake",
        "DescribeOrganization",
        "DescribeOrganizationalUnit",
        "DescribePolicy",
        "DetachPolicy",
        "DisableAWSServiceAccess",
        "DisablePolicyType",
        "EnableAWSServiceAccess",
        "EnableAllFeatures",
        "EnablePolicyType",
        "InviteAccountToOrganization",
        "LeaveOrganization",
        "ListAWSServiceAccessForOrganization",
        "ListAccounts",
        "ListAccountsForParent",
        "ListChildren",
        "ListCreateAccountStatus",
        "ListDelegatedAdministrators",
        "ListDelegatedServicesForAccount",
        "ListHandshakesForAccount",
        "ListHandshakesForOrganization",
        "ListOrganizationalUnitsForParent",
        "ListParents",
        "ListPolicies",
        "ListPoliciesForTarget",
        "ListRoots",
        "ListTagsForResource",
        "ListTargetsForPolicy",
        "MoveAccount",
        "RegisterDelegatedAdministrator",
        "RemoveAccountFromOrganization",
        "TagResource",
        "UntagResource",
        "UpdateOrganizationalUnit",
        "UpdatePolicy"
      ],
      "HasResource": true,
      "StringPrefix": "organizations",
      "conditionKeys": [
        "organizations:PolicyType",
        "organizations:ServicePrincipal"
      ]
    },
    "AWS Outposts": {
      "ARNFormat": "arn:aws:outposts:<region>:<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:outposts:.+:.+:.+",
      "Actions": [
        "CreateOutpost",
        "GetOutpost",
        "GetOutpostInstanceTypes",
        "ListOutposts",
        "ListSites"
      ],
      "HasResource": true,
      "StringPrefix": "outposts"
    },
    "AWS Performance Insights": {
      "ARNFormat": "arn:aws:pi:<region>:<account>:<resource-type>/<relative-id>",
      "ARNRegex": "^arn:aws:pi:.+",
      "Actions": [
        "DescribeDimensionKeys",
        "GetResourceMetrics"
      ],
      "HasResource": true,
      "StringPrefix": "pi"
    },
    "AWS Price List": {
      "Actions": [
        "DescribeServices",
        "GetAttributeValues",
        "GetProducts"
      ],
      "HasResource": false,
      "StringPrefix": "pricing"
    },
    "AWS Private Marketplace": {
      "Actions": [
        "AssociateProductsWithPrivateMarketplace",
        "CreatePrivateMarketplace",
        "CreatePrivateMarketplaceProfile",
        "CreatePrivateMarketplaceRequests",
        "DescribePrivateMarketplaceProducts",
        "DescribePrivateMarketplaceProfile",
        "DescribePrivateMarketplaceRequests",
        "DescribePrivateMarketplaceSettings",
        "DescribePrivateMarketplaceStatus",
        "DisassociateProductsFromPrivateMarketplace",
        "ListPrivateMarketplaceProducts",
        "ListPrivateMarketplaceRequests",
        "StartPrivateMarketplace",
        "StopPrivateMarketplace",
        "UpdatePrivateMarketplaceProfile",
        "UpdatePrivateMarketplaceSettings"
      ],
      "HasResource": false,
      "StringPrefix": "aws-marketplace"
    },
    "AWS Purchase Orders Console": {
      "ARNFormat": "arn:aws:purchase-orders:<region>:<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:purchase-orders:.+:.+:.+",
      "Actions": [
        "ModifyPurchaseOrders",
        "ViewPurchaseOrders"
      ],
      "HasResource": false,
      "StringPrefix": "purchase-orders"
    },
    "AWS Resource Access Manager": {
      "ARNFormat": "arn:aws:ram:<region>:<account-id>:resource-share/<resource-uuid>",
      "ARNRegex": "^arn:aws:ram:.+:.+:.+",
      "Actions": [
        "AcceptResourceShareInvitation",
        "AssociateResourceShare",
        "AssociateResourceSharePermission",
        "CreateResourceShare",
        "DeleteResourceShare",
        "DisassociateResourceShare",
        "DisassociateResourceSharePermission",
        "EnableSharingWithAwsOrganization",
        "GetPermission",
        "GetResourcePolicies",
        "GetResourceShareAssociations",
        "GetResourceShareInvitations",
        "GetResourceShares",
        "ListPendingInvitationResources",
        "ListPermissions",
        "ListPrincipals",
        "ListResourceSharePermissions",
        "ListResources",
        "RejectResourceShareInvitation",
        "TagResource",
        "UntagResource",
        "UpdateResourceShare"
      ],
      "HasResource": true,
      "StringPrefix": "ram",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ram:AllowsExternalPrincipals",
        "ram:PermissionArn",
        "ram:Principal",
        "ram:RequestedAllowsExternalPrincipals",
        "ram:RequestedResourceType",
        "ram:ResourceArn",
        "ram:ResourceShareName",
        "ram:ShareOwnerAccountId"
      ]
    },
    "AWS Resource Groups": {
      "ARNFormat": "arn:aws:<serviceName>:<region>:<account>:<resourceType>/<resourceName>",
      "ARNRegex": "^arn:aws:resource-groups:.+",
      "Actions": [
        "CreateGroup",
        "DeleteGroup",
        "GetGroup",
        "GetGroupQuery",
        "GetTags",
        "ListGroupResources",
        "ListGroups",
        "SearchResources",
        "Tag",
        "Untag",
        "UpdateGroup",
        "UpdateGroupQuery"
      ],
      "HasResource": true,
      "StringPrefix": "resource-groups",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS RoboMaker": {
      "ARNFormat": "arn:${Partition}:robomaker:${Region}:${AccountId}:${ResourceType}/${ResourceName}",
      "ARNRegex": "^arn:${Partition}:robomaker:.+:.+:.+",
      "Actions": [
        "BatchDescribeSimulationJob",
        "CancelDeploymentJob",
        "CancelSimulationJob",
        "CancelSimulationJobBatch",
        "CreateDeploymentJob",
        "CreateFleet",
        "CreateRobot",
        "CreateRobotApplication",
        "CreateRobotApplicationVersion",
        "CreateSimulationApplication",
        "CreateSimulationApplicationVersion",
        "CreateSimulationJob",
        "DeleteFleet",
        "DeleteRobot",
        "DeleteRobotApplication",
        "DeleteSimulationApplication",
        "DeregisterRobot",
        "DescribeDeploymentJob",
        "DescribeFleet",
        "DescribeRobot",
        "DescribeRobotApplication",
        "DescribeSimulationApplication",
        "DescribeSimulationJob",
        "DescribeSimulationJobBatch",
        "ListDeploymentJobs",
        "ListFleets",
        "ListRobotApplications",
        "ListRobots",
        "ListSimulationApplications",
        "ListSimulationJobBatches",
        "ListSimulationJobs",
        "ListTagsForResource",
        "RegisterRobot",
        "RestartSimulationJob",
        "StartSimulationJobBatch",
        "SyncDeploymentJob",
        "TagResource",
        "UntagResource",
        "UpdateRobotApplication",
        "UpdateSimulationApplication"
      ],
      "HasResource": true,
      "StringPrefix": "robomaker",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS SSO": {
      "ARNFormat": "arn:${Partition}:sso:${Region}:${Account}:<relative-id>",
      "ARNRegex": "^arn:${Partition}:sso:${Region}:.+",
      "Actions": [
        "AssociateDirectory",
        "AssociateProfile",
        "CreateApplicationInstance",
        "CreateApplicationInstanceCertificate",
        "CreateManagedApplicationInstance",
        "CreatePermissionSet",
        "CreateProfile",
        "CreateTrust",
        "DeleteApplicationInstance",
        "DeleteApplicationInstanceCertificate",
        "DeleteManagedApplicationInstance",
        "DeletePermissionSet",
        "DeletePermissionsPolicy",
        "DeleteProfile",
        "DescribePermissionsPolicies",
        "DescribeRegisteredRegions",
        "DisassociateDirectory",
        "DisassociateProfile",
        "GetApplicationInstance",
        "GetApplicationTemplate",
        "GetManagedApplicationInstance",
        "GetMfaDeviceManagementForDirectory",
        "GetPermissionSet",
        "GetPermissionsPolicy",
        "GetProfile",
        "GetSSOStatus",
        "GetSharedSsoConfiguration",
        "GetSsoConfiguration",
        "GetTrust",
        "ImportApplicationInstanceServiceProviderMetadata",
        "ListApplicationInstanceCertificates",
        "ListApplicationInstances",
        "ListApplicationTemplates",
        "ListApplications",
        "ListDirectoryAssociations",
        "ListPermissionSets",
        "ListProfileAssociations",
        "ListProfiles",
        "PutMfaDeviceManagementForDirectory",
        "PutPermissionsPolicy",
        "StartSSO",
        "UpdateApplicationInstanceActiveCertificate",
        "UpdateApplicationInstanceDisplayData",
        "UpdateApplicationInstanceResponseConfiguration",
        "UpdateApplicationInstanceResponseSchemaConfiguration",
        "UpdateApplicationInstanceSecurityConfiguration",
        "UpdateApplicationInstanceServiceProviderConfiguration",
        "UpdateApplicationInstanceStatus",
        "UpdateDirectoryAssociation",
        "UpdateManagedApplicationInstanceStatus",
        "UpdatePermissionSet",
        "UpdateProfile",
        "UpdateSSOConfiguration",
        "UpdateTrust"
      ],
      "HasResource": false,
      "StringPrefix": "sso"
    },
    "AWS SSO Directory": {
      "ARNFormat": "arn:${Partition}:sso-directory:${Region}:${Account}:<relative-id>",
      "ARNRegex": "^arn:${Partition}:sso-directory:${Region}:.+",
      "Actions": [
        "AddMemberToGroup",
        "CompleteVirtualMfaDeviceRegistration",
        "CreateAlias",
        "CreateBearerToken",
        "CreateExternalIdPConfigurationForDirectory",
        "CreateGroup",
        "CreateProvisioningTenant",
        "CreateUser",
        "DeleteBearerToken",
        "DeleteExternalIdPConfigurationForDirectory",
        "DeleteGroup",
        "DeleteMfaDeviceForUser",
        "DeleteProvisioningTenant",
        "DeleteUser",
        "DescribeDirectory",
        "DescribeGroups",
        "DescribeUsers",
        "DisableExternalIdPConfigurationForDirectory",
        "DisableUser",
        "EnableExternalIdPConfigurationForDirectory",
        "EnableUser",
        "GetAWSSPConfigurationForDirectory",
        "ListBearerTokens",
        "ListExternalIdPConfigurationsForDirectory",
        "ListGroupsForUser",
        "ListMembersInGroup",
        "ListMfaDevicesForUser",
        "ListProvisioningTenants",
        "RemoveMemberFromGroup",
        "SearchGroups",
        "SearchUsers",
        "StartVirtualMfaDeviceRegistration",
        "UpdateExternalIdPConfigurationForDirectory",
        "UpdateGroup",
        "UpdatePassword",
        "UpdateUser",
        "VerifyEmail"
      ],
      "HasResource": false,
      "StringPrefix": "sso-directory"
    },
    "AWS Savings Plans": {
      "ARNFormat": "arn:aws:savingsplans::${Account}:${ResourceType}/${ResourcePath}",
      "ARNRegex": "^arn:aws:savingsplans:.+",
      "Actions": [
        "CreateSavingsPlan",
        "DescribeSavingsPlanRates",
        "DescribeSavingsPlans",
        "DescribeSavingsPlansOfferingRates",
        "DescribeSavingsPlansOfferings",
        "ListTagsForResource",
        "TagResource",
        "UntagResource"
      ],
      "HasResource": true,
      "StringPrefix": "savingsplans",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS Secrets Manager": {
      "ARNFormat": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:${SecretId}",
      "ARNRegex": "^arn:${Partition}:secretsmanager:.+",
      "Actions": [
        "CancelRotateSecret",
        "CreateSecret",
        "DeleteResourcePolicy",
        "DeleteSecret",
        "DescribeSecret",
        "GetRandomPassword",
        "GetResourcePolicy",
        "GetSecretValue",
        "ListSecretVersionIds",
        "ListSecrets",
        "PutResourcePolicy",
        "PutSecretValue",
        "RestoreSecret",
        "RotateSecret",
        "TagResource",
        "UntagResource",
        "UpdateSecret",
        "UpdateSecretVersionStage"
      ],
      "HasResource": true,
      "StringPrefix": "secretsmanager",
      "conditionKeys": [
        "aws:RequestTag/tag-key",
        "aws:TagKeys",
        "secretsmanager:Description",
        "secretsmanager:ForceDeleteWithoutRecovery",
        "secretsmanager:KmsKeyId",
        "secretsmanager:Name",
        "secretsmanager:RecoveryWindowInDays",
        "secretsmanager:ResourceTag/tag-key",
        "secretsmanager:RotationLambdaARN",
        "secretsmanager:SecretId",
        "secretsmanager:VersionId",
        "secretsmanager:VersionStage",
        "secretsmanager:resource/AllowRotationLambdaArn"
      ]
    },
    "AWS Security Hub": {
      "ARNFormat": "arn:${Partition}:securityhub:<region>:<account_ID>:.+",
      "ARNRegex": "^arn:${Partition}:securityhub:.+",
      "Actions": [
        "AcceptInvitation",
        "BatchDisableStandards",
        "BatchEnableStandards",
        "BatchImportFindings",
        "BatchUpdateFindings",
        "CreateActionTarget",
        "CreateInsight",
        "CreateMembers",
        "DeclineInvitations",
        "DeleteActionTarget",
        "DeleteInsight",
        "DeleteInvitations",
        "DeleteMembers",
        "DescribeActionTargets",
        "DescribeHub",
        "DescribeProducts",
        "DescribeStandards",
        "DescribeStandardsControls",
        "DisableImportFindingsForProduct",
        "DisableSecurityHub",
        "DisassociateFromMasterAccount",
        "DisassociateMembers",
        "EnableImportFindingsForProduct",
        "EnableSecurityHub",
        "GetEnabledStandards",
        "GetFindings",
        "GetInsightResults",
        "GetInsights",
        "GetInvitationsCount",
        "GetMasterAccount",
        "GetMembers",
        "InviteMembers",
        "ListEnabledProductsForImport",
        "ListInvitations",
        "ListMembers",
        "ListTagsForResource",
        "TagResource",
        "UntagResource",
        "UpdateActionTarget",
        "UpdateFindings",
        "UpdateInsight",
        "UpdateStandardsControl"
      ],
      "HasResource": true,
      "StringPrefix": "securityhub",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "securityhub:TargetAccount"
      ]
    },
    "AWS Security Token Service": {
      "ARNFormat": "arn:aws:iam::<namespace>:<relative-id>",
      "ARNRegex": "^arn:aws:iam::.+",
      "Actions": [
        "AssumeRole",
        "AssumeRoleWithSAML",
        "AssumeRoleWithWebIdentity",
        "DecodeAuthorizationMessage",
        "GetAccessKeyInfo",
        "GetCallerIdentity",
        "GetFederationToken",
        "GetServiceBearerToken",
        "GetSessionToken",
        "TagSession"
      ],
      "HasResource": true,
      "StringPrefix": "sts",
      "conditionKeys": [
        "accounts.google.com:aud",
        "accounts.google.com:oaud",
        "accounts.google.com:sub",
        "aws:FederatedProvider",
        "aws:PrincipalTag/${TagKey}",
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "cognito-identity.amazonaws.com:amr",
        "cognito-identity.amazonaws.com:aud",
        "cognito-identity.amazonaws.com:sub",
        "graph.facebook.com:app_id",
        "graph.facebook.com:id",
        "saml:aud",
        "saml:cn",
        "saml:commonName",
        "saml:doc",
        "saml:eduorghomepageuri",
        "saml:eduorgidentityauthnpolicyuri",
        "saml:eduorglegalname",
        "saml:eduorgsuperioruri",
        "saml:eduorgwhitepagesuri",
        "saml:edupersonaffiliation",
        "saml:edupersonassurance",
        "saml:edupersonentitlement",
        "saml:edupersonnickname",
        "saml:edupersonorgdn",
        "saml:edupersonorgunitdn",
        "saml:edupersonprimaryaffiliation",
        "saml:edupersonprimaryorgunitdn",
        "saml:edupersonprincipalname",
        "saml:edupersonscopedaffiliation",
        "saml:edupersontargetedid",
        "saml:givenName",
        "saml:iss",
        "saml:mail",
        "saml:name",
        "saml:namequalifier",
        "saml:organizationStatus",
        "saml:primaryGroupSID",
        "saml:sub",
        "saml:sub_type",
        "saml:surname",
        "saml:uid",
        "saml:x500UniqueIdentifier",
        "sts:ExternalId",
        "sts:RoleSessionName",
        "sts:TransitiveTagKeys",
        "www.amazon.com:app_id",
        "www.amazon.com:user_id"
      ]
    },
    "AWS Server Migration Service": {
      "ARNFormat": "arn:aws:<serviceName>:<region>:<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:<serviceName>:.+:.+:.+",
      "Actions": [
        "CreateApp",
        "CreateReplicationJob",
        "DeleteApp",
        "DeleteAppLaunchConfiguration",
        "DeleteAppReplicationConfiguration",
        "DeleteReplicationJob",
        "DeleteServerCatalog",
        "DisassociateConnector",
        "GenerateChangeSet",
        "GenerateTemplate",
        "GetApp",
        "GetAppLaunchConfiguration",
        "GetAppReplicationConfiguration",
        "GetConnectors",
        "GetMessages",
        "GetReplicationJobs",
        "GetReplicationRuns",
        "GetServers",
        "ImportServerCatalog",
        "LaunchApp",
        "ListApps",
        "PutAppLaunchConfiguration",
        "PutAppReplicationConfiguration",
        "SendMessage",
        "StartAppReplication",
        "StartOnDemandReplicationRun",
        "StopAppReplication",
        "TerminateApp",
        "UpdateApp",
        "UpdateReplicationJob"
      ],
      "HasResource": false,
      "StringPrefix": "sms"
    },
    "AWS Serverless Application Repository": {
      "ARNFormat": "arn:aws:serverlessrepo:<region>:<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:serverlessrepo:.+:.+:.+",
      "Actions": [
        "CreateApplication",
        "CreateApplicationVersion",
        "CreateCloudFormationChangeSet",
        "CreateCloudFormationTemplate",
        "DeleteApplication",
        "GetApplication",
        "GetApplicationPolicy",
        "GetCloudFormationTemplate",
        "ListApplicationDependencies",
        "ListApplicationVersions",
        "ListApplications",
        "PutApplicationPolicy",
        "SearchApplications",
        "UnshareApplication",
        "UpdateApplication"
      ],
      "HasResource": true,
      "StringPrefix": "serverlessrepo",
      "conditionKeys": [
        "serverlessrepo:applicationType"
      ]
    },
    "AWS Service Catalog": {
      "ARNFormat": "arn:aws:(catalog|servicecatalog):<region>:<account>:<resourceType>/<id>",
      "ARNRegex": "^arn:aws:(catalog|servicecatalog):.+",
      "Actions": [
        "AcceptPortfolioShare",
        "AssociateBudgetWithResource",
        "AssociatePrincipalWithPortfolio",
        "AssociateProductWithPortfolio",
        "AssociateServiceActionWithProvisioningArtifact",
        "AssociateTagOptionWithResource",
        "BatchAssociateServiceActionWithProvisioningArtifact",
        "BatchDisassociateServiceActionFromProvisioningArtifact",
        "CopyProduct",
        "CreateConstraint",
        "CreatePortfolio",
        "CreatePortfolioShare",
        "CreateProduct",
        "CreateProvisionedProductPlan",
        "CreateProvisioningArtifact",
        "CreateServiceAction",
        "CreateTagOption",
        "DeleteConstraint",
        "DeletePortfolio",
        "DeletePortfolioShare",
        "DeleteProduct",
        "DeleteProvisionedProductPlan",
        "DeleteProvisioningArtifact",
        "DeleteServiceAction",
        "DeleteTagOption",
        "DescribeConstraint",
        "DescribeCopyProductStatus",
        "DescribePortfolio",
        "DescribePortfolioShareStatus",
        "DescribeProduct",
        "DescribeProductAsAdmin",
        "DescribeProductView",
        "DescribeProvisionedProduct",
        "DescribeProvisionedProductPlan",
        "DescribeProvisioningArtifact",
        "DescribeProvisioningParameters",
        "DescribeRecord",
        "DescribeServiceAction",
        "DescribeServiceActionExecutionParameters",
        "DescribeTagOption",
        "DisableAWSOrganizationsAccess",
        "DisassociateBudgetFromResource",
        "DisassociatePrincipalFromPortfolio",
        "DisassociateProductFromPortfolio",
        "DisassociateServiceActionFromProvisioningArtifact",
        "DisassociateTagOptionFromResource",
        "EnableAWSOrganizationsAccess",
        "ExecuteProvisionedProductPlan",
        "ExecuteProvisionedProductServiceAction",
        "GetAWSOrganizationsAccessStatus",
        "ListAcceptedPortfolioShares",
        "ListBudgetsForResource",
        "ListConstraintsForPortfolio",
        "ListLaunchPaths",
        "ListOrganizationPortfolioAccess",
        "ListPortfolioAccess",
        "ListPortfolios",
        "ListPortfoliosForProduct",
        "ListPrincipalsForPortfolio",
        "ListProvisionedProductPlans",
        "ListProvisioningArtifacts",
        "ListProvisioningArtifactsForServiceAction",
        "ListRecordHistory",
        "ListResourcesForTagOption",
        "ListServiceActions",
        "ListServiceActionsForProvisioningArtifact",
        "ListStackInstancesForProvisionedProduct",
        "ListTagOptions",
        "ProvisionProduct",
        "RejectPortfolioShare",
        "ScanProvisionedProducts",
        "SearchProducts",
        "SearchProductsAsAdmin",
        "SearchProvisionedProducts",
        "TerminateProvisionedProduct",
        "UpdateConstraint",
        "UpdatePortfolio",
        "UpdateProduct",
        "UpdateProvisionedProduct",
        "UpdateProvisionedProductProperties",
        "UpdateProvisioningArtifact",
        "UpdateServiceAction",
        "UpdateTagOption"
      ],
      "HasResource": true,
      "StringPrefix": "servicecatalog",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "servicecatalog:accountLevel",
        "servicecatalog:roleLevel",
        "servicecatalog:userLevel"
      ]
    },
    "AWS Shield": {
      "ARNFormat": "arn:aws:shield::<account_ID>:<resource>/<resource_id>",
      "ARNRegex": "^arn:aws:shield::[0-9]+:.+/.+",
      "Actions": [
        "AssociateDRTLogBucket",
        "AssociateDRTRole",
        "CreateProtection",
        "CreateSubscription",
        "DeleteProtection",
        "DeleteSubscription",
        "DescribeAttack",
        "DescribeDRTAccess",
        "DescribeEmergencyContactSettings",
        "DescribeProtection",
        "DescribeSubscription",
        "DisassociateDRTLogBucket",
        "DisassociateDRTRole",
        "GetSubscriptionState",
        "ListAttacks",
        "ListProtections",
        "UpdateEmergencyContactSettings",
        "UpdateSubscription"
      ],
      "HasResource": true,
      "StringPrefix": "shield"
    },
    "AWS Snowball": {
      "Actions": [
        "CancelCluster",
        "CancelJob",
        "CreateAddress",
        "CreateCluster",
        "CreateJob",
        "DescribeAddress",
        "DescribeAddresses",
        "DescribeCluster",
        "DescribeJob",
        "GetJobManifest",
        "GetJobUnlockCode",
        "GetSnowballUsage",
        "ListClusterJobs",
        "ListClusters",
        "ListJobs",
        "UpdateCluster",
        "UpdateJob"
      ],
      "HasResource": false,
      "StringPrefix": "snowball"
    },
    "AWS Step Functions": {
      "ARNFormat": "arn:aws:<serviceName>:<region>:<account>:<resourceType>:<resourceName>",
      "ARNRegex": "^arn:aws:states:.+",
      "Actions": [
        "CreateActivity",
        "CreateStateMachine",
        "DeleteActivity",
        "DeleteStateMachine",
        "DescribeActivity",
        "DescribeExecution",
        "DescribeStateMachine",
        "DescribeStateMachineForExecution",
        "GetActivityTask",
        "GetExecutionHistory",
        "ListActivities",
        "ListExecutions",
        "ListStateMachines",
        "ListTagsForResource",
        "SendTaskFailure",
        "SendTaskHeartbeat",
        "SendTaskSuccess",
        "StartExecution",
        "StopExecution",
        "TagResource",
        "UntagResource",
        "UpdateStateMachine"
      ],
      "HasResource": true,
      "StringPrefix": "states",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS Support": {
      "Actions": [
        "AddAttachmentsToSet",
        "AddCommunicationToCase",
        "CreateCase",
        "DescribeAttachment",
        "DescribeCaseAttributes",
        "DescribeCases",
        "DescribeCommunications",
        "DescribeIssueTypes",
        "DescribeServices",
        "DescribeSeverityLevels",
        "DescribeSupportLevel",
        "DescribeTrustedAdvisorCheckRefreshStatuses",
        "DescribeTrustedAdvisorCheckResult",
        "DescribeTrustedAdvisorCheckSummaries",
        "DescribeTrustedAdvisorChecks",
        "InitiateCallForCase",
        "InitiateChatForCase",
        "PutCaseAttributes",
        "RateCaseCommunication",
        "RefreshTrustedAdvisorCheck",
        "ResolveCase",
        "SearchForCases"
      ],
      "HasResource": false,
      "StringPrefix": "support"
    },
    "AWS Systems Manager": {
      "ARNFormat": "arn:aws:ssm:<region>:<account_ID>:<relative-id>",
      "ARNRegex": "^arn:aws:(ssm|ec2):.+",
      "Actions": [
        "AddTagsToResource",
        "CancelCommand",
        "CancelMaintenanceWindowExecution",
        "CreateActivation",
        "CreateAssociation",
        "CreateAssociationBatch",
        "CreateDocument",
        "CreateMaintenanceWindow",
        "CreateOpsItem",
        "CreatePatchBaseline",
        "CreateResourceDataSync",
        "DeleteActivation",
        "DeleteAssociation",
        "DeleteDocument",
        "DeleteInventory",
        "DeleteMaintenanceWindow",
        "DeleteParameter",
        "DeleteParameters",
        "DeletePatchBaseline",
        "DeleteResourceDataSync",
        "DeregisterManagedInstance",
        "DeregisterPatchBaselineForPatchGroup",
        "DeregisterTargetFromMaintenanceWindow",
        "DeregisterTaskFromMaintenanceWindow",
        "DescribeActivations",
        "DescribeAssociation",
        "DescribeAssociationExecutionTargets",
        "DescribeAssociationExecutions",
        "DescribeAutomationExecutions",
        "DescribeAutomationStepExecutions",
        "DescribeAvailablePatches",
        "DescribeDocument",
        "DescribeDocumentParameters",
        "DescribeDocumentPermission",
        "DescribeEffectiveInstanceAssociations",
        "DescribeEffectivePatchesForPatchBaseline",
        "DescribeInstanceAssociationsStatus",
        "DescribeInstanceInformation",
        "DescribeInstancePatchStates",
        "DescribeInstancePatchStatesForPatchGroup",
        "DescribeInstancePatches",
        "DescribeInstanceProperties",
        "DescribeInventoryDeletions",
        "DescribeMaintenanceWindowExecutionTaskInvocations",
        "DescribeMaintenanceWindowExecutionTasks",
        "DescribeMaintenanceWindowExecutions",
        "DescribeMaintenanceWindowSchedule",
        "DescribeMaintenanceWindowTargets",
        "DescribeMaintenanceWindowTasks",
        "DescribeMaintenanceWindows",
        "DescribeMaintenanceWindowsForTarget",
        "DescribeOpsItems",
        "DescribeParameters",
        "DescribePatchBaselines",
        "DescribePatchGroupState",
        "DescribePatchGroups",
        "DescribePatchProperties",
        "DescribeSessions",
        "GetAutomationExecution",
        "GetCommandInvocation",
        "GetConnectionStatus",
        "GetDefaultPatchBaseline",
        "GetDeployablePatchSnapshotForInstance",
        "GetDocument",
        "GetInventory",
        "GetInventorySchema",
        "GetMaintenanceWindow",
        "GetMaintenanceWindowExecution",
        "GetMaintenanceWindowExecutionTask",
        "GetMaintenanceWindowExecutionTaskInvocation",
        "GetMaintenanceWindowTask",
        "GetManifest",
        "GetOpsItem",
        "GetOpsSummary",
        "GetParameter",
        "GetParameterHistory",
        "GetParameters",
        "GetParametersByPath",
        "GetPatchBaseline",
        "GetPatchBaselineForPatchGroup",
        "GetServiceSetting",
        "LabelParameterVersion",
        "ListAssociationVersions",
        "ListAssociations",
        "ListCommandInvocations",
        "ListCommands",
        "ListComplianceItems",
        "ListComplianceSummaries",
        "ListDocumentVersions",
        "ListDocuments",
        "ListInstanceAssociations",
        "ListInventoryEntries",
        "ListResourceComplianceSummaries",
        "ListResourceDataSync",
        "ListTagsForResource",
        "ModifyDocumentPermission",
        "PutComplianceItems",
        "PutConfigurePackageResult",
        "PutInventory",
        "PutParameter",
        "RegisterDefaultPatchBaseline",
        "RegisterPatchBaselineForPatchGroup",
        "RegisterTargetWithMaintenanceWindow",
        "RegisterTaskWithMaintenanceWindow",
        "RemoveTagsFromResource",
        "ResetServiceSetting",
        "ResumeSession",
        "SendAutomationSignal",
        "SendCommand",
        "StartAssociationsOnce",
        "StartAutomationExecution",
        "StartSession",
        "StopAutomationExecution",
        "TerminateSession",
        "UpdateAssociation",
        "UpdateAssociationStatus",
        "UpdateDocument",
        "UpdateDocumentDefaultVersion",
        "UpdateInstanceAssociationStatus",
        "UpdateInstanceInformation",
        "UpdateMaintenanceWindow",
        "UpdateMaintenanceWindowTarget",
        "UpdateMaintenanceWindowTask",
        "UpdateManagedInstanceRole",
        "UpdateOpsItem",
        "UpdatePatchBaseline",
        "UpdateResourceDataSync",
        "UpdateServiceSetting"
      ],
      "HasResource": true,
      "StringPrefix": "ssm",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ssm:Overwrite",
        "ssm:Recursive",
        "ssm:SessionDocumentAccessCheck",
        "ssm:SyncType",
        "ssm:resourceTag/tag-key"
      ]
    },
    "AWS Tag Editor": {
      "ARNFormat": "arn:aws:resource-explorer:<region>:<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:resource-explorer:.+",
      "Actions": [
        "ListResourceTypes",
        "ListResources",
        "ListTags"
      ],
      "HasResource": false,
      "StringPrefix": "resource-explorer"
    },
    "AWS Transfer for SFTP": {
      "ARNFormat": "arn:aws:transfer:<region>:<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:transfer:.+:.+:.+",
      "Actions": [
        "CreateServer",
        "CreateUser",
        "DeleteServer",
        "DeleteSshPublicKey",
        "DeleteUser",
        "DescribeServer",
        "DescribeUser",
        "ImportSshPublicKey",
        "ListServers",
        "ListTagsForResource",
        "ListUsers",
        "StartServer",
        "StopServer",
        "TagResource",
        "TestIdentityProvider",
        "UntagResource",
        "UpdateServer",
        "UpdateUser"
      ],
      "HasResource": true,
      "StringPrefix": "transfer",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS Trusted Advisor": {
      "ARNFormat": "arn:aws:trustedadvisor:*:<account_ID>:checks/{category}/{checkId}",
      "ARNRegex": "arn:aws:trustedadvisor:*",
      "Actions": [
        "DescribeAccount",
        "DescribeAccountAccess",
        "DescribeCheckItems",
        "DescribeCheckRefreshStatuses",
        "DescribeCheckSummaries",
        "DescribeChecks",
        "DescribeNotificationPreferences",
        "ExcludeCheckItems",
        "IncludeCheckItems",
        "RefreshCheck",
        "SetAccountAccess",
        "UpdateNotificationPreferences"
      ],
      "HasResource": true,
      "StringPrefix": "trustedadvisor"
    },
    "AWS WAF": {
      "ARNFormat": "arn:aws:waf::<account_ID>:<resource>/<resource_id>",
      "ARNRegex": "^arn:aws:waf::[0-9]+:.+/.+",
      "Actions": [
        "CreateByteMatchSet",
        "CreateGeoMatchSet",
        "CreateIPSet",
        "CreateRateBasedRule",
        "CreateRegexMatchSet",
        "CreateRegexPatternSet",
        "CreateRule",
        "CreateRuleGroup",
        "CreateSizeConstraintSet",
        "CreateSqlInjectionMatchSet",
        "CreateWebACL",
        "CreateWebACLMigrationStack",
        "CreateXssMatchSet",
        "DeleteByteMatchSet",
        "DeleteGeoMatchSet",
        "DeleteIPSet",
        "DeleteLoggingConfiguration",
        "DeletePermissionPolicy",
        "DeleteRateBasedRule",
        "DeleteRegexMatchSet",
        "DeleteRegexPatternSet",
        "DeleteRule",
        "DeleteRuleGroup",
        "DeleteSizeConstraintSet",
        "DeleteSqlInjectionMatchSet",
        "DeleteWebACL",
        "DeleteXssMatchSet",
        "GetByteMatchSet",
        "GetChangeToken",
        "GetChangeTokenStatus",
        "GetGeoMatchSet",
        "GetIPSet",
        "GetLoggingConfiguration",
        "GetPermissionPolicy",
        "GetRateBasedRule",
        "GetRateBasedRuleManagedKeys",
        "GetRegexMatchSet",
        "GetRegexPatternSet",
        "GetRule",
        "GetRuleGroup",
        "GetSampledRequests",
        "GetSizeConstraintSet",
        "GetSqlInjectionMatchSet",
        "GetWebACL",
        "GetXssMatchSet",
        "ListActivatedRulesInRuleGroup",
        "ListByteMatchSets",
        "ListGeoMatchSets",
        "ListIPSets",
        "ListLoggingConfigurations",
        "ListRateBasedRules",
        "ListRegexMatchSets",
        "ListRegexPatternSets",
        "ListRuleGroups",
        "ListRules",
        "ListSizeConstraintSets",
        "ListSqlInjectionMatchSets",
        "ListSubscribedRuleGroups",
        "ListTagsForResource",
        "ListWebACLs",
        "ListXssMatchSets",
        "PutLoggingConfiguration",
        "PutPermissionPolicy",
        "TagResource",
        "UntagResource",
        "UpdateByteMatchSet",
        "UpdateGeoMatchSet",
        "UpdateIPSet",
        "UpdateRateBasedRule",
        "UpdateRegexMatchSet",
        "UpdateRegexPatternSet",
        "UpdateRule",
        "UpdateRuleGroup",
        "UpdateSizeConstraintSet",
        "UpdateSqlInjectionMatchSet",
        "UpdateWebACL",
        "UpdateXssMatchSet"
      ],
      "HasResource": true,
      "StringPrefix": "waf",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS WAF Regional": {
      "ARNFormat": "arn:aws:waf-regional:<region>:<account_ID>:<resource>/<resource_id>",
      "ARNRegex": "^arn:aws:waf-regional:.+:[0-9]+:.+/.+",
      "Actions": [
        "AssociateWebACL",
        "CreateByteMatchSet",
        "CreateGeoMatchSet",
        "CreateIPSet",
        "CreateRateBasedRule",
        "CreateRegexMatchSet",
        "CreateRegexPatternSet",
        "CreateRule",
        "CreateRuleGroup",
        "CreateSizeConstraintSet",
        "CreateSqlInjectionMatchSet",
        "CreateWebACL",
        "CreateWebACLMigrationStack",
        "CreateXssMatchSet",
        "DeleteByteMatchSet",
        "DeleteGeoMatchSet",
        "DeleteIPSet",
        "DeleteLoggingConfiguration",
        "DeletePermissionPolicy",
        "DeleteRateBasedRule",
        "DeleteRegexMatchSet",
        "DeleteRegexPatternSet",
        "DeleteRule",
        "DeleteRuleGroup",
        "DeleteSizeConstraintSet",
        "DeleteSqlInjectionMatchSet",
        "DeleteWebACL",
        "DeleteXssMatchSet",
        "DisassociateWebACL",
        "GetByteMatchSet",
        "GetChangeToken",
        "GetChangeTokenStatus",
        "GetGeoMatchSet",
        "GetIPSet",
        "GetLoggingConfiguration",
        "GetPermissionPolicy",
        "GetRateBasedRule",
        "GetRateBasedRuleManagedKeys",
        "GetRegexMatchSet",
        "GetRegexPatternSet",
        "GetRule",
        "GetRuleGroup",
        "GetSampledRequests",
        "GetSizeConstraintSet",
        "GetSqlInjectionMatchSet",
        "GetWebACL",
        "GetWebACLForResource",
        "GetXssMatchSet",
        "ListActivatedRulesInRuleGroup",
        "ListByteMatchSets",
        "ListGeoMatchSets",
        "ListIPSets",
        "ListLoggingConfigurations",
        "ListRateBasedRules",
        "ListRegexMatchSets",
        "ListRegexPatternSets",
        "ListResourcesForWebACL",
        "ListRuleGroups",
        "ListRules",
        "ListSizeConstraintSets",
        "ListSqlInjectionMatchSets",
        "ListSubscribedRuleGroups",
        "ListTagsForResource",
        "ListWebACLs",
        "ListXssMatchSets",
        "PutLoggingConfiguration",
        "PutPermissionPolicy",
        "TagResource",
        "UntagResource",
        "UpdateByteMatchSet",
        "UpdateGeoMatchSet",
        "UpdateIPSet",
        "UpdateRateBasedRule",
        "UpdateRegexMatchSet",
        "UpdateRegexPatternSet",
        "UpdateRule",
        "UpdateRuleGroup",
        "UpdateSizeConstraintSet",
        "UpdateSqlInjectionMatchSet",
        "UpdateWebACL",
        "UpdateXssMatchSet"
      ],
      "HasResource": true,
      "StringPrefix": "waf-regional",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS WAF V2": {
      "ARNFormat": "arn:aws:wafv2:<region>:<account-id>:<scope>/<resource-type>/<resource-name>/<resource-id>",
      "ARNRegex": "^arn:aws:wafv2:.+:[0-9]+:.+/.+/.+/.+",
      "Actions": [
        "AssociateWebACL",
        "CheckCapacity",
        "CreateIPSet",
        "CreateRegexPatternSet",
        "CreateRuleGroup",
        "CreateWebACL",
        "DeleteFirewallManagerRuleGroups",
        "DeleteIPSet",
        "DeleteLoggingConfiguration",
        "DeletePermissionPolicy",
        "DeleteRegexPatternSet",
        "DeleteRuleGroup",
        "DeleteWebACL",
        "DescribeManagedRuleGroup",
        "DisassociateWebACL",
        "GetIPSet",
        "GetLoggingConfiguration",
        "GetPermissionPolicy",
        "GetRateBasedStatementManagedKeys",
        "GetRegexPatternSet",
        "GetRuleGroup",
        "GetSampledRequests",
        "GetWebACL",
        "GetWebACLForResource",
        "ListAvailableManagedRuleGroups",
        "ListIPSets",
        "ListLoggingConfigurations",
        "ListRegexPatternSets",
        "ListResourcesForWebACL",
        "ListRuleGroups",
        "ListTagsForResource",
        "ListWebACLs",
        "PutLoggingConfiguration",
        "PutPermissionPolicy",
        "TagResource",
        "UntagResource",
        "UpdateIPSet",
        "UpdateRegexPatternSet",
        "UpdateRuleGroup",
        "UpdateWebACL"
      ],
      "HasResource": true,
      "StringPrefix": "wafv2",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "AWS Well-Architected Tool": {
      "ARNFormat": "arn:aws:wellarchitected:<region>:<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:${Partition}:wellarchitected:.+",
      "Actions": [
        "CreateWorkload",
        "CreateWorkloadShare",
        "DeleteWorkload",
        "GetWorkload",
        "ListWorkloads"
      ],
      "HasResource": true,
      "StringPrefix": "wellarchitected"
    },
    "AWS X-Ray": {
      "ARNFormat": "arn:${Partition}:xray:${Region}:${Account}:${ResourceType}/${ResourceId}",
      "ARNRegex": "^arn:${Partition}:xray:.+",
      "Actions": [
        "BatchGetTraces",
        "CreateGroup",
        "CreateSamplingRule",
        "DeleteGroup",
        "DeleteSamplingRule",
        "GetEncryptionConfig",
        "GetGroup",
        "GetGroups",
        "GetSamplingRules",
        "GetSamplingStatisticSummaries",
        "GetSamplingTargets",
        "GetServiceGraph",
        "GetTimeSeriesServiceStatistics",
        "GetTraceGraph",
        "GetTraceSummaries",
        "PutEncryptionConfig",
        "PutTelemetryRecords",
        "PutTraceSegments",
        "UpdateGroup",
        "UpdateSamplingRule"
      ],
      "HasResource": true,
      "StringPrefix": "xray"
    },
    "Alexa for Business": {
      "ARNFormat": "arn:aws:a4b:<region>:<account-id>:<resource-type>/<resource_id>",
      "ARNRegex": "^arn:aws:a4b:.+:.+:.+",
      "Actions": [
        "ApproveSkill",
        "AssociateContactWithAddressBook",
        "AssociateDeviceWithRoom",
        "AssociateSkillGroupWithRoom",
        "AssociateSkillWithSkillGroup",
        "AssociateSkillWithUsers",
        "CompleteRegistration",
        "CreateAddressBook",
        "CreateBusinessReportSchedule",
        "CreateConferenceProvider",
        "CreateContact",
        "CreateProfile",
        "CreateRoom",
        "CreateSkillGroup",
        "CreateUser",
        "DeleteAddressBook",
        "DeleteBusinessReportSchedule",
        "DeleteConferenceProvider",
        "DeleteContact",
        "DeleteDevice",
        "DeleteProfile",
        "DeleteRoom",
        "DeleteRoomSkillParameter",
        "DeleteSkillAuthorization",
        "DeleteSkillGroup",
        "DeleteUser",
        "DisassociateContactFromAddressBook",
        "DisassociateDeviceFromRoom",
        "DisassociateSkillFromSkillGroup",
        "DisassociateSkillFromUsers",
        "DisassociateSkillGroupFromRoom",
        "ForgetSmartHomeAppliances",
        "GetAddressBook",
        "GetConferencePreference",
        "GetConferenceProvider",
        "GetContact",
        "GetDevice",
        "GetNetworkProfile",
        "GetProfile",
        "GetRoom",
        "GetRoomSkillParameter",
        "GetSkillGroup",
        "ListBusinessReportSchedules",
        "ListConferenceProviders",
        "ListDeviceEvents",
        "ListSkills",
        "ListSkillsStoreCategories",
        "ListSkillsStoreSkillsByCategory",
        "ListSmartHomeAppliances",
        "ListTags",
        "PutConferencePreference",
        "PutDeviceSetupEvents",
        "PutRoomSkillParameter",
        "PutSkillAuthorization",
        "RegisterAVSDevice",
        "RegisterDevice",
        "RejectSkill",
        "ResolveRoom",
        "RevokeInvitation",
        "SearchAddressBooks",
        "SearchContacts",
        "SearchDevices",
        "SearchNetworkProfiles",
        "SearchProfiles",
        "SearchRooms",
        "SearchSkillGroups",
        "SearchUsers",
        "SendInvitation",
        "StartDeviceSync",
        "StartSmartHomeApplianceDiscovery",
        "TagResource",
        "UntagResource",
        "UpdateAddressBook",
        "UpdateBusinessReportSchedule",
        "UpdateConferenceProvider",
        "UpdateContact",
        "UpdateDevice",
        "UpdateProfile",
        "UpdateRoom",
        "UpdateSkillGroup"
      ],
      "HasResource": true,
      "StringPrefix": "a4b",
      "conditionKeys": [
        "a4b:amazonId",
        "a4b:filters_deviceType",
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon API Gateway": {
      "ARNFormat": "arn:aws:execute-api:<region>:<account_id>:<api_id>/<stage>/<method>/<api_specific_resource_path>",
      "ARNRegex": "^arn:aws:execute-api:.+",
      "Actions": [
        "InvalidateCache",
        "Invoke",
        "ManageConnections"
      ],
      "HasResource": true,
      "StringPrefix": "execute-api"
    },
    "Amazon AppFlow": {
      "ARNFormat": "arn:aws:appflow:<region>:<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:appflow:.+:.+:.+",
      "Actions": [
        "CreateConnectorProfile",
        "CreateFlow",
        "DeleteConnectorProfile",
        "DeleteFlow",
        "DescribeConnectorFields",
        "DescribeConnectorProfiles",
        "DescribeConnectors",
        "DescribeFlowExecution",
        "DescribeFlows",
        "ListConnectorFields",
        "ListTagsForResource",
        "RunFlow",
        "TagResource",
        "UntagResource",
        "UpdateFlow"
      ],
      "HasResource": true,
      "StringPrefix": "appflow",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon AppStream 2.0": {
      "ARNFormat": "arn:aws:appstream:<region>:<account>:<resourceType>/<resourcePath>",
      "ARNRegex": "^arn:aws:appstream:.+",
      "Actions": [
        "AssociateFleet",
        "BatchAssociateUserStack",
        "BatchDisassociateUserStack",
        "CopyImage",
        "CreateDirectoryConfig",
        "CreateFleet",
        "CreateImageBuilder",
        "CreateImageBuilderStreamingURL",
        "CreateStack",
        "CreateStreamingURL",
        "CreateUsageReportSubscription",
        "CreateUser",
        "DeleteDirectoryConfig",
        "DeleteFleet",
        "DeleteImage",
        "DeleteImageBuilder",
        "DeleteImagePermissions",
        "DeleteStack",
        "DeleteUsageReportSubscription",
        "DeleteUser",
        "DescribeDirectoryConfigs",
        "DescribeFleets",
        "DescribeImageBuilders",
        "DescribeImagePermissions",
        "DescribeImages",
        "DescribeSessions",
        "DescribeStacks",
        "DescribeUsageReportSubscriptions",
        "DescribeUserStackAssociations",
        "DescribeUsers",
        "DisableUser",
        "DisassociateFleet",
        "EnableUser",
        "ExpireSession",
        "GetImageBuilders",
        "GetParametersForThemeAssetUpload",
        "ListAssociatedFleets",
        "ListAssociatedStacks",
        "ListTagsForResource",
        "StartFleet",
        "StartImageBuilder",
        "StopFleet",
        "StopImageBuilder",
        "Stream",
        "TagResource",
        "UntagResource",
        "UpdateDirectoryConfig",
        "UpdateFleet",
        "UpdateImagePermissions",
        "UpdateStack"
      ],
      "HasResource": true,
      "StringPrefix": "appstream",
      "conditionKeys": [
        "appstream:userId",
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon Athena": {
      "ARNFormat": "arn:${Partition}:athena:${Region}:${Account}:${resourceType}/${resourcePath}",
      "ARNRegex": "^arn:${Partition}:athena:.+",
      "Actions": [
        "BatchGetNamedQuery",
        "BatchGetQueryExecution",
        "CreateDataCatalog",
        "CreateNamedQuery",
        "CreateWorkGroup",
        "DeleteDataCatalog",
        "DeleteNamedQuery",
        "DeleteWorkGroup",
        "GetDataCatalog",
        "GetDatabase",
        "GetNamedQuery",
        "GetQueryExecution",
        "GetQueryResults",
        "GetQueryResultsStream",
        "GetTableMetadata",
        "GetWorkGroup",
        "ListDataCatalogs",
        "ListDatabases",
        "ListNamedQueries",
        "ListQueryExecutions",
        "ListTableMetadata",
        "ListTagsForResource",
        "ListWorkGroups",
        "StartQueryExecution",
        "StopQueryExecution",
        "TagResource",
        "UntagResource",
        "UpdateDataCatalog",
        "UpdateWorkGroup"
      ],
      "HasResource": true,
      "StringPrefix": "athena",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon Chime": {
      "ARNFormat": "arn:aws:chime::<accountId>:<resourceType>/<resourceId>",
      "ARNRegex": "^arn:aws:chime:.+",
      "Actions": [
        "AcceptDelegate",
        "ActivateUsers",
        "AddDomain",
        "AddOrUpdateGroups",
        "AssociatePhoneNumberWithUser",
        "AssociatePhoneNumbersWithVoiceConnector",
        "AssociatePhoneNumbersWithVoiceConnectorGroup",
        "AssociateSigninDelegateGroupsWithAccount",
        "AuthorizeDirectory",
        "BatchCreateAttendee",
        "BatchCreateRoomMembership",
        "BatchDeletePhoneNumber",
        "BatchSuspendUser",
        "BatchUnsuspendUser",
        "BatchUpdatePhoneNumber",
        "BatchUpdateUser",
        "ConnectDirectory",
        "CreateAccount",
        "CreateApiKey",
        "CreateAttendee",
        "CreateBot",
        "CreateBotMembership",
        "CreateCDRBucket",
        "CreateMeeting",
        "CreatePhoneNumberOrder",
        "CreateProxySession",
        "CreateRoom",
        "CreateRoomMembership",
        "CreateUser",
        "CreateVoiceConnector",
        "CreateVoiceConnectorGroup",
        "DeleteAccount",
        "DeleteAccountOpenIdConfig",
        "DeleteApiKey",
        "DeleteAttendee",
        "DeleteCDRBucket",
        "DeleteDelegate",
        "DeleteDomain",
        "DeleteEventsConfiguration",
        "DeleteGroups",
        "DeleteMeeting",
        "DeletePhoneNumber",
        "DeleteProxySession",
        "DeleteRoom",
        "DeleteRoomMembership",
        "DeleteVoiceConnector",
        "DeleteVoiceConnectorGroup",
        "DeleteVoiceConnectorOrigination",
        "DeleteVoiceConnectorProxy",
        "DeleteVoiceConnectorStreamingConfiguration",
        "DeleteVoiceConnectorTermination",
        "DeleteVoiceConnectorTerminationCredentials",
        "DisassociatePhoneNumberFromUser",
        "DisassociatePhoneNumbersFromVoiceConnector",
        "DisassociatePhoneNumbersFromVoiceConnectorGroup",
        "DisassociateSigninDelegateGroupsFromAccount",
        "DisconnectDirectory",
        "GetAccount",
        "GetAccountResource",
        "GetAccountSettings",
        "GetAccountWithOpenIdConfig",
        "GetAttendee",
        "GetBot",
        "GetCDRBucket",
        "GetDomain",
        "GetEventsConfiguration",
        "GetGlobalSettings",
        "GetMeeting",
        "GetMeetingDetail",
        "GetPhoneNumber",
        "GetPhoneNumberOrder",
        "GetPhoneNumberSettings",
        "GetProxySession",
        "GetRetentionSettings",
        "GetRoom",
        "GetTelephonyLimits",
        "GetUser",
        "GetUserActivityReportData",
        "GetUserByEmail",
        "GetUserSettings",
        "GetVoiceConnector",
        "GetVoiceConnectorGroup",
        "GetVoiceConnectorLoggingConfiguration",
        "GetVoiceConnectorOrigination",
        "GetVoiceConnectorProxy",
        "GetVoiceConnectorStreamingConfiguration",
        "GetVoiceConnectorTermination",
        "GetVoiceConnectorTerminationHealth",
        "InviteDelegate",
        "InviteUsers",
        "InviteUsersFromProvider",
        "ListAccountUsageReportData",
        "ListAccounts",
        "ListApiKeys",
        "ListAttendeeTags",
        "ListAttendees",
        "ListBots",
        "ListCDRBucket",
        "ListCallingRegions",
        "ListDelegates",
        "ListDirectories",
        "ListDomains",
        "ListGroups",
        "ListMeetingEvents",
        "ListMeetingTags",
        "ListMeetings",
        "ListMeetingsReportData",
        "ListPhoneNumberOrders",
        "ListPhoneNumbers",
        "ListProxySessions",
        "ListRoomMemberships",
        "ListRooms",
        "ListTagsForResource",
        "ListUsers",
        "ListVoiceConnectorGroups",
        "ListVoiceConnectorTerminationCredentials",
        "ListVoiceConnectors",
        "LogoutUser",
        "PutEventsConfiguration",
        "PutRetentionSettings",
        "PutVoiceConnectorLoggingConfiguration",
        "PutVoiceConnectorOrigination",
        "PutVoiceConnectorProxy",
        "PutVoiceConnectorStreamingConfiguration",
        "PutVoiceConnectorTermination",
        "PutVoiceConnectorTerminationCredentials",
        "RedactConversationMessage",
        "RedactRoomMessage",
        "RegenerateSecurityToken",
        "RenameAccount",
        "RenewDelegate",
        "ResetAccountResource",
        "ResetPersonalPIN",
        "RestorePhoneNumber",
        "RetrieveDataExports",
        "SearchAvailablePhoneNumbers",
        "StartDataExport",
        "SubmitSupportRequest",
        "SuspendUsers",
        "TagAttendee",
        "TagMeeting",
        "TagResource",
        "UnauthorizeDirectory",
        "UntagAttendee",
        "UntagMeeting",
        "UntagResource",
        "UpdateAccount",
        "UpdateAccountOpenIdConfig",
        "UpdateAccountResource",
        "UpdateAccountSettings",
        "UpdateBot",
        "UpdateCDRSettings",
        "UpdateGlobalSettings",
        "UpdatePhoneNumber",
        "UpdatePhoneNumberSettings",
        "UpdateProxySession",
        "UpdateRoom",
        "UpdateRoomMembership",
        "UpdateSupportedLicenses",
        "UpdateUser",
        "UpdateUserLicenses",
        "UpdateUserSettings",
        "UpdateVoiceConnector",
        "UpdateVoiceConnectorGroup",
        "ValidateAccountResource"
      ],
      "HasResource": true,
      "StringPrefix": "chime",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon Cloud Directory": {
      "ARNFormat": "arn:aws:clouddirectory:<region>:<accountId>:<relative-id>",
      "ARNRegex": "^arn:${Partition}:clouddirectory:.+:[0-9]+:(directory|schema)/.+",
      "Actions": [
        "AddFacetToObject",
        "ApplySchema",
        "AttachObject",
        "AttachPolicy",
        "AttachToIndex",
        "AttachTypedLink",
        "BatchRead",
        "BatchWrite",
        "CreateDirectory",
        "CreateFacet",
        "CreateIndex",
        "CreateObject",
        "CreateSchema",
        "CreateTypedLinkFacet",
        "DeleteDirectory",
        "DeleteFacet",
        "DeleteObject",
        "DeleteSchema",
        "DeleteTypedLinkFacet",
        "DetachFromIndex",
        "DetachObject",
        "DetachPolicy",
        "DetachTypedLink",
        "DisableDirectory",
        "EnableDirectory",
        "GetDirectory",
        "GetFacet",
        "GetLinkAttributes",
        "GetObjectAttributes",
        "GetObjectInformation",
        "GetSchemaAsJson",
        "GetTypedLinkFacetInformation",
        "ListAppliedSchemaArns",
        "ListAttachedIndices",
        "ListDevelopmentSchemaArns",
        "ListDirectories",
        "ListFacetAttributes",
        "ListFacetNames",
        "ListIncomingTypedLinks",
        "ListIndex",
        "ListObjectAttributes",
        "ListObjectChildren",
        "ListObjectParentPaths",
        "ListObjectParents",
        "ListObjectPolicies",
        "ListOutgoingTypedLinks",
        "ListPolicyAttachments",
        "ListPublishedSchemaArns",
        "ListTagsForResource",
        "ListTypedLinkFacetAttributes",
        "ListTypedLinkFacetNames",
        "LookupPolicy",
        "PublishSchema",
        "PutSchemaFromJson",
        "RemoveFacetFromObject",
        "TagResource",
        "UntagResource",
        "UpdateFacet",
        "UpdateLinkAttributes",
        "UpdateObjectAttributes",
        "UpdateSchema",
        "UpdateTypedLinkFacet"
      ],
      "HasResource": true,
      "StringPrefix": "clouddirectory"
    },
    "Amazon CloudFront": {
      "ARNFormat": "arn:${Partition}:cloudfront::<accountID>:<resource_type>/<resource_id>",
      "ARNRegex": "^arn:${Partition}:cloudfront::[0-9]+:.+",
      "Actions": [
        "CreateCloudFrontOriginAccessIdentity",
        "CreateDistribution",
        "CreateDistributionWithTags",
        "CreateFieldLevelEncryptionConfig",
        "CreateFieldLevelEncryptionProfile",
        "CreateInvalidation",
        "CreatePublicKey",
        "CreateStreamingDistribution",
        "CreateStreamingDistributionWithTags",
        "DeleteCloudFrontOriginAccessIdentity",
        "DeleteDistribution",
        "DeleteFieldLevelEncryptionConfig",
        "DeleteFieldLevelEncryptionProfile",
        "DeletePublicKey",
        "DeleteStreamingDistribution",
        "GetCloudFrontOriginAccessIdentity",
        "GetCloudFrontOriginAccessIdentityConfig",
        "GetDistribution",
        "GetDistributionConfig",
        "GetFieldLevelEncryption",
        "GetFieldLevelEncryptionConfig",
        "GetFieldLevelEncryptionProfile",
        "GetFieldLevelEncryptionProfileConfig",
        "GetInvalidation",
        "GetPublicKey",
        "GetPublicKeyConfig",
        "GetStreamingDistribution",
        "GetStreamingDistributionConfig",
        "ListCloudFrontOriginAccessIdentities",
        "ListDistributions",
        "ListDistributionsByLambdaFunction",
        "ListDistributionsByWebACLId",
        "ListFieldLevelEncryptionConfigs",
        "ListFieldLevelEncryptionProfiles",
        "ListInvalidations",
        "ListPublicKeys",
        "ListStreamingDistributions",
        "ListTagsForResource",
        "TagResource",
        "UntagResource",
        "UpdateCloudFrontOriginAccessIdentity",
        "UpdateDistribution",
        "UpdateFieldLevelEncryptionConfig",
        "UpdateFieldLevelEncryptionProfile",
        "UpdatePublicKey",
        "UpdateStreamingDistribution"
      ],
      "HasResource": true,
      "StringPrefix": "cloudfront",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon CloudSearch": {
      "ARNFormat": "arn:aws:cloudsearch:<region>:<account>:<resourceType>/<resourceName>",
      "ARNRegex": "^arn:aws:cloudsearch:.+:.+:.+",
      "Actions": [
        "AddTags",
        "BuildSuggesters",
        "CreateDomain",
        "DefineAnalysisScheme",
        "DefineExpression",
        "DefineIndexField",
        "DefineSuggester",
        "DeleteAnalysisScheme",
        "DeleteDomain",
        "DeleteExpression",
        "DeleteIndexField",
        "DeleteSuggester",
        "DescribeAnalysisSchemes",
        "DescribeAvailabilityOptions",
        "DescribeDomainEndpointOptions",
        "DescribeDomains",
        "DescribeExpressions",
        "DescribeIndexFields",
        "DescribeScalingParameters",
        "DescribeServiceAccessPolicies",
        "DescribeSuggesters",
        "IndexDocuments",
        "ListDomainNames",
        "ListTags",
        "RemoveTags",
        "UpdateAvailabilityOptions",
        "UpdateDomainEndpointOptions",
        "UpdateScalingParameters",
        "UpdateServiceAccessPolicies",
        "document",
        "search",
        "suggest"
      ],
      "HasResource": true,
      "StringPrefix": "cloudsearch"
    },
    "Amazon CloudWatch": {
      "ARNFormat": "arn:${Partition}:cloudwatch:${Region}:${Account}:${ResourceType}/${ResourcePath}",
      "ARNRegex": "^arn:${Partition}:cloudwatch:.+",
      "Actions": [
        "DeleteAlarms",
        "DeleteAnomalyDetector",
        "DeleteDashboards",
        "DeleteInsightRules",
        "DescribeAlarmHistory",
        "DescribeAlarms",
        "DescribeAlarmsForMetric",
        "DescribeAnomalyDetectors",
        "DescribeInsightRules",
        "DisableAlarmActions",
        "DisableInsightRules",
        "EnableAlarmActions",
        "EnableInsightRules",
        "GetDashboard",
        "GetInsightRuleReport",
        "GetMetricData",
        "GetMetricStatistics",
        "GetMetricWidgetImage",
        "ListDashboards",
        "ListMetrics",
        "ListTagsForResource",
        "PutAnomalyDetector",
        "PutDashboard",
        "PutInsightRule",
        "PutMetricAlarm",
        "PutMetricData",
        "SetAlarmState",
        "TagResource",
        "UntagResource"
      ],
      "HasResource": true,
      "StringPrefix": "cloudwatch",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "cloudwatch:namespace"
      ]
    },
    "Amazon CloudWatch Logs": {
      "ARNFormat": "arn:aws:logs:.+:.+:.+",
      "ARNRegex": "^arn:aws:logs:.+",
      "Actions": [
        "AssociateKmsKey",
        "CancelExportTask",
        "CreateExportTask",
        "CreateLogDelivery",
        "CreateLogGroup",
        "CreateLogStream",
        "DeleteDestination",
        "DeleteLogDelivery",
        "DeleteLogGroup",
        "DeleteLogStream",
        "DeleteMetricFilter",
        "DeleteResourcePolicy",
        "DeleteRetentionPolicy",
        "DeleteSubscriptionFilter",
        "DescribeDestinations",
        "DescribeExportTasks",
        "DescribeLogGroups",
        "DescribeLogStreams",
        "DescribeMetricFilters",
        "DescribeQueries",
        "DescribeResourcePolicies",
        "DescribeSubscriptionFilters",
        "DisassociateKmsKey",
        "FilterLogEvents",
        "GetLogDelivery",
        "GetLogEvents",
        "GetLogGroupFields",
        "GetLogRecord",
        "GetQueryResults",
        "ListLogDeliveries",
        "ListTagsLogGroup",
        "PutDestination",
        "PutDestinationPolicy",
        "PutLogEvents",
        "PutMetricFilter",
        "PutResourcePolicy",
        "PutRetentionPolicy",
        "PutSubscriptionFilter",
        "StartQuery",
        "StopQuery",
        "TagLogGroup",
        "TestMetricFilter",
        "UntagLogGroup",
        "UpdateLogDelivery"
      ],
      "HasResource": true,
      "StringPrefix": "logs"
    },
    "Amazon CloudWatch Synthetics": {
      "ARNFormat": "arn:aws:synthetics:<region>:<account-id>:<resource-type>:<resource_name>",
      "ARNRegex": "^arn:aws:synthetics:.+",
      "Actions": [
        "CreateCanary",
        "DeleteCanary",
        "DescribeCanaries",
        "DescribeCanariesLastRun",
        "GetCanaryRuns",
        "ListTagsForResource",
        "StartCanary",
        "StopCanary",
        "TagResource",
        "UntagResource",
        "UpdateCanary"
      ],
      "HasResource": true,
      "StringPrefix": "synthetics"
    },
    "Amazon CodeGuru": {
      "ARNFormat": "arn:aws:codeguru:<region>:<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:codeguru:.+:.+:.+",
      "Actions": [
        "GetCodeGuruFreeTrialSummary"
      ],
      "HasResource": false,
      "StringPrefix": "codeguru"
    },
    "Amazon CodeGuru Profiler": {
      "ARNFormat": "arn:aws:codeguru-profiler:<region>:<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:codeguru-profiler:.+:.+:.+",
      "Actions": [
        "ConfigureAgent",
        "CreateProfilingGroup",
        "DeleteProfilingGroup",
        "DescribeProfilingGroup",
        "GetFindingsReport",
        "GetFindingsReportAccountSummary",
        "GetPolicy",
        "GetProfile",
        "GetRecommendations",
        "ListFindingsReports",
        "ListProfileTimes",
        "ListProfilingGroups",
        "PostAgentProfile",
        "PutPermission",
        "RemovePermission",
        "UpdateProfilingGroup"
      ],
      "HasResource": true,
      "StringPrefix": "codeguru-profiler"
    },
    "Amazon CodeGuru Reviewer": {
      "ARNFormat": "arn:aws:codeguru-reviewer:<region>:<account-id>:<resource-type>:<resource_name>",
      "ARNRegex": "^arn:aws:codeguru-reviewer:.+:.+:.+",
      "Actions": [
        "AssociateRepository",
        "CreateConnectionToken",
        "DescribeCodeReview",
        "DescribeRecommendationFeedback",
        "DescribeRepositoryAssociation",
        "DisassociateRepository",
        "GetMetricsData",
        "ListCodeReviews",
        "ListRecommendationFeedback",
        "ListRecommendations",
        "ListRepositoryAssociations",
        "ListThirdPartyRepositories",
        "PutRecommendationFeedback"
      ],
      "HasResource": true,
      "StringPrefix": "codeguru-reviewer",
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}"
      ]
    },
    "Amazon Cognito Identity": {
      "ARNFormat": "arn:aws:cognito-identity:<region>:<account>:<resourceType>/<resourcePath>",
      "ARNRegex": "^arn:aws:cognito-identity:.+",
      "Actions": [
        "CreateIdentityPool",
        "DeleteIdentities",
        "DeleteIdentityPool",
        "DescribeIdentity",
        "DescribeIdentityPool",
        "GetCredentialsForIdentity",
        "GetId",
        "GetIdentityPoolRoles",
        "GetOpenIdToken",
        "GetOpenIdTokenForDeveloperIdentity",
        "ListIdentities",
        "ListIdentityPools",
        "ListTagsForResource",
        "LookupDeveloperIdentity",
        "MergeDeveloperIdentities",
        "SetIdentityPoolRoles",
        "TagResource",
        "UnlinkDeveloperIdentity",
        "UnlinkIdentity",
        "UntagResource",
        "UpdateIdentityPool"
      ],
      "HasResource": true,
      "StringPrefix": "cognito-identity",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon Cognito Sync": {
      "ARNFormat": "arn:aws:cognito-sync:<region>:<account>:<resourceType>/<resourcePath>:",
      "ARNRegex": "^arn:aws:cognito-sync:.+",
      "Actions": [
        "BulkPublish",
        "DeleteDataset",
        "DescribeDataset",
        "DescribeIdentityPoolUsage",
        "DescribeIdentityUsage",
        "GetBulkPublishDetails",
        "GetCognitoEvents",
        "GetIdentityPoolConfiguration",
        "ListDatasets",
        "ListIdentityPoolUsage",
        "ListRecords",
        "QueryRecords",
        "RegisterDevice",
        "SetCognitoEvents",
        "SetDatasetConfiguration",
        "SetIdentityPoolConfiguration",
        "SubscribeToDataset",
        "UnsubscribeFromDataset",
        "UpdateRecords"
      ],
      "HasResource": true,
      "StringPrefix": "cognito-sync"
    },
    "Amazon Cognito User Pools": {
      "ARNFormat": "arn:aws:cognito-idp:<region>:<account>:<resourceType>/<resourcePath>:",
      "ARNRegex": "^arn:aws:cognito-idp:.+",
      "Actions": [
        "AddCustomAttributes",
        "AdminAddUserToGroup",
        "AdminConfirmSignUp",
        "AdminCreateUser",
        "AdminDeleteUser",
        "AdminDeleteUserAttributes",
        "AdminDisableProviderForUser",
        "AdminDisableUser",
        "AdminEnableUser",
        "AdminForgetDevice",
        "AdminGetDevice",
        "AdminGetUser",
        "AdminInitiateAuth",
        "AdminLinkProviderForUser",
        "AdminListDevices",
        "AdminListGroupsForUser",
        "AdminListUserAuthEvents",
        "AdminRemoveUserFromGroup",
        "AdminResetUserPassword",
        "AdminRespondToAuthChallenge",
        "AdminSetUserMFAPreference",
        "AdminSetUserPassword",
        "AdminSetUserSettings",
        "AdminUpdateAuthEventFeedback",
        "AdminUpdateDeviceStatus",
        "AdminUpdateUserAttributes",
        "AdminUserGlobalSignOut",
        "AssociateSoftwareToken",
        "ChangePassword",
        "ConfirmDevice",
        "ConfirmForgotPassword",
        "ConfirmSignUp",
        "CreateGroup",
        "CreateIdentityProvider",
        "CreateResourceServer",
        "CreateUserImportJob",
        "CreateUserPool",
        "CreateUserPoolClient",
        "CreateUserPoolDomain",
        "DeleteGroup",
        "DeleteIdentityProvider",
        "DeleteResourceServer",
        "DeleteUser",
        "DeleteUserAttributes",
        "DeleteUserPool",
        "DeleteUserPoolClient",
        "DeleteUserPoolDomain",
        "DescribeIdentityProvider",
        "DescribeResourceServer",
        "DescribeRiskConfiguration",
        "DescribeUserImportJob",
        "DescribeUserPool",
        "DescribeUserPoolClient",
        "DescribeUserPoolDomain",
        "ForgetDevice",
        "ForgotPassword",
        "GetCSVHeader",
        "GetDevice",
        "GetGroup",
        "GetIdentityProviderByIdentifier",
        "GetSigningCertificate",
        "GetUICustomization",
        "GetUser",
        "GetUserAttributeVerificationCode",
        "GetUserPoolMfaConfig",
        "GlobalSignOut",
        "InitiateAuth",
        "ListDevices",
        "ListGroups",
        "ListIdentityProviders",
        "ListResourceServers",
        "ListTagsForResource",
        "ListUserImportJobs",
        "ListUserPoolClients",
        "ListUserPools",
        "ListUsers",
        "ListUsersInGroup",
        "ResendConfirmationCode",
        "RespondToAuthChallenge",
        "SetRiskConfiguration",
        "SetUICustomization",
        "SetUserMFAPreference",
        "SetUserPoolMfaConfig",
        "SetUserSettings",
        "SignUp",
        "StartUserImportJob",
        "StopUserImportJob",
        "TagResource",
        "UntagResource",
        "UpdateAuthEventFeedback",
        "UpdateDeviceStatus",
        "UpdateGroup",
        "UpdateIdentityProvider",
        "UpdateResourceServer",
        "UpdateUserAttributes",
        "UpdateUserPool",
        "UpdateUserPoolClient",
        "UpdateUserPoolDomain",
        "VerifySoftwareToken",
        "VerifyUserAttribute"
      ],
      "HasResource": true,
      "StringPrefix": "cognito-idp",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon Comprehend": {
      "ARNFormat": "arn:${Partition}:comprehend:${Region}:${AccountId}:${ResourceType}/${ResourceName}",
      "ARNRegex": "^arn:${Partition}:comprehend:.+:.+:.+",
      "Actions": [
        "BatchDetectDominantLanguage",
        "BatchDetectEntities",
        "BatchDetectKeyPhrases",
        "BatchDetectSentiment",
        "BatchDetectSyntax",
        "ClassifyDocument",
        "CreateDocumentClassifier",
        "CreateEndpoint",
        "CreateEntityRecognizer",
        "DeleteDocumentClassifier",
        "DeleteEndpoint",
        "DeleteEntityRecognizer",
        "DescribeDocumentClassificationJob",
        "DescribeDocumentClassifier",
        "DescribeDominantLanguageDetectionJob",
        "DescribeEndpoint",
        "DescribeEntitiesDetectionJob",
        "DescribeEntityRecognizer",
        "DescribeKeyPhrasesDetectionJob",
        "DescribeSentimentDetectionJob",
        "DescribeTopicsDetectionJob",
        "DetectDominantLanguage",
        "DetectEntities",
        "DetectKeyPhrases",
        "DetectSentiment",
        "DetectSyntax",
        "ListDocumentClassificationJobs",
        "ListDocumentClassifiers",
        "ListDominantLanguageDetectionJobs",
        "ListEndpoints",
        "ListEntitiesDetectionJobs",
        "ListEntityRecognizers",
        "ListKeyPhrasesDetectionJobs",
        "ListSentimentDetectionJobs",
        "ListTagsForResource",
        "ListTopicsDetectionJobs",
        "StartDocumentClassificationJob",
        "StartDominantLanguageDetectionJob",
        "StartEntitiesDetectionJob",
        "StartKeyPhrasesDetectionJob",
        "StartSentimentDetectionJob",
        "StartTopicsDetectionJob",
        "StopDominantLanguageDetectionJob",
        "StopEntitiesDetectionJob",
        "StopKeyPhrasesDetectionJob",
        "StopSentimentDetectionJob",
        "StopTrainingDocumentClassifier",
        "StopTrainingEntityRecognizer",
        "TagResource",
        "UntagResource",
        "UpdateEndpoint"
      ],
      "HasResource": true,
      "StringPrefix": "comprehend",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon Connect": {
      "ARNFormat": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}",
      "ARNRegex": "^arn:${Partition}:connect:.+:.+:instance/.+",
      "Actions": [
        "CreateInstance",
        "CreateUser",
        "DeleteUser",
        "DescribeInstance",
        "DescribeUser",
        "DescribeUserHierarchyGroup",
        "DescribeUserHierarchyStructure",
        "DestroyInstance",
        "GetContactAttributes",
        "GetCurrentMetricData",
        "GetFederationToken",
        "GetFederationTokens",
        "GetMetricData",
        "ListContactFlows",
        "ListHoursOfOperations",
        "ListInstances",
        "ListPhoneNumbers",
        "ListQueues",
        "ListRoutingProfiles",
        "ListSecurityProfiles",
        "ListTagsForResource",
        "ListUserHierarchyGroups",
        "ListUsers",
        "ModifyInstance",
        "StartChatContact",
        "StartOutboundVoiceContact",
        "StopContact",
        "TagResource",
        "UntagResource",
        "UpdateContactAttributes",
        "UpdateUserHierarchy",
        "UpdateUserIdentityInfo",
        "UpdateUserPhoneConfig",
        "UpdateUserRoutingProfile",
        "UpdateUserSecurityProfiles"
      ],
      "HasResource": true,
      "StringPrefix": "connect",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon Data Lifecycle Manager": {
      "ARNFormat": "arn:${Partition}:dlm:<region>:<account-id>:policy/<resource_name>",
      "ARNRegex": "^arn:${Partition}:dlm:.+:.+:.+",
      "Actions": [
        "CreateLifecyclePolicy",
        "DeleteLifecyclePolicy",
        "GetLifecyclePolicies",
        "GetLifecyclePolicy",
        "ListTagsForResource",
        "TagResource",
        "UntagResource",
        "UpdateLifecyclePolicy"
      ],
      "HasResource": true,
      "StringPrefix": "dlm",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon Detective": {
      "ARNFormat": "arn:aws:detective:${Region}:${AccountId}:graph:${GraphId}",
      "ARNRegex": "^arn:aws:detective:.+",
      "Actions": [
        "AcceptInvitation",
        "CreateGraph",
        "CreateMembers",
        "DeleteGraph",
        "DeleteMembers",
        "DisassociateMembership",
        "GetFreeTrialEligibility",
        "GetGraphIngestState",
        "GetMembers",
        "GetPricingInformation",
        "GetUsageInformation",
        "ListGraphs",
        "ListInvitations",
        "ListMembers",
        "RejectInvitation",
        "SearchGraph",
        "StartMonitoringMember"
      ],
      "HasResource": true,
      "StringPrefix": "detective"
    },
    "Amazon DynamoDB": {
      "ARNFormat": "arn:aws:dynamodb:<region>:<accountID>:<resourceType>/<resourcePath>",
      "ARNRegex": "^arn:aws:dynamodb:.+:.+",
      "Actions": [
        "BatchGetItem",
        "BatchWriteItem",
        "ConditionCheckItem",
        "CreateBackup",
        "CreateGlobalTable",
        "CreateTable",
        "CreateTableReplica",
        "DeleteBackup",
        "DeleteItem",
        "DeleteTable",
        "DeleteTableReplica",
        "DescribeBackup",
        "DescribeContinuousBackups",
        "DescribeContributorInsights",
        "DescribeGlobalTable",
        "DescribeGlobalTableSettings",
        "DescribeLimits",
        "DescribeReservedCapacity",
        "DescribeReservedCapacityOfferings",
        "DescribeStream",
        "DescribeTable",
        "DescribeTableReplicaAutoScaling",
        "DescribeTimeToLive",
        "GetItem",
        "GetRecords",
        "GetShardIterator",
        "ListBackups",
        "ListContributorInsights",
        "ListGlobalTables",
        "ListStreams",
        "ListTables",
        "ListTagsOfResource",
        "PurchaseReservedCapacityOfferings",
        "PutItem",
        "Query",
        "RestoreTableFromBackup",
        "RestoreTableToPointInTime",
        "Scan",
        "TagResource",
        "UntagResource",
        "UpdateContinuousBackups",
        "UpdateContributorInsights",
        "UpdateGlobalTable",
        "UpdateGlobalTableSettings",
        "UpdateItem",
        "UpdateTable",
        "UpdateTableReplicaAutoScaling",
        "UpdateTimeToLive"
      ],
      "HasResource": true,
      "StringPrefix": "dynamodb",
      "conditionKeys": [
        "dynamodb:Attributes",
        "dynamodb:EnclosingOperation",
        "dynamodb:LeadingKeys",
        "dynamodb:ReturnConsumedCapacity",
        "dynamodb:ReturnValues",
        "dynamodb:Select"
      ]
    },
    "Amazon DynamoDB Accelerator (DAX)": {
      "ARNFormat": "arn:aws:dax:<region>:<accountId>:cache/<clustername>",
      "ARNRegex": "^arn:aws:dax:.+:[0-9]+:cache/[a-zA-Z0-9_.-]+",
      "Actions": [
        "BatchGetItem",
        "BatchWriteItem",
        "ConditionCheckItem",
        "CreateCluster",
        "CreateParameterGroup",
        "CreateSubnetGroup",
        "DecreaseReplicationFactor",
        "DeleteCluster",
        "DeleteItem",
        "DeleteParameterGroup",
        "DeleteSubnetGroup",
        "DescribeClusters",
        "DescribeDefaultParameters",
        "DescribeEvents",
        "DescribeParameterGroups",
        "DescribeParameters",
        "DescribeSubnetGroups",
        "GetItem",
        "IncreaseReplicationFactor",
        "ListTags",
        "PutItem",
        "Query",
        "RebootNode",
        "Scan",
        "TagResource",
        "UntagResource",
        "UpdateCluster",
        "UpdateItem",
        "UpdateParameterGroup",
        "UpdateSubnetGroup"
      ],
      "HasResource": true,
      "StringPrefix": "dax",
      "conditionKeys": [
        "dax:EnclosingOperation"
      ]
    },
    "Amazon EC2": {
      "ARNFormat": "arn:aws:ec2:<region>:<account>:<resourceType>/<resourcePath>",
      "ARNRegex": "^arn:aws:ec2:.+",
      "Actions": [
        "AcceptReservedInstancesExchangeQuote",
        "AcceptTransitGatewayPeeringAttachment",
        "AcceptTransitGatewayVpcAttachment",
        "AcceptVpcEndpointConnections",
        "AcceptVpcPeeringConnection",
        "AdvertiseByoipCidr",
        "AllocateAddress",
        "AllocateHosts",
        "ApplySecurityGroupsToClientVpnTargetNetwork",
        "AssignIpv6Addresses",
        "AssignPrivateIpAddresses",
        "AssociateAddress",
        "AssociateClientVpnTargetNetwork",
        "AssociateDhcpOptions",
        "AssociateIamInstanceProfile",
        "AssociateRouteTable",
        "AssociateSubnetCidrBlock",
        "AssociateTransitGatewayMulticastDomain",
        "AssociateTransitGatewayRouteTable",
        "AssociateVpcCidrBlock",
        "AttachClassicLinkVpc",
        "AttachInternetGateway",
        "AttachNetworkInterface",
        "AttachVolume",
        "AttachVpnGateway",
        "AuthorizeClientVpnIngress",
        "AuthorizeSecurityGroupEgress",
        "AuthorizeSecurityGroupIngress",
        "BundleInstance",
        "CancelBundleTask",
        "CancelCapacityReservation",
        "CancelConversionTask",
        "CancelExportTask",
        "CancelImportTask",
        "CancelReservedInstancesListing",
        "CancelSpotFleetRequests",
        "CancelSpotInstanceRequests",
        "ConfirmProductInstance",
        "CopyFpgaImage",
        "CopyImage",
        "CopySnapshot",
        "CreateCapacityReservation",
        "CreateClientVpnEndpoint",
        "CreateClientVpnRoute",
        "CreateCustomerGateway",
        "CreateDefaultSubnet",
        "CreateDefaultVpc",
        "CreateDhcpOptions",
        "CreateEgressOnlyInternetGateway",
        "CreateFleet",
        "CreateFlowLogs",
        "CreateFpgaImage",
        "CreateImage",
        "CreateInstanceExportTask",
        "CreateInternetGateway",
        "CreateKeyPair",
        "CreateLaunchTemplate",
        "CreateLaunchTemplateVersion",
        "CreateLocalGatewayRoute",
        "CreateLocalGatewayRouteTableVpcAssociation",
        "CreateNatGateway",
        "CreateNetworkAcl",
        "CreateNetworkAclEntry",
        "CreateNetworkInterface",
        "CreateNetworkInterfacePermission",
        "CreatePlacementGroup",
        "CreateReservedInstancesListing",
        "CreateRoute",
        "CreateRouteTable",
        "CreateSecurityGroup",
        "CreateSnapshot",
        "CreateSnapshots",
        "CreateSpotDatafeedSubscription",
        "CreateSubnet",
        "CreateTags",
        "CreateTrafficMirrorFilter",
        "CreateTrafficMirrorFilterRule",
        "CreateTrafficMirrorSession",
        "CreateTrafficMirrorTarget",
        "CreateTransitGateway",
        "CreateTransitGatewayMulticastDomain",
        "CreateTransitGatewayPeeringAttachment",
        "CreateTransitGatewayRoute",
        "CreateTransitGatewayRouteTable",
        "CreateTransitGatewayVpcAttachment",
        "CreateVolume",
        "CreateVpc",
        "CreateVpcEndpoint",
        "CreateVpcEndpointConnectionNotification",
        "CreateVpcEndpointServiceConfiguration",
        "CreateVpcPeeringConnection",
        "CreateVpnConnection",
        "CreateVpnConnectionRoute",
        "CreateVpnGateway",
        "DeleteClientVpnEndpoint",
        "DeleteClientVpnRoute",
        "DeleteCustomerGateway",
        "DeleteDhcpOptions",
        "DeleteEgressOnlyInternetGateway",
        "DeleteFleets",
        "DeleteFlowLogs",
        "DeleteFpgaImage",
        "DeleteInternetGateway",
        "DeleteKeyPair",
        "DeleteLaunchTemplate",
        "DeleteLaunchTemplateVersions",
        "DeleteLocalGatewayRoute",
        "DeleteLocalGatewayRouteTableVpcAssociation",
        "DeleteNatGateway",
        "DeleteNetworkAcl",
        "DeleteNetworkAclEntry",
        "DeleteNetworkInterface",
        "DeleteNetworkInterfacePermission",
        "DeletePlacementGroup",
        "DeleteRoute",
        "DeleteRouteTable",
        "DeleteSecurityGroup",
        "DeleteSnapshot",
        "DeleteSpotDatafeedSubscription",
        "DeleteSubnet",
        "DeleteTags",
        "DeleteTrafficMirrorFilter",
        "DeleteTrafficMirrorFilterRule",
        "DeleteTrafficMirrorSession",
        "DeleteTrafficMirrorTarget",
        "DeleteTransitGateway",
        "DeleteTransitGatewayMulticastDomain",
        "DeleteTransitGatewayPeeringAttachment",
        "DeleteTransitGatewayRoute",
        "DeleteTransitGatewayRouteTable",
        "DeleteTransitGatewayVpcAttachment",
        "DeleteVolume",
        "DeleteVpc",
        "DeleteVpcEndpointConnectionNotifications",
        "DeleteVpcEndpointServiceConfigurations",
        "DeleteVpcEndpoints",
        "DeleteVpcPeeringConnection",
        "DeleteVpnConnection",
        "DeleteVpnConnectionRoute",
        "DeleteVpnGateway",
        "DeprovisionByoipCidr",
        "DeregisterImage",
        "DeregisterInstanceEventNotificationAttributes",
        "DeregisterTransitGatewayMulticastGroupMembers",
        "DeregisterTransitGatewayMulticastGroupSources",
        "DescribeAccountAttributes",
        "DescribeAddresses",
        "DescribeAggregateIdFormat",
        "DescribeAvailabilityZones",
        "DescribeBundleTasks",
        "DescribeByoipCidrs",
        "DescribeCapacityReservations",
        "DescribeClassicLinkInstances",
        "DescribeClientVpnAuthorizationRules",
        "DescribeClientVpnConnections",
        "DescribeClientVpnEndpoints",
        "DescribeClientVpnRoutes",
        "DescribeClientVpnTargetNetworks",
        "DescribeCoipPools",
        "DescribeConversionTasks",
        "DescribeCustomerGateways",
        "DescribeDhcpOptions",
        "DescribeEgressOnlyInternetGateways",
        "DescribeElasticGpus",
        "DescribeExportImageTasks",
        "DescribeExportTasks",
        "DescribeFastSnapshotRestores",
        "DescribeFleetHistory",
        "DescribeFleetInstances",
        "DescribeFleets",
        "DescribeFlowLogs",
        "DescribeFpgaImageAttribute",
        "DescribeFpgaImages",
        "DescribeHostReservationOfferings",
        "DescribeHostReservations",
        "DescribeHosts",
        "DescribeIamInstanceProfileAssociations",
        "DescribeIdFormat",
        "DescribeIdentityIdFormat",
        "DescribeImageAttribute",
        "DescribeImages",
        "DescribeImportImageTasks",
        "DescribeImportSnapshotTasks",
        "DescribeInstanceAttribute",
        "DescribeInstanceCreditSpecifications",
        "DescribeInstanceEventNotificationAttributes",
        "DescribeInstanceStatus",
        "DescribeInstanceTypeOfferings",
        "DescribeInstanceTypes",
        "DescribeInstances",
        "DescribeInternetGateways",
        "DescribeKeyPairs",
        "DescribeLaunchTemplateVersions",
        "DescribeLaunchTemplates",
        "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
        "DescribeLocalGatewayRouteTableVpcAssociations",
        "DescribeLocalGatewayRouteTables",
        "DescribeLocalGatewayVirtualInterfaceGroups",
        "DescribeLocalGatewayVirtualInterfaces",
        "DescribeLocalGateways",
        "DescribeMovingAddresses",
        "DescribeNatGateways",
        "DescribeNetworkAcls",
        "DescribeNetworkInterfaceAttribute",
        "DescribeNetworkInterfacePermissions",
        "DescribeNetworkInterfaces",
        "DescribePlacementGroups",
        "DescribePrefixLists",
        "DescribePrincipalIdFormat",
        "DescribePublicIpv4Pools",
        "DescribeRegions",
        "DescribeReservedInstances",
        "DescribeReservedInstancesListings",
        "DescribeReservedInstancesModifications",
        "DescribeReservedInstancesOfferings",
        "DescribeRouteTables",
        "DescribeScheduledInstanceAvailability",
        "DescribeScheduledInstances",
        "DescribeSecurityGroupReferences",
        "DescribeSecurityGroups",
        "DescribeSnapshotAttribute",
        "DescribeSnapshots",
        "DescribeSpotDatafeedSubscription",
        "DescribeSpotFleetInstances",
        "DescribeSpotFleetRequestHistory",
        "DescribeSpotFleetRequests",
        "DescribeSpotInstanceRequests",
        "DescribeSpotPriceHistory",
        "DescribeStaleSecurityGroups",
        "DescribeSubnets",
        "DescribeTags",
        "DescribeTrafficMirrorFilters",
        "DescribeTrafficMirrorSessions",
        "DescribeTrafficMirrorTargets",
        "DescribeTransitGatewayAttachments",
        "DescribeTransitGatewayMulticastDomains",
        "DescribeTransitGatewayPeeringAttachments",
        "DescribeTransitGatewayRouteTables",
        "DescribeTransitGatewayVpcAttachments",
        "DescribeTransitGateways",
        "DescribeVolumeAttribute",
        "DescribeVolumeStatus",
        "DescribeVolumes",
        "DescribeVolumesModifications",
        "DescribeVpcAttribute",
        "DescribeVpcClassicLink",
        "DescribeVpcClassicLinkDnsSupport",
        "DescribeVpcEndpointConnectionNotifications",
        "DescribeVpcEndpointConnections",
        "DescribeVpcEndpointServiceConfigurations",
        "DescribeVpcEndpointServicePermissions",
        "DescribeVpcEndpointServices",
        "DescribeVpcEndpoints",
        "DescribeVpcPeeringConnections",
        "DescribeVpcs",
        "DescribeVpnConnections",
        "DescribeVpnGateways",
        "DetachClassicLinkVpc",
        "DetachInternetGateway",
        "DetachNetworkInterface",
        "DetachVolume",
        "DetachVpnGateway",
        "DisableEbsEncryptionByDefault",
        "DisableFastSnapshotRestores",
        "DisableTransitGatewayRouteTablePropagation",
        "DisableVgwRoutePropagation",
        "DisableVpcClassicLink",
        "DisableVpcClassicLinkDnsSupport",
        "DisassociateAddress",
        "DisassociateClientVpnTargetNetwork",
        "DisassociateIamInstanceProfile",
        "DisassociateRouteTable",
        "DisassociateSubnetCidrBlock",
        "DisassociateTransitGatewayMulticastDomain",
        "DisassociateTransitGatewayRouteTable",
        "DisassociateVpcCidrBlock",
        "EnableEbsEncryptionByDefault",
        "EnableFastSnapshotRestores",
        "EnableTransitGatewayRouteTablePropagation",
        "EnableVgwRoutePropagation",
        "EnableVolumeIO",
        "EnableVpcClassicLink",
        "EnableVpcClassicLinkDnsSupport",
        "ExportClientVpnClientCertificateRevocationList",
        "ExportClientVpnClientConfiguration",
        "ExportImage",
        "ExportTransitGatewayRoutes",
        "GetCapacityReservationUsage",
        "GetCoipPoolUsage",
        "GetConsoleOutput",
        "GetConsoleScreenshot",
        "GetDefaultCreditSpecification",
        "GetEbsDefaultKmsKeyId",
        "GetEbsEncryptionByDefault",
        "GetHostReservationPurchasePreview",
        "GetLaunchTemplateData",
        "GetPasswordData",
        "GetReservedInstancesExchangeQuote",
        "GetTransitGatewayAttachmentPropagations",
        "GetTransitGatewayMulticastDomainAssociations",
        "GetTransitGatewayRouteTableAssociations",
        "GetTransitGatewayRouteTablePropagations",
        "ImportClientVpnClientCertificateRevocationList",
        "ImportImage",
        "ImportInstance",
        "ImportKeyPair",
        "ImportSnapshot",
        "ImportVolume",
        "ModifyCapacityReservation",
        "ModifyClientVpnEndpoint",
        "ModifyDefaultCreditSpecification",
        "ModifyEbsDefaultKmsKeyId",
        "ModifyFleet",
        "ModifyFpgaImageAttribute",
        "ModifyHosts",
        "ModifyIdFormat",
        "ModifyIdentityIdFormat",
        "ModifyImageAttribute",
        "ModifyInstanceAttribute",
        "ModifyInstanceCapacityReservationAttributes",
        "ModifyInstanceCreditSpecification",
        "ModifyInstanceEventStartTime",
        "ModifyInstanceMetadataOptions",
        "ModifyInstancePlacement",
        "ModifyLaunchTemplate",
        "ModifyNetworkInterfaceAttribute",
        "ModifyReservedInstances",
        "ModifySnapshotAttribute",
        "ModifySpotFleetRequest",
        "ModifySubnetAttribute",
        "ModifyTrafficMirrorFilterNetworkServices",
        "ModifyTrafficMirrorFilterRule",
        "ModifyTrafficMirrorSession",
        "ModifyTransitGatewayVpcAttachment",
        "ModifyVolume",
        "ModifyVolumeAttribute",
        "ModifyVpcAttribute",
        "ModifyVpcEndpoint",
        "ModifyVpcEndpointConnectionNotification",
        "ModifyVpcEndpointServiceConfiguration",
        "ModifyVpcEndpointServicePermissions",
        "ModifyVpcPeeringConnectionOptions",
        "ModifyVpcTenancy",
        "ModifyVpnConnection",
        "ModifyVpnTunnelCertificate",
        "ModifyVpnTunnelOptions",
        "MonitorInstances",
        "MoveAddressToVpc",
        "ProvisionByoipCidr",
        "PurchaseHostReservation",
        "PurchaseReservedInstancesOffering",
        "PurchaseScheduledInstances",
        "RebootInstances",
        "RegisterImage",
        "RegisterInstanceEventNotificationAttributes",
        "RegisterTransitGatewayMulticastGroupMembers",
        "RegisterTransitGatewayMulticastGroupSources",
        "RejectTransitGatewayPeeringAttachment",
        "RejectTransitGatewayVpcAttachment",
        "RejectVpcEndpointConnections",
        "RejectVpcPeeringConnection",
        "ReleaseAddress",
        "ReleaseHosts",
        "ReplaceIamInstanceProfileAssociation",
        "ReplaceNetworkAclAssociation",
        "ReplaceNetworkAclEntry",
        "ReplaceRoute",
        "ReplaceRouteTableAssociation",
        "ReplaceTransitGatewayRoute",
        "ReportInstanceStatus",
        "RequestSpotFleet",
        "RequestSpotInstances",
        "ResetEbsDefaultKmsKeyId",
        "ResetFpgaImageAttribute",
        "ResetImageAttribute",
        "ResetInstanceAttribute",
        "ResetNetworkInterfaceAttribute",
        "ResetSnapshotAttribute",
        "RestoreAddressToClassic",
        "RevokeClientVpnIngress",
        "RevokeSecurityGroupEgress",
        "RevokeSecurityGroupIngress",
        "RunInstances",
        "RunScheduledInstances",
        "SearchLocalGatewayRoutes",
        "SearchTransitGatewayMulticastGroups",
        "SearchTransitGatewayRoutes",
        "SendDiagnosticInterrupt",
        "StartInstances",
        "StartVpcEndpointServicePrivateDnsVerification",
        "StopInstances",
        "TerminateClientVpnConnections",
        "TerminateInstances",
        "UnassignIpv6Addresses",
        "UnassignPrivateIpAddresses",
        "UnmonitorInstances",
        "UpdateSecurityGroupRuleDescriptionsEgress",
        "UpdateSecurityGroupRuleDescriptionsIngress",
        "WithdrawByoipCidr"
      ],
      "HasResource": true,
      "StringPrefix": "ec2",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "ec2:AccepterVpc",
        "ec2:AssociatePublicIpAddress",
        "ec2:AuthenticationType",
        "ec2:AuthorizedService",
        "ec2:AuthorizedUser",
        "ec2:AutoPlacement",
        "ec2:AvailabilityZone",
        "ec2:CreateAction",
        "ec2:DPDTimeoutSeconds",
        "ec2:EbsOptimized",
        "ec2:ElasticGpuType",
        "ec2:Encrypted",
        "ec2:GatewayType",
        "ec2:HostRecovery",
        "ec2:IKEVersions",
        "ec2:ImageType",
        "ec2:InsideTunnelCidr",
        "ec2:InstanceMarketType",
        "ec2:InstanceProfile",
        "ec2:InstanceType",
        "ec2:IsLaunchTemplateResource",
        "ec2:LaunchTemplate",
        "ec2:MetadataHttpEndpoint",
        "ec2:MetadataHttpPutResponseHopLimit",
        "ec2:MetadataHttpTokens",
        "ec2:Owner",
        "ec2:ParentSnapshot",
        "ec2:ParentVolume",
        "ec2:Permission",
        "ec2:Phase1DHGroupNumbers",
        "ec2:Phase1EncryptionAlgorithms",
        "ec2:Phase1IntegrityAlgorithms",
        "ec2:Phase1LifetimeSeconds",
        "ec2:Phase2DHGroupNumbers",
        "ec2:Phase2EncryptionAlgorithms",
        "ec2:Phase2IntegrityAlgorithms",
        "ec2:Phase2LifetimeSeconds",
        "ec2:PlacementGroup",
        "ec2:PlacementGroupStrategy",
        "ec2:PresharedKeys",
        "ec2:ProductCode",
        "ec2:Public",
        "ec2:Quantity",
        "ec2:Region",
        "ec2:RekeyFuzzPercentage",
        "ec2:RekeyMarginTimeSeconds",
        "ec2:RequesterVpc",
        "ec2:ReservedInstancesOfferingType",
        "ec2:ResourceTag/",
        "ec2:ResourceTag/${TagKey}",
        "ec2:RoleDelivery",
        "ec2:RootDeviceType",
        "ec2:RoutingType",
        "ec2:SnapshotTime",
        "ec2:SourceInstanceARN",
        "ec2:Subnet",
        "ec2:Tenancy",
        "ec2:VolumeIops",
        "ec2:VolumeSize",
        "ec2:VolumeType",
        "ec2:Vpc",
        "ec2:VpceServiceName",
        "ec2:VpceServiceOwner",
        "ec2:VpceServicePrivateDnsName"
      ]
    },
    "Amazon EC2 Auto Scaling": {
      "ARNFormat": "arn:${Partition}:autoscaling:<region>:<account>:<relative-id>",
      "ARNRegex": "^arn:${Partition}:autoscaling:.+:.+:.+",
      "Actions": [
        "AttachInstances",
        "AttachLoadBalancerTargetGroups",
        "AttachLoadBalancers",
        "BatchDeleteScheduledAction",
        "BatchPutScheduledUpdateGroupAction",
        "CompleteLifecycleAction",
        "CreateAutoScalingGroup",
        "CreateLaunchConfiguration",
        "CreateOrUpdateTags",
        "DeleteAutoScalingGroup",
        "DeleteLaunchConfiguration",
        "DeleteLifecycleHook",
        "DeleteNotificationConfiguration",
        "DeletePolicy",
        "DeleteScheduledAction",
        "DeleteTags",
        "DescribeAccountLimits",
        "DescribeAdjustmentTypes",
        "DescribeAutoScalingGroups",
        "DescribeAutoScalingInstances",
        "DescribeAutoScalingNotificationTypes",
        "DescribeLaunchConfigurations",
        "DescribeLifecycleHookTypes",
        "DescribeLifecycleHooks",
        "DescribeLoadBalancerTargetGroups",
        "DescribeLoadBalancers",
        "DescribeMetricCollectionTypes",
        "DescribeNotificationConfigurations",
        "DescribePolicies",
        "DescribeScalingActivities",
        "DescribeScalingProcessTypes",
        "DescribeScheduledActions",
        "DescribeTags",
        "DescribeTerminationPolicyTypes",
        "DetachInstances",
        "DetachLoadBalancerTargetGroups",
        "DetachLoadBalancers",
        "DisableMetricsCollection",
        "EnableMetricsCollection",
        "EnterStandby",
        "ExecutePolicy",
        "ExitStandby",
        "PutLifecycleHook",
        "PutNotificationConfiguration",
        "PutScalingPolicy",
        "PutScheduledUpdateGroupAction",
        "RecordLifecycleActionHeartbeat",
        "ResumeProcesses",
        "SetDesiredCapacity",
        "SetInstanceHealth",
        "SetInstanceProtection",
        "SuspendProcesses",
        "TerminateInstanceInAutoScalingGroup",
        "UpdateAutoScalingGroup"
      ],
      "HasResource": true,
      "StringPrefix": "autoscaling",
      "conditionKeys": [
        "autoscaling:ImageId",
        "autoscaling:InstanceType",
        "autoscaling:InstanceTypes",
        "autoscaling:LaunchConfigurationName",
        "autoscaling:LaunchTemplateVersionSpecified",
        "autoscaling:LoadBalancerNames",
        "autoscaling:MaxSize",
        "autoscaling:MinSize",
        "autoscaling:ResourceTag/${TagKey}",
        "autoscaling:SpotPrice",
        "autoscaling:TargetGroupARNs",
        "autoscaling:VPCZoneIdentifiers",
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon EC2 Image Builder": {
      "ARNFormat": "arn:aws:imagebuilder:<region>:<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:imagebuilder:.+:.+:.+",
      "Actions": [
        "CancelImageCreation",
        "CreateComponent",
        "CreateDistributionConfiguration",
        "CreateImage",
        "CreateImagePipeline",
        "CreateImageRecipe",
        "CreateInfrastructureConfiguration",
        "DeleteComponent",
        "DeleteDistributionConfiguration",
        "DeleteImage",
        "DeleteImagePipeline",
        "DeleteImageRecipe",
        "DeleteInfrastructureConfiguration",
        "GetComponent",
        "GetComponentPolicy",
        "GetDistributionConfiguration",
        "GetImage",
        "GetImagePipeline",
        "GetImagePolicy",
        "GetImageRecipe",
        "GetImageRecipePolicy",
        "GetInfrastructureConfiguration",
        "ListComponentBuildVersions",
        "ListComponents",
        "ListDistributionConfigurations",
        "ListImageBuildVersions",
        "ListImagePipelines",
        "ListImageRecipes",
        "ListImages",
        "ListInfrastructureConfigurations",
        "ListTagsForResource",
        "PutComponentPolicy",
        "PutImagePolicy",
        "PutImageRecipePolicy",
        "StartImagePipelineExecution",
        "TagResource",
        "UntagResource",
        "UpdateDistributionConfiguration",
        "UpdateImagePipeline",
        "UpdateInfrastructureConfiguration"
      ],
      "HasResource": true,
      "StringPrefix": "imagebuilder",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "imagebuilder:CreatedResourceTag/<key>",
        "imagebuilder:CreatedResourceTagKeys"
      ]
    },
    "Amazon EC2 Instance Connect": {
      "ARNFormat": "arn:aws:ec2:<region>:<account>:<resourceType>/<resourcePath>",
      "ARNRegex": "^arn:aws:ec2:.+",
      "Actions": [
        "SendSSHPublicKey"
      ],
      "HasResource": true,
      "StringPrefix": "ec2-instance-connect",
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}",
        "ec2:ResourceTag/${TagKey}",
        "ec2:osuser"
      ]
    },
    "Amazon ElastiCache": {
      "Actions": [
        "AddTagsToResource",
        "AuthorizeCacheSecurityGroupIngress",
        "CopySnapshot",
        "CreateCacheCluster",
        "CreateCacheParameterGroup",
        "CreateCacheSecurityGroup",
        "CreateCacheSubnetGroup",
        "CreateReplicationGroup",
        "CreateSnapshot",
        "DecreaseReplicaCount",
        "DeleteCacheCluster",
        "DeleteCacheParameterGroup",
        "DeleteCacheSecurityGroup",
        "DeleteCacheSubnetGroup",
        "DeleteReplicationGroup",
        "DeleteSnapshot",
        "DescribeCacheClusters",
        "DescribeCacheEngineVersions",
        "DescribeCacheParameterGroups",
        "DescribeCacheParameters",
        "DescribeCacheSecurityGroups",
        "DescribeCacheSubnetGroups",
        "DescribeEngineDefaultParameters",
        "DescribeEvents",
        "DescribeReplicationGroups",
        "DescribeReservedCacheNodes",
        "DescribeReservedCacheNodesOfferings",
        "DescribeSnapshots",
        "IncreaseReplicaCount",
        "ListAllowedNodeTypeModifications",
        "ListTagsForResource",
        "ModifyCacheCluster",
        "ModifyCacheParameterGroup",
        "ModifyCacheSubnetGroup",
        "ModifyReplicationGroup",
        "ModifyReplicationGroupShardConfiguration",
        "PurchaseReservedCacheNodesOffering",
        "RebootCacheCluster",
        "RemoveTagsFromResource",
        "ResetCacheParameterGroup",
        "RevokeCacheSecurityGroupIngress",
        "TestFailover"
      ],
      "HasResource": false,
      "StringPrefix": "elasticache"
    },
    "Amazon Elastic Block Store": {
      "ARNFormat": "arn:aws:ebs:<region>:<account>:<resourceType>/<resourcePath>",
      "ARNRegex": "^arn:aws:ebs:.+",
      "Actions": [
        "GetSnapshotBlock",
        "ListChangedBlocks",
        "ListSnapshotBlocks"
      ],
      "HasResource": true,
      "StringPrefix": "ebs",
      "conditionKeys": [
        "aws:ResourceTag/${TagKey}"
      ]
    },
    "Amazon Elastic Container Registry": {
      "ARNFormat": "arn:aws:ecr:<region>:<account_ID>:repository/<repository_name>",
      "ARNRegex": "^arn:aws:ecr:.+",
      "Actions": [
        "BatchCheckLayerAvailability",
        "BatchDeleteImage",
        "BatchGetImage",
        "CompleteLayerUpload",
        "CreateRepository",
        "DeleteLifecyclePolicy",
        "DeleteRepository",
        "DeleteRepositoryPolicy",
        "DescribeImageScanFindings",
        "DescribeImages",
        "DescribeRepositories",
        "GetAuthorizationToken",
        "GetDownloadUrlForLayer",
        "GetLifecyclePolicy",
        "GetLifecyclePolicyPreview",
        "GetRepositoryPolicy",
        "InitiateLayerUpload",
        "ListImages",
        "ListTagsForResource",
        "PutImage",
        "PutImageScanningConfiguration",
        "PutImageTagMutability",
        "PutLifecyclePolicy",
        "SetRepositoryPolicy",
        "StartImageScan",
        "StartLifecyclePolicyPreview",
        "TagResource",
        "UntagResource",
        "UploadLayerPart"
      ],
      "HasResource": true,
      "StringPrefix": "ecr",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ecr:ResourceTag/${TagKey}"
      ]
    },
    "Amazon Elastic Container Service": {
      "ARNFormat": "arn:aws:ecs:<region>:<account_ID>:<resource_type>/<relative_ID>",
      "ARNRegex": "^arn:aws:ecs:.+",
      "Actions": [
        "CreateCluster",
        "CreateService",
        "CreateTaskSet",
        "DeleteAccountSetting",
        "DeleteAttributes",
        "DeleteCluster",
        "DeleteService",
        "DeleteTaskSet",
        "DeregisterContainerInstance",
        "DeregisterTaskDefinition",
        "DescribeClusters",
        "DescribeContainerInstances",
        "DescribeServices",
        "DescribeTaskDefinition",
        "DescribeTaskSets",
        "DescribeTasks",
        "DiscoverPollEndpoint",
        "ListAccountSettings",
        "ListAttributes",
        "ListClusters",
        "ListContainerInstances",
        "ListServices",
        "ListTagsForResource",
        "ListTaskDefinitionFamilies",
        "ListTaskDefinitions",
        "ListTasks",
        "Poll",
        "PutAccountSetting",
        "PutAccountSettingDefault",
        "PutAttributes",
        "RegisterContainerInstance",
        "RegisterTaskDefinition",
        "RunTask",
        "StartTask",
        "StartTelemetrySession",
        "StopTask",
        "SubmitAttachmentStateChanges",
        "SubmitContainerStateChange",
        "SubmitTaskStateChange",
        "TagResource",
        "UntagResource",
        "UpdateContainerAgent",
        "UpdateContainerInstancesState",
        "UpdateService",
        "UpdateServicePrimaryTaskSet",
        "UpdateTaskSet"
      ],
      "HasResource": true,
      "StringPrefix": "ecs",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ecs:ResourceTag/${TagKey}",
        "ecs:cluster",
        "ecs:container-instances",
        "ecs:service",
        "ecs:task-definition"
      ]
    },
    "Amazon Elastic Container Service for Kubernetes": {
      "ARNFormat": "arn:aws:eks:<region>:<account_ID>:<resource_type>/<relative_ID>",
      "ARNRegex": "^arn:aws:eks:.+",
      "Actions": [
        "CreateCluster",
        "CreateFargateProfile",
        "CreateNodegroup",
        "DeleteCluster",
        "DeleteFargateProfile",
        "DeleteNodegroup",
        "DescribeCluster",
        "DescribeFargateProfile",
        "DescribeNodegroup",
        "DescribeUpdate",
        "ListClusters",
        "ListFargateProfiles",
        "ListNodegroups",
        "ListTagsForResource",
        "ListUpdates",
        "TagResource",
        "UntagResource",
        "UpdateClusterConfig",
        "UpdateClusterVersion",
        "UpdateNodegroupConfig",
        "UpdateNodegroupVersion"
      ],
      "HasResource": true,
      "StringPrefix": "eks",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon Elastic File System": {
      "ARNFormat": "arn:${Partition}:elasticfilesystem:${Region}:${Account}:${ResourceType}/${ResourcePath}",
      "ARNRegex": "^arn:${Partition}:elasticfilesystem:.+",
      "Actions": [
        "Backup",
        "ClientMount",
        "ClientRootAccess",
        "ClientWrite",
        "CreateAccessPoint",
        "CreateFileSystem",
        "CreateMountTarget",
        "CreateTags",
        "DeleteAccessPoint",
        "DeleteFileSystem",
        "DeleteFileSystemPolicy",
        "DeleteMountTarget",
        "DeleteTags",
        "DescribeAccessPoints",
        "DescribeFileSystemPolicy",
        "DescribeFileSystems",
        "DescribeLifecycleConfiguration",
        "DescribeMountTargetSecurityGroups",
        "DescribeMountTargets",
        "DescribeTags",
        "ListTagsForResource",
        "ModifyMountTargetSecurityGroups",
        "PutFileSystemPolicy",
        "PutLifecycleConfiguration",
        "Restore",
        "TagResource",
        "UntagResource",
        "UpdateFileSystem"
      ],
      "HasResource": true,
      "StringPrefix": "elasticfilesystem",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "elasticfilesystem:AccessPointArn"
      ]
    },
    "Amazon Elastic Inference": {
      "ARNFormat": "arn:aws:elastic-inference:<region>:<account-id>:elastic-inference-accelerator/<identifier>",
      "ARNRegex": "^arn:${Partition}:elastic-inference:.+",
      "Actions": [
        "Connect"
      ],
      "HasResource": true,
      "StringPrefix": "elastic-inference"
    },
    "Amazon Elastic MapReduce": {
      "ARNFormat": "arn:aws:elasticmapreduce:<region>:<account>:<resourceType>/<resourceId>",
      "ARNRegex": "^arn:aws:elasticmapreduce:.+",
      "Actions": [
        "AddInstanceFleet",
        "AddInstanceGroups",
        "AddJobFlowSteps",
        "AddTags",
        "CancelSteps",
        "CreateEditor",
        "CreateSecurityConfiguration",
        "DeleteEditor",
        "DeleteSecurityConfiguration",
        "DescribeCluster",
        "DescribeEditor",
        "DescribeJobFlows",
        "DescribeSecurityConfiguration",
        "DescribeStep",
        "GetBlockPublicAccessConfiguration",
        "ListBootstrapActions",
        "ListClusters",
        "ListEditors",
        "ListInstanceFleets",
        "ListInstanceGroups",
        "ListInstances",
        "ListSecurityConfigurations",
        "ListSteps",
        "ModifyCluster",
        "ModifyInstanceFleet",
        "ModifyInstanceGroups",
        "OpenEditorInConsole",
        "PutAutoScalingPolicy",
        "PutBlockPublicAccessConfiguration",
        "RemoveAutoScalingPolicy",
        "RemoveTags",
        "RunJobFlow",
        "SetTerminationProtection",
        "StartEditor",
        "StopEditor",
        "TerminateJobFlows",
        "ViewEventsFromAllClustersInConsole"
      ],
      "HasResource": true,
      "StringPrefix": "elasticmapreduce",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "elasticmapreduce:RequestTag/${TagKey}",
        "elasticmapreduce:ResourceTag/${TagKey}"
      ]
    },
    "Amazon Elastic Transcoder": {
      "ARNFormat": "arn:aws:elastictranscoder:<region>:<account>:<resourceType>/<resourceId>",
      "ARNRegex": "^arn:aws:elastictranscoder:.+",
      "Actions": [
        "CancelJob",
        "CreateJob",
        "CreatePipeline",
        "CreatePreset",
        "DeletePipeline",
        "DeletePreset",
        "ListJobsByPipeline",
        "ListJobsByStatus",
        "ListPipelines",
        "ListPresets",
        "ReadJob",
        "ReadPipeline",
        "ReadPreset",
        "TestRole",
        "UpdatePipeline",
        "UpdatePipelineNotifications",
        "UpdatePipelineStatus"
      ],
      "HasResource": true,
      "StringPrefix": "elastictranscoder"
    },
    "Amazon Elasticsearch Service": {
      "ARNFormat": "arn:aws:es:<region>:<account_ID>:<resource>",
      "ARNRegex": "^arn:aws:es:.+",
      "Actions": [
        "AcceptInboundCrossClusterSearchConnection",
        "AddTags",
        "CreateElasticsearchDomain",
        "CreateElasticsearchServiceRole",
        "CreateOutboundCrossClusterSearchConnection",
        "DeleteElasticsearchDomain",
        "DeleteElasticsearchServiceRole",
        "DeleteInboundCrossClusterSearchConnection",
        "DeleteOutboundCrossClusterSearchConnection",
        "DescribeElasticsearchDomain",
        "DescribeElasticsearchDomainConfig",
        "DescribeElasticsearchDomains",
        "DescribeElasticsearchInstanceTypeLimits",
        "DescribeInboundCrossClusterSearchConnections",
        "DescribeOutboundCrossClusterSearchConnections",
        "DescribeReservedElasticsearchInstanceOfferings",
        "DescribeReservedElasticsearchInstances",
        "ESCrossClusterGet",
        "ESHttpDelete",
        "ESHttpGet",
        "ESHttpHead",
        "ESHttpPatch",
        "ESHttpPost",
        "ESHttpPut",
        "GetCompatibleElasticsearchVersions",
        "GetUpgradeHistory",
        "GetUpgradeStatus",
        "ListDomainNames",
        "ListElasticsearchInstanceTypeDetails",
        "ListElasticsearchInstanceTypes",
        "ListElasticsearchVersions",
        "ListTags",
        "PurchaseReservedElasticsearchInstanceOffering",
        "RejectInboundCrossClusterSearchConnection",
        "RemoveTags",
        "UpdateElasticsearchDomainConfig",
        "UpgradeElasticsearchDomain"
      ],
      "HasResource": true,
      "StringPrefix": "es"
    },
    "Amazon EventBridge": {
      "ARNFormat": "arn:aws:<serviceName>:<region>:<account>:<resourceType>/<resourceName>",
      "ARNRegex": "^arn:aws:events:.+",
      "Actions": [
        "ActivateEventSource",
        "CreateEventBus",
        "CreatePartnerEventSource",
        "DeactivateEventSource",
        "DeleteEventBus",
        "DeletePartnerEventSource",
        "DeleteRule",
        "DescribeEventBus",
        "DescribeEventSource",
        "DescribePartnerEventSource",
        "DescribeRule",
        "DisableRule",
        "EnableRule",
        "ListEventBuses",
        "ListEventSources",
        "ListPartnerEventSourceAccounts",
        "ListPartnerEventSources",
        "ListRuleNamesByTarget",
        "ListRules",
        "ListTagsForResource",
        "ListTargetsByRule",
        "PutEvents",
        "PutPartnerEvents",
        "PutPermission",
        "PutRule",
        "PutTargets",
        "RemovePermission",
        "RemoveTargets",
        "TagResource",
        "TestEventPattern",
        "UntagResource"
      ],
      "HasResource": true,
      "StringPrefix": "events",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "events:TargetArn",
        "events:detail-type",
        "events:detail.eventTypeCode",
        "events:detail.service",
        "events:detail.userIdentity.principalId",
        "events:source"
      ]
    },
    "Amazon EventBridge Schemas": {
      "ARNFormat": "arn:aws:schemas:<region>:<account>:<resourceType>/<resourceName>",
      "ARNRegex": "^arn:${Partition}:schemas:.+:.+:.+",
      "Actions": [
        "CreateDiscoverer",
        "CreateRegistry",
        "CreateSchema",
        "DeleteDiscoverer",
        "DeleteRegistry",
        "DeleteResourcePolicy",
        "DeleteSchema",
        "DeleteSchemaVersion",
        "DescribeCodeBinding",
        "DescribeDiscoverer",
        "DescribeRegistry",
        "DescribeSchema",
        "GetCodeBindingSource",
        "GetDiscoveredSchema",
        "GetResourcePolicy",
        "ListDiscoverers",
        "ListRegistries",
        "ListSchemaVersions",
        "ListSchemas",
        "ListTagsForResource",
        "PutCodeBinding",
        "PutResourcePolicy",
        "SearchSchemas",
        "StartDiscoverer",
        "StopDiscoverer",
        "TagResource",
        "UntagResource",
        "UpdateDiscoverer",
        "UpdateRegistry",
        "UpdateSchema"
      ],
      "HasResource": true,
      "StringPrefix": "schemas",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon FSx": {
      "ARNFormat": "arn:${Partition}:fsx:${Region}:${Account}:${ResourceType}/${ResourcePath}",
      "ARNRegex": "^arn:${Partition}:fsx:.+",
      "Actions": [
        "CancelDataRepositoryTask",
        "CreateBackup",
        "CreateDataRepositoryTask",
        "CreateFileSystem",
        "CreateFileSystemFromBackup",
        "DeleteBackup",
        "DeleteFileSystem",
        "DescribeBackups",
        "DescribeDataRepositoryTasks",
        "DescribeFileSystems",
        "ListTagsForResource",
        "TagResource",
        "UntagResource",
        "UpdateFileSystem"
      ],
      "HasResource": true,
      "StringPrefix": "fsx",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon Forecast": {
      "ARNFormat": "arn:aws:forecast:<region>:<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:forecast:.+:.+:.+",
      "Actions": [
        "CreateDataset",
        "CreateDatasetGroup",
        "CreateDatasetImportJob",
        "CreateForecast",
        "CreateForecastExportJob",
        "CreatePredictor",
        "DeleteDataset",
        "DeleteDatasetGroup",
        "DeleteDatasetImportJob",
        "DeleteForecast",
        "DeleteForecastExportJob",
        "DeletePredictor",
        "DescribeDataset",
        "DescribeDatasetGroup",
        "DescribeDatasetImportJob",
        "DescribeForecast",
        "DescribeForecastExportJob",
        "DescribePredictor",
        "GetAccuracyMetrics",
        "ListDatasetGroups",
        "ListDatasetImportJobs",
        "ListDatasets",
        "ListForecastExportJobs",
        "ListForecasts",
        "ListPredictors",
        "QueryForecast",
        "UpdateDatasetGroup"
      ],
      "HasResource": true,
      "StringPrefix": "forecast"
    },
    "Amazon Fraud Detector": {
      "ARNFormat": "arn:aws:frauddetector:<region>:<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:frauddetector:.+:.+:.+",
      "Actions": [
        "BatchCreateVariable",
        "BatchGetVariable",
        "CreateDetectorVersion",
        "CreateModelVersion",
        "CreateRule",
        "CreateVariable",
        "DeleteDetector",
        "DeleteDetectorVersion",
        "DeleteEvent",
        "DeleteRuleVersion",
        "DescribeDetector",
        "DescribeModelVersions",
        "GetDetectorVersion",
        "GetDetectors",
        "GetExternalModels",
        "GetModelVersion",
        "GetModels",
        "GetOutcomes",
        "GetPrediction",
        "GetRules",
        "GetVariables",
        "PutDetector",
        "PutExternalModel",
        "PutModel",
        "PutOutcome",
        "UpdateDetectorVersion",
        "UpdateDetectorVersionMetadata",
        "UpdateDetectorVersionStatus",
        "UpdateModelVersion",
        "UpdateRuleMetadata",
        "UpdateRuleVersion",
        "UpdateVariable"
      ],
      "HasResource": false,
      "StringPrefix": "frauddetector"
    },
    "Amazon FreeRTOS": {
      "ARNFormat": "arn:${Partition}:freertos:<region>:<account_ID>:<type>/<name>",
      "ARNRegex": "^arn:${Partition}:freertos:.+:[0-9]+:.+",
      "Actions": [
        "CreateSoftwareConfiguration",
        "DeleteSoftwareConfiguration",
        "DescribeHardwarePlatform",
        "DescribeSoftwareConfiguration",
        "GetSoftwareURL",
        "GetSoftwareURLForConfiguration",
        "ListFreeRTOSVersions",
        "ListHardwarePlatforms",
        "ListHardwareVendors",
        "ListSoftwareConfigurations",
        "UpdateSoftwareConfiguration"
      ],
      "HasResource": true,
      "StringPrefix": "freertos",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon GameLift": {
      "ARNFormat": "arn:aws:gamelift:<region>:<accountId>:<resourceType>/<resourceId>",
      "ARNRegex": "^arn:aws:gamelift:.+",
      "Actions": [
        "AcceptMatch",
        "CreateAlias",
        "CreateBuild",
        "CreateFleet",
        "CreateGameSession",
        "CreateGameSessionQueue",
        "CreateMatchmakingConfiguration",
        "CreateMatchmakingRuleSet",
        "CreatePlayerSession",
        "CreatePlayerSessions",
        "CreateScript",
        "CreateVpcPeeringAuthorization",
        "CreateVpcPeeringConnection",
        "DeleteAlias",
        "DeleteBuild",
        "DeleteFleet",
        "DeleteGameSessionQueue",
        "DeleteMatchmakingConfiguration",
        "DeleteMatchmakingRuleSet",
        "DeleteScalingPolicy",
        "DeleteScript",
        "DeleteVpcPeeringAuthorization",
        "DeleteVpcPeeringConnection",
        "DescribeAlias",
        "DescribeBuild",
        "DescribeEC2InstanceLimits",
        "DescribeFleetAttributes",
        "DescribeFleetCapacity",
        "DescribeFleetEvents",
        "DescribeFleetPortSettings",
        "DescribeFleetUtilization",
        "DescribeGameSessionDetails",
        "DescribeGameSessionPlacement",
        "DescribeGameSessionQueues",
        "DescribeGameSessions",
        "DescribeInstances",
        "DescribeMatchmaking",
        "DescribeMatchmakingConfigurations",
        "DescribeMatchmakingRuleSets",
        "DescribePlayerSessions",
        "DescribeRuntimeConfiguration",
        "DescribeScalingPolicies",
        "DescribeScript",
        "DescribeVpcPeeringAuthorizations",
        "DescribeVpcPeeringConnections",
        "GetGameSessionLogUrl",
        "GetInstanceAccess",
        "ListAliases",
        "ListBuilds",
        "ListFleets",
        "ListScripts",
        "ListTagsForResource",
        "PutScalingPolicy",
        "RequestUploadCredentials",
        "ResolveAlias",
        "SearchGameSessions",
        "StartFleetActions",
        "StartGameSessionPlacement",
        "StartMatchBackfill",
        "StartMatchmaking",
        "StopFleetActions",
        "StopGameSessionPlacement",
        "StopMatchmaking",
        "TagResource",
        "UntagResource",
        "UpdateAlias",
        "UpdateBuild",
        "UpdateFleetAttributes",
        "UpdateFleetCapacity",
        "UpdateFleetPortSettings",
        "UpdateGameSession",
        "UpdateGameSessionQueue",
        "UpdateMatchmakingConfiguration",
        "UpdateRuntimeConfiguration",
        "UpdateScript",
        "ValidateMatchmakingRuleSet"
      ],
      "HasResource": true,
      "StringPrefix": "gamelift",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon Glacier": {
      "ARNFormat": "arn:aws:glacier:<region>:<accountID>:<relative-id>",
      "ARNRegex": "^arn:aws:glacier:.+:.+:.+",
      "Actions": [
        "AbortMultipartUpload",
        "AbortVaultLock",
        "AddTagsToVault",
        "CompleteMultipartUpload",
        "CompleteVaultLock",
        "CreateVault",
        "DeleteArchive",
        "DeleteVault",
        "DeleteVaultAccessPolicy",
        "DeleteVaultNotifications",
        "DescribeJob",
        "DescribeVault",
        "GetDataRetrievalPolicy",
        "GetJobOutput",
        "GetVaultAccessPolicy",
        "GetVaultLock",
        "GetVaultNotifications",
        "InitiateJob",
        "InitiateMultipartUpload",
        "InitiateVaultLock",
        "ListJobs",
        "ListMultipartUploads",
        "ListParts",
        "ListProvisionedCapacity",
        "ListTagsForVault",
        "ListVaults",
        "PurchaseProvisionedCapacity",
        "RemoveTagsFromVault",
        "SetDataRetrievalPolicy",
        "SetVaultAccessPolicy",
        "SetVaultNotifications",
        "UploadArchive",
        "UploadMultipartPart"
      ],
      "HasResource": true,
      "StringPrefix": "glacier",
      "conditionKeys": [
        "glacier:ArchiveAgeInDays",
        "glacier:ResourceTag/"
      ]
    },
    "Amazon GroundTruth Labeling": {
      "ARNFormat": "arn:${Partition}:groundtruthlabeling:${region}:${account}:${resourceType}/${resourcePath}",
      "ARNRegex": "^arn:${Partition}:groundtruthlabeling:.+",
      "Actions": [
        "DescribeConsoleJob",
        "ListDatasetObjects",
        "RunFilterOrSampleDatasetJob",
        "RunGenerateManifestByCrawlingJob"
      ],
      "HasResource": false,
      "StringPrefix": "groundtruthlabeling"
    },
    "Amazon GuardDuty": {
      "ARNFormat": "arn:aws:guardduty:<region>:<account_ID>:.+",
      "ARNRegex": "^arn:aws:guardduty:.+",
      "Actions": [
        "AcceptInvitation",
        "ArchiveFindings",
        "CreateDetector",
        "CreateFilter",
        "CreateIPSet",
        "CreateMembers",
        "CreatePublishingDestination",
        "CreateSampleFindings",
        "CreateThreatIntelSet",
        "DeclineInvitations",
        "DeleteDetector",
        "DeleteFilter",
        "DeleteIPSet",
        "DeleteInvitations",
        "DeleteMembers",
        "DeletePublishingDestination",
        "DeleteThreatIntelSet",
        "DescribeOrganizationConfiguration",
        "DescribePublishingDestination",
        "DisableOrganizationAdminAccount",
        "DisassociateFromMasterAccount",
        "DisassociateMembers",
        "EnableOrganizationAdminAccount",
        "GetDetector",
        "GetFilter",
        "GetFindings",
        "GetFindingsStatistics",
        "GetIPSet",
        "GetInvitationsCount",
        "GetMasterAccount",
        "GetMembers",
        "GetThreatIntelSet",
        "InviteMembers",
        "ListDetectors",
        "ListFilters",
        "ListFindings",
        "ListInvitations",
        "ListMembers",
        "ListOrganizationAdminAccounts",
        "ListPublishingDestinations",
        "ListTagsForResource",
        "ListThreatIntelSets",
        "StartMonitoringMembers",
        "StopMonitoringMembers",
        "TagResource",
        "UnarchiveFindings",
        "UntagResource",
        "UpdateDetector",
        "UpdateFilter",
        "UpdateFindingsFeedback",
        "UpdateIPSet",
        "UpdateOrganizationConfiguration",
        "UpdatePublishingDestination",
        "UpdateThreatIntelSet"
      ],
      "HasResource": true,
      "StringPrefix": "guardduty",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon Inspector": {
      "Actions": [
        "AddAttributesToFindings",
        "CreateAssessmentTarget",
        "CreateAssessmentTemplate",
        "CreateResourceGroup",
        "DeleteAssessmentRun",
        "DeleteAssessmentTarget",
        "DeleteAssessmentTemplate",
        "DescribeAssessmentRuns",
        "DescribeAssessmentTargets",
        "DescribeAssessmentTemplates",
        "DescribeCrossAccountAccessRole",
        "DescribeFindings",
        "DescribeResourceGroups",
        "DescribeRulesPackages",
        "GetTelemetryMetadata",
        "ListAssessmentRunAgents",
        "ListAssessmentRuns",
        "ListAssessmentTargets",
        "ListAssessmentTemplates",
        "ListEventSubscriptions",
        "ListFindings",
        "ListRulesPackages",
        "ListTagsForResource",
        "PreviewAgents",
        "RegisterCrossAccountAccessRole",
        "RemoveAttributesFromFindings",
        "SetTagsForResource",
        "StartAssessmentRun",
        "StopAssessmentRun",
        "SubscribeToEvent",
        "UnsubscribeFromEvent",
        "UpdateAssessmentTarget"
      ],
      "HasResource": false,
      "StringPrefix": "inspector"
    },
    "Amazon Kendra": {
      "ARNFormat": "arn:${Partition}:kendra:${Region}:${AccountId}:${ResourceType}/${ResourceName}",
      "ARNRegex": "^arn:${Partition}:kendra:.+:.+:.+",
      "Actions": [
        "BatchDeleteDocument",
        "BatchPutDocument",
        "CreateDataSource",
        "CreateFaq",
        "CreateIndex",
        "DeleteDataSource",
        "DeleteFaq",
        "DeleteIndex",
        "DescribeDataSource",
        "DescribeFaq",
        "DescribeIndex",
        "ListDataSourceSyncJobs",
        "ListDataSources",
        "ListFaqs",
        "ListIndices",
        "ListTagsForResource",
        "Query",
        "StartDataSourceSyncJob",
        "StopDataSourceSyncJob",
        "SubmitFeedback",
        "TagResource",
        "UntagResource",
        "UpdateDataSource",
        "UpdateIndex"
      ],
      "HasResource": true,
      "StringPrefix": "kendra",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon Keyspaces (for Apache Cassandra)": {
      "ARNFormat": "arn:${Partition}:cassandra:${region}:${account}:/${resourceType}/${resourcePath}/",
      "ARNRegex": "^arn:${Partition}:cassandra:.+",
      "Actions": [
        "Alter",
        "Create",
        "Drop",
        "Modify",
        "Select",
        "TagResource",
        "UntagResource"
      ],
      "HasResource": true,
      "StringPrefix": "cassandra",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon Kinesis": {
      "ARNFormat": "arn:aws:kinesis:<region>:<account>:<resourceType>/<resourceName>",
      "ARNRegex": "^arn:aws:kinesis:.+",
      "Actions": [
        "AddTagsToStream",
        "CreateStream",
        "DecreaseStreamRetentionPeriod",
        "DeleteStream",
        "DeregisterStreamConsumer",
        "DescribeLimits",
        "DescribeStream",
        "DescribeStreamConsumer",
        "DescribeStreamSummary",
        "DisableEnhancedMonitoring",
        "EnableEnhancedMonitoring",
        "GetRecords",
        "GetShardIterator",
        "IncreaseStreamRetentionPeriod",
        "ListShards",
        "ListStreamConsumers",
        "ListStreams",
        "ListTagsForStream",
        "MergeShards",
        "PutRecord",
        "PutRecords",
        "RegisterStreamConsumer",
        "RemoveTagsFromStream",
        "SplitShard",
        "SubscribeToShard",
        "UpdateShardCount"
      ],
      "HasResource": true,
      "StringPrefix": "kinesis"
    },
    "Amazon Kinesis Analytics": {
      "ARNFormat": "arn:aws:kinesisanalytics:<region>:<account_ID>:application/<applicationname>",
      "ARNRegex": "^arn:aws:kinesisanalytics:.+:[0-9]+:application/[a-zA-Z0-9_.-]+",
      "Actions": [
        "AddApplicationInput",
        "AddApplicationOutput",
        "AddApplicationReferenceDataSource",
        "CreateApplication",
        "DeleteApplication",
        "DeleteApplicationOutput",
        "DeleteApplicationReferenceDataSource",
        "DescribeApplication",
        "DiscoverInputSchema",
        "GetApplicationState",
        "ListApplications",
        "ListTagsForResource",
        "StartApplication",
        "StopApplication",
        "TagResource",
        "UntagResource",
        "UpdateApplication"
      ],
      "HasResource": true,
      "StringPrefix": "kinesisanalytics",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon Kinesis Analytics V2": {
      "ARNFormat": "arn:aws:kinesisanalytics:<region>:<account_ID>:application/<applicationname>",
      "ARNRegex": "^arn:aws:kinesisanalytics:.+:[0-9]+:application/[a-zA-Z0-9_.-]+",
      "Actions": [
        "AddApplicationCloudWatchLoggingOption",
        "AddApplicationInput",
        "AddApplicationInputProcessingConfiguration",
        "AddApplicationOutput",
        "AddApplicationReferenceDataSource",
        "AddApplicationVpcConfiguration",
        "CreateApplication",
        "CreateApplicationSnapshot",
        "DeleteApplication",
        "DeleteApplicationCloudWatchLoggingOption",
        "DeleteApplicationInputProcessingConfiguration",
        "DeleteApplicationOutput",
        "DeleteApplicationReferenceDataSource",
        "DeleteApplicationSnapshot",
        "DeleteApplicationVpcConfiguration",
        "DescribeApplication",
        "DescribeApplicationSnapshot",
        "DiscoverInputSchema",
        "ListApplicationSnapshots",
        "ListApplications",
        "ListTagsForResource",
        "StartApplication",
        "StopApplication",
        "TagResource",
        "UntagResource",
        "UpdateApplication"
      ],
      "HasResource": true,
      "StringPrefix": "kinesisanalytics",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon Kinesis Firehose": {
      "ARNFormat": "arn:aws:firehose:<region>:<account_ID>:deliverystream/<deliverystreamname>",
      "ARNRegex": "^arn:aws:firehose:.+:[0-9]+:deliverystream/.+",
      "Actions": [
        "CreateDeliveryStream",
        "DeleteDeliveryStream",
        "DescribeDeliveryStream",
        "ListDeliveryStreams",
        "ListTagsForDeliveryStream",
        "PutRecord",
        "PutRecordBatch",
        "StartDeliveryStreamEncryption",
        "StopDeliveryStreamEncryption",
        "TagDeliveryStream",
        "UntagDeliveryStream",
        "UpdateDestination"
      ],
      "HasResource": true,
      "StringPrefix": "firehose",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon Kinesis Video Streams": {
      "ARNFormat": "arn:aws:kinesisvideo:<region>:<account_ID>:<resourceType>/<resourceName>/<creationTime>",
      "ARNRegex": "^arn:aws:kinesisvideo:.+",
      "Actions": [
        "ConnectAsMaster",
        "ConnectAsViewer",
        "CreateSignalingChannel",
        "CreateStream",
        "DeleteSignalingChannel",
        "DeleteStream",
        "DescribeSignalingChannel",
        "DescribeStream",
        "GetClip",
        "GetDASHStreamingSessionURL",
        "GetDataEndpoint",
        "GetHLSStreamingSessionURL",
        "GetIceServerConfig",
        "GetMedia",
        "GetMediaForFragmentList",
        "GetSignalingChannelEndpoint",
        "ListFragments",
        "ListSignalingChannels",
        "ListStreams",
        "ListTagsForResource",
        "ListTagsForStream",
        "PutMedia",
        "SendAlexaOfferToMaster",
        "TagResource",
        "TagStream",
        "UntagResource",
        "UntagStream",
        "UpdateDataRetention",
        "UpdateSignalingChannel",
        "UpdateStream",
        "StartStreamEncryption"
      ],
      "HasResource": true,
      "StringPrefix": "kinesisvideo",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon Lex": {
      "ARNFormat": "arn:aws:lex:<region>:<account_ID>:<type>:<name>",
      "ARNRegex": "^arn:aws:lex:.+:[0-9]+:.+",
      "Actions": [
        "CreateBotVersion",
        "CreateIntentVersion",
        "CreateSlotTypeVersion",
        "DeleteBot",
        "DeleteBotAlias",
        "DeleteBotChannelAssociation",
        "DeleteBotVersion",
        "DeleteIntent",
        "DeleteIntentVersion",
        "DeleteSession",
        "DeleteSlotType",
        "DeleteSlotTypeVersion",
        "DeleteUtterances",
        "GetBot",
        "GetBotAlias",
        "GetBotAliases",
        "GetBotChannelAssociation",
        "GetBotChannelAssociations",
        "GetBotVersions",
        "GetBots",
        "GetBuiltinIntent",
        "GetBuiltinIntents",
        "GetBuiltinSlotTypes",
        "GetExport",
        "GetImport",
        "GetIntent",
        "GetIntentVersions",
        "GetIntents",
        "GetSession",
        "GetSlotType",
        "GetSlotTypeVersions",
        "GetSlotTypes",
        "GetUtterancesView",
        "ListTagsForResource",
        "PostContent",
        "PostText",
        "PutBot",
        "PutBotAlias",
        "PutIntent",
        "PutSession",
        "PutSlotType",
        "StartImport",
        "TagResource",
        "UntagResource"
      ],
      "HasResource": true,
      "StringPrefix": "lex",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "lex:associatedIntents",
        "lex:associatedSlotTypes",
        "lex:channelType"
      ]
    },
    "Amazon Lightsail": {
      "ARNFormat": "arn:aws:lightsail:<regionName>:<userAccountId>:<resourceType>/<Id>",
      "ARNRegex": "arn:aws:lightsail:.+",
      "Actions": [
        "AllocateStaticIp",
        "AttachDisk",
        "AttachInstancesToLoadBalancer",
        "AttachLoadBalancerTlsCertificate",
        "AttachStaticIp",
        "CloseInstancePublicPorts",
        "CopySnapshot",
        "CreateCloudFormationStack",
        "CreateDisk",
        "CreateDiskFromSnapshot",
        "CreateDiskSnapshot",
        "CreateDomain",
        "CreateDomainEntry",
        "CreateInstanceSnapshot",
        "CreateInstances",
        "CreateInstancesFromSnapshot",
        "CreateKeyPair",
        "CreateLoadBalancer",
        "CreateLoadBalancerTlsCertificate",
        "CreateRelationalDatabase",
        "CreateRelationalDatabaseFromSnapshot",
        "CreateRelationalDatabaseSnapshot",
        "DeleteDisk",
        "DeleteDiskSnapshot",
        "DeleteDomain",
        "DeleteDomainEntry",
        "DeleteInstance",
        "DeleteInstanceSnapshot",
        "DeleteKeyPair",
        "DeleteKnownHostKeys",
        "DeleteLoadBalancer",
        "DeleteLoadBalancerTlsCertificate",
        "DeleteRelationalDatabase",
        "DeleteRelationalDatabaseSnapshot",
        "DetachDisk",
        "DetachInstancesFromLoadBalancer",
        "DetachStaticIp",
        "DownloadDefaultKeyPair",
        "ExportSnapshot",
        "GetActiveNames",
        "GetBlueprints",
        "GetBundles",
        "GetCloudFormationStackRecords",
        "GetDisk",
        "GetDiskSnapshot",
        "GetDiskSnapshots",
        "GetDisks",
        "GetDomain",
        "GetDomains",
        "GetExportSnapshotRecords",
        "GetInstance",
        "GetInstanceAccessDetails",
        "GetInstanceMetricData",
        "GetInstancePortStates",
        "GetInstanceSnapshot",
        "GetInstanceSnapshots",
        "GetInstanceState",
        "GetInstances",
        "GetKeyPair",
        "GetKeyPairs",
        "GetLoadBalancer",
        "GetLoadBalancerMetricData",
        "GetLoadBalancerTlsCertificates",
        "GetLoadBalancers",
        "GetOperation",
        "GetOperations",
        "GetOperationsForResource",
        "GetRegions",
        "GetRelationalDatabase",
        "GetRelationalDatabaseBlueprints",
        "GetRelationalDatabaseBundles",
        "GetRelationalDatabaseEvents",
        "GetRelationalDatabaseLogEvents",
        "GetRelationalDatabaseLogStreams",
        "GetRelationalDatabaseMasterUserPassword",
        "GetRelationalDatabaseMetricData",
        "GetRelationalDatabaseParameters",
        "GetRelationalDatabaseSnapshot",
        "GetRelationalDatabaseSnapshots",
        "GetRelationalDatabases",
        "GetStaticIp",
        "GetStaticIps",
        "ImportKeyPair",
        "IsVpcPeered",
        "OpenInstancePublicPorts",
        "PeerVpc",
        "PutInstancePublicPorts",
        "RebootInstance",
        "RebootRelationalDatabase",
        "ReleaseStaticIp",
        "StartInstance",
        "StartRelationalDatabase",
        "StopInstance",
        "StopRelationalDatabase",
        "TagResource",
        "UnpeerVpc",
        "UntagResource",
        "UpdateDomainEntry",
        "UpdateLoadBalancerAttribute",
        "UpdateRelationalDatabase",
        "UpdateRelationalDatabaseParameters"
      ],
      "HasResource": true,
      "StringPrefix": "lightsail",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon MQ": {
      "ARNFormat": "arn:${Partition}:mq:<region>:<account>:.+",
      "ARNRegex": "^arn:${Partition}:mq:.+",
      "Actions": [
        "CreateBroker",
        "CreateConfiguration",
        "CreateTags",
        "CreateUser",
        "DeleteBroker",
        "DeleteTags",
        "DeleteUser",
        "DescribeBroker",
        "DescribeBrokerEngineTypes",
        "DescribeBrokerInstanceOptions",
        "DescribeConfiguration",
        "DescribeConfigurationRevision",
        "DescribeUser",
        "ListBrokers",
        "ListConfigurationRevisions",
        "ListConfigurations",
        "ListTags",
        "ListUsers",
        "RebootBroker",
        "UpdateBroker",
        "UpdateConfiguration",
        "UpdateUser"
      ],
      "HasResource": true,
      "StringPrefix": "mq",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon Machine Learning": {
      "ARNFormat": "arn:aws:machinelearning:<region>:<account_ID>:<resource_type>/<relative_ID>",
      "ARNRegex": "^arn:aws:machinelearning:.+",
      "Actions": [
        "AddTags",
        "CreateBatchPrediction",
        "CreateDataSourceFromRDS",
        "CreateDataSourceFromRedshift",
        "CreateDataSourceFromS3",
        "CreateEvaluation",
        "CreateMLModel",
        "CreateRealtimeEndpoint",
        "DeleteBatchPrediction",
        "DeleteDataSource",
        "DeleteEvaluation",
        "DeleteMLModel",
        "DeleteRealtimeEndpoint",
        "DeleteTags",
        "DescribeBatchPredictions",
        "DescribeDataSources",
        "DescribeEvaluations",
        "DescribeMLModels",
        "DescribeTags",
        "GetBatchPrediction",
        "GetDataSource",
        "GetEvaluation",
        "GetMLModel",
        "Predict",
        "UpdateBatchPrediction",
        "UpdateDataSource",
        "UpdateEvaluation",
        "UpdateMLModel"
      ],
      "HasResource": true,
      "StringPrefix": "machinelearning"
    },
    "Amazon Macie": {
      "ARNFormat": "arn:aws:macie2:<region>:<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:macie2:.+:.+:.+",
      "Actions": [
        "AcceptInvitation",
        "ArchiveFindings",
        "BatchGetCustomDataIdentifiers",
        "CreateClassificationJob",
        "CreateCustomDataIdentifier",
        "CreateFindingsFilter",
        "CreateInvitations",
        "CreateMember",
        "CreateSampleFindings",
        "DeclineInvitations",
        "DeleteCustomDataIdentifier",
        "DeleteFindingsFilter",
        "DeleteInvitations",
        "DeleteMember",
        "DescribeBuckets",
        "DescribeClassificationJob",
        "DescribeOrganizationConfiguration",
        "DisableMacie",
        "DisableOrganizationAdminAccount",
        "DisassociateFromMasterAccount",
        "DisassociateMember",
        "EnableMacie",
        "EnableOrganizationAdminAccount",
        "GetBucketStatistics",
        "GetClassificationExportConfiguration",
        "GetCustomDataIdentifier",
        "GetFindingStatistics",
        "GetFindings",
        "GetFindingsFilter",
        "GetInvitationsCount",
        "GetMacieSession",
        "GetMasterAccount",
        "GetMember",
        "GetUsageStatistics",
        "GetUsageTotals",
        "ListClassificationJobs",
        "ListCustomDataIdentifiers",
        "ListFindings",
        "ListFindingsFilters",
        "ListInvitations",
        "ListMembers",
        "ListOrganizationAdminAccounts",
        "ListTagsForResources",
        "PutClassificationExportConfiguration",
        "TagResource",
        "TestCustomDataIdentifier",
        "UnarchiveFindings",
        "UntagResource",
        "UpdateClassificationJob",
        "UpdateFindingsFilter",
        "UpdateMacieSession",
        "UpdateMemberSession",
        "UpdateOrganizationConfiguration"
      ],
      "HasResource": true,
      "StringPrefix": "macie2",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon Macie Classic": {
      "Actions": [
        "AssociateMemberAccount",
        "AssociateS3Resources",
        "DisassociateMemberAccount",
        "DisassociateS3Resources",
        "ListMemberAccounts",
        "ListS3Resources",
        "UpdateS3Resources"
      ],
      "HasResource": false,
      "StringPrefix": "macie",
      "conditionKeys": [
        "aws:SourceArn"
      ]
    },
    "Amazon Managed Blockchain": {
      "ARNFormat": "arn:aws:managedblockchain:<region>:<accountId>:<resourceType>/<resourcePath>",
      "ARNRegex": "^arn:aws:managedblockchain:.+:[0-9]+:.+",
      "Actions": [
        "CreateMember",
        "CreateNetwork",
        "CreateNode",
        "CreateProposal",
        "DeleteMember",
        "DeleteNode",
        "GetMember",
        "GetNetwork",
        "GetNode",
        "GetProposal",
        "ListInvitations",
        "ListMembers",
        "ListNetworks",
        "ListNodes",
        "ListProposalVotes",
        "ListProposals",
        "RejectInvitation",
        "UpdateMember",
        "UpdateNode",
        "VoteOnProposal"
      ],
      "HasResource": true,
      "StringPrefix": "managedblockchain"
    },
    "Amazon Managed Streaming for Kafka": {
      "ARNFormat": "arn:aws:kafka:<region>:<account>:<resourceType>/<resourceName>/<UUID>",
      "ARNRegex": "^arn:aws:kafka:.+",
      "Actions": [
        "CreateCluster",
        "CreateConfiguration",
        "DeleteCluster",
        "DescribeCluster",
        "DescribeClusterOperation",
        "DescribeConfiguration",
        "DescribeConfigurationRevision",
        "GetBootstrapBrokers",
        "GetCompatibleKafkaVersions",
        "ListClusterOperations",
        "ListClusters",
        "ListConfigurations",
        "ListNodes",
        "ListTagsForResource",
        "TagResource",
        "UntagResource",
        "UpdateBrokerCount",
        "UpdateBrokerStorage",
        "UpdateClusterConfiguration",
        "UpdateClusterKafkaVersion",
        "UpdateMonitoring"
      ],
      "HasResource": true,
      "StringPrefix": "kafka",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon Mechanical Turk": {
      "Actions": [
        "AcceptQualificationRequest",
        "ApproveAssignment",
        "AssociateQualificationWithWorker",
        "CreateAdditionalAssignmentsForHIT",
        "CreateHIT",
        "CreateHITType",
        "CreateHITWithHITType",
        "CreateQualificationType",
        "CreateWorkerBlock",
        "DeleteHIT",
        "DeleteQualificationType",
        "DeleteWorkerBlock",
        "DisassociateQualificationFromWorker",
        "GetAccountBalance",
        "GetAssignment",
        "GetFileUploadURL",
        "GetHIT",
        "GetQualificationScore",
        "GetQualificationType",
        "ListAssignmentsForHIT",
        "ListBonusPayments",
        "ListHITs",
        "ListHITsForQualificationType",
        "ListQualificationRequests",
        "ListQualificationTypes",
        "ListReviewPolicyResultsForHIT",
        "ListReviewableHITs",
        "ListWorkerBlocks",
        "ListWorkersWithQualificationType",
        "NotifyWorkers",
        "RejectAssignment",
        "RejectQualificationRequest",
        "SendBonus",
        "SendTestEventNotification",
        "UpdateExpirationForHIT",
        "UpdateHITReviewStatus",
        "UpdateHITTypeOfHIT",
        "UpdateNotificationSettings",
        "UpdateQualificationType"
      ],
      "HasResource": false,
      "StringPrefix": "mechanicalturk"
    },
    "Amazon Message Delivery Service": {
      "Actions": [
        "AcknowledgeMessage",
        "DeleteMessage",
        "FailMessage",
        "GetEndpoint",
        "GetMessages",
        "SendReply"
      ],
      "HasResource": false,
      "StringPrefix": "ec2messages"
    },
    "Amazon Mobile Analytics": {
      "Actions": [
        "GetFinancialReports",
        "GetReports",
        "PutEvents"
      ],
      "HasResource": false,
      "StringPrefix": "mobileanalytics"
    },
    "Amazon Neptune": {
      "ARNFormat": "arn:aws:neptune-db:<region>:<accountID>:<relative-id>",
      "ARNRegex": "^arn:aws:neptune-db:.+",
      "Actions": [
        "connect"
      ],
      "HasResource": true,
      "StringPrefix": "neptune-db"
    },
    "Amazon Personalize": {
      "ARNFormat": "arn:aws:personalize:<region>:<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:personalize:.+:.+:.+",
      "Actions": [
        "CreateCampaign",
        "CreateDataset",
        "CreateDatasetGroup",
        "CreateDatasetImportJob",
        "CreateEventTracker",
        "CreateSchema",
        "CreateSolution",
        "CreateSolutionVersion",
        "DeleteCampaign",
        "DeleteDataset",
        "DeleteDatasetGroup",
        "DeleteEventTracker",
        "DeleteSchema",
        "DeleteSolution",
        "DescribeAlgorithm",
        "DescribeCampaign",
        "DescribeDataset",
        "DescribeDatasetGroup",
        "DescribeDatasetImportJob",
        "DescribeEventTracker",
        "DescribeFeatureTransformation",
        "DescribeRecipe",
        "DescribeSchema",
        "DescribeSolution",
        "DescribeSolutionVersion",
        "GetPersonalizedRanking",
        "GetRecommendations",
        "GetSolutionMetrics",
        "ListCampaigns",
        "ListDatasetGroups",
        "ListDatasetImportJobs",
        "ListDatasets",
        "ListEventTrackers",
        "ListRecipes",
        "ListSchemas",
        "ListSolutionVersions",
        "ListSolutions",
        "PutEvents",
        "UpdateCampaign"
      ],
      "HasResource": true,
      "StringPrefix": "personalize"
    },
    "Amazon Pinpoint": {
      "ARNFormat": "arn:aws:mobiletargeting:<region>:<account_ID>:.+",
      "ARNRegex": "^arn:aws:mobiletargeting:.+",
      "Actions": [
        "CreateApp",
        "CreateCampaign",
        "CreateEmailTemplate",
        "CreateExportJob",
        "CreateImportJob",
        "CreateJourney",
        "CreatePushTemplate",
        "CreateRecommenderConfiguration",
        "CreateSegment",
        "CreateSmsTemplate",
        "CreateVoiceTemplate",
        "DeleteAdmChannel",
        "DeleteApnsChannel",
        "DeleteApnsSandboxChannel",
        "DeleteApnsVoipChannel",
        "DeleteApnsVoipSandboxChannel",
        "DeleteApp",
        "DeleteBaiduChannel",
        "DeleteCampaign",
        "DeleteEmailChannel",
        "DeleteEmailTemplate",
        "DeleteEndpoint",
        "DeleteEventStream",
        "DeleteGcmChannel",
        "DeleteJourney",
        "DeletePushTemplate",
        "DeleteRecommenderConfiguration",
        "DeleteSegment",
        "DeleteSmsChannel",
        "DeleteSmsTemplate",
        "DeleteUserEndpoints",
        "DeleteVoiceChannel",
        "DeleteVoiceTemplate",
        "GetAdmChannel",
        "GetApnsChannel",
        "GetApnsSandboxChannel",
        "GetApnsVoipChannel",
        "GetApnsVoipSandboxChannel",
        "GetApp",
        "GetApplicationSettings",
        "GetApps",
        "GetBaiduChannel",
        "GetCampaign",
        "GetCampaignActivities",
        "GetCampaignVersion",
        "GetCampaignVersions",
        "GetCampaigns",
        "GetChannels",
        "GetEmailChannel",
        "GetEmailTemplate",
        "GetEndpoint",
        "GetEventStream",
        "GetExportJob",
        "GetExportJobs",
        "GetGcmChannel",
        "GetImportJob",
        "GetImportJobs",
        "GetJourney",
        "GetPushTemplate",
        "GetRecommenderConfiguration",
        "GetRecommenderConfigurations",
        "GetSegment",
        "GetSegmentExportJobs",
        "GetSegmentImportJobs",
        "GetSegmentVersion",
        "GetSegmentVersions",
        "GetSegments",
        "GetSmsChannel",
        "GetSmsTemplate",
        "GetUserEndpoints",
        "GetVoiceChannel",
        "GetVoiceTemplate",
        "ListJourneys",
        "ListTagsForResource",
        "ListTemplateVersions",
        "ListTemplates",
        "PhoneNumberValidate",
        "PutEventStream",
        "PutEvents",
        "RemoveAttributes",
        "SendMessages",
        "SendUsersMessages",
        "TagResource",
        "UntagResource",
        "UpdateAdmChannel",
        "UpdateApnsChannel",
        "UpdateApnsSandboxChannel",
        "UpdateApnsVoipChannel",
        "UpdateApnsVoipSandboxChannel",
        "UpdateApplicationSettings",
        "UpdateBaiduChannel",
        "UpdateCampaign",
        "UpdateEmailChannel",
        "UpdateEmailTemplate",
        "UpdateEndpoint",
        "UpdateEndpointsBatch",
        "UpdateGcmChannel",
        "UpdateJourney",
        "UpdateJourneyState",
        "UpdatePushTemplate",
        "UpdateRecommenderConfiguration",
        "UpdateSegment",
        "UpdateSmsChannel",
        "UpdateSmsTemplate",
        "UpdateTemplateActiveVersion",
        "UpdateVoiceChannel",
        "UpdateVoiceTemplate"
      ],
      "HasResource": true,
      "StringPrefix": "mobiletargeting",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon Pinpoint Email Service": {
      "ARNFormat": "arn:aws:ses:<region>:<account_ID>:<arn_type>/<resource_id>",
      "ARNRegex": "^arn:aws:ses:.+:[0-9]+:.+",
      "Actions": [
        "CreateConfigurationSet",
        "CreateConfigurationSetEventDestination",
        "CreateDedicatedIpPool",
        "CreateDeliverabilityTestReport",
        "CreateEmailIdentity",
        "DeleteConfigurationSet",
        "DeleteConfigurationSetEventDestination",
        "DeleteDedicatedIpPool",
        "DeleteEmailIdentity",
        "GetAccount",
        "GetBlacklistReports",
        "GetConfigurationSet",
        "GetConfigurationSetEventDestinations",
        "GetDedicatedIp",
        "GetDedicatedIps",
        "GetDeliverabilityDashboardOptions",
        "GetDeliverabilityTestReport",
        "GetDomainStatisticsReport",
        "GetEmailIdentity",
        "ListConfigurationSets",
        "ListDedicatedIpPools",
        "ListDeliverabilityTestReports",
        "ListEmailIdentities",
        "ListTagsForResource",
        "PutAccountDedicatedIpWarmupAttributes",
        "PutAccountSendingAttributes",
        "PutConfigurationSetDeliveryOptions",
        "PutConfigurationSetReputationOptions",
        "PutConfigurationSetSendingOptions",
        "PutConfigurationSetTrackingOptions",
        "PutDedicatedIpInPool",
        "PutDedicatedIpWarmupAttributes",
        "PutDeliverabilityDashboardOption",
        "PutEmailIdentityDkimAttributes",
        "PutEmailIdentityFeedbackAttributes",
        "PutEmailIdentityMailFromAttributes",
        "SendEmail",
        "TagResource",
        "UntagResource",
        "UpdateConfigurationSetEventDestination"
      ],
      "HasResource": true,
      "StringPrefix": "ses",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "ses:FeedbackAddress",
        "ses:FromAddress",
        "ses:FromDisplayName",
        "ses:Recipients"
      ]
    },
    "Amazon Pinpoint SMS and Voice Service": {
      "ARNFormat": "arn:aws:sms-voice:<region>:<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:sms-voice:.+:.+:.+",
      "Actions": [
        "CreateConfigurationSet",
        "CreateConfigurationSetEventDestination",
        "DeleteConfigurationSet",
        "DeleteConfigurationSetEventDestination",
        "GetConfigurationSetEventDestinations",
        "ListConfigurationSets",
        "SendVoiceMessage",
        "UpdateConfigurationSetEventDestination"
      ],
      "HasResource": false,
      "StringPrefix": "sms-voice"
    },
    "Amazon Polly": {
      "ARNFormat": "arn:aws:polly:<region>:<accountID>:<relative-id>",
      "ARNRegex": "^arn:aws:polly::.+",
      "Actions": [
        "DeleteLexicon",
        "DescribeVoices",
        "GetLexicon",
        "GetSpeechSynthesisTask",
        "ListLexicons",
        "ListSpeechSynthesisTasks",
        "PutLexicon",
        "StartSpeechSynthesisTask",
        "SynthesizeSpeech"
      ],
      "HasResource": true,
      "StringPrefix": "polly"
    },
    "Amazon QLDB": {
      "ARNFormat": "arn:${Partition}:qldb:${region}:${account}:${resourceType}/${resourcePath}",
      "ARNRegex": "^arn:${Partition}:qldb:.+",
      "Actions": [
        "CancelJournalKinesisStream",
        "CreateLedger",
        "DeleteLedger",
        "DescribeJournalKinesisStream",
        "DescribeJournalS3Export",
        "DescribeLedger",
        "ExecuteStatement",
        "ExportJournalToS3",
        "GetBlock",
        "GetDigest",
        "GetRevision",
        "InsertSampleData",
        "ListJournalKinesisStreamsForLedger",
        "ListJournalS3Exports",
        "ListJournalS3ExportsForLedger",
        "ListLedgers",
        "ListTagsForResource",
        "SendCommand",
        "ShowCatalog",
        "StreamJournalToKinesis",
        "TagResource",
        "UntagResource",
        "UpdateLedger"
      ],
      "HasResource": true,
      "StringPrefix": "qldb",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon QuickSight": {
      "ARNFormat": "arn:aws:quicksight:<region>:<accountId>:<resourceType>/<resourceId>",
      "ARNRegex": "^arn:aws:quicksight:.+",
      "Actions": [
        "CreateAdmin",
        "CreateDashboard",
        "CreateGroup",
        "CreateGroupMembership",
        "CreateIAMPolicyAssignment",
        "CreateReader",
        "CreateTemplate",
        "CreateTemplateAlias",
        "CreateUser",
        "DeleteDashboard",
        "DeleteGroup",
        "DeleteGroupMembership",
        "DeleteIAMPolicyAssignment",
        "DeleteTemplate",
        "DeleteTemplateAlias",
        "DeleteUser",
        "DeleteUserByPrincipalId",
        "DescribeDashboard",
        "DescribeDashboardPermissions",
        "DescribeGroup",
        "DescribeIAMPolicyAssignment",
        "DescribeTemplate",
        "DescribeTemplateAlias",
        "DescribeTemplatePermissions",
        "DescribeUser",
        "GetAuthCode",
        "GetDashboardEmbedUrl",
        "GetGroupMapping",
        "ListDashboardVersions",
        "ListDashboards",
        "ListGroupMemberships",
        "ListGroups",
        "ListIAMPolicyAssignments",
        "ListIAMPolicyAssignmentsForUser",
        "ListTagsForResource",
        "ListTemplateAliases",
        "ListTemplateVersions",
        "ListTemplates",
        "ListUserGroups",
        "ListUsers",
        "RegisterUser",
        "SearchDirectoryGroups",
        "SetGroupMapping",
        "Subscribe",
        "TagResource",
        "Unsubscribe",
        "UntagResource",
        "UpdateDashboard",
        "UpdateDashboardPermissions",
        "UpdateDashboardPublishedVersion",
        "UpdateGroup",
        "UpdateIAMPolicyAssignment",
        "UpdateTemplate",
        "UpdateTemplateAlias",
        "UpdateTemplatePermissions",
        "UpdateUser"
      ],
      "HasResource": true,
      "StringPrefix": "quicksight",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "quicksight:IamArn",
        "quicksight:SessionName",
        "quicksight:UserName"
      ]
    },
    "Amazon RDS": {
      "ARNFormat": "arn:aws:rds:<region>:<accountID>:<relative-id>",
      "ARNRegex": "^arn:aws:rds:.+",
      "Actions": [
        "AddRoleToDBCluster",
        "AddRoleToDBInstance",
        "AddSourceIdentifierToSubscription",
        "AddTagsToResource",
        "ApplyPendingMaintenanceAction",
        "AuthorizeDBSecurityGroupIngress",
        "BacktrackDBCluster",
        "CancelExportTask",
        "CopyDBClusterParameterGroup",
        "CopyDBClusterSnapshot",
        "CopyDBParameterGroup",
        "CopyDBSnapshot",
        "CopyOptionGroup",
        "CreateDBCluster",
        "CreateDBClusterEndpoint",
        "CreateDBClusterParameterGroup",
        "CreateDBClusterSnapshot",
        "CreateDBInstance",
        "CreateDBInstanceReadReplica",
        "CreateDBParameterGroup",
        "CreateDBProxy",
        "CreateDBSecurityGroup",
        "CreateDBSnapshot",
        "CreateDBSubnetGroup",
        "CreateEventSubscription",
        "CreateGlobalCluster",
        "CreateOptionGroup",
        "DeleteDBCluster",
        "DeleteDBClusterEndpoint",
        "DeleteDBClusterParameterGroup",
        "DeleteDBClusterSnapshot",
        "DeleteDBInstance",
        "DeleteDBInstanceAutomatedBackup",
        "DeleteDBParameterGroup",
        "DeleteDBProxy",
        "DeleteDBSecurityGroup",
        "DeleteDBSnapshot",
        "DeleteDBSubnetGroup",
        "DeleteEventSubscription",
        "DeleteGlobalCluster",
        "DeleteOptionGroup",
        "DeregisterDBProxyTargets",
        "DescribeAccountAttributes",
        "DescribeCertificates",
        "DescribeDBClusterBacktracks",
        "DescribeDBClusterEndpoints",
        "DescribeDBClusterParameterGroups",
        "DescribeDBClusterParameters",
        "DescribeDBClusterSnapshotAttributes",
        "DescribeDBClusterSnapshots",
        "DescribeDBClusters",
        "DescribeDBEngineVersions",
        "DescribeDBInstanceAutomatedBackups",
        "DescribeDBInstances",
        "DescribeDBLogFiles",
        "DescribeDBParameterGroups",
        "DescribeDBParameters",
        "DescribeDBProxies",
        "DescribeDBProxyTargetGroups",
        "DescribeDBProxyTargets",
        "DescribeDBSecurityGroups",
        "DescribeDBSnapshotAttributes",
        "DescribeDBSnapshots",
        "DescribeDBSubnetGroups",
        "DescribeEngineDefaultClusterParameters",
        "DescribeEngineDefaultParameters",
        "DescribeEventCategories",
        "DescribeEventSubscriptions",
        "DescribeEvents",
        "DescribeExportTasks",
        "DescribeGlobalClusters",
        "DescribeOptionGroupOptions",
        "DescribeOptionGroups",
        "DescribeOrderableDBInstanceOptions",
        "DescribePendingMaintenanceActions",
        "DescribeReservedDBInstances",
        "DescribeReservedDBInstancesOfferings",
        "DescribeSourceRegions",
        "DescribeValidDBInstanceModifications",
        "DownloadCompleteDBLogFile",
        "DownloadDBLogFilePortion",
        "FailoverDBCluster",
        "ListTagsForResource",
        "ModifyCurrentDBClusterCapacity",
        "ModifyDBCluster",
        "ModifyDBClusterEndpoint",
        "ModifyDBClusterParameterGroup",
        "ModifyDBClusterSnapshotAttribute",
        "ModifyDBInstance",
        "ModifyDBParameterGroup",
        "ModifyDBProxy",
        "ModifyDBProxyTargetGroup",
        "ModifyDBSnapshot",
        "ModifyDBSnapshotAttribute",
        "ModifyDBSubnetGroup",
        "ModifyEventSubscription",
        "ModifyGlobalCluster",
        "ModifyOptionGroup",
        "PromoteReadReplica",
        "PromoteReadReplicaDBCluster",
        "PurchaseReservedDBInstancesOffering",
        "RebootDBInstance",
        "RegisterDBProxyTargets",
        "RemoveFromGlobalCluster",
        "RemoveRoleFromDBCluster",
        "RemoveRoleFromDBInstance",
        "RemoveSourceIdentifierFromSubscription",
        "RemoveTagsFromResource",
        "ResetDBClusterParameterGroup",
        "ResetDBParameterGroup",
        "RestoreDBClusterFromS3",
        "RestoreDBClusterFromSnapshot",
        "RestoreDBClusterToPointInTime",
        "RestoreDBInstanceFromDBSnapshot",
        "RestoreDBInstanceFromS3",
        "RestoreDBInstanceToPointInTime",
        "RevokeDBSecurityGroupIngress",
        "StartActivityStream",
        "StartDBCluster",
        "StartDBInstance",
        "StartExportTask",
        "StopActivityStream",
        "StopDBCluster",
        "StopDBInstance"
      ],
      "HasResource": true,
      "StringPrefix": "rds",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "rds:DatabaseClass",
        "rds:DatabaseEngine",
        "rds:DatabaseName",
        "rds:EndpointType",
        "rds:MultiAz",
        "rds:Piops",
        "rds:StorageEncrypted",
        "rds:StorageSize",
        "rds:Vpc",
        "rds:cluster-pg-tag/${TagKey}",
        "rds:cluster-snapshot-tag/${TagKey}",
        "rds:cluster-tag/${TagKey}",
        "rds:db-tag/${TagKey}",
        "rds:es-tag/${TagKey}",
        "rds:og-tag/${TagKey}",
        "rds:pg-tag/${TagKey}",
        "rds:req-tag/${TagKey}",
        "rds:ri-tag/${TagKey}",
        "rds:secgrp-tag/${TagKey}",
        "rds:snapshot-tag/${TagKey}",
        "rds:subgrp-tag/${TagKey}"
      ]
    },
    "Amazon RDS Data API": {
      "Actions": [
        "BatchExecuteStatement",
        "BeginTransaction",
        "CommitTransaction",
        "ExecuteSql",
        "ExecuteStatement",
        "RollbackTransaction"
      ],
      "HasResource": false,
      "StringPrefix": "rds-data"
    },
    "Amazon RDS IAM Authentication": {
      "ARNFormat": "arn:aws:rds-db:<region>:<account-id>:dbuser:<dbi-resource-id>/<db-user-name>",
      "ARNRegex": "^arn:aws:rds-db:.+",
      "Actions": [
        "connect"
      ],
      "HasResource": true,
      "StringPrefix": "rds-db"
    },
    "Amazon Redshift": {
      "ARNFormat": "arn:aws:redshift:<region>:<accountID>:<relative-id>",
      "ARNRegex": "^arn:aws:redshift:.+:.+:.+",
      "Actions": [
        "AcceptReservedNodeExchange",
        "AuthorizeClusterSecurityGroupIngress",
        "AuthorizeSnapshotAccess",
        "BatchDeleteClusterSnapshots",
        "BatchModifyClusterSnapshots",
        "CancelQuery",
        "CancelQuerySession",
        "CancelResize",
        "CopyClusterSnapshot",
        "CreateCluster",
        "CreateClusterParameterGroup",
        "CreateClusterSecurityGroup",
        "CreateClusterSnapshot",
        "CreateClusterSubnetGroup",
        "CreateClusterUser",
        "CreateEventSubscription",
        "CreateHsmClientCertificate",
        "CreateHsmConfiguration",
        "CreateSavedQuery",
        "CreateScheduledAction",
        "CreateSnapshotCopyGrant",
        "CreateSnapshotSchedule",
        "CreateTags",
        "DeleteCluster",
        "DeleteClusterParameterGroup",
        "DeleteClusterSecurityGroup",
        "DeleteClusterSnapshot",
        "DeleteClusterSubnetGroup",
        "DeleteEventSubscription",
        "DeleteHsmClientCertificate",
        "DeleteHsmConfiguration",
        "DeleteSavedQueries",
        "DeleteScheduledAction",
        "DeleteSnapshotCopyGrant",
        "DeleteSnapshotSchedule",
        "DeleteTags",
        "DescribeAccountAttributes",
        "DescribeClusterDbRevisions",
        "DescribeClusterParameterGroups",
        "DescribeClusterParameters",
        "DescribeClusterSecurityGroups",
        "DescribeClusterSnapshots",
        "DescribeClusterSubnetGroups",
        "DescribeClusterTracks",
        "DescribeClusterVersions",
        "DescribeClusters",
        "DescribeDefaultClusterParameters",
        "DescribeEventCategories",
        "DescribeEventSubscriptions",
        "DescribeEvents",
        "DescribeHsmClientCertificates",
        "DescribeHsmConfigurations",
        "DescribeLoggingStatus",
        "DescribeNodeConfigurationOptions",
        "DescribeOrderableClusterOptions",
        "DescribeQuery",
        "DescribeReservedNodeOfferings",
        "DescribeReservedNodes",
        "DescribeResize",
        "DescribeSavedQueries",
        "DescribeScheduledActions",
        "DescribeSnapshotCopyGrants",
        "DescribeSnapshotSchedules",
        "DescribeStorage",
        "DescribeTable",
        "DescribeTableRestoreStatus",
        "DescribeTags",
        "DisableLogging",
        "DisableSnapshotCopy",
        "EnableLogging",
        "EnableSnapshotCopy",
        "ExecuteQuery",
        "FetchResults",
        "GetClusterCredentials",
        "GetReservedNodeExchangeOfferings",
        "JoinGroup",
        "ListDatabases",
        "ListSavedQueries",
        "ListSchemas",
        "ListTables",
        "ModifyCluster",
        "ModifyClusterDbRevision",
        "ModifyClusterIamRoles",
        "ModifyClusterMaintenance",
        "ModifyClusterParameterGroup",
        "ModifyClusterSnapshot",
        "ModifyClusterSnapshotSchedule",
        "ModifyClusterSubnetGroup",
        "ModifyEventSubscription",
        "ModifySavedQuery",
        "ModifyScheduledAction",
        "ModifySnapshotCopyRetentionPeriod",
        "ModifySnapshotSchedule",
        "PauseCluster",
        "PurchaseReservedNodeOffering",
        "RebootCluster",
        "ResetClusterParameterGroup",
        "ResizeCluster",
        "RestoreFromClusterSnapshot",
        "RestoreTableFromClusterSnapshot",
        "ResumeCluster",
        "RevokeClusterSecurityGroupIngress",
        "RevokeSnapshotAccess",
        "RotateEncryptionKey",
        "ViewQueriesFromConsole",
        "ViewQueriesInConsole"
      ],
      "HasResource": true,
      "StringPrefix": "redshift",
      "conditionKeys": [
        "redshift:DbName",
        "redshift:DbUser",
        "redshift:DurationSeconds"
      ]
    },
    "Amazon Rekognition": {
      "ARNFormat": "arn:aws:rekognition:<region>:<accountID>:<relative-id>",
      "ARNRegex": "^arn:aws:rekognition::.+",
      "Actions": [
        "CompareFaces",
        "CreateCollection",
        "CreateProject",
        "CreateProjectVersion",
        "CreateStreamProcessor",
        "DeleteCollection",
        "DeleteFaces",
        "DeleteProject",
        "DeleteProjectVersion",
        "DeleteStreamProcessor",
        "DescribeCollection",
        "DescribeProjectVersions",
        "DescribeProjects",
        "DescribeStreamProcessor",
        "DetectCustomLabels",
        "DetectFaces",
        "DetectLabels",
        "DetectModerationLabels",
        "DetectText",
        "GetCelebrityInfo",
        "GetCelebrityRecognition",
        "GetContentModeration",
        "GetFaceDetection",
        "GetFaceSearch",
        "GetLabelDetection",
        "GetPersonTracking",
        "GetSegmentDetection",
        "GetTextDetection",
        "IndexFaces",
        "ListCollections",
        "ListFaces",
        "ListStreamProcessors",
        "RecognizeCelebrities",
        "SearchFaces",
        "SearchFacesByImage",
        "StartCelebrityRecognition",
        "StartContentModeration",
        "StartFaceDetection",
        "StartFaceSearch",
        "StartLabelDetection",
        "StartPersonTracking",
        "StartProjectVersion",
        "StartSegmentDetection",
        "StartStreamProcessor",
        "StartTextDetection",
        "StopProjectVersion",
        "StopStreamProcessor"
      ],
      "HasResource": true,
      "StringPrefix": "rekognition"
    },
    "Amazon Resource Group Tagging API": {
      "Actions": [
        "DescribeReportCreation",
        "GetComplianceSummary",
        "GetResources",
        "GetTagKeys",
        "GetTagValues",
        "StartReportCreation",
        "TagResources",
        "UntagResources"
      ],
      "HasResource": false,
      "StringPrefix": "tag"
    },
    "Amazon Route 53": {
      "ARNFormat": "arn:aws:route53:::<resource>/<id>",
      "ARNRegex": "^arn:aws:route53:::.+",
      "Actions": [
        "AssociateVPCWithHostedZone",
        "ChangeResourceRecordSets",
        "ChangeTagsForResource",
        "CreateHealthCheck",
        "CreateHostedZone",
        "CreateQueryLoggingConfig",
        "CreateReusableDelegationSet",
        "CreateTrafficPolicy",
        "CreateTrafficPolicyInstance",
        "CreateTrafficPolicyVersion",
        "CreateVPCAssociationAuthorization",
        "DeleteHealthCheck",
        "DeleteHostedZone",
        "DeleteQueryLoggingConfig",
        "DeleteReusableDelegationSet",
        "DeleteTrafficPolicy",
        "DeleteTrafficPolicyInstance",
        "DeleteVPCAssociationAuthorization",
        "DisassociateVPCFromHostedZone",
        "GetAccountLimit",
        "GetChange",
        "GetCheckerIpRanges",
        "GetGeoLocation",
        "GetHealthCheck",
        "GetHealthCheckCount",
        "GetHealthCheckLastFailureReason",
        "GetHealthCheckStatus",
        "GetHostedZone",
        "GetHostedZoneCount",
        "GetHostedZoneLimit",
        "GetQueryLoggingConfig",
        "GetReusableDelegationSet",
        "GetReusableDelegationSetLimit",
        "GetTrafficPolicy",
        "GetTrafficPolicyInstance",
        "GetTrafficPolicyInstanceCount",
        "ListGeoLocations",
        "ListHealthChecks",
        "ListHostedZones",
        "ListHostedZonesByName",
        "ListQueryLoggingConfigs",
        "ListResourceRecordSets",
        "ListReusableDelegationSets",
        "ListTagsForResource",
        "ListTagsForResources",
        "ListTrafficPolicies",
        "ListTrafficPolicyInstances",
        "ListTrafficPolicyInstancesByHostedZone",
        "ListTrafficPolicyInstancesByPolicy",
        "ListTrafficPolicyVersions",
        "ListVPCAssociationAuthorizations",
        "TestDNSAnswer",
        "UpdateHealthCheck",
        "UpdateHostedZoneComment",
        "UpdateTrafficPolicyComment",
        "UpdateTrafficPolicyInstance"
      ],
      "HasResource": true,
      "StringPrefix": "route53"
    },
    "Amazon Route 53 Resolver": {
      "ARNFormat": "arn:aws:route53resolver:<region>:<account-id>:<resource-type>/<resource-id>",
      "ARNRegex": "^arn:aws:route53resolver:.+:.+:.+",
      "Actions": [
        "AssociateResolverEndpointIpAddress",
        "AssociateResolverRule",
        "CreateResolverEndpoint",
        "CreateResolverRule",
        "DeleteResolverEndpoint",
        "DeleteResolverRule",
        "DisassociateResolverEndpointIpAddress",
        "DisassociateResolverRule",
        "GetResolverEndpoint",
        "GetResolverRule",
        "GetResolverRuleAssociation",
        "GetResolverRulePolicy",
        "ListResolverEndpointIpAddresses",
        "ListResolverEndpoints",
        "ListResolverRuleAssociations",
        "ListResolverRules",
        "ListTagsForResource",
        "PutResolverRulePolicy",
        "TagResource",
        "UntagResource",
        "UpdateResolverEndpoint",
        "UpdateResolverRule"
      ],
      "HasResource": true,
      "StringPrefix": "route53resolver",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon Route53 Domains": {
      "Actions": [
        "CheckDomainAvailability",
        "DeleteTagsForDomain",
        "DisableDomainAutoRenew",
        "DisableDomainTransferLock",
        "EnableDomainAutoRenew",
        "EnableDomainTransferLock",
        "GetContactReachabilityStatus",
        "GetDomainDetail",
        "GetDomainSuggestions",
        "GetOperationDetail",
        "ListDomains",
        "ListOperations",
        "ListTagsForDomain",
        "RegisterDomain",
        "RenewDomain",
        "ResendContactReachabilityEmail",
        "RetrieveDomainAuthCode",
        "TransferDomain",
        "UpdateDomainContact",
        "UpdateDomainContactPrivacy",
        "UpdateDomainNameservers",
        "UpdateTagsForDomain",
        "ViewBilling"
      ],
      "HasResource": false,
      "StringPrefix": "route53domains"
    },
    "Amazon S3": {
      "ARNFormat": "arn:aws:s3:::<bucket_name>/<key_name>",
      "ARNRegex": "^arn:aws:s3:::.+",
      "Actions": [
        "AbortMultipartUpload",
        "BypassGovernanceRetention",
        "CreateAccessPoint",
        "CreateBucket",
        "CreateJob",
        "DeleteAccessPoint",
        "DeleteAccessPointPolicy",
        "DeleteBucket",
        "DeleteBucketPolicy",
        "DeleteBucketWebsite",
        "DeleteObject",
        "DeleteObjectTagging",
        "DeleteObjectVersion",
        "DeleteObjectVersionTagging",
        "DescribeJob",
        "GetAccelerateConfiguration",
        "GetAccessPoint",
        "GetAccessPointPolicy",
        "GetAccessPointPolicyStatus",
        "GetAccountPublicAccessBlock",
        "GetAnalyticsConfiguration",
        "GetBucketAcl",
        "GetBucketCORS",
        "GetBucketLocation",
        "GetBucketLogging",
        "GetBucketNotification",
        "GetBucketObjectLockConfiguration",
        "GetBucketPolicy",
        "GetBucketPolicyStatus",
        "GetBucketPublicAccessBlock",
        "GetBucketRequestPayment",
        "GetBucketTagging",
        "GetBucketVersioning",
        "GetBucketWebsite",
        "GetEncryptionConfiguration",
        "GetInventoryConfiguration",
        "GetLifecycleConfiguration",
        "GetMetricsConfiguration",
        "GetObject",
        "GetObjectAcl",
        "GetObjectLegalHold",
        "GetObjectRetention",
        "GetObjectTagging",
        "GetObjectTorrent",
        "GetObjectVersion",
        "GetObjectVersionAcl",
        "GetObjectVersionForReplication",
        "GetObjectVersionTagging",
        "GetObjectVersionTorrent",
        "GetReplicationConfiguration",
        "HeadBucket",
        "ListAccessPoints",
        "ListAllMyBuckets",
        "ListBucket",
        "ListBucketMultipartUploads",
        "ListBucketVersions",
        "ListJobs",
        "ListMultipartUploadParts",
        "ObjectOwnerOverrideToBucketOwner",
        "PutAccelerateConfiguration",
        "PutAccessPointPolicy",
        "PutAccountPublicAccessBlock",
        "PutAnalyticsConfiguration",
        "PutBucketAcl",
        "PutBucketCORS",
        "PutBucketLogging",
        "PutBucketNotification",
        "PutBucketObjectLockConfiguration",
        "PutBucketPolicy",
        "PutBucketPublicAccessBlock",
        "PutBucketRequestPayment",
        "PutBucketTagging",
        "PutBucketVersioning",
        "PutBucketWebsite",
        "PutEncryptionConfiguration",
        "PutInventoryConfiguration",
        "PutLifecycleConfiguration",
        "PutMetricsConfiguration",
        "PutObject",
        "PutObjectAcl",
        "PutObjectLegalHold",
        "PutObjectRetention",
        "PutObjectTagging",
        "PutObjectVersionAcl",
        "PutObjectVersionTagging",
        "PutReplicationConfiguration",
        "ReplicateDelete",
        "ReplicateObject",
        "ReplicateTags",
        "RestoreObject",
        "UpdateJobPriority",
        "UpdateJobStatus"
      ],
      "HasResource": true,
      "StringPrefix": "s3",
      "conditionKeys": [
        "s3:AccessPointNetworkOrigin",
        "s3:DataAccessPointAccount",
        "s3:DataAccessPointArn",
        "s3:ExistingJobOperation",
        "s3:ExistingJobPriority",
        "s3:ExistingObjectTag/<key>",
        "s3:JobSuspendedCause",
        "s3:LocationConstraint",
        "s3:RequestJobOperation",
        "s3:RequestJobPriority",
        "s3:RequestObjectTag/<key>",
        "s3:RequestObjectTagKeys",
        "s3:VersionId",
        "s3:authtype",
        "s3:delimiter",
        "s3:locationconstraint",
        "s3:max-keys",
        "s3:object-lock-legal-hold",
        "s3:object-lock-mode",
        "s3:object-lock-remaining-retention-days",
        "s3:object-lock-retain-until-date",
        "s3:prefix",
        "s3:signatureage",
        "s3:signatureversion",
        "s3:versionid",
        "s3:x-amz-acl",
        "s3:x-amz-content-sha256",
        "s3:x-amz-copy-source",
        "s3:x-amz-grant-full-control",
        "s3:x-amz-grant-read",
        "s3:x-amz-grant-read-acp",
        "s3:x-amz-grant-write",
        "s3:x-amz-grant-write-acp",
        "s3:x-amz-metadata-directive",
        "s3:x-amz-server-side-encryption",
        "s3:x-amz-server-side-encryption-aws-kms-key-id",
        "s3:x-amz-storage-class",
        "s3:x-amz-website-redirect-location"
      ]
    },
    "Amazon SES": {
      "ARNFormat": "arn:aws:ses:<region>:<account_ID>:<arn_type>/<resource_id>",
      "ARNRegex": "^arn:aws:ses:.+:[0-9]+:.+",
      "Actions": [
        "CloneReceiptRuleSet",
        "CreateConfigurationSet",
        "CreateConfigurationSetEventDestination",
        "CreateConfigurationSetTrackingOptions",
        "CreateCustomVerificationEmailTemplate",
        "CreateReceiptFilter",
        "CreateReceiptRule",
        "CreateReceiptRuleSet",
        "CreateTemplate",
        "DeleteConfigurationSet",
        "DeleteConfigurationSetEventDestination",
        "DeleteConfigurationSetTrackingOptions",
        "DeleteCustomVerificationEmailTemplate",
        "DeleteIdentity",
        "DeleteIdentityPolicy",
        "DeleteReceiptFilter",
        "DeleteReceiptRule",
        "DeleteReceiptRuleSet",
        "DeleteTemplate",
        "DeleteVerifiedEmailAddress",
        "DescribeActiveReceiptRuleSet",
        "DescribeConfigurationSet",
        "DescribeReceiptRule",
        "DescribeReceiptRuleSet",
        "GetAccountSendingEnabled",
        "GetCustomVerificationEmailTemplate",
        "GetIdentityDkimAttributes",
        "GetIdentityMailFromDomainAttributes",
        "GetIdentityNotificationAttributes",
        "GetIdentityPolicies",
        "GetIdentityVerificationAttributes",
        "GetSendQuota",
        "GetSendStatistics",
        "GetTemplate",
        "ListConfigurationSets",
        "ListCustomVerificationEmailTemplates",
        "ListIdentities",
        "ListIdentityPolicies",
        "ListReceiptFilters",
        "ListReceiptRuleSets",
        "ListTemplates",
        "ListVerifiedEmailAddresses",
        "PutIdentityPolicy",
        "ReorderReceiptRuleSet",
        "SendBounce",
        "SendBulkTemplatedEmail",
        "SendCustomVerificationEmail",
        "SendEmail",
        "SendRawEmail",
        "SendTemplatedEmail",
        "SetActiveReceiptRuleSet",
        "SetIdentityDkimEnabled",
        "SetIdentityFeedbackForwardingEnabled",
        "SetIdentityHeadersInNotificationsEnabled",
        "SetIdentityMailFromDomain",
        "SetIdentityNotificationTopic",
        "SetReceiptRulePosition",
        "TestRenderTemplate",
        "UpdateAccountSendingEnabled",
        "UpdateConfigurationSetEventDestination",
        "UpdateConfigurationSetReputationMetricsEnabled",
        "UpdateConfigurationSetSendingEnabled",
        "UpdateConfigurationSetTrackingOptions",
        "UpdateCustomVerificationEmailTemplate",
        "UpdateReceiptRule",
        "UpdateTemplate",
        "VerifyDomainDkim",
        "VerifyDomainIdentity",
        "VerifyEmailAddress",
        "VerifyEmailIdentity"
      ],
      "HasResource": true,
      "StringPrefix": "ses",
      "conditionKeys": [
        "ses:FeedbackAddress",
        "ses:FromAddress",
        "ses:FromDisplayName",
        "ses:Recipients"
      ]
    },
    "Amazon SNS": {
      "ARNFormat": "arn:aws:sns:<region>:<account_ID>:<topic_name>",
      "ARNRegex": "^arn:aws:sns:.+",
      "Actions": [
        "AddPermission",
        "CheckIfPhoneNumberIsOptedOut",
        "ConfirmSubscription",
        "CreatePlatformApplication",
        "CreatePlatformEndpoint",
        "CreateTopic",
        "DeleteEndpoint",
        "DeletePlatformApplication",
        "DeleteTopic",
        "GetEndpointAttributes",
        "GetPlatformApplicationAttributes",
        "GetSMSAttributes",
        "GetSubscriptionAttributes",
        "GetTopicAttributes",
        "ListEndpointsByPlatformApplication",
        "ListPhoneNumbersOptedOut",
        "ListPlatformApplications",
        "ListSubscriptions",
        "ListSubscriptionsByTopic",
        "ListTagsForResource",
        "ListTopics",
        "OptInPhoneNumber",
        "Publish",
        "RemovePermission",
        "SetEndpointAttributes",
        "SetPlatformApplicationAttributes",
        "SetSMSAttributes",
        "SetSubscriptionAttributes",
        "SetTopicAttributes",
        "Subscribe",
        "TagResource",
        "Unsubscribe",
        "UntagResource"
      ],
      "HasResource": true,
      "StringPrefix": "sns",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "sns:Endpoint",
        "sns:Protocol"
      ]
    },
    "Amazon SQS": {
      "ARNFormat": "arn:aws:sqs:<region>:<account_ID>:<queue_name>",
      "ARNRegex": "^arn:aws:sqs:.+",
      "Actions": [
        "AddPermission",
        "ChangeMessageVisibility",
        "ChangeMessageVisibilityBatch",
        "CreateQueue",
        "DeleteMessage",
        "DeleteMessageBatch",
        "DeleteQueue",
        "GetQueueAttributes",
        "GetQueueUrl",
        "ListDeadLetterSourceQueues",
        "ListQueueTags",
        "ListQueues",
        "PurgeQueue",
        "ReceiveMessage",
        "RemovePermission",
        "SendMessage",
        "SendMessageBatch",
        "SetQueueAttributes",
        "TagQueue",
        "UntagQueue"
      ],
      "HasResource": true,
      "StringPrefix": "sqs"
    },
    "Amazon SageMaker": {
      "ARNFormat": "arn:aws:sagemaker:<region>:<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:${Partition}:sagemaker:.+",
      "Actions": [
        "AddTags",
        "AssociateTrialComponent",
        "BatchGetMetrics",
        "BatchPutMetrics",
        "CreateAlgorithm",
        "CreateApp",
        "CreateAutoMLJob",
        "CreateCodeRepository",
        "CreateCompilationJob",
        "CreateDomain",
        "CreateEndpoint",
        "CreateEndpointConfig",
        "CreateExperiment",
        "CreateFlowDefinition",
        "CreateHumanTaskUi",
        "CreateHyperParameterTuningJob",
        "CreateLabelingJob",
        "CreateModel",
        "CreateModelPackage",
        "CreateMonitoringSchedule",
        "CreateNotebookInstance",
        "CreateNotebookInstanceLifecycleConfig",
        "CreatePresignedDomainUrl",
        "CreatePresignedNotebookInstanceUrl",
        "CreateProcessingJob",
        "CreateTrainingJob",
        "CreateTransformJob",
        "CreateTrial",
        "CreateTrialComponent",
        "CreateUserProfile",
        "CreateWorkteam",
        "DeleteAlgorithm",
        "DeleteApp",
        "DeleteCodeRepository",
        "DeleteDomain",
        "DeleteEndpoint",
        "DeleteEndpointConfig",
        "DeleteExperiment",
        "DeleteFlowDefinition",
        "DeleteHumanLoop",
        "DeleteModel",
        "DeleteModelPackage",
        "DeleteMonitoringSchedule",
        "DeleteNotebookInstance",
        "DeleteNotebookInstanceLifecycleConfig",
        "DeleteTags",
        "DeleteTrial",
        "DeleteTrialComponent",
        "DeleteUserProfile",
        "DeleteWorkteam",
        "DescribeAlgorithm",
        "DescribeApp",
        "DescribeAutoMLJob",
        "DescribeCodeRepository",
        "DescribeCompilationJob",
        "DescribeDomain",
        "DescribeEndpoint",
        "DescribeEndpointConfig",
        "DescribeExperiment",
        "DescribeFlowDefinition",
        "DescribeHumanLoop",
        "DescribeHumanTaskUi",
        "DescribeHyperParameterTuningJob",
        "DescribeLabelingJob",
        "DescribeModel",
        "DescribeModelPackage",
        "DescribeMonitoringSchedule",
        "DescribeNotebookInstance",
        "DescribeNotebookInstanceLifecycleConfig",
        "DescribeProcessingJob",
        "DescribeSubscribedWorkteam",
        "DescribeTrainingJob",
        "DescribeTransformJob",
        "DescribeTrial",
        "DescribeTrialComponent",
        "DescribeUserProfile",
        "DescribeWorkforce",
        "DescribeWorkteam",
        "DisassociateTrialComponent",
        "GetSearchSuggestions",
        "InvokeEndpoint",
        "ListAlgorithms",
        "ListApps",
        "ListAutoMLJobs",
        "ListCandidatesForAutoMLJob",
        "ListCodeRepositories",
        "ListCompilationJobs",
        "ListDomains",
        "ListEndpointConfigs",
        "ListEndpoints",
        "ListExperiments",
        "ListFlowDefinitions",
        "ListHumanLoops",
        "ListHumanTaskUis",
        "ListHyperParameterTuningJobs",
        "ListLabelingJobs",
        "ListLabelingJobsForWorkteam",
        "ListModelPackages",
        "ListModels",
        "ListMonitoringExecutions",
        "ListMonitoringSchedules",
        "ListNotebookInstanceLifecycleConfigs",
        "ListNotebookInstances",
        "ListProcessingJobs",
        "ListSubscribedWorkteams",
        "ListTags",
        "ListTrainingJobs",
        "ListTrainingJobsForHyperParameterTuningJob",
        "ListTransformJobs",
        "ListTrialComponents",
        "ListTrials",
        "ListUserProfiles",
        "ListWorkteams",
        "RenderUiTemplate",
        "Search",
        "StartHumanLoop",
        "StartMonitoringSchedule",
        "StartNotebookInstance",
        "StopAutoMLJob",
        "StopCompilationJob",
        "StopHumanLoop",
        "StopHyperParameterTuningJob",
        "StopLabelingJob",
        "StopMonitoringSchedule",
        "StopNotebookInstance",
        "StopProcessingJob",
        "StopTrainingJob",
        "StopTransformJob",
        "UpdateCodeRepository",
        "UpdateDomain",
        "UpdateEndpoint",
        "UpdateEndpointWeightsAndCapacities",
        "UpdateExperiment",
        "UpdateMonitoringSchedule",
        "UpdateNotebookInstance",
        "UpdateNotebookInstanceLifecycleConfig",
        "UpdateTrial",
        "UpdateTrialComponent",
        "UpdateUserProfile",
        "UpdateWorkforce",
        "UpdateWorkteam"
      ],
      "HasResource": true,
      "StringPrefix": "sagemaker",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "sagemaker:AcceleratorTypes",
        "sagemaker:AppNetworkAccess",
        "sagemaker:DirectInternetAccess",
        "sagemaker:DomainSharingOutputKmsKey",
        "sagemaker:FileSystemAccessMode",
        "sagemaker:FileSystemDirectoryPath",
        "sagemaker:FileSystemId",
        "sagemaker:FileSystemType",
        "sagemaker:HomeEfsFileSystemKmsKey",
        "sagemaker:InstanceTypes",
        "sagemaker:InterContainerTrafficEncryption",
        "sagemaker:MaxRuntimeInSeconds",
        "sagemaker:ModelArn",
        "sagemaker:NetworkIsolation",
        "sagemaker:OutputKmsKey",
        "sagemaker:ResourceTag/",
        "sagemaker:ResourceTag/${TagKey}",
        "sagemaker:RootAccess",
        "sagemaker:TargetModel",
        "sagemaker:VolumeKmsKey",
        "sagemaker:VpcSecurityGroupIds",
        "sagemaker:VpcSubnets",
        "sagemaker:WorkteamArn",
        "sagemaker:WorkteamType"
      ]
    },
    "Amazon Session Manager Message Gateway Service": {
      "Actions": [
        "CreateControlChannel",
        "CreateDataChannel",
        "OpenControlChannel",
        "OpenDataChannel"
      ],
      "HasResource": false,
      "StringPrefix": "ssmmessages"
    },
    "Amazon Simple Workflow Service": {
      "ARNFormat": "arn:aws:swf:<region>:<account>:/<domain>/<domainName>",
      "ARNRegex": "^arn:aws:swf:.+",
      "Actions": [
        "CancelTimer",
        "CancelWorkflowExecution",
        "CompleteWorkflowExecution",
        "ContinueAsNewWorkflowExecution",
        "CountClosedWorkflowExecutions",
        "CountOpenWorkflowExecutions",
        "CountPendingActivityTasks",
        "CountPendingDecisionTasks",
        "DeprecateActivityType",
        "DeprecateDomain",
        "DeprecateWorkflowType",
        "DescribeActivityType",
        "DescribeDomain",
        "DescribeWorkflowExecution",
        "DescribeWorkflowType",
        "FailWorkflowExecution",
        "GetWorkflowExecutionHistory",
        "ListActivityTypes",
        "ListClosedWorkflowExecutions",
        "ListDomains",
        "ListOpenWorkflowExecutions",
        "ListTagsForResource",
        "ListWorkflowTypes",
        "PollForActivityTask",
        "PollForDecisionTask",
        "RecordActivityTaskHeartbeat",
        "RecordMarker",
        "RegisterActivityType",
        "RegisterDomain",
        "RegisterWorkflowType",
        "RequestCancelActivityTask",
        "RequestCancelExternalWorkflowExecution",
        "RequestCancelWorkflowExecution",
        "RespondActivityTaskCanceled",
        "RespondActivityTaskCompleted",
        "RespondActivityTaskFailed",
        "RespondDecisionTaskCompleted",
        "ScheduleActivityTask",
        "SignalExternalWorkflowExecution",
        "SignalWorkflowExecution",
        "StartChildWorkflowExecution",
        "StartTimer",
        "StartWorkflowExecution",
        "TagResource",
        "TerminateWorkflowExecution",
        "UntagResource"
      ],
      "HasResource": true,
      "StringPrefix": "swf",
      "conditionKeys": [
        " swf:workflowType.name",
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "swf:activityType.name",
        "swf:activityType.version",
        "swf:defaultTaskList.name",
        "swf:name",
        "swf:tagFilter.tag",
        "swf:tagList.member.0",
        "swf:tagList.member.1",
        "swf:tagList.member.2",
        "swf:tagList.member.3",
        "swf:tagList.member.4",
        "swf:taskList.name",
        "swf:typeFilter.name",
        "swf:typeFilter.version",
        "swf:version",
        "swf:workflowType.name",
        "swf:workflowType.version"
      ]
    },
    "Amazon SimpleDB": {
      "ARNFormat": "arn:aws:sdb:<region>:<account_ID>:domain/<domain_name>",
      "ARNRegex": "^arn:aws:sdb:.+",
      "Actions": [
        "BatchDeleteAttributes",
        "BatchPutAttributes",
        "CreateDomain",
        "DeleteAttributes",
        "DeleteDomain",
        "DomainMetadata",
        "GetAttributes",
        "ListDomains",
        "PutAttributes",
        "Select"
      ],
      "HasResource": true,
      "StringPrefix": "sdb"
    },
    "Amazon Storage Gateway": {
      "ARNFormat": "arn:aws:storagegateway:us-east-1:<account>:<resourceType>/<resourceName>",
      "ARNRegex": "^arn:aws:storagegateway:.+",
      "Actions": [
        "ActivateGateway",
        "AddCache",
        "AddTagsToResource",
        "AddUploadBuffer",
        "AddWorkingStorage",
        "AttachVolume",
        "CancelArchival",
        "CancelRetrieval",
        "CreateCachediSCSIVolume",
        "CreateNFSFileShare",
        "CreateSMBFileShare",
        "CreateSnapshot",
        "CreateSnapshotFromVolumeRecoveryPoint",
        "CreateStorediSCSIVolume",
        "CreateTapeWithBarcode",
        "CreateTapes",
        "DeleteBandwidthRateLimit",
        "DeleteChapCredentials",
        "DeleteFileShare",
        "DeleteGateway",
        "DeleteSnapshotSchedule",
        "DeleteTape",
        "DeleteTapeArchive",
        "DeleteVolume",
        "DescribeBandwidthRateLimit",
        "DescribeCache",
        "DescribeCachediSCSIVolumes",
        "DescribeChapCredentials",
        "DescribeGatewayInformation",
        "DescribeMaintenanceStartTime",
        "DescribeNFSFileShares",
        "DescribeSMBFileShares",
        "DescribeSMBSettings",
        "DescribeSnapshotSchedule",
        "DescribeStorediSCSIVolumes",
        "DescribeTapeArchives",
        "DescribeTapeRecoveryPoints",
        "DescribeTapes",
        "DescribeUploadBuffer",
        "DescribeVTLDevices",
        "DescribeWorkingStorage",
        "DetachVolume",
        "DisableGateway",
        "JoinDomain",
        "ListFileShares",
        "ListGateways",
        "ListLocalDisks",
        "ListTagsForResource",
        "ListTapes",
        "ListVolumeInitiators",
        "ListVolumeRecoveryPoints",
        "ListVolumes",
        "NotifyWhenUploaded",
        "RefreshCache",
        "RemoveTagsFromResource",
        "ResetCache",
        "RetrieveTapeArchive",
        "RetrieveTapeRecoveryPoint",
        "SetLocalConsolePassword",
        "SetSMBGuestPassword",
        "ShutdownGateway",
        "StartGateway",
        "UpdateBandwidthRateLimit",
        "UpdateChapCredentials",
        "UpdateGatewayInformation",
        "UpdateGatewaySoftwareNow",
        "UpdateMaintenanceStartTime",
        "UpdateNFSFileShare",
        "UpdateSMBFileShare",
        "UpdateSnapshotSchedule",
        "UpdateVTLDeviceType"
      ],
      "HasResource": true,
      "StringPrefix": "storagegateway",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon Sumerian": {
      "ARNFormat": "arn:aws:sumerian:<region>:<account-id>:<sumerian_resource_path>",
      "ARNRegex": "^arn:aws:sumerian:.+:.+:.+",
      "Actions": [
        "Login",
        "ViewRelease"
      ],
      "HasResource": true,
      "StringPrefix": "sumerian"
    },
    "Amazon Textract": {
      "ARNFormat": "arn:aws:textract:<region>:<accountID>:<relative-id>",
      "ARNRegex": "^arn:aws:textract::.+",
      "Actions": [
        "AnalyzeDocument",
        "DetectDocumentText",
        "GetDocumentAnalysis",
        "GetDocumentTextDetection",
        "StartDocumentAnalysis",
        "StartDocumentTextDetection"
      ],
      "HasResource": false,
      "StringPrefix": "textract"
    },
    "Amazon Transcribe": {
      "ARNFormat": "arn:${Partition}:transcribe:${Region}:${AccountId}:${ResourceType}/${ResourceName}",
      "ARNRegex": "^arn:${Partition}:transcribe:.+:.+:.+",
      "Actions": [
        "CreateMedicalVocabulary",
        "CreateVocabulary",
        "CreateVocabularyFilter",
        "DeleteMedicalTranscriptionJob",
        "DeleteMedicalVocabulary",
        "DeleteTranscriptionJob",
        "DeleteVocabulary",
        "DeleteVocabularyFilter",
        "GetMedicalTranscriptionJob",
        "GetMedicalVocabulary",
        "GetTranscriptionJob",
        "GetVocabulary",
        "GetVocabularyFilter",
        "ListMedicalTranscriptionJobs",
        "ListMedicalVocabularies",
        "ListTranscriptionJobs",
        "ListVocabularies",
        "ListVocabularyFilters",
        "StartMedicalStreamTranscription",
        "StartMedicalStreamTranscriptionWebSocket",
        "StartMedicalTranscriptionJob",
        "StartStreamTranscription",
        "StartStreamTranscriptionWebSocket",
        "StartTranscriptionJob",
        "UpdateMedicalVocabulary",
        "UpdateVocabulary",
        "UpdateVocabularyFilter"
      ],
      "HasResource": false,
      "StringPrefix": "transcribe"
    },
    "Amazon Translate": {
      "ARNFormat": "arn:${Partition}:translate:${Region}:${AccountId}:${ResourceType}/${ResourceName}",
      "ARNRegex": "^arn:${Partition}:translate:.+:.+:.+",
      "Actions": [
        "DeleteTerminology",
        "DescribeTextTranslationJob",
        "GetTerminology",
        "ImportTerminology",
        "ListTerminologies",
        "ListTextTranslationJobs",
        "StartTextTranslationJob",
        "StopTextTranslationJob",
        "TranslateText"
      ],
      "HasResource": false,
      "StringPrefix": "translate"
    },
    "Amazon WorkDocs": {
      "Actions": [
        "AbortDocumentVersionUpload",
        "ActivateUser",
        "AddResourcePermissions",
        "AddUserToGroup",
        "CheckAlias",
        "CreateComment",
        "CreateCustomMetadata",
        "CreateFolder",
        "CreateInstance",
        "CreateLabels",
        "CreateNotificationSubscription",
        "CreateUser",
        "DeactivateUser",
        "DeleteComment",
        "DeleteCustomMetadata",
        "DeleteDocument",
        "DeleteFolder",
        "DeleteFolderContents",
        "DeleteInstance",
        "DeleteLabels",
        "DeleteNotificationSubscription",
        "DeleteUser",
        "DeregisterDirectory",
        "DescribeActivities",
        "DescribeAvailableDirectories",
        "DescribeComments",
        "DescribeDocumentVersions",
        "DescribeFolderContents",
        "DescribeGroups",
        "DescribeInstances",
        "DescribeNotificationSubscriptions",
        "DescribeResourcePermissions",
        "DescribeRootFolders",
        "DescribeUsers",
        "DownloadDocumentVersion",
        "GetCurrentUser",
        "GetDocument",
        "GetDocumentPath",
        "GetDocumentVersion",
        "GetFolder",
        "GetFolderPath",
        "GetResources",
        "InitiateDocumentVersionUpload",
        "RegisterDirectory",
        "RemoveAllResourcePermissions",
        "RemoveResourcePermission",
        "UpdateDocument",
        "UpdateDocumentVersion",
        "UpdateFolder",
        "UpdateInstanceAlias",
        "UpdateUser"
      ],
      "HasResource": false,
      "StringPrefix": "workdocs"
    },
    "Amazon WorkLink": {
      "ARNFormat": "arn:${Partition}:worklink::${account}:${resourceType}/${resourcePath}",
      "ARNRegex": "^arn:${Partition}:worklink:.+",
      "Actions": [
        "AssociateDomain",
        "AssociateWebsiteAuthorizationProvider",
        "AssociateWebsiteCertificateAuthority",
        "CreateFleet",
        "DeleteFleet",
        "DescribeAuditStreamConfiguration",
        "DescribeCompanyNetworkConfiguration",
        "DescribeDevice",
        "DescribeDevicePolicyConfiguration",
        "DescribeDomain",
        "DescribeFleetMetadata",
        "DescribeIdentityProviderConfiguration",
        "DescribeWebsiteCertificateAuthority",
        "DisassociateDomain",
        "DisassociateWebsiteAuthorizationProvider",
        "DisassociateWebsiteCertificateAuthority",
        "ListDevices",
        "ListDomains",
        "ListFleets",
        "ListTagsForResource",
        "ListWebsiteAuthorizationProviders",
        "ListWebsiteCertificateAuthorities",
        "RestoreDomainAccess",
        "RevokeDomainAccess",
        "SignOutUser",
        "TagResource",
        "UntagResource",
        "UpdateAuditStreamConfiguration",
        "UpdateCompanyNetworkConfiguration",
        "UpdateDevicePolicyConfiguration",
        "UpdateDomainMetadata",
        "UpdateFleetMetadata",
        "UpdateIdentityProviderConfiguration"
      ],
      "HasResource": true,
      "StringPrefix": "worklink",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon WorkMail": {
      "ARNFormat": "arn:${Partition}:workmail:${Region}:${Account}:${ResourceType}/${ResourceId}",
      "ARNRegex": "^arn:${Partition}:workmail:.+:.+:.+",
      "Actions": [
        "AddMembersToGroup",
        "AssociateDelegateToResource",
        "AssociateMemberToGroup",
        "CreateAlias",
        "CreateGroup",
        "CreateInboundMailFlowRule",
        "CreateMailDomain",
        "CreateMailUser",
        "CreateOrganization",
        "CreateOutboundMailFlowRule",
        "CreateResource",
        "CreateSmtpGateway",
        "CreateUser",
        "DeleteAccessControlRule",
        "DeleteAlias",
        "DeleteGroup",
        "DeleteInboundMailFlowRule",
        "DeleteMailDomain",
        "DeleteMailboxPermissions",
        "DeleteMobileDevice",
        "DeleteOrganization",
        "DeleteOutboundMailFlowRule",
        "DeleteResource",
        "DeleteRetentionPolicy",
        "DeleteSmtpGateway",
        "DeleteUser",
        "DeregisterFromWorkMail",
        "DescribeDirectories",
        "DescribeGroup",
        "DescribeInboundMailFlowRule",
        "DescribeKmsKeys",
        "DescribeMailDomains",
        "DescribeMailGroups",
        "DescribeMailUsers",
        "DescribeOrganization",
        "DescribeOrganizations",
        "DescribeOutboundMailFlowRule",
        "DescribeResource",
        "DescribeSmtpGateway",
        "DescribeUser",
        "DisableMailGroups",
        "DisableMailUsers",
        "DisassociateDelegateFromResource",
        "DisassociateMemberFromGroup",
        "EnableMailDomain",
        "EnableMailGroups",
        "EnableMailUsers",
        "GetAccessControlEffect",
        "GetDefaultRetentionPolicy",
        "GetJournalingRules",
        "GetMailDomainDetails",
        "GetMailGroupDetails",
        "GetMailUserDetails",
        "GetMailboxDetails",
        "GetMobileDeviceDetails",
        "GetMobileDevicesForUser",
        "GetMobilePolicyDetails",
        "ListAccessControlRules",
        "ListAliases",
        "ListGroupMembers",
        "ListGroups",
        "ListInboundMailFlowRules",
        "ListMailboxPermissions",
        "ListMembersInMailGroup",
        "ListOrganizations",
        "ListOutboundMailFlowRules",
        "ListResourceDelegates",
        "ListResources",
        "ListSmtpGateways",
        "ListTagsForResource",
        "ListUsers",
        "PutAccessControlRule",
        "PutMailboxPermissions",
        "PutRetentionPolicy",
        "RegisterToWorkMail",
        "RemoveMembersFromGroup",
        "ResetPassword",
        "ResetUserPassword",
        "SearchMembers",
        "SetAdmin",
        "SetDefaultMailDomain",
        "SetJournalingRules",
        "SetMailGroupDetails",
        "SetMailUserDetails",
        "SetMobilePolicyDetails",
        "TagResource",
        "TestInboundMailFlowRules",
        "TestOutboundMailFlowRules",
        "UntagResource",
        "UpdateInboundMailFlowRule",
        "UpdateMailboxQuota",
        "UpdateOutboundMailFlowRule",
        "UpdatePrimaryEmailAddress",
        "UpdateResource",
        "UpdateSmtpGateway",
        "WipeMobileDevice"
      ],
      "HasResource": true,
      "StringPrefix": "workmail",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Amazon WorkMail Message Flow": {
      "ARNFormat": "arn:${Partition}:workmailmessageflow:${Region}:${Account}:message/${OrganizationId}/${Context}/${MessageId}",
      "ARNRegex": "^arn:${Partition}:workmailmessageflow:.+:.+:.+",
      "Actions": [
        "GetRawMessageContent"
      ],
      "HasResource": true,
      "StringPrefix": "workmailmessageflow"
    },
    "Amazon WorkSpaces": {
      "ARNFormat": "arn:aws:workspaces:*:*",
      "ARNRegex": "arn:aws:workspaces:*",
      "Actions": [
        "AssociateIpGroups",
        "AuthorizeIpRules",
        "CreateIpGroup",
        "CreateTags",
        "CreateWorkspaces",
        "DeleteIpGroup",
        "DeleteTags",
        "DeleteWorkspaceImage",
        "DescribeAccount",
        "DescribeAccountModifications",
        "DescribeClientProperties",
        "DescribeIpGroups",
        "DescribeTags",
        "DescribeWorkspaceBundles",
        "DescribeWorkspaceDirectories",
        "DescribeWorkspaceImages",
        "DescribeWorkspaces",
        "DescribeWorkspacesConnectionStatus",
        "DisassociateIpGroups",
        "ImportWorkspaceImage",
        "ListAvailableManagementCidrRanges",
        "ModifyAccount",
        "ModifyClientProperties",
        "ModifyWorkspaceProperties",
        "ModifyWorkspaceState",
        "RebootWorkspaces",
        "RebuildWorkspaces",
        "RevokeIpRules",
        "StartWorkspaces",
        "StopWorkspaces",
        "TerminateWorkspaces",
        "UpdateRulesOfIpGroup"
      ],
      "HasResource": true,
      "StringPrefix": "workspaces"
    },
    "Amazon WorkSpaces Application Manager": {
      "Actions": [
        "AuthenticatePackager"
      ],
      "HasResource": false,
      "StringPrefix": "wam"
    },
    "Application Auto Scaling": {
      "Actions": [
        "DeleteScalingPolicy",
        "DeleteScheduledAction",
        "DeregisterScalableTarget",
        "DescribeScalableTargets",
        "DescribeScalingActivities",
        "DescribeScalingPolicies",
        "DescribeScheduledActions",
        "PutScalingPolicy",
        "PutScheduledAction",
        "RegisterScalableTarget"
      ],
      "HasResource": false,
      "StringPrefix": "application-autoscaling"
    },
    "Application Discovery": {
      "Actions": [
        "AssociateConfigurationItemsToApplication",
        "BatchDeleteImportData",
        "CreateApplication",
        "CreateTags",
        "DeleteApplications",
        "DeleteTags",
        "DescribeAgents",
        "DescribeConfigurations",
        "DescribeContinuousExports",
        "DescribeExportConfigurations",
        "DescribeExportTasks",
        "DescribeImportTasks",
        "DescribeTags",
        "DisassociateConfigurationItemsFromApplication",
        "ExportConfigurations",
        "GetDiscoverySummary",
        "ListConfigurations",
        "ListServerNeighbors",
        "StartContinuousExport",
        "StartDataCollectionByAgentIds",
        "StartExportTask",
        "StartImportTask",
        "StopContinuousExport",
        "StopDataCollectionByAgentIds",
        "UpdateApplication"
      ],
      "HasResource": false,
      "StringPrefix": "discovery"
    },
    "Application Discovery Arsenal": {
      "Actions": [
        "RegisterOnPremisesAgent"
      ],
      "HasResource": false,
      "StringPrefix": "arsenal"
    },
    "CloudWatch Application Insights": {
      "Actions": [
        "CreateApplication",
        "CreateComponent",
        "DeleteApplication",
        "DeleteComponent",
        "DescribeApplication",
        "DescribeComponent",
        "DescribeComponentConfiguration",
        "DescribeComponentConfigurationRecommendation",
        "DescribeObservation",
        "DescribeProblem",
        "DescribeProblemObservations",
        "ListApplications",
        "ListComponents",
        "ListProblems",
        "UpdateApplication",
        "UpdateComponent",
        "UpdateComponentConfiguration"
      ],
      "HasResource": false,
      "StringPrefix": "applicationinsights"
    },
    "Comprehend Medical": {
      "ARNFormat": "arn:${Partition}:comprehendmedical:${Region}:${AccountId}:${ResourceType}/${ResourceName}",
      "ARNRegex": "^arn:${Partition}:comprehendmedical:.+:.+:.+",
      "Actions": [
        "DetectEntities",
        "DetectPHI"
      ],
      "HasResource": false,
      "StringPrefix": "comprehendmedical"
    },
    "Compute Optimizer": {
      "Actions": [
        "DescribeRecommendationExportJobs",
        "ExportAutoScalingGroupRecommendations",
        "ExportEC2InstanceRecommendations",
        "GetAutoScalingGroupRecommendations",
        "GetEC2InstanceRecommendations",
        "GetEC2RecommendationProjectedMetrics",
        "GetEnrollmentStatus",
        "GetRecommendationSummaries",
        "UpdateEnrollmentStatus"
      ],
      "HasResource": false,
      "StringPrefix": "compute-optimizer"
    },
    "Data Pipeline": {
      "Actions": [
        "ActivatePipeline",
        "AddTags",
        "CreatePipeline",
        "DeactivatePipeline",
        "DeletePipeline",
        "DescribeObjects",
        "DescribePipelines",
        "EvaluateExpression",
        "GetAccountLimits",
        "GetPipelineDefinition",
        "ListPipelines",
        "PollForTask",
        "PutAccountLimits",
        "PutPipelineDefinition",
        "QueryObjects",
        "RemoveTags",
        "ReportTaskProgress",
        "ReportTaskRunnerHeartbeat",
        "SetStatus",
        "SetTaskStatus",
        "ValidatePipelineDefinition"
      ],
      "HasResource": false,
      "StringPrefix": "datapipeline",
      "conditionKeys": [
        "datapipeline:PipelineCreator",
        "datapipeline:Tag",
        "datapipeline:workerGroup"
      ]
    },
    "DataSync": {
      "ARNFormat": "arn:${Partition}:datasync:<region>:<account>:<resourceType>/<resourceName>",
      "ARNRegex": "^arn:${Partition}:datasync:.+",
      "Actions": [
        "CancelTaskExecution",
        "CreateAgent",
        "CreateLocationEfs",
        "CreateLocationNfs",
        "CreateLocationS3",
        "CreateLocationSmb",
        "CreateTask",
        "DeleteAgent",
        "DeleteLocation",
        "DeleteTask",
        "DescribeAgent",
        "DescribeLocationEfs",
        "DescribeLocationNfs",
        "DescribeLocationS3",
        "DescribeLocationSmb",
        "DescribeTask",
        "DescribeTaskExecution",
        "ListAgents",
        "ListLocations",
        "ListTagsForResource",
        "ListTaskExecutions",
        "ListTasks",
        "StartTaskExecution",
        "TagResource",
        "UntagResource",
        "UpdateAgent",
        "UpdateTask"
      ],
      "HasResource": true,
      "StringPrefix": "datasync",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Database Query Metadata Service": {
      "ARNFormat": "arn:${Partition}:dbqms::",
      "ARNRegex": "^arn:${Partition}:dbqms::.+",
      "Actions": [
        "CreateFavoriteQuery",
        "CreateQueryHistory",
        "DeleteFavoriteQueries",
        "DeleteQueryHistory",
        "DescribeFavoriteQueries",
        "DescribeQueryHistory",
        "GetQueryString",
        "UpdateFavoriteQuery",
        "UpdateQueryHistory"
      ],
      "HasResource": false,
      "StringPrefix": "dbqms"
    },
    "Elastic Load Balancing": {
      "ARNFormat": "arn:aws:elasticloadbalancing:<region>:<account>:<resourceType>/<resourceid>",
      "ARNRegex": "^arn:aws:elasticloadbalancing:.+",
      "Actions": [
        "AddTags",
        "ApplySecurityGroupsToLoadBalancer",
        "AttachLoadBalancerToSubnets",
        "ConfigureHealthCheck",
        "CreateAppCookieStickinessPolicy",
        "CreateLBCookieStickinessPolicy",
        "CreateLoadBalancer",
        "CreateLoadBalancerListeners",
        "CreateLoadBalancerPolicy",
        "DeleteLoadBalancer",
        "DeleteLoadBalancerListeners",
        "DeleteLoadBalancerPolicy",
        "DeregisterInstancesFromLoadBalancer",
        "DescribeInstanceHealth",
        "DescribeLoadBalancerAttributes",
        "DescribeLoadBalancerPolicies",
        "DescribeLoadBalancerPolicyTypes",
        "DescribeLoadBalancers",
        "DescribeTags",
        "DetachLoadBalancerFromSubnets",
        "DisableAvailabilityZonesForLoadBalancer",
        "EnableAvailabilityZonesForLoadBalancer",
        "ModifyLoadBalancerAttributes",
        "RegisterInstancesWithLoadBalancer",
        "RemoveTags",
        "SetLoadBalancerListenerSSLCertificate",
        "SetLoadBalancerPoliciesForBackendServer",
        "SetLoadBalancerPoliciesOfListener"
      ],
      "HasResource": true,
      "StringPrefix": "elasticloadbalancing",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:TagKeys",
        "elasticloadbalancing:ResourceTag/",
        "elasticloadbalancing:ResourceTag/${TagKey}"
      ]
    },
    "Elastic Load Balancing V2": {
      "ARNFormat": "arn:aws:elasticloadbalancing:<region>:<account>:<resourceType>/<resourceid>",
      "ARNRegex": "^arn:aws:elasticloadbalancing:.+",
      "Actions": [
        "AddListenerCertificates",
        "AddTags",
        "CreateListener",
        "CreateLoadBalancer",
        "CreateRule",
        "CreateTargetGroup",
        "DeleteListener",
        "DeleteLoadBalancer",
        "DeleteRule",
        "DeleteTargetGroup",
        "DeregisterTargets",
        "DescribeAccountLimits",
        "DescribeListenerCertificates",
        "DescribeListeners",
        "DescribeLoadBalancerAttributes",
        "DescribeLoadBalancers",
        "DescribeRules",
        "DescribeSSLPolicies",
        "DescribeTags",
        "DescribeTargetGroupAttributes",
        "DescribeTargetGroups",
        "DescribeTargetHealth",
        "ModifyListener",
        "ModifyLoadBalancerAttributes",
        "ModifyRule",
        "ModifyTargetGroup",
        "ModifyTargetGroupAttributes",
        "RegisterTargets",
        "RemoveListenerCertificates",
        "RemoveTags",
        "SetIpAddressType",
        "SetRulePriorities",
        "SetSecurityGroups",
        "SetSubnets",
        "SetWebAcl"
      ],
      "HasResource": true,
      "StringPrefix": "elasticloadbalancing",
      "conditionKeys": [
        "aws:RequestTag/tag-key",
        "aws:TagKeys",
        "elasticloadbalancing:ResourceTag/tag-key"
      ]
    },
    "IAM Access Analyzer": {
      "ARNFormat": "arn:${Partition}:access-analyzer::analyzer/${analyzerName}",
      "ARNRegex": "^arn:${Partition}:access-analyzer::.+",
      "Actions": [
        "CreateAnalyzer",
        "CreateArchiveRule",
        "DeleteAnalyzer",
        "DeleteArchiveRule",
        "GetAnalyzedResource",
        "GetAnalyzer",
        "GetArchiveRule",
        "GetFinding",
        "ListAnalyzedResources",
        "ListAnalyzers",
        "ListArchiveRules",
        "ListFindings",
        "ListTagsForResource",
        "StartResourceScan",
        "TagResource",
        "UntagResource",
        "UpdateArchiveRule",
        "UpdateFindings"
      ],
      "HasResource": true,
      "StringPrefix": "access-analyzer",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Identity And Access Management": {
      "ARNFormat": "arn:aws:iam::<namespace>:<relative-id>",
      "ARNRegex": "^arn:aws:iam::.+",
      "Actions": [
        "AddClientIDToOpenIDConnectProvider",
        "AddRoleToInstanceProfile",
        "AddUserToGroup",
        "AttachGroupPolicy",
        "AttachRolePolicy",
        "AttachUserPolicy",
        "ChangePassword",
        "CreateAccessKey",
        "CreateAccountAlias",
        "CreateGroup",
        "CreateInstanceProfile",
        "CreateLoginProfile",
        "CreateOpenIDConnectProvider",
        "CreatePolicy",
        "CreatePolicyVersion",
        "CreateRole",
        "CreateSAMLProvider",
        "CreateServiceLinkedRole",
        "CreateServiceSpecificCredential",
        "CreateUser",
        "CreateVirtualMFADevice",
        "DeactivateMFADevice",
        "DeleteAccessKey",
        "DeleteAccountAlias",
        "DeleteAccountPasswordPolicy",
        "DeleteGroup",
        "DeleteGroupPolicy",
        "DeleteInstanceProfile",
        "DeleteLoginProfile",
        "DeleteOpenIDConnectProvider",
        "DeletePolicy",
        "DeletePolicyVersion",
        "DeleteRole",
        "DeleteRolePermissionsBoundary",
        "DeleteRolePolicy",
        "DeleteSAMLProvider",
        "DeleteSSHPublicKey",
        "DeleteServerCertificate",
        "DeleteServiceLinkedRole",
        "DeleteServiceSpecificCredential",
        "DeleteSigningCertificate",
        "DeleteUser",
        "DeleteUserPermissionsBoundary",
        "DeleteUserPolicy",
        "DeleteVirtualMFADevice",
        "DetachGroupPolicy",
        "DetachRolePolicy",
        "DetachUserPolicy",
        "EnableMFADevice",
        "GenerateCredentialReport",
        "GenerateOrganizationsAccessReport",
        "GenerateServiceLastAccessedDetails",
        "GetAccessKeyLastUsed",
        "GetAccountAuthorizationDetails",
        "GetAccountPasswordPolicy",
        "GetAccountSummary",
        "GetContextKeysForCustomPolicy",
        "GetContextKeysForPrincipalPolicy",
        "GetCredentialReport",
        "GetGroup",
        "GetGroupPolicy",
        "GetInstanceProfile",
        "GetLoginProfile",
        "GetOpenIDConnectProvider",
        "GetOrganizationsAccessReport",
        "GetPolicy",
        "GetPolicyVersion",
        "GetRole",
        "GetRolePolicy",
        "GetSAMLProvider",
        "GetSSHPublicKey",
        "GetServerCertificate",
        "GetServiceLastAccessedDetails",
        "GetServiceLastAccessedDetailsWithEntities",
        "GetServiceLinkedRoleDeletionStatus",
        "GetUser",
        "GetUserPolicy",
        "ListAccessKeys",
        "ListAccountAliases",
        "ListAttachedGroupPolicies",
        "ListAttachedRolePolicies",
        "ListAttachedUserPolicies",
        "ListEntitiesForPolicy",
        "ListGroupPolicies",
        "ListGroups",
        "ListGroupsForUser",
        "ListInstanceProfiles",
        "ListInstanceProfilesForRole",
        "ListMFADevices",
        "ListOpenIDConnectProviders",
        "ListPolicies",
        "ListPoliciesGrantingServiceAccess",
        "ListPolicyVersions",
        "ListRolePolicies",
        "ListRoleTags",
        "ListRoles",
        "ListSAMLProviders",
        "ListSSHPublicKeys",
        "ListServerCertificates",
        "ListServiceSpecificCredentials",
        "ListSigningCertificates",
        "ListUserPolicies",
        "ListUserTags",
        "ListUsers",
        "ListVirtualMFADevices",
        "PassRole",
        "PutGroupPolicy",
        "PutRolePermissionsBoundary",
        "PutRolePolicy",
        "PutUserPermissionsBoundary",
        "PutUserPolicy",
        "RemoveClientIDFromOpenIDConnectProvider",
        "RemoveRoleFromInstanceProfile",
        "RemoveUserFromGroup",
        "ResetServiceSpecificCredential",
        "ResyncMFADevice",
        "SetDefaultPolicyVersion",
        "SetSecurityTokenServicePreferences",
        "SimulateCustomPolicy",
        "SimulatePrincipalPolicy",
        "TagRole",
        "TagUser",
        "UntagRole",
        "UntagUser",
        "UpdateAccessKey",
        "UpdateAccountPasswordPolicy",
        "UpdateAssumeRolePolicy",
        "UpdateGroup",
        "UpdateLoginProfile",
        "UpdateOpenIDConnectProviderThumbprint",
        "UpdateRole",
        "UpdateRoleDescription",
        "UpdateSAMLProvider",
        "UpdateSSHPublicKey",
        "UpdateServerCertificate",
        "UpdateServiceSpecificCredential",
        "UpdateSigningCertificate",
        "UpdateUser",
        "UploadSSHPublicKey",
        "UploadServerCertificate",
        "UploadSigningCertificate"
      ],
      "HasResource": true,
      "StringPrefix": "iam",
      "conditionKeys": [
        "iam:AWSServiceName",
        "iam:AssociatedResourceArn",
        "iam:OrganizationsPolicyId",
        "iam:PassedToService",
        "iam:PermissionsBoundary",
        "iam:PolicyARN",
        "iam:ResourceTag/${TagKey}"
      ]
    },
    "Launch Wizard": {
      "ARNRegex": "^arn:aws:launchwizard:.+:.+:.+",
      "Actions": [
        "DeleteApp",
        "DescribeProvisionedApp",
        "DescribeProvisioningEvents",
        "GetInfrastructureSuggestion",
        "GetIpAddress",
        "GetResourceCostEstimate",
        "ListProvisionedApps",
        "StartProvisioning"
      ],
      "HasResource": false,
      "StringPrefix": "launchwizard"
    },
    "Manage Amazon API Gateway": {
      "ARNFormat": "arn:aws:apigateway:<region>::<api_gateway_resource_path>",
      "ARNRegex": "^arn:aws:apigateway:.+",
      "Actions": [
        "DELETE",
        "GET",
        "PATCH",
        "POST",
        "PUT",
        "SetWebACL",
        "UpdateRestApiPolicy",
        "HEAD",
        "OPTIONS"
      ],
      "HasResource": true,
      "StringPrefix": "apigateway",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys"
      ]
    },
    "Network Manager": {
      "ARNFormat": "arn:aws:networkmanager::<account-id>:<resource-type>/<resource_name>",
      "ARNRegex": "^arn:aws:networkmanager::.+:.+",
      "Actions": [
        "AssociateCustomerGateway",
        "AssociateLink",
        "CreateDevice",
        "CreateGlobalNetwork",
        "CreateLink",
        "CreateSite",
        "DeleteDevice",
        "DeleteGlobalNetwork",
        "DeleteLink",
        "DeleteSite",
        "DeregisterTransitGateway",
        "DescribeGlobalNetworks",
        "DisassociateCustomerGateway",
        "DisassociateLink",
        "GetCustomerGatewayAssociations",
        "GetDevices",
        "GetLinkAssociations",
        "GetLinks",
        "GetSites",
        "GetTransitGatewayRegistrations",
        "ListTagsForResource",
        "RegisterTransitGateway",
        "TagResource",
        "UntagResource",
        "UpdateDevice",
        "UpdateGlobalNetwork",
        "UpdateLink",
        "UpdateSite"
      ],
      "HasResource": true,
      "StringPrefix": "networkmanager",
      "conditionKeys": [
        "aws:RequestTag/${TagKey}",
        "aws:ResourceTag/${TagKey}",
        "aws:TagKeys",
        "networkmanager:cgwArn",
        "networkmanager:tgwArn"
      ]
    },
    "Service Quotas": {
      "ARNFormat": "arn:aws:servicequotas:<region>:<account>:<resourceType>/<resourceName>",
      "ARNRegex": "^arn:aws:servicequotas:.+",
      "Actions": [
        "AssociateServiceQuotaTemplate",
        "DeleteServiceQuotaIncreaseRequestFromTemplate",
        "DisassociateServiceQuotaTemplate",
        "GetAWSDefaultServiceQuota",
        "GetAssociationForServiceQuotaTemplate",
        "GetRequestedServiceQuotaChange",
        "GetServiceQuota",
        "GetServiceQuotaIncreaseRequestFromTemplate",
        "ListAWSDefaultServiceQuotas",
        "ListRequestedServiceQuotaChangeHistory",
        "ListRequestedServiceQuotaChangeHistoryByQuota",
        "ListServiceQuotaIncreaseRequestsInTemplate",
        "ListServiceQuotas",
        "ListServices",
        "PutServiceQuotaIncreaseRequestIntoTemplate",
        "RequestServiceQuotaIncrease"
      ],
      "HasResource": true,
      "StringPrefix": "servicequotas",
      "conditionKeys": [
        "servicequotas:service"
      ]
    }
  }
}