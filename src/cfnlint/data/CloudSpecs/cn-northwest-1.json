{
 "IntrinsicTypes": {
  "Fn::Base64": {
   "Documentation": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-base64.html",
   "ReturnTypes": [
    "Singular"
   ]
  },
  "Fn::Cidr": {
   "Documentation": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-cidr.html",
   "ReturnTypes": [
    "List"
   ]
  },
  "Fn::FindInMap": {
   "Documentation": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-findinmap.html",
   "ReturnTypes": [
    "Singular",
    "List"
   ]
  },
  "Fn::GetAZs": {
   "Documentation": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getavailabilityzones.html",
   "ReturnTypes": [
    "List"
   ]
  },
  "Fn::GetAtt": {
   "Documentation": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getatt.html",
   "ReturnTypes": [
    "Singular",
    "List"
   ]
  },
  "Fn::If": {
   "Documentation": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-conditions.html#intrinsic-function-reference-conditions-if",
   "ReturnTypes": [
    "Singular",
    "List"
   ]
  },
  "Fn::ImportValue": {
   "Documentation": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html",
   "ReturnTypes": [
    "Singular"
   ]
  },
  "Fn::Join": {
   "Documentation": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-join.html",
   "ReturnTypes": [
    "Singular"
   ]
  },
  "Fn::Select": {
   "Documentation": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-select.html",
   "ReturnTypes": [
    "Singular",
    "List"
   ]
  },
  "Fn::Split": {
   "Documentation": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-split.html",
   "ReturnTypes": [
    "List"
   ]
  },
  "Fn::Sub": {
   "Documentation": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-sub.html",
   "ReturnTypes": [
    "Singular"
   ]
  },
  "Fn::Transform": {
   "Documentation": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-transform.html",
   "ReturnTypes": []
  },
  "Ref": {
   "Documentation": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-ref.html",
   "ReturnTypes": [
    "Singular",
    "List"
   ]
  }
 },
 "ParameterTypes": {
  "AvailabilityZone": [
   "AWS::EC2::AvailabilityZone::Name",
   "AWS::SSM::Parameter::Value<AWS::EC2::AvailabilityZone::Name>"
  ],
  "AvailabilityZones": [
   "List<AWS::EC2::AvailabilityZone::Name>",
   "AWS::SSM::Parameter::Value<List<AWS::EC2::AvailabilityZone::Name>>"
  ],
  "ImageId": [
   "AWS::EC2::Image::Id",
   "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
  ],
  "KeyPair": [
   "AWS::EC2::KeyPair::KeyName",
   "AWS::SSM::Parameter::Value<AWS::EC2::KeyPair::KeyName>"
  ],
  "Number": [
   "Number",
   "AWS::SSM::Parameter::Value<Number>"
  ],
  "Numbers": [
   "List<Number>",
   "List<AWS::SSM::Parameter::Value<Number>>"
  ],
  "SecurityGroupId": [
   "AWS::EC2::SecurityGroup::Id",
   "AWS::SSM::Parameter::Value<AWS::EC2::SecurityGroup::Id>"
  ],
  "SecurityGroupIds": [
   "List<AWS::EC2::SecurityGroup::Id>",
   "AWS::SSM::Parameter::Value<List<AWS::EC2::SecurityGroup::Id>>"
  ],
  "String": [
   "String",
   "AWS::SSM::Parameter::Value<String>"
  ],
  "Strings": [
   "CommaDelimitedList",
   "List<String>",
   "AWS::SSM::Parameter::Value<List<String>>",
   "AWS::SSM::Parameter::Value<CommaDelimitedList>"
  ],
  "SubnetId": [
   "AWS::EC2::Subnet::Id",
   "AWS::SSM::Parameter::Value<AWS::EC2::Subnet::Id>"
  ],
  "SubnetIds": [
   "List<AWS::EC2::Subnet::Id>",
   "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>"
  ],
  "VpcId": [
   "AWS::EC2::VPC::Id",
   "AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>"
  ]
 },
 "PropertyTypes": {
  "AWS::AccessAnalyzer::Analyzer.ArchiveRule": "CACHED",
  "AWS::AccessAnalyzer::Analyzer.Filter": "CACHED",
  "AWS::AmazonMQ::Broker.ConfigurationId": "CACHED",
  "AWS::AmazonMQ::Broker.EncryptionOptions": "CACHED",
  "AWS::AmazonMQ::Broker.LdapServerMetadata": "CACHED",
  "AWS::AmazonMQ::Broker.LogList": "CACHED",
  "AWS::AmazonMQ::Broker.MaintenanceWindow": "CACHED",
  "AWS::AmazonMQ::Broker.TagsEntry": "CACHED",
  "AWS::AmazonMQ::Broker.User": "CACHED",
  "AWS::AmazonMQ::Configuration.TagsEntry": "CACHED",
  "AWS::AmazonMQ::ConfigurationAssociation.ConfigurationId": "CACHED",
  "AWS::ApiGateway::ApiKey.StageKey": "CACHED",
  "AWS::ApiGateway::Deployment.AccessLogSetting": "CACHED",
  "AWS::ApiGateway::Deployment.CanarySetting": "CACHED",
  "AWS::ApiGateway::Deployment.DeploymentCanarySettings": "CACHED",
  "AWS::ApiGateway::Deployment.MethodSetting": "CACHED",
  "AWS::ApiGateway::Deployment.StageDescription": "CACHED",
  "AWS::ApiGateway::DocumentationPart.Location": "CACHED",
  "AWS::ApiGateway::DomainName.EndpointConfiguration": "CACHED",
  "AWS::ApiGateway::DomainName.MutualTlsAuthentication": "CACHED",
  "AWS::ApiGateway::Method.Integration": "CACHED",
  "AWS::ApiGateway::Method.IntegrationResponse": "CACHED",
  "AWS::ApiGateway::Method.MethodResponse": "CACHED",
  "AWS::ApiGateway::RestApi.EndpointConfiguration": "CACHED",
  "AWS::ApiGateway::RestApi.S3Location": "CACHED",
  "AWS::ApiGateway::Stage.AccessLogSetting": "CACHED",
  "AWS::ApiGateway::Stage.CanarySetting": "CACHED",
  "AWS::ApiGateway::Stage.MethodSetting": "CACHED",
  "AWS::ApiGateway::UsagePlan.ApiStage": "CACHED",
  "AWS::ApiGateway::UsagePlan.QuotaSettings": "CACHED",
  "AWS::ApiGateway::UsagePlan.ThrottleSettings": "CACHED",
  "AWS::ApiGatewayV2::Api.BodyS3Location": "CACHED",
  "AWS::ApiGatewayV2::Api.Cors": "CACHED",
  "AWS::ApiGatewayV2::ApiGatewayManagedOverrides.AccessLogSettings": "CACHED",
  "AWS::ApiGatewayV2::ApiGatewayManagedOverrides.IntegrationOverrides": "CACHED",
  "AWS::ApiGatewayV2::ApiGatewayManagedOverrides.RouteOverrides": "CACHED",
  "AWS::ApiGatewayV2::ApiGatewayManagedOverrides.RouteSettings": "CACHED",
  "AWS::ApiGatewayV2::ApiGatewayManagedOverrides.StageOverrides": "CACHED",
  "AWS::ApiGatewayV2::Authorizer.JWTConfiguration": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigatewayv2-authorizer-jwtconfiguration.html",
   "Properties": {
    "Audience": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigatewayv2-authorizer-jwtconfiguration.html#cfn-apigatewayv2-authorizer-jwtconfiguration-audience",
     "PrimitiveItemType": "String",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "Issuer": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigatewayv2-authorizer-jwtconfiguration.html#cfn-apigatewayv2-authorizer-jwtconfiguration-issuer",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::ApiGatewayV2::DomainName.DomainNameConfiguration": "CACHED",
  "AWS::ApiGatewayV2::DomainName.MutualTlsAuthentication": "CACHED",
  "AWS::ApiGatewayV2::Integration.ResponseParameter": "CACHED",
  "AWS::ApiGatewayV2::Integration.ResponseParameterList": "CACHED",
  "AWS::ApiGatewayV2::Integration.TlsConfig": "CACHED",
  "AWS::ApiGatewayV2::Route.ParameterConstraints": "CACHED",
  "AWS::ApiGatewayV2::RouteResponse.ParameterConstraints": "CACHED",
  "AWS::ApiGatewayV2::Stage.AccessLogSettings": "CACHED",
  "AWS::ApiGatewayV2::Stage.RouteSettings": "CACHED",
  "AWS::AppConfig::Application.Tags": "CACHED",
  "AWS::AppConfig::ConfigurationProfile.Tags": "CACHED",
  "AWS::AppConfig::ConfigurationProfile.Validators": "CACHED",
  "AWS::AppConfig::Deployment.Tags": "CACHED",
  "AWS::AppConfig::DeploymentStrategy.Tags": "CACHED",
  "AWS::AppConfig::Environment.Monitors": "CACHED",
  "AWS::AppConfig::Environment.Tags": "CACHED",
  "AWS::AppFlow::ConnectorProfile.CredentialsMap": "CACHED",
  "AWS::AppFlow::ConnectorProfile.ProfileProperties": "CACHED",
  "AWS::AppFlow::ConnectorProfile.TokenUrlCustomProperties": "CACHED",
  "AWS::AppFlow::Flow.CustomProperties": "CACHED",
  "AWS::AppSync::DataSource.AuthorizationConfig": "CACHED",
  "AWS::AppSync::DataSource.AwsIamConfig": "CACHED",
  "AWS::AppSync::DataSource.DeltaSyncConfig": "CACHED",
  "AWS::AppSync::DataSource.DynamoDBConfig": "CACHED",
  "AWS::AppSync::DataSource.ElasticsearchConfig": "CACHED",
  "AWS::AppSync::DataSource.HttpConfig": "CACHED",
  "AWS::AppSync::DataSource.LambdaConfig": "CACHED",
  "AWS::AppSync::DataSource.OpenSearchServiceConfig": "CACHED",
  "AWS::AppSync::DataSource.RdsHttpEndpointConfig": "CACHED",
  "AWS::AppSync::DataSource.RelationalDatabaseConfig": "CACHED",
  "AWS::AppSync::FunctionConfiguration.AppSyncRuntime": "CACHED",
  "AWS::AppSync::FunctionConfiguration.LambdaConflictHandlerConfig": "CACHED",
  "AWS::AppSync::FunctionConfiguration.SyncConfig": "CACHED",
  "AWS::AppSync::GraphQLApi.AdditionalAuthenticationProvider": "CACHED",
  "AWS::AppSync::GraphQLApi.CognitoUserPoolConfig": "CACHED",
  "AWS::AppSync::GraphQLApi.LambdaAuthorizerConfig": "CACHED",
  "AWS::AppSync::GraphQLApi.LogConfig": "CACHED",
  "AWS::AppSync::GraphQLApi.OpenIDConnectConfig": "CACHED",
  "AWS::AppSync::GraphQLApi.UserPoolConfig": "CACHED",
  "AWS::AppSync::Resolver.AppSyncRuntime": "CACHED",
  "AWS::AppSync::Resolver.CachingConfig": "CACHED",
  "AWS::AppSync::Resolver.LambdaConflictHandlerConfig": "CACHED",
  "AWS::AppSync::Resolver.PipelineConfig": "CACHED",
  "AWS::AppSync::Resolver.SyncConfig": "CACHED",
  "AWS::ApplicationAutoScaling::ScalableTarget.ScalableTargetAction": "CACHED",
  "AWS::ApplicationAutoScaling::ScalableTarget.ScheduledAction": "CACHED",
  "AWS::ApplicationAutoScaling::ScalableTarget.SuspendedState": "CACHED",
  "AWS::ApplicationAutoScaling::ScalingPolicy.CustomizedMetricSpecification": "CACHED",
  "AWS::ApplicationAutoScaling::ScalingPolicy.MetricDimension": "CACHED",
  "AWS::ApplicationAutoScaling::ScalingPolicy.PredefinedMetricSpecification": "CACHED",
  "AWS::ApplicationAutoScaling::ScalingPolicy.StepAdjustment": "CACHED",
  "AWS::ApplicationAutoScaling::ScalingPolicy.StepScalingPolicyConfiguration": "CACHED",
  "AWS::ApplicationAutoScaling::ScalingPolicy.TargetTrackingScalingPolicyConfiguration": "CACHED",
  "AWS::ApplicationInsights::Application.Alarm": "CACHED",
  "AWS::ApplicationInsights::Application.AlarmMetric": "CACHED",
  "AWS::ApplicationInsights::Application.ComponentConfiguration": "CACHED",
  "AWS::ApplicationInsights::Application.ComponentMonitoringSetting": "CACHED",
  "AWS::ApplicationInsights::Application.ConfigurationDetails": "CACHED",
  "AWS::ApplicationInsights::Application.CustomComponent": "CACHED",
  "AWS::ApplicationInsights::Application.HAClusterPrometheusExporter": "CACHED",
  "AWS::ApplicationInsights::Application.HANAPrometheusExporter": "CACHED",
  "AWS::ApplicationInsights::Application.JMXPrometheusExporter": "CACHED",
  "AWS::ApplicationInsights::Application.Log": "CACHED",
  "AWS::ApplicationInsights::Application.LogPattern": "CACHED",
  "AWS::ApplicationInsights::Application.LogPatternSet": "CACHED",
  "AWS::ApplicationInsights::Application.SubComponentConfigurationDetails": "CACHED",
  "AWS::ApplicationInsights::Application.SubComponentTypeConfiguration": "CACHED",
  "AWS::ApplicationInsights::Application.WindowsEvent": "CACHED",
  "AWS::Athena::WorkGroup.EncryptionConfiguration": "CACHED",
  "AWS::Athena::WorkGroup.EngineVersion": "CACHED",
  "AWS::Athena::WorkGroup.ResultConfiguration": "CACHED",
  "AWS::Athena::WorkGroup.WorkGroupConfiguration": "CACHED",
  "AWS::AutoScaling::AutoScalingGroup.AcceleratorCountRequest": "CACHED",
  "AWS::AutoScaling::AutoScalingGroup.AcceleratorTotalMemoryMiBRequest": "CACHED",
  "AWS::AutoScaling::AutoScalingGroup.BaselineEbsBandwidthMbpsRequest": "CACHED",
  "AWS::AutoScaling::AutoScalingGroup.InstanceRequirements": "CACHED",
  "AWS::AutoScaling::AutoScalingGroup.InstancesDistribution": "CACHED",
  "AWS::AutoScaling::AutoScalingGroup.LaunchTemplate": "CACHED",
  "AWS::AutoScaling::AutoScalingGroup.LaunchTemplateOverrides": "CACHED",
  "AWS::AutoScaling::AutoScalingGroup.LaunchTemplateSpecification": "CACHED",
  "AWS::AutoScaling::AutoScalingGroup.LifecycleHookSpecification": "CACHED",
  "AWS::AutoScaling::AutoScalingGroup.MemoryGiBPerVCpuRequest": "CACHED",
  "AWS::AutoScaling::AutoScalingGroup.MemoryMiBRequest": "CACHED",
  "AWS::AutoScaling::AutoScalingGroup.MetricsCollection": "CACHED",
  "AWS::AutoScaling::AutoScalingGroup.MixedInstancesPolicy": "CACHED",
  "AWS::AutoScaling::AutoScalingGroup.NetworkBandwidthGbpsRequest": "CACHED",
  "AWS::AutoScaling::AutoScalingGroup.NetworkInterfaceCountRequest": "CACHED",
  "AWS::AutoScaling::AutoScalingGroup.NotificationConfiguration": "CACHED",
  "AWS::AutoScaling::AutoScalingGroup.TagProperty": "CACHED",
  "AWS::AutoScaling::AutoScalingGroup.TotalLocalStorageGBRequest": "CACHED",
  "AWS::AutoScaling::AutoScalingGroup.VCpuCountRequest": "CACHED",
  "AWS::AutoScaling::LaunchConfiguration.BlockDevice": "CACHED",
  "AWS::AutoScaling::LaunchConfiguration.BlockDeviceMapping": "CACHED",
  "AWS::AutoScaling::LaunchConfiguration.MetadataOptions": "CACHED",
  "AWS::AutoScaling::ScalingPolicy.CustomizedMetricSpecification": "CACHED",
  "AWS::AutoScaling::ScalingPolicy.Metric": "CACHED",
  "AWS::AutoScaling::ScalingPolicy.MetricDataQuery": "CACHED",
  "AWS::AutoScaling::ScalingPolicy.MetricDimension": "CACHED",
  "AWS::AutoScaling::ScalingPolicy.MetricStat": "CACHED",
  "AWS::AutoScaling::ScalingPolicy.PredefinedMetricSpecification": "CACHED",
  "AWS::AutoScaling::ScalingPolicy.PredictiveScalingConfiguration": "CACHED",
  "AWS::AutoScaling::ScalingPolicy.PredictiveScalingCustomizedCapacityMetric": "CACHED",
  "AWS::AutoScaling::ScalingPolicy.PredictiveScalingCustomizedLoadMetric": "CACHED",
  "AWS::AutoScaling::ScalingPolicy.PredictiveScalingCustomizedScalingMetric": "CACHED",
  "AWS::AutoScaling::ScalingPolicy.PredictiveScalingMetricSpecification": "CACHED",
  "AWS::AutoScaling::ScalingPolicy.PredictiveScalingPredefinedLoadMetric": "CACHED",
  "AWS::AutoScaling::ScalingPolicy.PredictiveScalingPredefinedMetricPair": "CACHED",
  "AWS::AutoScaling::ScalingPolicy.PredictiveScalingPredefinedScalingMetric": "CACHED",
  "AWS::AutoScaling::ScalingPolicy.StepAdjustment": "CACHED",
  "AWS::AutoScaling::ScalingPolicy.TargetTrackingConfiguration": "CACHED",
  "AWS::AutoScaling::WarmPool.InstanceReusePolicy": "CACHED",
  "AWS::AutoScalingPlans::ScalingPlan.ApplicationSource": "CACHED",
  "AWS::AutoScalingPlans::ScalingPlan.CustomizedLoadMetricSpecification": "CACHED",
  "AWS::AutoScalingPlans::ScalingPlan.CustomizedScalingMetricSpecification": "CACHED",
  "AWS::AutoScalingPlans::ScalingPlan.MetricDimension": "CACHED",
  "AWS::AutoScalingPlans::ScalingPlan.PredefinedLoadMetricSpecification": "CACHED",
  "AWS::AutoScalingPlans::ScalingPlan.PredefinedScalingMetricSpecification": "CACHED",
  "AWS::AutoScalingPlans::ScalingPlan.ScalingInstruction": "CACHED",
  "AWS::AutoScalingPlans::ScalingPlan.TagFilter": "CACHED",
  "AWS::AutoScalingPlans::ScalingPlan.TargetTrackingConfiguration": "CACHED",
  "AWS::Backup::BackupPlan.AdvancedBackupSettingResourceType": "CACHED",
  "AWS::Backup::BackupPlan.BackupPlanResourceType": "CACHED",
  "AWS::Backup::BackupPlan.BackupRuleResourceType": "CACHED",
  "AWS::Backup::BackupPlan.CopyActionResourceType": "CACHED",
  "AWS::Backup::BackupPlan.LifecycleResourceType": "CACHED",
  "AWS::Backup::BackupSelection.BackupSelectionResourceType": "CACHED",
  "AWS::Backup::BackupSelection.ConditionResourceType": "CACHED",
  "AWS::Backup::BackupVault.LockConfigurationType": "CACHED",
  "AWS::Backup::BackupVault.NotificationObjectType": "CACHED",
  "AWS::Batch::ComputeEnvironment.ComputeResources": "CACHED",
  "AWS::Batch::ComputeEnvironment.Ec2ConfigurationObject": "CACHED",
  "AWS::Batch::ComputeEnvironment.EksConfiguration": "CACHED",
  "AWS::Batch::ComputeEnvironment.LaunchTemplateSpecification": "CACHED",
  "AWS::Batch::ComputeEnvironment.UpdatePolicy": "CACHED",
  "AWS::Batch::JobDefinition.AuthorizationConfig": "CACHED",
  "AWS::Batch::JobDefinition.ContainerProperties": "CACHED",
  "AWS::Batch::JobDefinition.Device": "CACHED",
  "AWS::Batch::JobDefinition.EfsVolumeConfiguration": "CACHED",
  "AWS::Batch::JobDefinition.EksContainer": "CACHED",
  "AWS::Batch::JobDefinition.EksContainerEnvironmentVariable": "CACHED",
  "AWS::Batch::JobDefinition.EksContainerVolumeMount": "CACHED",
  "AWS::Batch::JobDefinition.EksProperties": "CACHED",
  "AWS::Batch::JobDefinition.EksVolume": "CACHED",
  "AWS::Batch::JobDefinition.EmptyDir": "CACHED",
  "AWS::Batch::JobDefinition.Environment": "CACHED",
  "AWS::Batch::JobDefinition.EvaluateOnExit": "CACHED",
  "AWS::Batch::JobDefinition.FargatePlatformConfiguration": "CACHED",
  "AWS::Batch::JobDefinition.HostPath": "CACHED",
  "AWS::Batch::JobDefinition.LinuxParameters": "CACHED",
  "AWS::Batch::JobDefinition.LogConfiguration": "CACHED",
  "AWS::Batch::JobDefinition.MountPoints": "CACHED",
  "AWS::Batch::JobDefinition.NetworkConfiguration": "CACHED",
  "AWS::Batch::JobDefinition.NodeProperties": "CACHED",
  "AWS::Batch::JobDefinition.NodeRangeProperty": "CACHED",
  "AWS::Batch::JobDefinition.PodProperties": "CACHED",
  "AWS::Batch::JobDefinition.ResourceRequirement": "CACHED",
  "AWS::Batch::JobDefinition.Resources": "CACHED",
  "AWS::Batch::JobDefinition.RetryStrategy": "CACHED",
  "AWS::Batch::JobDefinition.Secret": "CACHED",
  "AWS::Batch::JobDefinition.SecurityContext": "CACHED",
  "AWS::Batch::JobDefinition.Timeout": "CACHED",
  "AWS::Batch::JobDefinition.Tmpfs": "CACHED",
  "AWS::Batch::JobDefinition.Ulimit": "CACHED",
  "AWS::Batch::JobDefinition.Volumes": "CACHED",
  "AWS::Batch::JobDefinition.VolumesHost": "CACHED",
  "AWS::Batch::JobQueue.ComputeEnvironmentOrder": "CACHED",
  "AWS::Batch::SchedulingPolicy.FairsharePolicy": "CACHED",
  "AWS::Batch::SchedulingPolicy.ShareAttributes": "CACHED",
  "AWS::Budgets::Budget.AutoAdjustData": "CACHED",
  "AWS::Budgets::Budget.BudgetData": "CACHED",
  "AWS::Budgets::Budget.CostTypes": "CACHED",
  "AWS::Budgets::Budget.HistoricalOptions": "CACHED",
  "AWS::Budgets::Budget.Notification": "CACHED",
  "AWS::Budgets::Budget.NotificationWithSubscribers": "CACHED",
  "AWS::Budgets::Budget.Spend": "CACHED",
  "AWS::Budgets::Budget.Subscriber": "CACHED",
  "AWS::Budgets::Budget.TimePeriod": "CACHED",
  "AWS::Budgets::BudgetsAction.ActionThreshold": "CACHED",
  "AWS::Budgets::BudgetsAction.Definition": "CACHED",
  "AWS::Budgets::BudgetsAction.IamActionDefinition": "CACHED",
  "AWS::Budgets::BudgetsAction.ScpActionDefinition": "CACHED",
  "AWS::Budgets::BudgetsAction.SsmActionDefinition": "CACHED",
  "AWS::Budgets::BudgetsAction.Subscriber": "CACHED",
  "AWS::CE::AnomalyMonitor.ResourceTag": "CACHED",
  "AWS::CE::AnomalySubscription.ResourceTag": "CACHED",
  "AWS::CE::AnomalySubscription.Subscriber": "CACHED",
  "AWS::Cassandra::Table.BillingMode": "CACHED",
  "AWS::Cassandra::Table.ClusteringKeyColumn": "CACHED",
  "AWS::Cassandra::Table.Column": "CACHED",
  "AWS::Cassandra::Table.EncryptionSpecification": "CACHED",
  "AWS::Cassandra::Table.ProvisionedThroughput": "CACHED",
  "AWS::CertificateManager::Account.ExpiryEventsConfiguration": "CACHED",
  "AWS::CertificateManager::Certificate.DomainValidationOption": "CACHED",
  "AWS::CloudFormation::ResourceVersion.LoggingConfig": "CACHED",
  "AWS::CloudFormation::StackSet.AutoDeployment": "CACHED",
  "AWS::CloudFormation::StackSet.DeploymentTargets": "CACHED",
  "AWS::CloudFormation::StackSet.OperationPreferences": "CACHED",
  "AWS::CloudFormation::StackSet.Parameter": "CACHED",
  "AWS::CloudFormation::StackSet.StackInstances": "CACHED",
  "AWS::CloudFront::CachePolicy.CachePolicyConfig": "CACHED",
  "AWS::CloudFront::CachePolicy.CookiesConfig": "CACHED",
  "AWS::CloudFront::CachePolicy.HeadersConfig": "CACHED",
  "AWS::CloudFront::CachePolicy.ParametersInCacheKeyAndForwardedToOrigin": "CACHED",
  "AWS::CloudFront::CachePolicy.QueryStringsConfig": "CACHED",
  "AWS::CloudFront::CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig": "CACHED",
  "AWS::CloudFront::Distribution.CacheBehavior": "CACHED",
  "AWS::CloudFront::Distribution.Cookies": "CACHED",
  "AWS::CloudFront::Distribution.CustomErrorResponse": "CACHED",
  "AWS::CloudFront::Distribution.CustomOriginConfig": "CACHED",
  "AWS::CloudFront::Distribution.DefaultCacheBehavior": "CACHED",
  "AWS::CloudFront::Distribution.DistributionConfig": "CACHED",
  "AWS::CloudFront::Distribution.ForwardedValues": "CACHED",
  "AWS::CloudFront::Distribution.FunctionAssociation": "CACHED",
  "AWS::CloudFront::Distribution.GeoRestriction": "CACHED",
  "AWS::CloudFront::Distribution.LambdaFunctionAssociation": "CACHED",
  "AWS::CloudFront::Distribution.LegacyCustomOrigin": "CACHED",
  "AWS::CloudFront::Distribution.LegacyS3Origin": "CACHED",
  "AWS::CloudFront::Distribution.Logging": "CACHED",
  "AWS::CloudFront::Distribution.Origin": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html",
   "Properties": {
    "ConnectionAttempts": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html#cfn-cloudfront-distribution-origin-connectionattempts",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "ConnectionTimeout": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html#cfn-cloudfront-distribution-origin-connectiontimeout",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "CustomOriginConfig": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html#cfn-cloudfront-distribution-origin-customoriginconfig",
     "Required": false,
     "Type": "CustomOriginConfig",
     "UpdateType": "Mutable"
    },
    "DomainName": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html#cfn-cloudfront-distribution-origin-domainname",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "Id": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html#cfn-cloudfront-distribution-origin-id",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "OriginCustomHeaders": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html#cfn-cloudfront-distribution-origin-origincustomheaders",
     "DuplicatesAllowed": true,
     "ItemType": "OriginCustomHeader",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "OriginPath": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html#cfn-cloudfront-distribution-origin-originpath",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "OriginShield": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html#cfn-cloudfront-distribution-origin-originshield",
     "Required": false,
     "Type": "OriginShield",
     "UpdateType": "Mutable"
    },
    "S3OriginConfig": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html#cfn-cloudfront-distribution-origin-s3originconfig",
     "Required": false,
     "Type": "S3OriginConfig",
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::CloudFront::Distribution.OriginCustomHeader": "CACHED",
  "AWS::CloudFront::Distribution.OriginGroup": "CACHED",
  "AWS::CloudFront::Distribution.OriginGroupFailoverCriteria": "CACHED",
  "AWS::CloudFront::Distribution.OriginGroupMember": "CACHED",
  "AWS::CloudFront::Distribution.OriginGroupMembers": "CACHED",
  "AWS::CloudFront::Distribution.OriginGroups": "CACHED",
  "AWS::CloudFront::Distribution.OriginShield": "CACHED",
  "AWS::CloudFront::Distribution.Restrictions": "CACHED",
  "AWS::CloudFront::Distribution.S3OriginConfig": "CACHED",
  "AWS::CloudFront::Distribution.StatusCodes": "CACHED",
  "AWS::CloudFront::Distribution.ViewerCertificate": "CACHED",
  "AWS::CloudFront::KeyGroup.KeyGroupConfig": "CACHED",
  "AWS::CloudFront::OriginRequestPolicy.CookiesConfig": "CACHED",
  "AWS::CloudFront::OriginRequestPolicy.HeadersConfig": "CACHED",
  "AWS::CloudFront::OriginRequestPolicy.OriginRequestPolicyConfig": "CACHED",
  "AWS::CloudFront::OriginRequestPolicy.QueryStringsConfig": "CACHED",
  "AWS::CloudFront::PublicKey.PublicKeyConfig": "CACHED",
  "AWS::CloudFront::RealtimeLogConfig.EndPoint": "CACHED",
  "AWS::CloudFront::RealtimeLogConfig.KinesisStreamConfig": "CACHED",
  "AWS::CloudFront::ResponseHeadersPolicy.AccessControlAllowHeaders": "CACHED",
  "AWS::CloudFront::ResponseHeadersPolicy.AccessControlAllowMethods": "CACHED",
  "AWS::CloudFront::ResponseHeadersPolicy.AccessControlAllowOrigins": "CACHED",
  "AWS::CloudFront::ResponseHeadersPolicy.AccessControlExposeHeaders": "CACHED",
  "AWS::CloudFront::ResponseHeadersPolicy.ContentSecurityPolicy": "CACHED",
  "AWS::CloudFront::ResponseHeadersPolicy.ContentTypeOptions": "CACHED",
  "AWS::CloudFront::ResponseHeadersPolicy.CorsConfig": "CACHED",
  "AWS::CloudFront::ResponseHeadersPolicy.CustomHeader": "CACHED",
  "AWS::CloudFront::ResponseHeadersPolicy.CustomHeadersConfig": "CACHED",
  "AWS::CloudFront::ResponseHeadersPolicy.FrameOptions": "CACHED",
  "AWS::CloudFront::ResponseHeadersPolicy.ReferrerPolicy": "CACHED",
  "AWS::CloudFront::ResponseHeadersPolicy.ResponseHeadersPolicyConfig": "CACHED",
  "AWS::CloudFront::ResponseHeadersPolicy.SecurityHeadersConfig": "CACHED",
  "AWS::CloudFront::ResponseHeadersPolicy.ServerTimingHeadersConfig": "CACHED",
  "AWS::CloudFront::ResponseHeadersPolicy.StrictTransportSecurity": "CACHED",
  "AWS::CloudFront::ResponseHeadersPolicy.XSSProtection": "CACHED",
  "AWS::CloudFront::StreamingDistribution.Logging": "CACHED",
  "AWS::CloudFront::StreamingDistribution.S3Origin": "CACHED",
  "AWS::CloudFront::StreamingDistribution.StreamingDistributionConfig": "CACHED",
  "AWS::CloudFront::StreamingDistribution.TrustedSigners": "CACHED",
  "AWS::CloudTrail::Trail.DataResource": "CACHED",
  "AWS::CloudTrail::Trail.EventSelector": "CACHED",
  "AWS::CloudTrail::Trail.InsightSelector": "CACHED",
  "AWS::CloudWatch::Alarm.Dimension": "CACHED",
  "AWS::CloudWatch::Alarm.Metric": "CACHED",
  "AWS::CloudWatch::Alarm.MetricDataQuery": "CACHED",
  "AWS::CloudWatch::Alarm.MetricStat": "CACHED",
  "AWS::CloudWatch::AnomalyDetector.Configuration": "CACHED",
  "AWS::CloudWatch::AnomalyDetector.Dimension": "CACHED",
  "AWS::CloudWatch::AnomalyDetector.Metric": "CACHED",
  "AWS::CloudWatch::AnomalyDetector.MetricDataQueries": "CACHED",
  "AWS::CloudWatch::AnomalyDetector.MetricDataQuery": "CACHED",
  "AWS::CloudWatch::AnomalyDetector.MetricMathAnomalyDetector": "CACHED",
  "AWS::CloudWatch::AnomalyDetector.MetricStat": "CACHED",
  "AWS::CloudWatch::AnomalyDetector.Range": "CACHED",
  "AWS::CloudWatch::AnomalyDetector.SingleMetricAnomalyDetector": "CACHED",
  "AWS::CloudWatch::InsightRule.Tags": "CACHED",
  "AWS::CodeBuild::Project.Artifacts": "CACHED",
  "AWS::CodeBuild::Project.BatchRestrictions": "CACHED",
  "AWS::CodeBuild::Project.BuildStatusConfig": "CACHED",
  "AWS::CodeBuild::Project.CloudWatchLogsConfig": "CACHED",
  "AWS::CodeBuild::Project.Environment": "CACHED",
  "AWS::CodeBuild::Project.EnvironmentVariable": "CACHED",
  "AWS::CodeBuild::Project.FilterGroup": "CACHED",
  "AWS::CodeBuild::Project.GitSubmodulesConfig": "CACHED",
  "AWS::CodeBuild::Project.LogsConfig": "CACHED",
  "AWS::CodeBuild::Project.ProjectBuildBatchConfig": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectbuildbatchconfig.html",
   "Properties": {
    "CombineArtifacts": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectbuildbatchconfig.html#cfn-codebuild-project-projectbuildbatchconfig-combineartifacts",
     "PrimitiveType": "Boolean",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "Restrictions": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectbuildbatchconfig.html#cfn-codebuild-project-projectbuildbatchconfig-restrictions",
     "Required": false,
     "Type": "BatchRestrictions",
     "UpdateType": "Mutable"
    },
    "ServiceRole": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectbuildbatchconfig.html#cfn-codebuild-project-projectbuildbatchconfig-servicerole",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "TimeoutInMins": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectbuildbatchconfig.html#cfn-codebuild-project-projectbuildbatchconfig-timeoutinmins",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::CodeBuild::Project.ProjectCache": "CACHED",
  "AWS::CodeBuild::Project.ProjectFileSystemLocation": "CACHED",
  "AWS::CodeBuild::Project.ProjectSourceVersion": "CACHED",
  "AWS::CodeBuild::Project.ProjectTriggers": "CACHED",
  "AWS::CodeBuild::Project.RegistryCredential": "CACHED",
  "AWS::CodeBuild::Project.S3LogsConfig": "CACHED",
  "AWS::CodeBuild::Project.Source": "CACHED",
  "AWS::CodeBuild::Project.SourceAuth": "CACHED",
  "AWS::CodeBuild::Project.VpcConfig": "CACHED",
  "AWS::CodeBuild::Project.WebhookFilter": "CACHED",
  "AWS::CodeBuild::ReportGroup.ReportExportConfig": "CACHED",
  "AWS::CodeBuild::ReportGroup.S3ReportExportConfig": "CACHED",
  "AWS::CodeCommit::Repository.Code": "CACHED",
  "AWS::CodeCommit::Repository.RepositoryTrigger": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-repositorytrigger.html",
   "Properties": {
    "Branches": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-repositorytrigger.html#cfn-codecommit-repository-repositorytrigger-branches",
     "PrimitiveItemType": "String",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "CustomData": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-repositorytrigger.html#cfn-codecommit-repository-repositorytrigger-customdata",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "DestinationArn": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-repositorytrigger.html#cfn-codecommit-repository-repositorytrigger-destinationarn",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "Events": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-repositorytrigger.html#cfn-codecommit-repository-repositorytrigger-events",
     "PrimitiveItemType": "String",
     "Required": true,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "Name": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-repositorytrigger.html#cfn-codecommit-repository-repositorytrigger-name",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::CodeCommit::Repository.S3": "CACHED",
  "AWS::CodeDeploy::DeploymentConfig.MinimumHealthyHosts": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-minimumhealthyhosts.html",
   "Properties": {
    "Type": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-minimumhealthyhosts.html#cfn-codedeploy-deploymentconfig-minimumhealthyhosts-type",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::CodeDeploy::DeploymentConfig.MinimumHealthyHosts.Type"
     }
    },
    "Value": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-minimumhealthyhosts.html#cfn-codedeploy-deploymentconfig-minimumhealthyhosts-value",
     "PrimitiveType": "Integer",
     "Required": true,
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::CodeDeploy::DeploymentConfig.TimeBasedCanary": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-timebasedcanary.html",
   "Properties": {
    "CanaryInterval": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-timebasedcanary.html#cfn-properties-codedeploy-deploymentconfig-trafficroutingconfig-timebasedcanary-canaryinterval",
     "PrimitiveType": "Integer",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "CanaryPercentage": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-timebasedcanary.html#cfn-properties-codedeploy-deploymentconfig-trafficroutingconfig-timebasedcanary-canarypercentage",
     "PrimitiveType": "Integer",
     "Required": true,
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::CodeDeploy::DeploymentConfig.TimeBasedLinear": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-timebasedlinear.html",
   "Properties": {
    "LinearInterval": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-timebasedlinear.html#cfn-properties-codedeploy-deploymentconfig-trafficroutingconfig-timebasedlinear-linearinterval",
     "PrimitiveType": "Integer",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "LinearPercentage": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-timebasedlinear.html#cfn-properties-codedeploy-deploymentconfig-trafficroutingconfig-timebasedlinear-linearpercentage",
     "PrimitiveType": "Integer",
     "Required": true,
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::CodeDeploy::DeploymentConfig.TrafficRoutingConfig": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-trafficroutingconfig.html",
   "Properties": {
    "TimeBasedCanary": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-trafficroutingconfig.html#cfn-properties-codedeploy-deploymentconfig-trafficroutingconfig-timebasedcanary",
     "Required": false,
     "Type": "TimeBasedCanary",
     "UpdateType": "Mutable"
    },
    "TimeBasedLinear": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-trafficroutingconfig.html#cfn-properties-codedeploy-deploymentconfig-trafficroutingconfig-timebasedlinear",
     "Required": false,
     "Type": "TimeBasedLinear",
     "UpdateType": "Mutable"
    },
    "Type": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-trafficroutingconfig.html#cfn-properties-codedeploy-deploymentconfig-trafficroutingconfig-type",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::CodeDeploy::DeploymentGroup.Alarm": "CACHED",
  "AWS::CodeDeploy::DeploymentGroup.AlarmConfiguration": "CACHED",
  "AWS::CodeDeploy::DeploymentGroup.AutoRollbackConfiguration": "CACHED",
  "AWS::CodeDeploy::DeploymentGroup.BlueGreenDeploymentConfiguration": "CACHED",
  "AWS::CodeDeploy::DeploymentGroup.BlueInstanceTerminationOption": "CACHED",
  "AWS::CodeDeploy::DeploymentGroup.Deployment": "CACHED",
  "AWS::CodeDeploy::DeploymentGroup.DeploymentReadyOption": "CACHED",
  "AWS::CodeDeploy::DeploymentGroup.DeploymentStyle": "CACHED",
  "AWS::CodeDeploy::DeploymentGroup.EC2TagFilter": "CACHED",
  "AWS::CodeDeploy::DeploymentGroup.EC2TagSet": "CACHED",
  "AWS::CodeDeploy::DeploymentGroup.EC2TagSetListObject": "CACHED",
  "AWS::CodeDeploy::DeploymentGroup.ECSService": "CACHED",
  "AWS::CodeDeploy::DeploymentGroup.ELBInfo": "CACHED",
  "AWS::CodeDeploy::DeploymentGroup.GitHubLocation": "CACHED",
  "AWS::CodeDeploy::DeploymentGroup.GreenFleetProvisioningOption": "CACHED",
  "AWS::CodeDeploy::DeploymentGroup.LoadBalancerInfo": "CACHED",
  "AWS::CodeDeploy::DeploymentGroup.OnPremisesTagSet": "CACHED",
  "AWS::CodeDeploy::DeploymentGroup.OnPremisesTagSetListObject": "CACHED",
  "AWS::CodeDeploy::DeploymentGroup.RevisionLocation": "CACHED",
  "AWS::CodeDeploy::DeploymentGroup.S3Location": "CACHED",
  "AWS::CodeDeploy::DeploymentGroup.TagFilter": "CACHED",
  "AWS::CodeDeploy::DeploymentGroup.TargetGroupInfo": "CACHED",
  "AWS::CodeDeploy::DeploymentGroup.TargetGroupPairInfo": "CACHED",
  "AWS::CodeDeploy::DeploymentGroup.TrafficRoute": "CACHED",
  "AWS::CodeDeploy::DeploymentGroup.TriggerConfig": "CACHED",
  "AWS::CodePipeline::CustomActionType.ArtifactDetails": "CACHED",
  "AWS::CodePipeline::CustomActionType.ConfigurationProperties": "CACHED",
  "AWS::CodePipeline::CustomActionType.Settings": "CACHED",
  "AWS::CodePipeline::Pipeline.ActionDeclaration": "CACHED",
  "AWS::CodePipeline::Pipeline.ActionTypeId": "CACHED",
  "AWS::CodePipeline::Pipeline.ArtifactStore": "CACHED",
  "AWS::CodePipeline::Pipeline.ArtifactStoreMap": "CACHED",
  "AWS::CodePipeline::Pipeline.BlockerDeclaration": "CACHED",
  "AWS::CodePipeline::Pipeline.EncryptionKey": "CACHED",
  "AWS::CodePipeline::Pipeline.InputArtifact": "CACHED",
  "AWS::CodePipeline::Pipeline.OutputArtifact": "CACHED",
  "AWS::CodePipeline::Pipeline.StageDeclaration": "CACHED",
  "AWS::CodePipeline::Pipeline.StageTransition": "CACHED",
  "AWS::Config::ConfigRule.CustomPolicyDetails": "CACHED",
  "AWS::Config::ConfigRule.Scope": "CACHED",
  "AWS::Config::ConfigRule.Source": "CACHED",
  "AWS::Config::ConfigRule.SourceDetail": "CACHED",
  "AWS::Config::ConfigurationRecorder.RecordingGroup": "CACHED",
  "AWS::Config::DeliveryChannel.ConfigSnapshotDeliveryProperties": "CACHED",
  "AWS::Config::OrganizationConfigRule.OrganizationCustomCodeRuleMetadata": "CACHED",
  "AWS::Config::OrganizationConfigRule.OrganizationCustomRuleMetadata": "CACHED",
  "AWS::Config::OrganizationConfigRule.OrganizationManagedRuleMetadata": "CACHED",
  "AWS::Config::RemediationConfiguration.ExecutionControls": "CACHED",
  "AWS::Config::RemediationConfiguration.RemediationParameterValue": "CACHED",
  "AWS::Config::RemediationConfiguration.ResourceValue": "CACHED",
  "AWS::Config::RemediationConfiguration.SsmControls": "CACHED",
  "AWS::Config::RemediationConfiguration.StaticValue": "CACHED",
  "AWS::ConnectCampaigns::Campaign.PredictiveDialerConfig": "CACHED",
  "AWS::ConnectCampaigns::Campaign.ProgressiveDialerConfig": "CACHED",
  "AWS::DAX::Cluster.SSESpecification": "CACHED",
  "AWS::DLM::LifecyclePolicy.Action": "CACHED",
  "AWS::DLM::LifecyclePolicy.ArchiveRetainRule": "CACHED",
  "AWS::DLM::LifecyclePolicy.ArchiveRule": "CACHED",
  "AWS::DLM::LifecyclePolicy.CreateRule": "CACHED",
  "AWS::DLM::LifecyclePolicy.CrossRegionCopyAction": "CACHED",
  "AWS::DLM::LifecyclePolicy.CrossRegionCopyDeprecateRule": "CACHED",
  "AWS::DLM::LifecyclePolicy.CrossRegionCopyRetainRule": "CACHED",
  "AWS::DLM::LifecyclePolicy.CrossRegionCopyRule": "CACHED",
  "AWS::DLM::LifecyclePolicy.DeprecateRule": "CACHED",
  "AWS::DLM::LifecyclePolicy.EncryptionConfiguration": "CACHED",
  "AWS::DLM::LifecyclePolicy.EventParameters": "CACHED",
  "AWS::DLM::LifecyclePolicy.EventSource": "CACHED",
  "AWS::DLM::LifecyclePolicy.FastRestoreRule": "CACHED",
  "AWS::DLM::LifecyclePolicy.Parameters": "CACHED",
  "AWS::DLM::LifecyclePolicy.PolicyDetails": "CACHED",
  "AWS::DLM::LifecyclePolicy.RetainRule": "CACHED",
  "AWS::DLM::LifecyclePolicy.RetentionArchiveTier": "CACHED",
  "AWS::DLM::LifecyclePolicy.Schedule": "CACHED",
  "AWS::DLM::LifecyclePolicy.ShareRule": "CACHED",
  "AWS::DMS::Endpoint.DocDbSettings": "CACHED",
  "AWS::DMS::Endpoint.DynamoDbSettings": "CACHED",
  "AWS::DMS::Endpoint.ElasticsearchSettings": "CACHED",
  "AWS::DMS::Endpoint.GcpMySQLSettings": "CACHED",
  "AWS::DMS::Endpoint.IbmDb2Settings": "CACHED",
  "AWS::DMS::Endpoint.KafkaSettings": "CACHED",
  "AWS::DMS::Endpoint.KinesisSettings": "CACHED",
  "AWS::DMS::Endpoint.MicrosoftSqlServerSettings": "CACHED",
  "AWS::DMS::Endpoint.MongoDbSettings": "CACHED",
  "AWS::DMS::Endpoint.MySqlSettings": "CACHED",
  "AWS::DMS::Endpoint.NeptuneSettings": "CACHED",
  "AWS::DMS::Endpoint.OracleSettings": "CACHED",
  "AWS::DMS::Endpoint.PostgreSqlSettings": "CACHED",
  "AWS::DMS::Endpoint.RedisSettings": "CACHED",
  "AWS::DMS::Endpoint.RedshiftSettings": "CACHED",
  "AWS::DMS::Endpoint.S3Settings": "CACHED",
  "AWS::DMS::Endpoint.SybaseSettings": "CACHED",
  "AWS::DataBrew::Dataset.CsvOptions": "CACHED",
  "AWS::DataBrew::Dataset.DataCatalogInputDefinition": "CACHED",
  "AWS::DataBrew::Dataset.DatabaseInputDefinition": "CACHED",
  "AWS::DataBrew::Dataset.DatasetParameter": "CACHED",
  "AWS::DataBrew::Dataset.DatetimeOptions": "CACHED",
  "AWS::DataBrew::Dataset.ExcelOptions": "CACHED",
  "AWS::DataBrew::Dataset.FilesLimit": "CACHED",
  "AWS::DataBrew::Dataset.FilterExpression": "CACHED",
  "AWS::DataBrew::Dataset.FilterValue": "CACHED",
  "AWS::DataBrew::Dataset.FormatOptions": "CACHED",
  "AWS::DataBrew::Dataset.Input": "CACHED",
  "AWS::DataBrew::Dataset.JsonOptions": "CACHED",
  "AWS::DataBrew::Dataset.Metadata": "CACHED",
  "AWS::DataBrew::Dataset.PathOptions": "CACHED",
  "AWS::DataBrew::Dataset.PathParameter": "CACHED",
  "AWS::DataBrew::Dataset.S3Location": "CACHED",
  "AWS::DataBrew::Job.AllowedStatistics": "CACHED",
  "AWS::DataBrew::Job.ColumnSelector": "CACHED",
  "AWS::DataBrew::Job.ColumnStatisticsConfiguration": "CACHED",
  "AWS::DataBrew::Job.CsvOutputOptions": "CACHED",
  "AWS::DataBrew::Job.DataCatalogOutput": "CACHED",
  "AWS::DataBrew::Job.DatabaseOutput": "CACHED",
  "AWS::DataBrew::Job.DatabaseTableOutputOptions": "CACHED",
  "AWS::DataBrew::Job.EntityDetectorConfiguration": "CACHED",
  "AWS::DataBrew::Job.JobSample": "CACHED",
  "AWS::DataBrew::Job.Output": "CACHED",
  "AWS::DataBrew::Job.OutputFormatOptions": "CACHED",
  "AWS::DataBrew::Job.OutputLocation": "CACHED",
  "AWS::DataBrew::Job.ParameterMap": "CACHED",
  "AWS::DataBrew::Job.ProfileConfiguration": "CACHED",
  "AWS::DataBrew::Job.Recipe": "CACHED",
  "AWS::DataBrew::Job.S3Location": "CACHED",
  "AWS::DataBrew::Job.S3TableOutputOptions": "CACHED",
  "AWS::DataBrew::Job.StatisticOverride": "CACHED",
  "AWS::DataBrew::Job.StatisticsConfiguration": "CACHED",
  "AWS::DataBrew::Job.ValidationConfiguration": "CACHED",
  "AWS::DataBrew::Project.Sample": "CACHED",
  "AWS::DataBrew::Recipe.Action": "CACHED",
  "AWS::DataBrew::Recipe.ConditionExpression": "CACHED",
  "AWS::DataBrew::Recipe.DataCatalogInputDefinition": "CACHED",
  "AWS::DataBrew::Recipe.ParameterMap": "CACHED",
  "AWS::DataBrew::Recipe.RecipeParameters": "CACHED",
  "AWS::DataBrew::Recipe.RecipeStep": "CACHED",
  "AWS::DataBrew::Recipe.S3Location": "CACHED",
  "AWS::DataBrew::Recipe.SecondaryInput": "CACHED",
  "AWS::DataBrew::Ruleset.ColumnSelector": "CACHED",
  "AWS::DataBrew::Ruleset.Rule": "CACHED",
  "AWS::DataBrew::Ruleset.SubstitutionValue": "CACHED",
  "AWS::DataBrew::Ruleset.Threshold": "CACHED",
  "AWS::DirectoryService::MicrosoftAD.VpcSettings": "CACHED",
  "AWS::DirectoryService::SimpleAD.VpcSettings": "CACHED",
  "AWS::DynamoDB::GlobalTable.AttributeDefinition": "CACHED",
  "AWS::DynamoDB::GlobalTable.CapacityAutoScalingSettings": "CACHED",
  "AWS::DynamoDB::GlobalTable.ContributorInsightsSpecification": "CACHED",
  "AWS::DynamoDB::GlobalTable.GlobalSecondaryIndex": "CACHED",
  "AWS::DynamoDB::GlobalTable.KeySchema": "CACHED",
  "AWS::DynamoDB::GlobalTable.LocalSecondaryIndex": "CACHED",
  "AWS::DynamoDB::GlobalTable.PointInTimeRecoverySpecification": "CACHED",
  "AWS::DynamoDB::GlobalTable.Projection": "CACHED",
  "AWS::DynamoDB::GlobalTable.ReadProvisionedThroughputSettings": "CACHED",
  "AWS::DynamoDB::GlobalTable.ReplicaGlobalSecondaryIndexSpecification": "CACHED",
  "AWS::DynamoDB::GlobalTable.ReplicaSSESpecification": "CACHED",
  "AWS::DynamoDB::GlobalTable.ReplicaSpecification": "CACHED",
  "AWS::DynamoDB::GlobalTable.SSESpecification": "CACHED",
  "AWS::DynamoDB::GlobalTable.StreamSpecification": "CACHED",
  "AWS::DynamoDB::GlobalTable.TargetTrackingScalingPolicyConfiguration": "CACHED",
  "AWS::DynamoDB::GlobalTable.TimeToLiveSpecification": "CACHED",
  "AWS::DynamoDB::GlobalTable.WriteProvisionedThroughputSettings": "CACHED",
  "AWS::DynamoDB::Table.AttributeDefinition": "CACHED",
  "AWS::DynamoDB::Table.ContributorInsightsSpecification": "CACHED",
  "AWS::DynamoDB::Table.Csv": "CACHED",
  "AWS::DynamoDB::Table.GlobalSecondaryIndex": "CACHED",
  "AWS::DynamoDB::Table.ImportSourceSpecification": "CACHED",
  "AWS::DynamoDB::Table.InputFormatOptions": "CACHED",
  "AWS::DynamoDB::Table.KeySchema": "CACHED",
  "AWS::DynamoDB::Table.KinesisStreamSpecification": "CACHED",
  "AWS::DynamoDB::Table.LocalSecondaryIndex": "CACHED",
  "AWS::DynamoDB::Table.PointInTimeRecoverySpecification": "CACHED",
  "AWS::DynamoDB::Table.Projection": "CACHED",
  "AWS::DynamoDB::Table.ProvisionedThroughput": "CACHED",
  "AWS::DynamoDB::Table.S3BucketSource": "CACHED",
  "AWS::DynamoDB::Table.SSESpecification": "CACHED",
  "AWS::DynamoDB::Table.StreamSpecification": "CACHED",
  "AWS::DynamoDB::Table.TimeToLiveSpecification": "CACHED",
  "AWS::EC2::CapacityReservation.TagSpecification": "CACHED",
  "AWS::EC2::EC2Fleet.AcceleratorCountRequest": "CACHED",
  "AWS::EC2::EC2Fleet.AcceleratorTotalMemoryMiBRequest": "CACHED",
  "AWS::EC2::EC2Fleet.BaselineEbsBandwidthMbpsRequest": "CACHED",
  "AWS::EC2::EC2Fleet.CapacityRebalance": "CACHED",
  "AWS::EC2::EC2Fleet.CapacityReservationOptionsRequest": "CACHED",
  "AWS::EC2::EC2Fleet.FleetLaunchTemplateConfigRequest": "CACHED",
  "AWS::EC2::EC2Fleet.FleetLaunchTemplateOverridesRequest": "CACHED",
  "AWS::EC2::EC2Fleet.FleetLaunchTemplateSpecificationRequest": "CACHED",
  "AWS::EC2::EC2Fleet.InstanceRequirementsRequest": "CACHED",
  "AWS::EC2::EC2Fleet.MaintenanceStrategies": "CACHED",
  "AWS::EC2::EC2Fleet.MemoryGiBPerVCpuRequest": "CACHED",
  "AWS::EC2::EC2Fleet.MemoryMiBRequest": "CACHED",
  "AWS::EC2::EC2Fleet.NetworkBandwidthGbpsRequest": "CACHED",
  "AWS::EC2::EC2Fleet.NetworkInterfaceCountRequest": "CACHED",
  "AWS::EC2::EC2Fleet.OnDemandOptionsRequest": "CACHED",
  "AWS::EC2::EC2Fleet.Placement": "CACHED",
  "AWS::EC2::EC2Fleet.SpotOptionsRequest": "CACHED",
  "AWS::EC2::EC2Fleet.TagSpecification": "CACHED",
  "AWS::EC2::EC2Fleet.TargetCapacitySpecificationRequest": "CACHED",
  "AWS::EC2::EC2Fleet.TotalLocalStorageGBRequest": "CACHED",
  "AWS::EC2::EC2Fleet.VCpuCountRangeRequest": "CACHED",
  "AWS::EC2::Instance.AssociationParameter": "CACHED",
  "AWS::EC2::Instance.BlockDeviceMapping": "CACHED",
  "AWS::EC2::Instance.CpuOptions": "CACHED",
  "AWS::EC2::Instance.CreditSpecification": "CACHED",
  "AWS::EC2::Instance.Ebs": "CACHED",
  "AWS::EC2::Instance.ElasticGpuSpecification": "CACHED",
  "AWS::EC2::Instance.ElasticInferenceAccelerator": "CACHED",
  "AWS::EC2::Instance.EnclaveOptions": "CACHED",
  "AWS::EC2::Instance.HibernationOptions": "CACHED",
  "AWS::EC2::Instance.InstanceIpv6Address": "CACHED",
  "AWS::EC2::Instance.LaunchTemplateSpecification": "CACHED",
  "AWS::EC2::Instance.LicenseSpecification": "CACHED",
  "AWS::EC2::Instance.NetworkInterface": "CACHED",
  "AWS::EC2::Instance.NoDevice": "CACHED",
  "AWS::EC2::Instance.PrivateDnsNameOptions": "CACHED",
  "AWS::EC2::Instance.PrivateIpAddressSpecification": "CACHED",
  "AWS::EC2::Instance.SsmAssociation": "CACHED",
  "AWS::EC2::Instance.Volume": "CACHED",
  "AWS::EC2::LaunchTemplate.AcceleratorCount": "CACHED",
  "AWS::EC2::LaunchTemplate.AcceleratorTotalMemoryMiB": "CACHED",
  "AWS::EC2::LaunchTemplate.BaselineEbsBandwidthMbps": "CACHED",
  "AWS::EC2::LaunchTemplate.BlockDeviceMapping": "CACHED",
  "AWS::EC2::LaunchTemplate.CapacityReservationSpecification": "CACHED",
  "AWS::EC2::LaunchTemplate.CapacityReservationTarget": "CACHED",
  "AWS::EC2::LaunchTemplate.CpuOptions": "CACHED",
  "AWS::EC2::LaunchTemplate.CreditSpecification": "CACHED",
  "AWS::EC2::LaunchTemplate.Ebs": "CACHED",
  "AWS::EC2::LaunchTemplate.ElasticGpuSpecification": "CACHED",
  "AWS::EC2::LaunchTemplate.EnclaveOptions": "CACHED",
  "AWS::EC2::LaunchTemplate.HibernationOptions": "CACHED",
  "AWS::EC2::LaunchTemplate.IamInstanceProfile": "CACHED",
  "AWS::EC2::LaunchTemplate.InstanceMarketOptions": "CACHED",
  "AWS::EC2::LaunchTemplate.InstanceRequirements": "CACHED",
  "AWS::EC2::LaunchTemplate.Ipv4PrefixSpecification": "CACHED",
  "AWS::EC2::LaunchTemplate.Ipv6Add": "CACHED",
  "AWS::EC2::LaunchTemplate.Ipv6PrefixSpecification": "CACHED",
  "AWS::EC2::LaunchTemplate.LaunchTemplateData": "CACHED",
  "AWS::EC2::LaunchTemplate.LaunchTemplateElasticInferenceAccelerator": "CACHED",
  "AWS::EC2::LaunchTemplate.LaunchTemplateTagSpecification": "CACHED",
  "AWS::EC2::LaunchTemplate.LicenseSpecification": "CACHED",
  "AWS::EC2::LaunchTemplate.MaintenanceOptions": "CACHED",
  "AWS::EC2::LaunchTemplate.MemoryGiBPerVCpu": "CACHED",
  "AWS::EC2::LaunchTemplate.MemoryMiB": "CACHED",
  "AWS::EC2::LaunchTemplate.MetadataOptions": "CACHED",
  "AWS::EC2::LaunchTemplate.Monitoring": "CACHED",
  "AWS::EC2::LaunchTemplate.NetworkBandwidthGbps": "CACHED",
  "AWS::EC2::LaunchTemplate.NetworkInterface": "CACHED",
  "AWS::EC2::LaunchTemplate.NetworkInterfaceCount": "CACHED",
  "AWS::EC2::LaunchTemplate.Placement": "CACHED",
  "AWS::EC2::LaunchTemplate.PrivateDnsNameOptions": "CACHED",
  "AWS::EC2::LaunchTemplate.PrivateIpAdd": "CACHED",
  "AWS::EC2::LaunchTemplate.SpotOptions": "CACHED",
  "AWS::EC2::LaunchTemplate.TagSpecification": "CACHED",
  "AWS::EC2::LaunchTemplate.TotalLocalStorageGB": "CACHED",
  "AWS::EC2::LaunchTemplate.VCpuCount": "CACHED",
  "AWS::EC2::NetworkAclEntry.Icmp": "CACHED",
  "AWS::EC2::NetworkAclEntry.PortRange": "CACHED",
  "AWS::EC2::NetworkInterface.InstanceIpv6Address": "CACHED",
  "AWS::EC2::NetworkInterface.PrivateIpAddressSpecification": "CACHED",
  "AWS::EC2::PrefixList.Entry": "CACHED",
  "AWS::EC2::SecurityGroup.Egress": "CACHED",
  "AWS::EC2::SecurityGroup.Ingress": "CACHED",
  "AWS::EC2::SpotFleet.AcceleratorCountRequest": "CACHED",
  "AWS::EC2::SpotFleet.AcceleratorTotalMemoryMiBRequest": "CACHED",
  "AWS::EC2::SpotFleet.BaselineEbsBandwidthMbpsRequest": "CACHED",
  "AWS::EC2::SpotFleet.BlockDeviceMapping": "CACHED",
  "AWS::EC2::SpotFleet.ClassicLoadBalancer": "CACHED",
  "AWS::EC2::SpotFleet.ClassicLoadBalancersConfig": "CACHED",
  "AWS::EC2::SpotFleet.EbsBlockDevice": "CACHED",
  "AWS::EC2::SpotFleet.FleetLaunchTemplateSpecification": "CACHED",
  "AWS::EC2::SpotFleet.GroupIdentifier": "CACHED",
  "AWS::EC2::SpotFleet.IamInstanceProfileSpecification": "CACHED",
  "AWS::EC2::SpotFleet.InstanceIpv6Address": "CACHED",
  "AWS::EC2::SpotFleet.InstanceNetworkInterfaceSpecification": "CACHED",
  "AWS::EC2::SpotFleet.InstanceRequirementsRequest": "CACHED",
  "AWS::EC2::SpotFleet.LaunchTemplateConfig": "CACHED",
  "AWS::EC2::SpotFleet.LaunchTemplateOverrides": "CACHED",
  "AWS::EC2::SpotFleet.LoadBalancersConfig": "CACHED",
  "AWS::EC2::SpotFleet.MemoryGiBPerVCpuRequest": "CACHED",
  "AWS::EC2::SpotFleet.MemoryMiBRequest": "CACHED",
  "AWS::EC2::SpotFleet.NetworkBandwidthGbpsRequest": "CACHED",
  "AWS::EC2::SpotFleet.NetworkInterfaceCountRequest": "CACHED",
  "AWS::EC2::SpotFleet.PrivateIpAddressSpecification": "CACHED",
  "AWS::EC2::SpotFleet.SpotCapacityRebalance": "CACHED",
  "AWS::EC2::SpotFleet.SpotFleetLaunchSpecification": "CACHED",
  "AWS::EC2::SpotFleet.SpotFleetMonitoring": "CACHED",
  "AWS::EC2::SpotFleet.SpotFleetRequestConfigData": "CACHED",
  "AWS::EC2::SpotFleet.SpotFleetTagSpecification": "CACHED",
  "AWS::EC2::SpotFleet.SpotMaintenanceStrategies": "CACHED",
  "AWS::EC2::SpotFleet.SpotPlacement": "CACHED",
  "AWS::EC2::SpotFleet.TargetGroup": "CACHED",
  "AWS::EC2::SpotFleet.TargetGroupsConfig": "CACHED",
  "AWS::EC2::SpotFleet.TotalLocalStorageGBRequest": "CACHED",
  "AWS::EC2::SpotFleet.VCpuCountRangeRequest": "CACHED",
  "AWS::EC2::TrafficMirrorFilterRule.TrafficMirrorPortRange": "CACHED",
  "AWS::EC2::TransitGatewayConnect.TransitGatewayConnectOptions": "CACHED",
  "AWS::EC2::VPNConnection.VpnTunnelOptionsSpecification": "CACHED",
  "AWS::ECR::Repository.EncryptionConfiguration": "CACHED",
  "AWS::ECR::Repository.ImageScanningConfiguration": "CACHED",
  "AWS::ECR::Repository.LifecyclePolicy": "CACHED",
  "AWS::ECS::CapacityProvider.AutoScalingGroupProvider": "CACHED",
  "AWS::ECS::CapacityProvider.ManagedScaling": "CACHED",
  "AWS::ECS::Cluster.CapacityProviderStrategyItem": "CACHED",
  "AWS::ECS::Cluster.ClusterConfiguration": "CACHED",
  "AWS::ECS::Cluster.ClusterSettings": "CACHED",
  "AWS::ECS::Cluster.ExecuteCommandConfiguration": "CACHED",
  "AWS::ECS::Cluster.ExecuteCommandLogConfiguration": "CACHED",
  "AWS::ECS::Cluster.ServiceConnectDefaults": "CACHED",
  "AWS::ECS::ClusterCapacityProviderAssociations.CapacityProviderStrategy": "CACHED",
  "AWS::ECS::Service.AwsVpcConfiguration": "CACHED",
  "AWS::ECS::Service.CapacityProviderStrategyItem": "CACHED",
  "AWS::ECS::Service.DeploymentCircuitBreaker": "CACHED",
  "AWS::ECS::Service.DeploymentConfiguration": "CACHED",
  "AWS::ECS::Service.DeploymentController": "CACHED",
  "AWS::ECS::Service.LoadBalancer": "CACHED",
  "AWS::ECS::Service.LogConfiguration": "CACHED",
  "AWS::ECS::Service.NetworkConfiguration": "CACHED",
  "AWS::ECS::Service.PlacementConstraint": "CACHED",
  "AWS::ECS::Service.PlacementStrategy": "CACHED",
  "AWS::ECS::Service.Secret": "CACHED",
  "AWS::ECS::Service.ServiceConnectClientAlias": "CACHED",
  "AWS::ECS::Service.ServiceConnectConfiguration": "CACHED",
  "AWS::ECS::Service.ServiceConnectService": "CACHED",
  "AWS::ECS::Service.ServiceRegistry": "CACHED",
  "AWS::ECS::TaskDefinition.AuthorizationConfig": "CACHED",
  "AWS::ECS::TaskDefinition.ContainerDefinition": "CACHED",
  "AWS::ECS::TaskDefinition.ContainerDependency": "CACHED",
  "AWS::ECS::TaskDefinition.Device": "CACHED",
  "AWS::ECS::TaskDefinition.DockerVolumeConfiguration": "CACHED",
  "AWS::ECS::TaskDefinition.EFSVolumeConfiguration": "CACHED",
  "AWS::ECS::TaskDefinition.EnvironmentFile": "CACHED",
  "AWS::ECS::TaskDefinition.EphemeralStorage": "CACHED",
  "AWS::ECS::TaskDefinition.FirelensConfiguration": "CACHED",
  "AWS::ECS::TaskDefinition.HealthCheck": "CACHED",
  "AWS::ECS::TaskDefinition.HostEntry": "CACHED",
  "AWS::ECS::TaskDefinition.HostVolumeProperties": "CACHED",
  "AWS::ECS::TaskDefinition.InferenceAccelerator": "CACHED",
  "AWS::ECS::TaskDefinition.KernelCapabilities": "CACHED",
  "AWS::ECS::TaskDefinition.KeyValuePair": "CACHED",
  "AWS::ECS::TaskDefinition.LinuxParameters": "CACHED",
  "AWS::ECS::TaskDefinition.LogConfiguration": "CACHED",
  "AWS::ECS::TaskDefinition.MountPoint": "CACHED",
  "AWS::ECS::TaskDefinition.PortMapping": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-portmappings.html",
   "Properties": {
    "ContainerPort": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-portmappings.html#cfn-ecs-taskdefinition-containerdefinition-portmappings-containerport",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "HostPort": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-portmappings.html#cfn-ecs-taskdefinition-containerdefinition-portmappings-readonly",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "Protocol": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-portmappings.html#cfn-ecs-taskdefinition-containerdefinition-portmappings-sourcevolume",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    }
   }
  },
  "AWS::ECS::TaskDefinition.ProxyConfiguration": "CACHED",
  "AWS::ECS::TaskDefinition.RepositoryCredentials": "CACHED",
  "AWS::ECS::TaskDefinition.ResourceRequirement": "CACHED",
  "AWS::ECS::TaskDefinition.RuntimePlatform": "CACHED",
  "AWS::ECS::TaskDefinition.Secret": "CACHED",
  "AWS::ECS::TaskDefinition.SystemControl": "CACHED",
  "AWS::ECS::TaskDefinition.TaskDefinitionPlacementConstraint": "CACHED",
  "AWS::ECS::TaskDefinition.Tmpfs": "CACHED",
  "AWS::ECS::TaskDefinition.Ulimit": "CACHED",
  "AWS::ECS::TaskDefinition.Volume": "CACHED",
  "AWS::ECS::TaskDefinition.VolumeFrom": "CACHED",
  "AWS::ECS::TaskSet.AwsVpcConfiguration": "CACHED",
  "AWS::ECS::TaskSet.LoadBalancer": "CACHED",
  "AWS::ECS::TaskSet.NetworkConfiguration": "CACHED",
  "AWS::ECS::TaskSet.Scale": "CACHED",
  "AWS::ECS::TaskSet.ServiceRegistry": "CACHED",
  "AWS::EFS::AccessPoint.AccessPointTag": "CACHED",
  "AWS::EFS::AccessPoint.CreationInfo": "CACHED",
  "AWS::EFS::AccessPoint.PosixUser": "CACHED",
  "AWS::EFS::AccessPoint.RootDirectory": "CACHED",
  "AWS::EFS::FileSystem.BackupPolicy": "CACHED",
  "AWS::EFS::FileSystem.ElasticFileSystemTag": "CACHED",
  "AWS::EFS::FileSystem.LifecyclePolicy": "CACHED",
  "AWS::EKS::Cluster.ClusterLogging": "CACHED",
  "AWS::EKS::Cluster.ControlPlanePlacement": "CACHED",
  "AWS::EKS::Cluster.EncryptionConfig": "CACHED",
  "AWS::EKS::Cluster.KubernetesNetworkConfig": "CACHED",
  "AWS::EKS::Cluster.Logging": "CACHED",
  "AWS::EKS::Cluster.LoggingTypeConfig": "CACHED",
  "AWS::EKS::Cluster.OutpostConfig": "CACHED",
  "AWS::EKS::Cluster.Provider": "CACHED",
  "AWS::EKS::Cluster.ResourcesVpcConfig": "CACHED",
  "AWS::EKS::FargateProfile.Label": "CACHED",
  "AWS::EKS::FargateProfile.Selector": "CACHED",
  "AWS::EKS::IdentityProviderConfig.OidcIdentityProviderConfig": "CACHED",
  "AWS::EKS::IdentityProviderConfig.RequiredClaim": "CACHED",
  "AWS::EKS::Nodegroup.LaunchTemplateSpecification": "CACHED",
  "AWS::EKS::Nodegroup.RemoteAccess": "CACHED",
  "AWS::EKS::Nodegroup.ScalingConfig": "CACHED",
  "AWS::EKS::Nodegroup.Taint": "CACHED",
  "AWS::EKS::Nodegroup.UpdateConfig": "CACHED",
  "AWS::EMR::Cluster.Application": "CACHED",
  "AWS::EMR::Cluster.AutoScalingPolicy": "CACHED",
  "AWS::EMR::Cluster.AutoTerminationPolicy": "CACHED",
  "AWS::EMR::Cluster.BootstrapActionConfig": "CACHED",
  "AWS::EMR::Cluster.CloudWatchAlarmDefinition": "CACHED",
  "AWS::EMR::Cluster.ComputeLimits": "CACHED",
  "AWS::EMR::Cluster.Configuration": "CACHED",
  "AWS::EMR::Cluster.EbsBlockDeviceConfig": "CACHED",
  "AWS::EMR::Cluster.EbsConfiguration": "CACHED",
  "AWS::EMR::Cluster.HadoopJarStepConfig": "CACHED",
  "AWS::EMR::Cluster.InstanceFleetConfig": "CACHED",
  "AWS::EMR::Cluster.InstanceFleetProvisioningSpecifications": "CACHED",
  "AWS::EMR::Cluster.InstanceGroupConfig": "CACHED",
  "AWS::EMR::Cluster.InstanceTypeConfig": "CACHED",
  "AWS::EMR::Cluster.JobFlowInstancesConfig": "CACHED",
  "AWS::EMR::Cluster.KerberosAttributes": "CACHED",
  "AWS::EMR::Cluster.KeyValue": "CACHED",
  "AWS::EMR::Cluster.ManagedScalingPolicy": "CACHED",
  "AWS::EMR::Cluster.MetricDimension": "CACHED",
  "AWS::EMR::Cluster.OnDemandProvisioningSpecification": "CACHED",
  "AWS::EMR::Cluster.PlacementType": "CACHED",
  "AWS::EMR::Cluster.ScalingAction": "CACHED",
  "AWS::EMR::Cluster.ScalingConstraints": "CACHED",
  "AWS::EMR::Cluster.ScalingRule": "CACHED",
  "AWS::EMR::Cluster.ScalingTrigger": "CACHED",
  "AWS::EMR::Cluster.ScriptBootstrapActionConfig": "CACHED",
  "AWS::EMR::Cluster.SimpleScalingPolicyConfiguration": "CACHED",
  "AWS::EMR::Cluster.SpotProvisioningSpecification": "CACHED",
  "AWS::EMR::Cluster.StepConfig": "CACHED",
  "AWS::EMR::Cluster.VolumeSpecification": "CACHED",
  "AWS::EMR::InstanceFleetConfig.Configuration": "CACHED",
  "AWS::EMR::InstanceFleetConfig.EbsBlockDeviceConfig": "CACHED",
  "AWS::EMR::InstanceFleetConfig.EbsConfiguration": "CACHED",
  "AWS::EMR::InstanceFleetConfig.InstanceFleetProvisioningSpecifications": "CACHED",
  "AWS::EMR::InstanceFleetConfig.InstanceTypeConfig": "CACHED",
  "AWS::EMR::InstanceFleetConfig.OnDemandProvisioningSpecification": "CACHED",
  "AWS::EMR::InstanceFleetConfig.SpotProvisioningSpecification": "CACHED",
  "AWS::EMR::InstanceFleetConfig.VolumeSpecification": "CACHED",
  "AWS::EMR::InstanceGroupConfig.AutoScalingPolicy": "CACHED",
  "AWS::EMR::InstanceGroupConfig.CloudWatchAlarmDefinition": "CACHED",
  "AWS::EMR::InstanceGroupConfig.Configuration": "CACHED",
  "AWS::EMR::InstanceGroupConfig.EbsBlockDeviceConfig": "CACHED",
  "AWS::EMR::InstanceGroupConfig.EbsConfiguration": "CACHED",
  "AWS::EMR::InstanceGroupConfig.MetricDimension": "CACHED",
  "AWS::EMR::InstanceGroupConfig.ScalingAction": "CACHED",
  "AWS::EMR::InstanceGroupConfig.ScalingConstraints": "CACHED",
  "AWS::EMR::InstanceGroupConfig.ScalingRule": "CACHED",
  "AWS::EMR::InstanceGroupConfig.ScalingTrigger": "CACHED",
  "AWS::EMR::InstanceGroupConfig.SimpleScalingPolicyConfiguration": "CACHED",
  "AWS::EMR::InstanceGroupConfig.VolumeSpecification": "CACHED",
  "AWS::EMR::Step.HadoopJarStepConfig": "CACHED",
  "AWS::EMR::Step.KeyValue": "CACHED",
  "AWS::ElastiCache::CacheCluster.CloudWatchLogsDestinationDetails": "CACHED",
  "AWS::ElastiCache::CacheCluster.DestinationDetails": "CACHED",
  "AWS::ElastiCache::CacheCluster.KinesisFirehoseDestinationDetails": "CACHED",
  "AWS::ElastiCache::CacheCluster.LogDeliveryConfigurationRequest": "CACHED",
  "AWS::ElastiCache::GlobalReplicationGroup.GlobalReplicationGroupMember": "CACHED",
  "AWS::ElastiCache::GlobalReplicationGroup.RegionalConfiguration": "CACHED",
  "AWS::ElastiCache::GlobalReplicationGroup.ReshardingConfiguration": "CACHED",
  "AWS::ElastiCache::ReplicationGroup.CloudWatchLogsDestinationDetails": "CACHED",
  "AWS::ElastiCache::ReplicationGroup.DestinationDetails": "CACHED",
  "AWS::ElastiCache::ReplicationGroup.KinesisFirehoseDestinationDetails": "CACHED",
  "AWS::ElastiCache::ReplicationGroup.LogDeliveryConfigurationRequest": "CACHED",
  "AWS::ElastiCache::ReplicationGroup.NodeGroupConfiguration": "CACHED",
  "AWS::ElasticBeanstalk::Application.ApplicationResourceLifecycleConfig": "CACHED",
  "AWS::ElasticBeanstalk::Application.ApplicationVersionLifecycleConfig": "CACHED",
  "AWS::ElasticBeanstalk::Application.MaxAgeRule": "CACHED",
  "AWS::ElasticBeanstalk::Application.MaxCountRule": "CACHED",
  "AWS::ElasticBeanstalk::ApplicationVersion.SourceBundle": "CACHED",
  "AWS::ElasticBeanstalk::ConfigurationTemplate.ConfigurationOptionSetting": "CACHED",
  "AWS::ElasticBeanstalk::ConfigurationTemplate.SourceConfiguration": "CACHED",
  "AWS::ElasticBeanstalk::Environment.OptionSetting": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-option-settings.html",
   "Properties": {
    "Namespace": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-option-settings.html#cfn-beanstalk-optionsettings-namespace",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "OptionName": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-option-settings.html#cfn-beanstalk-optionsettings-optionname",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "ResourceName": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-option-settings.html#cfn-elasticbeanstalk-environment-optionsetting-resourcename",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "Value": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-option-settings.html#cfn-beanstalk-optionsettings-value",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::ElasticBeanstalk::Environment.Tier": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment-tier.html",
   "Properties": {
    "Name": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment-tier.html#cfn-beanstalk-env-tier-name",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "Type": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment-tier.html#cfn-beanstalk-env-tier-type",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "Version": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment-tier.html#cfn-beanstalk-env-tier-version",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::ElasticLoadBalancing::LoadBalancer.AccessLoggingPolicy": "CACHED",
  "AWS::ElasticLoadBalancing::LoadBalancer.AppCookieStickinessPolicy": "CACHED",
  "AWS::ElasticLoadBalancing::LoadBalancer.ConnectionDrainingPolicy": "CACHED",
  "AWS::ElasticLoadBalancing::LoadBalancer.ConnectionSettings": "CACHED",
  "AWS::ElasticLoadBalancing::LoadBalancer.HealthCheck": "CACHED",
  "AWS::ElasticLoadBalancing::LoadBalancer.LBCookieStickinessPolicy": "CACHED",
  "AWS::ElasticLoadBalancing::LoadBalancer.Listeners": "CACHED",
  "AWS::ElasticLoadBalancing::LoadBalancer.Policies": "CACHED",
  "AWS::ElasticLoadBalancingV2::Listener.Action": "CACHED",
  "AWS::ElasticLoadBalancingV2::Listener.AuthenticateCognitoConfig": "CACHED",
  "AWS::ElasticLoadBalancingV2::Listener.AuthenticateOidcConfig": "CACHED",
  "AWS::ElasticLoadBalancingV2::Listener.Certificate": "CACHED",
  "AWS::ElasticLoadBalancingV2::Listener.FixedResponseConfig": "CACHED",
  "AWS::ElasticLoadBalancingV2::Listener.ForwardConfig": "CACHED",
  "AWS::ElasticLoadBalancingV2::Listener.RedirectConfig": "CACHED",
  "AWS::ElasticLoadBalancingV2::Listener.TargetGroupStickinessConfig": "CACHED",
  "AWS::ElasticLoadBalancingV2::Listener.TargetGroupTuple": "CACHED",
  "AWS::ElasticLoadBalancingV2::ListenerCertificate.Certificate": "CACHED",
  "AWS::ElasticLoadBalancingV2::ListenerRule.Action": "CACHED",
  "AWS::ElasticLoadBalancingV2::ListenerRule.AuthenticateCognitoConfig": "CACHED",
  "AWS::ElasticLoadBalancingV2::ListenerRule.AuthenticateOidcConfig": "CACHED",
  "AWS::ElasticLoadBalancingV2::ListenerRule.FixedResponseConfig": "CACHED",
  "AWS::ElasticLoadBalancingV2::ListenerRule.ForwardConfig": "CACHED",
  "AWS::ElasticLoadBalancingV2::ListenerRule.HostHeaderConfig": "CACHED",
  "AWS::ElasticLoadBalancingV2::ListenerRule.HttpHeaderConfig": "CACHED",
  "AWS::ElasticLoadBalancingV2::ListenerRule.HttpRequestMethodConfig": "CACHED",
  "AWS::ElasticLoadBalancingV2::ListenerRule.PathPatternConfig": "CACHED",
  "AWS::ElasticLoadBalancingV2::ListenerRule.QueryStringConfig": "CACHED",
  "AWS::ElasticLoadBalancingV2::ListenerRule.QueryStringKeyValue": "CACHED",
  "AWS::ElasticLoadBalancingV2::ListenerRule.RedirectConfig": "CACHED",
  "AWS::ElasticLoadBalancingV2::ListenerRule.RuleCondition": "CACHED",
  "AWS::ElasticLoadBalancingV2::ListenerRule.SourceIpConfig": "CACHED",
  "AWS::ElasticLoadBalancingV2::ListenerRule.TargetGroupStickinessConfig": "CACHED",
  "AWS::ElasticLoadBalancingV2::ListenerRule.TargetGroupTuple": "CACHED",
  "AWS::ElasticLoadBalancingV2::LoadBalancer.LoadBalancerAttribute": "CACHED",
  "AWS::ElasticLoadBalancingV2::LoadBalancer.SubnetMapping": "CACHED",
  "AWS::ElasticLoadBalancingV2::TargetGroup.Matcher": "CACHED",
  "AWS::ElasticLoadBalancingV2::TargetGroup.TargetDescription": "CACHED",
  "AWS::ElasticLoadBalancingV2::TargetGroup.TargetGroupAttribute": "CACHED",
  "AWS::Elasticsearch::Domain.AdvancedSecurityOptionsInput": "CACHED",
  "AWS::Elasticsearch::Domain.CognitoOptions": "CACHED",
  "AWS::Elasticsearch::Domain.ColdStorageOptions": "CACHED",
  "AWS::Elasticsearch::Domain.DomainEndpointOptions": "CACHED",
  "AWS::Elasticsearch::Domain.EBSOptions": "CACHED",
  "AWS::Elasticsearch::Domain.ElasticsearchClusterConfig": "CACHED",
  "AWS::Elasticsearch::Domain.EncryptionAtRestOptions": "CACHED",
  "AWS::Elasticsearch::Domain.LogPublishingOption": "CACHED",
  "AWS::Elasticsearch::Domain.MasterUserOptions": "CACHED",
  "AWS::Elasticsearch::Domain.NodeToNodeEncryptionOptions": "CACHED",
  "AWS::Elasticsearch::Domain.SnapshotOptions": "CACHED",
  "AWS::Elasticsearch::Domain.VPCOptions": "CACHED",
  "AWS::Elasticsearch::Domain.ZoneAwarenessConfig": "CACHED",
  "AWS::Events::EventBus.TagEntry": "CACHED",
  "AWS::Events::EventBusPolicy.Condition": "CACHED",
  "AWS::Events::Rule.AwsVpcConfiguration": "CACHED",
  "AWS::Events::Rule.BatchArrayProperties": "CACHED",
  "AWS::Events::Rule.BatchParameters": "CACHED",
  "AWS::Events::Rule.BatchRetryStrategy": "CACHED",
  "AWS::Events::Rule.CapacityProviderStrategyItem": "CACHED",
  "AWS::Events::Rule.DeadLetterConfig": "CACHED",
  "AWS::Events::Rule.EcsParameters": "CACHED",
  "AWS::Events::Rule.HttpParameters": "CACHED",
  "AWS::Events::Rule.InputTransformer": "CACHED",
  "AWS::Events::Rule.KinesisParameters": "CACHED",
  "AWS::Events::Rule.NetworkConfiguration": "CACHED",
  "AWS::Events::Rule.PlacementConstraint": "CACHED",
  "AWS::Events::Rule.PlacementStrategy": "CACHED",
  "AWS::Events::Rule.RedshiftDataParameters": "CACHED",
  "AWS::Events::Rule.RetryPolicy": "CACHED",
  "AWS::Events::Rule.RunCommandParameters": "CACHED",
  "AWS::Events::Rule.RunCommandTarget": "CACHED",
  "AWS::Events::Rule.SageMakerPipelineParameter": "CACHED",
  "AWS::Events::Rule.SageMakerPipelineParameters": "CACHED",
  "AWS::Events::Rule.SqsParameters": "CACHED",
  "AWS::Events::Rule.Tag": "CACHED",
  "AWS::Events::Rule.Target": "CACHED",
  "AWS::FSx::DataRepositoryAssociation.AutoExportPolicy": "CACHED",
  "AWS::FSx::DataRepositoryAssociation.AutoImportPolicy": "CACHED",
  "AWS::FSx::DataRepositoryAssociation.S3": "CACHED",
  "AWS::FSx::FileSystem.AuditLogConfiguration": "CACHED",
  "AWS::FSx::FileSystem.ClientConfigurations": "CACHED",
  "AWS::FSx::FileSystem.DiskIopsConfiguration": "CACHED",
  "AWS::FSx::FileSystem.LustreConfiguration": "CACHED",
  "AWS::FSx::FileSystem.NfsExports": "CACHED",
  "AWS::FSx::FileSystem.OntapConfiguration": "CACHED",
  "AWS::FSx::FileSystem.OpenZFSConfiguration": "CACHED",
  "AWS::FSx::FileSystem.RootVolumeConfiguration": "CACHED",
  "AWS::FSx::FileSystem.SelfManagedActiveDirectoryConfiguration": "CACHED",
  "AWS::FSx::FileSystem.UserAndGroupQuotas": "CACHED",
  "AWS::FSx::FileSystem.WindowsConfiguration": "CACHED",
  "AWS::GameLift::Alias.RoutingStrategy": "CACHED",
  "AWS::GameLift::Build.S3Location": "CACHED",
  "AWS::GameLift::Fleet.CertificateConfiguration": "CACHED",
  "AWS::GameLift::Fleet.IpPermission": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-fleet-ec2inboundpermission.html",
   "Properties": {
    "FromPort": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-fleet-ec2inboundpermission.html#cfn-gamelift-fleet-ec2inboundpermissions-fromport",
     "PrimitiveType": "Integer",
     "Required": true,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::GameLift::Fleet.IpPermission.FromPort"
     }
    },
    "IpRange": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-fleet-ec2inboundpermission.html#cfn-gamelift-fleet-ec2inboundpermissions-iprange",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::GameLift::Fleet.IpPermission.IpRange"
     }
    },
    "Protocol": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-fleet-ec2inboundpermission.html#cfn-gamelift-fleet-ec2inboundpermissions-protocol",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::GameLift::Fleet.IpPermission.Protocol"
     }
    },
    "ToPort": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-fleet-ec2inboundpermission.html#cfn-gamelift-fleet-ec2inboundpermissions-toport",
     "PrimitiveType": "Integer",
     "Required": true,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::GameLift::Fleet.IpPermission.ToPort"
     }
    }
   }
  },
  "AWS::GameLift::Fleet.ResourceCreationLimitPolicy": "CACHED",
  "AWS::GameLift::Fleet.RuntimeConfiguration": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-fleet-runtimeconfiguration.html",
   "Properties": {
    "GameSessionActivationTimeoutSeconds": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-fleet-runtimeconfiguration.html#cfn-gamelift-fleet-runtimeconfiguration-gamesessionactivationtimeoutseconds",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::GameLift::Fleet.RuntimeConfiguration.GameSessionActivationTimeoutSeconds"
     }
    },
    "MaxConcurrentGameSessionActivations": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-fleet-runtimeconfiguration.html#cfn-gamelift-fleet-runtimeconfiguration-maxconcurrentgamesessionactivations",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::GameLift::Fleet.RuntimeConfiguration.MaxConcurrentGameSessionActivations"
     }
    },
    "ServerProcesses": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-fleet-runtimeconfiguration.html#cfn-gamelift-fleet-runtimeconfiguration-serverprocesses",
     "DuplicatesAllowed": false,
     "ItemType": "ServerProcess",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::GameLift::Fleet.ServerProcess": "CACHED",
  "AWS::GameLift::GameServerGroup.AutoScalingPolicy": "CACHED",
  "AWS::GameLift::GameServerGroup.InstanceDefinition": "CACHED",
  "AWS::GameLift::GameServerGroup.LaunchTemplate": "CACHED",
  "AWS::GameLift::GameServerGroup.TargetTrackingConfiguration": "CACHED",
  "AWS::GameLift::GameSessionQueue.Destination": "CACHED",
  "AWS::GameLift::GameSessionQueue.FilterConfiguration": "CACHED",
  "AWS::GameLift::GameSessionQueue.PlayerLatencyPolicy": "CACHED",
  "AWS::GameLift::GameSessionQueue.PriorityConfiguration": "CACHED",
  "AWS::GameLift::MatchmakingConfiguration.GameProperty": "CACHED",
  "AWS::GameLift::Script.S3Location": "CACHED",
  "AWS::Glue::Classifier.CsvClassifier": "CACHED",
  "AWS::Glue::Classifier.GrokClassifier": "CACHED",
  "AWS::Glue::Classifier.JsonClassifier": "CACHED",
  "AWS::Glue::Classifier.XMLClassifier": "CACHED",
  "AWS::Glue::Connection.ConnectionInput": "CACHED",
  "AWS::Glue::Connection.PhysicalConnectionRequirements": "CACHED",
  "AWS::Glue::Crawler.CatalogTarget": "CACHED",
  "AWS::Glue::Crawler.DynamoDBTarget": "CACHED",
  "AWS::Glue::Crawler.JdbcTarget": "CACHED",
  "AWS::Glue::Crawler.MongoDBTarget": "CACHED",
  "AWS::Glue::Crawler.RecrawlPolicy": "CACHED",
  "AWS::Glue::Crawler.S3Target": "CACHED",
  "AWS::Glue::Crawler.Schedule": "CACHED",
  "AWS::Glue::Crawler.SchemaChangePolicy": "CACHED",
  "AWS::Glue::Crawler.Targets": "CACHED",
  "AWS::Glue::DataCatalogEncryptionSettings.ConnectionPasswordEncryption": "CACHED",
  "AWS::Glue::DataCatalogEncryptionSettings.DataCatalogEncryptionSettings": "CACHED",
  "AWS::Glue::DataCatalogEncryptionSettings.EncryptionAtRest": "CACHED",
  "AWS::Glue::Database.DataLakePrincipal": "CACHED",
  "AWS::Glue::Database.DatabaseIdentifier": "CACHED",
  "AWS::Glue::Database.DatabaseInput": "CACHED",
  "AWS::Glue::Database.PrincipalPrivileges": "CACHED",
  "AWS::Glue::Job.ConnectionsList": "CACHED",
  "AWS::Glue::Job.ExecutionProperty": "CACHED",
  "AWS::Glue::Job.JobCommand": "CACHED",
  "AWS::Glue::Job.NotificationProperty": "CACHED",
  "AWS::Glue::Partition.Column": "CACHED",
  "AWS::Glue::Partition.Order": "CACHED",
  "AWS::Glue::Partition.PartitionInput": "CACHED",
  "AWS::Glue::Partition.SchemaId": "CACHED",
  "AWS::Glue::Partition.SchemaReference": "CACHED",
  "AWS::Glue::Partition.SerdeInfo": "CACHED",
  "AWS::Glue::Partition.SkewedInfo": "CACHED",
  "AWS::Glue::Partition.StorageDescriptor": "CACHED",
  "AWS::Glue::Schema.Registry": "CACHED",
  "AWS::Glue::Schema.SchemaVersion": "CACHED",
  "AWS::Glue::SchemaVersion.Schema": "CACHED",
  "AWS::Glue::SecurityConfiguration.CloudWatchEncryption": "CACHED",
  "AWS::Glue::SecurityConfiguration.EncryptionConfiguration": "CACHED",
  "AWS::Glue::SecurityConfiguration.JobBookmarksEncryption": "CACHED",
  "AWS::Glue::SecurityConfiguration.S3Encryption": "CACHED",
  "AWS::Glue::SecurityConfiguration.S3Encryptions": "CACHED",
  "AWS::Glue::Table.Column": "CACHED",
  "AWS::Glue::Table.Order": "CACHED",
  "AWS::Glue::Table.SchemaId": "CACHED",
  "AWS::Glue::Table.SchemaReference": "CACHED",
  "AWS::Glue::Table.SerdeInfo": "CACHED",
  "AWS::Glue::Table.SkewedInfo": "CACHED",
  "AWS::Glue::Table.StorageDescriptor": "CACHED",
  "AWS::Glue::Table.TableIdentifier": "CACHED",
  "AWS::Glue::Table.TableInput": "CACHED",
  "AWS::Glue::Trigger.Action": "CACHED",
  "AWS::Glue::Trigger.Condition": "CACHED",
  "AWS::Glue::Trigger.EventBatchingCondition": "CACHED",
  "AWS::Glue::Trigger.NotificationProperty": "CACHED",
  "AWS::Glue::Trigger.Predicate": "CACHED",
  "AWS::GuardDuty::Detector.CFNDataSourceConfigurations": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-guardduty-detector-cfndatasourceconfigurations.html",
   "Properties": {
    "S3Logs": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-guardduty-detector-cfndatasourceconfigurations.html#cfn-guardduty-detector-cfndatasourceconfigurations-s3logs",
     "Required": false,
     "Type": "CFNS3LogsConfiguration",
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::GuardDuty::Detector.CFNKubernetesAuditLogsConfiguration": "CACHED",
  "AWS::GuardDuty::Detector.CFNKubernetesConfiguration": "CACHED",
  "AWS::GuardDuty::Detector.CFNMalwareProtectionConfiguration": "CACHED",
  "AWS::GuardDuty::Detector.CFNS3LogsConfiguration": "CACHED",
  "AWS::GuardDuty::Detector.CFNScanEc2InstanceWithFindingsConfiguration": "CACHED",
  "AWS::GuardDuty::Filter.Condition": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-guardduty-filter-condition.html",
   "Properties": {
    "Eq": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-guardduty-filter-condition.html#cfn-guardduty-filter-condition-eq",
     "PrimitiveItemType": "String",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "Gte": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-guardduty-filter-condition.html#cfn-guardduty-filter-condition-gte",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "Lt": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-guardduty-filter-condition.html#cfn-guardduty-filter-condition-lt",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "Lte": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-guardduty-filter-condition.html#cfn-guardduty-filter-condition-lte",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "Neq": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-guardduty-filter-condition.html#cfn-guardduty-filter-condition-neq",
     "PrimitiveItemType": "String",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::GuardDuty::Filter.FindingCriteria": "CACHED",
  "AWS::IAM::Group.Policy": "CACHED",
  "AWS::IAM::Role.Policy": "CACHED",
  "AWS::IAM::User.LoginProfile": "CACHED",
  "AWS::IAM::User.Policy": "CACHED",
  "AWS::ImageBuilder::ContainerRecipe.ComponentConfiguration": "CACHED",
  "AWS::ImageBuilder::ContainerRecipe.ComponentParameter": "CACHED",
  "AWS::ImageBuilder::ContainerRecipe.EbsInstanceBlockDeviceSpecification": "CACHED",
  "AWS::ImageBuilder::ContainerRecipe.InstanceBlockDeviceMapping": "CACHED",
  "AWS::ImageBuilder::ContainerRecipe.InstanceConfiguration": "CACHED",
  "AWS::ImageBuilder::ContainerRecipe.TargetContainerRepository": "CACHED",
  "AWS::ImageBuilder::DistributionConfiguration.AmiDistributionConfiguration": "CACHED",
  "AWS::ImageBuilder::DistributionConfiguration.ContainerDistributionConfiguration": "CACHED",
  "AWS::ImageBuilder::DistributionConfiguration.Distribution": "CACHED",
  "AWS::ImageBuilder::DistributionConfiguration.FastLaunchConfiguration": "CACHED",
  "AWS::ImageBuilder::DistributionConfiguration.FastLaunchLaunchTemplateSpecification": "CACHED",
  "AWS::ImageBuilder::DistributionConfiguration.FastLaunchSnapshotConfiguration": "CACHED",
  "AWS::ImageBuilder::DistributionConfiguration.LaunchPermissionConfiguration": "CACHED",
  "AWS::ImageBuilder::DistributionConfiguration.LaunchTemplateConfiguration": "CACHED",
  "AWS::ImageBuilder::DistributionConfiguration.TargetContainerRepository": "CACHED",
  "AWS::ImageBuilder::Image.ImageTestsConfiguration": "CACHED",
  "AWS::ImageBuilder::ImagePipeline.ImageTestsConfiguration": "CACHED",
  "AWS::ImageBuilder::ImagePipeline.Schedule": "CACHED",
  "AWS::ImageBuilder::ImageRecipe.AdditionalInstanceConfiguration": "CACHED",
  "AWS::ImageBuilder::ImageRecipe.ComponentConfiguration": "CACHED",
  "AWS::ImageBuilder::ImageRecipe.ComponentParameter": "CACHED",
  "AWS::ImageBuilder::ImageRecipe.EbsInstanceBlockDeviceSpecification": "CACHED",
  "AWS::ImageBuilder::ImageRecipe.InstanceBlockDeviceMapping": "CACHED",
  "AWS::ImageBuilder::ImageRecipe.SystemsManagerAgent": "CACHED",
  "AWS::ImageBuilder::InfrastructureConfiguration.InstanceMetadataOptions": "CACHED",
  "AWS::ImageBuilder::InfrastructureConfiguration.Logging": "CACHED",
  "AWS::ImageBuilder::InfrastructureConfiguration.S3Logs": "CACHED",
  "AWS::IoT::AccountAuditConfiguration.AuditCheckConfiguration": "CACHED",
  "AWS::IoT::AccountAuditConfiguration.AuditCheckConfigurations": "CACHED",
  "AWS::IoT::AccountAuditConfiguration.AuditNotificationTarget": "CACHED",
  "AWS::IoT::AccountAuditConfiguration.AuditNotificationTargetConfigurations": "CACHED",
  "AWS::IoT::CACertificate.RegistrationConfig": "CACHED",
  "AWS::IoT::DomainConfiguration.AuthorizerConfig": "CACHED",
  "AWS::IoT::DomainConfiguration.ServerCertificateSummary": "CACHED",
  "AWS::IoT::FleetMetric.AggregationType": "CACHED",
  "AWS::IoT::MitigationAction.ActionParams": "CACHED",
  "AWS::IoT::MitigationAction.AddThingsToThingGroupParams": "CACHED",
  "AWS::IoT::MitigationAction.EnableIoTLoggingParams": "CACHED",
  "AWS::IoT::MitigationAction.PublishFindingToSnsParams": "CACHED",
  "AWS::IoT::MitigationAction.ReplaceDefaultPolicyVersionParams": "CACHED",
  "AWS::IoT::MitigationAction.UpdateCACertificateParams": "CACHED",
  "AWS::IoT::MitigationAction.UpdateDeviceCertificateParams": "CACHED",
  "AWS::IoT::ProvisioningTemplate.ProvisioningHook": "CACHED",
  "AWS::IoT::SecurityProfile.AlertTarget": "CACHED",
  "AWS::IoT::SecurityProfile.Behavior": "CACHED",
  "AWS::IoT::SecurityProfile.BehaviorCriteria": "CACHED",
  "AWS::IoT::SecurityProfile.MachineLearningDetectionConfig": "CACHED",
  "AWS::IoT::SecurityProfile.MetricDimension": "CACHED",
  "AWS::IoT::SecurityProfile.MetricToRetain": "CACHED",
  "AWS::IoT::SecurityProfile.MetricValue": "CACHED",
  "AWS::IoT::SecurityProfile.StatisticalThreshold": "CACHED",
  "AWS::IoT::Thing.AttributePayload": "CACHED",
  "AWS::IoT::TopicRule.Action": "CACHED",
  "AWS::IoT::TopicRule.AssetPropertyTimestamp": "CACHED",
  "AWS::IoT::TopicRule.AssetPropertyValue": "CACHED",
  "AWS::IoT::TopicRule.AssetPropertyVariant": "CACHED",
  "AWS::IoT::TopicRule.CloudwatchAlarmAction": "CACHED",
  "AWS::IoT::TopicRule.CloudwatchLogsAction": "CACHED",
  "AWS::IoT::TopicRule.CloudwatchMetricAction": "CACHED",
  "AWS::IoT::TopicRule.DynamoDBAction": "CACHED",
  "AWS::IoT::TopicRule.DynamoDBv2Action": "CACHED",
  "AWS::IoT::TopicRule.ElasticsearchAction": "CACHED",
  "AWS::IoT::TopicRule.FirehoseAction": "CACHED",
  "AWS::IoT::TopicRule.HttpAction": "CACHED",
  "AWS::IoT::TopicRule.HttpActionHeader": "CACHED",
  "AWS::IoT::TopicRule.HttpAuthorization": "CACHED",
  "AWS::IoT::TopicRule.IotAnalyticsAction": "CACHED",
  "AWS::IoT::TopicRule.IotEventsAction": "CACHED",
  "AWS::IoT::TopicRule.IotSiteWiseAction": "CACHED",
  "AWS::IoT::TopicRule.KafkaAction": "CACHED",
  "AWS::IoT::TopicRule.KinesisAction": "CACHED",
  "AWS::IoT::TopicRule.LambdaAction": "CACHED",
  "AWS::IoT::TopicRule.LocationAction": "CACHED",
  "AWS::IoT::TopicRule.OpenSearchAction": "CACHED",
  "AWS::IoT::TopicRule.PutAssetPropertyValueEntry": "CACHED",
  "AWS::IoT::TopicRule.PutItemInput": "CACHED",
  "AWS::IoT::TopicRule.RepublishAction": "CACHED",
  "AWS::IoT::TopicRule.RepublishActionHeaders": "CACHED",
  "AWS::IoT::TopicRule.S3Action": "CACHED",
  "AWS::IoT::TopicRule.SigV4Authorization": "CACHED",
  "AWS::IoT::TopicRule.SnsAction": "CACHED",
  "AWS::IoT::TopicRule.SqsAction": "CACHED",
  "AWS::IoT::TopicRule.StepFunctionsAction": "CACHED",
  "AWS::IoT::TopicRule.Timestamp": "CACHED",
  "AWS::IoT::TopicRule.TimestreamAction": "CACHED",
  "AWS::IoT::TopicRule.TimestreamDimension": "CACHED",
  "AWS::IoT::TopicRule.TimestreamTimestamp": "CACHED",
  "AWS::IoT::TopicRule.TopicRulePayload": "CACHED",
  "AWS::IoT::TopicRule.UserProperty": "CACHED",
  "AWS::IoT::TopicRuleDestination.HttpUrlDestinationSummary": "CACHED",
  "AWS::IoT::TopicRuleDestination.VpcDestinationProperties": "CACHED",
  "AWS::Kinesis::Stream.StreamEncryption": "CACHED",
  "AWS::Kinesis::Stream.StreamModeDetails": "CACHED",
  "AWS::KinesisAnalytics::Application.CSVMappingParameters": "CACHED",
  "AWS::KinesisAnalytics::Application.Input": "CACHED",
  "AWS::KinesisAnalytics::Application.InputLambdaProcessor": "CACHED",
  "AWS::KinesisAnalytics::Application.InputParallelism": "CACHED",
  "AWS::KinesisAnalytics::Application.InputProcessingConfiguration": "CACHED",
  "AWS::KinesisAnalytics::Application.InputSchema": "CACHED",
  "AWS::KinesisAnalytics::Application.JSONMappingParameters": "CACHED",
  "AWS::KinesisAnalytics::Application.KinesisFirehoseInput": "CACHED",
  "AWS::KinesisAnalytics::Application.KinesisStreamsInput": "CACHED",
  "AWS::KinesisAnalytics::Application.MappingParameters": "CACHED",
  "AWS::KinesisAnalytics::Application.RecordColumn": "CACHED",
  "AWS::KinesisAnalytics::Application.RecordFormat": "CACHED",
  "AWS::KinesisAnalytics::ApplicationOutput.DestinationSchema": "CACHED",
  "AWS::KinesisAnalytics::ApplicationOutput.KinesisFirehoseOutput": "CACHED",
  "AWS::KinesisAnalytics::ApplicationOutput.KinesisStreamsOutput": "CACHED",
  "AWS::KinesisAnalytics::ApplicationOutput.LambdaOutput": "CACHED",
  "AWS::KinesisAnalytics::ApplicationOutput.Output": "CACHED",
  "AWS::KinesisAnalytics::ApplicationReferenceDataSource.CSVMappingParameters": "CACHED",
  "AWS::KinesisAnalytics::ApplicationReferenceDataSource.JSONMappingParameters": "CACHED",
  "AWS::KinesisAnalytics::ApplicationReferenceDataSource.MappingParameters": "CACHED",
  "AWS::KinesisAnalytics::ApplicationReferenceDataSource.RecordColumn": "CACHED",
  "AWS::KinesisAnalytics::ApplicationReferenceDataSource.RecordFormat": "CACHED",
  "AWS::KinesisAnalytics::ApplicationReferenceDataSource.ReferenceDataSource": "CACHED",
  "AWS::KinesisAnalytics::ApplicationReferenceDataSource.ReferenceSchema": "CACHED",
  "AWS::KinesisAnalytics::ApplicationReferenceDataSource.S3ReferenceDataSource": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.ApplicationCodeConfiguration": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.ApplicationConfiguration": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-applicationconfiguration.html",
   "Properties": {
    "ApplicationCodeConfiguration": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-applicationconfiguration.html#cfn-kinesisanalyticsv2-application-applicationconfiguration-applicationcodeconfiguration",
     "Required": false,
     "Type": "ApplicationCodeConfiguration",
     "UpdateType": "Mutable"
    },
    "ApplicationSnapshotConfiguration": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-applicationconfiguration.html#cfn-kinesisanalyticsv2-application-applicationconfiguration-applicationsnapshotconfiguration",
     "Required": false,
     "Type": "ApplicationSnapshotConfiguration",
     "UpdateType": "Mutable"
    },
    "EnvironmentProperties": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-applicationconfiguration.html#cfn-kinesisanalyticsv2-application-applicationconfiguration-environmentproperties",
     "Required": false,
     "Type": "EnvironmentProperties",
     "UpdateType": "Mutable"
    },
    "FlinkApplicationConfiguration": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-applicationconfiguration.html#cfn-kinesisanalyticsv2-application-applicationconfiguration-flinkapplicationconfiguration",
     "Required": false,
     "Type": "FlinkApplicationConfiguration",
     "UpdateType": "Mutable"
    },
    "SqlApplicationConfiguration": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-applicationconfiguration.html#cfn-kinesisanalyticsv2-application-applicationconfiguration-sqlapplicationconfiguration",
     "Required": false,
     "Type": "SqlApplicationConfiguration",
     "UpdateType": "Mutable"
    },
    "ZeppelinApplicationConfiguration": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-applicationconfiguration.html#cfn-kinesisanalyticsv2-application-applicationconfiguration-zeppelinapplicationconfiguration",
     "Required": false,
     "Type": "ZeppelinApplicationConfiguration",
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::KinesisAnalyticsV2::Application.ApplicationMaintenanceConfiguration": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.ApplicationRestoreConfiguration": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.ApplicationSnapshotConfiguration": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.CSVMappingParameters": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.CatalogConfiguration": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.CheckpointConfiguration": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.CodeContent": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.CustomArtifactConfiguration": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.CustomArtifactsConfiguration": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-customartifactsconfiguration.html",
   "ItemType": "CustomArtifactConfiguration",
   "Required": false,
   "Type": "List",
   "UpdateType": "Mutable"
  },
  "AWS::KinesisAnalyticsV2::Application.DeployAsApplicationConfiguration": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.EnvironmentProperties": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-environmentproperties.html",
   "Properties": {
    "PropertyGroups": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-environmentproperties.html#cfn-kinesisanalyticsv2-application-environmentproperties-propertygroups",
     "ItemType": "PropertyGroup",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::KinesisAnalyticsV2::Application.FlinkApplicationConfiguration": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.FlinkRunConfiguration": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.GlueDataCatalogConfiguration": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.Input": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.InputLambdaProcessor": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.InputParallelism": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.InputProcessingConfiguration": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.InputSchema": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-inputschema.html",
   "Properties": {
    "RecordColumns": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-inputschema.html#cfn-kinesisanalyticsv2-application-inputschema-recordcolumns",
     "ItemType": "RecordColumn",
     "Required": true,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "RecordEncoding": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-inputschema.html#cfn-kinesisanalyticsv2-application-inputschema-recordencoding",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::KinesisAnalyticsV2::Application.InputSchema.RecordEncoding"
     }
    },
    "RecordFormat": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-inputschema.html#cfn-kinesisanalyticsv2-application-inputschema-recordformat",
     "Required": true,
     "Type": "RecordFormat",
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::KinesisAnalyticsV2::Application.JSONMappingParameters": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.KinesisFirehoseInput": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.KinesisStreamsInput": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.MappingParameters": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.MavenReference": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.MonitoringConfiguration": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.ParallelismConfiguration": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.PropertyGroup": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-propertygroup.html",
   "Properties": {
    "PropertyGroupId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-propertygroup.html#cfn-kinesisanalyticsv2-application-propertygroup-propertygroupid",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::KinesisAnalyticsV2::Application.PropertyGroup.PropertyGroupId"
     }
    },
    "PropertyMap": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-propertygroup.html#cfn-kinesisanalyticsv2-application-propertygroup-propertymap",
     "PrimitiveType": "Json",
     "Required": false,
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::KinesisAnalyticsV2::Application.RecordColumn": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.RecordFormat": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.RunConfiguration": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.S3ContentBaseLocation": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-s3contentbaselocation.html",
   "Properties": {
    "BasePath": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-s3contentbaselocation.html#cfn-kinesisanalyticsv2-application-s3contentbaselocation-basepath",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::KinesisAnalyticsV2::Application.S3ContentBaseLocation.BasePath"
     }
    },
    "BucketARN": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-s3contentbaselocation.html#cfn-kinesisanalyticsv2-application-s3contentbaselocation-bucketarn",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::KinesisAnalyticsV2::Application.S3ContentBaseLocation.BucketARN"
     }
    }
   }
  },
  "AWS::KinesisAnalyticsV2::Application.S3ContentLocation": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-s3contentlocation.html",
   "Properties": {
    "BucketARN": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-s3contentlocation.html#cfn-kinesisanalyticsv2-application-s3contentlocation-bucketarn",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::KinesisAnalyticsV2::Application.S3ContentLocation.BucketARN"
     }
    },
    "FileKey": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-s3contentlocation.html#cfn-kinesisanalyticsv2-application-s3contentlocation-filekey",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::KinesisAnalyticsV2::Application.S3ContentLocation.FileKey"
     }
    },
    "ObjectVersion": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-s3contentlocation.html#cfn-kinesisanalyticsv2-application-s3contentlocation-objectversion",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::KinesisAnalyticsV2::Application.S3ContentLocation.ObjectVersion"
     }
    }
   }
  },
  "AWS::KinesisAnalyticsV2::Application.SqlApplicationConfiguration": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-sqlapplicationconfiguration.html",
   "Properties": {
    "Inputs": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-sqlapplicationconfiguration.html#cfn-kinesisanalyticsv2-application-sqlapplicationconfiguration-inputs",
     "ItemType": "Input",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::KinesisAnalyticsV2::Application.VpcConfiguration": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.ZeppelinApplicationConfiguration": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-zeppelinapplicationconfiguration.html",
   "Properties": {
    "CatalogConfiguration": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-zeppelinapplicationconfiguration.html#cfn-kinesisanalyticsv2-application-zeppelinapplicationconfiguration-catalogconfiguration",
     "Required": false,
     "Type": "CatalogConfiguration",
     "UpdateType": "Mutable"
    },
    "CustomArtifactsConfiguration": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-zeppelinapplicationconfiguration.html#cfn-kinesisanalyticsv2-application-zeppelinapplicationconfiguration-customartifactsconfiguration",
     "Required": false,
     "Type": "CustomArtifactsConfiguration",
     "UpdateType": "Mutable"
    },
    "DeployAsApplicationConfiguration": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-zeppelinapplicationconfiguration.html#cfn-kinesisanalyticsv2-application-zeppelinapplicationconfiguration-deployasapplicationconfiguration",
     "Required": false,
     "Type": "DeployAsApplicationConfiguration",
     "UpdateType": "Mutable"
    },
    "MonitoringConfiguration": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalyticsv2-application-zeppelinapplicationconfiguration.html#cfn-kinesisanalyticsv2-application-zeppelinapplicationconfiguration-monitoringconfiguration",
     "Required": false,
     "Type": "ZeppelinMonitoringConfiguration",
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::KinesisAnalyticsV2::Application.ZeppelinMonitoringConfiguration": "CACHED",
  "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption.CloudWatchLoggingOption": "CACHED",
  "AWS::KinesisAnalyticsV2::ApplicationOutput.DestinationSchema": "CACHED",
  "AWS::KinesisAnalyticsV2::ApplicationOutput.KinesisFirehoseOutput": "CACHED",
  "AWS::KinesisAnalyticsV2::ApplicationOutput.KinesisStreamsOutput": "CACHED",
  "AWS::KinesisAnalyticsV2::ApplicationOutput.LambdaOutput": "CACHED",
  "AWS::KinesisAnalyticsV2::ApplicationOutput.Output": "CACHED",
  "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource.CSVMappingParameters": "CACHED",
  "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource.JSONMappingParameters": "CACHED",
  "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource.MappingParameters": "CACHED",
  "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource.RecordColumn": "CACHED",
  "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource.RecordFormat": "CACHED",
  "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource.ReferenceDataSource": "CACHED",
  "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource.ReferenceSchema": "CACHED",
  "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource.S3ReferenceDataSource": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.AmazonopensearchserviceBufferingHints": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.AmazonopensearchserviceDestinationConfiguration": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.AmazonopensearchserviceRetryOptions": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.BufferingHints": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.CloudWatchLoggingOptions": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.CopyCommand": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.DataFormatConversionConfiguration": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.DeliveryStreamEncryptionConfigurationInput": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.Deserializer": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.DynamicPartitioningConfiguration": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.ElasticsearchBufferingHints": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.ElasticsearchDestinationConfiguration": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.ElasticsearchRetryOptions": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.EncryptionConfiguration": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.ExtendedS3DestinationConfiguration": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.HiveJsonSerDe": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.HttpEndpointCommonAttribute": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.HttpEndpointConfiguration": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.HttpEndpointDestinationConfiguration": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.HttpEndpointRequestConfiguration": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.InputFormatConfiguration": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.KMSEncryptionConfig": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.KinesisStreamSourceConfiguration": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.OpenXJsonSerDe": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.OrcSerDe": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.OutputFormatConfiguration": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.ParquetSerDe": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.ProcessingConfiguration": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.Processor": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.ProcessorParameter": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.RedshiftDestinationConfiguration": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.RedshiftRetryOptions": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.RetryOptions": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.S3DestinationConfiguration": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.SchemaConfiguration": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.Serializer": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.SplunkDestinationConfiguration": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.SplunkRetryOptions": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.VpcConfiguration": "CACHED",
  "AWS::LakeFormation::DataCellsFilter.ColumnWildcard": "CACHED",
  "AWS::LakeFormation::DataCellsFilter.RowFilter": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.CatalogResource": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.ColumnWildcard": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.DataCellsFilterResource": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.DataLakePrincipal": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.DataLocationResource": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.DatabaseResource": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.LFTag": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.LFTagKeyResource": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.LFTagPolicyResource": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.Resource": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.TableResource": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.TableWildcard": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.TableWithColumnsResource": "CACHED",
  "AWS::LakeFormation::TagAssociation.CatalogResource": "CACHED",
  "AWS::LakeFormation::TagAssociation.DatabaseResource": "CACHED",
  "AWS::LakeFormation::TagAssociation.LFTagPair": "CACHED",
  "AWS::LakeFormation::TagAssociation.Resource": "CACHED",
  "AWS::LakeFormation::TagAssociation.TableResource": "CACHED",
  "AWS::LakeFormation::TagAssociation.TableWildcard": "CACHED",
  "AWS::LakeFormation::TagAssociation.TableWithColumnsResource": "CACHED",
  "AWS::Lambda::Alias.AliasRoutingConfiguration": "CACHED",
  "AWS::Lambda::Alias.ProvisionedConcurrencyConfiguration": "CACHED",
  "AWS::Lambda::Alias.VersionWeight": "CACHED",
  "AWS::Lambda::EventInvokeConfig.DestinationConfig": "CACHED",
  "AWS::Lambda::EventInvokeConfig.OnFailure": "CACHED",
  "AWS::Lambda::EventInvokeConfig.OnSuccess": "CACHED",
  "AWS::Lambda::EventSourceMapping.AmazonManagedKafkaEventSourceConfig": "CACHED",
  "AWS::Lambda::EventSourceMapping.DestinationConfig": "CACHED",
  "AWS::Lambda::EventSourceMapping.Endpoints": "CACHED",
  "AWS::Lambda::EventSourceMapping.Filter": "CACHED",
  "AWS::Lambda::EventSourceMapping.FilterCriteria": "CACHED",
  "AWS::Lambda::EventSourceMapping.OnFailure": "CACHED",
  "AWS::Lambda::EventSourceMapping.SelfManagedEventSource": "CACHED",
  "AWS::Lambda::EventSourceMapping.SelfManagedKafkaEventSourceConfig": "CACHED",
  "AWS::Lambda::EventSourceMapping.SourceAccessConfiguration": "CACHED",
  "AWS::Lambda::Function.Code": "CACHED",
  "AWS::Lambda::Function.DeadLetterConfig": "CACHED",
  "AWS::Lambda::Function.Environment": "CACHED",
  "AWS::Lambda::Function.EphemeralStorage": "CACHED",
  "AWS::Lambda::Function.FileSystemConfig": "CACHED",
  "AWS::Lambda::Function.ImageConfig": "CACHED",
  "AWS::Lambda::Function.TracingConfig": "CACHED",
  "AWS::Lambda::Function.VpcConfig": "CACHED",
  "AWS::Lambda::LayerVersion.Content": "CACHED",
  "AWS::Lambda::Version.ProvisionedConcurrencyConfiguration": "CACHED",
  "AWS::Logs::MetricFilter.MetricTransformation": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-logs-metricfilter-metrictransformation.html",
   "Properties": {
    "DefaultValue": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-logs-metricfilter-metrictransformation.html#cfn-cwl-metricfilter-metrictransformation-defaultvalue",
     "PrimitiveType": "Double",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "MetricName": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-logs-metricfilter-metrictransformation.html#cfn-cwl-metricfilter-metrictransformation-metricname",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::Logs::MetricFilter.MetricTransformation.MetricName"
     }
    },
    "MetricNamespace": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-logs-metricfilter-metrictransformation.html#cfn-cwl-metricfilter-metrictransformation-metricnamespace",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::Logs::MetricFilter.MetricTransformation.MetricNamespace"
     }
    },
    "MetricValue": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-logs-metricfilter-metrictransformation.html#cfn-cwl-metricfilter-metrictransformation-metricvalue",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::Logs::MetricFilter.MetricTransformation.MetricValue"
     }
    }
   }
  },
  "AWS::M2::Application.Definition": "CACHED",
  "AWS::MSK::Cluster.BrokerLogs": "CACHED",
  "AWS::MSK::Cluster.BrokerNodeGroupInfo": "CACHED",
  "AWS::MSK::Cluster.ClientAuthentication": "CACHED",
  "AWS::MSK::Cluster.CloudWatchLogs": "CACHED",
  "AWS::MSK::Cluster.ConfigurationInfo": "CACHED",
  "AWS::MSK::Cluster.ConnectivityInfo": "CACHED",
  "AWS::MSK::Cluster.EBSStorageInfo": "CACHED",
  "AWS::MSK::Cluster.EncryptionAtRest": "CACHED",
  "AWS::MSK::Cluster.EncryptionInTransit": "CACHED",
  "AWS::MSK::Cluster.EncryptionInfo": "CACHED",
  "AWS::MSK::Cluster.Firehose": "CACHED",
  "AWS::MSK::Cluster.Iam": "CACHED",
  "AWS::MSK::Cluster.JmxExporter": "CACHED",
  "AWS::MSK::Cluster.LoggingInfo": "CACHED",
  "AWS::MSK::Cluster.NodeExporter": "CACHED",
  "AWS::MSK::Cluster.OpenMonitoring": "CACHED",
  "AWS::MSK::Cluster.Prometheus": "CACHED",
  "AWS::MSK::Cluster.ProvisionedThroughput": "CACHED",
  "AWS::MSK::Cluster.PublicAccess": "CACHED",
  "AWS::MSK::Cluster.S3": "CACHED",
  "AWS::MSK::Cluster.Sasl": "CACHED",
  "AWS::MSK::Cluster.Scram": "CACHED",
  "AWS::MSK::Cluster.StorageInfo": "CACHED",
  "AWS::MSK::Cluster.Tls": "CACHED",
  "AWS::MSK::Cluster.Unauthenticated": "CACHED",
  "AWS::MediaConvert::JobTemplate.AccelerationSettings": "CACHED",
  "AWS::MediaConvert::JobTemplate.HopDestination": "CACHED",
  "AWS::Neptune::DBCluster.DBClusterRole": "CACHED",
  "AWS::OpenSearchService::Domain.AdvancedSecurityOptionsInput": "CACHED",
  "AWS::OpenSearchService::Domain.ClusterConfig": "CACHED",
  "AWS::OpenSearchService::Domain.CognitoOptions": "CACHED",
  "AWS::OpenSearchService::Domain.DomainEndpointOptions": "CACHED",
  "AWS::OpenSearchService::Domain.EBSOptions": "CACHED",
  "AWS::OpenSearchService::Domain.EncryptionAtRestOptions": "CACHED",
  "AWS::OpenSearchService::Domain.LogPublishingOption": "CACHED",
  "AWS::OpenSearchService::Domain.MasterUserOptions": "CACHED",
  "AWS::OpenSearchService::Domain.NodeToNodeEncryptionOptions": "CACHED",
  "AWS::OpenSearchService::Domain.SnapshotOptions": "CACHED",
  "AWS::OpenSearchService::Domain.VPCOptions": "CACHED",
  "AWS::OpenSearchService::Domain.ZoneAwarenessConfig": "CACHED",
  "AWS::RDS::DBCluster.DBClusterRole": "CACHED",
  "AWS::RDS::DBCluster.ReadEndpoint": "CACHED",
  "AWS::RDS::DBCluster.ScalingConfiguration": "CACHED",
  "AWS::RDS::DBCluster.ServerlessV2ScalingConfiguration": "CACHED",
  "AWS::RDS::DBInstance.DBInstanceRole": "CACHED",
  "AWS::RDS::DBInstance.Endpoint": "CACHED",
  "AWS::RDS::DBInstance.ProcessorFeature": "CACHED",
  "AWS::RDS::DBSecurityGroup.Ingress": "CACHED",
  "AWS::RDS::OptionGroup.OptionConfiguration": "CACHED",
  "AWS::RDS::OptionGroup.OptionSetting": "CACHED",
  "AWS::Redshift::Cluster.LoggingProperties": "CACHED",
  "AWS::Redshift::ClusterParameterGroup.Parameter": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-property-redshift-clusterparametergroup-parameter.html",
   "Properties": {
    "ParameterName": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-property-redshift-clusterparametergroup-parameter.html#cfn-redshift-clusterparametergroup-parameter-parametername",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "ParameterValue": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-property-redshift-clusterparametergroup-parameter.html#cfn-redshift-clusterparametergroup-parameter-parametervalue",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::Rekognition::StreamProcessor.List": "CACHED",
  "AWS::ResourceGroups::Group.ConfigurationItem": "CACHED",
  "AWS::ResourceGroups::Group.ConfigurationParameter": "CACHED",
  "AWS::ResourceGroups::Group.Query": "CACHED",
  "AWS::ResourceGroups::Group.ResourceQuery": "CACHED",
  "AWS::ResourceGroups::Group.TagFilter": "CACHED",
  "AWS::RolesAnywhere::TrustAnchor.SourceData": "CACHED",
  "AWS::Route53::CidrCollection.Location": "CACHED",
  "AWS::Route53::HealthCheck.AlarmIdentifier": "CACHED",
  "AWS::Route53::HealthCheck.HealthCheckConfig": "CACHED",
  "AWS::Route53::HealthCheck.HealthCheckTag": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthchecktag.html",
   "Properties": {
    "Key": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthchecktag.html#cfn-route53-healthchecktags-key",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "Value": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthchecktag.html#cfn-route53-healthchecktags-value",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::Route53::HostedZone.HostedZoneConfig": "CACHED",
  "AWS::Route53::HostedZone.HostedZoneTag": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-hostedzone-hostedzonetags.html",
   "Properties": {
    "Key": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-hostedzone-hostedzonetags.html#cfn-route53-hostedzonetags-key",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "Value": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-hostedzone-hostedzonetags.html#cfn-route53-hostedzonetags-value",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::Route53::HostedZone.QueryLoggingConfig": "CACHED",
  "AWS::Route53::HostedZone.VPC": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone-hostedzonevpcs.html",
   "Properties": {
    "VPCId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone-hostedzonevpcs.html#cfn-route53-hostedzone-hostedzonevpcs-vpcid",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::EC2::VPC.Id"
     }
    },
    "VPCRegion": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone-hostedzonevpcs.html#cfn-route53-hostedzone-hostedzonevpcs-vpcregion",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::Route53::RecordSet.AliasTarget": "CACHED",
  "AWS::Route53::RecordSet.CidrRoutingConfig": "CACHED",
  "AWS::Route53::RecordSet.GeoLocation": "CACHED",
  "AWS::Route53::RecordSetGroup.AliasTarget": "CACHED",
  "AWS::Route53::RecordSetGroup.CidrRoutingConfig": "CACHED",
  "AWS::Route53::RecordSetGroup.GeoLocation": "CACHED",
  "AWS::Route53::RecordSetGroup.RecordSet": "CACHED",
  "AWS::Route53Resolver::FirewallRuleGroup.FirewallRule": "CACHED",
  "AWS::Route53Resolver::ResolverEndpoint.IpAddressRequest": "CACHED",
  "AWS::Route53Resolver::ResolverRule.TargetAddress": "CACHED",
  "AWS::S3::AccessPoint.PublicAccessBlockConfiguration": "CACHED",
  "AWS::S3::AccessPoint.VpcConfiguration": "CACHED",
  "AWS::S3::Bucket.AbortIncompleteMultipartUpload": "CACHED",
  "AWS::S3::Bucket.AccelerateConfiguration": "CACHED",
  "AWS::S3::Bucket.AccessControlTranslation": "CACHED",
  "AWS::S3::Bucket.AnalyticsConfiguration": "CACHED",
  "AWS::S3::Bucket.BucketEncryption": "CACHED",
  "AWS::S3::Bucket.CorsConfiguration": "CACHED",
  "AWS::S3::Bucket.CorsRule": "CACHED",
  "AWS::S3::Bucket.DataExport": "CACHED",
  "AWS::S3::Bucket.DefaultRetention": "CACHED",
  "AWS::S3::Bucket.DeleteMarkerReplication": "CACHED",
  "AWS::S3::Bucket.Destination": "CACHED",
  "AWS::S3::Bucket.EncryptionConfiguration": "CACHED",
  "AWS::S3::Bucket.EventBridgeConfiguration": "CACHED",
  "AWS::S3::Bucket.FilterRule": "CACHED",
  "AWS::S3::Bucket.IntelligentTieringConfiguration": "CACHED",
  "AWS::S3::Bucket.InventoryConfiguration": "CACHED",
  "AWS::S3::Bucket.LambdaConfiguration": "CACHED",
  "AWS::S3::Bucket.LifecycleConfiguration": "CACHED",
  "AWS::S3::Bucket.LoggingConfiguration": "CACHED",
  "AWS::S3::Bucket.Metrics": "CACHED",
  "AWS::S3::Bucket.MetricsConfiguration": "CACHED",
  "AWS::S3::Bucket.NoncurrentVersionExpiration": "CACHED",
  "AWS::S3::Bucket.NoncurrentVersionTransition": "CACHED",
  "AWS::S3::Bucket.NotificationConfiguration": "CACHED",
  "AWS::S3::Bucket.NotificationFilter": "CACHED",
  "AWS::S3::Bucket.ObjectLockConfiguration": "CACHED",
  "AWS::S3::Bucket.ObjectLockRule": "CACHED",
  "AWS::S3::Bucket.OwnershipControls": "CACHED",
  "AWS::S3::Bucket.OwnershipControlsRule": "CACHED",
  "AWS::S3::Bucket.PublicAccessBlockConfiguration": "CACHED",
  "AWS::S3::Bucket.QueueConfiguration": "CACHED",
  "AWS::S3::Bucket.RedirectAllRequestsTo": "CACHED",
  "AWS::S3::Bucket.RedirectRule": "CACHED",
  "AWS::S3::Bucket.ReplicaModifications": "CACHED",
  "AWS::S3::Bucket.ReplicationConfiguration": "CACHED",
  "AWS::S3::Bucket.ReplicationDestination": "CACHED",
  "AWS::S3::Bucket.ReplicationRule": "CACHED",
  "AWS::S3::Bucket.ReplicationRuleAndOperator": "CACHED",
  "AWS::S3::Bucket.ReplicationRuleFilter": "CACHED",
  "AWS::S3::Bucket.ReplicationTime": "CACHED",
  "AWS::S3::Bucket.ReplicationTimeValue": "CACHED",
  "AWS::S3::Bucket.RoutingRule": "CACHED",
  "AWS::S3::Bucket.RoutingRuleCondition": "CACHED",
  "AWS::S3::Bucket.Rule": "CACHED",
  "AWS::S3::Bucket.S3KeyFilter": "CACHED",
  "AWS::S3::Bucket.ServerSideEncryptionByDefault": "CACHED",
  "AWS::S3::Bucket.ServerSideEncryptionRule": "CACHED",
  "AWS::S3::Bucket.SourceSelectionCriteria": "CACHED",
  "AWS::S3::Bucket.SseKmsEncryptedObjects": "CACHED",
  "AWS::S3::Bucket.StorageClassAnalysis": "CACHED",
  "AWS::S3::Bucket.TagFilter": "CACHED",
  "AWS::S3::Bucket.Tiering": "CACHED",
  "AWS::S3::Bucket.TopicConfiguration": "CACHED",
  "AWS::S3::Bucket.Transition": "CACHED",
  "AWS::S3::Bucket.VersioningConfiguration": "CACHED",
  "AWS::S3::Bucket.WebsiteConfiguration": "CACHED",
  "AWS::S3ObjectLambda::AccessPoint.ObjectLambdaConfiguration": "CACHED",
  "AWS::S3ObjectLambda::AccessPoint.TransformationConfiguration": "CACHED",
  "AWS::SNS::Topic.Subscription": "CACHED",
  "AWS::SSM::Association.InstanceAssociationOutputLocation": "CACHED",
  "AWS::SSM::Association.ParameterValues": "CACHED",
  "AWS::SSM::Association.S3OutputLocation": "CACHED",
  "AWS::SSM::Association.Target": "CACHED",
  "AWS::SSM::Document.AttachmentsSource": "CACHED",
  "AWS::SSM::Document.DocumentRequires": "CACHED",
  "AWS::SSM::MaintenanceWindowTarget.Targets": "CACHED",
  "AWS::SSM::MaintenanceWindowTask.LoggingInfo": "CACHED",
  "AWS::SSM::MaintenanceWindowTask.MaintenanceWindowAutomationParameters": "CACHED",
  "AWS::SSM::MaintenanceWindowTask.MaintenanceWindowLambdaParameters": "CACHED",
  "AWS::SSM::MaintenanceWindowTask.MaintenanceWindowRunCommandParameters": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-maintenancewindowtask-maintenancewindowruncommandparameters.html",
   "Properties": {
    "Comment": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-maintenancewindowtask-maintenancewindowruncommandparameters.html#cfn-ssm-maintenancewindowtask-maintenancewindowruncommandparameters-comment",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "DocumentHash": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-maintenancewindowtask-maintenancewindowruncommandparameters.html#cfn-ssm-maintenancewindowtask-maintenancewindowruncommandparameters-documenthash",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "DocumentHashType": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-maintenancewindowtask-maintenancewindowruncommandparameters.html#cfn-ssm-maintenancewindowtask-maintenancewindowruncommandparameters-documenthashtype",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "NotificationConfig": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-maintenancewindowtask-maintenancewindowruncommandparameters.html#cfn-ssm-maintenancewindowtask-maintenancewindowruncommandparameters-notificationconfig",
     "Required": false,
     "Type": "NotificationConfig",
     "UpdateType": "Mutable"
    },
    "OutputS3BucketName": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-maintenancewindowtask-maintenancewindowruncommandparameters.html#cfn-ssm-maintenancewindowtask-maintenancewindowruncommandparameters-outputs3bucketname",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "OutputS3KeyPrefix": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-maintenancewindowtask-maintenancewindowruncommandparameters.html#cfn-ssm-maintenancewindowtask-maintenancewindowruncommandparameters-outputs3keyprefix",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "Parameters": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-maintenancewindowtask-maintenancewindowruncommandparameters.html#cfn-ssm-maintenancewindowtask-maintenancewindowruncommandparameters-parameters",
     "PrimitiveType": "Json",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "ServiceRoleArn": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-maintenancewindowtask-maintenancewindowruncommandparameters.html#cfn-ssm-maintenancewindowtask-maintenancewindowruncommandparameters-servicerolearn",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "TimeoutSeconds": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-maintenancewindowtask-maintenancewindowruncommandparameters.html#cfn-ssm-maintenancewindowtask-maintenancewindowruncommandparameters-timeoutseconds",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::SSM::MaintenanceWindowTask.MaintenanceWindowStepFunctionsParameters": "CACHED",
  "AWS::SSM::MaintenanceWindowTask.NotificationConfig": "CACHED",
  "AWS::SSM::MaintenanceWindowTask.Target": "CACHED",
  "AWS::SSM::MaintenanceWindowTask.TaskInvocationParameters": "CACHED",
  "AWS::SSM::PatchBaseline.PatchFilter": "CACHED",
  "AWS::SSM::PatchBaseline.PatchFilterGroup": "CACHED",
  "AWS::SSM::PatchBaseline.PatchSource": "CACHED",
  "AWS::SSM::PatchBaseline.PatchStringDate": "CACHED",
  "AWS::SSM::PatchBaseline.Rule": "CACHED",
  "AWS::SSM::PatchBaseline.RuleGroup": "CACHED",
  "AWS::SSM::ResourceDataSync.AwsOrganizationsSource": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-resourcedatasync-awsorganizationssource.html",
   "Properties": {
    "OrganizationSourceType": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-resourcedatasync-awsorganizationssource.html#cfn-ssm-resourcedatasync-awsorganizationssource-organizationsourcetype",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "AWS::SSM::ResourceDataSync.AwsOrganizationsSource.OrganizationSourceType"
     }
    },
    "OrganizationalUnits": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-resourcedatasync-awsorganizationssource.html#cfn-ssm-resourcedatasync-awsorganizationssource-organizationalunits",
     "PrimitiveItemType": "String",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::SSM::ResourceDataSync.S3Destination": "CACHED",
  "AWS::SSM::ResourceDataSync.SyncSource": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-resourcedatasync-syncsource.html",
   "Properties": {
    "AwsOrganizationsSource": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-resourcedatasync-syncsource.html#cfn-ssm-resourcedatasync-syncsource-awsorganizationssource",
     "Required": false,
     "Type": "AwsOrganizationsSource",
     "UpdateType": "Mutable"
    },
    "IncludeFutureRegions": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-resourcedatasync-syncsource.html#cfn-ssm-resourcedatasync-syncsource-includefutureregions",
     "PrimitiveType": "Boolean",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "SourceRegions": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-resourcedatasync-syncsource.html#cfn-ssm-resourcedatasync-syncsource-sourceregions",
     "PrimitiveItemType": "String",
     "Required": true,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "SourceType": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ssm-resourcedatasync-syncsource.html#cfn-ssm-resourcedatasync-syncsource-sourcetype",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "AWS::SSM::ResourceDataSync.SyncSource.SourceType"
     }
    }
   }
  },
  "AWS::SageMaker::App.ResourceSpec": "CACHED",
  "AWS::SageMaker::AppImageConfig.FileSystemConfig": "CACHED",
  "AWS::SageMaker::AppImageConfig.KernelGatewayImageConfig": "CACHED",
  "AWS::SageMaker::AppImageConfig.KernelSpec": "CACHED",
  "AWS::SageMaker::CodeRepository.GitConfig": "CACHED",
  "AWS::SageMaker::Domain.CustomImage": "CACHED",
  "AWS::SageMaker::Domain.DomainSettings": "CACHED",
  "AWS::SageMaker::Domain.JupyterServerAppSettings": "CACHED",
  "AWS::SageMaker::Domain.KernelGatewayAppSettings": "CACHED",
  "AWS::SageMaker::Domain.RSessionAppSettings": "CACHED",
  "AWS::SageMaker::Domain.RStudioServerProAppSettings": "CACHED",
  "AWS::SageMaker::Domain.RStudioServerProDomainSettings": "CACHED",
  "AWS::SageMaker::Domain.ResourceSpec": "CACHED",
  "AWS::SageMaker::Domain.SharingSettings": "CACHED",
  "AWS::SageMaker::Domain.UserSettings": "CACHED",
  "AWS::SageMaker::Endpoint.Alarm": "CACHED",
  "AWS::SageMaker::Endpoint.AutoRollbackConfig": "CACHED",
  "AWS::SageMaker::Endpoint.BlueGreenUpdatePolicy": "CACHED",
  "AWS::SageMaker::Endpoint.CapacitySize": "CACHED",
  "AWS::SageMaker::Endpoint.DeploymentConfig": "CACHED",
  "AWS::SageMaker::Endpoint.TrafficRoutingConfig": "CACHED",
  "AWS::SageMaker::Endpoint.VariantProperty": "CACHED",
  "AWS::SageMaker::EndpointConfig.AsyncInferenceClientConfig": "CACHED",
  "AWS::SageMaker::EndpointConfig.AsyncInferenceConfig": "CACHED",
  "AWS::SageMaker::EndpointConfig.AsyncInferenceNotificationConfig": "CACHED",
  "AWS::SageMaker::EndpointConfig.AsyncInferenceOutputConfig": "CACHED",
  "AWS::SageMaker::EndpointConfig.CaptureContentTypeHeader": "CACHED",
  "AWS::SageMaker::EndpointConfig.CaptureOption": "CACHED",
  "AWS::SageMaker::EndpointConfig.ClarifyExplainerConfig": "CACHED",
  "AWS::SageMaker::EndpointConfig.ClarifyFeatureType": "CACHED",
  "AWS::SageMaker::EndpointConfig.ClarifyHeader": "CACHED",
  "AWS::SageMaker::EndpointConfig.ClarifyInferenceConfig": "CACHED",
  "AWS::SageMaker::EndpointConfig.ClarifyShapBaselineConfig": "CACHED",
  "AWS::SageMaker::EndpointConfig.ClarifyShapConfig": "CACHED",
  "AWS::SageMaker::EndpointConfig.ClarifyTextConfig": "CACHED",
  "AWS::SageMaker::EndpointConfig.DataCaptureConfig": "CACHED",
  "AWS::SageMaker::EndpointConfig.ExplainerConfig": "CACHED",
  "AWS::SageMaker::EndpointConfig.ProductionVariant": "CACHED",
  "AWS::SageMaker::EndpointConfig.ServerlessConfig": "CACHED",
  "AWS::SageMaker::FeatureGroup.FeatureDefinition": "CACHED",
  "AWS::SageMaker::Model.ContainerDefinition": "CACHED",
  "AWS::SageMaker::Model.ImageConfig": "CACHED",
  "AWS::SageMaker::Model.InferenceExecutionConfig": "CACHED",
  "AWS::SageMaker::Model.MultiModelConfig": "CACHED",
  "AWS::SageMaker::Model.RepositoryAuthConfig": "CACHED",
  "AWS::SageMaker::Model.VpcConfig": "CACHED",
  "AWS::SageMaker::ModelPackage.AdditionalInferenceSpecificationDefinition": "CACHED",
  "AWS::SageMaker::ModelPackage.Bias": "CACHED",
  "AWS::SageMaker::ModelPackage.DataSource": "CACHED",
  "AWS::SageMaker::ModelPackage.DriftCheckBaselines": "CACHED",
  "AWS::SageMaker::ModelPackage.DriftCheckBias": "CACHED",
  "AWS::SageMaker::ModelPackage.DriftCheckExplainability": "CACHED",
  "AWS::SageMaker::ModelPackage.DriftCheckModelDataQuality": "CACHED",
  "AWS::SageMaker::ModelPackage.DriftCheckModelQuality": "CACHED",
  "AWS::SageMaker::ModelPackage.Environment": "CACHED",
  "AWS::SageMaker::ModelPackage.Explainability": "CACHED",
  "AWS::SageMaker::ModelPackage.FileSource": "CACHED",
  "AWS::SageMaker::ModelPackage.InferenceSpecification": "CACHED",
  "AWS::SageMaker::ModelPackage.MetadataProperties": "CACHED",
  "AWS::SageMaker::ModelPackage.MetricsSource": "CACHED",
  "AWS::SageMaker::ModelPackage.ModelDataQuality": "CACHED",
  "AWS::SageMaker::ModelPackage.ModelMetrics": "CACHED",
  "AWS::SageMaker::ModelPackage.ModelPackageContainerDefinition": "CACHED",
  "AWS::SageMaker::ModelPackage.ModelPackageStatusDetails": "CACHED",
  "AWS::SageMaker::ModelPackage.ModelPackageStatusItem": "CACHED",
  "AWS::SageMaker::ModelPackage.ModelQuality": "CACHED",
  "AWS::SageMaker::ModelPackage.S3DataSource": "CACHED",
  "AWS::SageMaker::ModelPackage.SourceAlgorithm": "CACHED",
  "AWS::SageMaker::ModelPackage.SourceAlgorithmSpecification": "CACHED",
  "AWS::SageMaker::ModelPackage.TransformInput": "CACHED",
  "AWS::SageMaker::ModelPackage.TransformJobDefinition": "CACHED",
  "AWS::SageMaker::ModelPackage.TransformOutput": "CACHED",
  "AWS::SageMaker::ModelPackage.TransformResources": "CACHED",
  "AWS::SageMaker::ModelPackage.UserContext": "CACHED",
  "AWS::SageMaker::ModelPackage.ValidationProfile": "CACHED",
  "AWS::SageMaker::ModelPackage.ValidationSpecification": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.BaselineConfig": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.BatchTransformInput": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.ClusterConfig": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.ConstraintsResource": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.Csv": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.DatasetFormat": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.EndpointInput": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.Json": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.MonitoringAppSpecification": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.MonitoringExecutionSummary": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.MonitoringInput": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.MonitoringJobDefinition": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.MonitoringOutput": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.MonitoringOutputConfig": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.MonitoringResources": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.MonitoringScheduleConfig": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.NetworkConfig": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.S3Output": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.ScheduleConfig": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.StatisticsResource": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.StoppingCondition": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.VpcConfig": "CACHED",
  "AWS::SageMaker::NotebookInstance.InstanceMetadataServiceConfiguration": "CACHED",
  "AWS::SageMaker::NotebookInstanceLifecycleConfig.NotebookInstanceLifecycleHook": "CACHED",
  "AWS::SageMaker::UserProfile.CustomImage": "CACHED",
  "AWS::SageMaker::UserProfile.JupyterServerAppSettings": "CACHED",
  "AWS::SageMaker::UserProfile.KernelGatewayAppSettings": "CACHED",
  "AWS::SageMaker::UserProfile.RStudioServerProAppSettings": "CACHED",
  "AWS::SageMaker::UserProfile.ResourceSpec": "CACHED",
  "AWS::SageMaker::UserProfile.SharingSettings": "CACHED",
  "AWS::SageMaker::UserProfile.UserSettings": "CACHED",
  "AWS::SageMaker::Workteam.CognitoMemberDefinition": "CACHED",
  "AWS::SageMaker::Workteam.MemberDefinition": "CACHED",
  "AWS::SageMaker::Workteam.NotificationConfiguration": "CACHED",
  "AWS::SageMaker::Workteam.OidcMemberDefinition": "CACHED",
  "AWS::SecretsManager::RotationSchedule.HostedRotationLambda": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-rotationschedule-hostedrotationlambda.html",
   "Properties": {
    "KmsKeyArn": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-rotationschedule-hostedrotationlambda.html#cfn-secretsmanager-rotationschedule-hostedrotationlambda-kmskeyarn",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "MasterSecretArn": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-rotationschedule-hostedrotationlambda.html#cfn-secretsmanager-rotationschedule-hostedrotationlambda-mastersecretarn",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "MasterSecretKmsKeyArn": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-rotationschedule-hostedrotationlambda.html#cfn-secretsmanager-rotationschedule-hostedrotationlambda-mastersecretkmskeyarn",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "RotationLambdaName": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-rotationschedule-hostedrotationlambda.html#cfn-secretsmanager-rotationschedule-hostedrotationlambda-rotationlambdaname",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "RotationType": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-rotationschedule-hostedrotationlambda.html#cfn-secretsmanager-rotationschedule-hostedrotationlambda-rotationtype",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "VpcSecurityGroupIds": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-rotationschedule-hostedrotationlambda.html#cfn-secretsmanager-rotationschedule-hostedrotationlambda-vpcsecuritygroupids",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "VpcSubnetIds": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-rotationschedule-hostedrotationlambda.html#cfn-secretsmanager-rotationschedule-hostedrotationlambda-vpcsubnetids",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::SecretsManager::RotationSchedule.RotationRules": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-rotationschedule-rotationrules.html",
   "Properties": {
    "AutomaticallyAfterDays": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-rotationschedule-rotationrules.html#cfn-secretsmanager-rotationschedule-rotationrules-automaticallyafterdays",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::SecretsManager::Secret.GenerateSecretString": "CACHED",
  "AWS::SecretsManager::Secret.ReplicaRegion": "CACHED",
  "AWS::ServiceCatalog::CloudFormationProduct.ProvisioningArtifactProperties": "CACHED",
  "AWS::ServiceCatalog::CloudFormationProvisionedProduct.ProvisioningParameter": "CACHED",
  "AWS::ServiceCatalog::CloudFormationProvisionedProduct.ProvisioningPreferences": "CACHED",
  "AWS::ServiceDiscovery::PrivateDnsNamespace.PrivateDnsPropertiesMutable": "CACHED",
  "AWS::ServiceDiscovery::PrivateDnsNamespace.Properties": "CACHED",
  "AWS::ServiceDiscovery::PrivateDnsNamespace.SOA": "CACHED",
  "AWS::ServiceDiscovery::PublicDnsNamespace.Properties": "CACHED",
  "AWS::ServiceDiscovery::PublicDnsNamespace.PublicDnsPropertiesMutable": "CACHED",
  "AWS::ServiceDiscovery::PublicDnsNamespace.SOA": "CACHED",
  "AWS::ServiceDiscovery::Service.DnsConfig": "CACHED",
  "AWS::ServiceDiscovery::Service.DnsRecord": "CACHED",
  "AWS::ServiceDiscovery::Service.HealthCheckConfig": "CACHED",
  "AWS::ServiceDiscovery::Service.HealthCheckCustomConfig": "CACHED",
  "AWS::StepFunctions::Activity.TagsEntry": "CACHED",
  "AWS::StepFunctions::StateMachine.CloudWatchLogsLogGroup": "CACHED",
  "AWS::StepFunctions::StateMachine.Definition": "CACHED",
  "AWS::StepFunctions::StateMachine.LogDestination": "CACHED",
  "AWS::StepFunctions::StateMachine.LoggingConfiguration": "CACHED",
  "AWS::StepFunctions::StateMachine.S3Location": "CACHED",
  "AWS::StepFunctions::StateMachine.TagsEntry": "CACHED",
  "AWS::StepFunctions::StateMachine.TracingConfiguration": "CACHED",
  "AWS::Synthetics::Canary.ArtifactConfig": "CACHED",
  "AWS::Synthetics::Canary.BaseScreenshot": "CACHED",
  "AWS::Synthetics::Canary.Code": "CACHED",
  "AWS::Synthetics::Canary.RunConfig": "CACHED",
  "AWS::Synthetics::Canary.S3Encryption": "CACHED",
  "AWS::Synthetics::Canary.Schedule": "CACHED",
  "AWS::Synthetics::Canary.VPCConfig": "CACHED",
  "AWS::Synthetics::Canary.VisualReference": "CACHED",
  "AWS::Transfer::User.HomeDirectoryMapEntry": "CACHED",
  "AWS::Transfer::User.PosixProfile": "CACHED",
  "AWS::Transfer::User.SshPublicKey": "CACHED",
  "AWS::Transfer::Workflow.WorkflowStep": "CACHED",
  "AWS::WAF::ByteMatchSet.ByteMatchTuple": "CACHED",
  "AWS::WAF::ByteMatchSet.FieldToMatch": "CACHED",
  "AWS::WAF::IPSet.IPSetDescriptor": "CACHED",
  "AWS::WAF::Rule.Predicate": "CACHED",
  "AWS::WAF::SizeConstraintSet.FieldToMatch": "CACHED",
  "AWS::WAF::SizeConstraintSet.SizeConstraint": "CACHED",
  "AWS::WAF::SqlInjectionMatchSet.FieldToMatch": "CACHED",
  "AWS::WAF::SqlInjectionMatchSet.SqlInjectionMatchTuple": "CACHED",
  "AWS::WAF::WebACL.ActivatedRule": "CACHED",
  "AWS::WAF::WebACL.WafAction": "CACHED",
  "AWS::WAF::XssMatchSet.FieldToMatch": "CACHED",
  "AWS::WAF::XssMatchSet.XssMatchTuple": "CACHED",
  "AWS::WAFRegional::ByteMatchSet.ByteMatchTuple": "CACHED",
  "AWS::WAFRegional::ByteMatchSet.FieldToMatch": "CACHED",
  "AWS::WAFRegional::GeoMatchSet.GeoMatchConstraint": "CACHED",
  "AWS::WAFRegional::IPSet.IPSetDescriptor": "CACHED",
  "AWS::WAFRegional::RateBasedRule.Predicate": "CACHED",
  "AWS::WAFRegional::Rule.Predicate": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafregional-rule-predicate.html",
   "Properties": {
    "DataId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafregional-rule-predicate.html#cfn-wafregional-rule-predicate-dataid",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "Negated": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafregional-rule-predicate.html#cfn-wafregional-rule-predicate-negated",
     "PrimitiveType": "Boolean",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "Type": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafregional-rule-predicate.html#cfn-wafregional-rule-predicate-type",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::WAFRegional::SizeConstraintSet.FieldToMatch": "CACHED",
  "AWS::WAFRegional::SizeConstraintSet.SizeConstraint": "CACHED",
  "AWS::WAFRegional::SqlInjectionMatchSet.FieldToMatch": "CACHED",
  "AWS::WAFRegional::SqlInjectionMatchSet.SqlInjectionMatchTuple": "CACHED",
  "AWS::WAFRegional::WebACL.Action": "CACHED",
  "AWS::WAFRegional::WebACL.Rule": "CACHED",
  "AWS::WAFRegional::XssMatchSet.FieldToMatch": "CACHED",
  "AWS::WAFRegional::XssMatchSet.XssMatchTuple": "CACHED",
  "AWS::WAFv2::LoggingConfiguration.FieldToMatch": "CACHED",
  "AWS::WAFv2::RuleGroup.AndStatement": "CACHED",
  "AWS::WAFv2::RuleGroup.Body": "CACHED",
  "AWS::WAFv2::RuleGroup.ByteMatchStatement": "CACHED",
  "AWS::WAFv2::RuleGroup.CaptchaConfig": "CACHED",
  "AWS::WAFv2::RuleGroup.CookieMatchPattern": "CACHED",
  "AWS::WAFv2::RuleGroup.Cookies": "CACHED",
  "AWS::WAFv2::RuleGroup.CustomResponseBody": "CACHED",
  "AWS::WAFv2::RuleGroup.FieldToMatch": "CACHED",
  "AWS::WAFv2::RuleGroup.ForwardedIPConfiguration": "CACHED",
  "AWS::WAFv2::RuleGroup.GeoMatchStatement": "CACHED",
  "AWS::WAFv2::RuleGroup.HeaderMatchPattern": "CACHED",
  "AWS::WAFv2::RuleGroup.Headers": "CACHED",
  "AWS::WAFv2::RuleGroup.IPSetForwardedIPConfiguration": "CACHED",
  "AWS::WAFv2::RuleGroup.IPSetReferenceStatement": "CACHED",
  "AWS::WAFv2::RuleGroup.ImmunityTimeProperty": "CACHED",
  "AWS::WAFv2::RuleGroup.JsonBody": "CACHED",
  "AWS::WAFv2::RuleGroup.JsonMatchPattern": "CACHED",
  "AWS::WAFv2::RuleGroup.Label": "CACHED",
  "AWS::WAFv2::RuleGroup.LabelMatchStatement": "CACHED",
  "AWS::WAFv2::RuleGroup.LabelSummary": "CACHED",
  "AWS::WAFv2::RuleGroup.NotStatement": "CACHED",
  "AWS::WAFv2::RuleGroup.OrStatement": "CACHED",
  "AWS::WAFv2::RuleGroup.RateBasedStatement": "CACHED",
  "AWS::WAFv2::RuleGroup.RegexMatchStatement": "CACHED",
  "AWS::WAFv2::RuleGroup.RegexPatternSetReferenceStatement": "CACHED",
  "AWS::WAFv2::RuleGroup.Rule": "CACHED",
  "AWS::WAFv2::RuleGroup.RuleAction": "CACHED",
  "AWS::WAFv2::RuleGroup.SizeConstraintStatement": "CACHED",
  "AWS::WAFv2::RuleGroup.SqliMatchStatement": "CACHED",
  "AWS::WAFv2::RuleGroup.Statement": "CACHED",
  "AWS::WAFv2::RuleGroup.TextTransformation": "CACHED",
  "AWS::WAFv2::RuleGroup.VisibilityConfig": "CACHED",
  "AWS::WAFv2::RuleGroup.XssMatchStatement": "CACHED",
  "AWS::WAFv2::WebACL.AllowAction": "CACHED",
  "AWS::WAFv2::WebACL.AndStatement": "CACHED",
  "AWS::WAFv2::WebACL.BlockAction": "CACHED",
  "AWS::WAFv2::WebACL.Body": "CACHED",
  "AWS::WAFv2::WebACL.ByteMatchStatement": "CACHED",
  "AWS::WAFv2::WebACL.CaptchaAction": "CACHED",
  "AWS::WAFv2::WebACL.CaptchaConfig": "CACHED",
  "AWS::WAFv2::WebACL.CookieMatchPattern": "CACHED",
  "AWS::WAFv2::WebACL.Cookies": "CACHED",
  "AWS::WAFv2::WebACL.CountAction": "CACHED",
  "AWS::WAFv2::WebACL.CustomHTTPHeader": "CACHED",
  "AWS::WAFv2::WebACL.CustomRequestHandling": "CACHED",
  "AWS::WAFv2::WebACL.CustomResponse": "CACHED",
  "AWS::WAFv2::WebACL.CustomResponseBody": "CACHED",
  "AWS::WAFv2::WebACL.DefaultAction": "CACHED",
  "AWS::WAFv2::WebACL.ExcludedRule": "CACHED",
  "AWS::WAFv2::WebACL.FieldIdentifier": "CACHED",
  "AWS::WAFv2::WebACL.FieldToMatch": "CACHED",
  "AWS::WAFv2::WebACL.ForwardedIPConfiguration": "CACHED",
  "AWS::WAFv2::WebACL.GeoMatchStatement": "CACHED",
  "AWS::WAFv2::WebACL.HeaderMatchPattern": "CACHED",
  "AWS::WAFv2::WebACL.Headers": "CACHED",
  "AWS::WAFv2::WebACL.IPSetForwardedIPConfiguration": "CACHED",
  "AWS::WAFv2::WebACL.IPSetReferenceStatement": "CACHED",
  "AWS::WAFv2::WebACL.ImmunityTimeProperty": "CACHED",
  "AWS::WAFv2::WebACL.JsonBody": "CACHED",
  "AWS::WAFv2::WebACL.JsonMatchPattern": "CACHED",
  "AWS::WAFv2::WebACL.Label": "CACHED",
  "AWS::WAFv2::WebACL.LabelMatchStatement": "CACHED",
  "AWS::WAFv2::WebACL.ManagedRuleGroupConfig": "CACHED",
  "AWS::WAFv2::WebACL.ManagedRuleGroupStatement": "CACHED",
  "AWS::WAFv2::WebACL.NotStatement": "CACHED",
  "AWS::WAFv2::WebACL.OrStatement": "CACHED",
  "AWS::WAFv2::WebACL.OverrideAction": "CACHED",
  "AWS::WAFv2::WebACL.RateBasedStatement": "CACHED",
  "AWS::WAFv2::WebACL.RegexMatchStatement": "CACHED",
  "AWS::WAFv2::WebACL.RegexPatternSetReferenceStatement": "CACHED",
  "AWS::WAFv2::WebACL.Rule": "CACHED",
  "AWS::WAFv2::WebACL.RuleAction": "CACHED",
  "AWS::WAFv2::WebACL.RuleGroupReferenceStatement": "CACHED",
  "AWS::WAFv2::WebACL.SizeConstraintStatement": "CACHED",
  "AWS::WAFv2::WebACL.SqliMatchStatement": "CACHED",
  "AWS::WAFv2::WebACL.Statement": "CACHED",
  "AWS::WAFv2::WebACL.TextTransformation": "CACHED",
  "AWS::WAFv2::WebACL.VisibilityConfig": "CACHED",
  "AWS::WAFv2::WebACL.XssMatchStatement": "CACHED",
  "AWS::WorkSpaces::Workspace.WorkspaceProperties": "CACHED",
  "Tag": "CACHED"
 },
 "ResourceSpecificationVersion": "99.0.0",
 "ResourceTypes": {
  "AWS::AccessAnalyzer::Analyzer": "CACHED",
  "AWS::AmazonMQ::Broker": {
   "Attributes": {
    "AmqpEndpoints": {
     "PrimitiveItemType": "String",
     "Type": "List"
    },
    "Arn": {
     "PrimitiveType": "String"
    },
    "ConfigurationId": {
     "PrimitiveType": "String"
    },
    "ConfigurationRevision": {
     "PrimitiveType": "Integer"
    },
    "IpAddresses": {
     "PrimitiveItemType": "String",
     "Type": "List"
    },
    "MqttEndpoints": {
     "PrimitiveItemType": "String",
     "Type": "List"
    },
    "OpenWireEndpoints": {
     "PrimitiveItemType": "String",
     "Type": "List"
    },
    "StompEndpoints": {
     "PrimitiveItemType": "String",
     "Type": "List"
    },
    "WssEndpoints": {
     "PrimitiveItemType": "String",
     "Type": "List"
    }
   },
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html",
   "Properties": {
    "AuthenticationStrategy": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-authenticationstrategy",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "AutoMinorVersionUpgrade": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-autominorversionupgrade",
     "PrimitiveType": "Boolean",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "BrokerName": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-brokername",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "Configuration": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-configuration",
     "Required": false,
     "Type": "ConfigurationId",
     "UpdateType": "Mutable"
    },
    "DeploymentMode": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-deploymentmode",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "EncryptionOptions": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-encryptionoptions",
     "Required": false,
     "Type": "EncryptionOptions",
     "UpdateType": "Immutable"
    },
    "EngineType": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-enginetype",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "EngineVersion": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-engineversion",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "HostInstanceType": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-hostinstancetype",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "LdapServerMetadata": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-ldapservermetadata",
     "Required": false,
     "Type": "LdapServerMetadata",
     "UpdateType": "Mutable"
    },
    "Logs": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-logs",
     "Required": false,
     "Type": "LogList",
     "UpdateType": "Mutable"
    },
    "MaintenanceWindowStartTime": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-maintenancewindowstarttime",
     "Required": false,
     "Type": "MaintenanceWindow",
     "UpdateType": "Immutable"
    },
    "PubliclyAccessible": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-publiclyaccessible",
     "PrimitiveType": "Boolean",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "SecurityGroups": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-securitygroups",
     "PrimitiveItemType": "String",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "StorageType": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-storagetype",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "SubnetIds": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-subnetids",
     "PrimitiveItemType": "String",
     "Required": false,
     "Type": "List",
     "UpdateType": "Immutable"
    },
    "Tags": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-tags",
     "ItemType": "TagsEntry",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "Users": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-users",
     "ItemType": "User",
     "Required": true,
     "Type": "List",
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::AmazonMQ::Configuration": {
   "Attributes": {
    "Arn": {
     "PrimitiveType": "String"
    },
    "Id": {
     "PrimitiveType": "String"
    },
    "Revision": {
     "PrimitiveType": "Integer"
    }
   },
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-configuration.html",
   "Properties": {
    "AuthenticationStrategy": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-configuration.html#cfn-amazonmq-configuration-authenticationstrategy",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "Data": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-configuration.html#cfn-amazonmq-configuration-data",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "Description": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-configuration.html#cfn-amazonmq-configuration-description",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "EngineType": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-configuration.html#cfn-amazonmq-configuration-enginetype",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "EngineVersion": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-configuration.html#cfn-amazonmq-configuration-engineversion",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "Name": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-configuration.html#cfn-amazonmq-configuration-name",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "Tags": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-configuration.html#cfn-amazonmq-configuration-tags",
     "ItemType": "TagsEntry",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::AmazonMQ::ConfigurationAssociation": "CACHED",
  "AWS::ApiGateway::Account": "CACHED",
  "AWS::ApiGateway::ApiKey": "CACHED",
  "AWS::ApiGateway::Authorizer": "CACHED",
  "AWS::ApiGateway::BasePathMapping": "CACHED",
  "AWS::ApiGateway::ClientCertificate": "CACHED",
  "AWS::ApiGateway::Deployment": "CACHED",
  "AWS::ApiGateway::DocumentationPart": "CACHED",
  "AWS::ApiGateway::DocumentationVersion": "CACHED",
  "AWS::ApiGateway::DomainName": "CACHED",
  "AWS::ApiGateway::GatewayResponse": "CACHED",
  "AWS::ApiGateway::Method": "CACHED",
  "AWS::ApiGateway::Model": "CACHED",
  "AWS::ApiGateway::RequestValidator": "CACHED",
  "AWS::ApiGateway::Resource": "CACHED",
  "AWS::ApiGateway::RestApi": "CACHED",
  "AWS::ApiGateway::Stage": "CACHED",
  "AWS::ApiGateway::UsagePlan": "CACHED",
  "AWS::ApiGateway::UsagePlanKey": "CACHED",
  "AWS::ApiGateway::VpcLink": "CACHED",
  "AWS::ApiGatewayV2::Api": "CACHED",
  "AWS::ApiGatewayV2::ApiGatewayManagedOverrides": "CACHED",
  "AWS::ApiGatewayV2::ApiMapping": "CACHED",
  "AWS::ApiGatewayV2::Authorizer": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html",
   "Properties": {
    "ApiId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-apiid",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "AuthorizerCredentialsArn": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-authorizercredentialsarn",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "AuthorizerPayloadFormatVersion": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-authorizerpayloadformatversion",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "AuthorizerResultTtlInSeconds": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-authorizerresultttlinseconds",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "AuthorizerType": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-authorizertype",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "AuthorizerUri": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-authorizeruri",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "EnableSimpleResponses": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-enablesimpleresponses",
     "PrimitiveType": "Boolean",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "IdentitySource": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-identitysource",
     "PrimitiveItemType": "String",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "IdentityValidationExpression": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-identityvalidationexpression",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "JwtConfiguration": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-jwtconfiguration",
     "Required": false,
     "Type": "JWTConfiguration",
     "UpdateType": "Mutable"
    },
    "Name": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-name",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::ApiGatewayV2::Deployment": "CACHED",
  "AWS::ApiGatewayV2::DomainName": "CACHED",
  "AWS::ApiGatewayV2::Integration": "CACHED",
  "AWS::ApiGatewayV2::IntegrationResponse": "CACHED",
  "AWS::ApiGatewayV2::Model": "CACHED",
  "AWS::ApiGatewayV2::Route": "CACHED",
  "AWS::ApiGatewayV2::RouteResponse": "CACHED",
  "AWS::ApiGatewayV2::Stage": "CACHED",
  "AWS::ApiGatewayV2::VpcLink": "CACHED",
  "AWS::AppConfig::Application": "CACHED",
  "AWS::AppConfig::ConfigurationProfile": "CACHED",
  "AWS::AppConfig::Deployment": "CACHED",
  "AWS::AppConfig::DeploymentStrategy": "CACHED",
  "AWS::AppConfig::Environment": "CACHED",
  "AWS::AppConfig::HostedConfigurationVersion": "CACHED",
  "AWS::AppSync::ApiCache": "CACHED",
  "AWS::AppSync::ApiKey": "CACHED",
  "AWS::AppSync::DataSource": "CACHED",
  "AWS::AppSync::FunctionConfiguration": "CACHED",
  "AWS::AppSync::GraphQLApi": "CACHED",
  "AWS::AppSync::GraphQLSchema": "CACHED",
  "AWS::AppSync::Resolver": "CACHED",
  "AWS::ApplicationAutoScaling::ScalableTarget": "CACHED",
  "AWS::ApplicationAutoScaling::ScalingPolicy": "CACHED",
  "AWS::ApplicationInsights::Application": "CACHED",
  "AWS::Athena::DataCatalog": "CACHED",
  "AWS::Athena::NamedQuery": "CACHED",
  "AWS::Athena::PreparedStatement": "CACHED",
  "AWS::Athena::WorkGroup": "CACHED",
  "AWS::AutoScaling::AutoScalingGroup": "CACHED",
  "AWS::AutoScaling::LaunchConfiguration": "CACHED",
  "AWS::AutoScaling::LifecycleHook": "CACHED",
  "AWS::AutoScaling::ScalingPolicy": "CACHED",
  "AWS::AutoScaling::ScheduledAction": "CACHED",
  "AWS::AutoScaling::WarmPool": "CACHED",
  "AWS::AutoScalingPlans::ScalingPlan": "CACHED",
  "AWS::Backup::BackupPlan": "CACHED",
  "AWS::Backup::BackupSelection": "CACHED",
  "AWS::Backup::BackupVault": "CACHED",
  "AWS::Batch::ComputeEnvironment": "CACHED",
  "AWS::Batch::JobDefinition": "CACHED",
  "AWS::Batch::JobQueue": "CACHED",
  "AWS::Batch::SchedulingPolicy": "CACHED",
  "AWS::Budgets::Budget": "CACHED",
  "AWS::Budgets::BudgetsAction": "CACHED",
  "AWS::CDK::Metadata": "CACHED",
  "AWS::CE::AnomalyMonitor": "CACHED",
  "AWS::CE::AnomalySubscription": "CACHED",
  "AWS::CE::CostCategory": "CACHED",
  "AWS::CUR::ReportDefinition": "CACHED",
  "AWS::Cassandra::Keyspace": "CACHED",
  "AWS::Cassandra::Table": "CACHED",
  "AWS::CertificateManager::Account": "CACHED",
  "AWS::CertificateManager::Certificate": "CACHED",
  "AWS::CloudFormation::CustomResource": "CACHED",
  "AWS::CloudFormation::Macro": "CACHED",
  "AWS::CloudFormation::ModuleDefaultVersion": "CACHED",
  "AWS::CloudFormation::ModuleVersion": "CACHED",
  "AWS::CloudFormation::ResourceDefaultVersion": "CACHED",
  "AWS::CloudFormation::ResourceVersion": "CACHED",
  "AWS::CloudFormation::Stack": "CACHED",
  "AWS::CloudFormation::StackSet": "CACHED",
  "AWS::CloudFormation::WaitCondition": "CACHED",
  "AWS::CloudFormation::WaitConditionHandle": "CACHED",
  "AWS::CloudFront::CachePolicy": "CACHED",
  "AWS::CloudFront::CloudFrontOriginAccessIdentity": "CACHED",
  "AWS::CloudFront::Distribution": "CACHED",
  "AWS::CloudFront::KeyGroup": "CACHED",
  "AWS::CloudFront::OriginRequestPolicy": "CACHED",
  "AWS::CloudFront::PublicKey": "CACHED",
  "AWS::CloudFront::RealtimeLogConfig": "CACHED",
  "AWS::CloudFront::ResponseHeadersPolicy": "CACHED",
  "AWS::CloudFront::StreamingDistribution": "CACHED",
  "AWS::CloudTrail::Trail": "CACHED",
  "AWS::CloudWatch::Alarm": "CACHED",
  "AWS::CloudWatch::AnomalyDetector": "CACHED",
  "AWS::CloudWatch::CompositeAlarm": {
   "Attributes": {
    "Arn": {
     "PrimitiveType": "String"
    }
   },
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html",
   "Properties": {
    "ActionsEnabled": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-actionsenabled",
     "PrimitiveType": "Boolean",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "ActionsSuppressor": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-actionssuppressor",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::CloudWatch::CompositeAlarm.ActionsSuppressor"
     }
    },
    "ActionsSuppressorExtensionPeriod": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-actionssuppressorextensionperiod",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "ActionsSuppressorWaitPeriod": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-actionssuppressorwaitperiod",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "AlarmActions": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-alarmactions",
     "PrimitiveItemType": "String",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::CloudWatch::CompositeAlarm.AlarmActions"
     }
    },
    "AlarmDescription": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-alarmdescription",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "AlarmName": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-alarmname",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "AWS::CloudWatch::CompositeAlarm.AlarmName"
     }
    },
    "AlarmRule": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-alarmrule",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::CloudWatch::CompositeAlarm.AlarmRule"
     }
    },
    "InsufficientDataActions": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-insufficientdataactions",
     "PrimitiveItemType": "String",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::CloudWatch::CompositeAlarm.InsufficientDataActions"
     }
    },
    "OKActions": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-okactions",
     "PrimitiveItemType": "String",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::CloudWatch::CompositeAlarm.OKActions"
     }
    }
   }
  },
  "AWS::CloudWatch::Dashboard": "CACHED",
  "AWS::CloudWatch::InsightRule": "CACHED",
  "AWS::CodeBuild::Project": {
   "Attributes": {
    "Arn": {
     "PrimitiveType": "String"
    }
   },
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html",
   "Properties": {
    "Artifacts": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-artifacts",
     "Required": true,
     "Type": "Artifacts",
     "UpdateType": "Mutable"
    },
    "BadgeEnabled": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-badgeenabled",
     "PrimitiveType": "Boolean",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "BuildBatchConfig": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-buildbatchconfig",
     "Required": false,
     "Type": "ProjectBuildBatchConfig",
     "UpdateType": "Mutable"
    },
    "Cache": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-cache",
     "Required": false,
     "Type": "ProjectCache",
     "UpdateType": "Mutable"
    },
    "ConcurrentBuildLimit": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-concurrentbuildlimit",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "Description": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-description",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "EncryptionKey": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-encryptionkey",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "Environment": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-environment",
     "Required": true,
     "Type": "Environment",
     "UpdateType": "Mutable"
    },
    "FileSystemLocations": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-filesystemlocations",
     "ItemType": "ProjectFileSystemLocation",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "LogsConfig": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-logsconfig",
     "Required": false,
     "Type": "LogsConfig",
     "UpdateType": "Mutable"
    },
    "Name": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-name",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "QueuedTimeoutInMinutes": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-queuedtimeoutinminutes",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::CodeBuild::Project.QueuedTimeoutInMinutes"
     }
    },
    "SecondaryArtifacts": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-secondaryartifacts",
     "ItemType": "Artifacts",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "SecondarySourceVersions": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-secondarysourceversions",
     "ItemType": "ProjectSourceVersion",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "SecondarySources": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-secondarysources",
     "ItemType": "Source",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "ServiceRole": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-servicerole",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::IAM::Role.NameOrArn"
     }
    },
    "Source": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-source",
     "Required": true,
     "Type": "Source",
     "UpdateType": "Mutable"
    },
    "SourceVersion": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-sourceversion",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "Tags": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-tags",
     "ItemType": "Tag",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "TimeoutInMinutes": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-timeoutinminutes",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::CodeBuild::Project.TimeoutInMinutes"
     }
    },
    "Triggers": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-triggers",
     "Required": false,
     "Type": "ProjectTriggers",
     "UpdateType": "Mutable"
    },
    "VpcConfig": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-vpcconfig",
     "Required": false,
     "Type": "VpcConfig",
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::CodeBuild::ReportGroup": "CACHED",
  "AWS::CodeBuild::SourceCredential": "CACHED",
  "AWS::CodeCommit::Repository": {
   "Attributes": {
    "Arn": {
     "PrimitiveType": "String"
    },
    "CloneUrlHttp": {
     "PrimitiveType": "String"
    },
    "CloneUrlSsh": {
     "PrimitiveType": "String"
    },
    "Name": {
     "PrimitiveType": "String"
    }
   },
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html",
   "Properties": {
    "Code": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-code",
     "Required": false,
     "Type": "Code",
     "UpdateType": "Mutable"
    },
    "RepositoryDescription": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-repositorydescription",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "RepositoryName": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-repositoryname",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "Tags": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-tags",
     "ItemType": "Tag",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "Triggers": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-triggers",
     "ItemType": "RepositoryTrigger",
     "Required": false,
     "Type": "List",
     "UpdateType": "Conditional"
    }
   }
  },
  "AWS::CodeDeploy::Application": "CACHED",
  "AWS::CodeDeploy::DeploymentConfig": "CACHED",
  "AWS::CodeDeploy::DeploymentGroup": "CACHED",
  "AWS::CodePipeline::CustomActionType": "CACHED",
  "AWS::CodePipeline::Pipeline": "CACHED",
  "AWS::Config::AggregationAuthorization": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-aggregationauthorization.html",
   "Properties": {
    "AuthorizedAccountId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-aggregationauthorization.html#cfn-config-aggregationauthorization-authorizedaccountid",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "AWS::Config::AggregationAuthorization.AuthorizedAccountId"
     }
    },
    "AuthorizedAwsRegion": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-aggregationauthorization.html#cfn-config-aggregationauthorization-authorizedawsregion",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "AWS::Config::AggregationAuthorization.AuthorizedAwsRegion"
     }
    },
    "Tags": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-aggregationauthorization.html#cfn-config-aggregationauthorization-tags",
     "ItemType": "Tag",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::Config::ConfigRule": "CACHED",
  "AWS::Config::ConfigurationRecorder": "CACHED",
  "AWS::Config::DeliveryChannel": "CACHED",
  "AWS::Config::OrganizationConfigRule": "CACHED",
  "AWS::Config::RemediationConfiguration": "CACHED",
  "AWS::DAX::Cluster": {
   "Attributes": {
    "Arn": {
     "PrimitiveType": "String"
    },
    "ClusterDiscoveryEndpoint": {
     "PrimitiveType": "String"
    },
    "ClusterDiscoveryEndpointURL": {
     "PrimitiveType": "String"
    }
   },
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html",
   "Properties": {
    "AvailabilityZones": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-availabilityzones",
     "PrimitiveItemType": "String",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "ClusterEndpointEncryptionType": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-clusterendpointencryptiontype",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "ClusterName": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-clustername",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "Description": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-description",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "IAMRoleARN": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-iamrolearn",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "NodeType": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-nodetype",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "NotificationTopicARN": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-notificationtopicarn",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "ParameterGroupName": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-parametergroupname",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "PreferredMaintenanceWindow": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-preferredmaintenancewindow",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "ReplicationFactor": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-replicationfactor",
     "PrimitiveType": "Integer",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "SSESpecification": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-ssespecification",
     "Required": false,
     "Type": "SSESpecification",
     "UpdateType": "Immutable"
    },
    "SecurityGroupIds": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-securitygroupids",
     "PrimitiveItemType": "String",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "SubnetGroupName": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-subnetgroupname",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "Tags": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-tags",
     "PrimitiveType": "Json",
     "Required": false,
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::DAX::ParameterGroup": "CACHED",
  "AWS::DAX::SubnetGroup": "CACHED",
  "AWS::DLM::LifecyclePolicy": "CACHED",
  "AWS::DMS::Certificate": "CACHED",
  "AWS::DMS::Endpoint": "CACHED",
  "AWS::DMS::EventSubscription": "CACHED",
  "AWS::DMS::ReplicationInstance": "CACHED",
  "AWS::DMS::ReplicationSubnetGroup": "CACHED",
  "AWS::DMS::ReplicationTask": "CACHED",
  "AWS::DataBrew::Dataset": "CACHED",
  "AWS::DataBrew::Job": "CACHED",
  "AWS::DataBrew::Project": "CACHED",
  "AWS::DataBrew::Recipe": "CACHED",
  "AWS::DataBrew::Ruleset": "CACHED",
  "AWS::DataBrew::Schedule": "CACHED",
  "AWS::DirectoryService::MicrosoftAD": "CACHED",
  "AWS::DirectoryService::SimpleAD": "CACHED",
  "AWS::DocDB::DBCluster": "CACHED",
  "AWS::DocDB::DBClusterParameterGroup": "CACHED",
  "AWS::DocDB::DBInstance": "CACHED",
  "AWS::DocDB::DBSubnetGroup": "CACHED",
  "AWS::DynamoDB::GlobalTable": "CACHED",
  "AWS::DynamoDB::Table": "CACHED",
  "AWS::EC2::CapacityReservation": "CACHED",
  "AWS::EC2::CustomerGateway": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html",
   "Properties": {
    "BgpAsn": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-bgpasn",
     "PrimitiveType": "Integer",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "IpAddress": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-ipaddress",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "Tags": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-tags",
     "DuplicatesAllowed": true,
     "ItemType": "Tag",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "Type": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-type",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "CustomerGatewayType"
     }
    }
   }
  },
  "AWS::EC2::DHCPOptions": "CACHED",
  "AWS::EC2::EC2Fleet": "CACHED",
  "AWS::EC2::EIP": {
   "Attributes": {
    "AllocationId": {
     "PrimitiveType": "String"
    }
   },
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html",
   "Properties": {
    "Domain": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-domain",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "Ec2ElasticIpDomain"
     }
    },
    "InstanceId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-instanceid",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Conditional"
    },
    "NetworkBorderGroup": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-networkbordergroup",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "PublicIpv4Pool": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-publicipv4pool",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Conditional"
    },
    "Tags": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-tags",
     "DuplicatesAllowed": true,
     "ItemType": "Tag",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::EC2::EIPAssociation": "CACHED",
  "AWS::EC2::EgressOnlyInternetGateway": "CACHED",
  "AWS::EC2::FlowLog": "CACHED",
  "AWS::EC2::GatewayRouteTableAssociation": "CACHED",
  "AWS::EC2::Host": "CACHED",
  "AWS::EC2::Instance": "CACHED",
  "AWS::EC2::InternetGateway": "CACHED",
  "AWS::EC2::KeyPair": "CACHED",
  "AWS::EC2::LaunchTemplate": "CACHED",
  "AWS::EC2::NatGateway": {
   "Attributes": {
    "NatGatewayId": {
     "PrimitiveType": "String"
    }
   },
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html",
   "Properties": {
    "AllocationId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-allocationid",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "ConnectivityType": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-connectivitytype",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "SubnetId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-subnetid",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "Tags": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-tags",
     "DuplicatesAllowed": true,
     "ItemType": "Tag",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::EC2::NetworkAcl": "CACHED",
  "AWS::EC2::NetworkAclEntry": "CACHED",
  "AWS::EC2::NetworkInterface": "CACHED",
  "AWS::EC2::NetworkInterfaceAttachment": "CACHED",
  "AWS::EC2::NetworkInterfacePermission": "CACHED",
  "AWS::EC2::PlacementGroup": "CACHED",
  "AWS::EC2::PrefixList": "CACHED",
  "AWS::EC2::Route": "CACHED",
  "AWS::EC2::RouteTable": "CACHED",
  "AWS::EC2::SecurityGroup": "CACHED",
  "AWS::EC2::SecurityGroupEgress": "CACHED",
  "AWS::EC2::SecurityGroupIngress": "CACHED",
  "AWS::EC2::SpotFleet": "CACHED",
  "AWS::EC2::Subnet": "CACHED",
  "AWS::EC2::SubnetCidrBlock": "CACHED",
  "AWS::EC2::SubnetNetworkAclAssociation": "CACHED",
  "AWS::EC2::SubnetRouteTableAssociation": "CACHED",
  "AWS::EC2::TrafficMirrorFilter": "CACHED",
  "AWS::EC2::TrafficMirrorFilterRule": "CACHED",
  "AWS::EC2::TrafficMirrorSession": "CACHED",
  "AWS::EC2::TrafficMirrorTarget": "CACHED",
  "AWS::EC2::TransitGateway": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html",
   "Properties": {
    "AmazonSideAsn": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-amazonsideasn",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "AutoAcceptSharedAttachments": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-autoacceptsharedattachments",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "TransitGatewayEnabled"
     }
    },
    "DefaultRouteTableAssociation": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-defaultroutetableassociation",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "TransitGatewayEnabled"
     }
    },
    "DefaultRouteTablePropagation": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-defaultroutetablepropagation",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "TransitGatewayEnabled"
     }
    },
    "Description": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-description",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "DnsSupport": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-dnssupport",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "TransitGatewayEnabled"
     }
    },
    "MulticastSupport": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-multicastsupport",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "Tags": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-tags",
     "ItemType": "Tag",
     "Required": false,
     "Type": "List",
     "UpdateType": "Immutable"
    },
    "VpnEcmpSupport": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-vpnecmpsupport",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "TransitGatewayEnabled"
     }
    }
   }
  },
  "AWS::EC2::TransitGatewayAttachment": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html",
   "Properties": {
    "SubnetIds": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-subnetids",
     "PrimitiveItemType": "String",
     "Required": true,
     "Type": "List",
     "UpdateType": "Immutable"
    },
    "Tags": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-tags",
     "ItemType": "Tag",
     "Required": false,
     "Type": "List",
     "UpdateType": "Immutable"
    },
    "TransitGatewayId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-transitgatewayid",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "VpcId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-vpcid",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "AWS::EC2::VPC.Id"
     }
    }
   }
  },
  "AWS::EC2::TransitGatewayConnect": "CACHED",
  "AWS::EC2::TransitGatewayMulticastDomain": "CACHED",
  "AWS::EC2::TransitGatewayMulticastDomainAssociation": "CACHED",
  "AWS::EC2::TransitGatewayMulticastGroupMember": "CACHED",
  "AWS::EC2::TransitGatewayMulticastGroupSource": "CACHED",
  "AWS::EC2::TransitGatewayPeeringAttachment": "CACHED",
  "AWS::EC2::TransitGatewayRoute": "CACHED",
  "AWS::EC2::TransitGatewayRouteTable": "CACHED",
  "AWS::EC2::TransitGatewayRouteTableAssociation": "CACHED",
  "AWS::EC2::TransitGatewayRouteTablePropagation": "CACHED",
  "AWS::EC2::VPC": "CACHED",
  "AWS::EC2::VPCCidrBlock": "CACHED",
  "AWS::EC2::VPCDHCPOptionsAssociation": "CACHED",
  "AWS::EC2::VPCEndpoint": "CACHED",
  "AWS::EC2::VPCEndpointConnectionNotification": "CACHED",
  "AWS::EC2::VPCEndpointService": "CACHED",
  "AWS::EC2::VPCEndpointServicePermissions": "CACHED",
  "AWS::EC2::VPCGatewayAttachment": "CACHED",
  "AWS::EC2::VPCPeeringConnection": "CACHED",
  "AWS::EC2::VPNConnection": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html",
   "Properties": {
    "CustomerGatewayId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-customergatewayid",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "StaticRoutesOnly": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-StaticRoutesOnly",
     "PrimitiveType": "Boolean",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "Tags": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-tags",
     "DuplicatesAllowed": true,
     "ItemType": "Tag",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "TransitGatewayId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-transitgatewayid",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "Type": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-type",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "VpnType"
     }
    },
    "VpnGatewayId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-vpngatewayid",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "VpnTunnelOptionsSpecifications": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-vpntunneloptionsspecifications",
     "DuplicatesAllowed": false,
     "ItemType": "VpnTunnelOptionsSpecification",
     "Required": false,
     "Type": "List",
     "UpdateType": "Immutable"
    }
   }
  },
  "AWS::EC2::VPNConnectionRoute": "CACHED",
  "AWS::EC2::VPNGateway": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html",
   "Properties": {
    "AmazonSideAsn": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-amazonsideasn",
     "PrimitiveType": "Long",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "Tags": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-tags",
     "DuplicatesAllowed": true,
     "ItemType": "Tag",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "Type": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-type",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "VpnType"
     }
    }
   }
  },
  "AWS::EC2::VPNGatewayRoutePropagation": "CACHED",
  "AWS::EC2::Volume": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html",
   "Properties": {
    "AutoEnableIO": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-autoenableio",
     "PrimitiveType": "Boolean",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "AvailabilityZone": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-availabilityzone",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "Encrypted": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-encrypted",
     "PrimitiveType": "Boolean",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "Iops": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-iops",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "KmsKeyId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-kmskeyid",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "MultiAttachEnabled": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-multiattachenabled",
     "PrimitiveType": "Boolean",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "OutpostArn": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-outpostarn",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "Size": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-size",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "SnapshotId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-snapshotid",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "Tags": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-tags",
     "DuplicatesAllowed": true,
     "ItemType": "Tag",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "Throughput": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-throughput",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "VolumeType": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-volumetype",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "EbsVolumeType"
     }
    }
   }
  },
  "AWS::EC2::VolumeAttachment": "CACHED",
  "AWS::ECR::Repository": "CACHED",
  "AWS::ECS::CapacityProvider": "CACHED",
  "AWS::ECS::Cluster": "CACHED",
  "AWS::ECS::ClusterCapacityProviderAssociations": "CACHED",
  "AWS::ECS::PrimaryTaskSet": "CACHED",
  "AWS::ECS::Service": "CACHED",
  "AWS::ECS::TaskDefinition": "CACHED",
  "AWS::ECS::TaskSet": "CACHED",
  "AWS::EFS::AccessPoint": "CACHED",
  "AWS::EFS::FileSystem": "CACHED",
  "AWS::EFS::MountTarget": "CACHED",
  "AWS::EKS::Addon": "CACHED",
  "AWS::EKS::Cluster": "CACHED",
  "AWS::EKS::FargateProfile": "CACHED",
  "AWS::EKS::IdentityProviderConfig": "CACHED",
  "AWS::EKS::Nodegroup": "CACHED",
  "AWS::EMR::Cluster": "CACHED",
  "AWS::EMR::InstanceFleetConfig": "CACHED",
  "AWS::EMR::InstanceGroupConfig": "CACHED",
  "AWS::EMR::SecurityConfiguration": "CACHED",
  "AWS::EMR::Step": "CACHED",
  "AWS::EMR::Studio": "CACHED",
  "AWS::ElastiCache::CacheCluster": "CACHED",
  "AWS::ElastiCache::GlobalReplicationGroup": "CACHED",
  "AWS::ElastiCache::ParameterGroup": "CACHED",
  "AWS::ElastiCache::ReplicationGroup": "CACHED",
  "AWS::ElastiCache::SecurityGroup": "CACHED",
  "AWS::ElastiCache::SecurityGroupIngress": "CACHED",
  "AWS::ElastiCache::SubnetGroup": "CACHED",
  "AWS::ElastiCache::User": "CACHED",
  "AWS::ElastiCache::UserGroup": "CACHED",
  "AWS::ElasticBeanstalk::Application": "CACHED",
  "AWS::ElasticBeanstalk::ApplicationVersion": "CACHED",
  "AWS::ElasticBeanstalk::ConfigurationTemplate": "CACHED",
  "AWS::ElasticBeanstalk::Environment": {
   "Attributes": {
    "EndpointURL": {
     "PrimitiveType": "String"
    }
   },
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html",
   "Properties": {
    "ApplicationName": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-applicationname",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "CNAMEPrefix": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-cnameprefix",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "Description": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-description",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "EnvironmentName": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-name",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "OperationsRole": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-operations-role",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "OptionSettings": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-optionsettings",
     "DuplicatesAllowed": true,
     "ItemType": "OptionSetting",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "PlatformArn": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-platformarn",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "SolutionStackName": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-solutionstackname",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "Tags": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-elasticbeanstalk-environment-tags",
     "DuplicatesAllowed": true,
     "ItemType": "Tag",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "TemplateName": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-templatename",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "Tier": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-tier",
     "Required": false,
     "Type": "Tier",
     "UpdateType": "Conditional"
    },
    "VersionLabel": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-versionlabel",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::ElasticLoadBalancing::LoadBalancer": "CACHED",
  "AWS::ElasticLoadBalancingV2::Listener": "CACHED",
  "AWS::ElasticLoadBalancingV2::ListenerCertificate": "CACHED",
  "AWS::ElasticLoadBalancingV2::ListenerRule": "CACHED",
  "AWS::ElasticLoadBalancingV2::LoadBalancer": "CACHED",
  "AWS::ElasticLoadBalancingV2::TargetGroup": "CACHED",
  "AWS::Elasticsearch::Domain": "CACHED",
  "AWS::Events::EventBus": "CACHED",
  "AWS::Events::EventBusPolicy": "CACHED",
  "AWS::Events::Rule": "CACHED",
  "AWS::FSx::DataRepositoryAssociation": "CACHED",
  "AWS::FSx::FileSystem": "CACHED",
  "AWS::GameLift::Alias": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-alias.html",
   "Properties": {
    "Description": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-alias.html#cfn-gamelift-alias-description",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::GameLift::Alias.Description"
     }
    },
    "Name": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-alias.html#cfn-gamelift-alias-name",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::GameLift::Alias.Name"
     }
    },
    "RoutingStrategy": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-alias.html#cfn-gamelift-alias-routingstrategy",
     "Required": true,
     "Type": "RoutingStrategy",
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::GameLift::Build": "CACHED",
  "AWS::GameLift::Fleet": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html",
   "Properties": {
    "BuildId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-buildid",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "AWS::GameLift::Fleet.BuildId"
     }
    },
    "CertificateConfiguration": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-certificateconfiguration",
     "Required": false,
     "Type": "CertificateConfiguration",
     "UpdateType": "Immutable"
    },
    "Description": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-description",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::GameLift::Fleet.Description"
     }
    },
    "DesiredEC2Instances": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-desiredec2instances",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "EC2InboundPermissions": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-ec2inboundpermissions",
     "DuplicatesAllowed": false,
     "ItemType": "IpPermission",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "EC2InstanceType": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-ec2instancetype",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "AWS::GameLift::Fleet.EC2InstanceType"
     }
    },
    "FleetType": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-fleettype",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "AWS::GameLift::Fleet.FleetType"
     }
    },
    "InstanceRoleARN": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-instancerolearn",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "AWS::GameLift::Fleet.InstanceRoleARN"
     }
    },
    "LogPaths": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-logpaths",
     "DuplicatesAllowed": false,
     "PrimitiveItemType": "String",
     "Required": false,
     "Type": "List",
     "UpdateType": "Immutable"
    },
    "MaxSize": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-maxsize",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "MetricGroups": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-metricgroups",
     "DuplicatesAllowed": false,
     "PrimitiveItemType": "String",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "MinSize": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-minsize",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "Name": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-name",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::GameLift::Fleet.Name"
     }
    },
    "NewGameSessionProtectionPolicy": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-newgamesessionprotectionpolicy",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::GameLift::Fleet.NewGameSessionProtectionPolicy"
     }
    },
    "PeerVpcAwsAccountId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-peervpcawsaccountid",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "AWS::GameLift::Fleet.PeerVpcAwsAccountId"
     }
    },
    "PeerVpcId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-peervpcid",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "AWS::GameLift::Fleet.PeerVpcId"
     }
    },
    "ResourceCreationLimitPolicy": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-resourcecreationlimitpolicy",
     "Required": false,
     "Type": "ResourceCreationLimitPolicy",
     "UpdateType": "Mutable"
    },
    "RuntimeConfiguration": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-runtimeconfiguration",
     "Required": false,
     "Type": "RuntimeConfiguration",
     "UpdateType": "Mutable"
    },
    "ScriptId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-scriptid",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "AWS::GameLift::Fleet.ScriptId"
     }
    },
    "ServerLaunchParameters": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-serverlaunchparameters",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "AWS::GameLift::Fleet.ServerLaunchParameters"
     }
    },
    "ServerLaunchPath": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-serverlaunchpath",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "AWS::GameLift::Fleet.ServerLaunchPath"
     }
    }
   }
  },
  "AWS::GameLift::GameServerGroup": "CACHED",
  "AWS::GameLift::GameSessionQueue": "CACHED",
  "AWS::GameLift::MatchmakingConfiguration": "CACHED",
  "AWS::GameLift::MatchmakingRuleSet": "CACHED",
  "AWS::GameLift::Script": "CACHED",
  "AWS::Glue::Classifier": "CACHED",
  "AWS::Glue::Connection": "CACHED",
  "AWS::Glue::Crawler": "CACHED",
  "AWS::Glue::DataCatalogEncryptionSettings": "CACHED",
  "AWS::Glue::Database": "CACHED",
  "AWS::Glue::DevEndpoint": "CACHED",
  "AWS::Glue::Job": "CACHED",
  "AWS::Glue::Partition": "CACHED",
  "AWS::Glue::Registry": "CACHED",
  "AWS::Glue::Schema": "CACHED",
  "AWS::Glue::SchemaVersion": "CACHED",
  "AWS::Glue::SchemaVersionMetadata": "CACHED",
  "AWS::Glue::SecurityConfiguration": "CACHED",
  "AWS::Glue::Table": "CACHED",
  "AWS::Glue::Trigger": "CACHED",
  "AWS::Glue::Workflow": "CACHED",
  "AWS::GuardDuty::Detector": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-detector.html",
   "Properties": {
    "DataSources": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-detector.html#cfn-guardduty-detector-datasources",
     "Required": false,
     "Type": "CFNDataSourceConfigurations",
     "UpdateType": "Mutable"
    },
    "Enable": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-detector.html#cfn-guardduty-detector-enable",
     "PrimitiveType": "Boolean",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "FindingPublishingFrequency": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-detector.html#cfn-guardduty-detector-findingpublishingfrequency",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::GuardDuty::Filter": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-filter.html",
   "Properties": {
    "Action": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-filter.html#cfn-guardduty-filter-action",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "Description": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-filter.html#cfn-guardduty-filter-description",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "DetectorId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-filter.html#cfn-guardduty-filter-detectorid",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "FindingCriteria": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-filter.html#cfn-guardduty-filter-findingcriteria",
     "Required": true,
     "Type": "FindingCriteria",
     "UpdateType": "Mutable"
    },
    "Name": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-filter.html#cfn-guardduty-filter-name",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "Rank": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-filter.html#cfn-guardduty-filter-rank",
     "PrimitiveType": "Integer",
     "Required": true,
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::GuardDuty::IPSet": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-ipset.html",
   "Properties": {
    "Activate": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-ipset.html#cfn-guardduty-ipset-activate",
     "PrimitiveType": "Boolean",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "DetectorId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-ipset.html#cfn-guardduty-ipset-detectorid",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "Format": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-ipset.html#cfn-guardduty-ipset-format",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "Location": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-ipset.html#cfn-guardduty-ipset-location",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "Name": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-ipset.html#cfn-guardduty-ipset-name",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::GuardDuty::Master": "CACHED",
  "AWS::GuardDuty::Member": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-member.html",
   "Properties": {
    "DetectorId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-member.html#cfn-guardduty-member-detectorid",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "DisableEmailNotification": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-member.html#cfn-guardduty-member-disableemailnotification",
     "PrimitiveType": "Boolean",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "Email": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-member.html#cfn-guardduty-member-email",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "MemberId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-member.html#cfn-guardduty-member-memberid",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "Message": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-member.html#cfn-guardduty-member-message",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "Status": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-member.html#cfn-guardduty-member-status",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::GuardDuty::ThreatIntelSet": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-threatintelset.html",
   "Properties": {
    "Activate": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-threatintelset.html#cfn-guardduty-threatintelset-activate",
     "PrimitiveType": "Boolean",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "DetectorId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-threatintelset.html#cfn-guardduty-threatintelset-detectorid",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "Format": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-threatintelset.html#cfn-guardduty-threatintelset-format",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "Location": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-threatintelset.html#cfn-guardduty-threatintelset-location",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "Name": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-threatintelset.html#cfn-guardduty-threatintelset-name",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::IAM::AccessKey": "CACHED",
  "AWS::IAM::Group": "CACHED",
  "AWS::IAM::InstanceProfile": "CACHED",
  "AWS::IAM::ManagedPolicy": "CACHED",
  "AWS::IAM::OIDCProvider": "CACHED",
  "AWS::IAM::Policy": "CACHED",
  "AWS::IAM::Role": "CACHED",
  "AWS::IAM::SAMLProvider": "CACHED",
  "AWS::IAM::ServerCertificate": "CACHED",
  "AWS::IAM::ServiceLinkedRole": "CACHED",
  "AWS::IAM::User": "CACHED",
  "AWS::IAM::UserToGroupAddition": "CACHED",
  "AWS::IAM::VirtualMFADevice": "CACHED",
  "AWS::ImageBuilder::Component": "CACHED",
  "AWS::ImageBuilder::ContainerRecipe": "CACHED",
  "AWS::ImageBuilder::DistributionConfiguration": "CACHED",
  "AWS::ImageBuilder::Image": "CACHED",
  "AWS::ImageBuilder::ImagePipeline": "CACHED",
  "AWS::ImageBuilder::ImageRecipe": "CACHED",
  "AWS::ImageBuilder::InfrastructureConfiguration": "CACHED",
  "AWS::IoT::AccountAuditConfiguration": "CACHED",
  "AWS::IoT::Authorizer": "CACHED",
  "AWS::IoT::CACertificate": "CACHED",
  "AWS::IoT::Certificate": "CACHED",
  "AWS::IoT::CustomMetric": "CACHED",
  "AWS::IoT::Dimension": "CACHED",
  "AWS::IoT::DomainConfiguration": "CACHED",
  "AWS::IoT::FleetMetric": "CACHED",
  "AWS::IoT::JobTemplate": "CACHED",
  "AWS::IoT::Logging": "CACHED",
  "AWS::IoT::MitigationAction": "CACHED",
  "AWS::IoT::Policy": "CACHED",
  "AWS::IoT::PolicyPrincipalAttachment": "CACHED",
  "AWS::IoT::ProvisioningTemplate": "CACHED",
  "AWS::IoT::ResourceSpecificLogging": "CACHED",
  "AWS::IoT::RoleAlias": "CACHED",
  "AWS::IoT::ScheduledAudit": "CACHED",
  "AWS::IoT::SecurityProfile": "CACHED",
  "AWS::IoT::Thing": "CACHED",
  "AWS::IoT::ThingPrincipalAttachment": "CACHED",
  "AWS::IoT::TopicRule": "CACHED",
  "AWS::IoT::TopicRuleDestination": "CACHED",
  "AWS::KMS::Alias": "CACHED",
  "AWS::KMS::Key": "CACHED",
  "AWS::Kinesis::Stream": "CACHED",
  "AWS::Kinesis::StreamConsumer": "CACHED",
  "AWS::KinesisAnalytics::Application": "CACHED",
  "AWS::KinesisAnalytics::ApplicationOutput": "CACHED",
  "AWS::KinesisAnalytics::ApplicationReferenceDataSource": "CACHED",
  "AWS::KinesisAnalyticsV2::Application": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html",
   "Properties": {
    "ApplicationConfiguration": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-applicationconfiguration",
     "Required": false,
     "Type": "ApplicationConfiguration",
     "UpdateType": "Mutable"
    },
    "ApplicationDescription": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-applicationdescription",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "ApplicationMode": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-applicationmode",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "AWS::KinesisAnalyticsV2::Application.ApplicationMode"
     }
    },
    "ApplicationName": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-applicationname",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "AWS::KinesisAnalyticsV2::Application.ApplicationName"
     }
    },
    "RuntimeEnvironment": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-runtimeenvironment",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "ServiceExecutionRole": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-serviceexecutionrole",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::KinesisAnalyticsV2::Application.ServiceExecutionRole"
     }
    },
    "Tags": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-tags",
     "ItemType": "Tag",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption": "CACHED",
  "AWS::KinesisAnalyticsV2::ApplicationOutput": "CACHED",
  "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream": "CACHED",
  "AWS::LakeFormation::DataCellsFilter": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions": "CACHED",
  "AWS::LakeFormation::Tag": "CACHED",
  "AWS::LakeFormation::TagAssociation": "CACHED",
  "AWS::Lambda::Alias": "CACHED",
  "AWS::Lambda::EventInvokeConfig": "CACHED",
  "AWS::Lambda::EventSourceMapping": "CACHED",
  "AWS::Lambda::Function": "CACHED",
  "AWS::Lambda::LayerVersion": "CACHED",
  "AWS::Lambda::LayerVersionPermission": "CACHED",
  "AWS::Lambda::Permission": "CACHED",
  "AWS::Lambda::Version": "CACHED",
  "AWS::Logs::Destination": {
   "Attributes": {
    "Arn": {
     "PrimitiveType": "String"
    }
   },
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-destination.html",
   "Properties": {
    "DestinationName": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-destination.html#cfn-logs-destination-destinationname",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "AWS::Logs::Destination.DestinationName"
     }
    },
    "DestinationPolicy": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-destination.html#cfn-logs-destination-destinationpolicy",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "RoleArn": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-destination.html#cfn-logs-destination-rolearn",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "TargetArn": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-destination.html#cfn-logs-destination-targetarn",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::Logs::LogGroup": {
   "Attributes": {
    "Arn": {
     "PrimitiveType": "String"
    }
   },
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html",
   "Properties": {
    "KmsKeyId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html#cfn-logs-loggroup-kmskeyid",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::Logs::LogGroup.KmsKeyId"
     }
    },
    "LogGroupName": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html#cfn-logs-loggroup-loggroupname",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "AWS::Logs::LogGroup.LogGroupName"
     }
    },
    "RetentionInDays": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html#cfn-logs-loggroup-retentionindays",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::Logs::LogGroup.Retention"
     }
    }
   }
  },
  "AWS::Logs::LogStream": "CACHED",
  "AWS::Logs::MetricFilter": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html",
   "Properties": {
    "FilterPattern": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html#cfn-cwl-metricfilter-filterpattern",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "LogGroupName": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html#cfn-cwl-metricfilter-loggroupname",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "AWS::Logs::MetricFilter.LogGroupName"
     }
    },
    "MetricTransformations": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html#cfn-cwl-metricfilter-metrictransformations",
     "DuplicatesAllowed": false,
     "ItemType": "MetricTransformation",
     "Required": true,
     "Type": "List",
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::Logs::SubscriptionFilter": "CACHED",
  "AWS::MSK::BatchScramSecret": "CACHED",
  "AWS::MSK::Cluster": "CACHED",
  "AWS::MSK::Configuration": "CACHED",
  "AWS::MediaConvert::JobTemplate": "CACHED",
  "AWS::MediaConvert::Preset": "CACHED",
  "AWS::MediaConvert::Queue": "CACHED",
  "AWS::Neptune::DBCluster": "CACHED",
  "AWS::Neptune::DBClusterParameterGroup": "CACHED",
  "AWS::Neptune::DBInstance": {
   "Attributes": {
    "Endpoint": {
     "PrimitiveType": "String"
    },
    "Port": {
     "PrimitiveType": "String"
    }
   },
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbinstance.html",
   "Properties": {
    "AllowMajorVersionUpgrade": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbinstance.html#cfn-neptune-dbinstance-allowmajorversionupgrade",
     "PrimitiveType": "Boolean",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "AutoMinorVersionUpgrade": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbinstance.html#cfn-neptune-dbinstance-autominorversionupgrade",
     "PrimitiveType": "Boolean",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "AvailabilityZone": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbinstance.html#cfn-neptune-dbinstance-availabilityzone",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "DBClusterIdentifier": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbinstance.html#cfn-neptune-dbinstance-dbclusteridentifier",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "DBInstanceClass": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbinstance.html#cfn-neptune-dbinstance-dbinstanceclass",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "DBInstanceIdentifier": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbinstance.html#cfn-neptune-dbinstance-dbinstanceidentifier",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "DBParameterGroupName": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbinstance.html#cfn-neptune-dbinstance-dbparametergroupname",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "DBSnapshotIdentifier": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbinstance.html#cfn-neptune-dbinstance-dbsnapshotidentifier",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "DBSubnetGroupName": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbinstance.html#cfn-neptune-dbinstance-dbsubnetgroupname",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "PreferredMaintenanceWindow": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbinstance.html#cfn-neptune-dbinstance-preferredmaintenancewindow",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "Tags": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbinstance.html#cfn-neptune-dbinstance-tags",
     "ItemType": "Tag",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::Neptune::DBParameterGroup": "CACHED",
  "AWS::Neptune::DBSubnetGroup": "CACHED",
  "AWS::OpenSearchService::Domain": "CACHED",
  "AWS::Organizations::Account": "CACHED",
  "AWS::Organizations::OrganizationalUnit": "CACHED",
  "AWS::RAM::ResourceShare": "CACHED",
  "AWS::RDS::DBCluster": "CACHED",
  "AWS::RDS::DBClusterParameterGroup": "CACHED",
  "AWS::RDS::DBInstance": "CACHED",
  "AWS::RDS::DBParameterGroup": "CACHED",
  "AWS::RDS::DBSecurityGroup": "CACHED",
  "AWS::RDS::DBSecurityGroupIngress": "CACHED",
  "AWS::RDS::DBSubnetGroup": "CACHED",
  "AWS::RDS::EventSubscription": "CACHED",
  "AWS::RDS::OptionGroup": "CACHED",
  "AWS::Redshift::Cluster": {
   "Attributes": {
    "Endpoint.Address": {
     "PrimitiveType": "String"
    },
    "Endpoint.Port": {
     "PrimitiveType": "String"
    }
   },
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html",
   "Properties": {
    "AllowVersionUpgrade": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-allowversionupgrade",
     "PrimitiveType": "Boolean",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "AutomatedSnapshotRetentionPeriod": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-automatedsnapshotretentionperiod",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "AvailabilityZone": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-availabilityzone",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "ClusterIdentifier": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clusteridentifier",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "ClusterParameterGroupName": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clusterparametergroupname",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "ClusterSecurityGroups": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clustersecuritygroups",
     "DuplicatesAllowed": true,
     "PrimitiveItemType": "String",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "ClusterSubnetGroupName": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clustersubnetgroupname",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "ClusterType": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clustertype",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "RedshiftClusterType"
     }
    },
    "ClusterVersion": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clusterversion",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "RedshiftClusterVersion"
     }
    },
    "DBName": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-dbname",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "ElasticIp": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-elasticip",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "Encrypted": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-encrypted",
     "PrimitiveType": "Boolean",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "HsmClientCertificateIdentifier": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-hsmclientcertidentifier",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "HsmConfigurationIdentifier": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-HsmConfigurationIdentifier",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "IamRoles": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-iamroles",
     "DuplicatesAllowed": false,
     "PrimitiveItemType": "String",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "KmsKeyId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-kmskeyid",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "LoggingProperties": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-loggingproperties",
     "Required": false,
     "Type": "LoggingProperties",
     "UpdateType": "Mutable"
    },
    "MasterUserPassword": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-masteruserpassword",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "MasterUsername": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-masterusername",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "NodeType": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-nodetype",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "RedshiftInstanceType"
     }
    },
    "NumberOfNodes": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-nodetype",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Mutable",
     "Value": {
      "ValueType": "AWS::Redshift::Cluster.NumberOfNodes"
     }
    },
    "OwnerAccount": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-owneraccount",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "Port": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-port",
     "PrimitiveType": "Integer",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "PreferredMaintenanceWindow": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-preferredmaintenancewindow",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "PubliclyAccessible": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-publiclyaccessible",
     "PrimitiveType": "Boolean",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "SnapshotClusterIdentifier": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-snapshotclusteridentifier",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "SnapshotIdentifier": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-snapshotidentifier",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "Tags": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-tags",
     "DuplicatesAllowed": true,
     "ItemType": "Tag",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "VpcSecurityGroupIds": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-vpcsecuritygroupids",
     "DuplicatesAllowed": true,
     "PrimitiveItemType": "String",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::Redshift::ClusterParameterGroup": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html",
   "Properties": {
    "Description": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html#cfn-redshift-clusterparametergroup-description",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "ParameterGroupFamily": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html#cfn-redshift-clusterparametergroup-parametergroupfamily",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "Parameters": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html#cfn-redshift-clusterparametergroup-parameters",
     "DuplicatesAllowed": true,
     "ItemType": "Parameter",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "Tags": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html#cfn-redshift-clusterparametergroup-tags",
     "DuplicatesAllowed": true,
     "ItemType": "Tag",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::Redshift::ClusterSecurityGroup": "CACHED",
  "AWS::Redshift::ClusterSecurityGroupIngress": "CACHED",
  "AWS::Redshift::ClusterSubnetGroup": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersubnetgroup.html",
   "Properties": {
    "Description": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersubnetgroup.html#cfn-redshift-clustersubnetgroup-description",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "SubnetIds": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersubnetgroup.html#cfn-redshift-clustersubnetgroup-subnetids",
     "DuplicatesAllowed": true,
     "PrimitiveItemType": "String",
     "Required": true,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "Tags": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersubnetgroup.html#cfn-redshift-clustersubnetgroup-tags",
     "DuplicatesAllowed": true,
     "ItemType": "Tag",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::ResourceGroups::Group": "CACHED",
  "AWS::Route53::CidrCollection": "CACHED",
  "AWS::Route53::HealthCheck": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-healthcheck.html",
   "Properties": {
    "HealthCheckConfig": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-healthcheck.html#cfn-route53-healthcheck-healthcheckconfig",
     "Required": true,
     "Type": "HealthCheckConfig",
     "UpdateType": "Conditional"
    },
    "HealthCheckTags": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-healthcheck.html#cfn-route53-healthcheck-healthchecktags",
     "DuplicatesAllowed": true,
     "ItemType": "HealthCheckTag",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::Route53::HostedZone": {
   "Attributes": {
    "NameServers": {
     "PrimitiveItemType": "String",
     "Type": "List"
    }
   },
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html",
   "Properties": {
    "HostedZoneConfig": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html#cfn-route53-hostedzone-hostedzoneconfig",
     "Required": false,
     "Type": "HostedZoneConfig",
     "UpdateType": "Mutable"
    },
    "HostedZoneTags": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html#cfn-route53-hostedzone-hostedzonetags",
     "DuplicatesAllowed": true,
     "ItemType": "HostedZoneTag",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "Name": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html#cfn-route53-hostedzone-name",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "QueryLoggingConfig": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html#cfn-route53-hostedzone-queryloggingconfig",
     "Required": false,
     "Type": "QueryLoggingConfig",
     "UpdateType": "Mutable"
    },
    "VPCs": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html#cfn-route53-hostedzone-vpcs",
     "DuplicatesAllowed": true,
     "ItemType": "VPC",
     "Required": false,
     "Type": "List",
     "UpdateType": "Conditional"
    }
   }
  },
  "AWS::Route53::RecordSet": "CACHED",
  "AWS::Route53::RecordSetGroup": "CACHED",
  "AWS::Route53Resolver::FirewallDomainList": "CACHED",
  "AWS::Route53Resolver::FirewallRuleGroup": "CACHED",
  "AWS::Route53Resolver::FirewallRuleGroupAssociation": "CACHED",
  "AWS::Route53Resolver::ResolverConfig": "CACHED",
  "AWS::Route53Resolver::ResolverEndpoint": "CACHED",
  "AWS::Route53Resolver::ResolverQueryLoggingConfig": "CACHED",
  "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation": "CACHED",
  "AWS::Route53Resolver::ResolverRule": "CACHED",
  "AWS::Route53Resolver::ResolverRuleAssociation": "CACHED",
  "AWS::S3::AccessPoint": "CACHED",
  "AWS::S3::Bucket": "CACHED",
  "AWS::S3::BucketPolicy": "CACHED",
  "AWS::S3ObjectLambda::AccessPoint": "CACHED",
  "AWS::S3ObjectLambda::AccessPointPolicy": "CACHED",
  "AWS::SNS::Subscription": "CACHED",
  "AWS::SNS::Topic": "CACHED",
  "AWS::SNS::TopicPolicy": "CACHED",
  "AWS::SQS::Queue": "CACHED",
  "AWS::SQS::QueuePolicy": "CACHED",
  "AWS::SSM::Association": "CACHED",
  "AWS::SSM::Document": "CACHED",
  "AWS::SSM::MaintenanceWindow": "CACHED",
  "AWS::SSM::MaintenanceWindowTarget": "CACHED",
  "AWS::SSM::MaintenanceWindowTask": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html",
   "Properties": {
    "Description": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html#cfn-ssm-maintenancewindowtask-description",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "LoggingInfo": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html#cfn-ssm-maintenancewindowtask-logginginfo",
     "Required": false,
     "Type": "LoggingInfo",
     "UpdateType": "Mutable"
    },
    "MaxConcurrency": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html#cfn-ssm-maintenancewindowtask-maxconcurrency",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "MaxErrors": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html#cfn-ssm-maintenancewindowtask-maxerrors",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "Name": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html#cfn-ssm-maintenancewindowtask-name",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "Priority": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html#cfn-ssm-maintenancewindowtask-priority",
     "PrimitiveType": "Integer",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "ServiceRoleArn": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html#cfn-ssm-maintenancewindowtask-servicerolearn",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "Targets": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html#cfn-ssm-maintenancewindowtask-targets",
     "ItemType": "Target",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    },
    "TaskArn": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html#cfn-ssm-maintenancewindowtask-taskarn",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "TaskInvocationParameters": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html#cfn-ssm-maintenancewindowtask-taskinvocationparameters",
     "Required": false,
     "Type": "TaskInvocationParameters",
     "UpdateType": "Mutable"
    },
    "TaskParameters": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html#cfn-ssm-maintenancewindowtask-taskparameters",
     "PrimitiveType": "Json",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "TaskType": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html#cfn-ssm-maintenancewindowtask-tasktype",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    },
    "WindowId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html#cfn-ssm-maintenancewindowtask-windowid",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    }
   }
  },
  "AWS::SSM::Parameter": "CACHED",
  "AWS::SSM::PatchBaseline": "CACHED",
  "AWS::SSM::ResourceDataSync": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-resourcedatasync.html",
   "Properties": {
    "BucketName": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-resourcedatasync.html#cfn-ssm-resourcedatasync-bucketname",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "AWS::SSM::ResourceDataSync.BucketName"
     }
    },
    "BucketPrefix": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-resourcedatasync.html#cfn-ssm-resourcedatasync-bucketprefix",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "BucketRegion": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-resourcedatasync.html#cfn-ssm-resourcedatasync-bucketregion",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "AWS::SSM::ResourceDataSync.BucketRegion"
     }
    },
    "KMSKeyArn": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-resourcedatasync.html#cfn-ssm-resourcedatasync-kmskeyarn",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "S3Destination": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-resourcedatasync.html#cfn-ssm-resourcedatasync-s3destination",
     "Required": false,
     "Type": "S3Destination",
     "UpdateType": "Immutable"
    },
    "SyncFormat": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-resourcedatasync.html#cfn-ssm-resourcedatasync-syncformat",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable"
    },
    "SyncName": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-resourcedatasync.html#cfn-ssm-resourcedatasync-syncname",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "AWS::SSM::ResourceDataSync.SyncName"
     }
    },
    "SyncSource": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-resourcedatasync.html#cfn-ssm-resourcedatasync-syncsource",
     "Required": false,
     "Type": "SyncSource",
     "UpdateType": "Mutable"
    },
    "SyncType": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-resourcedatasync.html#cfn-ssm-resourcedatasync-synctype",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "AWS::SSM::ResourceDataSync.SyncType"
     }
    }
   }
  },
  "AWS::SageMaker::App": "CACHED",
  "AWS::SageMaker::AppImageConfig": "CACHED",
  "AWS::SageMaker::CodeRepository": "CACHED",
  "AWS::SageMaker::Domain": "CACHED",
  "AWS::SageMaker::Endpoint": "CACHED",
  "AWS::SageMaker::EndpointConfig": "CACHED",
  "AWS::SageMaker::FeatureGroup": "CACHED",
  "AWS::SageMaker::Image": "CACHED",
  "AWS::SageMaker::ImageVersion": "CACHED",
  "AWS::SageMaker::Model": "CACHED",
  "AWS::SageMaker::ModelPackage": "CACHED",
  "AWS::SageMaker::MonitoringSchedule": "CACHED",
  "AWS::SageMaker::NotebookInstance": "CACHED",
  "AWS::SageMaker::NotebookInstanceLifecycleConfig": "CACHED",
  "AWS::SageMaker::UserProfile": "CACHED",
  "AWS::SageMaker::Workteam": "CACHED",
  "AWS::SecretsManager::ResourcePolicy": "CACHED",
  "AWS::SecretsManager::RotationSchedule": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html",
   "Properties": {
    "HostedRotationLambda": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html#cfn-secretsmanager-rotationschedule-hostedrotationlambda",
     "Required": false,
     "Type": "HostedRotationLambda",
     "UpdateType": "Mutable"
    },
    "RotationLambdaARN": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html#cfn-secretsmanager-rotationschedule-rotationlambdaarn",
     "PrimitiveType": "String",
     "Required": false,
     "UpdateType": "Mutable"
    },
    "RotationRules": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html#cfn-secretsmanager-rotationschedule-rotationrules",
     "Required": false,
     "Type": "RotationRules",
     "UpdateType": "Mutable"
    },
    "SecretId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html#cfn-secretsmanager-rotationschedule-secretid",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable"
    }
   }
  },
  "AWS::SecretsManager::Secret": "CACHED",
  "AWS::SecretsManager::SecretTargetAttachment": {
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html",
   "Properties": {
    "SecretId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html#cfn-secretsmanager-secrettargetattachment-secretid",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "TargetId": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html#cfn-secretsmanager-secrettargetattachment-targetid",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    },
    "TargetType": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html#cfn-secretsmanager-secrettargetattachment-targettype",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::SecurityHub::Hub": "CACHED",
  "AWS::ServiceCatalog::AcceptedPortfolioShare": "CACHED",
  "AWS::ServiceCatalog::CloudFormationProduct": "CACHED",
  "AWS::ServiceCatalog::CloudFormationProvisionedProduct": "CACHED",
  "AWS::ServiceCatalog::LaunchNotificationConstraint": "CACHED",
  "AWS::ServiceCatalog::LaunchRoleConstraint": "CACHED",
  "AWS::ServiceCatalog::LaunchTemplateConstraint": "CACHED",
  "AWS::ServiceCatalog::Portfolio": "CACHED",
  "AWS::ServiceCatalog::PortfolioPrincipalAssociation": "CACHED",
  "AWS::ServiceCatalog::PortfolioProductAssociation": "CACHED",
  "AWS::ServiceCatalog::PortfolioShare": "CACHED",
  "AWS::ServiceCatalog::ResourceUpdateConstraint": "CACHED",
  "AWS::ServiceCatalog::StackSetConstraint": "CACHED",
  "AWS::ServiceCatalog::TagOption": "CACHED",
  "AWS::ServiceCatalog::TagOptionAssociation": "CACHED",
  "AWS::ServiceDiscovery::HttpNamespace": "CACHED",
  "AWS::ServiceDiscovery::Instance": "CACHED",
  "AWS::ServiceDiscovery::PrivateDnsNamespace": "CACHED",
  "AWS::ServiceDiscovery::PublicDnsNamespace": "CACHED",
  "AWS::ServiceDiscovery::Service": "CACHED",
  "AWS::StepFunctions::Activity": {
   "Attributes": {
    "Id": {
     "PrimitiveType": "String"
    },
    "Name": {
     "PrimitiveType": "String"
    }
   },
   "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-activity.html",
   "Properties": {
    "Name": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-activity.html#cfn-stepfunctions-activity-name",
     "PrimitiveType": "String",
     "Required": true,
     "UpdateType": "Immutable",
     "Value": {
      "ValueType": "AWS::StepFunctions::Activity.Name"
     }
    },
    "Tags": {
     "Documentation": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-activity.html#cfn-stepfunctions-activity-tags",
     "DuplicatesAllowed": true,
     "ItemType": "TagsEntry",
     "Required": false,
     "Type": "List",
     "UpdateType": "Mutable"
    }
   }
  },
  "AWS::StepFunctions::StateMachine": "CACHED",
  "AWS::Synthetics::Canary": "CACHED",
  "AWS::Transfer::Agreement": "CACHED",
  "AWS::Transfer::Certificate": "CACHED",
  "AWS::Transfer::Connector": "CACHED",
  "AWS::Transfer::Profile": "CACHED",
  "AWS::Transfer::User": "CACHED",
  "AWS::Transfer::Workflow": "CACHED",
  "AWS::WAF::ByteMatchSet": "CACHED",
  "AWS::WAF::IPSet": "CACHED",
  "AWS::WAF::Rule": "CACHED",
  "AWS::WAF::SizeConstraintSet": "CACHED",
  "AWS::WAF::SqlInjectionMatchSet": "CACHED",
  "AWS::WAF::WebACL": "CACHED",
  "AWS::WAF::XssMatchSet": "CACHED",
  "AWS::WAFRegional::ByteMatchSet": "CACHED",
  "AWS::WAFRegional::GeoMatchSet": "CACHED",
  "AWS::WAFRegional::IPSet": "CACHED",
  "AWS::WAFRegional::RateBasedRule": "CACHED",
  "AWS::WAFRegional::RegexPatternSet": "CACHED",
  "AWS::WAFRegional::Rule": "CACHED",
  "AWS::WAFRegional::SizeConstraintSet": "CACHED",
  "AWS::WAFRegional::SqlInjectionMatchSet": "CACHED",
  "AWS::WAFRegional::WebACL": "CACHED",
  "AWS::WAFRegional::WebACLAssociation": "CACHED",
  "AWS::WAFRegional::XssMatchSet": "CACHED",
  "AWS::WAFv2::IPSet": "CACHED",
  "AWS::WAFv2::LoggingConfiguration": "CACHED",
  "AWS::WAFv2::RegexPatternSet": "CACHED",
  "AWS::WAFv2::RuleGroup": "CACHED",
  "AWS::WAFv2::WebACL": "CACHED",
  "AWS::WAFv2::WebACLAssociation": "CACHED",
  "AWS::WorkSpaces::Workspace": "CACHED"
 },
 "ValueTypes": {
  "AWS::AccessAnalyzer::Analyzer.AnalyzerName": "CACHED",
  "AWS::AmazonMQ::Broker.DeploymentMode": "CACHED",
  "AWS::AmazonMQ::Broker.EngineType": "CACHED",
  "AWS::AmazonMQ::Broker.HostInstanceType": "CACHED",
  "AWS::ApiGateway::Authorizer.AuthorizerResultTtlInSeconds": "CACHED",
  "AWS::ApiGateway::Authorizer.Type": "CACHED",
  "AWS::ApiGateway::DocumentationPart.Location.Type": "CACHED",
  "AWS::ApiGateway::GatewayResponse.ResponseType": "CACHED",
  "AWS::ApiGateway::Method.AuthorizationType": "CACHED",
  "AWS::ApiGateway::Method.Integration.ConnectionType": "CACHED",
  "AWS::ApiGateway::Method.Integration.ContentHandling": "CACHED",
  "AWS::ApiGateway::Method.Integration.PassthroughBehavior": "CACHED",
  "AWS::ApiGateway::Method.Integration.TimeoutInMillis": "CACHED",
  "AWS::ApiGateway::Method.Integration.Type": "CACHED",
  "AWS::ApiGateway::Method.IntegrationResponse.ContentHandling": "CACHED",
  "AWS::ApiGateway::RestApi.ApiKeySourceType": "CACHED",
  "AWS::ApiGateway::UsagePlanKey.KeyType": "CACHED",
  "AWS::AppStream::Fleet.DisconnectTimeoutInSeconds": "CACHED",
  "AWS::AppStream::Fleet.IdleDisconnectTimeoutInSeconds": "CACHED",
  "AWS::AppStream::Fleet.MaxUserDurationInSeconds": "CACHED",
  "AWS::AppSync::DataSource.Type": "CACHED",
  "AWS::AppSync::GraphQLApi.AuthType": "CACHED",
  "AWS::AppSync::Resolver.Kind": "CACHED",
  "AWS::ApplicationAutoScaling::ScalingPolicy.PolicyType": "CACHED",
  "AWS::ApplicationAutoScaling::ScalingPolicy.PredefinedMetricSpecification.PredefinedMetricType": "CACHED",
  "AWS::ApplicationInsights::Application.Alarm.AlarmName": "CACHED",
  "AWS::ApplicationInsights::Application.Alarm.Severity": "CACHED",
  "AWS::ApplicationInsights::Application.ComponentMonitoringSetting.ComponentARN": "CACHED",
  "AWS::ApplicationInsights::Application.ComponentMonitoringSetting.ComponentConfigurationMode": "CACHED",
  "AWS::ApplicationInsights::Application.ComponentMonitoringSetting.ComponentName": "CACHED",
  "AWS::ApplicationInsights::Application.CustomComponent.ComponentName": "CACHED",
  "AWS::ApplicationInsights::Application.CustomComponent.ResourceList": "CACHED",
  "AWS::ApplicationInsights::Application.GroupingType": "CACHED",
  "AWS::ApplicationInsights::Application.Log.Encoding": "CACHED",
  "AWS::ApplicationInsights::Application.Log.LogGroupName": "CACHED",
  "AWS::ApplicationInsights::Application.Log.LogPath": "CACHED",
  "AWS::ApplicationInsights::Application.Log.PatternSet": "CACHED",
  "AWS::ApplicationInsights::Application.LogPattern.Pattern": "CACHED",
  "AWS::ApplicationInsights::Application.LogPattern.PatternName": "CACHED",
  "AWS::ApplicationInsights::Application.LogPatternSet.PatternSetName": "CACHED",
  "AWS::ApplicationInsights::Application.OpsItemSNSTopicArn": "CACHED",
  "AWS::ApplicationInsights::Application.ResourceGroupName": "CACHED",
  "AWS::ApplicationInsights::Application.SubComponentTypeConfiguration.SubComponentType": "CACHED",
  "AWS::ApplicationInsights::Application.WindowsEvent.EventLevels": "CACHED",
  "AWS::ApplicationInsights::Application.WindowsEvent.EventName": "CACHED",
  "AWS::ApplicationInsights::Application.WindowsEvent.LogGroupName": "CACHED",
  "AWS::ApplicationInsights::Application.WindowsEvent.PatternSet": "CACHED",
  "AWS::Athena::DataCatalog.Description": "CACHED",
  "AWS::Athena::DataCatalog.Name": "CACHED",
  "AWS::Athena::DataCatalog.Type": "CACHED",
  "AWS::Athena::NamedQuery.Database": "CACHED",
  "AWS::Athena::NamedQuery.Description": "CACHED",
  "AWS::Athena::NamedQuery.Name": "CACHED",
  "AWS::Athena::NamedQuery.QueryString": "CACHED",
  "AWS::Athena::NamedQuery.WorkGroup": "CACHED",
  "AWS::Athena::PreparedStatement.Description": "CACHED",
  "AWS::Athena::PreparedStatement.QueryStatement": "CACHED",
  "AWS::Athena::PreparedStatement.StatementName": "CACHED",
  "AWS::Athena::PreparedStatement.WorkGroup": "CACHED",
  "AWS::Athena::WorkGroup.EncryptionConfiguration.EncryptionOption": "CACHED",
  "AWS::Athena::WorkGroup.Name": "CACHED",
  "AWS::Athena::WorkGroup.State": "CACHED",
  "AWS::AutoScaling::AutoScalingGroup.HealthCheckType": "CACHED",
  "AWS::AutoScaling::LaunchConfiguration.LaunchConfigurationName": "CACHED",
  "AWS::AutoScaling::LifecycleHook.DefaultResult": "CACHED",
  "AWS::AutoScaling::LifecycleHook.LifecycleHookName": "CACHED",
  "AWS::AutoScaling::LifecycleHook.LifecycleTransition": "CACHED",
  "AWS::AutoScaling::LifecycleHook.NotificationMetadata": "CACHED",
  "AWS::AutoScaling::ScalingPolicy.AdjustmentType": "CACHED",
  "AWS::AutoScaling::ScalingPolicy.CustomizedMetricSpecification.Statistic": "CACHED",
  "AWS::AutoScaling::ScalingPolicy.MetricAggregationType": "CACHED",
  "AWS::AutoScaling::ScalingPolicy.PolicyType": "CACHED",
  "AWS::AutoScaling::ScalingPolicy.PredefinedMetricSpecification.PredefinedMetricType": "CACHED",
  "AWS::AutoScalingPlans::ScalingPlan.ScalingInstruction.PredictiveScalingMaxCapacityBehavior": "CACHED",
  "AWS::AutoScalingPlans::ScalingPlan.ScalingInstruction.PredictiveScalingMode": "CACHED",
  "AWS::AutoScalingPlans::ScalingPlan.ScalingInstruction.ScalableDimension": "CACHED",
  "AWS::AutoScalingPlans::ScalingPlan.ScalingInstruction.ServiceNamespace": "CACHED",
  "AWS::Backup::BackupPlan.Id": "CACHED",
  "AWS::Backup::BackupVault.BackupVaultName": "CACHED",
  "AWS::Batch::JobQueue.JobQueueName": "CACHED",
  "AWS::Batch::JobQueue.SchedulingPolicyArn": "CACHED",
  "AWS::Batch::JobQueue.State": "CACHED",
  "AWS::Budgets::Budget.BudgetType": "CACHED",
  "AWS::Budgets::Budget.ComparisonOperator": "CACHED",
  "AWS::Budgets::Budget.NotificationType": "CACHED",
  "AWS::Budgets::Budget.SubscriptionType": "CACHED",
  "AWS::Budgets::Budget.Threshold": "CACHED",
  "AWS::Budgets::Budget.ThresholdType": "CACHED",
  "AWS::Budgets::Budget.TimeUnit": "CACHED",
  "AWS::Budgets::BudgetsAction.ActionThreshold.Type": "CACHED",
  "AWS::Budgets::BudgetsAction.ActionType": "CACHED",
  "AWS::Budgets::BudgetsAction.ApprovalModel": "CACHED",
  "AWS::Budgets::BudgetsAction.NotificationType": "CACHED",
  "AWS::Budgets::BudgetsAction.SsmActionDefinition.Subtype": "CACHED",
  "AWS::Budgets::BudgetsAction.Subscriber.Type": "CACHED",
  "AWS::CE::AnomalyMonitor.MonitorDimension": "CACHED",
  "AWS::CE::AnomalyMonitor.MonitorName": "CACHED",
  "AWS::CE::AnomalyMonitor.MonitorType": "CACHED",
  "AWS::CE::AnomalyMonitor.ResourceTag.Key": "CACHED",
  "AWS::CE::AnomalySubscription.Frequency": "CACHED",
  "AWS::CE::AnomalySubscription.MonitorArnList": "CACHED",
  "AWS::CE::AnomalySubscription.ResourceTag.Key": "CACHED",
  "AWS::CE::AnomalySubscription.Subscriber.Status": "CACHED",
  "AWS::CE::AnomalySubscription.Subscriber.Type": "CACHED",
  "AWS::CE::AnomalySubscription.SubscriptionName": "CACHED",
  "AWS::CE::CostCategory.DefaultValue": "CACHED",
  "AWS::CE::CostCategory.Name": "CACHED",
  "AWS::CE::CostCategory.RuleVersion": "CACHED",
  "AWS::CUR::ReportDefinition.AdditionalArtifacts": "CACHED",
  "AWS::CUR::ReportDefinition.AdditionalSchemaElements": "CACHED",
  "AWS::CUR::ReportDefinition.BillingViewArn": "CACHED",
  "AWS::CUR::ReportDefinition.Compression": "CACHED",
  "AWS::CUR::ReportDefinition.Format": "CACHED",
  "AWS::CUR::ReportDefinition.ReportName": "CACHED",
  "AWS::CUR::ReportDefinition.ReportVersioning": "CACHED",
  "AWS::CUR::ReportDefinition.S3Bucket": "CACHED",
  "AWS::CUR::ReportDefinition.S3Prefix": "CACHED",
  "AWS::CUR::ReportDefinition.TimeUnit": "CACHED",
  "AWS::Cassandra::Keyspace.KeyspaceName": "CACHED",
  "AWS::Cassandra::Table.BillingMode.Mode": "CACHED",
  "AWS::Cassandra::Table.ClusteringKeyColumn.OrderBy": "CACHED",
  "AWS::Cassandra::Table.Column.ColumnName": "CACHED",
  "AWS::Cassandra::Table.EncryptionSpecification.EncryptionType": "CACHED",
  "AWS::Cassandra::Table.KeyspaceName": "CACHED",
  "AWS::Cassandra::Table.TableName": "CACHED",
  "AWS::CertificateManager::Account.ExpiryEventsConfiguration.DaysBeforeExpiry": "CACHED",
  "AWS::Cloud9::EnvironmentEC2.AutomaticStopTimeMinutes": "CACHED",
  "AWS::CloudFormation::ModuleDefaultVersion.Arn": "CACHED",
  "AWS::CloudFormation::ModuleDefaultVersion.ModuleName": "CACHED",
  "AWS::CloudFormation::ModuleDefaultVersion.VersionId": "CACHED",
  "AWS::CloudFormation::ModuleVersion.ModuleName": "CACHED",
  "AWS::CloudFormation::ResourceDefaultVersion.TypeName": "CACHED",
  "AWS::CloudFormation::ResourceDefaultVersion.TypeVersionArn": "CACHED",
  "AWS::CloudFormation::ResourceDefaultVersion.VersionId": "CACHED",
  "AWS::CloudFormation::ResourceVersion.LoggingConfig.LogGroupName": "CACHED",
  "AWS::CloudFormation::ResourceVersion.LoggingConfig.LogRoleArn": "CACHED",
  "AWS::CloudFormation::ResourceVersion.TypeName": "CACHED",
  "AWS::CloudFormation::StackSet.AdministrationRoleARN": "CACHED",
  "AWS::CloudFormation::StackSet.CallAs": "CACHED",
  "AWS::CloudFormation::StackSet.Capabilities": "CACHED",
  "AWS::CloudFormation::StackSet.DeploymentTargets.AccountFilterType": "CACHED",
  "AWS::CloudFormation::StackSet.DeploymentTargets.Accounts": "CACHED",
  "AWS::CloudFormation::StackSet.DeploymentTargets.OrganizationalUnitIds": "CACHED",
  "AWS::CloudFormation::StackSet.Description": "CACHED",
  "AWS::CloudFormation::StackSet.ExecutionRoleName": "CACHED",
  "AWS::CloudFormation::StackSet.OperationPreferences.RegionConcurrencyType": "CACHED",
  "AWS::CloudFormation::StackSet.OperationPreferences.RegionOrder": "CACHED",
  "AWS::CloudFormation::StackSet.PermissionModel": "CACHED",
  "AWS::CloudFormation::StackSet.StackInstances.Regions": "CACHED",
  "AWS::CloudFormation::StackSet.StackSetName": "CACHED",
  "AWS::CloudFormation::StackSet.TemplateBody": "CACHED",
  "AWS::CloudFormation::StackSet.TemplateURL": "CACHED",
  "AWS::CloudFormation::WaitCondition.Timeout": "CACHED",
  "AWS::CloudFront::CachePolicy.CookiesConfig.CookieBehavior": "CACHED",
  "AWS::CloudFront::CachePolicy.HeadersConfig.HeaderBehavior": "CACHED",
  "AWS::CloudFront::CachePolicy.QueryStringsConfig.QueryStringBehavior": "CACHED",
  "AWS::CloudFront::Distribution.ErrorCode": "CACHED",
  "AWS::CloudFront::Distribution.EventType": "CACHED",
  "AWS::CloudFront::Distribution.HttpVersion": "CACHED",
  "AWS::CloudFront::Distribution.Locations": "CACHED",
  "AWS::CloudFront::Distribution.MinimumProtocolVersion": "CACHED",
  "AWS::CloudFront::Distribution.OriginProtocolPolicy": "CACHED",
  "AWS::CloudFront::Distribution.OriginSSLProtocols": "CACHED",
  "AWS::CloudFront::Distribution.PriceClass": "CACHED",
  "AWS::CloudFront::Distribution.ResponseCode": "CACHED",
  "AWS::CloudFront::Distribution.RestrictionType": "CACHED",
  "AWS::CloudFront::Distribution.SslSupportMethod": "CACHED",
  "AWS::CloudFront::Distribution.ViewerProtocolPolicy": "CACHED",
  "AWS::CloudFront::OriginRequestPolicy.CookiesConfig.CookieBehavior": "CACHED",
  "AWS::CloudFront::OriginRequestPolicy.HeadersConfig.HeaderBehavior": "CACHED",
  "AWS::CloudFront::OriginRequestPolicy.QueryStringsConfig.QueryStringBehavior": "CACHED",
  "AWS::CloudFront::RealtimeLogConfig.SamplingRate": "CACHED",
  "AWS::CloudFront::ResponseHeadersPolicy.FrameOptions.FrameOption": "CACHED",
  "AWS::CloudFront::ResponseHeadersPolicy.ReferrerPolicy.ReferrerPolicy": "CACHED",
  "AWS::CloudTrail::Trail.DataResourceType": "CACHED",
  "AWS::CloudTrail::Trail.EventSelector.ReadWriteType": "CACHED",
  "AWS::CloudTrail::Trail.TrailName": "CACHED",
  "AWS::CloudWatch::Alarm.AlarmAction": "CACHED",
  "AWS::CloudWatch::Alarm.AlarmActions": "CACHED",
  "AWS::CloudWatch::Alarm.ComparisonOperator": "CACHED",
  "AWS::CloudWatch::Alarm.MetricDataQuery.Id": "CACHED",
  "AWS::CloudWatch::Alarm.Statistic": "CACHED",
  "AWS::CloudWatch::Alarm.TreatMissingData": "CACHED",
  "AWS::CloudWatch::Alarm.Unit": "CACHED",
  "AWS::CloudWatch::CompositeAlarm.ActionsSuppressor": "CACHED",
  "AWS::CloudWatch::CompositeAlarm.AlarmActions": "CACHED",
  "AWS::CloudWatch::CompositeAlarm.AlarmName": "CACHED",
  "AWS::CloudWatch::CompositeAlarm.AlarmRule": "CACHED",
  "AWS::CloudWatch::CompositeAlarm.InsufficientDataActions": "CACHED",
  "AWS::CloudWatch::CompositeAlarm.OKActions": "CACHED",
  "AWS::CodeBuild::Project.Artifacts.Packaging": "CACHED",
  "AWS::CodeBuild::Project.Artifacts.Type": "CACHED",
  "AWS::CodeBuild::Project.Environment.ComputeType": "CACHED",
  "AWS::CodeBuild::Project.Environment.ImagePullCredentialsType": "CACHED",
  "AWS::CodeBuild::Project.Environment.Type": "CACHED",
  "AWS::CodeBuild::Project.ProjectCache.Type": "CACHED",
  "AWS::CodeBuild::Project.QueuedTimeoutInMinutes": "CACHED",
  "AWS::CodeBuild::Project.Source.Type": "CACHED",
  "AWS::CodeBuild::Project.TimeoutInMinutes": "CACHED",
  "AWS::CodeCommit::Repository.RepositoryName": "CACHED",
  "AWS::CodeCommit::Repository.RepositoryTrigger.Events": "CACHED",
  "AWS::CodeDeploy::Application.ComputePlatform": "CACHED",
  "AWS::CodeDeploy::DeploymentConfig.MinimumHealthyHosts.Type": "CACHED",
  "AWS::CodeDeploy::DeploymentGroup.AutoRollbackConfiguration.Events": "CACHED",
  "AWS::CodeDeploy::DeploymentGroup.DeploymentStyle.DeploymentOption": "CACHED",
  "AWS::CodeDeploy::DeploymentGroup.DeploymentStyle.DeploymentType": "CACHED",
  "AWS::CodePipeline::CustomActionType.ConfigurationProperties.Type": "CACHED",
  "AWS::CodePipeline::Pipeline.ActionTypeId.Category": "CACHED",
  "AWS::CodePipeline::Pipeline.ActionTypeId.Owner": "CACHED",
  "AWS::CodePipeline::Pipeline.ArtifactStore.Type": "CACHED",
  "AWS::CodePipeline::Pipeline.BlockerDeclaration.Type": "CACHED",
  "AWS::Cognito::UserPool.AliasAttributes": "CACHED",
  "AWS::Cognito::UserPool.MfaConfiguration": "CACHED",
  "AWS::Cognito::UserPool.SchemaAttribute.AttributeDataType": "CACHED",
  "AWS::Cognito::UserPool.UsernameAttributes": "CACHED",
  "AWS::Cognito::UserPoolClient.ExplicitAuthFlows": "CACHED",
  "AWS::Cognito::UserPoolClient.RefreshTokenValidity": "CACHED",
  "AWS::Cognito::UserPoolUser.DesiredDeliveryMediums": "CACHED",
  "AWS::Cognito::UserPoolUser.MessageAction": "CACHED",
  "AWS::Config::AggregationAuthorization.AuthorizedAccountId": "CACHED",
  "AWS::Config::AggregationAuthorization.AuthorizedAwsRegion": "CACHED",
  "AWS::Config::ConfigRule.Description": "CACHED",
  "AWS::Config::ConfigRule.MaximumExecutionFrequency": "CACHED",
  "AWS::Config::ConfigRule.Source.Owner": "CACHED",
  "AWS::Config::ConfigRule.SourceDetail.EventSource": "CACHED",
  "AWS::Config::ConfigRule.SourceDetail.MessageType": "CACHED",
  "AWS::DataBrew::Dataset.CsvOptions.Delimiter": "CACHED",
  "AWS::DataBrew::Dataset.DatasetParameter.Name": "CACHED",
  "AWS::DataBrew::Dataset.DatasetParameter.Type": "CACHED",
  "AWS::DataBrew::Dataset.DatetimeOptions.Format": "CACHED",
  "AWS::DataBrew::Dataset.DatetimeOptions.LocaleCode": "CACHED",
  "AWS::DataBrew::Dataset.DatetimeOptions.TimezoneOffset": "CACHED",
  "AWS::DataBrew::Dataset.FilesLimit.Order": "CACHED",
  "AWS::DataBrew::Dataset.FilesLimit.OrderedBy": "CACHED",
  "AWS::DataBrew::Dataset.FilterExpression.Expression": "CACHED",
  "AWS::DataBrew::Dataset.FilterValue.ValueReference": "CACHED",
  "AWS::DataBrew::Dataset.Format": "CACHED",
  "AWS::DataBrew::Dataset.Name": "CACHED",
  "AWS::DataBrew::Dataset.PathParameter.PathParameterName": "CACHED",
  "AWS::DataBrew::Job.AllowedStatistics.Statistics": "CACHED",
  "AWS::DataBrew::Job.ColumnSelector.Name": "CACHED",
  "AWS::DataBrew::Job.ColumnSelector.Regex": "CACHED",
  "AWS::DataBrew::Job.CsvOutputOptions.Delimiter": "CACHED",
  "AWS::DataBrew::Job.DataCatalogOutput.CatalogId": "CACHED",
  "AWS::DataBrew::Job.DataCatalogOutput.DatabaseName": "CACHED",
  "AWS::DataBrew::Job.DataCatalogOutput.TableName": "CACHED",
  "AWS::DataBrew::Job.DatabaseOutput.DatabaseOutputMode": "CACHED",
  "AWS::DataBrew::Job.DatabaseTableOutputOptions.TableName": "CACHED",
  "AWS::DataBrew::Job.DatasetName": "CACHED",
  "AWS::DataBrew::Job.EncryptionKeyArn": "CACHED",
  "AWS::DataBrew::Job.EncryptionMode": "CACHED",
  "AWS::DataBrew::Job.EntityDetectorConfiguration.EntityTypes": "CACHED",
  "AWS::DataBrew::Job.JobSample.Mode": "CACHED",
  "AWS::DataBrew::Job.LogSubscription": "CACHED",
  "AWS::DataBrew::Job.Name": "CACHED",
  "AWS::DataBrew::Job.Output.CompressionFormat": "CACHED",
  "AWS::DataBrew::Job.Output.Format": "CACHED",
  "AWS::DataBrew::Job.Output.MaxOutputFiles": "CACHED",
  "AWS::DataBrew::Job.OutputLocation.BucketOwner": "CACHED",
  "AWS::DataBrew::Job.ProjectName": "CACHED",
  "AWS::DataBrew::Job.S3Location.BucketOwner": "CACHED",
  "AWS::DataBrew::Job.StatisticOverride.Statistic": "CACHED",
  "AWS::DataBrew::Job.StatisticsConfiguration.IncludedStatistics": "CACHED",
  "AWS::DataBrew::Job.Type": "CACHED",
  "AWS::DataBrew::Job.ValidationConfiguration.RulesetArn": "CACHED",
  "AWS::DataBrew::Job.ValidationConfiguration.ValidationMode": "CACHED",
  "AWS::DataBrew::Project.DatasetName": "CACHED",
  "AWS::DataBrew::Project.Name": "CACHED",
  "AWS::DataBrew::Project.RecipeName": "CACHED",
  "AWS::DataBrew::Project.Sample.Type": "CACHED",
  "AWS::DataBrew::Recipe.Name": "CACHED",
  "AWS::DataBrew::Ruleset.ColumnSelector.Name": "CACHED",
  "AWS::DataBrew::Ruleset.ColumnSelector.Regex": "CACHED",
  "AWS::DataBrew::Ruleset.Name": "CACHED",
  "AWS::DataBrew::Ruleset.Rule.CheckExpression": "CACHED",
  "AWS::DataBrew::Ruleset.Rule.Name": "CACHED",
  "AWS::DataBrew::Ruleset.SubstitutionValue.ValueReference": "CACHED",
  "AWS::DataBrew::Ruleset.TargetArn": "CACHED",
  "AWS::DataBrew::Ruleset.Threshold.Type": "CACHED",
  "AWS::DataBrew::Ruleset.Threshold.Unit": "CACHED",
  "AWS::DataBrew::Schedule.CronExpression": "CACHED",
  "AWS::DataBrew::Schedule.JobNames": "CACHED",
  "AWS::DataBrew::Schedule.Name": "CACHED",
  "AWS::Default::Default.EnabledState": "CACHED",
  "AWS::DocDB::DBCluster.BackupRetentionPeriod": "CACHED",
  "AWS::DynamoDB::GlobalTable.AttributeDefinition.AttributeName": "CACHED",
  "AWS::DynamoDB::GlobalTable.GlobalSecondaryIndex.IndexName": "CACHED",
  "AWS::DynamoDB::GlobalTable.KeySchema.AttributeName": "CACHED",
  "AWS::DynamoDB::GlobalTable.LocalSecondaryIndex.IndexName": "CACHED",
  "AWS::DynamoDB::GlobalTable.ReplicaGlobalSecondaryIndexSpecification.IndexName": "CACHED",
  "AWS::DynamoDB::Table.AttributeDefinition.AttributeType": "CACHED",
  "AWS::DynamoDB::Table.BillingMode": "CACHED",
  "AWS::DynamoDB::Table.KeySchema.KeyType": "CACHED",
  "AWS::DynamoDB::Table.Projection.ProjectionType": "CACHED",
  "AWS::DynamoDB::Table.StreamSpecification.StreamViewType": "CACHED",
  "AWS::EC2::EC2Fleet.CapacityRebalance.ReplacementStrategy": "CACHED",
  "AWS::EC2::EC2Fleet.CapacityReservationOptionsRequest.UsageStrategy": "CACHED",
  "AWS::EC2::EC2Fleet.ExcessCapacityTerminationPolicy": "CACHED",
  "AWS::EC2::EC2Fleet.FleetLaunchTemplateSpecificationRequest.LaunchTemplateName": "CACHED",
  "AWS::EC2::EC2Fleet.InstanceRequirementsRequest.AcceleratorManufacturers": "CACHED",
  "AWS::EC2::EC2Fleet.InstanceRequirementsRequest.AcceleratorNames": "CACHED",
  "AWS::EC2::EC2Fleet.InstanceRequirementsRequest.AcceleratorTypes": "CACHED",
  "AWS::EC2::EC2Fleet.InstanceRequirementsRequest.AllowedInstanceTypes": "CACHED",
  "AWS::EC2::EC2Fleet.InstanceRequirementsRequest.BareMetal": "CACHED",
  "AWS::EC2::EC2Fleet.InstanceRequirementsRequest.BurstablePerformance": "CACHED",
  "AWS::EC2::EC2Fleet.InstanceRequirementsRequest.CpuManufacturers": "CACHED",
  "AWS::EC2::EC2Fleet.InstanceRequirementsRequest.ExcludedInstanceTypes": "CACHED",
  "AWS::EC2::EC2Fleet.InstanceRequirementsRequest.InstanceGenerations": "CACHED",
  "AWS::EC2::EC2Fleet.InstanceRequirementsRequest.LocalStorage": "CACHED",
  "AWS::EC2::EC2Fleet.InstanceRequirementsRequest.LocalStorageTypes": "CACHED",
  "AWS::EC2::EC2Fleet.SpotOptionsRequest.AllocationStrategy": "CACHED",
  "AWS::EC2::EC2Fleet.SpotOptionsRequest.InstanceInterruptionBehavior": "CACHED",
  "AWS::EC2::EC2Fleet.TagSpecification.ResourceType": "CACHED",
  "AWS::EC2::EC2Fleet.TargetCapacitySpecificationRequest.DefaultTargetCapacityType": "CACHED",
  "AWS::EC2::EC2Fleet.TargetCapacitySpecificationRequest.TargetCapacityUnitType": "CACHED",
  "AWS::EC2::EC2Fleet.Type": "CACHED",
  "AWS::EC2::EIP.AllocationId": "CACHED",
  "AWS::EC2::FlowLog.LogDestinationType": "CACHED",
  "AWS::EC2::FlowLog.ResourceType": "CACHED",
  "AWS::EC2::FlowLog.TrafficType": "CACHED",
  "AWS::EC2::Instance.Affinity": "CACHED",
  "AWS::EC2::KeyPair.KeyType": "CACHED",
  "AWS::EC2::PrefixList.AddressFamily": "CACHED",
  "AWS::EC2::PrefixList.Entry.Cidr": "CACHED",
  "AWS::EC2::PrefixList.PrefixListName": "CACHED",
  "AWS::EC2::SecurityGroup.Description": "CACHED",
  "AWS::EC2::SecurityGroup.GroupId": "CACHED",
  "AWS::EC2::SecurityGroup.GroupIds": "CACHED",
  "AWS::EC2::SecurityGroup.NameOrGroupId": "CACHED",
  "AWS::EC2::SecurityGroup.NamesOrGroupIds": "CACHED",
  "AWS::EC2::SpotFleet.EbsBlockDevice.VolumeType": "CACHED",
  "AWS::EC2::SpotFleet.FleetLaunchTemplateSpecification.LaunchTemplateName": "CACHED",
  "AWS::EC2::SpotFleet.InstanceRequirementsRequest.AcceleratorManufacturers": "CACHED",
  "AWS::EC2::SpotFleet.InstanceRequirementsRequest.AcceleratorNames": "CACHED",
  "AWS::EC2::SpotFleet.InstanceRequirementsRequest.AcceleratorTypes": "CACHED",
  "AWS::EC2::SpotFleet.InstanceRequirementsRequest.AllowedInstanceTypes": "CACHED",
  "AWS::EC2::SpotFleet.InstanceRequirementsRequest.BareMetal": "CACHED",
  "AWS::EC2::SpotFleet.InstanceRequirementsRequest.BurstablePerformance": "CACHED",
  "AWS::EC2::SpotFleet.InstanceRequirementsRequest.CpuManufacturers": "CACHED",
  "AWS::EC2::SpotFleet.InstanceRequirementsRequest.ExcludedInstanceTypes": "CACHED",
  "AWS::EC2::SpotFleet.InstanceRequirementsRequest.InstanceGenerations": "CACHED",
  "AWS::EC2::SpotFleet.InstanceRequirementsRequest.LocalStorage": "CACHED",
  "AWS::EC2::SpotFleet.InstanceRequirementsRequest.LocalStorageTypes": "CACHED",
  "AWS::EC2::SpotFleet.SpotCapacityRebalance.ReplacementStrategy": "CACHED",
  "AWS::EC2::SpotFleet.SpotFleetRequestConfigData.AllocationStrategy": "CACHED",
  "AWS::EC2::SpotFleet.SpotFleetRequestConfigData.ExcessCapacityTerminationPolicy": "CACHED",
  "AWS::EC2::SpotFleet.SpotFleetRequestConfigData.InstanceInterruptionBehavior": "CACHED",
  "AWS::EC2::SpotFleet.SpotFleetRequestConfigData.TargetCapacityUnitType": "CACHED",
  "AWS::EC2::SpotFleet.SpotFleetRequestConfigData.Type": "CACHED",
  "AWS::EC2::SpotFleet.SpotFleetTagSpecification.ResourceType": "CACHED",
  "AWS::EC2::SpotFleet.SpotPlacement.Tenancy": "CACHED",
  "AWS::EC2::VPC.Id": "CACHED",
  "AWS::ECR::Repository.EncryptionConfiguration.EncryptionType": "CACHED",
  "AWS::ECR::Repository.EncryptionConfiguration.KmsKey": "CACHED",
  "AWS::ECR::Repository.ImageTagMutability": "CACHED",
  "AWS::ECR::Repository.LifecyclePolicy.LifecyclePolicyText": "CACHED",
  "AWS::ECR::Repository.LifecyclePolicy.RegistryId": "CACHED",
  "AWS::ECR::Repository.RepositoryName": "CACHED",
  "AWS::ECS::CapacityProvider.AutoScalingGroupProvider.ManagedTerminationProtection": "CACHED",
  "AWS::ECS::CapacityProvider.ManagedScaling.Status": "CACHED",
  "AWS::ECS::ClusterCapacityProviderAssociations.Cluster": "CACHED",
  "AWS::ECS::Service.AwsVpcConfiguration.AssignPublicIp": "CACHED",
  "AWS::ECS::Service.DeploymentController.Type": "CACHED",
  "AWS::ECS::Service.LaunchType": "CACHED",
  "AWS::ECS::Service.PlacementConstraint.Type": "CACHED",
  "AWS::ECS::Service.PlacementStrategy.Type": "CACHED",
  "AWS::ECS::Service.PropagateTags": "CACHED",
  "AWS::ECS::Service.SchedulingStrategy": "CACHED",
  "AWS::ECS::TaskDefinition.AuthorizationConfig.IAM": "CACHED",
  "AWS::ECS::TaskDefinition.EFSVolumeConfiguration.TransitEncryption": "CACHED",
  "AWS::ECS::TaskSet.AwsVpcConfiguration.AssignPublicIp": "CACHED",
  "AWS::ECS::TaskSet.LaunchType": "CACHED",
  "AWS::ECS::TaskSet.Scale.Unit": "CACHED",
  "AWS::EFS::AccessPoint.AccessPointTag.Key": "CACHED",
  "AWS::EFS::AccessPoint.AccessPointTag.Value": "CACHED",
  "AWS::EFS::AccessPoint.CreationInfo.Permissions": "CACHED",
  "AWS::EFS::AccessPoint.RootDirectory.Path": "CACHED",
  "AWS::EKS::Addon.ResolveConflicts": "CACHED",
  "AWS::EKS::Cluster.KubernetesNetworkConfig.IpFamily": "CACHED",
  "AWS::EKS::Cluster.LoggingTypeConfig.Type": "CACHED",
  "AWS::EKS::Cluster.Name": "CACHED",
  "AWS::EKS::Cluster.Version": "CACHED",
  "AWS::EKS::FargateProfile.Label.Key": "CACHED",
  "AWS::EKS::FargateProfile.Label.Value": "CACHED",
  "AWS::EKS::IdentityProviderConfig.RequiredClaim.Key": "CACHED",
  "AWS::EKS::IdentityProviderConfig.RequiredClaim.Value": "CACHED",
  "AWS::EKS::IdentityProviderConfig.Type": "CACHED",
  "AWS::EKS::Nodegroup.UpdateConfig.MaxUnavailablePercentage": "CACHED",
  "AWS::EMR::Studio.AuthMode": "CACHED",
  "AWS::EMR::Studio.DefaultS3Location": "CACHED",
  "AWS::EMR::Studio.EngineSecurityGroupId": "CACHED",
  "AWS::EMR::Studio.IdpAuthUrl": "CACHED",
  "AWS::EMR::Studio.Name": "CACHED",
  "AWS::EMR::Studio.ServiceRole": "CACHED",
  "AWS::EMR::Studio.SubnetIds": "CACHED",
  "AWS::EMR::Studio.UserRole": "CACHED",
  "AWS::EMR::Studio.VpcId": "CACHED",
  "AWS::EMR::Studio.WorkspaceSecurityGroupId": "CACHED",
  "AWS::ElastiCache::GlobalReplicationGroup.GlobalReplicationGroupMember.Role": "CACHED",
  "AWS::ElastiCache::ReplicationGroup.NumCacheClusters": "CACHED",
  "AWS::ElastiCache::ReplicationGroup.ReplicasPerNodeGroup": "CACHED",
  "AWS::ElastiCache::User.Engine": "CACHED",
  "AWS::ElastiCache::User.UserId": "CACHED",
  "AWS::ElastiCache::UserGroup.Engine": "CACHED",
  "AWS::ElastiCache::UserGroup.UserGroupId": "CACHED",
  "AWS::ElasticLoadBalancingV2::ListenerRule.Priority": "CACHED",
  "AWS::ElasticLoadBalancingV2::TargetGroup.HealthCheckIntervalSeconds": "CACHED",
  "AWS::ElasticLoadBalancingV2::TargetGroup.UnhealthyThresholdCount": "CACHED",
  "AWS::Events::EventBusPolicy.Action": "CACHED",
  "AWS::Events::EventBusPolicy.Condition.Key": "CACHED",
  "AWS::Events::EventBusPolicy.Condition.Type": "CACHED",
  "AWS::FSx::DataRepositoryAssociation.AutoExportPolicy.Events": "CACHED",
  "AWS::FSx::DataRepositoryAssociation.AutoImportPolicy.Events": "CACHED",
  "AWS::FSx::FileSystem.StorageCapacity": "CACHED",
  "AWS::GameLift::Alias.Description": "CACHED",
  "AWS::GameLift::Alias.Name": "CACHED",
  "AWS::GameLift::Alias.RoutingStrategy.FleetId": "CACHED",
  "AWS::GameLift::Alias.RoutingStrategy.Type": "CACHED",
  "AWS::GameLift::Fleet.BuildId": "CACHED",
  "AWS::GameLift::Fleet.CertificateConfiguration.CertificateType": "CACHED",
  "AWS::GameLift::Fleet.Description": "CACHED",
  "AWS::GameLift::Fleet.EC2InstanceType": {
   "AllowedPatternRegex": "^.*..*$",
   "AllowedValues": [
    "c4.2xlarge",
    "c4.4xlarge",
    "c4.8xlarge",
    "c4.large",
    "c4.xlarge",
    "c5.12xlarge",
    "c5.18xlarge",
    "c5.24xlarge",
    "c5.2xlarge",
    "c5.4xlarge",
    "c5.9xlarge",
    "c5.large",
    "c5.xlarge",
    "c5a.12xlarge",
    "c5a.16xlarge",
    "c5a.24xlarge",
    "c5a.2xlarge",
    "c5a.4xlarge",
    "c5a.8xlarge",
    "c5a.large",
    "c5a.xlarge",
    "m4.10xlarge",
    "m4.2xlarge",
    "m4.4xlarge",
    "m4.large",
    "m4.xlarge",
    "m5.12xlarge",
    "m5.16xlarge",
    "m5.24xlarge",
    "m5.2xlarge",
    "m5.4xlarge",
    "m5.8xlarge",
    "m5.large",
    "m5.xlarge",
    "m5a.12xlarge",
    "m5a.16xlarge",
    "m5a.24xlarge",
    "m5a.2xlarge",
    "m5a.4xlarge",
    "m5a.8xlarge",
    "m5a.large",
    "m5a.xlarge",
    "r4.16xlarge",
    "r4.2xlarge",
    "r4.4xlarge",
    "r4.8xlarge",
    "r4.large",
    "r4.xlarge",
    "r5.12xlarge",
    "r5.16xlarge",
    "r5.24xlarge",
    "r5.2xlarge",
    "r5.4xlarge",
    "r5.8xlarge",
    "r5.large",
    "r5.xlarge",
    "r5a.12xlarge",
    "r5a.16xlarge",
    "r5a.24xlarge",
    "r5a.2xlarge",
    "r5a.4xlarge",
    "r5a.8xlarge",
    "r5a.large",
    "r5a.xlarge"
   ]
  },
  "AWS::GameLift::Fleet.FleetType": "CACHED",
  "AWS::GameLift::Fleet.InstanceRoleARN": "CACHED",
  "AWS::GameLift::Fleet.IpPermission.FromPort": "CACHED",
  "AWS::GameLift::Fleet.IpPermission.IpRange": "CACHED",
  "AWS::GameLift::Fleet.IpPermission.Protocol": "CACHED",
  "AWS::GameLift::Fleet.IpPermission.ToPort": "CACHED",
  "AWS::GameLift::Fleet.Name": "CACHED",
  "AWS::GameLift::Fleet.NewGameSessionProtectionPolicy": "CACHED",
  "AWS::GameLift::Fleet.PeerVpcAwsAccountId": "CACHED",
  "AWS::GameLift::Fleet.PeerVpcId": "CACHED",
  "AWS::GameLift::Fleet.RuntimeConfiguration.GameSessionActivationTimeoutSeconds": "CACHED",
  "AWS::GameLift::Fleet.RuntimeConfiguration.MaxConcurrentGameSessionActivations": "CACHED",
  "AWS::GameLift::Fleet.ScriptId": "CACHED",
  "AWS::GameLift::Fleet.ServerLaunchParameters": {
   "StringMax": 1024,
   "StringMin": 1
  },
  "AWS::GameLift::Fleet.ServerLaunchPath": {
   "StringMax": 1024,
   "StringMin": 1
  },
  "AWS::GameLift::Fleet.ServerProcess.LaunchPath": "CACHED",
  "AWS::GameLift::Fleet.ServerProcess.Parameters": "CACHED",
  "AWS::GameLift::GameServerGroup.BalancingStrategy": "CACHED",
  "AWS::GameLift::GameServerGroup.DeleteOption": "CACHED",
  "AWS::GameLift::GameServerGroup.GameServerGroupName": "CACHED",
  "AWS::GameLift::GameServerGroup.GameServerProtectionPolicy": "CACHED",
  "AWS::GameLift::GameServerGroup.InstanceDefinition.WeightedCapacity": "CACHED",
  "AWS::GameLift::GameServerGroup.RoleArn": "CACHED",
  "AWS::GameLift::GameServerGroup.VpcSubnets": "CACHED",
  "AWS::Glue::Connection.ConnectionInput.ConnectionType": "CACHED",
  "AWS::Glue::Crawler.SchemaChangePolicy.DeleteBehavior": "CACHED",
  "AWS::Glue::Crawler.SchemaChangePolicy.UpdateBehavior": "CACHED",
  "AWS::Glue::Job.NumberOfWorkers": "CACHED",
  "AWS::Glue::MLTransform.MaxCapacity": "CACHED",
  "AWS::Glue::Registry.Name": "CACHED",
  "AWS::Glue::Schema.Compatibility": "CACHED",
  "AWS::Glue::Schema.DataFormat": "CACHED",
  "AWS::Glue::Schema.Name": "CACHED",
  "AWS::Glue::Schema.Registry.Arn": "CACHED",
  "AWS::Glue::Schema.Registry.Name": "CACHED",
  "AWS::Glue::Schema.SchemaDefinition": "CACHED",
  "AWS::Glue::Schema.SchemaVersion.VersionNumber": "CACHED",
  "AWS::Glue::SchemaVersion.Schema.RegistryName": "CACHED",
  "AWS::Glue::SchemaVersion.Schema.SchemaArn": "CACHED",
  "AWS::Glue::SchemaVersion.Schema.SchemaName": "CACHED",
  "AWS::Glue::SchemaVersion.SchemaDefinition": "CACHED",
  "AWS::Glue::SchemaVersionMetadata.Key": "CACHED",
  "AWS::Glue::SchemaVersionMetadata.SchemaVersionId": "CACHED",
  "AWS::Glue::SchemaVersionMetadata.Value": "CACHED",
  "AWS::Glue::Table.TableInput.TableType": "CACHED",
  "AWS::Glue::Trigger.Condition.LogicalOperator": "CACHED",
  "AWS::Glue::Trigger.Condition.State": "CACHED",
  "AWS::Glue::Trigger.Predicate.Logical": "CACHED",
  "AWS::Glue::Trigger.Type": "CACHED",
  "AWS::GuardDuty::Detector.FindingPublishingFrequency": "CACHED",
  "AWS::GuardDuty::Filter.Action": "CACHED",
  "AWS::GuardDuty::IPSet.Format": "CACHED",
  "AWS::GuardDuty::Member.Status": "CACHED",
  "AWS::GuardDuty::ThreatIntelSet.Format": "CACHED",
  "AWS::IAM::AccessKey.Active": "CACHED",
  "AWS::IAM::AssumeRole.Document": "CACHED",
  "AWS::IAM::Group.Name": "CACHED",
  "AWS::IAM::Group.Names": "CACHED",
  "AWS::IAM::InstanceProfile.Arn": "CACHED",
  "AWS::IAM::InstanceProfile.Name": "CACHED",
  "AWS::IAM::InstanceProfile.NameOrArn": "CACHED",
  "AWS::IAM::InstanceProfile.Role": "CACHED",
  "AWS::IAM::InstanceProfile.Roles": "CACHED",
  "AWS::IAM::ManagedPolicy.Arn": "CACHED",
  "AWS::IAM::ManagedPolicy.Arns": "CACHED",
  "AWS::IAM::ManagedPolicy.PolicyDocument": "CACHED",
  "AWS::IAM::OIDCProvider.ClientIdList": "CACHED",
  "AWS::IAM::OIDCProvider.ThumbprintList": "CACHED",
  "AWS::IAM::OIDCProvider.Url": "CACHED",
  "AWS::IAM::Path.Path": "CACHED",
  "AWS::IAM::Policy.PolicyName": "CACHED",
  "AWS::IAM::Role.Arn": "CACHED",
  "AWS::IAM::Role.MaxSessionDuration": "CACHED",
  "AWS::IAM::Role.Name": "CACHED",
  "AWS::IAM::Role.NameOrArn": "CACHED",
  "AWS::IAM::Role.Policy.PolicyName": "CACHED",
  "AWS::IAM::SAMLProvider.Name": "CACHED",
  "AWS::IAM::SAMLProvider.SamlMetadataDocument": "CACHED",
  "AWS::IAM::ServerCertificate.CertificateBody": "CACHED",
  "AWS::IAM::ServerCertificate.CertificateChain": "CACHED",
  "AWS::IAM::ServerCertificate.Path": "CACHED",
  "AWS::IAM::ServerCertificate.PrivateKey": "CACHED",
  "AWS::IAM::ServerCertificate.ServerCertificateName": "CACHED",
  "AWS::IAM::User.Arn": "CACHED",
  "AWS::IAM::VirtualMFADevice.Path": "CACHED",
  "AWS::IAM::VirtualMFADevice.VirtualMfaDeviceName": "CACHED",
  "AWS::IdentityStore::GroupMembership.MemberId.UserId": "CACHED",
  "AWS::ImageBuilder::Component.Data": "CACHED",
  "AWS::ImageBuilder::Component.Platform": "CACHED",
  "AWS::ImageBuilder::ContainerRecipe.ContainerType": "CACHED",
  "AWS::ImageBuilder::ContainerRecipe.EbsInstanceBlockDeviceSpecification.VolumeType": "CACHED",
  "AWS::ImageBuilder::ContainerRecipe.PlatformOverride": "CACHED",
  "AWS::ImageBuilder::ContainerRecipe.TargetContainerRepository.Service": "CACHED",
  "AWS::ImageBuilder::DistributionConfiguration.TargetContainerRepository.Service": "CACHED",
  "AWS::ImageBuilder::Image.ImageTestsConfiguration.TimeoutMinutes": "CACHED",
  "AWS::ImageBuilder::ImagePipeline.ImageTestsConfiguration.TimeoutMinutes": "CACHED",
  "AWS::ImageBuilder::ImagePipeline.Schedule.PipelineExecutionStartCondition": "CACHED",
  "AWS::ImageBuilder::ImagePipeline.Status": "CACHED",
  "AWS::ImageBuilder::ImageRecipe.EbsInstanceBlockDeviceSpecification.VolumeType": "CACHED",
  "AWS::ImageBuilder::InfrastructureConfiguration.InstanceMetadataOptions.HttpTokens": "CACHED",
  "AWS::Inspector::AssessmentTemplate.DurationInSeconds": "CACHED",
  "AWS::IoT::AccountAuditConfiguration.AccountId": "CACHED",
  "AWS::IoT::AccountAuditConfiguration.AuditNotificationTarget.RoleArn": "CACHED",
  "AWS::IoT::AccountAuditConfiguration.RoleArn": "CACHED",
  "AWS::IoT::Authorizer.AuthorizerName": "CACHED",
  "AWS::IoT::Authorizer.Status": "CACHED",
  "AWS::IoT::CACertificate.AutoRegistrationStatus": "CACHED",
  "AWS::IoT::CACertificate.CACertificatePem": "CACHED",
  "AWS::IoT::CACertificate.CertificateMode": "CACHED",
  "AWS::IoT::CACertificate.RegistrationConfig.RoleArn": "CACHED",
  "AWS::IoT::CACertificate.RegistrationConfig.TemplateBody": "CACHED",
  "AWS::IoT::CACertificate.RegistrationConfig.TemplateName": "CACHED",
  "AWS::IoT::CACertificate.Status": "CACHED",
  "AWS::IoT::CACertificate.VerificationCertificatePem": "CACHED",
  "AWS::IoT::Certificate.CACertificatePem": "CACHED",
  "AWS::IoT::Certificate.CertificateMode": "CACHED",
  "AWS::IoT::Certificate.CertificatePem": "CACHED",
  "AWS::IoT::Certificate.Status": "CACHED",
  "AWS::IoT::CustomMetric.MetricName": "CACHED",
  "AWS::IoT::CustomMetric.MetricType": "CACHED",
  "AWS::IoT::Dimension.Name": "CACHED",
  "AWS::IoT::Dimension.StringValues": "CACHED",
  "AWS::IoT::Dimension.Type": "CACHED",
  "AWS::IoT::DomainConfiguration.AuthorizerConfig.DefaultAuthorizerName": "CACHED",
  "AWS::IoT::DomainConfiguration.DomainConfigurationName": "CACHED",
  "AWS::IoT::DomainConfiguration.DomainConfigurationStatus": "CACHED",
  "AWS::IoT::DomainConfiguration.DomainName": "CACHED",
  "AWS::IoT::DomainConfiguration.ServerCertificateArns": "CACHED",
  "AWS::IoT::DomainConfiguration.ServerCertificateSummary.ServerCertificateArn": "CACHED",
  "AWS::IoT::DomainConfiguration.ServerCertificateSummary.ServerCertificateStatus": "CACHED",
  "AWS::IoT::DomainConfiguration.ServiceType": "CACHED",
  "AWS::IoT::DomainConfiguration.ValidationCertificateArn": "CACHED",
  "AWS::IoT::JobTemplate.DocumentSource": "CACHED",
  "AWS::IoT::JobTemplate.JobTemplateId": "CACHED",
  "AWS::IoT::Logging.AccountId": "CACHED",
  "AWS::IoT::Logging.DefaultLogLevel": "CACHED",
  "AWS::IoT::Logging.RoleArn": "CACHED",
  "AWS::IoT::MitigationAction.ActionName": "CACHED",
  "AWS::IoT::MitigationAction.AddThingsToThingGroupParams.ThingGroupNames": "CACHED",
  "AWS::IoT::MitigationAction.EnableIoTLoggingParams.LogLevel": "CACHED",
  "AWS::IoT::MitigationAction.EnableIoTLoggingParams.RoleArnForLogging": "CACHED",
  "AWS::IoT::MitigationAction.PublishFindingToSnsParams.TopicArn": "CACHED",
  "AWS::IoT::MitigationAction.ReplaceDefaultPolicyVersionParams.TemplateName": "CACHED",
  "AWS::IoT::MitigationAction.UpdateCACertificateParams.Action": "CACHED",
  "AWS::IoT::MitigationAction.UpdateDeviceCertificateParams.Action": "CACHED",
  "AWS::IoT::ProvisioningTemplate.TemplateName": "CACHED",
  "AWS::IoT::ProvisioningTemplate.TemplateType": "CACHED",
  "AWS::IoT::ResourceSpecificLogging.LogLevel": "CACHED",
  "AWS::IoT::ResourceSpecificLogging.TargetName": "CACHED",
  "AWS::IoT::ResourceSpecificLogging.TargetType": "CACHED",
  "AWS::IoT::RoleAlias.CredentialDurationSeconds": "CACHED",
  "AWS::IoT::RoleAlias.RoleAlias": "CACHED",
  "AWS::IoT::RoleAlias.RoleArn": "CACHED",
  "AWS::IoT::ScheduledAudit.DayOfMonth": "CACHED",
  "AWS::IoT::ScheduledAudit.DayOfWeek": "CACHED",
  "AWS::IoT::ScheduledAudit.Frequency": "CACHED",
  "AWS::IoT::ScheduledAudit.ScheduledAuditName": "CACHED",
  "AWS::IoT::SecurityProfile.Behavior.Metric": "CACHED",
  "AWS::IoT::SecurityProfile.Behavior.Name": "CACHED",
  "AWS::IoT::SecurityProfile.BehaviorCriteria.ComparisonOperator": "CACHED",
  "AWS::IoT::SecurityProfile.BehaviorCriteria.ConsecutiveDatapointsToAlarm": "CACHED",
  "AWS::IoT::SecurityProfile.BehaviorCriteria.ConsecutiveDatapointsToClear": "CACHED",
  "AWS::IoT::SecurityProfile.MachineLearningDetectionConfig.ConfidenceLevel": "CACHED",
  "AWS::IoT::SecurityProfile.MetricDimension.DimensionName": "CACHED",
  "AWS::IoT::SecurityProfile.MetricDimension.Operator": "CACHED",
  "AWS::IoT::SecurityProfile.MetricToRetain.Metric": "CACHED",
  "AWS::IoT::SecurityProfile.SecurityProfileName": "CACHED",
  "AWS::IoT::SecurityProfile.StatisticalThreshold.Statistic": "CACHED",
  "AWS::IoT::TopicRule.S3Action.CannedAcl": "CACHED",
  "AWS::IoT::TopicRuleDestination.Status": "CACHED",
  "AWS::KMS::Alias.AliasName": "CACHED",
  "AWS::KMS::Alias.TargetKeyId": "CACHED",
  "AWS::KMS::Key.KeySpec": "CACHED",
  "AWS::KMS::Key.KeyUsage": "CACHED",
  "AWS::KMS::Key.PendingWindowInDays": "CACHED",
  "AWS::Kinesis::Stream.Name": "CACHED",
  "AWS::Kinesis::Stream.RetentionPeriodHours": "CACHED",
  "AWS::Kinesis::Stream.ShardCount": "CACHED",
  "AWS::Kinesis::Stream.StreamEncryption.EncryptionType": "CACHED",
  "AWS::Kinesis::Stream.StreamEncryption.KeyId": "CACHED",
  "AWS::Kinesis::Stream.StreamModeDetails.StreamMode": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.ApplicationCodeConfiguration.CodeContentType": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.ApplicationMaintenanceConfiguration.ApplicationMaintenanceWindowStartTime": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.ApplicationMode": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.ApplicationName": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.ApplicationRestoreConfiguration.ApplicationRestoreType": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.ApplicationRestoreConfiguration.SnapshotName": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.CSVMappingParameters.RecordColumnDelimiter": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.CSVMappingParameters.RecordRowDelimiter": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.CheckpointConfiguration.CheckpointInterval": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.CheckpointConfiguration.ConfigurationType": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.CodeContent.TextContent": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.CustomArtifactConfiguration.ArtifactType": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.GlueDataCatalogConfiguration.DatabaseARN": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.Input.NamePrefix": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.InputLambdaProcessor.ResourceARN": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.InputParallelism.Count": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.InputSchema.RecordEncoding": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.JSONMappingParameters.RecordRowPath": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.KinesisFirehoseInput.ResourceARN": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.KinesisStreamsInput.ResourceARN": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.MavenReference.ArtifactId": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.MavenReference.GroupId": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.MavenReference.Version": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.MonitoringConfiguration.ConfigurationType": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.MonitoringConfiguration.LogLevel": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.MonitoringConfiguration.MetricsLevel": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.ParallelismConfiguration.ConfigurationType": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.PropertyGroup.PropertyGroupId": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.RecordColumn.Mapping": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.RecordColumn.Name": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.RecordColumn.SqlType": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.RecordFormat.RecordFormatType": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.RuntimeEnvironment": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.S3ContentBaseLocation.BasePath": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.S3ContentBaseLocation.BucketARN": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.S3ContentLocation.BucketARN": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.S3ContentLocation.FileKey": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.S3ContentLocation.ObjectVersion": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.ServiceExecutionRole": "CACHED",
  "AWS::KinesisAnalyticsV2::Application.ZeppelinMonitoringConfiguration.LogLevel": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.AmazonopensearchserviceDestinationConfiguration.ClusterEndpoint": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.AmazonopensearchserviceDestinationConfiguration.DomainARN": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.AmazonopensearchserviceDestinationConfiguration.IndexName": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.AmazonopensearchserviceDestinationConfiguration.IndexRotationPeriod": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.AmazonopensearchserviceDestinationConfiguration.RoleARN": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.AmazonopensearchserviceDestinationConfiguration.S3BackupMode": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.CopyCommand.DataTableName": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.DeliveryStreamEncryptionConfigurationInput.KeyARN": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.DeliveryStreamEncryptionConfigurationInput.KeyType": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.DeliveryStreamName": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.DeliveryStreamType": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.ElasticsearchDestinationConfiguration.ClusterEndpoint": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.ElasticsearchDestinationConfiguration.DomainARN": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.ElasticsearchDestinationConfiguration.IndexName": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.ElasticsearchDestinationConfiguration.IndexRotationPeriod": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.ElasticsearchDestinationConfiguration.RoleARN": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.ElasticsearchDestinationConfiguration.S3BackupMode": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.EncryptionConfiguration.NoEncryptionConfig": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.ExtendedS3DestinationConfiguration.BucketARN": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.ExtendedS3DestinationConfiguration.CompressionFormat": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.ExtendedS3DestinationConfiguration.RoleARN": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.ExtendedS3DestinationConfiguration.S3BackupMode": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.HttpEndpointCommonAttribute.AttributeName": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.HttpEndpointConfiguration.Name": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.HttpEndpointConfiguration.Url": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.HttpEndpointDestinationConfiguration.RoleARN": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.HttpEndpointRequestConfiguration.ContentEncoding": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.KinesisStreamSourceConfiguration.KinesisStreamARN": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.KinesisStreamSourceConfiguration.RoleARN": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.Processor.Type": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.RedshiftDestinationConfiguration.ClusterJDBCURL": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.RedshiftDestinationConfiguration.Password": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.RedshiftDestinationConfiguration.RoleARN": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.RedshiftDestinationConfiguration.S3BackupMode": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.RedshiftDestinationConfiguration.Username": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.S3DestinationConfiguration.BucketARN": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.S3DestinationConfiguration.CompressionFormat": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.S3DestinationConfiguration.RoleARN": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.SchemaConfiguration.RoleARN": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.SplunkDestinationConfiguration.HECAcknowledgmentTimeoutInSeconds": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.SplunkDestinationConfiguration.HECEndpointType": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.VpcConfiguration.RoleARN": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.VpcConfiguration.SecurityGroupIds": "CACHED",
  "AWS::KinesisFirehose::DeliveryStream.VpcConfiguration.SubnetIds": "CACHED",
  "AWS::LakeFormation::DataCellsFilter.ColumnNames": "CACHED",
  "AWS::LakeFormation::DataCellsFilter.ColumnWildcard.ExcludedColumnNames": "CACHED",
  "AWS::LakeFormation::DataCellsFilter.DatabaseName": "CACHED",
  "AWS::LakeFormation::DataCellsFilter.Name": "CACHED",
  "AWS::LakeFormation::DataCellsFilter.TableCatalogId": "CACHED",
  "AWS::LakeFormation::DataCellsFilter.TableName": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.Catalog": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.ColumnWildcard.ExcludedColumnNames": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.DataCellsFilterResource.DatabaseName": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.DataCellsFilterResource.Name": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.DataCellsFilterResource.TableCatalogId": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.DataCellsFilterResource.TableName": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.DataLakePrincipal.DataLakePrincipalIdentifier": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.DataLocationResource.CatalogId": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.DatabaseResource.CatalogId": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.DatabaseResource.Name": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.LFTag.TagKey": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.LFTagKeyResource.CatalogId": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.LFTagKeyResource.TagKey": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.LFTagPolicyResource.CatalogId": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.LFTagPolicyResource.ResourceType": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.Permissions": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.PermissionsWithGrantOption": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.TableResource.CatalogId": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.TableResource.DatabaseName": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.TableResource.Name": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.TableWithColumnsResource.CatalogId": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.TableWithColumnsResource.ColumnNames": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.TableWithColumnsResource.DatabaseName": "CACHED",
  "AWS::LakeFormation::PrincipalPermissions.TableWithColumnsResource.Name": "CACHED",
  "AWS::LakeFormation::Tag.CatalogId": "CACHED",
  "AWS::LakeFormation::Tag.TagKey": "CACHED",
  "AWS::LakeFormation::Tag.TagValues": "CACHED",
  "AWS::LakeFormation::TagAssociation.DatabaseResource.CatalogId": "CACHED",
  "AWS::LakeFormation::TagAssociation.DatabaseResource.Name": "CACHED",
  "AWS::LakeFormation::TagAssociation.LFTagPair.CatalogId": "CACHED",
  "AWS::LakeFormation::TagAssociation.LFTagPair.TagKey": "CACHED",
  "AWS::LakeFormation::TagAssociation.TableResource.CatalogId": "CACHED",
  "AWS::LakeFormation::TagAssociation.TableResource.DatabaseName": "CACHED",
  "AWS::LakeFormation::TagAssociation.TableResource.Name": "CACHED",
  "AWS::LakeFormation::TagAssociation.TableWithColumnsResource.CatalogId": "CACHED",
  "AWS::LakeFormation::TagAssociation.TableWithColumnsResource.ColumnNames": "CACHED",
  "AWS::LakeFormation::TagAssociation.TableWithColumnsResource.DatabaseName": "CACHED",
  "AWS::LakeFormation::TagAssociation.TableWithColumnsResource.Name": "CACHED",
  "AWS::Lambda::EventSourceMapping.AmazonManagedKafkaEventSourceConfig.ConsumerGroupId": "CACHED",
  "AWS::Lambda::EventSourceMapping.BatchSize": "CACHED",
  "AWS::Lambda::EventSourceMapping.Endpoints.KafkaBootstrapServers": "CACHED",
  "AWS::Lambda::EventSourceMapping.EventSourceArn": "CACHED",
  "AWS::Lambda::EventSourceMapping.Filter.Pattern": "CACHED",
  "AWS::Lambda::EventSourceMapping.FunctionName": "CACHED",
  "AWS::Lambda::EventSourceMapping.FunctionResponseTypes": "CACHED",
  "AWS::Lambda::EventSourceMapping.MaximumBatchingWindowInSeconds": "CACHED",
  "AWS::Lambda::EventSourceMapping.MaximumRecordAgeInSeconds": "CACHED",
  "AWS::Lambda::EventSourceMapping.MaximumRetryAttempts": "CACHED",
  "AWS::Lambda::EventSourceMapping.OnFailure.Destination": "CACHED",
  "AWS::Lambda::EventSourceMapping.ParallelizationFactor": "CACHED",
  "AWS::Lambda::EventSourceMapping.Queues": "CACHED",
  "AWS::Lambda::EventSourceMapping.SelfManagedKafkaEventSourceConfig.ConsumerGroupId": "CACHED",
  "AWS::Lambda::EventSourceMapping.SourceAccessConfiguration.Type": "CACHED",
  "AWS::Lambda::EventSourceMapping.SourceAccessConfiguration.URI": "CACHED",
  "AWS::Lambda::EventSourceMapping.StartingPosition": "CACHED",
  "AWS::Lambda::EventSourceMapping.Topics": "CACHED",
  "AWS::Lambda::Function.Architectures": "CACHED",
  "AWS::Lambda::Function.Code.S3Bucket": "CACHED",
  "AWS::Lambda::Function.Code.S3Key": "CACHED",
  "AWS::Lambda::Function.Code.S3ObjectVersion": "CACHED",
  "AWS::Lambda::Function.CodeSigningConfigArn": "CACHED",
  "AWS::Lambda::Function.DeadLetterConfig.TargetArn": "CACHED",
  "AWS::Lambda::Function.Description": "CACHED",
  "AWS::Lambda::Function.EphemeralStorage.Size": "CACHED",
  "AWS::Lambda::Function.FileSystemConfig.Arn": "CACHED",
  "AWS::Lambda::Function.FileSystemConfig.LocalMountPath": "CACHED",
  "AWS::Lambda::Function.FunctionName": "CACHED",
  "AWS::Lambda::Function.Handler": "CACHED",
  "AWS::Lambda::Function.KmsKeyArn": "CACHED",
  "AWS::Lambda::Function.MemorySize": "CACHED",
  "AWS::Lambda::Function.PackageType": "CACHED",
  "AWS::Lambda::Function.Role": "CACHED",
  "AWS::Lambda::Function.Timeout": "CACHED",
  "AWS::Lambda::Function.TracingConfig.Mode": "CACHED",
  "AWS::Lambda::LayerVersion.LayerName": "CACHED",
  "AWS::Logs::Destination.DestinationName": "CACHED",
  "AWS::Logs::LogGroup.KmsKeyId": "CACHED",
  "AWS::Logs::LogGroup.LogGroupName": "CACHED",
  "AWS::Logs::LogGroup.Retention": "CACHED",
  "AWS::Logs::MetricFilter.LogGroupName": "CACHED",
  "AWS::Logs::MetricFilter.MetricTransformation.MetricName": "CACHED",
  "AWS::Logs::MetricFilter.MetricTransformation.MetricNamespace": "CACHED",
  "AWS::Logs::MetricFilter.MetricTransformation.MetricValue": "CACHED",
  "AWS::M2::Application.Definition.Content": "CACHED",
  "AWS::M2::Application.Definition.S3Location": "CACHED",
  "AWS::MSK::Cluster.BrokerNodeGroupInfo.BrokerAZDistribution": "CACHED",
  "AWS::MSK::Cluster.BrokerNodeGroupInfo.InstanceType": "CACHED",
  "AWS::MSK::Cluster.ClusterName": "CACHED",
  "AWS::MSK::Cluster.EBSStorageInfo.VolumeSize": "CACHED",
  "AWS::MSK::Cluster.EncryptionInTransit.ClientBroker": "CACHED",
  "AWS::MSK::Cluster.EnhancedMonitoring": "CACHED",
  "AWS::MSK::Cluster.KafkaVersion": "CACHED",
  "AWS::MSK::Cluster.PublicAccess.Type": "CACHED",
  "AWS::MSK::Cluster.StorageMode": "CACHED",
  "AWS::Organizations::Account.AccountName": "CACHED",
  "AWS::Organizations::Account.Email": "CACHED",
  "AWS::Organizations::Account.ParentIds": "CACHED",
  "AWS::Organizations::Account.RoleName": "CACHED",
  "AWS::Organizations::OrganizationalUnit.Name": "CACHED",
  "AWS::Organizations::OrganizationalUnit.ParentId": "CACHED",
  "AWS::RDS::DBCluster.BackupRetentionPeriod": "CACHED",
  "AWS::RDS::DBCluster.DBClusterIdentifier": "CACHED",
  "AWS::RDS::DBCluster.GlobalClusterIdentifier": "CACHED",
  "AWS::RDS::DBCluster.MasterUsername": "CACHED",
  "AWS::RDS::DBCluster.ServerlessV2ScalingConfiguration.MaxCapacity": "CACHED",
  "AWS::RDS::DBCluster.ServerlessV2ScalingConfiguration.MinCapacity": "CACHED",
  "AWS::RDS::DBClusterParameterGroup.DBClusterParameterGroupName": "CACHED",
  "AWS::RDS::DBInstance.AllocatedStorage": "CACHED",
  "AWS::RDS::DBInstance.BackupRetentionPeriod": "CACHED",
  "AWS::RDS::DBInstance.DBInstanceClass": {
   "AllowedValues": [
    "db.m4.10xlarge",
    "db.m4.16xlarge",
    "db.m4.2xlarge",
    "db.m4.4xlarge",
    "db.m4.large",
    "db.m4.xlarge",
    "db.m5.12xlarge",
    "db.m5.16xlarge",
    "db.m5.24xlarge",
    "db.m5.2xlarge",
    "db.m5.4xlarge",
    "db.m5.8xlarge",
    "db.m5.large",
    "db.m5.xlarge",
    "db.m6g.12xlarge",
    "db.m6g.16xlarge",
    "db.m6g.2xlarge",
    "db.m6g.4xlarge",
    "db.m6g.8xlarge",
    "db.m6g.large",
    "db.m6g.xlarge",
    "db.r4.16xlarge",
    "db.r4.2xlarge",
    "db.r4.4xlarge",
    "db.r4.8xlarge",
    "db.r4.large",
    "db.r4.xlarge",
    "db.r5.12xlarge",
    "db.r5.12xlarge.tpc2.mem2x",
    "db.r5.16xlarge",
    "db.r5.24xlarge",
    "db.r5.2xlarge",
    "db.r5.2xlarge.tpc1.mem2x",
    "db.r5.2xlarge.tpc2.mem4x",
    "db.r5.2xlarge.tpc2.mem8x",
    "db.r5.4xlarge",
    "db.r5.4xlarge.tpc2.mem2x",
    "db.r5.4xlarge.tpc2.mem3x",
    "db.r5.4xlarge.tpc2.mem4x",
    "db.r5.6xlarge.tpc2.mem4x",
    "db.r5.8xlarge",
    "db.r5.8xlarge.tpc2.mem3x",
    "db.r5.large",
    "db.r5.large.tpc1.mem2x",
    "db.r5.xlarge",
    "db.r5.xlarge.tpc2.mem2x",
    "db.r5.xlarge.tpc2.mem4x",
    "db.r6g.12xlarge",
    "db.r6g.16xlarge",
    "db.r6g.2xlarge",
    "db.r6g.4xlarge",
    "db.r6g.8xlarge",
    "db.r6g.large",
    "db.r6g.xlarge",
    "db.serverless",
    "db.t2.2xlarge",
    "db.t2.large",
    "db.t2.medium",
    "db.t2.micro",
    "db.t2.small",
    "db.t2.xlarge",
    "db.t3.2xlarge",
    "db.t3.large",
    "db.t3.medium",
    "db.t3.micro",
    "db.t3.small",
    "db.t3.xlarge",
    "db.t4g.2xlarge",
    "db.t4g.large",
    "db.t4g.medium",
    "db.t4g.micro",
    "db.t4g.small",
    "db.t4g.xlarge",
    "db.x1.16xlarge",
    "db.x1.32xlarge"
   ]
  },
  "AWS::RDS::DBInstance.DBInstanceIdentifier": "CACHED",
  "AWS::RDS::DBInstance.DBName": "CACHED",
  "AWS::RDS::DBInstance.Engine": "CACHED",
  "AWS::RDS::DBInstance.MasterUsername": "CACHED",
  "AWS::RDS::DBInstance.Port": "CACHED",
  "AWS::RDS::DBInstance.ProcessorFeature.Name": "CACHED",
  "AWS::RDS::DBInstance.PromotionTier": "CACHED",
  "AWS::RDS::DBParameterGroup.DBParameterGroupName": "CACHED",
  "AWS::RDS::DBSubnetGroup.DBSubnetGroupName": "CACHED",
  "AWS::Redshift::Cluster.NumberOfNodes": "CACHED",
  "AWS::ResourceGroups::Group.ResourceQuery.Type": "CACHED",
  "AWS::Route53::CidrCollection.Location.LocationName": "CACHED",
  "AWS::Route53::CidrCollection.Name": "CACHED",
  "AWS::Route53::HealthCheck.AlarmIdentifier.Name": "CACHED",
  "AWS::Route53::HealthCheck.HealthCheckConfig.FailureThreshold": "CACHED",
  "AWS::Route53::HealthCheck.HealthCheckConfig.IPAddress": "CACHED",
  "AWS::Route53::HealthCheck.HealthCheckConfig.InsufficientDataHealthStatus": "CACHED",
  "AWS::Route53::HealthCheck.HealthCheckConfig.Port": "CACHED",
  "AWS::Route53::HealthCheck.HealthCheckConfig.RequestInterval": "CACHED",
  "AWS::Route53::HealthCheck.HealthCheckConfig.Type": "CACHED",
  "AWS::Route53Resolver::FirewallDomainList.DomainFileUrl": "CACHED",
  "AWS::Route53Resolver::FirewallDomainList.Domains": "CACHED",
  "AWS::Route53Resolver::FirewallDomainList.Name": "CACHED",
  "AWS::Route53Resolver::FirewallRuleGroup.FirewallRule.Action": "CACHED",
  "AWS::Route53Resolver::FirewallRuleGroup.FirewallRule.BlockOverrideDnsType": "CACHED",
  "AWS::Route53Resolver::FirewallRuleGroup.FirewallRule.BlockOverrideDomain": "CACHED",
  "AWS::Route53Resolver::FirewallRuleGroup.FirewallRule.BlockResponse": "CACHED",
  "AWS::Route53Resolver::FirewallRuleGroup.FirewallRule.FirewallDomainListId": "CACHED",
  "AWS::Route53Resolver::FirewallRuleGroup.Name": "CACHED",
  "AWS::Route53Resolver::FirewallRuleGroupAssociation.FirewallRuleGroupId": "CACHED",
  "AWS::Route53Resolver::FirewallRuleGroupAssociation.MutationProtection": "CACHED",
  "AWS::Route53Resolver::FirewallRuleGroupAssociation.Name": "CACHED",
  "AWS::Route53Resolver::FirewallRuleGroupAssociation.VpcId": "CACHED",
  "AWS::Route53Resolver::ResolverConfig.AutodefinedReverseFlag": "CACHED",
  "AWS::Route53Resolver::ResolverConfig.ResourceId": "CACHED",
  "AWS::Route53Resolver::ResolverQueryLoggingConfig.DestinationArn": "CACHED",
  "AWS::Route53Resolver::ResolverQueryLoggingConfig.Name": "CACHED",
  "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation.ResolverQueryLogConfigId": "CACHED",
  "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation.ResourceId": "CACHED",
  "AWS::Route53Resolver::ResolverRule.DomainName": "CACHED",
  "AWS::Route53Resolver::ResolverRule.ResolverEndpointId": "CACHED",
  "AWS::Route53Resolver::ResolverRule.RuleType": "CACHED",
  "AWS::S3::AccessPoint.Bucket": "CACHED",
  "AWS::S3::AccessPoint.Name": "CACHED",
  "AWS::S3::AccessPoint.VpcConfiguration.VpcId": "CACHED",
  "AWS::S3::Bucket.AccelerateConfiguration.AccelerationStatus": "CACHED",
  "AWS::S3::Bucket.AccessControl": "CACHED",
  "AWS::S3::Bucket.BucketName": "CACHED",
  "AWS::S3::Bucket.CorsRule.AllowedMethods": "CACHED",
  "AWS::S3::Bucket.DefaultRetention.Mode": "CACHED",
  "AWS::S3::Bucket.DeleteMarkerReplication.Status": "CACHED",
  "AWS::S3::Bucket.Destination.Format": "CACHED",
  "AWS::S3::Bucket.IntelligentTieringConfiguration.Status": "CACHED",
  "AWS::S3::Bucket.InventoryConfiguration.IncludedObjectVersions": "CACHED",
  "AWS::S3::Bucket.InventoryConfiguration.OptionalFields": "CACHED",
  "AWS::S3::Bucket.InventoryConfiguration.ScheduleFrequency": "CACHED",
  "AWS::S3::Bucket.Metrics.Status": "CACHED",
  "AWS::S3::Bucket.NoncurrentVersionTransition.StorageClass": "CACHED",
  "AWS::S3::Bucket.OwnershipControlsRule.ObjectOwnership": "CACHED",
  "AWS::S3::Bucket.RedirectAllRequestsTo.Protocol": "CACHED",
  "AWS::S3::Bucket.RedirectRule.Protocol": "CACHED",
  "AWS::S3::Bucket.ReplicaModifications.Status": "CACHED",
  "AWS::S3::Bucket.ReplicationDestination.StorageClass": "CACHED",
  "AWS::S3::Bucket.ReplicationRule.Status": "CACHED",
  "AWS::S3::Bucket.ReplicationTime.Status": "CACHED",
  "AWS::S3::Bucket.Rule.ExpirationDate": "CACHED",
  "AWS::S3::Bucket.Rule.ObjectSizeGreaterThan": "CACHED",
  "AWS::S3::Bucket.Rule.ObjectSizeLessThan": "CACHED",
  "AWS::S3::Bucket.Rule.Status": "CACHED",
  "AWS::S3::Bucket.ServerSideEncryptionByDefault.SSEAlgorithm": "CACHED",
  "AWS::S3::Bucket.SseKmsEncryptedObjects.Status": "CACHED",
  "AWS::S3::Bucket.Tiering.AccessTier": "CACHED",
  "AWS::S3::Bucket.Transition.StorageClass": "CACHED",
  "AWS::S3::Bucket.Transition.TransitionDate": "CACHED",
  "AWS::S3::Bucket.VersioningConfiguration.Status": "CACHED",
  "AWS::S3ObjectLambda::AccessPoint.Name": "CACHED",
  "AWS::S3ObjectLambda::AccessPoint.ObjectLambdaConfiguration.SupportingAccessPoint": "CACHED",
  "AWS::S3ObjectLambda::AccessPointPolicy.ObjectLambdaAccessPoint": "CACHED",
  "AWS::SNS::Topic.TopicName": "CACHED",
  "AWS::SQS::Queue.DelaySeconds": "CACHED",
  "AWS::SQS::Queue.KmsDataKeyReusePeriodSeconds": "CACHED",
  "AWS::SQS::Queue.MaximumMessageSize": "CACHED",
  "AWS::SQS::Queue.MessageRetentionPeriod": "CACHED",
  "AWS::SQS::Queue.ReceiveMessageWaitTimeSeconds": "CACHED",
  "AWS::SQS::Queue.VisibilityTimeout": "CACHED",
  "AWS::SSM::Association.AssociationName": "CACHED",
  "AWS::SSM::Association.AutomationTargetParameterName": "CACHED",
  "AWS::SSM::Association.ComplianceSeverity": "CACHED",
  "AWS::SSM::Association.DocumentVersion": "CACHED",
  "AWS::SSM::Association.InstanceId": "CACHED",
  "AWS::SSM::Association.MaxConcurrency": "CACHED",
  "AWS::SSM::Association.MaxErrors": "CACHED",
  "AWS::SSM::Association.Name": "CACHED",
  "AWS::SSM::Association.S3OutputLocation.OutputS3BucketName": "CACHED",
  "AWS::SSM::Association.S3OutputLocation.OutputS3Region": "CACHED",
  "AWS::SSM::Association.ScheduleExpression": "CACHED",
  "AWS::SSM::Association.ScheduleOffset": "CACHED",
  "AWS::SSM::Association.SyncCompliance": "CACHED",
  "AWS::SSM::Association.WaitForSuccessTimeoutSeconds": "CACHED",
  "AWS::SSM::Document.AttachmentsSource.Key": "CACHED",
  "AWS::SSM::Document.AttachmentsSource.Values": "CACHED",
  "AWS::SSM::Document.DocumentFormat": "CACHED",
  "AWS::SSM::Document.DocumentRequires.Name": "CACHED",
  "AWS::SSM::Document.DocumentRequires.Version": "CACHED",
  "AWS::SSM::Document.DocumentType": "CACHED",
  "AWS::SSM::Document.Name": "CACHED",
  "AWS::SSM::Document.TargetType": "CACHED",
  "AWS::SSM::Document.UpdateMethod": "CACHED",
  "AWS::SSM::Document.VersionName": "CACHED",
  "AWS::SSM::MaintenanceWindow.Cutoff": "CACHED",
  "AWS::SSM::MaintenanceWindow.Duration": "CACHED",
  "AWS::SSM::ResourceDataSync.AwsOrganizationsSource.OrganizationSourceType": "CACHED",
  "AWS::SSM::ResourceDataSync.BucketName": "CACHED",
  "AWS::SSM::ResourceDataSync.BucketRegion": "CACHED",
  "AWS::SSM::ResourceDataSync.S3Destination.BucketName": "CACHED",
  "AWS::SSM::ResourceDataSync.S3Destination.BucketPrefix": "CACHED",
  "AWS::SSM::ResourceDataSync.S3Destination.BucketRegion": "CACHED",
  "AWS::SSM::ResourceDataSync.S3Destination.KMSKeyArn": "CACHED",
  "AWS::SSM::ResourceDataSync.S3Destination.SyncFormat": "CACHED",
  "AWS::SSM::ResourceDataSync.SyncName": "CACHED",
  "AWS::SSM::ResourceDataSync.SyncSource.SourceType": "CACHED",
  "AWS::SSM::ResourceDataSync.SyncType": "CACHED",
  "AWS::SageMaker::App.AppName": "CACHED",
  "AWS::SageMaker::App.AppType": "CACHED",
  "AWS::SageMaker::App.DomainId": "CACHED",
  "AWS::SageMaker::App.ResourceSpec.InstanceType": "CACHED",
  "AWS::SageMaker::App.ResourceSpec.SageMakerImageArn": "CACHED",
  "AWS::SageMaker::App.ResourceSpec.SageMakerImageVersionArn": "CACHED",
  "AWS::SageMaker::App.UserProfileName": "CACHED",
  "AWS::SageMaker::AppImageConfig.AppImageConfigName": "CACHED",
  "AWS::SageMaker::AppImageConfig.FileSystemConfig.MountPath": "CACHED",
  "AWS::SageMaker::AppImageConfig.KernelSpec.DisplayName": "CACHED",
  "AWS::SageMaker::AppImageConfig.KernelSpec.Name": "CACHED",
  "AWS::SageMaker::Domain.AppNetworkAccessType": "CACHED",
  "AWS::SageMaker::Domain.AppSecurityGroupManagement": "CACHED",
  "AWS::SageMaker::Domain.AuthMode": "CACHED",
  "AWS::SageMaker::Domain.CustomImage.AppImageConfigName": "CACHED",
  "AWS::SageMaker::Domain.CustomImage.ImageName": "CACHED",
  "AWS::SageMaker::Domain.DomainName": "CACHED",
  "AWS::SageMaker::Domain.DomainSettings.SecurityGroupIds": "CACHED",
  "AWS::SageMaker::Domain.KmsKeyId": "CACHED",
  "AWS::SageMaker::Domain.RStudioServerProAppSettings.AccessStatus": "CACHED",
  "AWS::SageMaker::Domain.RStudioServerProAppSettings.UserGroup": "CACHED",
  "AWS::SageMaker::Domain.RStudioServerProDomainSettings.DomainExecutionRoleArn": "CACHED",
  "AWS::SageMaker::Domain.RStudioServerProDomainSettings.RStudioConnectUrl": "CACHED",
  "AWS::SageMaker::Domain.RStudioServerProDomainSettings.RStudioPackageManagerUrl": "CACHED",
  "AWS::SageMaker::Domain.ResourceSpec.InstanceType": "CACHED",
  "AWS::SageMaker::Domain.ResourceSpec.LifecycleConfigArn": "CACHED",
  "AWS::SageMaker::Domain.ResourceSpec.SageMakerImageArn": "CACHED",
  "AWS::SageMaker::Domain.ResourceSpec.SageMakerImageVersionArn": "CACHED",
  "AWS::SageMaker::Domain.SharingSettings.NotebookOutputOption": "CACHED",
  "AWS::SageMaker::Domain.SharingSettings.S3KmsKeyId": "CACHED",
  "AWS::SageMaker::Domain.SharingSettings.S3OutputPath": "CACHED",
  "AWS::SageMaker::Domain.SubnetIds": "CACHED",
  "AWS::SageMaker::Domain.UserSettings.ExecutionRole": "CACHED",
  "AWS::SageMaker::Domain.UserSettings.SecurityGroups": "CACHED",
  "AWS::SageMaker::Domain.VpcId": "CACHED",
  "AWS::SageMaker::FeatureGroup.EventTimeFeatureName": "CACHED",
  "AWS::SageMaker::FeatureGroup.FeatureDefinition.FeatureName": "CACHED",
  "AWS::SageMaker::FeatureGroup.FeatureDefinition.FeatureType": "CACHED",
  "AWS::SageMaker::FeatureGroup.FeatureGroupName": "CACHED",
  "AWS::SageMaker::FeatureGroup.RecordIdentifierFeatureName": "CACHED",
  "AWS::SageMaker::FeatureGroup.RoleArn": "CACHED",
  "AWS::SageMaker::Image.ImageDescription": "CACHED",
  "AWS::SageMaker::Image.ImageDisplayName": "CACHED",
  "AWS::SageMaker::Image.ImageName": "CACHED",
  "AWS::SageMaker::Image.ImageRoleArn": "CACHED",
  "AWS::SageMaker::ImageVersion.BaseImage": "CACHED",
  "AWS::SageMaker::ImageVersion.ImageName": "CACHED",
  "AWS::SageMaker::ModelPackage.AdditionalInferenceSpecificationDefinition.Description": "CACHED",
  "AWS::SageMaker::ModelPackage.AdditionalInferenceSpecificationDefinition.Name": "CACHED",
  "AWS::SageMaker::ModelPackage.AdditionalInferenceSpecificationDefinition.SupportedContentTypes": "CACHED",
  "AWS::SageMaker::ModelPackage.AdditionalInferenceSpecificationDefinition.SupportedResponseMIMETypes": "CACHED",
  "AWS::SageMaker::ModelPackage.ApprovalDescription": "CACHED",
  "AWS::SageMaker::ModelPackage.ClientToken": "CACHED",
  "AWS::SageMaker::ModelPackage.FileSource.ContentDigest": "CACHED",
  "AWS::SageMaker::ModelPackage.FileSource.ContentType": "CACHED",
  "AWS::SageMaker::ModelPackage.FileSource.S3Uri": "CACHED",
  "AWS::SageMaker::ModelPackage.InferenceSpecification.SupportedContentTypes": "CACHED",
  "AWS::SageMaker::ModelPackage.InferenceSpecification.SupportedResponseMIMETypes": "CACHED",
  "AWS::SageMaker::ModelPackage.MetadataProperties.CommitId": "CACHED",
  "AWS::SageMaker::ModelPackage.MetadataProperties.GeneratedBy": "CACHED",
  "AWS::SageMaker::ModelPackage.MetadataProperties.ProjectId": "CACHED",
  "AWS::SageMaker::ModelPackage.MetadataProperties.Repository": "CACHED",
  "AWS::SageMaker::ModelPackage.MetricsSource.ContentDigest": "CACHED",
  "AWS::SageMaker::ModelPackage.MetricsSource.ContentType": "CACHED",
  "AWS::SageMaker::ModelPackage.MetricsSource.S3Uri": "CACHED",
  "AWS::SageMaker::ModelPackage.ModelApprovalStatus": "CACHED",
  "AWS::SageMaker::ModelPackage.ModelPackageContainerDefinition.ContainerHostname": "CACHED",
  "AWS::SageMaker::ModelPackage.ModelPackageContainerDefinition.FrameworkVersion": "CACHED",
  "AWS::SageMaker::ModelPackage.ModelPackageContainerDefinition.Image": "CACHED",
  "AWS::SageMaker::ModelPackage.ModelPackageContainerDefinition.ImageDigest": "CACHED",
  "AWS::SageMaker::ModelPackage.ModelPackageContainerDefinition.ModelDataUrl": "CACHED",
  "AWS::SageMaker::ModelPackage.ModelPackageContainerDefinition.ProductId": "CACHED",
  "AWS::SageMaker::ModelPackage.ModelPackageGroupName": "CACHED",
  "AWS::SageMaker::ModelPackage.ModelPackageStatusItem.Name": "CACHED",
  "AWS::SageMaker::ModelPackage.ModelPackageStatusItem.Status": "CACHED",
  "AWS::SageMaker::ModelPackage.S3DataSource.S3DataType": "CACHED",
  "AWS::SageMaker::ModelPackage.S3DataSource.S3Uri": "CACHED",
  "AWS::SageMaker::ModelPackage.SamplePayloadUrl": "CACHED",
  "AWS::SageMaker::ModelPackage.SourceAlgorithm.AlgorithmName": "CACHED",
  "AWS::SageMaker::ModelPackage.SourceAlgorithm.ModelDataUrl": "CACHED",
  "AWS::SageMaker::ModelPackage.TransformInput.CompressionType": "CACHED",
  "AWS::SageMaker::ModelPackage.TransformInput.ContentType": "CACHED",
  "AWS::SageMaker::ModelPackage.TransformInput.SplitType": "CACHED",
  "AWS::SageMaker::ModelPackage.TransformJobDefinition.BatchStrategy": "CACHED",
  "AWS::SageMaker::ModelPackage.TransformOutput.Accept": "CACHED",
  "AWS::SageMaker::ModelPackage.TransformOutput.AssembleWith": "CACHED",
  "AWS::SageMaker::ModelPackage.TransformOutput.KmsKeyId": "CACHED",
  "AWS::SageMaker::ModelPackage.TransformOutput.S3OutputPath": "CACHED",
  "AWS::SageMaker::ModelPackage.TransformResources.VolumeKmsKeyId": "CACHED",
  "AWS::SageMaker::ModelPackage.ValidationProfile.ProfileName": "CACHED",
  "AWS::SageMaker::ModelPackage.ValidationSpecification.ValidationRole": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.BatchTransformInput.DataCapturedDestinationS3Uri": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.BatchTransformInput.LocalPath": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.BatchTransformInput.S3DataDistributionType": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.BatchTransformInput.S3InputMode": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.ClusterConfig.InstanceCount": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.ClusterConfig.VolumeSizeInGB": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.ConstraintsResource.S3Uri": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.EndpointInput.EndpointName": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.EndpointInput.LocalPath": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.EndpointInput.S3DataDistributionType": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.EndpointInput.S3InputMode": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.EndpointName": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.FailureReason": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.MonitoringAppSpecification.ContainerArguments": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.MonitoringAppSpecification.ContainerEntrypoint": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.MonitoringAppSpecification.ImageUri": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.MonitoringAppSpecification.PostAnalyticsProcessorSourceUri": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.MonitoringAppSpecification.RecordPreprocessorSourceUri": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.MonitoringExecutionSummary.EndpointName": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.MonitoringExecutionSummary.MonitoringExecutionStatus": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.MonitoringExecutionSummary.MonitoringScheduleName": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.MonitoringExecutionSummary.ProcessingJobArn": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.MonitoringJobDefinition.RoleArn": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.MonitoringOutputConfig.KmsKeyId": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.MonitoringScheduleConfig.MonitoringJobDefinitionName": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.MonitoringScheduleConfig.MonitoringType": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.MonitoringScheduleName": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.MonitoringScheduleStatus": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.S3Output.LocalPath": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.S3Output.S3UploadMode": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.S3Output.S3Uri": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.ScheduleConfig.ScheduleExpression": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.StatisticsResource.S3Uri": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.StoppingCondition.MaxRuntimeInSeconds": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.VpcConfig.SecurityGroupIds": "CACHED",
  "AWS::SageMaker::MonitoringSchedule.VpcConfig.Subnets": "CACHED",
  "AWS::SageMaker::NotebookInstance.VolumeSizeInGB": "CACHED",
  "AWS::SageMaker::UserProfile.CustomImage.AppImageConfigName": "CACHED",
  "AWS::SageMaker::UserProfile.CustomImage.ImageName": "CACHED",
  "AWS::SageMaker::UserProfile.DomainId": "CACHED",
  "AWS::SageMaker::UserProfile.RStudioServerProAppSettings.AccessStatus": "CACHED",
  "AWS::SageMaker::UserProfile.RStudioServerProAppSettings.UserGroup": "CACHED",
  "AWS::SageMaker::UserProfile.ResourceSpec.InstanceType": "CACHED",
  "AWS::SageMaker::UserProfile.ResourceSpec.SageMakerImageArn": "CACHED",
  "AWS::SageMaker::UserProfile.ResourceSpec.SageMakerImageVersionArn": "CACHED",
  "AWS::SageMaker::UserProfile.SharingSettings.NotebookOutputOption": "CACHED",
  "AWS::SageMaker::UserProfile.SharingSettings.S3KmsKeyId": "CACHED",
  "AWS::SageMaker::UserProfile.SharingSettings.S3OutputPath": "CACHED",
  "AWS::SageMaker::UserProfile.SingleSignOnUserIdentifier": "CACHED",
  "AWS::SageMaker::UserProfile.SingleSignOnUserValue": "CACHED",
  "AWS::SageMaker::UserProfile.UserProfileName": "CACHED",
  "AWS::SageMaker::UserProfile.UserSettings.ExecutionRole": "CACHED",
  "AWS::SageMaker::UserProfile.UserSettings.SecurityGroups": "CACHED",
  "AWS::ServiceCatalog::CloudFormationProvisionedProduct.AcceptLanguage": "CACHED",
  "AWS::ServiceCatalog::CloudFormationProvisionedProduct.PathId": "CACHED",
  "AWS::ServiceCatalog::CloudFormationProvisionedProduct.PathName": "CACHED",
  "AWS::ServiceCatalog::CloudFormationProvisionedProduct.ProductId": "CACHED",
  "AWS::ServiceCatalog::CloudFormationProvisionedProduct.ProductName": "CACHED",
  "AWS::ServiceCatalog::CloudFormationProvisionedProduct.ProvisionedProductName": "CACHED",
  "AWS::ServiceCatalog::CloudFormationProvisionedProduct.ProvisioningArtifactId": "CACHED",
  "AWS::ServiceCatalog::CloudFormationProvisionedProduct.ProvisioningParameter.Key": "CACHED",
  "AWS::ServiceCatalog::CloudFormationProvisionedProduct.ProvisioningPreferences.StackSetAccounts": "CACHED",
  "AWS::ServiceCatalog::CloudFormationProvisionedProduct.ProvisioningPreferences.StackSetMaxConcurrencyPercentage": "CACHED",
  "AWS::ServiceCatalog::CloudFormationProvisionedProduct.ProvisioningPreferences.StackSetOperationType": "CACHED",
  "AWS::ServiceCatalog::CloudFormationProvisionedProduct.ProvisioningPreferences.StackSetRegions": "CACHED",
  "AWS::StepFunctions::Activity.Name": "CACHED",
  "AWS::StepFunctions::Activity.TagsEntry.Key": "CACHED",
  "AWS::StepFunctions::Activity.TagsEntry.Value": "CACHED",
  "AWS::StepFunctions::StateMachine.CloudWatchLogsLogGroup.LogGroupArn": "CACHED",
  "AWS::StepFunctions::StateMachine.DefinitionString": "CACHED",
  "AWS::StepFunctions::StateMachine.LoggingConfiguration.Level": "CACHED",
  "AWS::StepFunctions::StateMachine.RoleArn": "CACHED",
  "AWS::StepFunctions::StateMachine.StateMachineName": "CACHED",
  "AWS::StepFunctions::StateMachine.StateMachineType": "CACHED",
  "AWS::StepFunctions::StateMachine.TagsEntry.Key": "CACHED",
  "AWS::StepFunctions::StateMachine.TagsEntry.Value": "CACHED",
  "AWS::Synthetics::Canary.ArtifactS3Location": "CACHED",
  "AWS::Synthetics::Canary.Name": "CACHED",
  "AWS::Transfer::Agreement.AccessRole": "CACHED",
  "AWS::Transfer::Agreement.BaseDirectory": "CACHED",
  "AWS::Transfer::Agreement.Description": "CACHED",
  "AWS::Transfer::Agreement.LocalProfileId": "CACHED",
  "AWS::Transfer::Agreement.PartnerProfileId": "CACHED",
  "AWS::Transfer::Agreement.ServerId": "CACHED",
  "AWS::Transfer::Agreement.Status": "CACHED",
  "AWS::Transfer::Certificate.Description": "CACHED",
  "AWS::Transfer::Certificate.Usage": "CACHED",
  "AWS::Transfer::Connector.AccessRole": "CACHED",
  "AWS::Transfer::Connector.LoggingRole": "CACHED",
  "AWS::Transfer::Profile.As2Id": "CACHED",
  "AWS::Transfer::Profile.CertificateIds": "CACHED",
  "AWS::Transfer::Profile.ProfileType": "CACHED",
  "AWS::Transfer::Workflow.Description": "CACHED",
  "AWS::Transfer::Workflow.WorkflowStep.Type": "CACHED",
  "AWS::WAFv2::IPSet.Addresses": "CACHED",
  "AWS::WAFv2::IPSet.Description": "CACHED",
  "AWS::WAFv2::IPSet.IPAddressVersion": "CACHED",
  "AWS::WAFv2::IPSet.Name": "CACHED",
  "AWS::WAFv2::IPSet.Scope": "CACHED",
  "AWS::WAFv2::RegexPatternSet.Description": "CACHED",
  "AWS::WAFv2::RegexPatternSet.Name": "CACHED",
  "AWS::WAFv2::RegexPatternSet.Scope": "CACHED",
  "AWS::WAFv2::RuleGroup.Body.OversizeHandling": "CACHED",
  "AWS::WAFv2::RuleGroup.ByteMatchStatement.PositionalConstraint": "CACHED",
  "AWS::WAFv2::RuleGroup.CookieMatchPattern.ExcludedCookies": "CACHED",
  "AWS::WAFv2::RuleGroup.CookieMatchPattern.IncludedCookies": "CACHED",
  "AWS::WAFv2::RuleGroup.Cookies.MatchScope": "CACHED",
  "AWS::WAFv2::RuleGroup.Cookies.OversizeHandling": "CACHED",
  "AWS::WAFv2::RuleGroup.Description": "CACHED",
  "AWS::WAFv2::RuleGroup.ForwardedIPConfiguration.FallbackBehavior": "CACHED",
  "AWS::WAFv2::RuleGroup.GeoMatchStatement.CountryCodes": "CACHED",
  "AWS::WAFv2::RuleGroup.HeaderMatchPattern.ExcludedHeaders": "CACHED",
  "AWS::WAFv2::RuleGroup.HeaderMatchPattern.IncludedHeaders": "CACHED",
  "AWS::WAFv2::RuleGroup.Headers.MatchScope": "CACHED",
  "AWS::WAFv2::RuleGroup.Headers.OversizeHandling": "CACHED",
  "AWS::WAFv2::RuleGroup.IPSetForwardedIPConfiguration.FallbackBehavior": "CACHED",
  "AWS::WAFv2::RuleGroup.IPSetForwardedIPConfiguration.Position": "CACHED",
  "AWS::WAFv2::RuleGroup.IPSetReferenceStatement.Arn": "CACHED",
  "AWS::WAFv2::RuleGroup.ImmunityTimeProperty.ImmunityTime": "CACHED",
  "AWS::WAFv2::RuleGroup.JsonBody.InvalidFallbackBehavior": "CACHED",
  "AWS::WAFv2::RuleGroup.JsonBody.MatchScope": "CACHED",
  "AWS::WAFv2::RuleGroup.JsonBody.OversizeHandling": "CACHED",
  "AWS::WAFv2::RuleGroup.Label.Name": "CACHED",
  "AWS::WAFv2::RuleGroup.LabelMatchStatement.Key": "CACHED",
  "AWS::WAFv2::RuleGroup.LabelMatchStatement.Scope": "CACHED",
  "AWS::WAFv2::RuleGroup.LabelSummary.Name": "CACHED",
  "AWS::WAFv2::RuleGroup.Name": "CACHED",
  "AWS::WAFv2::RuleGroup.RateBasedStatement.AggregateKeyType": "CACHED",
  "AWS::WAFv2::RuleGroup.RateBasedStatement.Limit": "CACHED",
  "AWS::WAFv2::RuleGroup.RegexMatchStatement.RegexString": "CACHED",
  "AWS::WAFv2::RuleGroup.RegexPatternSetReferenceStatement.Arn": "CACHED",
  "AWS::WAFv2::RuleGroup.Rule.Name": "CACHED",
  "AWS::WAFv2::RuleGroup.Scope": "CACHED",
  "AWS::WAFv2::RuleGroup.SizeConstraintStatement.ComparisonOperator": "CACHED",
  "AWS::WAFv2::RuleGroup.SqliMatchStatement.SensitivityLevel": "CACHED",
  "AWS::WAFv2::RuleGroup.TextTransformation.Type": "CACHED",
  "AWS::WAFv2::RuleGroup.VisibilityConfig.MetricName": "CACHED",
  "AWS::WAFv2::WebACL.Body.OversizeHandling": "CACHED",
  "AWS::WAFv2::WebACL.ByteMatchStatement.PositionalConstraint": "CACHED",
  "AWS::WAFv2::WebACL.CookieMatchPattern.ExcludedCookies": "CACHED",
  "AWS::WAFv2::WebACL.CookieMatchPattern.IncludedCookies": "CACHED",
  "AWS::WAFv2::WebACL.Cookies.MatchScope": "CACHED",
  "AWS::WAFv2::WebACL.Cookies.OversizeHandling": "CACHED",
  "AWS::WAFv2::WebACL.CustomHTTPHeader.Name": "CACHED",
  "AWS::WAFv2::WebACL.CustomHTTPHeader.Value": "CACHED",
  "AWS::WAFv2::WebACL.CustomResponse.CustomResponseBodyKey": "CACHED",
  "AWS::WAFv2::WebACL.CustomResponse.ResponseCode": "CACHED",
  "AWS::WAFv2::WebACL.Description": "CACHED",
  "AWS::WAFv2::WebACL.ExcludedRule.Name": "CACHED",
  "AWS::WAFv2::WebACL.FieldIdentifier.Identifier": "CACHED",
  "AWS::WAFv2::WebACL.ForwardedIPConfiguration.FallbackBehavior": "CACHED",
  "AWS::WAFv2::WebACL.GeoMatchStatement.CountryCodes": "CACHED",
  "AWS::WAFv2::WebACL.HeaderMatchPattern.ExcludedHeaders": "CACHED",
  "AWS::WAFv2::WebACL.HeaderMatchPattern.IncludedHeaders": "CACHED",
  "AWS::WAFv2::WebACL.Headers.MatchScope": "CACHED",
  "AWS::WAFv2::WebACL.Headers.OversizeHandling": "CACHED",
  "AWS::WAFv2::WebACL.IPSetForwardedIPConfiguration.FallbackBehavior": "CACHED",
  "AWS::WAFv2::WebACL.IPSetForwardedIPConfiguration.Position": "CACHED",
  "AWS::WAFv2::WebACL.IPSetReferenceStatement.Arn": "CACHED",
  "AWS::WAFv2::WebACL.ImmunityTimeProperty.ImmunityTime": "CACHED",
  "AWS::WAFv2::WebACL.JsonBody.InvalidFallbackBehavior": "CACHED",
  "AWS::WAFv2::WebACL.JsonBody.MatchScope": "CACHED",
  "AWS::WAFv2::WebACL.JsonBody.OversizeHandling": "CACHED",
  "AWS::WAFv2::WebACL.Label.Name": "CACHED",
  "AWS::WAFv2::WebACL.LabelMatchStatement.Key": "CACHED",
  "AWS::WAFv2::WebACL.LabelMatchStatement.Scope": "CACHED",
  "AWS::WAFv2::WebACL.ManagedRuleGroupConfig.LoginPath": "CACHED",
  "AWS::WAFv2::WebACL.ManagedRuleGroupConfig.PayloadType": "CACHED",
  "AWS::WAFv2::WebACL.ManagedRuleGroupStatement.Name": "CACHED",
  "AWS::WAFv2::WebACL.ManagedRuleGroupStatement.Version": "CACHED",
  "AWS::WAFv2::WebACL.Name": "CACHED",
  "AWS::WAFv2::WebACL.RateBasedStatement.AggregateKeyType": "CACHED",
  "AWS::WAFv2::WebACL.RateBasedStatement.Limit": "CACHED",
  "AWS::WAFv2::WebACL.RegexMatchStatement.RegexString": "CACHED",
  "AWS::WAFv2::WebACL.RegexPatternSetReferenceStatement.Arn": "CACHED",
  "AWS::WAFv2::WebACL.Rule.Name": "CACHED",
  "AWS::WAFv2::WebACL.RuleGroupReferenceStatement.Arn": "CACHED",
  "AWS::WAFv2::WebACL.Scope": "CACHED",
  "AWS::WAFv2::WebACL.SizeConstraintStatement.ComparisonOperator": "CACHED",
  "AWS::WAFv2::WebACL.SqliMatchStatement.SensitivityLevel": "CACHED",
  "AWS::WAFv2::WebACL.TextTransformation.Type": "CACHED",
  "AWS::WAFv2::WebACL.VisibilityConfig.MetricName": "CACHED",
  "AWS::WAFv2::WebACLAssociation.ResourceArn": "CACHED",
  "AWS::WAFv2::WebACLAssociation.WebACLArn": "CACHED",
  "AWS::WorkSpaces::Workspace.ComputeTypeName": "CACHED",
  "AWS::WorkSpaces::Workspace.RunningMode": "CACHED",
  "AppStreamInstanceType": {},
  "AvailabilityZone": "CACHED",
  "AvailabilityZoneWithAll": "CACHED",
  "AvailabilityZones": "CACHED",
  "AwsCidrIp": "CACHED",
  "BlockchainInstanceType": {},
  "CertificateValidationMethod": "CACHED",
  "CidrIp": "CACHED",
  "CodePipelineWehbookAuthentication": "CACHED",
  "CustomerGatewayType": "CACHED",
  "DAXInstanceType": {
   "AllowedValues": [
    "dax.r4.16xlarge",
    "dax.r4.2xlarge",
    "dax.r4.4xlarge",
    "dax.r4.8xlarge",
    "dax.r4.large",
    "dax.r4.xlarge",
    "dax.r5.12xlarge",
    "dax.r5.16xlarge",
    "dax.r5.24xlarge",
    "dax.r5.2xlarge",
    "dax.r5.4xlarge",
    "dax.r5.8xlarge",
    "dax.r5.large",
    "dax.r5.xlarge",
    "dax.t2.medium",
    "dax.t2.small",
    "dax.t3.medium",
    "dax.t3.small"
   ],
   "Ref": {
    "Parameters": [
     "String"
    ]
   }
  },
  "DHCPOptionsNetbiosNodeType": "CACHED",
  "DLMPolicyResourceType": "CACHED",
  "DmsEndpointSslMode": "CACHED",
  "DmsEndpointType": "CACHED",
  "DocumentDBEngineVersion": "CACHED",
  "DocumentDBInstanceClass": {
   "AllowedValues": [
    "db.r5.12xlarge",
    "db.r5.16xlarge",
    "db.r5.24xlarge",
    "db.r5.2xlarge",
    "db.r5.4xlarge",
    "db.r5.8xlarge",
    "db.r5.large",
    "db.r5.xlarge",
    "db.r6g.12xlarge",
    "db.r6g.16xlarge",
    "db.r6g.2xlarge",
    "db.r6g.4xlarge",
    "db.r6g.8xlarge",
    "db.r6g.large",
    "db.r6g.xlarge",
    "db.t3.medium",
    "db.t4g.medium"
   ],
   "Ref": {
    "Parameters": [
     "String"
    ]
   }
  },
  "EC2CapacityReservationEndDateType": "CACHED",
  "EC2CapacityReservationInstanceMatchCriteria": "CACHED",
  "EC2CapacityReservationInstancePlatform": "CACHED",
  "EC2InstanceInitiatedShutdownBehavior": "CACHED",
  "EC2MarketType": "CACHED",
  "EC2SpotInstanceInitiatedShutdownBehavior": "CACHED",
  "EC2SpotInstanceType": "CACHED",
  "EFSFileSystemLifecyclePolicy": "CACHED",
  "EFSFileSystemPerformanceMode": "CACHED",
  "EFSFileSystemThroughputMode": "CACHED",
  "EMRInstanceType": {
   "AllowedValues": [
    "c4.2xlarge",
    "c4.4xlarge",
    "c4.8xlarge",
    "c4.large",
    "c4.xlarge",
    "c5.12xlarge",
    "c5.18xlarge",
    "c5.24xlarge",
    "c5.2xlarge",
    "c5.4xlarge",
    "c5.9xlarge",
    "c5.xlarge",
    "c5d.18xlarge",
    "c5d.2xlarge",
    "c5d.4xlarge",
    "c5d.9xlarge",
    "c5d.xlarge",
    "c6g.12xlarge",
    "c6g.16xlarge",
    "c6g.2xlarge",
    "c6g.4xlarge",
    "c6g.8xlarge",
    "c6g.xlarge",
    "d2.2xlarge",
    "d2.4xlarge",
    "d2.8xlarge",
    "d2.xlarge",
    "i3.16xlarge",
    "i3.2xlarge",
    "i3.4xlarge",
    "i3.8xlarge",
    "i3.xlarge",
    "i3en.12xlarge",
    "i3en.24xlarge",
    "i3en.2xlarge",
    "i3en.3xlarge",
    "i3en.6xlarge",
    "i3en.xlarge",
    "m4.10xlarge",
    "m4.16xlarge",
    "m4.2xlarge",
    "m4.4xlarge",
    "m4.large",
    "m4.xlarge",
    "m5.12xlarge",
    "m5.16xlarge",
    "m5.24xlarge",
    "m5.2xlarge",
    "m5.4xlarge",
    "m5.8xlarge",
    "m5.xlarge",
    "m5a.12xlarge",
    "m5a.16xlarge",
    "m5a.24xlarge",
    "m5a.2xlarge",
    "m5a.4xlarge",
    "m5a.8xlarge",
    "m5a.xlarge",
    "m5d.12xlarge",
    "m5d.16xlarge",
    "m5d.24xlarge",
    "m5d.2xlarge",
    "m5d.4xlarge",
    "m5d.8xlarge",
    "m5d.xlarge",
    "m6g.12xlarge",
    "m6g.16xlarge",
    "m6g.2xlarge",
    "m6g.4xlarge",
    "m6g.8xlarge",
    "m6g.xlarge",
    "p3.16xlarge",
    "p3.2xlarge",
    "p3.8xlarge",
    "r4.16xlarge",
    "r4.2xlarge",
    "r4.4xlarge",
    "r4.8xlarge",
    "r4.large",
    "r4.xlarge",
    "r5.12xlarge",
    "r5.16xlarge",
    "r5.24xlarge",
    "r5.2xlarge",
    "r5.4xlarge",
    "r5.8xlarge",
    "r5.xlarge",
    "r5a.12xlarge",
    "r5a.16xlarge",
    "r5a.24xlarge",
    "r5a.2xlarge",
    "r5a.4xlarge",
    "r5a.8xlarge",
    "r5a.xlarge",
    "r5d.12xlarge",
    "r5d.16xlarge",
    "r5d.24xlarge",
    "r5d.2xlarge",
    "r5d.4xlarge",
    "r5d.8xlarge",
    "r5d.xlarge",
    "r6g.12xlarge",
    "r6g.16xlarge",
    "r6g.2xlarge",
    "r6g.4xlarge",
    "r6g.8xlarge",
    "r6g.xlarge",
    "z1d.12xlarge",
    "z1d.2xlarge",
    "z1d.3xlarge",
    "z1d.6xlarge",
    "z1d.xlarge"
   ]
  },
  "EbsIops": "CACHED",
  "EbsVolumeType": "CACHED",
  "Ec2CpuCredits": "CACHED",
  "Ec2ElasticIpDomain": "CACHED",
  "Ec2FleetOnDemandAllocationStrategy": "CACHED",
  "Ec2HostAutoPlacement": "CACHED",
  "Ec2InstanceType": {
   "AllowedValues": [
    "c4.2xlarge",
    "c4.4xlarge",
    "c4.8xlarge",
    "c4.large",
    "c4.xlarge",
    "c5.12xlarge",
    "c5.18xlarge",
    "c5.24xlarge",
    "c5.2xlarge",
    "c5.4xlarge",
    "c5.9xlarge",
    "c5.large",
    "c5.metal",
    "c5.xlarge",
    "c5a.12xlarge",
    "c5a.16xlarge",
    "c5a.24xlarge",
    "c5a.2xlarge",
    "c5a.4xlarge",
    "c5a.8xlarge",
    "c5a.large",
    "c5a.xlarge",
    "c5d.18xlarge",
    "c5d.2xlarge",
    "c5d.4xlarge",
    "c5d.9xlarge",
    "c5d.large",
    "c5d.metal",
    "c5d.xlarge",
    "c6g.12xlarge",
    "c6g.16xlarge",
    "c6g.2xlarge",
    "c6g.4xlarge",
    "c6g.8xlarge",
    "c6g.large",
    "c6g.medium",
    "c6g.metal",
    "c6g.xlarge",
    "d2.2xlarge",
    "d2.4xlarge",
    "d2.8xlarge",
    "d2.xlarge",
    "g4dn.12xlarge",
    "g4dn.16xlarge",
    "g4dn.2xlarge",
    "g4dn.4xlarge",
    "g4dn.8xlarge",
    "g4dn.xlarge",
    "i2.8xlarge",
    "i3.16xlarge",
    "i3.2xlarge",
    "i3.4xlarge",
    "i3.8xlarge",
    "i3.large",
    "i3.xlarge",
    "i3en.12xlarge",
    "i3en.24xlarge",
    "i3en.2xlarge",
    "i3en.3xlarge",
    "i3en.6xlarge",
    "i3en.large",
    "i3en.xlarge",
    "inf1.24xlarge",
    "inf1.2xlarge",
    "inf1.6xlarge",
    "inf1.xlarge",
    "m4.10xlarge",
    "m4.16xlarge",
    "m4.2xlarge",
    "m4.4xlarge",
    "m4.large",
    "m4.xlarge",
    "m5.12xlarge",
    "m5.16xlarge",
    "m5.24xlarge",
    "m5.2xlarge",
    "m5.4xlarge",
    "m5.8xlarge",
    "m5.large",
    "m5.metal",
    "m5.xlarge",
    "m5a.12xlarge",
    "m5a.16xlarge",
    "m5a.24xlarge",
    "m5a.2xlarge",
    "m5a.4xlarge",
    "m5a.8xlarge",
    "m5a.large",
    "m5a.xlarge",
    "m5d.12xlarge",
    "m5d.16xlarge",
    "m5d.24xlarge",
    "m5d.2xlarge",
    "m5d.4xlarge",
    "m5d.8xlarge",
    "m5d.large",
    "m5d.metal",
    "m5d.xlarge",
    "m6g.12xlarge",
    "m6g.16xlarge",
    "m6g.2xlarge",
    "m6g.4xlarge",
    "m6g.8xlarge",
    "m6g.large",
    "m6g.medium",
    "m6g.metal",
    "m6g.xlarge",
    "p3.16xlarge",
    "p3.2xlarge",
    "p3.8xlarge",
    "r4.16xlarge",
    "r4.2xlarge",
    "r4.4xlarge",
    "r4.8xlarge",
    "r4.large",
    "r4.xlarge",
    "r5.12xlarge",
    "r5.16xlarge",
    "r5.24xlarge",
    "r5.2xlarge",
    "r5.4xlarge",
    "r5.8xlarge",
    "r5.large",
    "r5.metal",
    "r5.xlarge",
    "r5a.12xlarge",
    "r5a.16xlarge",
    "r5a.24xlarge",
    "r5a.2xlarge",
    "r5a.4xlarge",
    "r5a.8xlarge",
    "r5a.large",
    "r5a.xlarge",
    "r5d.12xlarge",
    "r5d.16xlarge",
    "r5d.24xlarge",
    "r5d.2xlarge",
    "r5d.4xlarge",
    "r5d.8xlarge",
    "r5d.large",
    "r5d.metal",
    "r5d.xlarge",
    "r6g.12xlarge",
    "r6g.16xlarge",
    "r6g.2xlarge",
    "r6g.4xlarge",
    "r6g.8xlarge",
    "r6g.large",
    "r6g.medium",
    "r6g.metal",
    "r6g.xlarge",
    "t2.2xlarge",
    "t2.large",
    "t2.medium",
    "t2.micro",
    "t2.nano",
    "t2.small",
    "t2.xlarge",
    "t3.2xlarge",
    "t3.large",
    "t3.medium",
    "t3.micro",
    "t3.nano",
    "t3.small",
    "t3.xlarge",
    "t3a.2xlarge",
    "t3a.large",
    "t3a.medium",
    "t3a.micro",
    "t3a.nano",
    "t3a.small",
    "t3a.xlarge",
    "t4g.2xlarge",
    "t4g.large",
    "t4g.medium",
    "t4g.micro",
    "t4g.nano",
    "t4g.small",
    "t4g.xlarge",
    "x1.16xlarge",
    "x1.32xlarge",
    "z1d.12xlarge",
    "z1d.2xlarge",
    "z1d.3xlarge",
    "z1d.6xlarge",
    "z1d.large",
    "z1d.metal",
    "z1d.xlarge"
   ],
   "Ref": {
    "Parameters": [
     "String"
    ]
   }
  },
  "Ec2Tenancy": "CACHED",
  "EcsNetworkMode": "CACHED",
  "EcsTaskDefinitionProxyType": "CACHED",
  "ElastiCacheInstanceType": {
   "AllowedValues": [
    "cache.m4.10xlarge",
    "cache.m4.2xlarge",
    "cache.m4.4xlarge",
    "cache.m4.large",
    "cache.m4.xlarge",
    "cache.m6g.12xlarge",
    "cache.m6g.16xlarge",
    "cache.m6g.2xlarge",
    "cache.m6g.4xlarge",
    "cache.m6g.8xlarge",
    "cache.m6g.large",
    "cache.m6g.xlarge",
    "cache.r4.16xlarge",
    "cache.r4.2xlarge",
    "cache.r4.4xlarge",
    "cache.r4.8xlarge",
    "cache.r4.large",
    "cache.r4.xlarge",
    "cache.r5.12xlarge",
    "cache.r5.24xlarge",
    "cache.r5.2xlarge",
    "cache.r5.4xlarge",
    "cache.r5.large",
    "cache.r5.xlarge",
    "cache.r6g.12xlarge",
    "cache.r6g.16xlarge",
    "cache.r6g.2xlarge",
    "cache.r6g.4xlarge",
    "cache.r6g.8xlarge",
    "cache.r6g.large",
    "cache.r6g.xlarge",
    "cache.t2.medium",
    "cache.t2.micro",
    "cache.t2.small",
    "cache.t3.medium",
    "cache.t3.micro",
    "cache.t3.small",
    "cache.t4g.medium",
    "cache.t4g.micro",
    "cache.t4g.small"
   ]
  },
  "ElasticInferenceAccelerator": "CACHED",
  "ElasticsearchInstanceType": "CACHED",
  "ImageId": "CACHED",
  "KeyPair": "CACHED",
  "KmsKey.Arn": "CACHED",
  "LambdaRuntime": "CACHED",
  "LaunchConfigurationName": "CACHED",
  "LaunchTemplateName": "CACHED",
  "LaunchTemplateTagSpecificationResourceType": "CACHED",
  "LoadBalancerName": "CACHED",
  "LoadBalancerNames": "CACHED",
  "LoadBalancerPort": "CACHED",
  "LoadBalancerV2Arn": "CACHED",
  "MicrosoftADEdition": "CACHED",
  "NeptuneInstanceClass": {
   "AllowedValues": [
    "db.r5.12xlarge",
    "db.r5.16xlarge",
    "db.r5.24xlarge",
    "db.r5.2xlarge",
    "db.r5.4xlarge",
    "db.r5.8xlarge",
    "db.r5.large",
    "db.r5.xlarge",
    "db.r5d.12xlarge",
    "db.r5d.16xlarge",
    "db.r5d.24xlarge",
    "db.r5d.2xlarge",
    "db.r5d.4xlarge",
    "db.r5d.8xlarge",
    "db.r5d.large",
    "db.r5d.xlarge",
    "db.r6g.12xlarge",
    "db.r6g.16xlarge",
    "db.r6g.2xlarge",
    "db.r6g.4xlarge",
    "db.r6g.8xlarge",
    "db.r6g.large",
    "db.r6g.xlarge",
    "db.t3.medium",
    "db.t4g.medium"
   ],
   "Ref": {
    "Parameters": [
     "String"
    ]
   }
  },
  "NetworkAclRuleAction": "CACHED",
  "NetworkAclRuleNumber": "CACHED",
  "NetworkInterfacePermission": "CACHED",
  "PerformanceInsightsRetentionPeriod": "CACHED",
  "PlacementGroup": "CACHED",
  "PlacementGroupStrategy": "CACHED",
  "PlacementTenancy": "CACHED",
  "PredicateType": "CACHED",
  "PrivateIpAddress": "CACHED",
  "RdsInstanceMonitoringInterval": "CACHED",
  "RecordSetFailover": "CACHED",
  "RecordSetGeoContinentCode": "CACHED",
  "RecordSetType": "CACHED",
  "RedshiftClusterType": "CACHED",
  "RedshiftClusterVersion": "CACHED",
  "RedshiftInstanceType": {
   "AllowedValues": [
    "dc2.8xlarge",
    "dc2.large",
    "ds2.8xlarge",
    "ds2.xlarge",
    "ra3.16xlarge",
    "ra3.4xlarge",
    "ra3.xlplus"
   ],
   "Ref": {
    "Parameters": [
     "String"
    ]
   }
  },
  "RestApiId": "CACHED",
  "Route53ResolverEndpointDirection": "CACHED",
  "SecretsManagerTargetType": "CACHED",
  "ServiceDiscoveryDnsType": "CACHED",
  "ServiceDiscoveryHealthCheckConfigType": "CACHED",
  "SesReceiptRuleTlsPolicy": "CACHED",
  "SimpleADSize": "CACHED",
  "SnsSubscriptionProtocol": "CACHED",
  "SsmDocumentName": "CACHED",
  "SubnetId": "CACHED",
  "SubnetIds": "CACHED",
  "TargetGroupArn": "CACHED",
  "TargetGroupArns": "CACHED",
  "TargetGroupHealthCheckTimeoutSeconds": "CACHED",
  "TargetGroupHealthyThresholdCount": "CACHED",
  "TransitGatewayEnabled": "CACHED",
  "VpcEndpointConnectionEvents": "CACHED",
  "VpnType": "CACHED",
  "WS::CodeDeploy::DeploymentGroup.TriggerConfig.TriggerEvents": "CACHED"
 }
}