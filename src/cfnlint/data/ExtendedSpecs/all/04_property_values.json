[
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::EFS::FileSystem.LifecyclePolicy/Properties/TransitionToIA/Value",
    "value": {
      "ValueType": "EFSFileSystemLifecyclePolicy"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::DLM::LifecyclePolicy.PolicyDetails/Properties/ResourceTypes/Value",
    "value": {
      "ValueType": "DLMPolicyResourceType"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::EC2::EC2Fleet.FleetLaunchTemplateOverridesRequest/Properties/InstanceType/Value",
    "value": {
      "ValueType": "Ec2InstanceType"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::EC2::EC2Fleet.OnDemandOptionsRequest/Properties/AllocationStrategy/Value",
    "value": {
      "ValueType": "Ec2FleetOnDemandAllocationStrategy"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::EC2::Instance.CreditSpecification/Properties/CPUCredits/Value",
    "value": {
      "ValueType": "Ec2CpuCredits"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::EC2::Instance.ElasticInferenceAccelerator/Properties/Type/Value",
    "value": {
      "ValueType": "ElasticInferenceAccelerator"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::EC2::LaunchTemplate.CreditSpecification/Properties/CpuCredits/Value",
    "value": {
      "ValueType": "Ec2CpuCredits"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::EC2::LaunchTemplate.Ebs/Properties/VolumeType/Value",
    "value": {
      "ValueType": "EbsVolumeType"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::EC2::LaunchTemplate.InstanceMarketOptions/Properties/MarketType/Value",
    "value": {
      "ValueType": "EC2MarketType"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::EC2::LaunchTemplate.LaunchTemplateData/Properties/InstanceInitiatedShutdownBehavior/Value",
    "value": {
      "ValueType": "EC2InstanceInitiatedShutdownBehavior"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::EC2::LaunchTemplate.LaunchTemplateData/Properties/InstanceType/Value",
    "value": {
      "ValueType": "Ec2InstanceType"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::EC2::LaunchTemplate.Placement/Properties/AvailabilityZone/Value",
    "value": {
      "ValueType": "AvailabilityZone"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::EC2::LaunchTemplate.Placement/Properties/Tenancy/Value",
    "value": {
      "ValueType": "Ec2Tenancy"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::EC2::LaunchTemplate.SpotOptions/Properties/InstanceInterruptionBehavior/Value",
    "value": {
      "ValueType": "EC2SpotInstanceInitiatedShutdownBehavior"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::EC2::LaunchTemplate.SpotOptions/Properties/SpotInstanceType/Value",
    "value": {
      "ValueType": "EC2SpotInstanceType"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::EC2::LaunchTemplate.TagSpecification/Properties/ResourceType/Value",
    "value": {
      "ValueType": "LaunchTemplateTagSpecificationResourceType"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::EC2::SpotFleet.LaunchTemplateOverrides/Properties/AvailabilityZone/Value",
    "value": {
      "ValueType": "AvailabilityZone"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::EC2::SpotFleet.SpotPlacement/Properties/AvailabilityZone/Value",
    "value": {
      "ValueType": "AvailabilityZone"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::EC2::SpotFleet.EbsBlockDevice/Properties/VolumeType/Value",
    "value": {
      "ValueType": "EbsVolumeType"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::EC2::SpotFleet.SpotFleetRequestConfigData/Properties/AllocationStrategy/Value",
    "value": {
      "ValueType": "Ec2FleetSpotAllocationStrategy"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::EC2::SpotFleet.SpotFleetLaunchSpecification/Properties/InstanceType/Value",
    "value": {
      "ValueType": "Ec2InstanceType"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::ECS::TaskDefinition.ProxyConfiguration/Properties/Type/Value",
    "value": {
      "ValueType": "EcsTaskDefinitionProxyType"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::AutoScaling::LaunchConfiguration.BlockDevice/Properties/VolumeType/Value",
    "value": {
      "ValueType": "EbsVolumeType"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::Glue::Connection.PhysicalConnectionRequirements/Properties/AvailabilityZone/Value",
    "value": {
      "ValueType": "AvailabilityZone"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::RDS::DBInstance/Properties/AvailabilityZone/Value",
    "value": {
      "ValueType": "AvailabilityZone"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::OpsWorks::Layer.VolumeConfiguration/Properties/VolumeType/Value",
    "value": {
      "ValueType": "EbsVolumeType"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::OpsWorks::Instance/Properties/AvailabilityZone/Value",
    "value": {
      "ValueType": "AvailabilityZone"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::OpsWorks::Instance.EbsBlockDevice/Properties/VolumeType/Value",
    "value": {
      "ValueType": "EbsVolumeType"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::S3::Bucket.AccelerateConfiguration/Properties/AccelerationStatus/Value",
    "value": {
      "ValueType": "S3BucketAccelerationStatus"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::S3::Bucket.InventoryConfiguration/Properties/Id/Value",
    "value": {
      "ValueType": "S3BucketInventoryId"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::S3::Bucket.InventoryConfiguration/Properties/IncludedObjectVersions/Value",
    "value": {
      "ValueType": "S3BucketInventoryIncludedObjectVersions"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::S3::Bucket.InventoryConfiguration/Properties/ScheduleFrequency/Value",
    "value": {
      "ValueType": "S3BucketInventoryScheduleFrequency"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::S3::Bucket.RedirectAllRequestsTo/Properties/Protocol/Value",
    "value": {
      "ValueType": "HttpProtocol"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::S3::Bucket.ServerSideEncryptionByDefault/Properties/SSEAlgorithm/Value",
    "value": {
      "ValueType": "S3BucketSSEAlgorithm"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::S3::Bucket.TopicConfiguration/Properties/Event/Value",
    "value": {
      "ValueType": "S3BucketTopicConfigurationEvent"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::S3::Bucket.VersioningConfiguration/Properties/Status/Value",
    "value": {
      "ValueType": "S3BucketVersioningConfigurationStatus"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::WAF::Rule.Predicate/Properties/Type/Value",
    "value": {
      "ValueType": "PredicateType"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::WAFRegional::Rule.Predicate/Properties/Type/Value",
    "value": {
      "ValueType": "PredicateType"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::EC2::Instance.Ebs/Properties/VolumeType/Value",
    "value": {
      "ValueType": "EbsVolumeType"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::EC2::Instance.SsmAssociation/Properties/DocumentName/Value",
    "value": {
      "ValueType": "SsmDocumentName"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::EC2::SecurityGroup.Egress/Properties/CidrIp/Value",
    "value": {
      "ValueType": "CidrIp"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::EC2::SecurityGroup.Ingress/Properties/CidrIp/Value",
    "value": {
      "ValueType": "CidrIp"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::Route53::RecordSet.GeoLocation/Properties/ContinentCode/Value",
    "value": {
      "ValueType": "RecordSetGeoContinentCode"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::Route53::RecordSetGroup.GeoLocation/Properties/ContinentCode/Value",
    "value": {
      "ValueType": "RecordSetGeoContinentCode"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::Route53::RecordSetGroup.RecordSet/Properties/Failover/Value",
    "value": {
      "ValueType": "RecordSetFailover"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::Route53::RecordSetGroup.RecordSet/Properties/Type/Value",
    "value": {
      "ValueType": "RecordSetType"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::SES::ReceiptRule.Rule/Properties/TlsPolicy/Value",
    "value": {
      "ValueType": "SesReceiptRuleTlsPolicy"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::ServiceDiscovery::Service.DnsRecord/Properties/Type/Value",
    "value": {
      "ValueType": "ServiceDiscoveryDnsType"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::ServiceDiscovery::Service.HealthCheckConfig/Properties/Type/Value",
    "value": {
      "ValueType": "ServiceDiscoveryHealthCheckConfigType"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::ApiGateway::Authorizer/Properties/RestApiId/Value",
    "value": {
      "ValueType": "RestApiId"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::ApiGateway::BasePathMapping/Properties/RestApiId/Value",
    "value": {
      "ValueType": "RestApiId"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::ApiGateway::Deployment/Properties/RestApiId/Value",
    "value": {
      "ValueType": "RestApiId"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::ApiGateway::DocumentationPart/Properties/RestApiId/Value",
    "value": {
      "ValueType": "RestApiId"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::ApiGateway::DocumentationVersion/Properties/RestApiId/Value",
    "value": {
      "ValueType": "RestApiId"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::ApiGateway::GatewayResponse/Properties/RestApiId/Value",
    "value": {
      "ValueType": "RestApiId"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::ApiGateway::Method/Properties/RestApiId/Value",
    "value": {
      "ValueType": "RestApiId"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::ApiGateway::Model/Properties/RestApiId/Value",
    "value": {
      "ValueType": "RestApiId"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::ApiGateway::RequestValidator/Properties/RestApiId/Value",
    "value": {
      "ValueType": "RestApiId"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::ApiGateway::Resource/Properties/RestApiId/Value",
    "value": {
      "ValueType": "RestApiId"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::ApiGateway::Stage/Properties/RestApiId/Value",
    "value": {
      "ValueType": "RestApiId"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::AutoScaling::AutoScalingGroup/Properties/AvailabilityZones/Value",
    "value": {
      "ListValueType": "AvailabilityZones",
      "ValueType": "AvailabilityZone"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::AutoScaling::AutoScalingGroup/Properties/LaunchConfigurationName/Value",
    "value": {
      "ValueType": "LaunchConfigurationName"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::AutoScaling::AutoScalingGroup/Properties/LoadBalancerNames/Value",
    "value": {
      "ListValueType": "LoadBalancerNames",
      "ValueType": "LoadBalancerName"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::AutoScaling::AutoScalingGroup/Properties/TargetGroupARNs/Value",
    "value": {
      "ListValueType": "TargetGroupArns",
      "ValueType": "TargetGroupArn"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::AutoScaling::AutoScalingGroup/Properties/VPCZoneIdentifier/Value",
    "value": {
      "ListValueType": "SubnetIds",
      "ValueType": "SubnetId"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::AutoScaling::LaunchConfiguration/Properties/ImageId/Value",
    "value": {
      "ValueType": "ImageId"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::AutoScaling::LaunchConfiguration/Properties/KeyName/Value",
    "value": {
      "ValueType": "KeyPair"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::AutoScaling::LaunchConfiguration/Properties/PlacementTenancy/Value",
    "value": {
      "ValueType": "PlacementTenancy"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::CertificateManager::Certificate/Properties/ValidationMethod/Value",
    "value": {
      "ValueType": "CertificateValidationMethod"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::Config::AggregationAuthorization/Properties/AuthorizedAwsRegion/Value",
    "value": {
      "ValueType": "Region"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::CustomerGateway/Properties/Type/Value",
    "value": {
      "ValueType": "CustomerGatewayType"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::DHCPOptions/Properties/NetbiosNodeType/Value",
    "value": {
      "ValueType": "DHCPOptionsNetbiosNodeType"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::DirectoryService::MicrosoftAD/Properties/Edition/Value",
    "value": {
      "ValueType": "MicrosoftADEdition"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::DirectoryService::SimpleAD/Properties/Size/Value",
    "value": {
      "ValueType": "SimpleADSize"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::DMS::ReplicationInstance/Properties/AvailabilityZone/Value",
    "value": {
      "ValueType": "AvailabilityZone"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::DMS::Endpoint/Properties/EngineName/Value",
    "value": {
      "ValueType": "DmsEndpointEngineName"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::DMS::Endpoint/Properties/EndpointType/Value",
    "value": {
      "ValueType": "DmsEndpointType"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::DMS::Endpoint/Properties/SslMode/Value",
    "value": {
      "ValueType": "DmsEndpointSslMode"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::DocDB::DBCluster/Properties/EngineVersion/Value",
    "value": {
      "ValueType": "DocumentDBEngineVersion"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::DocDB::DBInstance/Properties/DBInstanceClass/Value",
    "value": {
      "ValueType": "DocumentDBInstanceClass"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::CapacityReservation/Properties/EndDateType/Value",
    "value": {
      "ValueType": "EC2CapacityReservationEndDateType"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::CapacityReservation/Properties/InstanceMatchCriteria/Value",
    "value": {
      "ValueType": "EC2CapacityReservationInstanceMatchCriteria"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::CapacityReservation/Properties/InstancePlatform/Value",
    "value": {
      "ValueType": "EC2CapacityReservationInstancePlatform"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::CapacityReservation/Properties/InstanceType/Value",
    "value": {
      "ValueType": "Ec2InstanceType"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::CapacityReservation/Properties/Tenancy/Value",
    "value": {
      "ValueType": "PlacementTenancy"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::Volume/Properties/VolumeType/Value",
    "value": {
      "ValueType": "EbsVolumeType"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::EIP/Properties/Domain/Value",
    "value": {
      "ValueType": "Ec2ElasticIpDomain"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::Host/Properties/AvailabilityZone/Value",
    "value": {
      "ValueType": "AvailabilityZone"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::Instance/Properties/AvailabilityZone/Value",
    "value": {
      "ValueType": "AvailabilityZone"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::Instance/Properties/KeyName/Value",
    "value": {
      "ValueType": "KeyPair"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::Instance/Properties/PlacementGroupName/Value",
    "value": {
      "ValueType": "PlacementGroup"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::Instance/Properties/PrivateIpAddress/Value",
    "value": {
      "ValueType": "PrivateIpAddress"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::Instance/Properties/SubnetId/Value",
    "value": {
      "ValueType": "SubnetId"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::Instance/Properties/Tenancy/Value",
    "value": {
      "ValueType": "Ec2Tenancy"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::NetworkAclEntry/Properties/CidrBlock/Value",
    "value": {
      "ValueType": "CidrIp"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::NetworkAclEntry/Properties/RuleAction/Value",
    "value": {
      "ValueType": "NetworkAclRuleAction"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::NetworkAclEntry/Properties/RuleNumber/Value",
    "value": {
      "ValueType": "NetworkAclRuleNumber"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::NetworkInterfacePermission/Properties/Permission/Value",
    "value": {
      "ValueType": "NetworkInterfacePermission"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::PlacementGroup/Properties/Strategy/Value",
    "value": {
      "ValueType": "PlacementGroupStrategy"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::Subnet/Properties/AvailabilityZone/Value",
    "value": {
      "ValueType": "AvailabilityZone"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::SubnetCidrBlock/Properties/SubnetId/Value",
    "value": {
      "ValueType": "SubnetId"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::VPC/Properties/InstanceTenancy/Value",
    "value": {
      "ValueType": "PlacementTenancy"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::ECS::TaskDefinition/Properties/NetworkMode/Value",
    "value": {
      "ValueType": "EcsNetworkMode"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EFS::FileSystem/Properties/PerformanceMode/Value",
    "value": {
      "ValueType": "EFSFileSystemPerformanceMode"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EFS::FileSystem/Properties/ThroughputMode/Value",
    "value": {
      "ValueType": "EFSFileSystemThroughputMode"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::EMR::Cluster.PlacementType/Properties/AvailabilityZone/Value",
    "value": {
      "ValueType": "AvailabilityZone"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::ElasticLoadBalancingV2::Listener/Properties/Port/Value",
    "value": {
      "ValueType": "LoadBalancerPort"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::ElasticLoadBalancing::LoadBalancer.Listeners/Properties/InstancePort/Value",
    "value": {
      "ValueType": "LoadBalancerPort"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::ElasticLoadBalancing::LoadBalancer.Listeners/Properties/LoadBalancerPort/Value",
    "value": {
      "ValueType": "LoadBalancerPort"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::ElasticLoadBalancing::LoadBalancer/Properties/AvailabilityZones/Value",
    "value": {
      "ListValueType": "AvailabilityZones",
      "ValueType": "AvailabilityZone"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::ElasticLoadBalancing::LoadBalancer/Properties/Subnets/Value",
    "value": {
      "ListValueType": "SubnetIds",
      "ValueType": "SubnetId"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::ElasticLoadBalancingV2::Listener/Properties/LoadBalancerArn/Value",
    "value": {
      "ValueType": "LoadBalancerV2Arn"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::ElasticLoadBalancingV2::LoadBalancer/Properties/Subnets/Value",
    "value": {
      "ListValueType": "SubnetIds",
      "ValueType": "SubnetId"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::ElasticLoadBalancingV2::TargetGroup.TargetDescription/Properties/AvailabilityZone/Value",
    "value": {
      "ValueType": "AvailabilityZoneWithAll"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::ElasticLoadBalancingV2::TargetGroup/Properties/HealthCheckTimeoutSeconds/Value",
    "value": {
      "ValueType": "TargetGroupHealthCheckTimeoutSeconds"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::ElasticLoadBalancingV2::TargetGroup/Properties/HealthyThresholdCount/Value",
    "value": {
      "ValueType": "TargetGroupHealthyThresholdCount"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::Lambda::Function/Properties/Runtime/Value",
    "value": {
      "ValueType": "LambdaRuntime"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::RDS::DBInstance/Properties/MonitoringInterval/Value",
    "value": {
      "ValueType": "RdsInstanceMonitoringInterval"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::RDS::DBInstance/Properties/PerformanceInsightsRetentionPeriod/Value",
    "value": {
      "ValueType": "PerformanceInsightsRetentionPeriod"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::Route53::RecordSet/Properties/Failover/Value",
    "value": {
      "ValueType": "RecordSetFailover"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::Route53::RecordSet/Properties/Type/Value",
    "value": {
      "ValueType": "RecordSetType"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::Route53Resolver::ResolverEndpoint/Properties/Direction/Value",
    "value": {
      "ValueType": "Route53ResolverEndpointDirection"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::Route53Resolver::ResolverRule/Properties/RuleType/Value",
    "value": {
      "ValueType": "Route53ResolverRuleType"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::AutoScaling::LaunchConfiguration/Properties/InstanceType/Value",
    "value": {
      "ValueType": "Ec2InstanceType"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::CodePipeline::Webhook/Properties/Authentication/Value",
    "value": {
      "ValueType": "CodePipelineWehbookAuthentication"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::DAX::Cluster/Properties/NodeType/Value",
    "value": {
      "ValueType": "DAXInstanceType"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::DAX::Cluster/Properties/AvailabilityZones/Value",
    "value": {
      "ListValueType": "AvailabilityZones",
      "ValueType": "AvailabilityZone"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::RDS::DBCluster/Properties/AvailabilityZones/Value",
    "value": {
      "ListValueType": "AvailabilityZones",
      "ValueType": "AvailabilityZone"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::Host/Properties/AutoPlacement/Value",
    "value": {
      "ValueType": "Ec2HostAutoPlacement"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::Instance/Properties/InstanceType/Value",
    "value": {
      "ValueType": "Ec2InstanceType"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::LaunchTemplate/Properties/LaunchTemplateName/Value",
    "value": {
      "ValueType": "LaunchTemplateName"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::SecurityGroupEgress/Properties/CidrIp/Value",
    "value": {
      "ValueType": "CidrIp"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::SecurityGroupIngress/Properties/CidrIp/Value",
    "value": {
      "ValueType": "CidrIp"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::TransitGateway/Properties/AutoAcceptSharedAttachments/Value",
    "value": {
      "ValueType": "TransitGatewayEnabled"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::TransitGateway/Properties/DefaultRouteTableAssociation/Value",
    "value": {
      "ValueType": "TransitGatewayEnabled"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::TransitGateway/Properties/DefaultRouteTablePropagation/Value",
    "value": {
      "ValueType": "TransitGatewayEnabled"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::TransitGateway/Properties/DnsSupport/Value",
    "value": {
      "ValueType": "TransitGatewayEnabled"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::TransitGateway/Properties/VpnEcmpSupport/Value",
    "value": {
      "ValueType": "TransitGatewayEnabled"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::VPCEndpoint/Properties/VpcEndpointType/Value",
    "value": {
      "ValueType": "VpcEndpointType"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::VPCEndpointConnectionNotification/Properties/ConnectionEvents/Value",
    "value": {
      "ValueType": "VpcEndpointConnectionEvents"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::VPNConnection/Properties/Type/Value",
    "value": {
      "ValueType": "VpnType"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::EC2::VPNGateway/Properties/Type/Value",
    "value": {
      "ValueType": "VpnType"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::Neptune::DBInstance/Properties/DBInstanceClass/Value",
    "value": {
      "ValueType": "NeptuneInstanceClass"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::Redshift::Cluster/Properties/ClusterType/Value",
    "value": {
      "ValueType": "RedshiftClusterType"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::Redshift::Cluster/Properties/ClusterVersion/Value",
    "value": {
      "ValueType": "RedshiftClusterVersion"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::Redshift::Cluster/Properties/NodeType/Value",
    "value": {
      "ValueType": "RedshiftInstanceType"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::S3::Bucket/Properties/AccessControl/Value",
    "value": {
      "ValueType": "S3BucketAccessControl"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::SecretsManager::SecretTargetAttachment/Properties/TargetType/Value",
    "value": {
      "ValueType": "SecretsManagerTargetType"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::SNS::Subscription/Properties/Protocol/Value",
    "value": {
      "ValueType": "SnsSubscriptionProtocol"
    }
  },
  {
    "op": "add",
    "path": "/PropertyTypes/AWS::EC2::Instance.Ebs/Properties/Iops/Value",
    "value": {
      "ValueType": "EbsIops"
    }
  },
  {
    "op": "add",
    "path": "/ResourceTypes/AWS::Backup::BackupVault/Properties/EncryptionKeyArn/Value",
    "value": {
      "ValueType": "KmsKey.Arn"
    }
  }
]
