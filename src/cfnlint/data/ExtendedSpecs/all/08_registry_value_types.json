[
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AccessAnalyzer::Analyzer.AnalyzerName",
    "value": {
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AccessAnalyzer::Analyzer.Arn",
    "value": {
      "StringMax": 1600,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AccessAnalyzer::Analyzer.Tag.Key",
    "value": {
      "StringMax": 127,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AccessAnalyzer::Analyzer.Tag.Value",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.ConnectorProfileArn",
    "value": {
      "AllowedPattern": "arn:aws:kms:.*:[0-9]+:.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.ConnectorProfileName",
    "value": {
      "AllowedPattern": "[\\w/!@#+=.-]+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.KMSArn",
    "value": {
      "AllowedPattern": "arn:aws:kms:.*:[0-9]+:.*",
      "StringMax": 2048,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.ConnectorType",
    "value": {
      "AllowedValues": [
        "Salesforce",
        "Singular",
        "Slack",
        "Redshift",
        "Marketo",
        "Googleanalytics",
        "Zendesk",
        "Servicenow",
        "Datadog",
        "Trendmicro",
        "Snowflake",
        "Dynatrace",
        "Infornexus",
        "Amplitude",
        "Veeva"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.ConnectionMode",
    "value": {
      "AllowedValues": [
        "Public",
        "Private"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.DatadogConnectorProfileProperties.InstanceUrl",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.DynatraceConnectorProfileProperties.InstanceUrl",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.InforNexusConnectorProfileProperties.InstanceUrl",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.MarketoConnectorProfileProperties.InstanceUrl",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.RedshiftConnectorProfileProperties.DatabaseUrl",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.RedshiftConnectorProfileProperties.BucketName",
    "value": {
      "AllowedPattern": "\\S+",
      "StringMax": 63,
      "StringMin": 3
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.RedshiftConnectorProfileProperties.RoleArn",
    "value": {
      "AllowedPattern": "arn:aws:iam:.*:[0-9]+:.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.SalesforceConnectorProfileProperties.InstanceUrl",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.ServiceNowConnectorProfileProperties.InstanceUrl",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.SlackConnectorProfileProperties.InstanceUrl",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.SnowflakeConnectorProfileProperties.Warehouse",
    "value": {
      "AllowedPattern": "[\\s\\w/!@#+=.-]*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.SnowflakeConnectorProfileProperties.Stage",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.SnowflakeConnectorProfileProperties.BucketName",
    "value": {
      "AllowedPattern": "\\S+",
      "StringMax": 63,
      "StringMin": 3
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.SnowflakeConnectorProfileProperties.PrivateLinkServiceName",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.SnowflakeConnectorProfileProperties.AccountName",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.SnowflakeConnectorProfileProperties.Region",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.VeevaConnectorProfileProperties.InstanceUrl",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.ZendeskConnectorProfileProperties.InstanceUrl",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.AmplitudeConnectorProfileCredentials.ApiKey",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.AmplitudeConnectorProfileCredentials.SecretKey",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.DatadogConnectorProfileCredentials.ApiKey",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.DatadogConnectorProfileCredentials.ApplicationKey",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.DynatraceConnectorProfileCredentials.ApiToken",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.GoogleAnalyticsConnectorProfileCredentials.ClientId",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.GoogleAnalyticsConnectorProfileCredentials.ClientSecret",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.GoogleAnalyticsConnectorProfileCredentials.AccessToken",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.GoogleAnalyticsConnectorProfileCredentials.RefreshToken",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.InforNexusConnectorProfileCredentials.AccessKeyId",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.InforNexusConnectorProfileCredentials.UserId",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.InforNexusConnectorProfileCredentials.SecretAccessKey",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.InforNexusConnectorProfileCredentials.Datakey",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.MarketoConnectorProfileCredentials.ClientId",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.MarketoConnectorProfileCredentials.ClientSecret",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.MarketoConnectorProfileCredentials.AccessToken",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.RedshiftConnectorProfileCredentials.Username",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.RedshiftConnectorProfileCredentials.Password",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.SalesforceConnectorProfileCredentials.AccessToken",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.SalesforceConnectorProfileCredentials.RefreshToken",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.SalesforceConnectorProfileCredentials.ClientCredentialsArn",
    "value": {
      "AllowedPattern": "arn:aws:secretsmanager:.*:[0-9]+:.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.ServiceNowConnectorProfileCredentials.Username",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.ServiceNowConnectorProfileCredentials.Password",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.SingularConnectorProfileCredentials.ApiKey",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.SlackConnectorProfileCredentials.ClientId",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.SlackConnectorProfileCredentials.ClientSecret",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.SlackConnectorProfileCredentials.AccessToken",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.SnowflakeConnectorProfileCredentials.Username",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.SnowflakeConnectorProfileCredentials.Password",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.TrendmicroConnectorProfileCredentials.ApiSecretKey",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.VeevaConnectorProfileCredentials.Username",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.VeevaConnectorProfileCredentials.Password",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.ZendeskConnectorProfileCredentials.ClientId",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.ZendeskConnectorProfileCredentials.ClientSecret",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.ZendeskConnectorProfileCredentials.AccessToken",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::ConnectorProfile.CredentialsArn",
    "value": {
      "AllowedPattern": "arn:aws:.*:.*:[0-9]+:.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.FlowArn",
    "value": {
      "AllowedPattern": "arn:aws:appflow:.*:[0-9]+:.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.FlowName",
    "value": {
      "AllowedPattern": "[a-zA-Z0-9][\\w!@#.-]+",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.Description",
    "value": {
      "AllowedPattern": "[\\w!@#\\-.?,\\s]*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.KMSArn",
    "value": {
      "AllowedPattern": "arn:aws:kms:.*:[0-9]+:.*",
      "StringMax": 2048,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.TriggerConfig.TriggerType",
    "value": {
      "AllowedValues": [
        "Scheduled",
        "Event",
        "OnDemand"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.ScheduledTriggerProperties.ScheduleExpression",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.ScheduledTriggerProperties.DataPullMode",
    "value": {
      "AllowedValues": [
        "Incremental",
        "Complete"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.SourceFlowConfig.ConnectorType",
    "value": {
      "AllowedValues": [
        "Salesforce",
        "Singular",
        "Slack",
        "Redshift",
        "S3",
        "Marketo",
        "Googleanalytics",
        "Zendesk",
        "Servicenow",
        "Datadog",
        "Trendmicro",
        "Snowflake",
        "Dynatrace",
        "Infornexus",
        "Amplitude",
        "Veeva",
        "EventBridge",
        "Upsolver"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.SourceFlowConfig.ConnectorProfileName",
    "value": {
      "AllowedPattern": "[\\w/!@#+=.-]+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.AmplitudeSourceProperties.Object",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.DatadogSourceProperties.Object",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.DynatraceSourceProperties.Object",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.GoogleAnalyticsSourceProperties.Object",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.InforNexusSourceProperties.Object",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.MarketoSourceProperties.Object",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.S3SourceProperties.BucketName",
    "value": {
      "AllowedPattern": "\\S+",
      "StringMax": 63,
      "StringMin": 3
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.SalesforceSourceProperties.Object",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.ServiceNowSourceProperties.Object",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.SingularSourceProperties.Object",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.SlackSourceProperties.Object",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.TrendmicroSourceProperties.Object",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.VeevaSourceProperties.Object",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.ZendeskSourceProperties.Object",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.DestinationFlowConfig.ConnectorType",
    "value": {
      "AllowedValues": [
        "Salesforce",
        "Singular",
        "Slack",
        "Redshift",
        "S3",
        "Marketo",
        "Googleanalytics",
        "Zendesk",
        "Servicenow",
        "Datadog",
        "Trendmicro",
        "Snowflake",
        "Dynatrace",
        "Infornexus",
        "Amplitude",
        "Veeva",
        "EventBridge",
        "Upsolver"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.DestinationFlowConfig.ConnectorProfileName",
    "value": {
      "AllowedPattern": "[\\w/!@#+=.-]+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.RedshiftDestinationProperties.Object",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.RedshiftDestinationProperties.IntermediateBucketName",
    "value": {
      "AllowedPattern": "\\S+",
      "StringMax": 63,
      "StringMin": 3
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.ErrorHandlingConfig.BucketName",
    "value": {
      "AllowedPattern": "\\S+",
      "StringMax": 63,
      "StringMin": 3
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.S3DestinationProperties.BucketName",
    "value": {
      "AllowedPattern": "\\S+",
      "StringMax": 63,
      "StringMin": 3
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.S3OutputFormatConfig.FileType",
    "value": {
      "AllowedValues": [
        "CSV",
        "JSON",
        "PARQUET"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.PrefixConfig.PrefixType",
    "value": {
      "AllowedValues": [
        "FILENAME",
        "PATH",
        "PATH_AND_FILENAME"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.PrefixConfig.PrefixFormat",
    "value": {
      "AllowedValues": [
        "YEAR",
        "MONTH",
        "DAY",
        "HOUR",
        "MINUTE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.AggregationConfig.AggregationType",
    "value": {
      "AllowedValues": [
        "None",
        "SingleFile"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.SalesforceDestinationProperties.Object",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.SnowflakeDestinationProperties.Object",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.SnowflakeDestinationProperties.IntermediateBucketName",
    "value": {
      "AllowedPattern": "\\S+",
      "StringMax": 63,
      "StringMin": 3
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.EventBridgeDestinationProperties.Object",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.UpsolverDestinationProperties.BucketName",
    "value": {
      "AllowedPattern": "^(upsolver-appflow)\\S*",
      "StringMax": 63,
      "StringMin": 16
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.UpsolverS3OutputFormatConfig.FileType",
    "value": {
      "AllowedValues": [
        "CSV",
        "JSON",
        "PARQUET"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.ConnectorOperator.Amplitude",
    "value": {
      "AllowedValues": [
        "BETWEEN"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.ConnectorOperator.Datadog",
    "value": {
      "AllowedValues": [
        "PROJECTION",
        "BETWEEN",
        "EQUAL_TO",
        "ADDITION",
        "MULTIPLICATION",
        "DIVISION",
        "SUBTRACTION",
        "MASK_ALL",
        "MASK_FIRST_N",
        "MASK_LAST_N",
        "VALIDATE_NON_NULL",
        "VALIDATE_NON_ZERO",
        "VALIDATE_NON_NEGATIVE",
        "VALIDATE_NUMERIC",
        "NO_OP"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.ConnectorOperator.Dynatrace",
    "value": {
      "AllowedValues": [
        "PROJECTION",
        "BETWEEN",
        "EQUAL_TO",
        "ADDITION",
        "MULTIPLICATION",
        "DIVISION",
        "SUBTRACTION",
        "MASK_ALL",
        "MASK_FIRST_N",
        "MASK_LAST_N",
        "VALIDATE_NON_NULL",
        "VALIDATE_NON_ZERO",
        "VALIDATE_NON_NEGATIVE",
        "VALIDATE_NUMERIC",
        "NO_OP"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.ConnectorOperator.GoogleAnalytics",
    "value": {
      "AllowedValues": [
        "PROJECTION",
        "BETWEEN"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.ConnectorOperator.InforNexus",
    "value": {
      "AllowedValues": [
        "PROJECTION",
        "BETWEEN",
        "EQUAL_TO",
        "ADDITION",
        "MULTIPLICATION",
        "DIVISION",
        "SUBTRACTION",
        "MASK_ALL",
        "MASK_FIRST_N",
        "MASK_LAST_N",
        "VALIDATE_NON_NULL",
        "VALIDATE_NON_ZERO",
        "VALIDATE_NON_NEGATIVE",
        "VALIDATE_NUMERIC",
        "NO_OP"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.ConnectorOperator.Marketo",
    "value": {
      "AllowedValues": [
        "PROJECTION",
        "LESS_THAN",
        "GREATER_THAN",
        "BETWEEN",
        "ADDITION",
        "MULTIPLICATION",
        "DIVISION",
        "SUBTRACTION",
        "MASK_ALL",
        "MASK_FIRST_N",
        "MASK_LAST_N",
        "VALIDATE_NON_NULL",
        "VALIDATE_NON_ZERO",
        "VALIDATE_NON_NEGATIVE",
        "VALIDATE_NUMERIC",
        "NO_OP"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.ConnectorOperator.S3",
    "value": {
      "AllowedValues": [
        "PROJECTION",
        "LESS_THAN",
        "GREATER_THAN",
        "BETWEEN",
        "LESS_THAN_OR_EQUAL_TO",
        "GREATER_THAN_OR_EQUAL_TO",
        "EQUAL_TO",
        "NOT_EQUAL_TO",
        "ADDITION",
        "MULTIPLICATION",
        "DIVISION",
        "SUBTRACTION",
        "MASK_ALL",
        "MASK_FIRST_N",
        "MASK_LAST_N",
        "VALIDATE_NON_NULL",
        "VALIDATE_NON_ZERO",
        "VALIDATE_NON_NEGATIVE",
        "VALIDATE_NUMERIC",
        "NO_OP"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.ConnectorOperator.Salesforce",
    "value": {
      "AllowedValues": [
        "PROJECTION",
        "LESS_THAN",
        "CONTAINS",
        "GREATER_THAN",
        "BETWEEN",
        "LESS_THAN_OR_EQUAL_TO",
        "GREATER_THAN_OR_EQUAL_TO",
        "EQUAL_TO",
        "NOT_EQUAL_TO",
        "ADDITION",
        "MULTIPLICATION",
        "DIVISION",
        "SUBTRACTION",
        "MASK_ALL",
        "MASK_FIRST_N",
        "MASK_LAST_N",
        "VALIDATE_NON_NULL",
        "VALIDATE_NON_ZERO",
        "VALIDATE_NON_NEGATIVE",
        "VALIDATE_NUMERIC",
        "NO_OP"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.ConnectorOperator.ServiceNow",
    "value": {
      "AllowedValues": [
        "PROJECTION",
        "LESS_THAN",
        "CONTAINS",
        "GREATER_THAN",
        "BETWEEN",
        "LESS_THAN_OR_EQUAL_TO",
        "GREATER_THAN_OR_EQUAL_TO",
        "EQUAL_TO",
        "NOT_EQUAL_TO",
        "ADDITION",
        "MULTIPLICATION",
        "DIVISION",
        "SUBTRACTION",
        "MASK_ALL",
        "MASK_FIRST_N",
        "MASK_LAST_N",
        "VALIDATE_NON_NULL",
        "VALIDATE_NON_ZERO",
        "VALIDATE_NON_NEGATIVE",
        "VALIDATE_NUMERIC",
        "NO_OP"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.ConnectorOperator.Singular",
    "value": {
      "AllowedValues": [
        "PROJECTION",
        "EQUAL_TO",
        "ADDITION",
        "MULTIPLICATION",
        "DIVISION",
        "SUBTRACTION",
        "MASK_ALL",
        "MASK_FIRST_N",
        "MASK_LAST_N",
        "VALIDATE_NON_NULL",
        "VALIDATE_NON_ZERO",
        "VALIDATE_NON_NEGATIVE",
        "VALIDATE_NUMERIC",
        "NO_OP"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.ConnectorOperator.Slack",
    "value": {
      "AllowedValues": [
        "PROJECTION",
        "BETWEEN",
        "EQUAL_TO",
        "ADDITION",
        "MULTIPLICATION",
        "DIVISION",
        "SUBTRACTION",
        "MASK_ALL",
        "MASK_FIRST_N",
        "MASK_LAST_N",
        "VALIDATE_NON_NULL",
        "VALIDATE_NON_ZERO",
        "VALIDATE_NON_NEGATIVE",
        "VALIDATE_NUMERIC",
        "NO_OP"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.ConnectorOperator.Trendmicro",
    "value": {
      "AllowedValues": [
        "PROJECTION",
        "EQUAL_TO",
        "ADDITION",
        "MULTIPLICATION",
        "DIVISION",
        "SUBTRACTION",
        "MASK_ALL",
        "MASK_FIRST_N",
        "MASK_LAST_N",
        "VALIDATE_NON_NULL",
        "VALIDATE_NON_ZERO",
        "VALIDATE_NON_NEGATIVE",
        "VALIDATE_NUMERIC",
        "NO_OP"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.ConnectorOperator.Veeva",
    "value": {
      "AllowedValues": [
        "PROJECTION",
        "LESS_THAN",
        "GREATER_THAN",
        "BETWEEN",
        "LESS_THAN_OR_EQUAL_TO",
        "GREATER_THAN_OR_EQUAL_TO",
        "EQUAL_TO",
        "NOT_EQUAL_TO",
        "ADDITION",
        "MULTIPLICATION",
        "DIVISION",
        "SUBTRACTION",
        "MASK_ALL",
        "MASK_FIRST_N",
        "MASK_LAST_N",
        "VALIDATE_NON_NULL",
        "VALIDATE_NON_ZERO",
        "VALIDATE_NON_NEGATIVE",
        "VALIDATE_NUMERIC",
        "NO_OP"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.ConnectorOperator.Zendesk",
    "value": {
      "AllowedValues": [
        "PROJECTION",
        "GREATER_THAN",
        "ADDITION",
        "MULTIPLICATION",
        "DIVISION",
        "SUBTRACTION",
        "MASK_ALL",
        "MASK_FIRST_N",
        "MASK_LAST_N",
        "VALIDATE_NON_NULL",
        "VALIDATE_NON_ZERO",
        "VALIDATE_NON_NEGATIVE",
        "VALIDATE_NUMERIC",
        "NO_OP"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.Task.TaskType",
    "value": {
      "AllowedValues": [
        "Arithmetic",
        "Filter",
        "Map",
        "Mask",
        "Merge",
        "Truncate",
        "Validate"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.TaskPropertiesObject.Key",
    "value": {
      "AllowedValues": [
        "VALUE",
        "VALUES",
        "DATA_TYPE",
        "UPPER_BOUND",
        "LOWER_BOUND",
        "SOURCE_DATA_TYPE",
        "DESTINATION_DATA_TYPE",
        "VALIDATION_ACTION",
        "MASK_VALUE",
        "MASK_LENGTH",
        "TRUNCATE_LENGTH",
        "MATH_OPERATION_FIELDS_ORDER",
        "CONCAT_FORMAT",
        "SUBFIELD_CATEGORY_MAP"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.TaskPropertiesObject.Value",
    "value": {
      "AllowedPattern": ".+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AppFlow::Flow.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ApplicationInsights::Application.ResourceGroupName",
    "value": {
      "AllowedPattern": "[a-zA-Z0-9.-_]*",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ApplicationInsights::Application.OpsItemSNSTopicArn",
    "value": {
      "AllowedPattern": "^arn:aws(-[\\w]+)*:[\\w\\d-]+:([\\w\\d-]*)?:[\\w\\d_-]*([:/].+)*$",
      "StringMax": 300,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ApplicationInsights::Application.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ApplicationInsights::Application.CustomComponent.ComponentName",
    "value": {
      "AllowedPattern": "^[\\d\\w-_.+]*$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ApplicationInsights::Application.CustomComponent.ResourceList",
    "value": {
      "AllowedPattern": "^arn:aws(-[\\w]+)*:[\\w\\d-]+:([\\w\\d-]*)?:[\\w\\d_-]*([:/].+)*$",
      "StringMax": 300,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ApplicationInsights::Application.LogPatternSet.PatternSetName",
    "value": {
      "AllowedPattern": "[a-zA-Z0-9.-_]*",
      "StringMax": 30,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ApplicationInsights::Application.LogPattern.PatternName",
    "value": {
      "AllowedPattern": "[a-zA-Z0-9.-_]*",
      "StringMax": 50,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ApplicationInsights::Application.LogPattern.Pattern",
    "value": {
      "StringMax": 50,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ApplicationInsights::Application.ComponentMonitoringSetting.ComponentName",
    "value": {
      "AllowedPattern": "^[\\d\\w-_.+]*$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ApplicationInsights::Application.ComponentMonitoringSetting.ComponentARN",
    "value": {
      "AllowedPattern": "^arn:aws(-[\\w]+)*:[\\w\\d-]+:([\\w\\d-]*)?:[\\w\\d_-]*([:/].+)*$",
      "StringMax": 300,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ApplicationInsights::Application.ComponentMonitoringSetting.Tier",
    "value": {
      "AllowedValues": [
        "DOT_NET_WORKER",
        "DOT_NET_WEB",
        "DOT_NET_CORE",
        "SQL_SERVER",
        "SQL_SERVER_ALWAYSON_AVAILABILITY_GROUP",
        "MYSQL",
        "POSTGRESQL",
        "DEFAULT",
        "CUSTOM",
        "JAVA_JMX",
        "ORACLE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ApplicationInsights::Application.ComponentMonitoringSetting.ComponentConfigurationMode",
    "value": {
      "AllowedValues": [
        "DEFAULT",
        "DEFAULT_WITH_OVERWRITE",
        "CUSTOM"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ApplicationInsights::Application.Log.LogGroupName",
    "value": {
      "AllowedPattern": "[\\.\\-_/#A-Za-z0-9]+",
      "StringMax": 512,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ApplicationInsights::Application.Log.LogPath",
    "value": {
      "AllowedPattern": "^([a-zA-Z]:\\\\[\\\\\\S|*\\S]?.*|/[^\"']*)$",
      "StringMax": 260,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ApplicationInsights::Application.Log.LogType",
    "value": {
      "AllowedValues": [
        "SQL_SERVER",
        "MYSQL",
        "MYSQL_SLOW_QUERY",
        "POSTGRESQL",
        "IIS",
        "APPLICATION",
        "WINDOWS_EVENTS",
        "WINDOWS_EVENTS_GENERIC_ERRORS",
        "SQL_SERVER_ALWAYSON_AVAILABILITY_GROUP",
        "DEFAULT",
        "CUSTOM",
        "STEP_FUNCTION",
        "API_GATEWAY_ACCESS",
        "API_GATEWAY_EXECUTION"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ApplicationInsights::Application.Log.Encoding",
    "value": {
      "AllowedValues": [
        "utf-8",
        "utf-16",
        "ascii"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ApplicationInsights::Application.Log.PatternSet",
    "value": {
      "AllowedPattern": "[a-zA-Z0-9.-_]*",
      "StringMax": 30,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ApplicationInsights::Application.WindowsEvent.LogGroupName",
    "value": {
      "AllowedPattern": "[\\.\\-_/#A-Za-z0-9]+",
      "StringMax": 512,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ApplicationInsights::Application.WindowsEvent.EventName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9_ \\\\/-]$",
      "StringMax": 260,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ApplicationInsights::Application.WindowsEvent.EventLevels",
    "value": {
      "AllowedValues": [
        "INFORMATION",
        "WARNING",
        "ERROR",
        "CRITICAL",
        "VERBOSE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ApplicationInsights::Application.WindowsEvent.PatternSet",
    "value": {
      "AllowedPattern": "[a-zA-Z0-9.-_]*",
      "StringMax": 30,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ApplicationInsights::Application.Alarm.AlarmName",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ApplicationInsights::Application.Alarm.Severity",
    "value": {
      "AllowedValues": [
        "HIGH",
        "MEDIUM",
        "LOW"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ApplicationInsights::Application.SubComponentTypeConfiguration.SubComponentType",
    "value": {
      "AllowedValues": [
        "AWS::EC2::Instance",
        "AWS::EC2::Volume"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Athena::DataCatalog.Name",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Athena::DataCatalog.Description",
    "value": {
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Athena::DataCatalog.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Athena::DataCatalog.Type",
    "value": {
      "AllowedValues": [
        "LAMBDA",
        "GLUE",
        "HIVE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Athena::NamedQuery.Name",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Athena::NamedQuery.Database",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Athena::NamedQuery.Description",
    "value": {
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Athena::NamedQuery.QueryString",
    "value": {
      "StringMax": 262144,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Athena::NamedQuery.WorkGroup",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Athena::WorkGroup.Name",
    "value": {
      "AllowedPattern": "[a-zA-Z0-9._-]{1,128}",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Athena::WorkGroup.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Athena::WorkGroup.EncryptionConfiguration.EncryptionOption",
    "value": {
      "AllowedValues": [
        "SSE_S3",
        "SSE_KMS",
        "CSE_KMS"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Athena::WorkGroup.State",
    "value": {
      "AllowedValues": [
        "ENABLED",
        "DISABLED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AuditManager::Assessment.FrameworkId",
    "value": {
      "AllowedPattern": "^([a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}|.*\\S.*)$",
      "StringMax": 36,
      "StringMin": 32
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AuditManager::Assessment.AssessmentId",
    "value": {
      "AllowedPattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
      "StringMax": 36,
      "StringMin": 36
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AuditManager::Assessment.AWSAccount.Id",
    "value": {
      "AllowedPattern": "^[0-9]{12}$",
      "StringMax": 12,
      "StringMin": 12
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AuditManager::Assessment.AWSAccount.EmailAddress",
    "value": {
      "AllowedPattern": "^.*@.*$",
      "StringMax": 320,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AuditManager::Assessment.AWSAccount.Name",
    "value": {
      "AllowedPattern": "^[\\u0020-\\u007E]+$",
      "StringMax": 50,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AuditManager::Assessment.Arn",
    "value": {
      "AllowedPattern": "^arn:.*:auditmanager:.*",
      "StringMax": 2048,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AuditManager::Assessment.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AuditManager::Assessment.Delegation.ControlSetId",
    "value": {
      "AllowedPattern": "^[\\w\\W\\s\\S]*$",
      "StringMax": 300,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AuditManager::Assessment.Delegation.CreatedBy",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9\\s-_()\\[\\]]+$",
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AuditManager::Assessment.Delegation.RoleArn",
    "value": {
      "AllowedPattern": "^arn:.*:iam:.*",
      "StringMax": 2048,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AuditManager::Assessment.Delegation.AssessmentName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9-_\\.]+$",
      "StringMax": 127,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AuditManager::Assessment.Delegation.Comment",
    "value": {
      "AllowedPattern": "^[\\w\\W\\s\\S]*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AuditManager::Assessment.Delegation.Id",
    "value": {
      "AllowedPattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
      "StringMax": 36,
      "StringMin": 36
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AuditManager::Assessment.Delegation.RoleType",
    "value": {
      "AllowedValues": [
        "PROCESS_OWNER",
        "RESOURCE_OWNER"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AuditManager::Assessment.Delegation.AssessmentId",
    "value": {
      "AllowedPattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
      "StringMax": 36,
      "StringMin": 36
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AuditManager::Assessment.Delegation.Status",
    "value": {
      "AllowedValues": [
        "IN_PROGRESS",
        "UNDER_REVIEW",
        "COMPLETE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AuditManager::Assessment.Role.RoleArn",
    "value": {
      "AllowedPattern": "^arn:.*:iam:.*",
      "StringMax": 2048,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AuditManager::Assessment.Role.RoleType",
    "value": {
      "AllowedValues": [
        "PROCESS_OWNER",
        "RESOURCE_OWNER"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AuditManager::Assessment.AssessmentReportsDestination.DestinationType",
    "value": {
      "AllowedValues": [
        "S3"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AuditManager::Assessment.Status",
    "value": {
      "AllowedValues": [
        "ACTIVE",
        "INACTIVE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::AuditManager::Assessment.Name",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9-_\\.]+$",
      "StringMax": 127,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CE::CostCategory.Arn",
    "value": {
      "AllowedPattern": "^arn:aws[-a-z0-9]*:[a-z0-9]+:[-a-z0-9]*:[0-9]{12}:[-a-zA-Z0-9/:_]+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CE::CostCategory.EffectiveStart",
    "value": {
      "AllowedPattern": "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(([+-]\\d\\d:\\d\\d)|Z)$",
      "StringMax": 25,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CE::CostCategory.Name",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CE::CostCategory.RuleVersion",
    "value": {
      "AllowedValues": [
        "CostCategoryExpression.v1"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Cassandra::Keyspace.KeyspaceName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Cassandra::Table.KeyspaceName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Cassandra::Table.TableName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Cassandra::Table.Column.ColumnName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Cassandra::Table.ClusteringKeyColumn.OrderBy",
    "value": {
      "AllowedValues": [
        "ASC",
        "DESC"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Cassandra::Table.BillingMode.Mode",
    "value": {
      "AllowedValues": [
        "PROVISIONED",
        "ON_DEMAND"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Chatbot::SlackChannelConfiguration.SlackWorkspaceId",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Chatbot::SlackChannelConfiguration.SlackChannelId",
    "value": {
      "AllowedPattern": "^[A-Za-z0-9]+$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Chatbot::SlackChannelConfiguration.ConfigurationName",
    "value": {
      "AllowedPattern": "^[A-Za-z0-9-_]+$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Chatbot::SlackChannelConfiguration.IamRoleArn",
    "value": {
      "AllowedPattern": "^arn:(aws[a-zA-Z-]*)?:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Chatbot::SlackChannelConfiguration.SnsTopicArns",
    "value": {
      "AllowedPattern": "^arn:(aws[a-zA-Z-]*)?:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Chatbot::SlackChannelConfiguration.LoggingLevel",
    "value": {
      "AllowedPattern": "^(ERROR|INFO|NONE)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Chatbot::SlackChannelConfiguration.Arn",
    "value": {
      "AllowedPattern": "^arn:(aws[a-zA-Z-]*)?:chatbot:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFormation::ModuleDefaultVersion.Arn",
    "value": {
      "AllowedPattern": "^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/module/.+/[0-9]{8}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFormation::ModuleDefaultVersion.ModuleName",
    "value": {
      "AllowedPattern": "^[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::MODULE"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFormation::ModuleDefaultVersion.VersionId",
    "value": {
      "AllowedPattern": "^[0-9]{8}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFormation::ModuleVersion.Arn",
    "value": {
      "AllowedPattern": "^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/module/.+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFormation::ModuleVersion.Description",
    "value": {
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFormation::ModuleVersion.ModuleName",
    "value": {
      "AllowedPattern": "^[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::MODULE"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFormation::ModuleVersion.Schema",
    "value": {
      "StringMax": 16777216,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFormation::ModuleVersion.VersionId",
    "value": {
      "AllowedPattern": "^[0-9]{8}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFormation::ModuleVersion.Visibility",
    "value": {
      "AllowedValues": [
        "PRIVATE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFormation::StackSet.StackSetName",
    "value": {
      "AllowedPattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,127}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFormation::StackSet.AdministrationRoleARN",
    "value": {
      "StringMax": 2048,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFormation::StackSet.Capabilities",
    "value": {
      "AllowedValues": [
        "CAPABILITY_IAM",
        "CAPABILITY_NAMED_IAM",
        "CAPABILITY_AUTO_EXPAND"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFormation::StackSet.Description",
    "value": {
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFormation::StackSet.ExecutionRoleName",
    "value": {
      "StringMax": 64,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFormation::StackSet.OperationPreferences.RegionOrder",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9-]{1,128}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFormation::StackSet.DeploymentTargets.Accounts",
    "value": {
      "AllowedPattern": "^[0-9]{12}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFormation::StackSet.DeploymentTargets.OrganizationalUnitIds",
    "value": {
      "AllowedPattern": "^(ou-[a-z0-9]{4,32}-[a-z0-9]{8,32}|r-[a-z0-9]{4,32})$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFormation::StackSet.StackInstances.Regions",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9-]{1,128}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFormation::StackSet.PermissionModel",
    "value": {
      "AllowedValues": [
        "SERVICE_MANAGED",
        "SELF_MANAGED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFormation::StackSet.Tag.Key",
    "value": {
      "AllowedPattern": "^(?!aws:.*)[a-zA-Z0-9\\s\\_\\.\\/\\=\\+\\-]+$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFormation::StackSet.Tag.Value",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFormation::StackSet.TemplateBody",
    "value": {
      "StringMax": 51200,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFormation::StackSet.TemplateURL",
    "value": {
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFront::CachePolicy.CookiesConfig.CookieBehavior",
    "value": {
      "AllowedPattern": "^(none|whitelist|allExcept|all)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFront::CachePolicy.HeadersConfig.HeaderBehavior",
    "value": {
      "AllowedPattern": "^(none|whitelist)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFront::CachePolicy.QueryStringsConfig.QueryStringBehavior",
    "value": {
      "AllowedPattern": "^(none|whitelist|allExcept|all)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFront::OriginRequestPolicy.CookiesConfig.CookieBehavior",
    "value": {
      "AllowedPattern": "^(none|whitelist|all)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFront::OriginRequestPolicy.HeadersConfig.HeaderBehavior",
    "value": {
      "AllowedPattern": "^(none|whitelist|allViewer|allViewerAndWhitelistCloudFront)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFront::OriginRequestPolicy.QueryStringsConfig.QueryStringBehavior",
    "value": {
      "AllowedPattern": "^(none|whitelist|all)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudFront::RealtimeLogConfig.SamplingRate",
    "value": {
      "NumberMax": 100,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudWatch::CompositeAlarm.Arn",
    "value": {
      "StringMax": 1600,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudWatch::CompositeAlarm.AlarmName",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudWatch::CompositeAlarm.AlarmRule",
    "value": {
      "StringMax": 10240,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudWatch::CompositeAlarm.OKActions",
    "value": {
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudWatch::CompositeAlarm.AlarmActions",
    "value": {
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudWatch::CompositeAlarm.InsufficientDataActions",
    "value": {
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudWatch::MetricStream.Arn",
    "value": {
      "StringMax": 2048,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudWatch::MetricStream.MetricStreamFilter.Namespace",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudWatch::MetricStream.FirehoseArn",
    "value": {
      "StringMax": 2048,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudWatch::MetricStream.Name",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudWatch::MetricStream.RoleArn",
    "value": {
      "StringMax": 2048,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudWatch::MetricStream.State",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudWatch::MetricStream.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CloudWatch::MetricStream.Tag.Value",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeArtifact::Domain.DomainName",
    "value": {
      "AllowedPattern": "^([a-z][a-z0-9\\-]{0,48}[a-z0-9])$",
      "StringMax": 50,
      "StringMin": 2
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeArtifact::Domain.Name",
    "value": {
      "AllowedPattern": "^([a-z][a-z0-9\\-]{0,48}[a-z0-9])$",
      "StringMax": 50,
      "StringMin": 2
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeArtifact::Domain.Owner",
    "value": {
      "AllowedPattern": "[0-9]{12}"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeArtifact::Domain.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeArtifact::Domain.Arn",
    "value": {
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeArtifact::Repository.RepositoryName",
    "value": {
      "AllowedPattern": "^([A-Za-z0-9][A-Za-z0-9._\\-]{1,99})$",
      "StringMax": 100,
      "StringMin": 2
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeArtifact::Repository.Name",
    "value": {
      "AllowedPattern": "^([A-Za-z0-9][A-Za-z0-9._\\-]{1,99})$",
      "StringMax": 100,
      "StringMin": 2
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeArtifact::Repository.DomainName",
    "value": {
      "AllowedPattern": "^([a-z][a-z0-9\\-]{0,48}[a-z0-9])$",
      "StringMax": 50,
      "StringMin": 2
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeArtifact::Repository.DomainOwner",
    "value": {
      "AllowedPattern": "[0-9]{12}"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeArtifact::Repository.Arn",
    "value": {
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeArtifact::Repository.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeGuruProfiler::ProfilingGroup.ProfilingGroupName",
    "value": {
      "AllowedPattern": "^[\\w-]+$",
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeGuruProfiler::ProfilingGroup.ComputePlatform",
    "value": {
      "AllowedValues": [
        "Default",
        "AWSLambda"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeGuruProfiler::ProfilingGroup.AgentPermissions.Principals",
    "value": {
      "AllowedPattern": "^arn:aws([-\\w]*):iam::([0-9]{12}):[^.]+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeGuruProfiler::ProfilingGroup.Channel.channelId",
    "value": {
      "AllowedPattern": "[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeGuruProfiler::ProfilingGroup.Channel.channelUri",
    "value": {
      "AllowedPattern": "^arn:aws([-\\w]*):[a-z-]+:(([a-z]+-)+[0-9]+)?:([0-9]{12}):[^.]+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeGuruProfiler::ProfilingGroup.Arn",
    "value": {
      "AllowedPattern": "^arn:aws([-\\w]*):codeguru-profiler:(([a-z]+-)+[0-9]+):([0-9]{12}):profilingGroup/[^.]+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeGuruProfiler::ProfilingGroup.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeGuruReviewer::RepositoryAssociation.Name",
    "value": {
      "AllowedPattern": "^\\S[\\w.-]*$",
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeGuruReviewer::RepositoryAssociation.Type",
    "value": {
      "AllowedValues": [
        "CodeCommit",
        "Bitbucket",
        "GitHubEnterpriseServer",
        "S3Bucket"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeGuruReviewer::RepositoryAssociation.Owner",
    "value": {
      "AllowedPattern": "^\\S(.*\\S)?$",
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeGuruReviewer::RepositoryAssociation.ConnectionArn",
    "value": {
      "AllowedPattern": "arn:aws(-[\\w]+)*:.+:.+:[0-9]{12}:.+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeGuruReviewer::RepositoryAssociation.AssociationArn",
    "value": {
      "AllowedPattern": "arn:aws(-[\\w]+)*:.+:.+:[0-9]{12}:.+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeGuruReviewer::RepositoryAssociation.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeStarConnections::Connection.ConnectionArn",
    "value": {
      "AllowedPattern": "arn:aws(-[\\w]+)*:.+:.+:[0-9]{12}:.+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeStarConnections::Connection.ConnectionName",
    "value": {
      "StringMax": 32,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeStarConnections::Connection.OwnerAccountId",
    "value": {
      "AllowedPattern": "[0-9]{12}",
      "StringMax": 12,
      "StringMin": 12
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeStarConnections::Connection.HostArn",
    "value": {
      "AllowedPattern": "arn:aws(-[\\w]+)*:.+:.+:[0-9]{12}:.+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::CodeStarConnections::Connection.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Config::ConformancePack.ConformancePackName",
    "value": {
      "AllowedPattern": "[a-zA-Z][-a-zA-Z0-9]*",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Config::ConformancePack.TemplateBody",
    "value": {
      "StringMax": 51200,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Config::ConformancePack.TemplateS3Uri",
    "value": {
      "AllowedPattern": "s3://.*",
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Config::OrganizationConformancePack.OrganizationConformancePackName",
    "value": {
      "AllowedPattern": "[a-zA-Z][-a-zA-Z0-9]*",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Config::OrganizationConformancePack.TemplateS3Uri",
    "value": {
      "AllowedPattern": "s3://.*",
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Config::OrganizationConformancePack.TemplateBody",
    "value": {
      "StringMax": 51200,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Config::StoredQuery.QueryArn",
    "value": {
      "StringMax": 500,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Config::StoredQuery.QueryId",
    "value": {
      "AllowedPattern": "^\\S+$",
      "StringMax": 36,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Config::StoredQuery.QueryName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9-_]+$",
      "StringMax": 64,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Config::StoredQuery.QueryDescription",
    "value": {
      "AllowedPattern": "[\\s\\S]*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Config::StoredQuery.QueryExpression",
    "value": {
      "AllowedPattern": "[\\s\\S]*",
      "StringMax": 4096,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Config::StoredQuery.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataBrew::Dataset.Name",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataBrew::Dataset.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataBrew::Job.DatasetName",
    "value": {
      "AllowedPattern": "[ -\ud7ff\ue000-\ufffd\ud800\udc00-\udbff\udfff\t]*",
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataBrew::Job.EncryptionKeyArn",
    "value": {
      "StringMax": 2048,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataBrew::Job.EncryptionMode",
    "value": {
      "AllowedValues": [
        "SSE-KMS",
        "SSE-S3"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataBrew::Job.Name",
    "value": {
      "AllowedPattern": "[ -\ud7ff\ue000-\ufffd\ud800\udc00-\udbff\udfff\t]*",
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataBrew::Job.Type",
    "value": {
      "AllowedValues": [
        "PROFILE",
        "RECIPE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataBrew::Job.LogSubscription",
    "value": {
      "AllowedValues": [
        "ENABLE",
        "DISABLE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataBrew::Job.Output.CompressionFormat",
    "value": {
      "AllowedValues": [
        "GZIP",
        "LZ4",
        "SNAPPY",
        "BZIP2",
        "DEFLATE",
        "LZO",
        "BROTLI",
        "ZSTD",
        "ZLIB"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataBrew::Job.Output.Format",
    "value": {
      "AllowedValues": [
        "CSV",
        "JSON",
        "PARQUET",
        "GLUEPARQUET",
        "AVRO",
        "ORC",
        "XML"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataBrew::Job.ProjectName",
    "value": {
      "AllowedPattern": "[ -\ud7ff\ue000-\ufffd\ud800\udc00-\udbff\udfff\t]*",
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataBrew::Job.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataBrew::Project.DatasetName",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataBrew::Project.Name",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataBrew::Project.RecipeName",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataBrew::Project.Sample.Type",
    "value": {
      "AllowedValues": [
        "FIRST_N",
        "LAST_N",
        "RANDOM"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataBrew::Project.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataBrew::Recipe.Description",
    "value": {
      "AllowedPattern": "[ -\ud7ff\ue000-\ufffd\ud800\udc00-\udbff\udfff\t]*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataBrew::Recipe.Name",
    "value": {
      "AllowedPattern": "^[ -.0-^`-\ud7ff\ue000-\ufffd]*$",
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataBrew::Recipe.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataBrew::Schedule.JobNames",
    "value": {
      "AllowedPattern": "[ -\ud7ff\ue000-\ufffd\ud800\udc00-\udbff\udfff\t]*",
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataBrew::Schedule.CronExpression",
    "value": {
      "StringMax": 512,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataBrew::Schedule.Name",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataBrew::Schedule.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Agent.AgentName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9\\s+=._:@/-]+$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Agent.ActivationKey",
    "value": {
      "AllowedPattern": "[A-Z0-9]{5}(-[A-Z0-9]{5}){4}"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Agent.SecurityGroupArns",
    "value": {
      "AllowedPattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):ec2:[a-z\\-0-9]*:[0-9]{12}:security-group/.*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Agent.SubnetArns",
    "value": {
      "AllowedPattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):ec2:[a-z\\-0-9]*:[0-9]{12}:subnet/.*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Agent.VpcEndpointId",
    "value": {
      "AllowedPattern": "^vpce-[0-9a-f]{17}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Agent.EndpointType",
    "value": {
      "AllowedValues": [
        "FIPS",
        "PUBLIC",
        "PRIVATE_LINK"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Agent.Tag.Key",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9\\s+=._:/-]+$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Agent.Tag.Value",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9\\s+=._:@/-]+$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Agent.AgentArn",
    "value": {
      "AllowedPattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\\-0-9]+:[0-9]{12}:agent/agent-[0-9a-z]{17}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationEFS.Ec2Config.SecurityGroupArns",
    "value": {
      "AllowedPattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):ec2:[a-z\\-0-9]*:[0-9]{12}:security-group/.*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationEFS.Ec2Config.SubnetArn",
    "value": {
      "AllowedPattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):ec2:[a-z\\-0-9]*:[0-9]{12}:subnet/.*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationEFS.EfsFilesystemArn",
    "value": {
      "AllowedPattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):elasticfilesystem:[a-z\\-0-9]*:[0-9]{12}:file-system/fs-.*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationEFS.Subdirectory",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9_\\-\\+\\./\\(\\)\\$\\p{Zs}]+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationEFS.Tag.Key",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9\\s+=._:/-]+$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationEFS.Tag.Value",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9\\s+=._:@/-]+$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationEFS.LocationArn",
    "value": {
      "AllowedPattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\\-0-9]+:[0-9]{12}:location/loc-[0-9a-z]{17}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationEFS.LocationUri",
    "value": {
      "AllowedPattern": "^(efs|nfs|s3|smb|fsxw)://[a-zA-Z0-9.\\-/]+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationFSxWindows.Domain",
    "value": {
      "AllowedPattern": "^([A-Za-z0-9]+[A-Za-z0-9-.]*)*[A-Za-z0-9-]*[A-Za-z0-9]$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationFSxWindows.FsxFilesystemArn",
    "value": {
      "AllowedPattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):fsx:[a-z\\-0-9]*:[0-9]{12}:file-system/fs-.*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationFSxWindows.Password",
    "value": {
      "AllowedPattern": "^.{0,104}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationFSxWindows.SecurityGroupArns",
    "value": {
      "AllowedPattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):ec2:[a-z\\-0-9]*:[0-9]{12}:security-group/.*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationFSxWindows.Subdirectory",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9_\\-\\+\\./\\(\\)\\$\\p{Zs}]+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationFSxWindows.User",
    "value": {
      "AllowedPattern": "^[^\\x5B\\x5D\\\\/:;|=,+*?]{1,104}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationFSxWindows.Tag.Key",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9\\s+=._:/-]+$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationFSxWindows.Tag.Value",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9\\s+=._:@/-]+$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationFSxWindows.LocationArn",
    "value": {
      "AllowedPattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\\-0-9]+:[0-9]{12}:location/loc-[0-9a-z]{17}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationFSxWindows.LocationUri",
    "value": {
      "AllowedPattern": "^(efs|nfs|s3|smb|fsxw)://[a-zA-Z0-9./\\-]+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationNFS.MountOptions.Version",
    "value": {
      "AllowedValues": [
        "AUTOMATIC",
        "NFS3",
        "NFS4_0",
        "NFS4_1"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationNFS.OnPremConfig.AgentArns",
    "value": {
      "AllowedPattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\\-0-9]+:[0-9]{12}:agent/agent-[0-9a-z]{17}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationNFS.ServerHostname",
    "value": {
      "AllowedPattern": "^(([a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9\\-]*[A-Za-z0-9])$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationNFS.Subdirectory",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9_\\-\\+\\./\\(\\)\\$\\p{Zs}]+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationNFS.Tag.Key",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9\\s+=._:/-]+$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationNFS.Tag.Value",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9\\s+=._:@/-]+$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationNFS.LocationArn",
    "value": {
      "AllowedPattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\\-0-9]+:[0-9]{12}:location/loc-[0-9a-z]{17}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationNFS.LocationUri",
    "value": {
      "AllowedPattern": "^(efs|nfs|s3|smb|fsxw)://[a-zA-Z0-9./\\-]+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationObjectStorage.AccessKey",
    "value": {
      "AllowedPattern": "^.+$",
      "StringMax": 200,
      "StringMin": 8
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationObjectStorage.AgentArns",
    "value": {
      "AllowedPattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\\-0-9]+:[0-9]{12}:agent/agent-[0-9a-z]{17}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationObjectStorage.BucketName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9_\\-\\+\\./\\(\\)\\$\\p{Zs}]+$",
      "StringMax": 63,
      "StringMin": 3
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationObjectStorage.SecretKey",
    "value": {
      "AllowedPattern": "^.+$",
      "StringMax": 200,
      "StringMin": 8
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationObjectStorage.ServerHostname",
    "value": {
      "AllowedPattern": "^(([a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9\\-]*[A-Za-z0-9])$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationObjectStorage.ServerPort",
    "value": {
      "NumberMax": 65536,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationObjectStorage.ServerProtocol",
    "value": {
      "AllowedValues": [
        "HTTPS",
        "HTTP"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationObjectStorage.Subdirectory",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9_\\-\\+\\./\\(\\)\\p{Zs}]*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationObjectStorage.Tag.Key",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9\\s+=._:/-]+$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationObjectStorage.Tag.Value",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9\\s+=._:@/-]+$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationObjectStorage.LocationArn",
    "value": {
      "AllowedPattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\\-0-9]+:[0-9]{12}:location/loc-[0-9a-z]{17}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationObjectStorage.LocationUri",
    "value": {
      "AllowedPattern": "^(efs|nfs|s3|smb|fsxw|object-storage)://[a-zA-Z0-9./\\-]+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationS3.S3Config.BucketAccessRoleArn",
    "value": {
      "AllowedPattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):iam::[0-9]{12}:role/.*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationS3.S3BucketArn",
    "value": {
      "AllowedPattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):s3:[a-z\\-0-9]*:[0-9]*:.*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationS3.Subdirectory",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9_\\-\\+\\./\\(\\)\\$\\p{Zs}]+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationS3.S3StorageClass",
    "value": {
      "AllowedValues": [
        "STANDARD",
        "STANDARD_IA",
        "ONEZONE_IA",
        "INTELLIGENT_TIERING",
        "GLACIER",
        "DEEP_ARCHIVE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationS3.Tag.Key",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9\\s+=._:/-]+$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationS3.Tag.Value",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9\\s+=._:@/-]+$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationS3.LocationArn",
    "value": {
      "AllowedPattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\\-0-9]+:[0-9]{12}:location/loc-[0-9a-z]{17}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationS3.LocationUri",
    "value": {
      "AllowedPattern": "^(efs|nfs|s3|smb|fsxw)://[a-zA-Z0-9.\\-/]+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationSMB.AgentArns",
    "value": {
      "AllowedPattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\\-0-9]+:[0-9]{12}:agent/agent-[0-9a-z]{17}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationSMB.Domain",
    "value": {
      "AllowedPattern": "^([A-Za-z0-9]+[A-Za-z0-9-.]*)*[A-Za-z0-9-]*[A-Za-z0-9]$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationSMB.MountOptions.Version",
    "value": {
      "AllowedValues": [
        "AUTOMATIC",
        "SMB2",
        "SMB3"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationSMB.Password",
    "value": {
      "AllowedPattern": "^.{0,104}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationSMB.ServerHostname",
    "value": {
      "AllowedPattern": "^(([a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9\\-]*[A-Za-z0-9])$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationSMB.Subdirectory",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9_\\-\\+\\./\\(\\)\\$\\p{Zs}]+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationSMB.User",
    "value": {
      "AllowedPattern": "^[^\\x5B\\x5D\\\\/:;|=,+*?]{1,104}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationSMB.Tag.Key",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9\\s+=._:/-]+$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationSMB.Tag.Value",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9\\s+=._:@/-]+$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationSMB.LocationArn",
    "value": {
      "AllowedPattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\\-0-9]+:[0-9]{12}:location/loc-[0-9a-z]{17}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::LocationSMB.LocationUri",
    "value": {
      "AllowedPattern": "^(efs|nfs|s3|smb|fsxw)://[a-zA-Z0-9./\\-]+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Task.FilterRule.FilterType",
    "value": {
      "AllowedPattern": "^[A-Z0-9_]+$",
      "AllowedValues": [
        "SIMPLE_PATTERN"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Task.FilterRule.Value",
    "value": {
      "AllowedPattern": "^[^\\x00]+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Task.Tag.Key",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9\\s+=._:/-]+$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Task.Tag.Value",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9\\s+=._:@/-]+$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Task.CloudWatchLogGroupArn",
    "value": {
      "AllowedPattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):logs:[a-z\\-0-9]*:[0-9]{12}:log-group:([^:\\*]*)(:\\*)?$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Task.DestinationLocationArn",
    "value": {
      "AllowedPattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\\-0-9]+:[0-9]{12}:location/loc-[0-9a-z]{17}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Task.Name",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9\\s+=._:@/-]+$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Task.Options.Atime",
    "value": {
      "AllowedValues": [
        "NONE",
        "BEST_EFFORT"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Task.Options.Gid",
    "value": {
      "AllowedValues": [
        "NONE",
        "INT_VALUE",
        "NAME",
        "BOTH"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Task.Options.LogLevel",
    "value": {
      "AllowedValues": [
        "OFF",
        "BASIC",
        "TRANSFER"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Task.Options.Mtime",
    "value": {
      "AllowedValues": [
        "NONE",
        "PRESERVE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Task.Options.OverwriteMode",
    "value": {
      "AllowedValues": [
        "ALWAYS",
        "NEVER"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Task.Options.PosixPermissions",
    "value": {
      "AllowedValues": [
        "NONE",
        "PRESERVE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Task.Options.PreserveDeletedFiles",
    "value": {
      "AllowedValues": [
        "PRESERVE",
        "REMOVE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Task.Options.PreserveDevices",
    "value": {
      "AllowedValues": [
        "NONE",
        "PRESERVE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Task.Options.TaskQueueing",
    "value": {
      "AllowedValues": [
        "ENABLED",
        "DISABLED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Task.Options.TransferMode",
    "value": {
      "AllowedValues": [
        "CHANGED",
        "ALL"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Task.Options.Uid",
    "value": {
      "AllowedValues": [
        "NONE",
        "INT_VALUE",
        "NAME",
        "BOTH"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Task.Options.VerifyMode",
    "value": {
      "AllowedValues": [
        "POINT_IN_TIME_CONSISTENT",
        "ONLY_FILES_TRANSFERRED",
        "NONE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Task.TaskSchedule.ScheduleExpression",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9\\ \\_\\*\\?\\,\\|\\^\\-\\/\\#\\s\\(\\)\\+]*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Task.SourceLocationArn",
    "value": {
      "AllowedPattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\\-0-9]+:[0-9]{12}:location/loc-[0-9a-z]{17}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Task.TaskArn",
    "value": {
      "AllowedPattern": "^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):datasync:[a-z\\-0-9]*:[0-9]{12}:task/task-[0-9a-f]{17}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Task.Status",
    "value": {
      "AllowedValues": [
        "AVAILABLE",
        "CREATING",
        "QUEUED",
        "RUNNING",
        "UNAVAILABLE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Task.SourceNetworkInterfaceArns",
    "value": {
      "AllowedPattern": "^arn:aws[\\-a-z]{0,}:ec2:[a-z\\-0-9]*:[0-9]{12}:network-interface/eni-[0-9a-f]+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DataSync::Task.DestinationNetworkInterfaceArns",
    "value": {
      "AllowedPattern": "^arn:aws[\\-a-z]{0,}:ec2:[a-z\\-0-9]*:[0-9]{12}:network-interface/eni-[0-9a-f]+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Detective::MemberInvitation.GraphArn",
    "value": {
      "AllowedPattern": "arn:aws(-[\\w]+)*:detective:(([a-z]+-)+[0-9]+):[0-9]{12}:graph:[0-9a-f]{32}"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Detective::MemberInvitation.MemberId",
    "value": {
      "AllowedPattern": "[0-9]{12}"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Detective::MemberInvitation.MemberEmailAddress",
    "value": {
      "AllowedPattern": ".*@.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Detective::MemberInvitation.Message",
    "value": {
      "StringMax": 1000,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DevOpsGuru::NotificationChannel.SnsChannelConfig.TopicArn",
    "value": {
      "AllowedPattern": "^arn:aws[a-z0-9-]*:sns:[a-z0-9-]+:\\d{12}:[^:]+$",
      "StringMax": 1024,
      "StringMin": 36
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DevOpsGuru::NotificationChannel.Id",
    "value": {
      "AllowedPattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
      "StringMax": 36,
      "StringMin": 36
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DevOpsGuru::ResourceCollection.CloudFormationCollectionFilter.StackNames",
    "value": {
      "AllowedPattern": "^[a-zA-Z*]+[a-zA-Z0-9-]*$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::DevOpsGuru::ResourceCollection.ResourceCollectionType",
    "value": {
      "AllowedValues": [
        "AWS_CLOUD_FORMATION"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::CarrierGateway.Tag.Key",
    "value": {
      "AllowedPattern": "^(?!aws:.*)",
      "StringMax": 127,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::CarrierGateway.Tag.Value",
    "value": {
      "AllowedPattern": "^(?!aws:.*)",
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::FlowLog.LogDestinationType",
    "value": {
      "AllowedValues": [
        "cloud-watch-logs",
        "s3"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::FlowLog.ResourceType",
    "value": {
      "AllowedValues": [
        "NetworkInterface",
        "Subnet",
        "VPC"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::FlowLog.TrafficType",
    "value": {
      "AllowedValues": [
        "ACCEPT",
        "ALL",
        "REJECT"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::LocalGatewayRouteTableVPCAssociation.Tag.Key",
    "value": {
      "AllowedPattern": "^(?!aws:.*)",
      "StringMax": 127,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::LocalGatewayRouteTableVPCAssociation.Tag.Value",
    "value": {
      "AllowedPattern": "^(?!aws:.*)",
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsAnalysis.Status",
    "value": {
      "AllowedValues": [
        "running",
        "failed",
        "succeeded"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsAnalysis.AnalysisAclRule.Protocol",
    "value": {
      "AllowedValues": [
        "tcp",
        "udp"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsAnalysis.AnalysisPacketHeader.DestinationAddresses",
    "value": {
      "AllowedPattern": "^([0-9]{1,3}.){3}[0-9]{1,3}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsAnalysis.AnalysisPacketHeader.Protocol",
    "value": {
      "AllowedValues": [
        "tcp",
        "udp"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsAnalysis.AnalysisPacketHeader.SourceAddresses",
    "value": {
      "AllowedPattern": "^([0-9]{1,3}.){3}[0-9]{1,3}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsAnalysis.AnalysisSecurityGroupRule.Protocol",
    "value": {
      "AllowedValues": [
        "tcp",
        "udp"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsAnalysis.Explanation.Address",
    "value": {
      "AllowedPattern": "^([0-9]{1,3}.){3}[0-9]{1,3}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsAnalysis.Explanation.Addresses",
    "value": {
      "AllowedPattern": "^([0-9]{1,3}.){3}[0-9]{1,3}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsAnalysis.Explanation.LoadBalancerArn",
    "value": {
      "StringMax": 1283,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsAnalysis.AnalysisLoadBalancerListener.InstancePort",
    "value": {
      "NumberMax": 65535,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsAnalysis.AnalysisLoadBalancerListener.LoadBalancerPort",
    "value": {
      "NumberMax": 65535,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsAnalysis.Explanation.LoadBalancerListenerPort",
    "value": {
      "NumberMax": 65535,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsAnalysis.AnalysisLoadBalancerTarget.Address",
    "value": {
      "AllowedPattern": "^([0-9]{1,3}.){3}[0-9]{1,3}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsAnalysis.AnalysisLoadBalancerTarget.Port",
    "value": {
      "NumberMax": 65535,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsAnalysis.Explanation.LoadBalancerTargetPort",
    "value": {
      "NumberMax": 65535,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsAnalysis.Explanation.Port",
    "value": {
      "NumberMax": 65535,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsAnalysis.Explanation.Protocols",
    "value": {
      "AllowedValues": [
        "tcp",
        "udp"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsAnalysis.NetworkInsightsPathId",
    "value": {
      "AllowedPattern": "nip-.+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsAnalysis.FilterInArns",
    "value": {
      "StringMax": 1283,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsAnalysis.Tag.Key",
    "value": {
      "AllowedPattern": "^(?!aws:.*)[a-zA-Z0-9\\s\\_\\.\\/\\=\\+\\-]+$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsAnalysis.Tag.Value",
    "value": {
      "AllowedPattern": "^(?!aws:.*)[a-zA-Z0-9\\s\\_\\.\\/\\=\\+\\-]+$",
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsPath.SourceIp",
    "value": {
      "AllowedPattern": "^([0-9]{1,3}.){3}[0-9]{1,3}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsPath.DestinationIp",
    "value": {
      "AllowedPattern": "^([0-9]{1,3}.){3}[0-9]{1,3}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsPath.Source",
    "value": {
      "AllowedPattern": "^([a-z]{1,5}-([a-z0-9]{8}|[a-z0-9]{17}|\\*)$)|arn:(aws|aws-cn|aws-us-gov|aws-iso-{0,1}[a-z]{0,1}):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsPath.Destination",
    "value": {
      "AllowedPattern": "^([a-z]{1,5}-([a-z0-9]{8}|[a-z0-9]{17}|\\*)$)|arn:(aws|aws-cn|aws-us-gov|aws-iso-{0,1}[a-z]{0,1}):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsPath.Protocol",
    "value": {
      "AllowedValues": [
        "tcp",
        "udp"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsPath.DestinationPort",
    "value": {
      "NumberMax": 65535,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsPath.Tag.Key",
    "value": {
      "AllowedPattern": "^(?!aws:.*)[a-zA-Z0-9\\s\\_\\.\\/\\=\\+\\-]+$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::NetworkInsightsPath.Tag.Value",
    "value": {
      "AllowedPattern": "^(?!aws:.*)[a-zA-Z0-9\\s\\_\\.\\/\\=\\+\\-]+$",
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::PrefixList.PrefixListName",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::PrefixList.AddressFamily",
    "value": {
      "AllowedValues": [
        "IPv4",
        "IPv6"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::PrefixList.MaxEntries",
    "value": {
      "NumberMax": 1000,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::PrefixList.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EC2::PrefixList.Entry.Cidr",
    "value": {
      "StringMax": 46,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ECR::PublicRepository.RepositoryName",
    "value": {
      "AllowedPattern": "^(?=.{2,256}$)((?:[a-z0-9]+(?:[._-][a-z0-9]+)*/)*[a-z0-9]+(?:[._-][a-z0-9]+)*)$",
      "StringMax": 256,
      "StringMin": 2
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ECR::PublicRepository.RepositoryCatalogData.Architectures",
    "value": {
      "StringMax": 50,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ECR::PublicRepository.RepositoryCatalogData.OperatingSystems",
    "value": {
      "StringMax": 50,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ECR::Repository.LifecyclePolicy.LifecyclePolicyText",
    "value": {
      "StringMax": 30720,
      "StringMin": 100
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ECR::Repository.LifecyclePolicy.RegistryId",
    "value": {
      "AllowedPattern": "^[0-9]{12}$",
      "StringMax": 12,
      "StringMin": 12
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ECR::Repository.RepositoryName",
    "value": {
      "AllowedPattern": "^(?=.{2,256}$)((?:[a-z0-9]+(?:[._-][a-z0-9]+)*/)*[a-z0-9]+(?:[._-][a-z0-9]+)*)$",
      "StringMax": 256,
      "StringMin": 2
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ECR::Repository.Tag.Key",
    "value": {
      "StringMax": 127,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ECR::Repository.Tag.Value",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ECR::Repository.ImageTagMutability",
    "value": {
      "AllowedValues": [
        "MUTABLE",
        "IMMUTABLE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ECS::CapacityProvider.ManagedScaling.Status",
    "value": {
      "AllowedValues": [
        "DISABLED",
        "ENABLED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ECS::CapacityProvider.AutoScalingGroupProvider.ManagedTerminationProtection",
    "value": {
      "AllowedValues": [
        "DISABLED",
        "ENABLED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ECS::Service.DeploymentController.Type",
    "value": {
      "AllowedValues": [
        "CODE_DEPLOY",
        "ECS",
        "EXTERNAL"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ECS::Service.LaunchType",
    "value": {
      "AllowedValues": [
        "EC2",
        "FARGATE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ECS::Service.AwsVpcConfiguration.AssignPublicIp",
    "value": {
      "AllowedValues": [
        "DISABLED",
        "ENABLED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ECS::Service.PlacementConstraint.Type",
    "value": {
      "AllowedValues": [
        "distinctInstance",
        "memberOf"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ECS::Service.PlacementStrategy.Type",
    "value": {
      "AllowedValues": [
        "binpack",
        "random",
        "spread"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ECS::Service.PropagateTags",
    "value": {
      "AllowedValues": [
        "SERVICE",
        "TASK_DEFINITION"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ECS::Service.SchedulingStrategy",
    "value": {
      "AllowedValues": [
        "DAEMON",
        "REPLICA"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ECS::TaskDefinition.EFSVolumeConfiguration.TransitEncryption",
    "value": {
      "AllowedValues": [
        "ENABLED",
        "DISABLED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ECS::TaskDefinition.AuthorizationConfig.IAM",
    "value": {
      "AllowedValues": [
        "ENABLED",
        "DISABLED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ECS::TaskSet.LaunchType",
    "value": {
      "AllowedValues": [
        "EC2",
        "FARGATE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ECS::TaskSet.AwsVpcConfiguration.AssignPublicIp",
    "value": {
      "AllowedValues": [
        "DISABLED",
        "ENABLED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ECS::TaskSet.Scale.Unit",
    "value": {
      "AllowedValues": [
        "PERCENT"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EFS::AccessPoint.AccessPointTag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EFS::AccessPoint.AccessPointTag.Value",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EFS::AccessPoint.RootDirectory.Path",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EFS::AccessPoint.CreationInfo.Permissions",
    "value": {
      "AllowedPattern": "^[0-7]{3,4}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EKS::FargateProfile.Label.Key",
    "value": {
      "StringMax": 127,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EKS::FargateProfile.Label.Value",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EKS::FargateProfile.Tag.Key",
    "value": {
      "StringMax": 127,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EKS::FargateProfile.Tag.Value",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EMRContainers::VirtualCluster.ContainerProvider.Id",
    "value": {
      "AllowedPattern": "^[0-9A-Za-z][A-Za-z0-9\\-_]*",
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EMRContainers::VirtualCluster.EksInfo.Namespace",
    "value": {
      "AllowedPattern": "[a-z0-9]([-a-z0-9]*[a-z0-9])?",
      "StringMax": 63,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EMRContainers::VirtualCluster.Id",
    "value": {
      "StringMax": 64,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::EMRContainers::VirtualCluster.Name",
    "value": {
      "AllowedPattern": "[\\.\\-_/#A-Za-z0-9]+",
      "StringMax": 64,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ElastiCache::User.UserId",
    "value": {
      "AllowedPattern": "[a-z][a-z0-9\\\\-]*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ElastiCache::User.Engine",
    "value": {
      "AllowedValues": [
        "redis"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ElastiCache::UserGroup.UserGroupId",
    "value": {
      "AllowedPattern": "[a-z][a-z0-9\\\\-]*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ElastiCache::UserGroup.Engine",
    "value": {
      "AllowedValues": [
        "redis"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::FMS::NotificationChannel.SnsRoleName",
    "value": {
      "AllowedPattern": "^([^\\s]+)$",
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::FMS::NotificationChannel.SnsTopicArn",
    "value": {
      "AllowedPattern": "^([^\\s]+)$",
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::FMS::Policy.IEMap.ACCOUNT",
    "value": {
      "AllowedPattern": "^([0-9]*)$",
      "StringMax": 12,
      "StringMin": 12
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::FMS::Policy.IEMap.ORGUNIT",
    "value": {
      "AllowedPattern": "^(ou-[0-9a-z]{4,32}-[a-z0-9]{8,32})$",
      "StringMax": 68,
      "StringMin": 16
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::FMS::Policy.Id",
    "value": {
      "AllowedPattern": "^[a-z0-9A-Z-]{36}$",
      "StringMax": 36,
      "StringMin": 36
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::FMS::Policy.PolicyName",
    "value": {
      "AllowedPattern": "^([a-zA-Z0-9_.:/=+\\-@]+)$",
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::FMS::Policy.ResourceTag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::FMS::Policy.ResourceType",
    "value": {
      "AllowedPattern": "^([^\\s]*)$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::FMS::Policy.ResourceTypeList",
    "value": {
      "AllowedPattern": "^([^\\s]*)$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::FMS::Policy.SecurityServicePolicyData.ManagedServiceData",
    "value": {
      "StringMax": 4096,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::FMS::Policy.SecurityServicePolicyData.Type",
    "value": {
      "AllowedValues": [
        "WAF",
        "WAFV2",
        "SHIELD_ADVANCED",
        "SECURITY_GROUPS_COMMON",
        "SECURITY_GROUPS_CONTENT_AUDIT",
        "SECURITY_GROUPS_USAGE_AUDIT",
        "NETWORK_FIREWALL"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::FMS::Policy.Arn",
    "value": {
      "AllowedPattern": "^([^\\s]*)$",
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::FMS::Policy.PolicyTag.Key",
    "value": {
      "AllowedPattern": "^([^\\s]*)$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::FMS::Policy.PolicyTag.Value",
    "value": {
      "AllowedPattern": "^([^\\s]*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::GameLift::Alias.Description",
    "value": {
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::GameLift::Alias.Name",
    "value": {
      "AllowedPattern": ".*\\S.*",
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::GameLift::Alias.RoutingStrategy.FleetId",
    "value": {
      "AllowedPattern": "^fleet-\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::GameLift::Alias.RoutingStrategy.Type",
    "value": {
      "AllowedValues": [
        "SIMPLE",
        "TERMINAL"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::GameLift::GameServerGroup.AutoScalingGroupArn",
    "value": {
      "AllowedPattern": "[ -\ud7ff\ue000-\ufffd\ud800\udc00-\udbff\udfff\r\n\t]*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::GameLift::GameServerGroup.BalancingStrategy",
    "value": {
      "AllowedValues": [
        "SPOT_ONLY",
        "SPOT_PREFERRED",
        "ON_DEMAND_ONLY"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::GameLift::GameServerGroup.DeleteOption",
    "value": {
      "AllowedValues": [
        "SAFE_DELETE",
        "FORCE_DELETE",
        "RETAIN"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::GameLift::GameServerGroup.GameServerGroupArn",
    "value": {
      "AllowedPattern": "^arn:.*:gameservergroup\\/[a-zA-Z0-9-\\.]*",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::GameLift::GameServerGroup.GameServerGroupName",
    "value": {
      "AllowedPattern": "[a-zA-Z0-9-\\.]+",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::GameLift::GameServerGroup.GameServerProtectionPolicy",
    "value": {
      "AllowedValues": [
        "NO_PROTECTION",
        "FULL_PROTECTION"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::GameLift::GameServerGroup.RoleArn",
    "value": {
      "AllowedPattern": "^arn:.*:role\\/[\\w+=,.@-]+",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::GameLift::GameServerGroup.VpcSubnets",
    "value": {
      "AllowedPattern": "^subnet-[0-9a-z]+$",
      "StringMax": 24,
      "StringMin": 15
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::GlobalAccelerator::Accelerator.Name",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9_-]{0,64}$",
      "StringMax": 64,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::GlobalAccelerator::Accelerator.IpAddressType",
    "value": {
      "AllowedValues": [
        "IPV4",
        "IPV6"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::GlobalAccelerator::Accelerator.IpAddresses",
    "value": {
      "AllowedPattern": "^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::GlobalAccelerator::Accelerator.Tag.Key",
    "value": {
      "StringMax": 127,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::GlobalAccelerator::Accelerator.Tag.Value",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::GlobalAccelerator::EndpointGroup.ListenerArn",
    "value": {
      "AllowedPattern": "^arn:aws:(\\w+)::(\\d{12}):(accelerator)/([0-9a-f-]+)/listener/([0-9a-f-]+)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::GlobalAccelerator::EndpointGroup.HealthCheckPort",
    "value": {
      "NumberMax": 65535,
      "NumberMin": -1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::GlobalAccelerator::EndpointGroup.HealthCheckProtocol",
    "value": {
      "AllowedValues": [
        "TCP",
        "HTTP",
        "HTTPS"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::GlobalAccelerator::Listener.Protocol",
    "value": {
      "AllowedValues": [
        "TCP",
        "UDP"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::GlobalAccelerator::Listener.ClientAffinity",
    "value": {
      "AllowedValues": [
        "NONE",
        "SOURCE_IP"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Glue::Registry.Arn",
    "value": {
      "AllowedPattern": "arn:(aws|aws-us-gov|aws-cn):glue:.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Glue::Registry.Name",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Glue::Registry.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Glue::Schema.Arn",
    "value": {
      "AllowedPattern": "arn:(aws|aws-us-gov|aws-cn):glue:.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Glue::Schema.Registry.Name",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Glue::Schema.Registry.Arn",
    "value": {
      "AllowedPattern": "arn:(aws|aws-us-gov|aws-cn):glue:.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Glue::Schema.Name",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Glue::Schema.DataFormat",
    "value": {
      "AllowedValues": [
        "AVRO"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Glue::Schema.Compatibility",
    "value": {
      "AllowedValues": [
        "NONE",
        "DISABLED",
        "BACKWARD",
        "BACKWARD_ALL",
        "FORWARD",
        "FORWARD_ALL",
        "FULL",
        "FULL_ALL"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Glue::Schema.SchemaVersion.VersionNumber",
    "value": {
      "NumberMax": 100000,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Glue::Schema.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Glue::Schema.InitialSchemaVersionId",
    "value": {
      "AllowedPattern": "[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Glue::SchemaVersion.Schema.SchemaArn",
    "value": {
      "AllowedPattern": "arn:(aws|aws-us-gov|aws-cn):glue:.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Glue::SchemaVersion.Schema.SchemaName",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Glue::SchemaVersion.Schema.RegistryName",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Glue::SchemaVersion.VersionId",
    "value": {
      "AllowedPattern": "[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Glue::SchemaVersionMetadata.SchemaVersionId",
    "value": {
      "AllowedPattern": "[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Glue::SchemaVersionMetadata.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Glue::SchemaVersionMetadata.Value",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::GreengrassV2::ComponentVersion.LambdaFunctionRecipeSource.LambdaArn",
    "value": {
      "AllowedPattern": "^arn:aws(-(cn|us-gov))?:lambda:(([a-z]+-)+[0-9])?:([0-9]{12})?:[^.]+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::GreengrassV2::ComponentVersion.LambdaEventSource.Type",
    "value": {
      "AllowedValues": [
        "PUB_SUB",
        "IOT_CORE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::GreengrassV2::ComponentVersion.LambdaExecutionParameters.InputPayloadEncodingType",
    "value": {
      "AllowedValues": [
        "json",
        "binary"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::GreengrassV2::ComponentVersion.LambdaLinuxProcessParams.IsolationMode",
    "value": {
      "AllowedValues": [
        "GreengrassContainer",
        "NoContainer"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::GreengrassV2::ComponentVersion.LambdaVolumeMount.Permission",
    "value": {
      "AllowedValues": [
        "ro",
        "rw"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::GreengrassV2::ComponentVersion.LambdaDeviceMount.Permission",
    "value": {
      "AllowedValues": [
        "ro",
        "rw"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IVS::Channel.Arn",
    "value": {
      "AllowedPattern": "^arn:aws:ivs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IVS::Channel.Name",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9-_]*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IVS::Channel.LatencyMode",
    "value": {
      "AllowedValues": [
        "NORMAL",
        "LOW"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IVS::Channel.Type",
    "value": {
      "AllowedValues": [
        "STANDARD",
        "BASIC"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IVS::Channel.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IVS::Channel.Tag.Value",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IVS::PlaybackKeyPair.Name",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9-_]*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IVS::PlaybackKeyPair.Arn",
    "value": {
      "AllowedPattern": "^arn:aws:ivs:[a-z0-9-]+:[0-9]+:playback-key/[a-zA-Z0-9-]+$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IVS::PlaybackKeyPair.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IVS::PlaybackKeyPair.Tag.Value",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IVS::StreamKey.Arn",
    "value": {
      "AllowedPattern": "^arn:aws:ivs:[a-z0-9-]+:[0-9]+:stream-key/[a-zA-Z0-9-]+$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IVS::StreamKey.ChannelArn",
    "value": {
      "AllowedPattern": "^arn:aws:ivs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IVS::StreamKey.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IVS::StreamKey.Tag.Value",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ImageBuilder::Component.Type",
    "value": {
      "AllowedValues": [
        "BUILD",
        "TEST"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ImageBuilder::Component.Platform",
    "value": {
      "AllowedValues": [
        "Windows",
        "Linux"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ImageBuilder::Component.Data",
    "value": {
      "StringMax": 16000,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ImageBuilder::DistributionConfiguration.TargetContainerRepository.Service",
    "value": {
      "AllowedValues": [
        "ECR"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ImageBuilder::Image.ImageTestsConfiguration.TimeoutMinutes",
    "value": {
      "NumberMax": 1440,
      "NumberMin": 60
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ImageBuilder::ImagePipeline.ImageTestsConfiguration.TimeoutMinutes",
    "value": {
      "NumberMax": 1440,
      "NumberMin": 60
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ImageBuilder::ImagePipeline.Status",
    "value": {
      "AllowedValues": [
        "DISABLED",
        "ENABLED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ImageBuilder::ImagePipeline.Schedule.PipelineExecutionStartCondition",
    "value": {
      "AllowedValues": [
        "EXPRESSION_MATCH_ONLY",
        "EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ImageBuilder::ImageRecipe.EbsInstanceBlockDeviceSpecification.VolumeType",
    "value": {
      "AllowedValues": [
        "standard",
        "io1",
        "gp2",
        "sc1",
        "st1"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoT::Authorizer.AuthorizerName",
    "value": {
      "AllowedPattern": "[\\w=,@-]+",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoT::Authorizer.Status",
    "value": {
      "AllowedValues": [
        "ACTIVE",
        "INACTIVE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoT::Certificate.CACertificatePem",
    "value": {
      "StringMax": 65536,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoT::Certificate.CertificatePem",
    "value": {
      "StringMax": 65536,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoT::Certificate.CertificateMode",
    "value": {
      "AllowedValues": [
        "DEFAULT",
        "SNI_ONLY"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoT::Certificate.Status",
    "value": {
      "AllowedValues": [
        "ACTIVE",
        "INACTIVE",
        "REVOKED",
        "PENDING_TRANSFER",
        "PENDING_ACTIVATION"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoT::DomainConfiguration.DomainConfigurationName",
    "value": {
      "AllowedPattern": "^[\\w.-]+$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoT::DomainConfiguration.AuthorizerConfig.DefaultAuthorizerName",
    "value": {
      "AllowedPattern": "^[\\w=,@-]+$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoT::DomainConfiguration.DomainName",
    "value": {
      "StringMax": 253,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoT::DomainConfiguration.ServerCertificateArns",
    "value": {
      "AllowedPattern": "^arn:aws(-cn|-us-gov|-iso-b|-iso)?:acm:[a-z]{2}-(gov-|iso-|isob-)?[a-z]{4,9}-\\d{1}:\\d{12}:certificate/[a-zA-Z0-9/-]+$",
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoT::DomainConfiguration.ServiceType",
    "value": {
      "AllowedValues": [
        "DATA",
        "CREDENTIAL_PROVIDER",
        "JOBS"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoT::DomainConfiguration.ValidationCertificateArn",
    "value": {
      "AllowedPattern": "^arn:aws(-cn|-us-gov|-iso-b|-iso)?:acm:[a-z]{2}-(gov-|iso-|isob-)?[a-z]{4,9}-\\d{1}:\\d{12}:certificate/[a-zA-Z0-9/-]+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoT::DomainConfiguration.DomainConfigurationStatus",
    "value": {
      "AllowedValues": [
        "ENABLED",
        "DISABLED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoT::DomainConfiguration.DomainType",
    "value": {
      "AllowedValues": [
        "ENDPOINT",
        "AWS_MANAGED",
        "CUSTOMER_MANAGED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoT::DomainConfiguration.ServerCertificateSummary.ServerCertificateArn",
    "value": {
      "AllowedPattern": "^arn:aws(-cn|-us-gov|-iso-b|-iso)?:acm:[a-z]{2}-(gov-|iso-|isob-)?[a-z]{4,9}-\\d{1}:\\d{12}:certificate/[a-zA-Z0-9/-]+$",
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoT::DomainConfiguration.ServerCertificateSummary.ServerCertificateStatus",
    "value": {
      "AllowedValues": [
        "INVALID",
        "VALID"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoT::ProvisioningTemplate.TemplateName",
    "value": {
      "AllowedPattern": "^[0-9A-Za-z_-]+$",
      "StringMax": 36,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoT::TopicRuleDestination.Status",
    "value": {
      "AllowedValues": [
        "ENABLED",
        "IN_PROGRESS",
        "DISABLED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::AccessPolicy.AccessPolicyId",
    "value": {
      "AllowedPattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
      "StringMax": 36,
      "StringMin": 36
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::AccessPolicy.AccessPolicyArn",
    "value": {
      "AllowedPattern": ".*",
      "StringMax": 1600,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::AccessPolicy.User.id",
    "value": {
      "AllowedPattern": "\\S+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::AccessPolicy.Portal.id",
    "value": {
      "AllowedPattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::AccessPolicy.Project.id",
    "value": {
      "AllowedPattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Asset.AssetId",
    "value": {
      "AllowedPattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Asset.AssetModelId",
    "value": {
      "AllowedPattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Asset.AssetArn",
    "value": {
      "AllowedPattern": ".*",
      "StringMax": 1600,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Asset.AssetName",
    "value": {
      "AllowedPattern": "[^\\u0000-\\u001F\\u007F]+",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Asset.AssetProperty.LogicalId",
    "value": {
      "AllowedPattern": "[^\\u0000-\\u001F\\u007F]+",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Asset.AssetProperty.Alias",
    "value": {
      "AllowedPattern": "[^\\u0000-\\u001F\\u007F]+",
      "StringMax": 1000,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Asset.AssetProperty.NotificationState",
    "value": {
      "AllowedValues": [
        "ENABLED",
        "DISABLED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Asset.AssetHierarchy.LogicalId",
    "value": {
      "AllowedPattern": "[^\\u0000-\\u001F\\u007F]+",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Asset.AssetHierarchy.ChildAssetId",
    "value": {
      "AllowedPattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Asset.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Asset.Tag.Value",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::AssetModel.AssetModelId",
    "value": {
      "AllowedPattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::AssetModel.AssetModelArn",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::AssetModel.AssetModelName",
    "value": {
      "AllowedPattern": "[^\\u0000-\\u001F\\u007F]+",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::AssetModel.AssetModelDescription",
    "value": {
      "AllowedPattern": "[^\\u0000-\\u001F\\u007F]+",
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::AssetModel.AssetModelProperty.LogicalId",
    "value": {
      "AllowedPattern": "[^\\u0000-\\u001F\\u007F]+",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::AssetModel.AssetModelProperty.Name",
    "value": {
      "AllowedPattern": "[^\\u0000-\\u001F\\u007F]+",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::AssetModel.AssetModelProperty.DataType",
    "value": {
      "AllowedValues": [
        "STRING",
        "INTEGER",
        "DOUBLE",
        "BOOLEAN"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::AssetModel.AssetModelProperty.Unit",
    "value": {
      "AllowedPattern": "[^\\u0000-\\u001F\\u007F]+",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::AssetModel.PropertyType.TypeName",
    "value": {
      "AllowedValues": [
        "Measurement",
        "Attribute",
        "Transform",
        "Metric"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::AssetModel.Attribute.DefaultValue",
    "value": {
      "AllowedPattern": "[^\\u0000-\\u001F\\u007F]+",
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::AssetModel.Transform.Expression",
    "value": {
      "AllowedPattern": "^[a-z0-9._+\\-*%/^, ()]+$",
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::AssetModel.ExpressionVariable.Name",
    "value": {
      "AllowedPattern": "^[a-z][a-z0-9_]*$",
      "StringMax": 64,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::AssetModel.VariableValue.PropertyLogicalId",
    "value": {
      "AllowedPattern": "[^\\u0000-\\u001F\\u007F]+",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::AssetModel.VariableValue.HierarchyLogicalId",
    "value": {
      "AllowedPattern": "[^\\u0000-\\u001F\\u007F]+",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::AssetModel.Metric.Expression",
    "value": {
      "AllowedPattern": "^[a-z0-9._+\\-*%/^, ()]+$",
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::AssetModel.TumblingWindow.Interval",
    "value": {
      "AllowedValues": [
        "1w",
        "1d",
        "1h",
        "15m",
        "5m",
        "1m"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::AssetModel.AssetModelHierarchy.LogicalId",
    "value": {
      "AllowedPattern": "[^\\u0000-\\u001F\\u007F]+",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::AssetModel.AssetModelHierarchy.Name",
    "value": {
      "AllowedPattern": "[^\\u0000-\\u001F\\u007F]+",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::AssetModel.AssetModelHierarchy.ChildAssetModelId",
    "value": {
      "AllowedPattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::AssetModel.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::AssetModel.Tag.Value",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Dashboard.ProjectId",
    "value": {
      "AllowedPattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
      "StringMax": 36,
      "StringMin": 36
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Dashboard.DashboardId",
    "value": {
      "AllowedPattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
      "StringMax": 36,
      "StringMin": 36
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Dashboard.DashboardName",
    "value": {
      "AllowedPattern": "[^\\u0000-\\u001F\\u007F]+",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Dashboard.DashboardDescription",
    "value": {
      "AllowedPattern": "[^\\u0000-\\u001F\\u007F]+",
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Dashboard.DashboardDefinition",
    "value": {
      "AllowedPattern": ".+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Dashboard.DashboardArn",
    "value": {
      "AllowedPattern": ".*",
      "StringMax": 1600,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Gateway.GatewayName",
    "value": {
      "AllowedPattern": "[^\\u0000-\\u001F\\u007F]+",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Gateway.Greengrass.GroupArn",
    "value": {
      "StringMax": 1600,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Gateway.GatewayId",
    "value": {
      "AllowedPattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Gateway.GatewayCapabilitySummary.CapabilityNamespace",
    "value": {
      "AllowedPattern": "^[a-zA-Z]+:[a-zA-Z]+:[0-9]+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Gateway.GatewayCapabilitySummary.CapabilityConfiguration",
    "value": {
      "StringMax": 204800,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Portal.PortalArn",
    "value": {
      "AllowedPattern": ".*",
      "StringMax": 1600,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Portal.PortalClientId",
    "value": {
      "AllowedPattern": "^[!-~]*",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Portal.PortalContactEmail",
    "value": {
      "AllowedPattern": "[^@]+@[^@]+",
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Portal.PortalDescription",
    "value": {
      "AllowedPattern": "[^\\u0000-\\u001F\\u007F]+",
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Portal.PortalId",
    "value": {
      "AllowedPattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
      "StringMax": 36,
      "StringMin": 36
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Portal.PortalName",
    "value": {
      "AllowedPattern": "[^\\u0000-\\u001F\\u007F]+",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Portal.PortalStartUrl",
    "value": {
      "AllowedPattern": "^(http|https)\\://\\S+",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Portal.RoleArn",
    "value": {
      "AllowedPattern": ".*",
      "StringMax": 1600,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Project.PortalId",
    "value": {
      "AllowedPattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
      "StringMax": 36,
      "StringMin": 36
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Project.ProjectId",
    "value": {
      "AllowedPattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
      "StringMax": 36,
      "StringMin": 36
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Project.ProjectName",
    "value": {
      "AllowedPattern": "[^\\u0000-\\u001F\\u007F]+",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Project.ProjectDescription",
    "value": {
      "AllowedPattern": "[^\\u0000-\\u001F\\u007F]+",
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTSiteWise::Project.ProjectArn",
    "value": {
      "AllowedPattern": ".*",
      "StringMax": 1600,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTWireless::Destination.Name",
    "value": {
      "AllowedPattern": "[a-zA-Z0-9:_-]+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTWireless::Destination.ExpressionType",
    "value": {
      "AllowedValues": [
        "RuleName",
        "ExpressionType"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTWireless::Destination.Tag.Key",
    "value": {
      "StringMax": 127,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTWireless::Destination.Tag.Value",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTWireless::Destination.RoleArn",
    "value": {
      "StringMax": 2048,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTWireless::DeviceProfile.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTWireless::DeviceProfile.Tag.Value",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTWireless::ServiceProfile.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTWireless::ServiceProfile.Tag.Value",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTWireless::WirelessDevice.Type",
    "value": {
      "AllowedValues": [
        "Sidewalk",
        "LoRaWAN"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTWireless::WirelessDevice.LoRaWANDevice.DevEui",
    "value": {
      "AllowedPattern": "[a-f0-9]{16}"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTWireless::WirelessDevice.OtaaV11.AppKey",
    "value": {
      "AllowedPattern": "[a-fA-F0-9]{32}"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTWireless::WirelessDevice.OtaaV11.NwkKey",
    "value": {
      "AllowedPattern": "[a-fA-F0-9]{32}"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTWireless::WirelessDevice.OtaaV11.JoinEui",
    "value": {
      "AllowedPattern": "[a-fA-F0-9]{16}"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTWireless::WirelessDevice.OtaaV10X.AppKey",
    "value": {
      "AllowedPattern": "[a-fA-F0-9]{32}"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTWireless::WirelessDevice.OtaaV10X.AppEui",
    "value": {
      "AllowedPattern": "[a-fA-F0-9]{16}"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTWireless::WirelessDevice.AbpV11.DevAddr",
    "value": {
      "AllowedPattern": "[a-fA-F0-9]{8}"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTWireless::WirelessDevice.SessionKeysAbpV11.FNwkSIntKey",
    "value": {
      "AllowedPattern": "[a-fA-F0-9]{32}"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTWireless::WirelessDevice.SessionKeysAbpV11.SNwkSIntKey",
    "value": {
      "AllowedPattern": "[a-fA-F0-9]{32}"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTWireless::WirelessDevice.SessionKeysAbpV11.NwkSEncKey",
    "value": {
      "AllowedPattern": "[a-fA-F0-9]{32}"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTWireless::WirelessDevice.SessionKeysAbpV11.AppSKey",
    "value": {
      "AllowedPattern": "[a-fA-F0-9]{32}"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTWireless::WirelessDevice.AbpV10X.DevAddr",
    "value": {
      "AllowedPattern": "[a-fA-F0-9]{8}"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTWireless::WirelessDevice.SessionKeysAbpV10X.NwkSKey",
    "value": {
      "AllowedPattern": "[a-fA-F0-9]{32}"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTWireless::WirelessDevice.SessionKeysAbpV10X.AppSKey",
    "value": {
      "AllowedPattern": "[a-fA-F0-9]{32}"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTWireless::WirelessDevice.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTWireless::WirelessGateway.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::IoTWireless::WirelessGateway.LoRaWANGateway.GatewayEui",
    "value": {
      "AllowedPattern": "^(([0-9a-f]{2}-){7}|([0-9a-f]{2}:){7}|([0-9a-f]{2}\\s){7}|([0-9a-f]{2}){7})([0-9a-f]{2})$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KMS::Alias.AliasName",
    "value": {
      "AllowedPattern": "^(alias/)[a-zA-Z0-9:/_-]+$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KMS::Alias.TargetKeyId",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KMS::Key.KeyUsage",
    "value": {
      "AllowedValues": [
        "ENCRYPT_DECRYPT",
        "SIGN_VERIFY"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KMS::Key.KeySpec",
    "value": {
      "AllowedValues": [
        "SYMMETRIC_DEFAULT",
        "RSA_2048",
        "RSA_3072",
        "RSA_4096",
        "ECC_NIST_P256",
        "ECC_NIST_P384",
        "ECC_NIST_P521",
        "ECC_SECG_P256K1"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KMS::Key.PendingWindowInDays",
    "value": {
      "NumberMax": 30,
      "NumberMin": 7
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KMS::Key.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.Id",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.Name",
    "value": {
      "StringMax": 1000,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.IndexId",
    "value": {
      "StringMax": 36,
      "StringMin": 36
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.Type",
    "value": {
      "AllowedValues": [
        "S3",
        "SHAREPOINT",
        "SALESFORCE",
        "ONEDRIVE",
        "SERVICENOW",
        "DATABASE",
        "CUSTOM",
        "CONFLUENCE",
        "GOOGLEDRIVE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.S3DataSourceConfiguration.BucketName",
    "value": {
      "AllowedPattern": "[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9]",
      "StringMax": 63,
      "StringMin": 3
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.S3DataSourceConfiguration.InclusionPrefixes",
    "value": {
      "StringMax": 50,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.S3DataSourceConfiguration.InclusionPatterns",
    "value": {
      "StringMax": 50,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.S3DataSourceConfiguration.ExclusionPatterns",
    "value": {
      "StringMax": 50,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.DocumentsMetadataConfiguration.S3Prefix",
    "value": {
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.AccessControlListConfiguration.KeyPath",
    "value": {
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.SharePointConfiguration.SharePointVersion",
    "value": {
      "AllowedValues": [
        "SHAREPOINT_ONLINE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.SharePointConfiguration.Urls",
    "value": {
      "AllowedPattern": "^(https?|ftp|file)://([^\\s]*)",
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.SharePointConfiguration.SecretArn",
    "value": {
      "AllowedPattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
      "StringMax": 1284,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.SharePointConfiguration.InclusionPatterns",
    "value": {
      "StringMax": 50,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.SharePointConfiguration.ExclusionPatterns",
    "value": {
      "StringMax": 50,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.DataSourceVpcConfiguration.SubnetIds",
    "value": {
      "AllowedPattern": "[\\-0-9a-zA-Z]+",
      "StringMax": 200,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.DataSourceVpcConfiguration.SecurityGroupIds",
    "value": {
      "AllowedPattern": "[\\-0-9a-zA-Z]+",
      "StringMax": 200,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.DataSourceToIndexFieldMapping.DataSourceFieldName",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.DataSourceToIndexFieldMapping.DateFieldFormat",
    "value": {
      "StringMax": 40,
      "StringMin": 4
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.DataSourceToIndexFieldMapping.IndexFieldName",
    "value": {
      "StringMax": 30,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.SharePointConfiguration.DocumentTitleFieldName",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.SalesforceConfiguration.ServerUrl",
    "value": {
      "AllowedPattern": "^(https?|ftp|file)://([^\\s]*)",
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.SalesforceConfiguration.SecretArn",
    "value": {
      "AllowedPattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
      "StringMax": 1284,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.SalesforceStandardObjectConfiguration.Name",
    "value": {
      "AllowedValues": [
        "ACCOUNT",
        "CAMPAIGN",
        "CASE",
        "CONTACT",
        "CONTRACT",
        "DOCUMENT",
        "GROUP",
        "IDEA",
        "LEAD",
        "OPPORTUNITY",
        "PARTNER",
        "PRICEBOOK",
        "PRODUCT",
        "PROFILE",
        "SOLUTION",
        "TASK",
        "USER"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.SalesforceStandardObjectConfiguration.DocumentDataFieldName",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.SalesforceStandardObjectConfiguration.DocumentTitleFieldName",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.SalesforceKnowledgeArticleConfiguration.IncludedStates",
    "value": {
      "AllowedValues": [
        "DRAFT",
        "PUBLISHED",
        "ARCHIVED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.SalesforceStandardKnowledgeArticleTypeConfiguration.DocumentDataFieldName",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.SalesforceStandardKnowledgeArticleTypeConfiguration.DocumentTitleFieldName",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.SalesforceCustomKnowledgeArticleTypeConfiguration.Name",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.SalesforceCustomKnowledgeArticleTypeConfiguration.DocumentDataFieldName",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.SalesforceCustomKnowledgeArticleTypeConfiguration.DocumentTitleFieldName",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.SalesforceChatterFeedConfiguration.DocumentDataFieldName",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.SalesforceChatterFeedConfiguration.DocumentTitleFieldName",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.SalesforceChatterFeedConfiguration.IncludeFilterTypes",
    "value": {
      "AllowedValues": [
        "ACTIVE_USER",
        "STANDARD_USER"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.SalesforceStandardObjectAttachmentConfiguration.DocumentTitleFieldName",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.SalesforceConfiguration.IncludeAttachmentFilePatterns",
    "value": {
      "StringMax": 50,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.SalesforceConfiguration.ExcludeAttachmentFilePatterns",
    "value": {
      "StringMax": 50,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.OneDriveConfiguration.TenantDomain",
    "value": {
      "AllowedPattern": "^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+[a-z]{2,}$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.OneDriveConfiguration.SecretArn",
    "value": {
      "AllowedPattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
      "StringMax": 1284,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.OneDriveUsers.OneDriveUserList",
    "value": {
      "AllowedPattern": "^(?!\\s).+@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.S3Path.Bucket",
    "value": {
      "AllowedPattern": "[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9]",
      "StringMax": 63,
      "StringMin": 3
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.S3Path.Key",
    "value": {
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.OneDriveConfiguration.InclusionPatterns",
    "value": {
      "StringMax": 50,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.OneDriveConfiguration.ExclusionPatterns",
    "value": {
      "StringMax": 50,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ServiceNowConfiguration.HostUrl",
    "value": {
      "AllowedPattern": "^(?!(^(https?|ftp|file):\\/\\/))[a-z0-9-]+(\\.service-now\\.com)$",
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ServiceNowConfiguration.SecretArn",
    "value": {
      "AllowedPattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
      "StringMax": 1284,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ServiceNowConfiguration.ServiceNowBuildVersion",
    "value": {
      "AllowedValues": [
        "LONDON",
        "OTHERS"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ServiceNowKnowledgeArticleConfiguration.IncludeAttachmentFilePatterns",
    "value": {
      "StringMax": 50,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ServiceNowKnowledgeArticleConfiguration.ExcludeAttachmentFilePatterns",
    "value": {
      "StringMax": 50,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ServiceNowKnowledgeArticleConfiguration.DocumentDataFieldName",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ServiceNowKnowledgeArticleConfiguration.DocumentTitleFieldName",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ServiceNowServiceCatalogConfiguration.IncludeAttachmentFilePatterns",
    "value": {
      "StringMax": 50,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ServiceNowServiceCatalogConfiguration.ExcludeAttachmentFilePatterns",
    "value": {
      "StringMax": 50,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ServiceNowServiceCatalogConfiguration.DocumentDataFieldName",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ServiceNowServiceCatalogConfiguration.DocumentTitleFieldName",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.DatabaseConfiguration.DatabaseEngineType",
    "value": {
      "AllowedValues": [
        "RDS_AURORA_MYSQL",
        "RDS_AURORA_POSTGRESQL",
        "RDS_MYSQL",
        "RDS_POSTGRESQL"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ConnectionConfiguration.DatabaseHost",
    "value": {
      "StringMax": 253,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ConnectionConfiguration.DatabasePort",
    "value": {
      "NumberMax": 65535,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ConnectionConfiguration.DatabaseName",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ConnectionConfiguration.TableName",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ConnectionConfiguration.SecretArn",
    "value": {
      "AllowedPattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
      "StringMax": 1284,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ColumnConfiguration.DocumentIdColumnName",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ColumnConfiguration.DocumentDataColumnName",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ColumnConfiguration.DocumentTitleColumnName",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ColumnConfiguration.ChangeDetectingColumns",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.AclConfiguration.AllowedGroupsColumnName",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.SqlConfiguration.QueryIdentifiersEnclosingOption",
    "value": {
      "AllowedValues": [
        "DOUBLE_QUOTES",
        "NONE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ConfluenceConfiguration.ServerUrl",
    "value": {
      "AllowedPattern": "^(https?|ftp|file)://([^\\s]*)",
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ConfluenceConfiguration.SecretArn",
    "value": {
      "AllowedPattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
      "StringMax": 1284,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ConfluenceConfiguration.Version",
    "value": {
      "AllowedValues": [
        "CLOUD",
        "SERVER"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ConfluenceSpaceConfiguration.IncludeSpaces",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ConfluenceSpaceConfiguration.ExcludeSpaces",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ConfluenceSpaceToIndexFieldMapping.DataSourceFieldName",
    "value": {
      "AllowedValues": [
        "DISPLAY_URL",
        "ITEM_TYPE",
        "SPACE_KEY",
        "URL"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ConfluenceSpaceToIndexFieldMapping.DateFieldFormat",
    "value": {
      "StringMax": 40,
      "StringMin": 4
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ConfluenceSpaceToIndexFieldMapping.IndexFieldName",
    "value": {
      "StringMax": 30,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ConfluencePageToIndexFieldMapping.DataSourceFieldName",
    "value": {
      "AllowedValues": [
        "AUTHOR",
        "CONTENT_STATUS",
        "CREATED_DATE",
        "DISPLAY_URL",
        "ITEM_TYPE",
        "LABELS",
        "MODIFIED_DATE",
        "PARENT_ID",
        "SPACE_KEY",
        "SPACE_NAME",
        "URL",
        "VERSION"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ConfluencePageToIndexFieldMapping.DateFieldFormat",
    "value": {
      "StringMax": 40,
      "StringMin": 4
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ConfluencePageToIndexFieldMapping.IndexFieldName",
    "value": {
      "StringMax": 30,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ConfluenceBlogToIndexFieldMapping.DataSourceFieldName",
    "value": {
      "AllowedValues": [
        "AUTHOR",
        "DISPLAY_URL",
        "ITEM_TYPE",
        "LABELS",
        "PUBLISH_DATE",
        "SPACE_KEY",
        "SPACE_NAME",
        "URL",
        "VERSION"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ConfluenceBlogToIndexFieldMapping.DateFieldFormat",
    "value": {
      "StringMax": 40,
      "StringMin": 4
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ConfluenceBlogToIndexFieldMapping.IndexFieldName",
    "value": {
      "StringMax": 30,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ConfluenceAttachmentToIndexFieldMapping.DataSourceFieldName",
    "value": {
      "AllowedValues": [
        "AUTHOR",
        "CONTENT_TYPE",
        "CREATED_DATE",
        "DISPLAY_URL",
        "FILE_SIZE",
        "ITEM_TYPE",
        "PARENT_ID",
        "SPACE_KEY",
        "SPACE_NAME",
        "URL",
        "VERSION"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ConfluenceAttachmentToIndexFieldMapping.DateFieldFormat",
    "value": {
      "StringMax": 40,
      "StringMin": 4
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ConfluenceAttachmentToIndexFieldMapping.IndexFieldName",
    "value": {
      "StringMax": 30,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ConfluenceConfiguration.InclusionPatterns",
    "value": {
      "StringMax": 50,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.ConfluenceConfiguration.ExclusionPatterns",
    "value": {
      "StringMax": 50,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.GoogleDriveConfiguration.SecretArn",
    "value": {
      "AllowedPattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
      "StringMax": 1284,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.GoogleDriveConfiguration.InclusionPatterns",
    "value": {
      "StringMax": 50,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.GoogleDriveConfiguration.ExclusionPatterns",
    "value": {
      "StringMax": 50,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.GoogleDriveConfiguration.ExcludeMimeTypes",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.GoogleDriveConfiguration.ExcludeUserAccounts",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.GoogleDriveConfiguration.ExcludeSharedDrives",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.Description",
    "value": {
      "StringMax": 1000,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.RoleArn",
    "value": {
      "AllowedPattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
      "StringMax": 1284,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::DataSource.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Faq.Id",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Faq.IndexId",
    "value": {
      "StringMax": 36,
      "StringMin": 36
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Faq.Name",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Faq.Description",
    "value": {
      "StringMax": 1000,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Faq.FileFormat",
    "value": {
      "AllowedValues": [
        "CSV",
        "CSV_WITH_HEADER",
        "JSON"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Faq.S3Path.Bucket",
    "value": {
      "AllowedPattern": "[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9]",
      "StringMax": 63,
      "StringMin": 3
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Faq.S3Path.Key",
    "value": {
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Faq.RoleArn",
    "value": {
      "AllowedPattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
      "StringMax": 1284,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Faq.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Index.Id",
    "value": {
      "StringMax": 36,
      "StringMin": 36
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Index.ServerSideEncryptionConfiguration.KmsKeyId",
    "value": {
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Index.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Index.Name",
    "value": {
      "StringMax": 1000,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Index.RoleArn",
    "value": {
      "AllowedPattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
      "StringMax": 1284,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Index.Edition",
    "value": {
      "AllowedValues": [
        "DEVELOPER_EDITION",
        "ENTERPRISE_EDITION"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Index.DocumentMetadataConfiguration.Name",
    "value": {
      "StringMax": 30,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Index.DocumentMetadataConfiguration.Type",
    "value": {
      "AllowedValues": [
        "STRING_VALUE",
        "STRING_LIST_VALUE",
        "LONG_VALUE",
        "DATE_VALUE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Index.Relevance.Importance",
    "value": {
      "NumberMax": 10,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Index.Relevance.Duration",
    "value": {
      "AllowedPattern": "[0-9]+[s]",
      "StringMax": 10,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Index.Relevance.RankOrder",
    "value": {
      "AllowedValues": [
        "ASCENDING",
        "DESCENDING"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Index.ValueImportanceItem.Key",
    "value": {
      "StringMax": 50,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Index.ValueImportanceItem.Value",
    "value": {
      "NumberMax": 10,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Index.UserContextPolicy",
    "value": {
      "AllowedValues": [
        "ATTRIBUTE_FILTER",
        "USER_TOKEN"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Index.JwtTokenTypeConfiguration.KeyLocation",
    "value": {
      "AllowedValues": [
        "URL",
        "SECRET_MANAGER"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Index.JwtTokenTypeConfiguration.URL",
    "value": {
      "AllowedPattern": "^(https?|ftp|file):\\/\\/([^\\s]*)",
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Index.JwtTokenTypeConfiguration.SecretManagerArn",
    "value": {
      "AllowedPattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
      "StringMax": 1284,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Index.JwtTokenTypeConfiguration.UserNameAttributeField",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Index.JwtTokenTypeConfiguration.GroupAttributeField",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Index.JwtTokenTypeConfiguration.Issuer",
    "value": {
      "StringMax": 65,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Index.JwtTokenTypeConfiguration.ClaimRegex",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Index.JsonTokenTypeConfiguration.UserNameAttributeField",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kendra::Index.JsonTokenTypeConfiguration.GroupAttributeField",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kinesis::Stream.Name",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9_.-]+$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kinesis::Stream.StreamEncryption.EncryptionType",
    "value": {
      "AllowedValues": [
        "KMS"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kinesis::Stream.StreamEncryption.KeyId",
    "value": {
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Kinesis::Stream.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.DeliveryStreamEncryptionConfigurationInput.KeyARN",
    "value": {
      "AllowedPattern": "arn:.*",
      "StringMax": 512,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.DeliveryStreamEncryptionConfigurationInput.KeyType",
    "value": {
      "AllowedValues": [
        "AWS_OWNED_CMK",
        "CUSTOMER_MANAGED_CMK"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.DeliveryStreamName",
    "value": {
      "AllowedPattern": "[a-zA-Z0-9._-]+",
      "StringMax": 64,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.DeliveryStreamType",
    "value": {
      "AllowedValues": [
        "DirectPut",
        "KinesisStreamAsSource"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.ElasticsearchDestinationConfiguration.DomainARN",
    "value": {
      "AllowedPattern": "arn:.*",
      "StringMax": 512,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.ElasticsearchDestinationConfiguration.IndexName",
    "value": {
      "StringMax": 80,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.ElasticsearchDestinationConfiguration.IndexRotationPeriod",
    "value": {
      "AllowedValues": [
        "NoRotation",
        "OneHour",
        "OneDay",
        "OneWeek",
        "OneMonth"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.Processor.Type",
    "value": {
      "AllowedValues": [
        "Lambda"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.ElasticsearchDestinationConfiguration.RoleARN",
    "value": {
      "AllowedPattern": "arn:.*",
      "StringMax": 512,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.ElasticsearchDestinationConfiguration.S3BackupMode",
    "value": {
      "AllowedValues": [
        "FailedDocumentsOnly",
        "AllDocuments"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.S3DestinationConfiguration.BucketARN",
    "value": {
      "AllowedPattern": "arn:.*",
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.S3DestinationConfiguration.CompressionFormat",
    "value": {
      "AllowedValues": [
        "UNCOMPRESSED",
        "GZIP",
        "ZIP",
        "Snappy",
        "HADOOP_SNAPPY"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.EncryptionConfiguration.NoEncryptionConfig",
    "value": {
      "AllowedValues": [
        "NoEncryption"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.S3DestinationConfiguration.RoleARN",
    "value": {
      "AllowedPattern": "arn:.*",
      "StringMax": 512,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.ElasticsearchDestinationConfiguration.ClusterEndpoint",
    "value": {
      "AllowedPattern": "https:.*",
      "StringMax": 512,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.VpcConfiguration.RoleARN",
    "value": {
      "AllowedPattern": "arn:.*",
      "StringMax": 512,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.VpcConfiguration.SubnetIds",
    "value": {
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.VpcConfiguration.SecurityGroupIds",
    "value": {
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.ExtendedS3DestinationConfiguration.BucketARN",
    "value": {
      "AllowedPattern": "arn:.*",
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.ExtendedS3DestinationConfiguration.CompressionFormat",
    "value": {
      "AllowedValues": [
        "UNCOMPRESSED",
        "GZIP",
        "ZIP",
        "Snappy",
        "HADOOP_SNAPPY"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.SchemaConfiguration.RoleARN",
    "value": {
      "AllowedPattern": "arn:.*",
      "StringMax": 512,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.ExtendedS3DestinationConfiguration.RoleARN",
    "value": {
      "AllowedPattern": "arn:.*",
      "StringMax": 512,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.ExtendedS3DestinationConfiguration.S3BackupMode",
    "value": {
      "AllowedValues": [
        "Disabled",
        "Enabled"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.KinesisStreamSourceConfiguration.KinesisStreamARN",
    "value": {
      "AllowedPattern": "arn:.*",
      "StringMax": 512,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.KinesisStreamSourceConfiguration.RoleARN",
    "value": {
      "AllowedPattern": "arn:.*",
      "StringMax": 512,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.RedshiftDestinationConfiguration.ClusterJDBCURL",
    "value": {
      "StringMax": 512,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.CopyCommand.DataTableName",
    "value": {
      "StringMax": 512,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.RedshiftDestinationConfiguration.Password",
    "value": {
      "StringMax": 512,
      "StringMin": 6
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.RedshiftDestinationConfiguration.RoleARN",
    "value": {
      "AllowedPattern": "arn:.*",
      "StringMax": 512,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.RedshiftDestinationConfiguration.S3BackupMode",
    "value": {
      "AllowedValues": [
        "Disabled",
        "Enabled"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.RedshiftDestinationConfiguration.Username",
    "value": {
      "StringMax": 512,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.SplunkDestinationConfiguration.HECAcknowledgmentTimeoutInSeconds",
    "value": {
      "NumberMax": 600,
      "NumberMin": 180
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.SplunkDestinationConfiguration.HECEndpointType",
    "value": {
      "AllowedValues": [
        "Raw",
        "Event"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.HttpEndpointDestinationConfiguration.RoleARN",
    "value": {
      "AllowedPattern": "arn:.*",
      "StringMax": 512,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.HttpEndpointConfiguration.Url",
    "value": {
      "StringMax": 1000,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.HttpEndpointConfiguration.Name",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.HttpEndpointRequestConfiguration.ContentEncoding",
    "value": {
      "AllowedValues": [
        "NONE",
        "GZIP"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.HttpEndpointCommonAttribute.AttributeName",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.Tag.Key",
    "value": {
      "AllowedPattern": "^(?!aws:)[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@%]*$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::KinesisFirehose::DeliveryStream.Tag.Value",
    "value": {
      "AllowedPattern": "^[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@%]*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Lambda::CodeSigningConfig.AllowedPublishers.SigningProfileVersionArns",
    "value": {
      "AllowedPattern": "arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
      "StringMax": 1024,
      "StringMin": 12
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Lambda::CodeSigningConfig.CodeSigningPolicies.UntrustedArtifactOnDeployment",
    "value": {
      "AllowedValues": [
        "Warn",
        "Enforce"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Lambda::CodeSigningConfig.CodeSigningConfigId",
    "value": {
      "AllowedPattern": "csc-[a-zA-Z0-9-_\\.]{17}"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Lambda::CodeSigningConfig.CodeSigningConfigArn",
    "value": {
      "AllowedPattern": "arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1}:\\d{12}:code-signing-config:csc-[a-z0-9]{17}"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Lambda::EventSourceMapping.Id",
    "value": {
      "AllowedPattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
      "StringMax": 36,
      "StringMin": 36
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Lambda::EventSourceMapping.BatchSize",
    "value": {
      "NumberMax": 10000,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Lambda::EventSourceMapping.OnFailure.Destination",
    "value": {
      "AllowedPattern": "arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
      "StringMax": 1024,
      "StringMin": 12
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Lambda::EventSourceMapping.EventSourceArn",
    "value": {
      "AllowedPattern": "arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
      "StringMax": 1024,
      "StringMin": 12
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Lambda::EventSourceMapping.FunctionName",
    "value": {
      "AllowedPattern": "(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\\d{1}:)?(\\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\\$LATEST|[a-zA-Z0-9-_]+))?",
      "StringMax": 140,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Lambda::EventSourceMapping.MaximumRecordAgeInSeconds",
    "value": {
      "NumberMax": 604800,
      "NumberMin": -1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Lambda::EventSourceMapping.MaximumRetryAttempts",
    "value": {
      "NumberMax": 10000,
      "NumberMin": -1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Lambda::EventSourceMapping.ParallelizationFactor",
    "value": {
      "NumberMax": 10,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Lambda::EventSourceMapping.StartingPosition",
    "value": {
      "AllowedPattern": "(LATEST|TRIM_HORIZON)+",
      "StringMax": 12,
      "StringMin": 6
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Lambda::EventSourceMapping.Topics",
    "value": {
      "AllowedPattern": "^[^.]([a-zA-Z0-9\\-_.]+)",
      "StringMax": 249,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Lambda::EventSourceMapping.Queues",
    "value": {
      "AllowedPattern": "[\\s\\S]*",
      "StringMax": 1000,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Lambda::EventSourceMapping.SourceAccessConfiguration.Type",
    "value": {
      "AllowedValues": [
        "BASIC_AUTH",
        "VPC_SUBNET",
        "VPC_SECURITY_GROUP",
        "SASL_SCRAM_512_AUTH",
        "SASL_SCRAM_256_AUTH"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Lambda::EventSourceMapping.SourceAccessConfiguration.URI",
    "value": {
      "AllowedPattern": "[a-zA-Z0-9-\\/*:_+=.@-]*",
      "StringMax": 200,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Lambda::EventSourceMapping.FunctionResponseTypes",
    "value": {
      "AllowedValues": [
        "ReportBatchItemFailures"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Lambda::EventSourceMapping.Endpoints.KafkaBootstrapServers",
    "value": {
      "AllowedPattern": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9]):[0-9]{1,5}",
      "StringMax": 300,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::LicenseManager::License.ProductSKU",
    "value": {
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Logs::LogGroup.LogGroupName",
    "value": {
      "AllowedPattern": "^[.\\-_/#A-Za-z0-9]{1,512}\\Z",
      "StringMax": 512,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Logs::LogGroup.KmsKeyId",
    "value": {
      "AllowedPattern": "^arn:[a-z0-9-]+:kms:[a-z0-9-]+:\\d{12}:(key|alias)/.+\\Z"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MWAA::Environment.Name",
    "value": {
      "AllowedPattern": "^[a-zA-Z][0-9a-zA-Z\\-_]*$",
      "StringMax": 80,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MWAA::Environment.Status",
    "value": {
      "AllowedValues": [
        "CREATING",
        "CREATE_FAILED",
        "AVAILABLE",
        "UPDATING",
        "DELETING",
        "DELETED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MWAA::Environment.Arn",
    "value": {
      "AllowedPattern": "^arn:aws(-[a-z]+)?:airflow:[a-z0-9\\-]+:\\d{12}:environment/\\w+",
      "StringMax": 1224,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MWAA::Environment.WebserverUrl",
    "value": {
      "AllowedPattern": "^https://.+$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MWAA::Environment.ExecutionRoleArn",
    "value": {
      "AllowedPattern": "^arn:aws(-[a-z]+)?:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MWAA::Environment.ServiceRoleArn",
    "value": {
      "AllowedPattern": "^arn:aws(-[a-z]+)?:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MWAA::Environment.KmsKey",
    "value": {
      "AllowedPattern": "^(((arn:aws(-[a-z]+)?:kms:[a-z]{2}-[a-z]+-\\d:\\d+:)?key\\/)?[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}|(arn:aws:kms:[a-z]{2}-[a-z]+-\\d:\\d+:)?alias/.+)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MWAA::Environment.AirflowVersion",
    "value": {
      "AllowedPattern": "^[0-9a-z.]+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MWAA::Environment.SourceBucketArn",
    "value": {
      "AllowedPattern": "^arn:aws(-[a-z]+)?:s3:::airflow-[a-z0-9.\\-]+$",
      "StringMax": 1224,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MWAA::Environment.DagS3Path",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MWAA::Environment.PluginsS3Path",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MWAA::Environment.RequirementsS3Path",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MWAA::Environment.EnvironmentClass",
    "value": {
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MWAA::Environment.NetworkConfiguration.SubnetIds",
    "value": {
      "AllowedPattern": "^subnet-[a-zA-Z0-9\\-._]+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MWAA::Environment.NetworkConfiguration.SecurityGroupIds",
    "value": {
      "AllowedPattern": "^sg-[a-zA-Z0-9\\-._]+$",
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MWAA::Environment.ModuleLoggingConfiguration.LogLevel",
    "value": {
      "AllowedValues": [
        "CRITICAL",
        "ERROR",
        "WARNING",
        "INFO",
        "DEBUG"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MWAA::Environment.ModuleLoggingConfiguration.CloudWatchLogGroupArn",
    "value": {
      "AllowedPattern": "^arn:aws(-[a-z]+)?:logs:[a-z0-9\\-]+:\\d{12}:log-group:\\w+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MWAA::Environment.LastUpdate.Status",
    "value": {
      "AllowedValues": [
        "SUCCESS",
        "PENDING",
        "FAILED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MWAA::Environment.UpdateError.ErrorMessage",
    "value": {
      "AllowedPattern": "^.+$",
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MWAA::Environment.WeeklyMaintenanceWindowStart",
    "value": {
      "AllowedPattern": "(MON|TUE|WED|THU|FRI|SAT|SUN):([01]\\d|2[0-3]):(00|30)"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MWAA::Environment.WebserverAccessMode",
    "value": {
      "AllowedValues": [
        "PRIVATE_ONLY",
        "PUBLIC_ONLY"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Macie::FindingsFilter.Action",
    "value": {
      "AllowedValues": [
        "ARCHIVE",
        "NOOP"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Macie::Session.Status",
    "value": {
      "AllowedValues": [
        "ENABLED",
        "PAUSED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Macie::Session.FindingPublishingFrequency",
    "value": {
      "AllowedValues": [
        "FIFTEEN_MINUTES",
        "ONE_HOUR",
        "SIX_HOURS"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaConnect::Flow.Encryption.Algorithm",
    "value": {
      "AllowedValues": [
        "aes128",
        "aes192",
        "aes256"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaConnect::Flow.Encryption.KeyType",
    "value": {
      "AllowedValues": [
        "speke",
        "static-key"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaConnect::Flow.Source.Protocol",
    "value": {
      "AllowedValues": [
        "zixi-push",
        "rtp-fec",
        "rtp",
        "rist"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaConnect::Flow.FailoverConfig.State",
    "value": {
      "AllowedValues": [
        "ENABLED",
        "DISABLED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaConnect::FlowEntitlement.Encryption.Algorithm",
    "value": {
      "AllowedValues": [
        "aes128",
        "aes192",
        "aes256"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaConnect::FlowEntitlement.Encryption.KeyType",
    "value": {
      "AllowedValues": [
        "speke",
        "static-key"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaConnect::FlowEntitlement.EntitlementStatus",
    "value": {
      "AllowedValues": [
        "ENABLED",
        "DISABLED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaConnect::FlowOutput.Encryption.Algorithm",
    "value": {
      "AllowedValues": [
        "aes128",
        "aes192",
        "aes256"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaConnect::FlowOutput.Encryption.KeyType",
    "value": {
      "AllowedValues": [
        "static-key"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaConnect::FlowOutput.Protocol",
    "value": {
      "AllowedValues": [
        "zixi-push",
        "rtp-fec",
        "rtp",
        "zixi-pull",
        "rist"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaConnect::FlowSource.Encryption.Algorithm",
    "value": {
      "AllowedValues": [
        "aes128",
        "aes192",
        "aes256"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaConnect::FlowSource.Encryption.KeyType",
    "value": {
      "AllowedValues": [
        "speke",
        "static-key"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaConnect::FlowSource.Protocol",
    "value": {
      "AllowedValues": [
        "zixi-push",
        "rtp-fec",
        "rtp",
        "rist"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaPackage::Channel.Id",
    "value": {
      "AllowedPattern": "\\A[0-9a-zA-Z-_]+\\Z",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaPackage::OriginEndpoint.Id",
    "value": {
      "AllowedPattern": "\\A[0-9a-zA-Z-_]+\\Z",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaPackage::OriginEndpoint.Origination",
    "value": {
      "AllowedValues": [
        "ALLOW",
        "DENY"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaPackage::OriginEndpoint.HlsPackage.PlaylistType",
    "value": {
      "AllowedValues": [
        "NONE",
        "EVENT",
        "VOD"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaPackage::OriginEndpoint.HlsPackage.AdMarkers",
    "value": {
      "AllowedValues": [
        "NONE",
        "SCTE35_ENHANCED",
        "PASSTHROUGH",
        "DATERANGE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaPackage::OriginEndpoint.HlsPackage.AdTriggers",
    "value": {
      "AllowedValues": [
        "SPLICE_INSERT",
        "BREAK",
        "PROVIDER_ADVERTISEMENT",
        "DISTRIBUTOR_ADVERTISEMENT",
        "PROVIDER_PLACEMENT_OPPORTUNITY",
        "DISTRIBUTOR_PLACEMENT_OPPORTUNITY",
        "PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY",
        "DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaPackage::OriginEndpoint.HlsPackage.AdsOnDeliveryRestrictions",
    "value": {
      "AllowedValues": [
        "NONE",
        "RESTRICTED",
        "UNRESTRICTED",
        "BOTH"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaPackage::OriginEndpoint.HlsEncryption.EncryptionMethod",
    "value": {
      "AllowedValues": [
        "AES_128",
        "SAMPLE_AES"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaPackage::OriginEndpoint.StreamSelection.StreamOrder",
    "value": {
      "AllowedValues": [
        "ORIGINAL",
        "VIDEO_BITRATE_ASCENDING",
        "VIDEO_BITRATE_DESCENDING"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaPackage::OriginEndpoint.DashPackage.Profile",
    "value": {
      "AllowedValues": [
        "NONE",
        "HBBTV_1_5"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaPackage::OriginEndpoint.DashPackage.PeriodTriggers",
    "value": {
      "AllowedValues": [
        "ADS"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaPackage::OriginEndpoint.DashPackage.ManifestLayout",
    "value": {
      "AllowedValues": [
        "FULL",
        "COMPACT"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaPackage::OriginEndpoint.DashPackage.SegmentTemplateFormat",
    "value": {
      "AllowedValues": [
        "NUMBER_WITH_TIMELINE",
        "TIME_WITH_TIMELINE",
        "NUMBER_WITH_DURATION"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaPackage::OriginEndpoint.DashPackage.AdTriggers",
    "value": {
      "AllowedValues": [
        "SPLICE_INSERT",
        "BREAK",
        "PROVIDER_ADVERTISEMENT",
        "DISTRIBUTOR_ADVERTISEMENT",
        "PROVIDER_PLACEMENT_OPPORTUNITY",
        "DISTRIBUTOR_PLACEMENT_OPPORTUNITY",
        "PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY",
        "DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaPackage::OriginEndpoint.DashPackage.AdsOnDeliveryRestrictions",
    "value": {
      "AllowedValues": [
        "NONE",
        "RESTRICTED",
        "UNRESTRICTED",
        "BOTH"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaPackage::OriginEndpoint.HlsManifest.PlaylistType",
    "value": {
      "AllowedValues": [
        "NONE",
        "EVENT",
        "VOD"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaPackage::OriginEndpoint.HlsManifest.AdMarkers",
    "value": {
      "AllowedValues": [
        "NONE",
        "SCTE35_ENHANCED",
        "PASSTHROUGH",
        "DATERANGE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaPackage::OriginEndpoint.HlsManifest.AdTriggers",
    "value": {
      "AllowedValues": [
        "SPLICE_INSERT",
        "BREAK",
        "PROVIDER_ADVERTISEMENT",
        "DISTRIBUTOR_ADVERTISEMENT",
        "PROVIDER_PLACEMENT_OPPORTUNITY",
        "DISTRIBUTOR_PLACEMENT_OPPORTUNITY",
        "PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY",
        "DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaPackage::OriginEndpoint.HlsManifest.AdsOnDeliveryRestrictions",
    "value": {
      "AllowedValues": [
        "NONE",
        "RESTRICTED",
        "UNRESTRICTED",
        "BOTH"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaPackage::PackagingConfiguration.HlsManifest.AdMarkers",
    "value": {
      "AllowedValues": [
        "NONE",
        "SCTE35_ENHANCED",
        "PASSTHROUGH"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaPackage::PackagingConfiguration.StreamSelection.StreamOrder",
    "value": {
      "AllowedValues": [
        "ORIGINAL",
        "VIDEO_BITRATE_ASCENDING",
        "VIDEO_BITRATE_DESCENDING"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaPackage::PackagingConfiguration.DashManifest.ManifestLayout",
    "value": {
      "AllowedValues": [
        "FULL",
        "COMPACT"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaPackage::PackagingConfiguration.DashManifest.Profile",
    "value": {
      "AllowedValues": [
        "NONE",
        "HBBTV_1_5"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaPackage::PackagingConfiguration.DashPackage.SegmentTemplateFormat",
    "value": {
      "AllowedValues": [
        "NUMBER_WITH_TIMELINE",
        "TIME_WITH_TIMELINE",
        "NUMBER_WITH_DURATION"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaPackage::PackagingConfiguration.HlsEncryption.EncryptionMethod",
    "value": {
      "AllowedValues": [
        "AES_128",
        "SAMPLE_AES"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::MediaPackage::PackagingGroup.Id",
    "value": {
      "AllowedPattern": "\\A[0-9a-zA-Z-_]+\\Z",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::Firewall.FirewallName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9-]+$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::Firewall.FirewallArn",
    "value": {
      "AllowedPattern": "^arn:aws.*$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::Firewall.FirewallId",
    "value": {
      "AllowedPattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
      "StringMax": 36,
      "StringMin": 36
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::Firewall.FirewallPolicyArn",
    "value": {
      "AllowedPattern": "^arn:aws.*$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::Firewall.VpcId",
    "value": {
      "AllowedPattern": "^vpc-[0-9a-f]+$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::Firewall.Description",
    "value": {
      "AllowedPattern": "^.*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::Firewall.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::FirewallPolicy.FirewallPolicyName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9-]+$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::FirewallPolicy.FirewallPolicyArn",
    "value": {
      "AllowedPattern": "^(arn:aws.*)$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::FirewallPolicy.CustomAction.ActionName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9]+$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::FirewallPolicy.Dimension.Value",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9-_ ]+$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::FirewallPolicy.StatelessRuleGroupReference.ResourceArn",
    "value": {
      "AllowedPattern": "^(arn:aws.*)$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::FirewallPolicy.StatelessRuleGroupReference.Priority",
    "value": {
      "NumberMax": 65535,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::FirewallPolicy.StatefulRuleGroupReference.ResourceArn",
    "value": {
      "AllowedPattern": "^(arn:aws.*)$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::FirewallPolicy.FirewallPolicyId",
    "value": {
      "AllowedPattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
      "StringMax": 36,
      "StringMin": 36
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::FirewallPolicy.Description",
    "value": {
      "AllowedPattern": "^.*$",
      "StringMax": 512,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::FirewallPolicy.Tag.Key",
    "value": {
      "AllowedPattern": "^.*$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::FirewallPolicy.Tag.Value",
    "value": {
      "AllowedPattern": "^.*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::LoggingConfiguration.FirewallName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9-]+$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::LoggingConfiguration.FirewallArn",
    "value": {
      "AllowedPattern": "^arn:aws.*$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::LoggingConfiguration.LogDestinationConfig.LogType",
    "value": {
      "AllowedValues": [
        "ALERT",
        "FLOW"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::LoggingConfiguration.LogDestinationConfig.LogDestinationType",
    "value": {
      "AllowedValues": [
        "S3",
        "CloudWatchLogs",
        "KinesisDataFirehose"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::RuleGroup.RuleGroupName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9-]+$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::RuleGroup.RuleGroupArn",
    "value": {
      "AllowedPattern": "^(arn:aws.*)$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::RuleGroup.RuleGroupId",
    "value": {
      "AllowedPattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
      "StringMax": 36,
      "StringMin": 36
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::RuleGroup.RulesSourceList.TargetTypes",
    "value": {
      "AllowedValues": [
        "TLS_SNI",
        "HTTP_HOST"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::RuleGroup.RulesSourceList.GeneratedRulesType",
    "value": {
      "AllowedValues": [
        "ALLOWLIST",
        "DENYLIST"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::RuleGroup.StatefulRule.Action",
    "value": {
      "AllowedValues": [
        "PASS",
        "DROP",
        "ALERT"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::RuleGroup.Header.Protocol",
    "value": {
      "AllowedValues": [
        "IP",
        "TCP",
        "UDP",
        "ICMP",
        "HTTP",
        "FTP",
        "TLS",
        "SMB",
        "DNS",
        "DCERPC",
        "SSH",
        "SMTP",
        "IMAP",
        "MSN",
        "KRB5",
        "IKEV2",
        "TFTP",
        "NTP",
        "DHCP"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::RuleGroup.Header.Source",
    "value": {
      "AllowedPattern": "^.*$",
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::RuleGroup.Header.SourcePort",
    "value": {
      "AllowedPattern": "^.*$",
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::RuleGroup.Header.Direction",
    "value": {
      "AllowedValues": [
        "FORWARD",
        "ANY"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::RuleGroup.Header.Destination",
    "value": {
      "AllowedPattern": "^.*$",
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::RuleGroup.Header.DestinationPort",
    "value": {
      "AllowedPattern": "^.*$",
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::RuleGroup.RuleOption.Keyword",
    "value": {
      "AllowedPattern": "^.*$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::RuleGroup.RuleOption.Settings",
    "value": {
      "AllowedPattern": "^.*$",
      "StringMax": 8192,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::RuleGroup.Address.AddressDefinition",
    "value": {
      "AllowedPattern": "^([a-fA-F\\d:\\.]+/\\d{1,3})$",
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::RuleGroup.TCPFlagField.Flags",
    "value": {
      "AllowedValues": [
        "FIN",
        "SYN",
        "RST",
        "PSH",
        "ACK",
        "URG",
        "ECE",
        "CWR"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::RuleGroup.TCPFlagField.Masks",
    "value": {
      "AllowedValues": [
        "FIN",
        "SYN",
        "RST",
        "PSH",
        "ACK",
        "URG",
        "ECE",
        "CWR"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::RuleGroup.StatelessRule.Priority",
    "value": {
      "NumberMax": 65535,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::RuleGroup.CustomAction.ActionName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9]+$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::RuleGroup.Dimension.Value",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9-_ ]+$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::RuleGroup.Type",
    "value": {
      "AllowedValues": [
        "STATELESS",
        "STATEFUL"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::RuleGroup.Description",
    "value": {
      "AllowedPattern": "^.*$",
      "StringMax": 512,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::RuleGroup.Tag.Key",
    "value": {
      "AllowedPattern": "^.*$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::NetworkFirewall::RuleGroup.Tag.Value",
    "value": {
      "AllowedPattern": "^.*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::OpsWorksCM::Server.KeyPair",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::OpsWorksCM::Server.ServiceRoleArn",
    "value": {
      "AllowedPattern": "arn:aws:iam::[0-9]{12}:role/.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::OpsWorksCM::Server.BackupId",
    "value": {
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9\\-\\.\\:]*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::OpsWorksCM::Server.PreferredMaintenanceWindow",
    "value": {
      "AllowedPattern": "^((Mon|Tue|Wed|Thu|Fri|Sat|Sun):)?([0-1][0-9]|2[0-3]):[0-5][0-9]$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::OpsWorksCM::Server.InstanceProfileArn",
    "value": {
      "AllowedPattern": "arn:aws:iam::[0-9]{12}:instance-profile/.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::OpsWorksCM::Server.CustomCertificate",
    "value": {
      "AllowedPattern": "(?s)\\s*-----BEGIN CERTIFICATE-----.+-----END CERTIFICATE-----\\s*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::OpsWorksCM::Server.PreferredBackupWindow",
    "value": {
      "AllowedPattern": "^((Mon|Tue|Wed|Thu|Fri|Sat|Sun):)?([0-1][0-9]|2[0-3]):[0-5][0-9]$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::OpsWorksCM::Server.CustomDomain",
    "value": {
      "AllowedPattern": "^(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::OpsWorksCM::Server.CustomPrivateKey",
    "value": {
      "AllowedPattern": "(?ms)\\s*^-----BEGIN (?-s:.*)PRIVATE KEY-----$.*?^-----END (?-s:.*)PRIVATE KEY-----$\\s*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::OpsWorksCM::Server.ServerName",
    "value": {
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9\\-]*",
      "StringMax": 40,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::OpsWorksCM::Server.EngineAttribute.Value",
    "value": {
      "AllowedPattern": "(?s).*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::OpsWorksCM::Server.EngineAttribute.Name",
    "value": {
      "AllowedPattern": "(?s).*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::OpsWorksCM::Server.Tag.Value",
    "value": {
      "AllowedPattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::OpsWorksCM::Server.Tag.Key",
    "value": {
      "AllowedPattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QLDB::Stream.RoleArn",
    "value": {
      "AllowedPattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]*:[\\w+=,.@-]+(/[\\w+=,.@-]+)*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QLDB::Stream.KinesisConfiguration.StreamArn",
    "value": {
      "AllowedPattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]*:[\\w+=,.@-]+(/[\\w+=,.@-]+)*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QLDB::Stream.Tag.Key",
    "value": {
      "StringMax": 127,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QLDB::Stream.Tag.Value",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QLDB::Stream.Arn",
    "value": {
      "AllowedPattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]*:[\\w+=,.@-]+(/[\\w+=,.@-]+)*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Analysis.AnalysisId",
    "value": {
      "AllowedPattern": "[\\w\\-]+",
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Analysis.AwsAccountId",
    "value": {
      "AllowedPattern": "^[0-9]{12}$",
      "StringMax": 12,
      "StringMin": 12
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Analysis.AnalysisError.Type",
    "value": {
      "AllowedValues": [
        "ACCESS_DENIED",
        "SOURCE_NOT_FOUND",
        "DATA_SET_NOT_FOUND",
        "INTERNAL_FAILURE",
        "PARAMETER_VALUE_INCOMPATIBLE",
        "PARAMETER_TYPE_INVALID",
        "PARAMETER_NOT_FOUND",
        "COLUMN_TYPE_MISMATCH",
        "COLUMN_GEOGRAPHIC_ROLE_MISMATCH",
        "COLUMN_REPLACEMENT_MISSING"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Analysis.AnalysisError.Message",
    "value": {
      "AllowedPattern": ".*\\S.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Analysis.Name",
    "value": {
      "AllowedPattern": "[\\u0020-\\u00FF]+",
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Analysis.StringParameter.Name",
    "value": {
      "AllowedPattern": ".*\\S.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Analysis.DecimalParameter.Name",
    "value": {
      "AllowedPattern": ".*\\S.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Analysis.IntegerParameter.Name",
    "value": {
      "AllowedPattern": ".*\\S.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Analysis.DateTimeParameter.Name",
    "value": {
      "AllowedPattern": ".*\\S.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Analysis.ResourcePermission.Principal",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Analysis.Sheet.SheetId",
    "value": {
      "AllowedPattern": "[\\w\\-]+",
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Analysis.Sheet.Name",
    "value": {
      "AllowedPattern": ".*\\S.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Analysis.DataSetReference.DataSetPlaceholder",
    "value": {
      "AllowedPattern": ".*\\S.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Analysis.Status",
    "value": {
      "AllowedValues": [
        "CREATION_IN_PROGRESS",
        "CREATION_SUCCESSFUL",
        "CREATION_FAILED",
        "UPDATE_IN_PROGRESS",
        "UPDATE_SUCCESSFUL",
        "UPDATE_FAILED",
        "DELETED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Analysis.Tag.Value",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Analysis.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Dashboard.AwsAccountId",
    "value": {
      "AllowedPattern": "^[0-9]{12}$",
      "StringMax": 12,
      "StringMin": 12
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Dashboard.DashboardId",
    "value": {
      "AllowedPattern": "[\\w\\-]+",
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Dashboard.SheetControlsOption.VisibilityState",
    "value": {
      "AllowedValues": [
        "EXPANDED",
        "COLLAPSED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Dashboard.ExportToCSVOption.AvailabilityStatus",
    "value": {
      "AllowedValues": [
        "ENABLED",
        "DISABLED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Dashboard.AdHocFilteringOption.AvailabilityStatus",
    "value": {
      "AllowedValues": [
        "ENABLED",
        "DISABLED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Dashboard.Name",
    "value": {
      "AllowedPattern": "[\\u0020-\\u00FF]+",
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Dashboard.StringParameter.Name",
    "value": {
      "AllowedPattern": ".*\\S.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Dashboard.DecimalParameter.Name",
    "value": {
      "AllowedPattern": ".*\\S.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Dashboard.IntegerParameter.Name",
    "value": {
      "AllowedPattern": ".*\\S.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Dashboard.DateTimeParameter.Name",
    "value": {
      "AllowedPattern": ".*\\S.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Dashboard.ResourcePermission.Principal",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Dashboard.DataSetReference.DataSetPlaceholder",
    "value": {
      "AllowedPattern": ".*\\S.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Dashboard.Tag.Value",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Dashboard.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Dashboard.DashboardVersion.Status",
    "value": {
      "AllowedValues": [
        "CREATION_IN_PROGRESS",
        "CREATION_SUCCESSFUL",
        "CREATION_FAILED",
        "UPDATE_IN_PROGRESS",
        "UPDATE_SUCCESSFUL",
        "UPDATE_FAILED",
        "DELETED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Dashboard.DashboardError.Type",
    "value": {
      "AllowedValues": [
        "ACCESS_DENIED",
        "SOURCE_NOT_FOUND",
        "DATA_SET_NOT_FOUND",
        "INTERNAL_FAILURE",
        "PARAMETER_VALUE_INCOMPATIBLE",
        "PARAMETER_TYPE_INVALID",
        "PARAMETER_NOT_FOUND",
        "COLUMN_TYPE_MISMATCH",
        "COLUMN_GEOGRAPHIC_ROLE_MISMATCH",
        "COLUMN_REPLACEMENT_MISSING"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Dashboard.DashboardError.Message",
    "value": {
      "AllowedPattern": ".*\\S.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Dashboard.DashboardVersion.Description",
    "value": {
      "StringMax": 512,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Dashboard.Sheet.SheetId",
    "value": {
      "AllowedPattern": "[\\w\\-]+",
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Dashboard.Sheet.Name",
    "value": {
      "AllowedPattern": ".*\\S.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Dashboard.VersionDescription",
    "value": {
      "StringMax": 512,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Template.AwsAccountId",
    "value": {
      "AllowedPattern": "^[0-9]{12}$",
      "StringMax": 12,
      "StringMin": 12
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Template.Name",
    "value": {
      "AllowedPattern": "[\\u0020-\\u00FF]+",
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Template.ResourcePermission.Principal",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Template.DataSetReference.DataSetPlaceholder",
    "value": {
      "AllowedPattern": ".*\\S.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Template.Tag.Value",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Template.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Template.TemplateId",
    "value": {
      "AllowedPattern": "[\\w\\-]+",
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Template.TemplateVersion.Status",
    "value": {
      "AllowedValues": [
        "CREATION_IN_PROGRESS",
        "CREATION_SUCCESSFUL",
        "CREATION_FAILED",
        "UPDATE_IN_PROGRESS",
        "UPDATE_SUCCESSFUL",
        "UPDATE_FAILED",
        "DELETED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Template.TemplateError.Type",
    "value": {
      "AllowedValues": [
        "SOURCE_NOT_FOUND",
        "DATA_SET_NOT_FOUND",
        "INTERNAL_FAILURE",
        "ACCESS_DENIED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Template.TemplateError.Message",
    "value": {
      "AllowedPattern": ".*\\S.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Template.TemplateVersion.Description",
    "value": {
      "StringMax": 512,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Template.Sheet.SheetId",
    "value": {
      "AllowedPattern": "[\\w\\-]+",
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Template.Sheet.Name",
    "value": {
      "AllowedPattern": ".*\\S.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Template.VersionDescription",
    "value": {
      "StringMax": 512,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.AwsAccountId",
    "value": {
      "AllowedPattern": "^[0-9]{12}$",
      "StringMax": 12,
      "StringMin": 12
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.BaseThemeId",
    "value": {
      "AllowedPattern": "[\\w\\-]+",
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.DataColorPalette.EmptyFillColor",
    "value": {
      "AllowedPattern": "^#[A-F0-9]{6}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.DataColorPalette.Colors",
    "value": {
      "AllowedPattern": "^#[A-F0-9]{6}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.DataColorPalette.MinMaxGradient",
    "value": {
      "AllowedPattern": "^#[A-F0-9]{6}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.UIColorPalette.Warning",
    "value": {
      "AllowedPattern": "^#[A-F0-9]{6}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.UIColorPalette.Accent",
    "value": {
      "AllowedPattern": "^#[A-F0-9]{6}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.UIColorPalette.AccentForeground",
    "value": {
      "AllowedPattern": "^#[A-F0-9]{6}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.UIColorPalette.SecondaryBackground",
    "value": {
      "AllowedPattern": "^#[A-F0-9]{6}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.UIColorPalette.DangerForeground",
    "value": {
      "AllowedPattern": "^#[A-F0-9]{6}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.UIColorPalette.PrimaryBackground",
    "value": {
      "AllowedPattern": "^#[A-F0-9]{6}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.UIColorPalette.Dimension",
    "value": {
      "AllowedPattern": "^#[A-F0-9]{6}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.UIColorPalette.SecondaryForeground",
    "value": {
      "AllowedPattern": "^#[A-F0-9]{6}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.UIColorPalette.WarningForeground",
    "value": {
      "AllowedPattern": "^#[A-F0-9]{6}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.UIColorPalette.DimensionForeground",
    "value": {
      "AllowedPattern": "^#[A-F0-9]{6}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.UIColorPalette.PrimaryForeground",
    "value": {
      "AllowedPattern": "^#[A-F0-9]{6}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.UIColorPalette.Success",
    "value": {
      "AllowedPattern": "^#[A-F0-9]{6}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.UIColorPalette.Danger",
    "value": {
      "AllowedPattern": "^#[A-F0-9]{6}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.UIColorPalette.SuccessForeground",
    "value": {
      "AllowedPattern": "^#[A-F0-9]{6}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.UIColorPalette.Measure",
    "value": {
      "AllowedPattern": "^#[A-F0-9]{6}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.UIColorPalette.MeasureForeground",
    "value": {
      "AllowedPattern": "^#[A-F0-9]{6}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.Name",
    "value": {
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.ResourcePermission.Principal",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.Tag.Value",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.ThemeId",
    "value": {
      "AllowedPattern": "[\\w\\-]+",
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.Type",
    "value": {
      "AllowedValues": [
        "QUICKSIGHT",
        "CUSTOM",
        "ALL"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.ThemeVersion.Status",
    "value": {
      "AllowedValues": [
        "CREATION_IN_PROGRESS",
        "CREATION_SUCCESSFUL",
        "CREATION_FAILED",
        "UPDATE_IN_PROGRESS",
        "UPDATE_SUCCESSFUL",
        "UPDATE_FAILED",
        "DELETED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.ThemeError.Type",
    "value": {
      "AllowedValues": [
        "INTERNAL_FAILURE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.ThemeError.Message",
    "value": {
      "AllowedPattern": ".*\\S.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.ThemeVersion.Description",
    "value": {
      "StringMax": 512,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.ThemeVersion.BaseThemeId",
    "value": {
      "AllowedPattern": "[\\w\\-]+",
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::QuickSight::Theme.VersionDescription",
    "value": {
      "StringMax": 512,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::RDS::DBProxy.AuthFormat.AuthScheme",
    "value": {
      "AllowedValues": [
        "SECRETS"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::RDS::DBProxy.AuthFormat.IAMAuth",
    "value": {
      "AllowedValues": [
        "DISABLED",
        "REQUIRED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::RDS::DBProxy.DBProxyName",
    "value": {
      "AllowedPattern": "[0-z]*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::RDS::DBProxy.EngineFamily",
    "value": {
      "AllowedValues": [
        "MYSQL",
        "POSTGRESQL"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::RDS::DBProxy.TagFormat.Key",
    "value": {
      "AllowedPattern": "(\\w|\\d|\\s|\\\\|-|\\.:=+-)*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::RDS::DBProxy.TagFormat.Value",
    "value": {
      "AllowedPattern": "(\\w|\\d|\\s|\\\\|-|\\.:=+-)*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::RDS::DBProxyTargetGroup.DBProxyName",
    "value": {
      "AllowedPattern": "[A-z][0-z]*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::RDS::DBProxyTargetGroup.TargetGroupName",
    "value": {
      "AllowedValues": [
        "default"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::RDS::GlobalCluster.Engine",
    "value": {
      "AllowedValues": [
        "aurora",
        "aurora-mysql",
        "aurora-postgresql"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::RDS::GlobalCluster.GlobalClusterIdentifier",
    "value": {
      "AllowedPattern": "^[a-zA-Z]{1}(?:-?[a-zA-Z0-9]){0,62}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ResourceGroups::Group.ResourceQuery.Type",
    "value": {
      "AllowedValues": [
        "TAG_FILTERS_1_0",
        "CLOUDFORMATION_STACK_1_0"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ResourceGroups::Group.Tag.Key",
    "value": {
      "AllowedPattern": "^(?!aws:).+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53::DNSSEC.HostedZoneId",
    "value": {
      "AllowedPattern": "^[A-Z0-9]{1,32}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53::HealthCheck.AlarmIdentifier.Name",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53::HealthCheck.AlarmIdentifier.Region",
    "value": {
      "AllowedValues": [
        "ap-east-1",
        "ap-northeast-1",
        "ap-northeast-2",
        "ap-northeast-3",
        "ap-south-1",
        "ap-southeast-1",
        "ap-southeast-2",
        "ca-central-1",
        "cn-north-1",
        "cn-northwest-1",
        "eu-central-1",
        "eu-north-1",
        "eu-west-1",
        "eu-west-2",
        "eu-west-3",
        "me-south-1",
        "sa-east-1",
        "us-east-1",
        "us-east-2",
        "us-west-1",
        "us-west-2"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53::HealthCheck.HealthCheckConfig.FailureThreshold",
    "value": {
      "NumberMax": 10,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53::HealthCheck.HealthCheckConfig.InsufficientDataHealthStatus",
    "value": {
      "AllowedValues": [
        "Healthy",
        "LastKnownStatus",
        "Unhealthy"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53::HealthCheck.HealthCheckConfig.IPAddress",
    "value": {
      "AllowedPattern": "^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$|^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53::HealthCheck.HealthCheckConfig.Port",
    "value": {
      "NumberMax": 65535,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53::HealthCheck.HealthCheckConfig.RequestInterval",
    "value": {
      "NumberMax": 30,
      "NumberMin": 10
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53::HealthCheck.HealthCheckConfig.Type",
    "value": {
      "AllowedValues": [
        "CALCULATED",
        "CLOUDWATCH_METRIC",
        "HTTP",
        "HTTP_STR_MATCH",
        "HTTPS",
        "HTTPS_STR_MATCH",
        "TCP"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53::KeySigningKey.HostedZoneId",
    "value": {
      "AllowedPattern": "^[A-Z0-9]{1,32}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53::KeySigningKey.Status",
    "value": {
      "AllowedValues": [
        "ACTIVE",
        "INACTIVE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53::KeySigningKey.Name",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9_]{3,128}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53::KeySigningKey.KeyManagementServiceArn",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53Resolver::ResolverDNSSECConfig.Id",
    "value": {
      "StringMax": 64,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53Resolver::ResolverDNSSECConfig.OwnerId",
    "value": {
      "StringMax": 32,
      "StringMin": 12
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53Resolver::ResolverDNSSECConfig.ResourceId",
    "value": {
      "StringMax": 64,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53Resolver::ResolverDNSSECConfig.ValidationStatus",
    "value": {
      "AllowedValues": [
        "ENABLING",
        "ENABLED",
        "DISABLING",
        "DISABLED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53Resolver::ResolverQueryLoggingConfig.Id",
    "value": {
      "StringMax": 64,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53Resolver::ResolverQueryLoggingConfig.OwnerId",
    "value": {
      "StringMax": 32,
      "StringMin": 12
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53Resolver::ResolverQueryLoggingConfig.Status",
    "value": {
      "AllowedValues": [
        "CREATING",
        "CREATED",
        "DELETING",
        "FAILED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53Resolver::ResolverQueryLoggingConfig.ShareStatus",
    "value": {
      "AllowedValues": [
        "NOT_SHARED",
        "SHARED_WITH_ME",
        "SHARED_BY_ME"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53Resolver::ResolverQueryLoggingConfig.Arn",
    "value": {
      "StringMax": 600,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53Resolver::ResolverQueryLoggingConfig.Name",
    "value": {
      "AllowedPattern": "(?!^[0-9]+$)([a-zA-Z0-9\\-_' ']+)",
      "StringMax": 64,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53Resolver::ResolverQueryLoggingConfig.CreatorRequestId",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53Resolver::ResolverQueryLoggingConfig.DestinationArn",
    "value": {
      "StringMax": 600,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53Resolver::ResolverQueryLoggingConfig.CreationTime",
    "value": {
      "StringMax": 40,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation.Id",
    "value": {
      "StringMax": 64,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation.ResolverQueryLogConfigId",
    "value": {
      "StringMax": 64,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation.ResourceId",
    "value": {
      "StringMax": 64,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation.Status",
    "value": {
      "AllowedValues": [
        "CREATING",
        "ACTIVE",
        "ACTION_NEEDED",
        "DELETING",
        "FAILED",
        "OVERRIDDEN"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation.Error",
    "value": {
      "AllowedValues": [
        "NONE",
        "DESTINATION_NOT_FOUND",
        "ACCESS_DENIED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation.CreationTime",
    "value": {
      "StringMax": 40,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::S3::AccessPoint.Name",
    "value": {
      "AllowedPattern": "^[a-z0-9]([a-z0-9\\-]*[a-z0-9])?$",
      "StringMax": 50,
      "StringMin": 3
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::S3::AccessPoint.Bucket",
    "value": {
      "StringMax": 255,
      "StringMin": 3
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::S3::AccessPoint.VpcConfiguration.VpcId",
    "value": {
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::S3::AccessPoint.NetworkOrigin",
    "value": {
      "AllowedValues": [
        "Internet",
        "VPC"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::S3::StorageLens.StorageLensConfiguration.Id",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9\\-_.]+$",
      "StringMax": 64,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::S3::StorageLens.S3BucketDestination.OutputSchemaVersion",
    "value": {
      "AllowedValues": [
        "V_1"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::S3::StorageLens.S3BucketDestination.Format",
    "value": {
      "AllowedValues": [
        "CSV",
        "Parquet"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::S3::StorageLens.Tag.Key",
    "value": {
      "AllowedPattern": "^(?!aws:.*)[a-z0-9\\s\\_\\.\\/\\=\\+\\-]+$",
      "StringMax": 127,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::S3::StorageLens.Tag.Value",
    "value": {
      "AllowedPattern": "^(?!aws:.*)[a-z0-9\\s\\_\\.\\/\\=\\+\\-]+$",
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SES::ConfigurationSet.Name",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9_-]{1,64}$",
      "StringMax": 64,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSM::Association.AssociationId",
    "value": {
      "AllowedPattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSM::Association.AssociationName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9_\\-.]{3,128}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSM::Association.DocumentVersion",
    "value": {
      "AllowedPattern": "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSM::Association.InstanceId",
    "value": {
      "AllowedPattern": "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSM::Association.Name",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9_\\-.:/]{3,200}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSM::Association.ScheduleExpression",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSM::Association.Target.Key",
    "value": {
      "AllowedPattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*$|resource-groups:Name",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSM::Association.S3OutputLocation.OutputS3Region",
    "value": {
      "StringMax": 20,
      "StringMin": 3
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSM::Association.S3OutputLocation.OutputS3BucketName",
    "value": {
      "StringMax": 63,
      "StringMin": 3
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSM::Association.AutomationTargetParameterName",
    "value": {
      "StringMax": 50,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSM::Association.MaxErrors",
    "value": {
      "AllowedPattern": "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$",
      "StringMax": 7,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSM::Association.MaxConcurrency",
    "value": {
      "AllowedPattern": "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$",
      "StringMax": 7,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSM::Association.ComplianceSeverity",
    "value": {
      "AllowedValues": [
        "CRITICAL",
        "HIGH",
        "MEDIUM",
        "LOW",
        "UNSPECIFIED"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSM::Association.SyncCompliance",
    "value": {
      "AllowedValues": [
        "AUTO",
        "MANUAL"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSM::Association.WaitForSuccessTimeoutSeconds",
    "value": {
      "NumberMax": 172800,
      "NumberMin": 15
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSO::Assignment.InstanceArn",
    "value": {
      "AllowedPattern": "arn:aws:sso:::instance/(sso)?ins-[a-zA-Z0-9-.]{16}",
      "StringMax": 1224,
      "StringMin": 10
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSO::Assignment.TargetId",
    "value": {
      "AllowedPattern": "\\d{12}"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSO::Assignment.TargetType",
    "value": {
      "AllowedValues": [
        "AWS_ACCOUNT"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSO::Assignment.PermissionSetArn",
    "value": {
      "AllowedPattern": "arn:aws:sso:::permissionSet/(sso)?ins-[a-zA-Z0-9-.]{16}/ps-[a-zA-Z0-9-./]{16}",
      "StringMax": 1224,
      "StringMin": 10
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSO::Assignment.PrincipalType",
    "value": {
      "AllowedValues": [
        "USER",
        "GROUP"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSO::Assignment.PrincipalId",
    "value": {
      "AllowedPattern": "^([0-9a-f]{10}-|)[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$",
      "StringMax": 47,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSO::InstanceAccessControlAttributeConfiguration.InstanceArn",
    "value": {
      "AllowedPattern": "arn:aws:sso:::instance/(sso)?ins-[a-zA-Z0-9-.]{16}",
      "StringMax": 1224,
      "StringMin": 10
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSO::InstanceAccessControlAttributeConfiguration.AccessControlAttribute.Key",
    "value": {
      "AllowedPattern": "[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]+",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSO::InstanceAccessControlAttributeConfiguration.AccessControlAttributeValue.Source",
    "value": {
      "AllowedPattern": "[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@\\[\\]\\{\\}\\$\\\\\"]*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSO::PermissionSet.Name",
    "value": {
      "AllowedPattern": "[\\w+=,.@-]+",
      "StringMax": 32,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSO::PermissionSet.PermissionSetArn",
    "value": {
      "AllowedPattern": "arn:aws:sso:::permissionSet/(sso)?ins-[a-zA-Z0-9-.]{16}/ps-[a-zA-Z0-9-./]{16}",
      "StringMax": 1224,
      "StringMin": 10
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSO::PermissionSet.Description",
    "value": {
      "AllowedPattern": "[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*",
      "StringMax": 700,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSO::PermissionSet.InstanceArn",
    "value": {
      "AllowedPattern": "arn:aws:sso:::instance/(sso)?ins-[a-zA-Z0-9-.]{16}",
      "StringMax": 1224,
      "StringMin": 10
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSO::PermissionSet.SessionDuration",
    "value": {
      "AllowedPattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSO::PermissionSet.RelayStateType",
    "value": {
      "AllowedPattern": "[a-zA-Z0-9&amp;$@#\\/%?=~\\-_'&quot;|!:,.;*+\\[\\]\\ \\(\\)\\{\\}]+",
      "StringMax": 240,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSO::PermissionSet.ManagedPolicies",
    "value": {
      "StringMax": 2048,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSO::PermissionSet.Tag.Key",
    "value": {
      "AllowedPattern": "[\\w+=,.@-]+",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SSO::PermissionSet.Tag.Value",
    "value": {
      "AllowedPattern": "[\\w+=,.@-]+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DataQualityJobDefinition.JobDefinitionArn",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DataQualityJobDefinition.JobDefinitionName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DataQualityJobDefinition.DataQualityBaselineConfig.BaseliningJobName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$",
      "StringMax": 63,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DataQualityJobDefinition.ConstraintsResource.S3Uri",
    "value": {
      "AllowedPattern": "^(https|s3)://([^/]+)/?(.*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DataQualityJobDefinition.StatisticsResource.S3Uri",
    "value": {
      "AllowedPattern": "^(https|s3)://([^/]+)/?(.*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DataQualityJobDefinition.DataQualityAppSpecification.ContainerArguments",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DataQualityJobDefinition.DataQualityAppSpecification.ContainerEntrypoint",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DataQualityJobDefinition.DataQualityAppSpecification.ImageUri",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DataQualityJobDefinition.DataQualityAppSpecification.PostAnalyticsProcessorSourceUri",
    "value": {
      "AllowedPattern": "^(https|s3)://([^/]+)/?(.*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DataQualityJobDefinition.DataQualityAppSpecification.RecordPreprocessorSourceUri",
    "value": {
      "AllowedPattern": "^(https|s3)://([^/]+)/?(.*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DataQualityJobDefinition.EndpointInput.EndpointName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DataQualityJobDefinition.EndpointInput.LocalPath",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DataQualityJobDefinition.EndpointInput.S3DataDistributionType",
    "value": {
      "AllowedValues": [
        "FullyReplicated",
        "ShardedByS3Key"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DataQualityJobDefinition.EndpointInput.S3InputMode",
    "value": {
      "AllowedValues": [
        "Pipe",
        "File"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DataQualityJobDefinition.MonitoringOutputConfig.KmsKeyId",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DataQualityJobDefinition.S3Output.LocalPath",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DataQualityJobDefinition.S3Output.S3UploadMode",
    "value": {
      "AllowedValues": [
        "Continuous",
        "EndOfJob"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DataQualityJobDefinition.S3Output.S3Uri",
    "value": {
      "AllowedPattern": "^(https|s3)://([^/]+)/?(.*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DataQualityJobDefinition.ClusterConfig.InstanceCount",
    "value": {
      "NumberMax": 100,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DataQualityJobDefinition.ClusterConfig.VolumeSizeInGB",
    "value": {
      "NumberMax": 16384,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DataQualityJobDefinition.VpcConfig.SecurityGroupIds",
    "value": {
      "AllowedPattern": "[-0-9a-zA-Z]+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DataQualityJobDefinition.VpcConfig.Subnets",
    "value": {
      "AllowedPattern": "[-0-9a-zA-Z]+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DataQualityJobDefinition.RoleArn",
    "value": {
      "AllowedPattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
      "StringMax": 2048,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DataQualityJobDefinition.StoppingCondition.MaxRuntimeInSeconds",
    "value": {
      "NumberMax": 86400,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DataQualityJobDefinition.Tag.Key",
    "value": {
      "AllowedPattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DataQualityJobDefinition.Tag.Value",
    "value": {
      "AllowedPattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::Device.DeviceFleetName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*_*[a-zA-Z0-9])*$",
      "StringMax": 63,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::Device.Device.Description",
    "value": {
      "AllowedPattern": "[\\S\\s]+",
      "StringMax": 40,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::Device.Device.DeviceName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$",
      "StringMax": 63,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::Device.Device.IotThingName",
    "value": {
      "AllowedPattern": "[a-zA-Z0-9:_-]+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::Device.Tag.Key",
    "value": {
      "AllowedPattern": "^((?!aws:)[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::Device.Tag.Value",
    "value": {
      "AllowedPattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DeviceFleet.Description",
    "value": {
      "AllowedPattern": "[\\S\\s]+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DeviceFleet.DeviceFleetName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*_*[a-zA-Z0-9])*$",
      "StringMax": 63,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DeviceFleet.EdgeOutputConfig.S3OutputLocation",
    "value": {
      "AllowedPattern": "^s3://([^/]+)/?(.*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DeviceFleet.EdgeOutputConfig.KmsKeyId",
    "value": {
      "AllowedPattern": "[a-zA-Z0-9:_-]+",
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DeviceFleet.RoleArn",
    "value": {
      "AllowedPattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
      "StringMax": 2048,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DeviceFleet.Tag.Key",
    "value": {
      "AllowedPattern": "^((?!aws:)[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::DeviceFleet.Tag.Value",
    "value": {
      "AllowedPattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelBiasJobDefinition.JobDefinitionArn",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelBiasJobDefinition.JobDefinitionName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelBiasJobDefinition.ModelBiasBaselineConfig.BaseliningJobName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$",
      "StringMax": 63,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelBiasJobDefinition.ConstraintsResource.S3Uri",
    "value": {
      "AllowedPattern": "^(https|s3)://([^/]+)/?(.*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelBiasJobDefinition.ModelBiasAppSpecification.ImageUri",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelBiasJobDefinition.ModelBiasAppSpecification.ConfigUri",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelBiasJobDefinition.EndpointInput.EndpointName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelBiasJobDefinition.EndpointInput.LocalPath",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelBiasJobDefinition.EndpointInput.S3DataDistributionType",
    "value": {
      "AllowedValues": [
        "FullyReplicated",
        "ShardedByS3Key"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelBiasJobDefinition.EndpointInput.S3InputMode",
    "value": {
      "AllowedValues": [
        "Pipe",
        "File"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelBiasJobDefinition.EndpointInput.StartTimeOffset",
    "value": {
      "AllowedPattern": "^.?P.*",
      "StringMax": 15,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelBiasJobDefinition.EndpointInput.EndTimeOffset",
    "value": {
      "AllowedPattern": "^.?P.*",
      "StringMax": 15,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelBiasJobDefinition.MonitoringGroundTruthS3Input.S3Uri",
    "value": {
      "AllowedPattern": "^(https|s3)://([^/]+)/?(.*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelBiasJobDefinition.MonitoringOutputConfig.KmsKeyId",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelBiasJobDefinition.S3Output.LocalPath",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelBiasJobDefinition.S3Output.S3UploadMode",
    "value": {
      "AllowedValues": [
        "Continuous",
        "EndOfJob"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelBiasJobDefinition.S3Output.S3Uri",
    "value": {
      "AllowedPattern": "^(https|s3)://([^/]+)/?(.*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelBiasJobDefinition.ClusterConfig.InstanceCount",
    "value": {
      "NumberMax": 100,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelBiasJobDefinition.ClusterConfig.VolumeSizeInGB",
    "value": {
      "NumberMax": 16384,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelBiasJobDefinition.VpcConfig.SecurityGroupIds",
    "value": {
      "AllowedPattern": "[-0-9a-zA-Z]+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelBiasJobDefinition.VpcConfig.Subnets",
    "value": {
      "AllowedPattern": "[-0-9a-zA-Z]+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelBiasJobDefinition.RoleArn",
    "value": {
      "AllowedPattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
      "StringMax": 2048,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelBiasJobDefinition.StoppingCondition.MaxRuntimeInSeconds",
    "value": {
      "NumberMax": 86400,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelBiasJobDefinition.Tag.Key",
    "value": {
      "AllowedPattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelBiasJobDefinition.Tag.Value",
    "value": {
      "AllowedPattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelExplainabilityJobDefinition.JobDefinitionArn",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelExplainabilityJobDefinition.JobDefinitionName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelExplainabilityJobDefinition.ModelExplainabilityBaselineConfig.BaseliningJobName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$",
      "StringMax": 63,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelExplainabilityJobDefinition.ConstraintsResource.S3Uri",
    "value": {
      "AllowedPattern": "^(https|s3)://([^/]+)/?(.*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelExplainabilityJobDefinition.ModelExplainabilityAppSpecification.ImageUri",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelExplainabilityJobDefinition.ModelExplainabilityAppSpecification.ConfigUri",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelExplainabilityJobDefinition.EndpointInput.EndpointName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelExplainabilityJobDefinition.EndpointInput.LocalPath",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelExplainabilityJobDefinition.EndpointInput.S3DataDistributionType",
    "value": {
      "AllowedValues": [
        "FullyReplicated",
        "ShardedByS3Key"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelExplainabilityJobDefinition.EndpointInput.S3InputMode",
    "value": {
      "AllowedValues": [
        "Pipe",
        "File"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelExplainabilityJobDefinition.MonitoringOutputConfig.KmsKeyId",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelExplainabilityJobDefinition.S3Output.LocalPath",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelExplainabilityJobDefinition.S3Output.S3UploadMode",
    "value": {
      "AllowedValues": [
        "Continuous",
        "EndOfJob"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelExplainabilityJobDefinition.S3Output.S3Uri",
    "value": {
      "AllowedPattern": "^(https|s3)://([^/]+)/?(.*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelExplainabilityJobDefinition.ClusterConfig.InstanceCount",
    "value": {
      "NumberMax": 100,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelExplainabilityJobDefinition.ClusterConfig.VolumeSizeInGB",
    "value": {
      "NumberMax": 16384,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelExplainabilityJobDefinition.VpcConfig.SecurityGroupIds",
    "value": {
      "AllowedPattern": "[-0-9a-zA-Z]+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelExplainabilityJobDefinition.VpcConfig.Subnets",
    "value": {
      "AllowedPattern": "[-0-9a-zA-Z]+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelExplainabilityJobDefinition.RoleArn",
    "value": {
      "AllowedPattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
      "StringMax": 2048,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelExplainabilityJobDefinition.StoppingCondition.MaxRuntimeInSeconds",
    "value": {
      "NumberMax": 86400,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelExplainabilityJobDefinition.Tag.Key",
    "value": {
      "AllowedPattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelExplainabilityJobDefinition.Tag.Value",
    "value": {
      "AllowedPattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelPackageGroup.Tag.Key",
    "value": {
      "AllowedPattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelPackageGroup.Tag.Value",
    "value": {
      "AllowedPattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelPackageGroup.ModelPackageGroupArn",
    "value": {
      "AllowedPattern": "arn:.*",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelPackageGroup.ModelPackageGroupName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelPackageGroup.ModelPackageGroupDescription",
    "value": {
      "AllowedPattern": "[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelPackageGroup.ModelPackageGroupStatus",
    "value": {
      "AllowedValues": [
        "Pending",
        "InProgress",
        "Completed",
        "Failed",
        "Deleting",
        "DeleteFailed"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.JobDefinitionArn",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.JobDefinitionName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.ModelQualityBaselineConfig.BaseliningJobName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$",
      "StringMax": 63,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.ConstraintsResource.S3Uri",
    "value": {
      "AllowedPattern": "^(https|s3)://([^/]+)/?(.*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.ModelQualityAppSpecification.ContainerArguments",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.ModelQualityAppSpecification.ContainerEntrypoint",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.ModelQualityAppSpecification.ImageUri",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.ModelQualityAppSpecification.PostAnalyticsProcessorSourceUri",
    "value": {
      "AllowedPattern": "^(https|s3)://([^/]+)/?(.*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.ModelQualityAppSpecification.RecordPreprocessorSourceUri",
    "value": {
      "AllowedPattern": "^(https|s3)://([^/]+)/?(.*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.ModelQualityAppSpecification.ProblemType",
    "value": {
      "AllowedValues": [
        "BinaryClassification",
        "MulticlassClassification",
        "Regression"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.EndpointInput.EndpointName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.EndpointInput.LocalPath",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.EndpointInput.S3DataDistributionType",
    "value": {
      "AllowedValues": [
        "FullyReplicated",
        "ShardedByS3Key"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.EndpointInput.S3InputMode",
    "value": {
      "AllowedValues": [
        "Pipe",
        "File"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.EndpointInput.StartTimeOffset",
    "value": {
      "AllowedPattern": "^.?P.*",
      "StringMax": 15,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.EndpointInput.EndTimeOffset",
    "value": {
      "AllowedPattern": "^.?P.*",
      "StringMax": 15,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.MonitoringGroundTruthS3Input.S3Uri",
    "value": {
      "AllowedPattern": "^(https|s3)://([^/]+)/?(.*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.MonitoringOutputConfig.KmsKeyId",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.S3Output.LocalPath",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.S3Output.S3UploadMode",
    "value": {
      "AllowedValues": [
        "Continuous",
        "EndOfJob"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.S3Output.S3Uri",
    "value": {
      "AllowedPattern": "^(https|s3)://([^/]+)/?(.*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.ClusterConfig.InstanceCount",
    "value": {
      "NumberMax": 100,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.ClusterConfig.VolumeSizeInGB",
    "value": {
      "NumberMax": 16384,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.VpcConfig.SecurityGroupIds",
    "value": {
      "AllowedPattern": "[-0-9a-zA-Z]+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.VpcConfig.Subnets",
    "value": {
      "AllowedPattern": "[-0-9a-zA-Z]+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.RoleArn",
    "value": {
      "AllowedPattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
      "StringMax": 2048,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.StoppingCondition.MaxRuntimeInSeconds",
    "value": {
      "NumberMax": 86400,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.Tag.Key",
    "value": {
      "AllowedPattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::ModelQualityJobDefinition.Tag.Value",
    "value": {
      "AllowedPattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.MonitoringScheduleArn",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.MonitoringScheduleName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.ConstraintsResource.S3Uri",
    "value": {
      "AllowedPattern": "^(https|s3)://([^/]+)/?(.*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.StatisticsResource.S3Uri",
    "value": {
      "AllowedPattern": "^(https|s3)://([^/]+)/?(.*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.MonitoringAppSpecification.ContainerArguments",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.MonitoringAppSpecification.ContainerEntrypoint",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.MonitoringAppSpecification.ImageUri",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.MonitoringAppSpecification.PostAnalyticsProcessorSourceUri",
    "value": {
      "AllowedPattern": "^(https|s3)://([^/]+)/?(.*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.MonitoringAppSpecification.RecordPreprocessorSourceUri",
    "value": {
      "AllowedPattern": "^(https|s3)://([^/]+)/?(.*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.EndpointInput.EndpointName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.EndpointInput.LocalPath",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.EndpointInput.S3DataDistributionType",
    "value": {
      "AllowedValues": [
        "FullyReplicated",
        "ShardedByS3Key"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.EndpointInput.S3InputMode",
    "value": {
      "AllowedValues": [
        "Pipe",
        "File"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.MonitoringOutputConfig.KmsKeyId",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.S3Output.LocalPath",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.S3Output.S3UploadMode",
    "value": {
      "AllowedValues": [
        "Continuous",
        "EndOfJob"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.S3Output.S3Uri",
    "value": {
      "AllowedPattern": "^(https|s3)://([^/]+)/?(.*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.ClusterConfig.InstanceCount",
    "value": {
      "NumberMax": 100,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.ClusterConfig.VolumeSizeInGB",
    "value": {
      "NumberMax": 16384,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.VpcConfig.SecurityGroupIds",
    "value": {
      "AllowedPattern": "[-0-9a-zA-Z]+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.VpcConfig.Subnets",
    "value": {
      "AllowedPattern": "[-0-9a-zA-Z]+"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.MonitoringJobDefinition.RoleArn",
    "value": {
      "AllowedPattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
      "StringMax": 2048,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.StoppingCondition.MaxRuntimeInSeconds",
    "value": {
      "NumberMax": 86400,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.MonitoringScheduleConfig.MonitoringJobDefinitionName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$",
      "StringMax": 63,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.MonitoringScheduleConfig.MonitoringType",
    "value": {
      "AllowedValues": [
        "DataQuality",
        "ModelQuality",
        "ModelBias",
        "ModelExplainability"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.ScheduleConfig.ScheduleExpression",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.Tag.Key",
    "value": {
      "AllowedPattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.Tag.Value",
    "value": {
      "AllowedPattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.EndpointName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.FailureReason",
    "value": {
      "StringMax": 1024,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.MonitoringExecutionSummary.EndpointName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.MonitoringExecutionSummary.MonitoringExecutionStatus",
    "value": {
      "AllowedValues": [
        "Pending",
        "Completed",
        "CompletedWithViolations",
        "InProgress",
        "Failed",
        "Stopping",
        "Stopped"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.MonitoringExecutionSummary.MonitoringScheduleName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.MonitoringExecutionSummary.ProcessingJobArn",
    "value": {
      "AllowedPattern": "aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:processing-job/.*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::MonitoringSchedule.MonitoringScheduleStatus",
    "value": {
      "AllowedValues": [
        "Pending",
        "Failed",
        "Scheduled",
        "Stopped"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::Pipeline.PipelineName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::Pipeline.PipelineDisplayName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::Pipeline.RoleArn",
    "value": {
      "AllowedPattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
      "StringMax": 2048,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::Project.Tag.Key",
    "value": {
      "AllowedPattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::Project.Tag.Value",
    "value": {
      "AllowedPattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::Project.ProjectArn",
    "value": {
      "AllowedPattern": "arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:project.*",
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::Project.ProjectId",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::Project.ProjectName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$",
      "StringMax": 32,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::Project.ProjectDescription",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::Project.ServiceCatalogProvisioningDetails.ProductId",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::Project.ServiceCatalogProvisioningDetails.ProvisioningArtifactId",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::Project.ServiceCatalogProvisioningDetails.PathId",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::Project.ProvisioningParameter.Key",
    "value": {
      "AllowedPattern": ".*",
      "StringMax": 1000,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::Project.ProvisioningParameter.Value",
    "value": {
      "AllowedPattern": ".*"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::Project.ServiceCatalogProvisionedProductDetails.ProvisionedProductId",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::SageMaker::Project.ProjectStatus",
    "value": {
      "AllowedValues": [
        "Pending",
        "CreateInProgress",
        "CreateCompleted",
        "CreateFailed",
        "DeleteInProgress",
        "DeleteFailed",
        "DeleteCompleted"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ServiceCatalog::CloudFormationProvisionedProduct.AcceptLanguage",
    "value": {
      "AllowedValues": [
        "en",
        "jp",
        "zh"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ServiceCatalog::CloudFormationProvisionedProduct.PathId",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ServiceCatalog::CloudFormationProvisionedProduct.PathName",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ServiceCatalog::CloudFormationProvisionedProduct.ProductId",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ServiceCatalog::CloudFormationProvisionedProduct.ProductName",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ServiceCatalog::CloudFormationProvisionedProduct.ProvisionedProductName",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ServiceCatalog::CloudFormationProvisionedProduct.ProvisioningArtifactId",
    "value": {
      "StringMax": 100,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ServiceCatalog::CloudFormationProvisionedProduct.ProvisioningParameter.Key",
    "value": {
      "StringMax": 1000,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ServiceCatalog::CloudFormationProvisionedProduct.ProvisioningPreferences.StackSetAccounts",
    "value": {
      "AllowedPattern": "^[0-9]{12}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ServiceCatalog::CloudFormationProvisionedProduct.ProvisioningPreferences.StackSetMaxConcurrencyPercentage",
    "value": {
      "NumberMax": 100,
      "NumberMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ServiceCatalog::CloudFormationProvisionedProduct.ProvisioningPreferences.StackSetOperationType",
    "value": {
      "AllowedValues": [
        "CREATE",
        "UPDATE",
        "DELETE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ServiceCatalog::CloudFormationProvisionedProduct.ProvisioningPreferences.StackSetRegions",
    "value": {
      "AllowedPattern": "^[a-z]{2}-([a-z]+-)+[1-9]"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ServiceCatalog::CloudFormationProvisionedProduct.Tag.Key",
    "value": {
      "AllowedPattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ServiceCatalog::CloudFormationProvisionedProduct.Tag.Value",
    "value": {
      "AllowedPattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ServiceCatalog::CloudFormationProvisionedProduct.ProvisionedProductId",
    "value": {
      "StringMax": 50,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ServiceCatalog::CloudFormationProvisionedProduct.RecordId",
    "value": {
      "StringMax": 50,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::ServiceCatalog::CloudFormationProvisionedProduct.CloudformationStackArn",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Signer::ProfilePermission.ProfileVersion",
    "value": {
      "AllowedPattern": "^[0-9a-zA-Z]{10}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Signer::SigningProfile.ProfileVersion",
    "value": {
      "AllowedPattern": "^[0-9a-zA-Z]{10}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Signer::SigningProfile.Arn",
    "value": {
      "AllowedPattern": "^arn:aws(-(cn|gov))?:[a-z-]+:(([a-z]+-)+[0-9])?:([0-9]{12})?:[^.]+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Signer::SigningProfile.ProfileVersionArn",
    "value": {
      "AllowedPattern": "^arn:aws(-(cn|gov))?:[a-z-]+:(([a-z]+-)+[0-9])?:([0-9]{12})?:[^.]+$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Signer::SigningProfile.SignatureValidityPeriod.Type",
    "value": {
      "AllowedValues": [
        "DAYS",
        "MONTHS",
        "YEARS"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Signer::SigningProfile.PlatformId",
    "value": {
      "AllowedValues": [
        "AWSLambda-SHA384-ECDSA"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Signer::SigningProfile.Tag.Key",
    "value": {
      "AllowedPattern": "^(?!aws:)[a-zA-Z+-=._:/]+$",
      "StringMax": 127,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Signer::SigningProfile.Tag.Value",
    "value": {
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::StepFunctions::StateMachine.Arn",
    "value": {
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::StepFunctions::StateMachine.Name",
    "value": {
      "StringMax": 80,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::StepFunctions::StateMachine.DefinitionString",
    "value": {
      "StringMax": 1048576,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::StepFunctions::StateMachine.RoleArn",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::StepFunctions::StateMachine.StateMachineName",
    "value": {
      "StringMax": 80,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::StepFunctions::StateMachine.StateMachineType",
    "value": {
      "AllowedValues": [
        "STANDARD",
        "EXPRESS"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::StepFunctions::StateMachine.LoggingConfiguration.Level",
    "value": {
      "AllowedValues": [
        "ALL",
        "ERROR",
        "FATAL",
        "OFF"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::StepFunctions::StateMachine.CloudWatchLogsLogGroup.LogGroupArn",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::StepFunctions::StateMachine.TagsEntry.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::StepFunctions::StateMachine.TagsEntry.Value",
    "value": {
      "StringMax": 256,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Synthetics::Canary.Name",
    "value": {
      "AllowedPattern": "^[0-9a-z_\\-]{1,21}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Synthetics::Canary.ArtifactS3Location",
    "value": {
      "AllowedPattern": "^(s3|S3)://"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Synthetics::Canary.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Timestream::Database.DatabaseName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9_.-]{3,64}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Timestream::Database.KmsKeyId",
    "value": {
      "StringMax": 2048,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Timestream::Database.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Timestream::Table.DatabaseName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9_.-]{3,64}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Timestream::Table.TableName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9_.-]{3,64}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::Timestream::Table.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::IPSet.Description",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9=:#@/\\-,.][a-zA-Z0-9+=:#@/\\-,.\\s]+[a-zA-Z0-9+=:#@/\\-,.]{1,256}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::IPSet.Name",
    "value": {
      "AllowedPattern": "^[0-9A-Za-z_-]{1,128}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::IPSet.Id",
    "value": {
      "AllowedPattern": "^[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::IPSet.Scope",
    "value": {
      "AllowedValues": [
        "CLOUDFRONT",
        "REGIONAL"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::IPSet.IPAddressVersion",
    "value": {
      "AllowedValues": [
        "IPV4",
        "IPV6"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::IPSet.Addresses",
    "value": {
      "StringMax": 50,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::IPSet.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::RegexPatternSet.Description",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9=:#@/\\-,.][a-zA-Z0-9+=:#@/\\-,.\\s]+[a-zA-Z0-9+=:#@/\\-,.]{1,256}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::RegexPatternSet.Name",
    "value": {
      "AllowedPattern": "^[0-9A-Za-z_-]{1,128}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::RegexPatternSet.Id",
    "value": {
      "AllowedPattern": "^[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::RegexPatternSet.Scope",
    "value": {
      "AllowedValues": [
        "CLOUDFRONT",
        "REGIONAL"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::RegexPatternSet.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::RuleGroup.Arn",
    "value": {
      "StringMax": 2048,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::RuleGroup.Description",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9=:#@/\\-,.][a-zA-Z0-9+=:#@/\\-,.\\s]+[a-zA-Z0-9+=:#@/\\-,.]{1,256}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::RuleGroup.Name",
    "value": {
      "AllowedPattern": "^[0-9A-Za-z_-]{1,128}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::RuleGroup.Id",
    "value": {
      "AllowedPattern": "^[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::RuleGroup.Scope",
    "value": {
      "AllowedValues": [
        "CLOUDFRONT",
        "REGIONAL"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::RuleGroup.Rule.Name",
    "value": {
      "AllowedPattern": "^[0-9A-Za-z_-]{1,128}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::RuleGroup.TextTransformation.Type",
    "value": {
      "AllowedValues": [
        "NONE",
        "COMPRESS_WHITE_SPACE",
        "HTML_ENTITY_DECODE",
        "LOWERCASE",
        "CMD_LINE",
        "URL_DECODE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::RuleGroup.ByteMatchStatement.PositionalConstraint",
    "value": {
      "AllowedValues": [
        "EXACTLY",
        "STARTS_WITH",
        "ENDS_WITH",
        "CONTAINS",
        "CONTAINS_WORD"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::RuleGroup.SizeConstraintStatement.ComparisonOperator",
    "value": {
      "AllowedValues": [
        "EQ",
        "NE",
        "LE",
        "LT",
        "GE",
        "GT"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::RuleGroup.GeoMatchStatement.CountryCodes",
    "value": {
      "StringMax": 2,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::RuleGroup.ForwardedIPConfiguration.HeaderName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9-]+{1,255}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::RuleGroup.ForwardedIPConfiguration.FallbackBehavior",
    "value": {
      "AllowedValues": [
        "MATCH",
        "NO_MATCH"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::RuleGroup.IPSetReferenceStatement.Arn",
    "value": {
      "StringMax": 2048,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::RuleGroup.IPSetForwardedIPConfiguration.HeaderName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9-]+{1,255}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::RuleGroup.IPSetForwardedIPConfiguration.FallbackBehavior",
    "value": {
      "AllowedValues": [
        "MATCH",
        "NO_MATCH"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::RuleGroup.IPSetForwardedIPConfiguration.Position",
    "value": {
      "AllowedValues": [
        "FIRST",
        "LAST",
        "ANY"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::RuleGroup.RegexPatternSetReferenceStatement.Arn",
    "value": {
      "StringMax": 2048,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::RuleGroup.RateBasedStatementOne.Limit",
    "value": {
      "NumberMax": 2000000000,
      "NumberMin": 100
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::RuleGroup.RateBasedStatementOne.AggregateKeyType",
    "value": {
      "AllowedValues": [
        "IP",
        "FORWARDED_IP"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::RuleGroup.RateBasedStatementTwo.Limit",
    "value": {
      "NumberMax": 2000000000,
      "NumberMin": 100
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::RuleGroup.RateBasedStatementTwo.AggregateKeyType",
    "value": {
      "AllowedValues": [
        "IP",
        "FORWARDED_IP"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::RuleGroup.VisibilityConfig.MetricName",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::RuleGroup.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::WebACL.Arn",
    "value": {
      "StringMax": 2048,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::WebACL.Description",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9=:#@/\\-,.][a-zA-Z0-9+=:#@/\\-,.\\s]+[a-zA-Z0-9+=:#@/\\-,.]{1,256}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::WebACL.Name",
    "value": {
      "AllowedPattern": "^[0-9A-Za-z_-]{1,128}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::WebACL.Id",
    "value": {
      "AllowedPattern": "^[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::WebACL.Scope",
    "value": {
      "AllowedValues": [
        "CLOUDFRONT",
        "REGIONAL"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::WebACL.Rule.Name",
    "value": {
      "AllowedPattern": "^[0-9A-Za-z_-]{1,128}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::WebACL.TextTransformation.Type",
    "value": {
      "AllowedValues": [
        "NONE",
        "COMPRESS_WHITE_SPACE",
        "HTML_ENTITY_DECODE",
        "LOWERCASE",
        "CMD_LINE",
        "URL_DECODE"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::WebACL.ByteMatchStatement.PositionalConstraint",
    "value": {
      "AllowedValues": [
        "EXACTLY",
        "STARTS_WITH",
        "ENDS_WITH",
        "CONTAINS",
        "CONTAINS_WORD"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::WebACL.SizeConstraintStatement.ComparisonOperator",
    "value": {
      "AllowedValues": [
        "EQ",
        "NE",
        "LE",
        "LT",
        "GE",
        "GT"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::WebACL.GeoMatchStatement.CountryCodes",
    "value": {
      "StringMax": 2,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::WebACL.ForwardedIPConfiguration.HeaderName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9-]+{1,255}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::WebACL.ForwardedIPConfiguration.FallbackBehavior",
    "value": {
      "AllowedValues": [
        "MATCH",
        "NO_MATCH"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::WebACL.RuleGroupReferenceStatement.Arn",
    "value": {
      "StringMax": 2048,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::WebACL.ExcludedRule.Name",
    "value": {
      "AllowedPattern": "^[0-9A-Za-z_-]{1,128}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::WebACL.IPSetReferenceStatement.Arn",
    "value": {
      "StringMax": 2048,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::WebACL.IPSetForwardedIPConfiguration.HeaderName",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9-]+{1,255}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::WebACL.IPSetForwardedIPConfiguration.FallbackBehavior",
    "value": {
      "AllowedValues": [
        "MATCH",
        "NO_MATCH"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::WebACL.IPSetForwardedIPConfiguration.Position",
    "value": {
      "AllowedValues": [
        "FIRST",
        "LAST",
        "ANY"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::WebACL.RegexPatternSetReferenceStatement.Arn",
    "value": {
      "StringMax": 2048,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::WebACL.ManagedRuleGroupStatement.Name",
    "value": {
      "AllowedPattern": "^[0-9A-Za-z_-]{1,128}$"
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::WebACL.RateBasedStatementOne.Limit",
    "value": {
      "NumberMax": 2000000000,
      "NumberMin": 100
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::WebACL.RateBasedStatementOne.AggregateKeyType",
    "value": {
      "AllowedValues": [
        "IP",
        "FORWARDED_IP"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::WebACL.RateBasedStatementTwo.Limit",
    "value": {
      "NumberMax": 2000000000,
      "NumberMin": 100
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::WebACL.RateBasedStatementTwo.AggregateKeyType",
    "value": {
      "AllowedValues": [
        "IP",
        "FORWARDED_IP"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::WebACL.VisibilityConfig.MetricName",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::WebACL.Tag.Key",
    "value": {
      "StringMax": 128,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::WebACLAssociation.ResourceArn",
    "value": {
      "StringMax": 2048,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WAFv2::WebACLAssociation.WebACLArn",
    "value": {
      "StringMax": 2048,
      "StringMin": 20
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WorkSpaces::ConnectionAlias.ConnectionAliasAssociation.AssociationStatus",
    "value": {
      "AllowedValues": [
        "NOT_ASSOCIATED",
        "PENDING_ASSOCIATION",
        "ASSOCIATED_WITH_OWNER_ACCOUNT",
        "ASSOCIATED_WITH_SHARED_ACCOUNT",
        "PENDING_DISASSOCIATION"
      ]
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WorkSpaces::ConnectionAlias.ConnectionAliasAssociation.ResourceId",
    "value": {
      "AllowedPattern": ".+",
      "StringMax": 1000,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WorkSpaces::ConnectionAlias.ConnectionAliasAssociation.ConnectionIdentifier",
    "value": {
      "AllowedPattern": "^[a-zA-Z0-9]+$",
      "StringMax": 20,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WorkSpaces::ConnectionAlias.AliasId",
    "value": {
      "AllowedPattern": "^wsca-[0-9a-z]{8,63}$",
      "StringMax": 68,
      "StringMin": 13
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WorkSpaces::ConnectionAlias.ConnectionString",
    "value": {
      "AllowedPattern": "^[.0-9a-zA-Z\\-]{1,255}$",
      "StringMax": 255,
      "StringMin": 1
    }
  },
  {
    "op": "add",
    "path": "/ValueTypes/AWS::WorkSpaces::ConnectionAlias.ConnectionAliasState",
    "value": {
      "AllowedValues": [
        "CREATING",
        "CREATED",
        "DELETING"
      ]
    }
  }
]