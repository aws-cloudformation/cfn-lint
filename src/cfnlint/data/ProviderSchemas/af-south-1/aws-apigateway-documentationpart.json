{
 "typeName": "AWS::ApiGateway::DocumentationPart",
 "description": "Resource Type definition for AWS::ApiGateway::DocumentationPart",
 "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-apigateway",
 "additionalProperties": false,
 "properties": {
  "DocumentationPartId": {
   "description": "The identifier of the documentation Part.",
   "type": "string"
  },
  "Location": {
   "description": "The location of the API entity that the documentation applies to.",
   "$ref": "#/definitions/Location"
  },
  "Properties": {
   "description": "The documentation content map of the targeted API entity.",
   "type": "string"
  },
  "RestApiId": {
   "description": "Identifier of the targeted API entity",
   "type": "string"
  }
 },
 "definitions": {
  "Location": {
   "type": "object",
   "additionalProperties": false,
   "properties": {
    "Method": {
     "description": "The HTTP verb of a method.",
     "type": "string"
    },
    "Name": {
     "description": "The name of the targeted API entity.",
     "type": "string"
    },
    "Path": {
     "description": "The URL path of the target.",
     "type": "string"
    },
    "StatusCode": {
     "description": "The HTTP status code of a response.",
     "type": "string"
    },
    "Type": {
     "description": "The type of API entity that the documentation content applies to.",
     "type": "string",
     "enum": [
      "API",
      "AUTHORIZER",
      "MODEL",
      "RESOURCE",
      "METHOD",
      "PATH_PARAMETER",
      "QUERY_PARAMETER",
      "REQUEST_HEADER",
      "REQUEST_BODY",
      "RESPONSE",
      "RESPONSE_HEADER",
      "RESPONSE_BODY"
     ]
    }
   }
  }
 },
 "required": [
  "Location",
  "Properties",
  "RestApiId"
 ],
 "createOnlyProperties": [
  "/properties/Location",
  "/properties/RestApiId"
 ],
 "primaryIdentifier": [
  "/properties/DocumentationPartId",
  "/properties/RestApiId"
 ],
 "readOnlyProperties": [
  "/properties/DocumentationPartId"
 ],
 "handlers": {
  "create": {
   "permissions": [
    "apigateway:GET",
    "apigateway:POST"
   ]
  },
  "read": {
   "permissions": [
    "apigateway:GET"
   ]
  },
  "update": {
   "permissions": [
    "apigateway:GET",
    "apigateway:PATCH"
   ]
  },
  "delete": {
   "permissions": [
    "apigateway:DELETE"
   ]
  },
  "list": {
   "permissions": [
    "apigateway:GET"
   ]
  }
 }
}