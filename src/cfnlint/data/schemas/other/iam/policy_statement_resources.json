{
 "definitions": {
  "resources_asterisk": {
   "enum": [
    "a2c:GetContainerizationJobDetails",
    "a2c:GetDeploymentJobDetails",
    "a2c:StartContainerizationJob",
    "a2c:StartDeploymentJob",
    "a4b:ApproveSkill",
    "a4b:AssociateSkillWithUsers",
    "a4b:CompleteRegistration",
    "a4b:CreateAddressBook",
    "a4b:CreateBusinessReportSchedule",
    "a4b:CreateConferenceProvider",
    "a4b:CreateContact",
    "a4b:CreateGatewayGroup",
    "a4b:CreateNetworkProfile",
    "a4b:CreateProfile",
    "a4b:CreateSkillGroup",
    "a4b:GetConferencePreference",
    "a4b:GetInvitationConfiguration",
    "a4b:ListBusinessReportSchedules",
    "a4b:ListConferenceProviders",
    "a4b:ListGatewayGroups",
    "a4b:ListSkills",
    "a4b:ListSkillsStoreCategories",
    "a4b:ListSkillsStoreSkillsByCategory",
    "a4b:PutConferencePreference",
    "a4b:PutDeviceSetupEvents",
    "a4b:PutInvitationConfiguration",
    "a4b:RegisterAVSDevice",
    "a4b:RegisterDevice",
    "a4b:RejectSkill",
    "a4b:ResolveRoom",
    "a4b:SearchAddressBooks",
    "a4b:SearchContacts",
    "a4b:SearchDevices",
    "a4b:SearchNetworkProfiles",
    "a4b:SearchProfiles",
    "a4b:SearchRooms",
    "a4b:SearchSkillGroups",
    "a4b:SearchUsers",
    "a4b:SendAnnouncement",
    "a4b:StartDeviceSync",
    "access-analyzer:CancelPolicyGeneration",
    "access-analyzer:CheckAccessNotGranted",
    "access-analyzer:CheckNoNewAccess",
    "access-analyzer:CheckNoPublicAccess",
    "access-analyzer:GetGeneratedPolicy",
    "access-analyzer:ListAnalyzers",
    "access-analyzer:ListPolicyGenerations",
    "access-analyzer:StartPolicyGeneration",
    "access-analyzer:ValidatePolicy",
    "acm:GetAccountConfiguration",
    "acm:ListCertificates",
    "acm:PutAccountConfiguration",
    "acm:RequestCertificate",
    "acm-pca:CreateCertificateAuthority",
    "acm-pca:ListCertificateAuthorities",
    "activate:CreateForm",
    "activate:GetAccountContact",
    "activate:GetContentInfo",
    "activate:GetCosts",
    "activate:GetCredits",
    "activate:GetMemberInfo",
    "activate:GetProgram",
    "activate:PutMemberInfo",
    "aiops:CreateInvestigationGroup",
    "aiops:ListInvestigationGroups",
    "airflow:ListEnvironments",
    "amplify:ListApps",
    "amplify:ListResourcesForWebACL",
    "amplifybackend:ListS3Buckets",
    "amplifyuibuilder:CreateComponent",
    "amplifyuibuilder:CreateForm",
    "amplifyuibuilder:CreateTheme",
    "amplifyuibuilder:ExchangeCodeForToken",
    "amplifyuibuilder:ExportComponents",
    "amplifyuibuilder:ExportForms",
    "amplifyuibuilder:ExportThemes",
    "amplifyuibuilder:GetMetadata",
    "amplifyuibuilder:ListCodegenJobs",
    "amplifyuibuilder:ListComponents",
    "amplifyuibuilder:ListForms",
    "amplifyuibuilder:ListThemes",
    "amplifyuibuilder:PutMetadataFlag",
    "amplifyuibuilder:RefreshToken",
    "amplifyuibuilder:ResetMetadataFlag",
    "amplifyuibuilder:StartCodegenJob",
    "aoss:BatchGetCollection",
    "aoss:BatchGetEffectiveLifecyclePolicy",
    "aoss:BatchGetLifecyclePolicy",
    "aoss:BatchGetVpcEndpoint",
    "aoss:CreateAccessPolicy",
    "aoss:CreateCollection",
    "aoss:CreateLifecyclePolicy",
    "aoss:CreateSecurityConfig",
    "aoss:CreateSecurityPolicy",
    "aoss:CreateVpcEndpoint",
    "aoss:DeleteAccessPolicy",
    "aoss:DeleteLifecyclePolicy",
    "aoss:DeleteSecurityConfig",
    "aoss:DeleteSecurityPolicy",
    "aoss:DeleteVpcEndpoint",
    "aoss:GetAccessPolicy",
    "aoss:GetAccountSettings",
    "aoss:GetPoliciesStats",
    "aoss:GetSecurityConfig",
    "aoss:GetSecurityPolicy",
    "aoss:ListAccessPolicies",
    "aoss:ListCollections",
    "aoss:ListLifecyclePolicies",
    "aoss:ListSecurityConfigs",
    "aoss:ListSecurityPolicies",
    "aoss:ListTagsForResource",
    "aoss:ListVpcEndpoints",
    "aoss:TagResource",
    "aoss:UntagResource",
    "aoss:UpdateAccessPolicy",
    "aoss:UpdateAccountSettings",
    "aoss:UpdateLifecyclePolicy",
    "aoss:UpdateSecurityConfig",
    "aoss:UpdateSecurityPolicy",
    "aoss:UpdateVpcEndpoint",
    "app-integrations:ListApplicationAssociations",
    "app-integrations:ListApplications",
    "app-integrations:ListDataIntegrationAssociations",
    "app-integrations:ListDataIntegrations",
    "app-integrations:ListEventIntegrationAssociations",
    "app-integrations:ListEventIntegrations",
    "appconfig:CreateApplication",
    "appconfig:CreateDeploymentStrategy",
    "appconfig:CreateExtension",
    "appconfig:CreateExtensionAssociation",
    "appconfig:GetAccountSettings",
    "appconfig:ListApplications",
    "appconfig:ListDeploymentStrategies",
    "appconfig:ListExtensionAssociations",
    "appconfig:ListExtensions",
    "appconfig:UpdateAccountSettings",
    "appfabric:CreateAppBundle",
    "appfabric:ListAppBundles",
    "appflow:CreateConnectorProfile",
    "appflow:CreateFlow",
    "appflow:DescribeConnectorProfiles",
    "appflow:DescribeConnectors",
    "appflow:DescribeFlows",
    "appflow:RegisterConnector",
    "application-autoscaling:DescribeScalableTargets",
    "application-autoscaling:DescribeScalingActivities",
    "application-autoscaling:DescribeScalingPolicies",
    "application-autoscaling:DescribeScheduledActions",
    "application-autoscaling:GetPredictiveScalingForecast",
    "application-cost-profiler:DeleteReportDefinition",
    "application-cost-profiler:GetReportDefinition",
    "application-cost-profiler:ImportApplicationUsage",
    "application-cost-profiler:ListReportDefinitions",
    "application-cost-profiler:PutReportDefinition",
    "application-cost-profiler:UpdateReportDefinition",
    "application-signals:CreateServiceLevelObjective",
    "application-signals:GetService",
    "application-signals:Link",
    "application-signals:ListObservedEntities",
    "application-signals:ListServiceDependencies",
    "application-signals:ListServiceDependents",
    "application-signals:ListServiceLevelObjectives",
    "application-signals:ListServiceOperations",
    "application-signals:ListServices",
    "application-signals:StartDiscovery",
    "application-transformation:GetContainerization",
    "application-transformation:GetDeployment",
    "application-transformation:GetGroupingAssessment",
    "application-transformation:GetPortingCompatibilityAssessment",
    "application-transformation:GetPortingRecommendationAssessment",
    "application-transformation:GetRuntimeAssessment",
    "application-transformation:PutLogData",
    "application-transformation:PutMetricData",
    "application-transformation:StartContainerization",
    "application-transformation:StartDeployment",
    "application-transformation:StartGroupingAssessment",
    "application-transformation:StartPortingCompatibilityAssessment",
    "application-transformation:StartPortingRecommendationAssessment",
    "application-transformation:StartRuntimeAssessment",
    "applicationinsights:AddWorkload",
    "applicationinsights:CreateApplication",
    "applicationinsights:CreateComponent",
    "applicationinsights:CreateLogPattern",
    "applicationinsights:DeleteApplication",
    "applicationinsights:DeleteComponent",
    "applicationinsights:DeleteLogPattern",
    "applicationinsights:DescribeApplication",
    "applicationinsights:DescribeComponent",
    "applicationinsights:DescribeComponentConfiguration",
    "applicationinsights:DescribeComponentConfigurationRecommendation",
    "applicationinsights:DescribeLogPattern",
    "applicationinsights:DescribeObservation",
    "applicationinsights:DescribeProblem",
    "applicationinsights:DescribeProblemObservations",
    "applicationinsights:DescribeWorkload",
    "applicationinsights:Link",
    "applicationinsights:ListApplications",
    "applicationinsights:ListComponents",
    "applicationinsights:ListConfigurationHistory",
    "applicationinsights:ListLogPatternSets",
    "applicationinsights:ListLogPatterns",
    "applicationinsights:ListProblems",
    "applicationinsights:ListTagsForResource",
    "applicationinsights:ListWorkloads",
    "applicationinsights:RemoveWorkload",
    "applicationinsights:TagResource",
    "applicationinsights:UntagResource",
    "applicationinsights:UpdateApplication",
    "applicationinsights:UpdateComponent",
    "applicationinsights:UpdateComponentConfiguration",
    "applicationinsights:UpdateLogPattern",
    "applicationinsights:UpdateProblem",
    "applicationinsights:UpdateWorkload",
    "appmesh:ListMeshes",
    "appmesh-preview:ListMeshes",
    "apprunner:ListAutoScalingConfigurations",
    "apprunner:ListConnections",
    "apprunner:ListObservabilityConfigurations",
    "apprunner:ListServices",
    "apprunner:ListVpcConnectors",
    "apprunner:ListVpcIngressConnections",
    "appstream:CreateAppBlock",
    "appstream:CreateDirectoryConfig",
    "appstream:CreateUsageReportSubscription",
    "appstream:CreateUser",
    "appstream:DeleteDirectoryConfig",
    "appstream:DeleteUsageReportSubscription",
    "appstream:DeleteUser",
    "appstream:DescribeDirectoryConfigs",
    "appstream:DescribeUsageReportSubscriptions",
    "appstream:DescribeUsers",
    "appstream:DisableUser",
    "appstream:EnableUser",
    "appstream:ExpireSession",
    "appstream:ListTagsForResource",
    "appstream:UpdateDirectoryConfig",
    "appstudio:GetAccountStatus",
    "appstudio:GetEnablementJobStatus",
    "appstudio:StartEnablementJob",
    "appstudio:StartRollbackEnablementJob",
    "appstudio:StartTeamDeployment",
    "appsync:CreateApi",
    "appsync:CreateApiCache",
    "appsync:CreateApiKey",
    "appsync:CreateDataSource",
    "appsync:CreateDomainName",
    "appsync:CreateFunction",
    "appsync:CreateGraphqlApi",
    "appsync:CreateResolver",
    "appsync:CreateType",
    "appsync:DeleteApiCache",
    "appsync:DeleteApiKey",
    "appsync:DeleteDataSource",
    "appsync:DeleteFunction",
    "appsync:DeleteResolver",
    "appsync:DeleteResourcePolicy",
    "appsync:DeleteType",
    "appsync:EvaluateCode",
    "appsync:EvaluateMappingTemplate",
    "appsync:FlushApiCache",
    "appsync:GetApiCache",
    "appsync:GetDataSource",
    "appsync:GetDataSourceIntrospection",
    "appsync:GetFunction",
    "appsync:GetGraphqlApiEnvironmentVariables",
    "appsync:GetIntrospectionSchema",
    "appsync:GetResolver",
    "appsync:GetResourcePolicy",
    "appsync:GetSchemaCreationStatus",
    "appsync:GetType",
    "appsync:ListApiKeys",
    "appsync:ListApis",
    "appsync:ListDataSources",
    "appsync:ListDomainNames",
    "appsync:ListFunctions",
    "appsync:ListGraphqlApis",
    "appsync:ListResolvers",
    "appsync:ListResolversByFunction",
    "appsync:ListSourceApiAssociations",
    "appsync:ListTypes",
    "appsync:ListTypesByAssociation",
    "appsync:PutGraphqlApiEnvironmentVariables",
    "appsync:PutResourcePolicy",
    "appsync:SetWebACL",
    "appsync:StartDataSourceIntrospection",
    "appsync:StartSchemaCreation",
    "appsync:UpdateApiCache",
    "appsync:UpdateApiKey",
    "appsync:UpdateDataSource",
    "appsync:UpdateFunction",
    "appsync:UpdateResolver",
    "appsync:UpdateType",
    "apptest:CreateTestCase",
    "apptest:CreateTestConfiguration",
    "apptest:CreateTestSuite",
    "apptest:ListTagsForResource",
    "apptest:ListTestCases",
    "apptest:ListTestConfigurations",
    "apptest:ListTestRuns",
    "apptest:ListTestSuites",
    "apptest:StartTestRun",
    "aps:CreateWorkspace",
    "aps:GetDefaultScraperConfiguration",
    "aps:ListScrapers",
    "aps:ListWorkspaces",
    "arc-zonal-shift:GetAutoshiftObserverNotificationStatus",
    "arc-zonal-shift:ListAutoshifts",
    "arc-zonal-shift:ListManagedResources",
    "arc-zonal-shift:ListZonalShifts",
    "arc-zonal-shift:UpdateAutoshiftObserverNotificationStatus",
    "arsenal:RegisterOnPremisesAgent",
    "artifact:GetAccountSettings",
    "artifact:ListAgreements",
    "artifact:ListCustomerAgreements",
    "artifact:ListReports",
    "artifact:PutAccountSettings",
    "athena:GetCatalogs",
    "athena:GetExecutionEngine",
    "athena:GetExecutionEngines",
    "athena:GetNamespace",
    "athena:GetNamespaces",
    "athena:GetQueryExecutions",
    "athena:GetTable",
    "athena:GetTables",
    "athena:ListApplicationDPUSizes",
    "athena:ListCapacityReservations",
    "athena:ListDataCatalogs",
    "athena:ListEngineVersions",
    "athena:ListExecutors",
    "athena:ListWorkGroups",
    "athena:RunQuery",
    "auditmanager:CreateAssessment",
    "auditmanager:CreateAssessmentFramework",
    "auditmanager:CreateControl",
    "auditmanager:DeleteAssessmentFrameworkShare",
    "auditmanager:DeregisterAccount",
    "auditmanager:DeregisterOrganizationAdminAccount",
    "auditmanager:GetAccountStatus",
    "auditmanager:GetDelegations",
    "auditmanager:GetEvidenceFileUploadUrl",
    "auditmanager:GetInsights",
    "auditmanager:GetInsightsByAssessment",
    "auditmanager:GetOrganizationAdminAccount",
    "auditmanager:GetServicesInScope",
    "auditmanager:GetSettings",
    "auditmanager:ListAssessmentControlInsightsByControlDomain",
    "auditmanager:ListAssessmentFrameworkShareRequests",
    "auditmanager:ListAssessmentFrameworks",
    "auditmanager:ListAssessmentReports",
    "auditmanager:ListAssessments",
    "auditmanager:ListControlDomainInsights",
    "auditmanager:ListControlDomainInsightsByAssessment",
    "auditmanager:ListControlInsightsByControlDomain",
    "auditmanager:ListControls",
    "auditmanager:ListKeywordsForDataSource",
    "auditmanager:ListNotifications",
    "auditmanager:RegisterAccount",
    "auditmanager:RegisterOrganizationAdminAccount",
    "auditmanager:UpdateAssessmentFrameworkShare",
    "auditmanager:UpdateSettings",
    "auditmanager:ValidateAssessmentReportIntegrity",
    "autoscaling:DescribeAccountLimits",
    "autoscaling:DescribeAdjustmentTypes",
    "autoscaling:DescribeAutoScalingGroups",
    "autoscaling:DescribeAutoScalingInstances",
    "autoscaling:DescribeAutoScalingNotificationTypes",
    "autoscaling:DescribeInstanceRefreshes",
    "autoscaling:DescribeLaunchConfigurations",
    "autoscaling:DescribeLifecycleHookTypes",
    "autoscaling:DescribeLifecycleHooks",
    "autoscaling:DescribeLoadBalancerTargetGroups",
    "autoscaling:DescribeLoadBalancers",
    "autoscaling:DescribeMetricCollectionTypes",
    "autoscaling:DescribeNotificationConfigurations",
    "autoscaling:DescribePolicies",
    "autoscaling:DescribeScalingActivities",
    "autoscaling:DescribeScalingProcessTypes",
    "autoscaling:DescribeScheduledActions",
    "autoscaling:DescribeTags",
    "autoscaling:DescribeTerminationPolicyTypes",
    "autoscaling:DescribeTrafficSources",
    "autoscaling:DescribeWarmPool",
    "autoscaling:GetPredictiveScalingForecast",
    "autoscaling-plans:CreateScalingPlan",
    "autoscaling-plans:DeleteScalingPlan",
    "autoscaling-plans:DescribeScalingPlanResources",
    "autoscaling-plans:DescribeScalingPlans",
    "autoscaling-plans:GetScalingPlanResourceForecastData",
    "autoscaling-plans:UpdateScalingPlan",
    "aws-marketplace:AcceptAgreementApprovalRequest",
    "aws-marketplace:AcceptAgreementRequest",
    "aws-marketplace:AssociateProductsWithPrivateMarketplace",
    "aws-marketplace:BatchMeterUsage",
    "aws-marketplace:CancelAgreement",
    "aws-marketplace:CancelAgreementRequest",
    "aws-marketplace:CompleteTask",
    "aws-marketplace:CreateAgreementRequest",
    "aws-marketplace:CreatePrivateMarketplaceRequests",
    "aws-marketplace:DescribeAgreement",
    "aws-marketplace:DescribeAssessment",
    "aws-marketplace:DescribeBuilds",
    "aws-marketplace:DescribePrivateMarketplaceRequests",
    "aws-marketplace:DescribeProcurementSystemConfiguration",
    "aws-marketplace:DescribeTask",
    "aws-marketplace:DisassociateProductsFromPrivateMarketplace",
    "aws-marketplace:GetAgreementApprovalRequest",
    "aws-marketplace:GetAgreementRequest",
    "aws-marketplace:GetAgreementTerms",
    "aws-marketplace:GetEntitlements",
    "aws-marketplace:ListAgreementApprovalRequests",
    "aws-marketplace:ListAgreementCharges",
    "aws-marketplace:ListAgreementRequests",
    "aws-marketplace:ListAssessments",
    "aws-marketplace:ListBuilds",
    "aws-marketplace:ListChangeSets",
    "aws-marketplace:ListEntities",
    "aws-marketplace:ListEntitlementDetails",
    "aws-marketplace:ListPrivateListings",
    "aws-marketplace:ListPrivateMarketplaceRequests",
    "aws-marketplace:ListTasks",
    "aws-marketplace:MeterUsage",
    "aws-marketplace:PutProcurementSystemConfiguration",
    "aws-marketplace:RegisterUsage",
    "aws-marketplace:RejectAgreementApprovalRequest",
    "aws-marketplace:ResolveCustomer",
    "aws-marketplace:SearchAgreements",
    "aws-marketplace:StartBuild",
    "aws-marketplace:Subscribe",
    "aws-marketplace:Unsubscribe",
    "aws-marketplace:UpdateAgreementApprovalRequest",
    "aws-marketplace:UpdatePurchaseOrders",
    "aws-marketplace:UpdateTask",
    "aws-marketplace:ViewSubscriptions",
    "aws-marketplace-management:GetAdditionalSellerNotificationRecipients",
    "aws-marketplace-management:GetBankAccountVerificationDetails",
    "aws-marketplace-management:GetSecondaryUserVerificationDetails",
    "aws-marketplace-management:GetSellerVerificationDetails",
    "aws-marketplace-management:PutAdditionalSellerNotificationRecipients",
    "aws-marketplace-management:PutBankAccountVerificationDetails",
    "aws-marketplace-management:PutSecondaryUserVerificationDetails",
    "aws-marketplace-management:PutSellerVerificationDetails",
    "aws-marketplace-management:uploadFiles",
    "aws-marketplace-management:viewMarketing",
    "aws-marketplace-management:viewReports",
    "aws-marketplace-management:viewSettings",
    "aws-marketplace-management:viewSupport",
    "aws-portal:GetConsoleActionSetEnforced",
    "aws-portal:ModifyAccount",
    "aws-portal:ModifyBilling",
    "aws-portal:ModifyPaymentMethods",
    "aws-portal:UpdateConsoleActionSetEnforced",
    "aws-portal:ViewAccount",
    "aws-portal:ViewBilling",
    "aws-portal:ViewPaymentMethods",
    "aws-portal:ViewUsage",
    "awsconnector:GetConnectorHealth",
    "awsconnector:RegisterConnector",
    "awsconnector:ValidateConnectorId",
    "b2bi:CreateProfile",
    "b2bi:CreateTransformer",
    "b2bi:ListCapabilities",
    "b2bi:ListPartnerships",
    "b2bi:ListProfiles",
    "b2bi:ListTransformers",
    "backup:DescribeBackupJob",
    "backup:DescribeCopyJob",
    "backup:DescribeGlobalSettings",
    "backup:DescribeProtectedResource",
    "backup:DescribeRegionSettings",
    "backup:DescribeReportJob",
    "backup:DescribeRestoreJob",
    "backup:ExportBackupPlanTemplate",
    "backup:GetBackupPlanFromJSON",
    "backup:GetBackupPlanFromTemplate",
    "backup:GetRestoreJobMetadata",
    "backup:GetRestoreTestingInferredMetadata",
    "backup:GetSupportedResourceTypes",
    "backup:ListBackupJobSummaries",
    "backup:ListBackupJobs",
    "backup:ListBackupPlanTemplates",
    "backup:ListBackupPlans",
    "backup:ListBackupVaults",
    "backup:ListCopyJobSummaries",
    "backup:ListCopyJobs",
    "backup:ListFrameworks",
    "backup:ListIndexedRecoveryPoints",
    "backup:ListIndexedRecoveryPointsForSearch",
    "backup:ListLegalHolds",
    "backup:ListProtectedResources",
    "backup:ListRecoveryPointsByResource",
    "backup:ListReportJobs",
    "backup:ListReportPlans",
    "backup:ListRestoreJobSummaries",
    "backup:ListRestoreJobs",
    "backup:ListRestoreJobsByProtectedResource",
    "backup:ListRestoreTestingPlans",
    "backup:PutRestoreValidationResult",
    "backup:StopBackupJob",
    "backup:UpdateGlobalSettings",
    "backup:UpdateRegionSettings",
    "backup-gateway:CreateGateway",
    "backup-gateway:ImportHypervisorConfiguration",
    "backup-gateway:ListGateways",
    "backup-gateway:ListHypervisors",
    "backup-gateway:ListVirtualMachines",
    "backup-search:ListSearchJobs",
    "backup-search:ListSearchResultExportJobs",
    "backup-search:StartSearchJob",
    "backup-storage:CommitBackupJob",
    "backup-storage:DeleteObjects",
    "backup-storage:DescribeBackupJob",
    "backup-storage:GetBaseBackup",
    "backup-storage:GetChunk",
    "backup-storage:GetIncrementalBaseBackup",
    "backup-storage:GetObjectMetadata",
    "backup-storage:ListChunks",
    "backup-storage:ListObjects",
    "backup-storage:MountCapsule",
    "backup-storage:NotifyObjectComplete",
    "backup-storage:PutChunk",
    "backup-storage:PutObject",
    "backup-storage:StartObject",
    "backup-storage:UpdateObjectComplete",
    "batch:DescribeComputeEnvironments",
    "batch:DescribeJobDefinitions",
    "batch:DescribeJobQueues",
    "batch:DescribeJobs",
    "batch:DescribeSchedulingPolicies",
    "batch:ListConsumableResources",
    "batch:ListJobs",
    "batch:ListSchedulingPolicies",
    "bcm-data-exports:ListExports",
    "bcm-data-exports:ListTables",
    "bcm-pricing-calculator:CreateBillScenario",
    "bcm-pricing-calculator:CreateWorkloadEstimate",
    "bcm-pricing-calculator:GetPreferences",
    "bcm-pricing-calculator:ListBillEstimates",
    "bcm-pricing-calculator:ListBillScenarios",
    "bcm-pricing-calculator:ListTagsForResource",
    "bcm-pricing-calculator:ListWorkloadEstimates",
    "bcm-pricing-calculator:TagResource",
    "bcm-pricing-calculator:UntagResource",
    "bcm-pricing-calculator:UpdatePreferences",
    "bedrock:AssociateThirdPartyKnowledgeBase",
    "bedrock:CreateAgent",
    "bedrock:CreateBlueprint",
    "bedrock:CreateFlow",
    "bedrock:CreateFoundationModelAgreement",
    "bedrock:CreateGuardrail",
    "bedrock:CreateKnowledgeBase",
    "bedrock:CreateMarketplaceModelEndpoint",
    "bedrock:CreateModelImportJob",
    "bedrock:CreatePrompt",
    "bedrock:CreateSession",
    "bedrock:DeleteFoundationModelAgreement",
    "bedrock:DeleteMarketplaceModelAgreement",
    "bedrock:DeleteModelInvocationLoggingConfiguration",
    "bedrock:GenerateQuery",
    "bedrock:GetBlueprintRecommendation",
    "bedrock:GetFoundationModelAvailability",
    "bedrock:GetModelInvocationLoggingConfiguration",
    "bedrock:GetUseCaseForModelAccess",
    "bedrock:InvokeBuilder",
    "bedrock:InvokeInlineAgent",
    "bedrock:ListAgents",
    "bedrock:ListAsyncInvokes",
    "bedrock:ListCustomModels",
    "bedrock:ListEvaluationJobs",
    "bedrock:ListFlows",
    "bedrock:ListFoundationModelAgreementOffers",
    "bedrock:ListFoundationModels",
    "bedrock:ListImportedModels",
    "bedrock:ListInferenceProfiles",
    "bedrock:ListKnowledgeBases",
    "bedrock:ListMarketplaceModelEndpoints",
    "bedrock:ListModelCopyJobs",
    "bedrock:ListModelCustomizationJobs",
    "bedrock:ListModelEvaluationJobs",
    "bedrock:ListModelImportJobs",
    "bedrock:ListModelInvocationJobs",
    "bedrock:ListPromptRouters",
    "bedrock:ListProvisionedModelThroughputs",
    "bedrock:ListSessions",
    "bedrock:OptimizePrompt",
    "bedrock:PutFoundationModelEntitlement",
    "bedrock:PutModelInvocationLoggingConfiguration",
    "bedrock:PutUseCaseForModelAccess",
    "bedrock:Rerank",
    "bedrock:RetrieveAndGenerate",
    "bedrock:ValidateFlowDefinition",
    "billing:GetBillingData",
    "billing:GetBillingDetails",
    "billing:GetBillingNotifications",
    "billing:GetBillingPreferences",
    "billing:GetContractInformation",
    "billing:GetCredits",
    "billing:GetIAMAccessPreference",
    "billing:GetSellerOfRecord",
    "billing:ListBillingViews",
    "billing:PutContractInformation",
    "billing:RedeemCredits",
    "billing:UpdateBillingPreferences",
    "billing:UpdateIAMAccessPreference",
    "billingconductor:CreatePricingRule",
    "billingconductor:ListAccountAssociations",
    "billingconductor:ListBillingGroupCostReports",
    "billingconductor:ListBillingGroups",
    "billingconductor:ListCustomLineItems",
    "billingconductor:ListPricingPlans",
    "billingconductor:ListPricingRules",
    "braket:AcceptUserAgreement",
    "braket:AccessBraketFeature",
    "braket:CreateJob",
    "braket:CreateQuantumTask",
    "braket:GetDevice",
    "braket:GetServiceLinkedRoleStatus",
    "braket:GetUserAgreementStatus",
    "braket:SearchDevices",
    "braket:SearchJobs",
    "braket:SearchQuantumTasks",
    "budgets:DescribeBudgetActionsForAccount",
    "bugbust:CreateEvent",
    "bugbust:ListEvents",
    "cases:CreateDomain",
    "cases:ListDomains",
    "cases:ListTagsForResource",
    "ce:CreateAnomalyMonitor",
    "ce:CreateAnomalySubscription",
    "ce:CreateCostCategoryDefinition",
    "ce:CreateNotificationSubscription",
    "ce:CreateReport",
    "ce:DeleteNotificationSubscription",
    "ce:DeleteReport",
    "ce:DescribeNotificationSubscription",
    "ce:DescribeReport",
    "ce:GetApproximateUsageRecords",
    "ce:GetCommitmentPurchaseAnalysis",
    "ce:GetConsoleActionSetEnforced",
    "ce:GetPreferences",
    "ce:GetReservationCoverage",
    "ce:GetReservationPurchaseRecommendation",
    "ce:GetReservationUtilization",
    "ce:GetRightsizingRecommendation",
    "ce:GetSavingsPlanPurchaseRecommendationDetails",
    "ce:GetSavingsPlansCoverage",
    "ce:GetSavingsPlansPurchaseRecommendation",
    "ce:GetSavingsPlansUtilization",
    "ce:GetSavingsPlansUtilizationDetails",
    "ce:ListCommitmentPurchaseAnalyses",
    "ce:ListCostAllocationTagBackfillHistory",
    "ce:ListCostAllocationTags",
    "ce:ListCostCategoryDefinitions",
    "ce:ListSavingsPlansPurchaseRecommendationGeneration",
    "ce:ProvideAnomalyFeedback",
    "ce:StartCommitmentPurchaseAnalysis",
    "ce:StartCostAllocationTagBackfill",
    "ce:StartSavingsPlansPurchaseRecommendationGeneration",
    "ce:UpdateConsoleActionSetEnforced",
    "ce:UpdateCostAllocationTagsStatus",
    "ce:UpdateNotificationSubscription",
    "ce:UpdatePreferences",
    "ce:UpdateReport",
    "chatbot:CreateChimeWebhookConfiguration",
    "chatbot:CreateCustomAction",
    "chatbot:CreateMicrosoftTeamsChannelConfiguration",
    "chatbot:CreateSlackChannelConfiguration",
    "chatbot:DeleteMicrosoftTeamsConfiguredTeam",
    "chatbot:DeleteMicrosoftTeamsUserIdentity",
    "chatbot:DeleteSlackUserIdentity",
    "chatbot:DeleteSlackWorkspaceAuthorization",
    "chatbot:DescribeChimeWebhookConfigurations",
    "chatbot:DescribeSlackChannelConfigurations",
    "chatbot:DescribeSlackChannels",
    "chatbot:DescribeSlackUserIdentities",
    "chatbot:DescribeSlackWorkspaces",
    "chatbot:GetAccountPreferences",
    "chatbot:GetMicrosoftTeamsChannelConfiguration",
    "chatbot:GetMicrosoftTeamsOauthParameters",
    "chatbot:GetSlackOauthParameters",
    "chatbot:ListCustomActions",
    "chatbot:ListMicrosoftTeamsChannelConfigurations",
    "chatbot:ListMicrosoftTeamsConfiguredTeams",
    "chatbot:ListMicrosoftTeamsUserIdentities",
    "chatbot:ListTagsForResource",
    "chatbot:RedeemMicrosoftTeamsOauthCode",
    "chatbot:RedeemSlackOauthCode",
    "chatbot:TagResource",
    "chatbot:UntagResource",
    "chatbot:UpdateAccountPreferences",
    "chime:AcceptDelegate",
    "chime:ActivateUsers",
    "chime:AddDomain",
    "chime:AddOrUpdateGroups",
    "chime:AssociatePhoneNumberWithUser",
    "chime:AssociatePhoneNumbersWithVoiceConnectorGroup",
    "chime:AssociateSigninDelegateGroupsWithAccount",
    "chime:AssociateVoiceConnectorConnect",
    "chime:AuthorizeDirectory",
    "chime:BatchCreateRoomMembership",
    "chime:BatchDeletePhoneNumber",
    "chime:BatchSuspendUser",
    "chime:BatchUnsuspendUser",
    "chime:BatchUpdatePhoneNumber",
    "chime:BatchUpdateUser",
    "chime:ConnectDirectory",
    "chime:CreateAccount",
    "chime:CreateApiKey",
    "chime:CreateAppInstance",
    "chime:CreateAppInstanceBot",
    "chime:CreateAppInstanceUser",
    "chime:CreateBot",
    "chime:CreateCDRBucket",
    "chime:CreateConnectAnalyticsConnector",
    "chime:CreateConnectCallTransferConnector",
    "chime:CreateMediaCapturePipeline",
    "chime:CreateMediaConcatenationPipeline",
    "chime:CreateMediaInsightsPipelineConfiguration",
    "chime:CreateMediaLiveConnectorPipeline",
    "chime:CreateMediaPipelineKinesisVideoStreamPool",
    "chime:CreateMeeting",
    "chime:CreateMeetingWithAttendees",
    "chime:CreatePhoneNumberOrder",
    "chime:CreateRoom",
    "chime:CreateRoomMembership",
    "chime:CreateSipMediaApplication",
    "chime:CreateUser",
    "chime:CreateVoiceConnector",
    "chime:CreateVoiceProfile",
    "chime:CreateVoiceProfileDomain",
    "chime:DeleteAccount",
    "chime:DeleteAccountOpenIdConfig",
    "chime:DeleteApiKey",
    "chime:DeleteCDRBucket",
    "chime:DeleteDelegate",
    "chime:DeleteDomain",
    "chime:DeleteEventsConfiguration",
    "chime:DeleteGroups",
    "chime:DeletePhoneNumber",
    "chime:DeleteRoom",
    "chime:DeleteRoomMembership",
    "chime:DeleteSipRule",
    "chime:DeleteVoiceConnectorGroup",
    "chime:DisassociatePhoneNumberFromUser",
    "chime:DisassociatePhoneNumbersFromVoiceConnectorGroup",
    "chime:DisassociateSigninDelegateGroupsFromAccount",
    "chime:DisassociateVoiceConnectorConnect",
    "chime:DisconnectDirectory",
    "chime:GetAccount",
    "chime:GetAccountResource",
    "chime:GetAccountSettings",
    "chime:GetAccountWithOpenIdConfig",
    "chime:GetBot",
    "chime:GetCDRBucket",
    "chime:GetDomain",
    "chime:GetEventsConfiguration",
    "chime:GetGlobalSettings",
    "chime:GetMeetingDetail",
    "chime:GetMessagingSessionEndpoint",
    "chime:GetPhoneNumber",
    "chime:GetPhoneNumberOrder",
    "chime:GetPhoneNumberSettings",
    "chime:GetRetentionSettings",
    "chime:GetRoom",
    "chime:GetSipRule",
    "chime:GetTelephonyLimits",
    "chime:GetUser",
    "chime:GetUserActivityReportData",
    "chime:GetUserByEmail",
    "chime:GetUserSettings",
    "chime:GetVoiceConnectorGroup",
    "chime:InviteDelegate",
    "chime:InviteUsers",
    "chime:InviteUsersFromProvider",
    "chime:ListAccountUsageReportData",
    "chime:ListAccounts",
    "chime:ListApiKeys",
    "chime:ListAvailableVoiceConnectorRegions",
    "chime:ListBots",
    "chime:ListCDRBucket",
    "chime:ListCallingRegions",
    "chime:ListDelegates",
    "chime:ListDirectories",
    "chime:ListDomains",
    "chime:ListGroups",
    "chime:ListMediaCapturePipelines",
    "chime:ListMediaInsightsPipelineConfigurations",
    "chime:ListMediaPipelineKinesisVideoStreamPools",
    "chime:ListMediaPipelines",
    "chime:ListMeetingEvents",
    "chime:ListMeetings",
    "chime:ListMeetingsReportData",
    "chime:ListPhoneNumberOrders",
    "chime:ListPhoneNumbers",
    "chime:ListRoomMemberships",
    "chime:ListRooms",
    "chime:ListSipMediaApplications",
    "chime:ListSupportedPhoneNumberCountries",
    "chime:ListUsers",
    "chime:ListVoiceConnectorGroups",
    "chime:ListVoiceConnectors",
    "chime:ListVoiceProfileDomains",
    "chime:LogoutUser",
    "chime:PutEventsConfiguration",
    "chime:PutRetentionSettings",
    "chime:RedactConversationMessage",
    "chime:RedactRoomMessage",
    "chime:RegenerateSecurityToken",
    "chime:RenameAccount",
    "chime:RenewDelegate",
    "chime:ResetAccountResource",
    "chime:ResetPersonalPIN",
    "chime:RestorePhoneNumber",
    "chime:RetrieveDataExports",
    "chime:SearchAvailablePhoneNumbers",
    "chime:StartDataExport",
    "chime:StartMeetingTranscription",
    "chime:StopMeetingTranscription",
    "chime:SubmitSupportRequest",
    "chime:SuspendUsers",
    "chime:UnauthorizeDirectory",
    "chime:UpdateAccount",
    "chime:UpdateAccountOpenIdConfig",
    "chime:UpdateAccountResource",
    "chime:UpdateAccountSettings",
    "chime:UpdateBot",
    "chime:UpdateCDRSettings",
    "chime:UpdateGlobalSettings",
    "chime:UpdatePhoneNumber",
    "chime:UpdatePhoneNumberSettings",
    "chime:UpdateRoom",
    "chime:UpdateRoomMembership",
    "chime:UpdateSupportedLicenses",
    "chime:UpdateUser",
    "chime:UpdateUserLicenses",
    "chime:UpdateUserSettings",
    "chime:ValidateAccountResource",
    "chime:ValidateE911Address",
    "cleanrooms:ListCollaborations",
    "cleanrooms:ListConfiguredTables",
    "cleanrooms:ListMemberships",
    "cleanrooms-ml:CreateConfiguredModelAlgorithm",
    "cleanrooms-ml:CreateTrainingDataset",
    "cleanrooms-ml:DeleteMLConfiguration",
    "cleanrooms-ml:GetMLConfiguration",
    "cleanrooms-ml:ListAudienceModels",
    "cleanrooms-ml:ListCollaborationConfiguredModelAlgorithmAssociations",
    "cleanrooms-ml:ListCollaborationMLInputChannels",
    "cleanrooms-ml:ListCollaborationTrainedModelInferenceJobs",
    "cleanrooms-ml:ListCollaborationTrainedModels",
    "cleanrooms-ml:ListConfiguredAudienceModels",
    "cleanrooms-ml:ListConfiguredModelAlgorithmAssociations",
    "cleanrooms-ml:ListConfiguredModelAlgorithms",
    "cleanrooms-ml:ListMLInputChannels",
    "cleanrooms-ml:ListTrainedModelInferenceJobs",
    "cleanrooms-ml:ListTrainedModels",
    "cleanrooms-ml:ListTrainingDatasets",
    "cleanrooms-ml:PutMLConfiguration",
    "cloud9:CreateEnvironmentEC2",
    "cloud9:CreateEnvironmentSSH",
    "cloud9:GetMigrationExperiences",
    "cloud9:GetUserPublicKey",
    "cloud9:GetUserSettings",
    "cloud9:ListEnvironments",
    "cloud9:UpdateUserSettings",
    "cloud9:ValidateEnvironmentName",
    "clouddirectory:CreateSchema",
    "clouddirectory:ListDevelopmentSchemaArns",
    "clouddirectory:ListDirectories",
    "clouddirectory:ListManagedSchemaArns",
    "clouddirectory:ListPublishedSchemaArns",
    "clouddirectory:PutSchemaFromJson",
    "cloudformation:ActivateOrganizationsAccess",
    "cloudformation:ActivateType",
    "cloudformation:BatchDescribeTypeConfigurations",
    "cloudformation:CancelResourceRequest",
    "cloudformation:CreateGeneratedTemplate",
    "cloudformation:CreateResource",
    "cloudformation:CreateStackSet",
    "cloudformation:CreateUploadBucket",
    "cloudformation:DeactivateOrganizationsAccess",
    "cloudformation:DeactivateType",
    "cloudformation:DeleteGeneratedTemplate",
    "cloudformation:DeleteResource",
    "cloudformation:DeregisterType",
    "cloudformation:DescribeAccountLimits",
    "cloudformation:DescribeGeneratedTemplate",
    "cloudformation:DescribeOrganizationsAccess",
    "cloudformation:DescribePublisher",
    "cloudformation:DescribeResourceScan",
    "cloudformation:DescribeStackDriftDetectionStatus",
    "cloudformation:DescribeType",
    "cloudformation:DescribeTypeRegistration",
    "cloudformation:EstimateTemplateCost",
    "cloudformation:GetGeneratedTemplate",
    "cloudformation:GetResource",
    "cloudformation:GetResourceRequestStatus",
    "cloudformation:ListExports",
    "cloudformation:ListGeneratedTemplates",
    "cloudformation:ListImports",
    "cloudformation:ListResourceRequests",
    "cloudformation:ListResourceScanRelatedResources",
    "cloudformation:ListResourceScanResources",
    "cloudformation:ListResourceScans",
    "cloudformation:ListResources",
    "cloudformation:ListStackSets",
    "cloudformation:ListStacks",
    "cloudformation:ListTypeRegistrations",
    "cloudformation:ListTypeVersions",
    "cloudformation:ListTypes",
    "cloudformation:PublishType",
    "cloudformation:RegisterPublisher",
    "cloudformation:RegisterType",
    "cloudformation:SetTypeConfiguration",
    "cloudformation:SetTypeDefaultVersion",
    "cloudformation:StartResourceScan",
    "cloudformation:TestType",
    "cloudformation:UpdateGeneratedTemplate",
    "cloudformation:UpdateResource",
    "cloudformation:ValidateTemplate",
    "cloudfront:CreateFieldLevelEncryptionConfig",
    "cloudfront:CreateFieldLevelEncryptionProfile",
    "cloudfront:CreateKeyGroup",
    "cloudfront:CreateMonitoringSubscription",
    "cloudfront:CreateOriginAccessControl",
    "cloudfront:CreatePublicKey",
    "cloudfront:CreateSavingsPlan",
    "cloudfront:CreateVpcOrigin",
    "cloudfront:DeleteKeyGroup",
    "cloudfront:DeleteMonitoringSubscription",
    "cloudfront:DeletePublicKey",
    "cloudfront:GetKeyGroup",
    "cloudfront:GetKeyGroupConfig",
    "cloudfront:GetMonitoringSubscription",
    "cloudfront:GetPublicKey",
    "cloudfront:GetPublicKeyConfig",
    "cloudfront:GetSavingsPlan",
    "cloudfront:ListAnycastIpLists",
    "cloudfront:ListCachePolicies",
    "cloudfront:ListCloudFrontOriginAccessIdentities",
    "cloudfront:ListContinuousDeploymentPolicies",
    "cloudfront:ListDistributions",
    "cloudfront:ListDistributionsByAnycastIpListId",
    "cloudfront:ListDistributionsByCachePolicyId",
    "cloudfront:ListDistributionsByKeyGroup",
    "cloudfront:ListDistributionsByLambdaFunction",
    "cloudfront:ListDistributionsByOriginRequestPolicyId",
    "cloudfront:ListDistributionsByRealtimeLogConfig",
    "cloudfront:ListDistributionsByResponseHeadersPolicyId",
    "cloudfront:ListDistributionsByVpcOriginId",
    "cloudfront:ListDistributionsByWebACLId",
    "cloudfront:ListFieldLevelEncryptionConfigs",
    "cloudfront:ListFieldLevelEncryptionProfiles",
    "cloudfront:ListFunctions",
    "cloudfront:ListKeyGroups",
    "cloudfront:ListKeyValueStores",
    "cloudfront:ListOriginAccessControls",
    "cloudfront:ListOriginRequestPolicies",
    "cloudfront:ListPublicKeys",
    "cloudfront:ListRateCards",
    "cloudfront:ListRealtimeLogConfigs",
    "cloudfront:ListResponseHeadersPolicies",
    "cloudfront:ListSavingsPlans",
    "cloudfront:ListStreamingDistributions",
    "cloudfront:ListUsages",
    "cloudfront:ListVpcOrigins",
    "cloudfront:UpdateFieldLevelEncryptionConfig",
    "cloudfront:UpdateKeyGroup",
    "cloudfront:UpdatePublicKey",
    "cloudfront:UpdateSavingsPlan",
    "cloudhsm:DeleteHsm",
    "cloudhsm:DescribeBackups",
    "cloudhsm:DescribeClusters",
    "cloudshell:CreateEnvironment",
    "cloudshell:DescribeEnvironments",
    "cloudtrail:DeregisterOrganizationDelegatedAdmin",
    "cloudtrail:DescribeTrails",
    "cloudtrail:GetImport",
    "cloudtrail:ListChannels",
    "cloudtrail:ListDashboards",
    "cloudtrail:ListEventDataStores",
    "cloudtrail:ListImportFailures",
    "cloudtrail:ListImports",
    "cloudtrail:ListPublicKeys",
    "cloudtrail:ListServiceLinkedChannels",
    "cloudtrail:ListTrails",
    "cloudtrail:LookupEvents",
    "cloudtrail:RegisterOrganizationDelegatedAdmin",
    "cloudtrail:SearchSampleQueries",
    "cloudtrail:StartImport",
    "cloudtrail:StopImport",
    "cloudwatch:BatchGetServiceLevelIndicatorReport",
    "cloudwatch:CreateServiceLevelObjective",
    "cloudwatch:DeleteAnomalyDetector",
    "cloudwatch:DescribeAlarmsForMetric",
    "cloudwatch:DescribeAnomalyDetectors",
    "cloudwatch:DescribeInsightRules",
    "cloudwatch:EnableTopologyDiscovery",
    "cloudwatch:GenerateQuery",
    "cloudwatch:GetMetricData",
    "cloudwatch:GetMetricStatistics",
    "cloudwatch:GetMetricWidgetImage",
    "cloudwatch:GetTopologyDiscoveryStatus",
    "cloudwatch:GetTopologyMap",
    "cloudwatch:Link",
    "cloudwatch:ListDashboards",
    "cloudwatch:ListEntitiesForMetric",
    "cloudwatch:ListManagedInsightRules",
    "cloudwatch:ListMetricStreams",
    "cloudwatch:ListMetrics",
    "cloudwatch:ListServiceLevelObjectives",
    "cloudwatch:ListServices",
    "cloudwatch:PutAnomalyDetector",
    "cloudwatch:PutManagedInsightRules",
    "cloudwatch:PutMetricData",
    "codeartifact:CreateDomain",
    "codeartifact:CreatePackageGroup",
    "codeartifact:CreateRepository",
    "codeartifact:ListDomains",
    "codeartifact:ListRepositories",
    "codebuild:DeleteOAuthToken",
    "codebuild:DeleteSourceCredentials",
    "codebuild:ImportSourceCredentials",
    "codebuild:ListBuildBatches",
    "codebuild:ListBuilds",
    "codebuild:ListConnectedOAuthAccounts",
    "codebuild:ListCuratedEnvironmentImages",
    "codebuild:ListFleets",
    "codebuild:ListProjects",
    "codebuild:ListReportGroups",
    "codebuild:ListReports",
    "codebuild:ListRepositories",
    "codebuild:ListSharedProjects",
    "codebuild:ListSharedReportGroups",
    "codebuild:ListSourceCredentials",
    "codebuild:PersistOAuthToken",
    "codecatalyst:AcceptConnection",
    "codecatalyst:CreateIdentityCenterApplication",
    "codecatalyst:CreateSpace",
    "codecatalyst:GetPendingConnection",
    "codecatalyst:ListConnections",
    "codecatalyst:ListIdentityCenterApplications",
    "codecatalyst:ListIdentityCenterApplicationsForSpace",
    "codecatalyst:RejectConnection",
    "codecommit:CreateApprovalRuleTemplate",
    "codecommit:DeleteApprovalRuleTemplate",
    "codecommit:GetApprovalRuleTemplate",
    "codecommit:ListApprovalRuleTemplates",
    "codecommit:ListRepositories",
    "codecommit:ListRepositoriesForApprovalRuleTemplate",
    "codecommit:UpdateApprovalRuleTemplateContent",
    "codecommit:UpdateApprovalRuleTemplateDescription",
    "codecommit:UpdateApprovalRuleTemplateName",
    "codeconnections:CreateConnection",
    "codeconnections:CreateHost",
    "codeconnections:DeleteSyncConfiguration",
    "codeconnections:GetIndividualAccessToken",
    "codeconnections:GetInstallationUrl",
    "codeconnections:GetResourceSyncStatus",
    "codeconnections:GetSyncBlockerSummary",
    "codeconnections:GetSyncConfiguration",
    "codeconnections:ListHosts",
    "codeconnections:ListInstallationTargets",
    "codeconnections:ListRepositoryLinks",
    "codeconnections:ListRepositorySyncDefinitions",
    "codeconnections:ListSyncConfigurations",
    "codeconnections:RegisterAppCode",
    "codeconnections:StartAppRegistrationHandshake",
    "codeconnections:StartOAuthHandshake",
    "codeconnections:UpdateSyncBlocker",
    "codeconnections:UpdateSyncConfiguration",
    "codedeploy:BatchGetDeploymentTargets",
    "codedeploy:ContinueDeployment",
    "codedeploy:CreateCloudFormationDeployment",
    "codedeploy:DeleteGitHubAccountToken",
    "codedeploy:DeleteResourcesByExternalId",
    "codedeploy:GetDeploymentTarget",
    "codedeploy:ListApplications",
    "codedeploy:ListDeploymentConfigs",
    "codedeploy:ListDeploymentTargets",
    "codedeploy:ListGitHubAccountTokenNames",
    "codedeploy:ListOnPremisesInstances",
    "codedeploy:PutLifecycleEventHookExecutionStatus",
    "codedeploy:SkipWaitTimeForInstanceTermination",
    "codedeploy:StopDeployment",
    "codedeploy-commands-secure:GetDeploymentSpecification",
    "codedeploy-commands-secure:PollHostCommand",
    "codedeploy-commands-secure:PutHostCommandAcknowledgement",
    "codedeploy-commands-secure:PutHostCommandComplete",
    "codeguru:GetCodeGuruFreeTrialSummary",
    "codeguru-profiler:CreateProfilingGroup",
    "codeguru-profiler:GetFindingsReportAccountSummary",
    "codeguru-profiler:ListProfilingGroups",
    "codeguru-reviewer:AssociateRepository",
    "codeguru-reviewer:CreateConnectionToken",
    "codeguru-reviewer:GetMetricsData",
    "codeguru-reviewer:ListCodeReviews",
    "codeguru-reviewer:ListRepositoryAssociations",
    "codeguru-reviewer:ListThirdPartyRepositories",
    "codeguru-security:DeleteScansByCategory",
    "codeguru-security:GetAccountConfiguration",
    "codeguru-security:GetMetricsSummary",
    "codeguru-security:ListFindings",
    "codeguru-security:ListFindingsMetrics",
    "codeguru-security:ListScans",
    "codeguru-security:UpdateAccountConfiguration",
    "codepipeline:AcknowledgeJob",
    "codepipeline:AcknowledgeThirdPartyJob",
    "codepipeline:GetActionType",
    "codepipeline:GetJobDetails",
    "codepipeline:GetThirdPartyJobDetails",
    "codepipeline:ListActionTypes",
    "codepipeline:ListPipelines",
    "codepipeline:ListRuleTypes",
    "codepipeline:PollForThirdPartyJobs",
    "codepipeline:PutJobFailureResult",
    "codepipeline:PutJobSuccessResult",
    "codepipeline:PutThirdPartyJobFailureResult",
    "codepipeline:PutThirdPartyJobSuccessResult",
    "codestar:CreateProject",
    "codestar:DescribeUserProfile",
    "codestar:ListProjects",
    "codestar:ListUserProfiles",
    "codestar:VerifyServiceRole",
    "codestar-connections:CreateConnection",
    "codestar-connections:CreateHost",
    "codestar-connections:DeleteSyncConfiguration",
    "codestar-connections:GetIndividualAccessToken",
    "codestar-connections:GetInstallationUrl",
    "codestar-connections:GetResourceSyncStatus",
    "codestar-connections:GetSyncBlockerSummary",
    "codestar-connections:GetSyncConfiguration",
    "codestar-connections:ListHosts",
    "codestar-connections:ListInstallationTargets",
    "codestar-connections:ListRepositoryLinks",
    "codestar-connections:ListRepositorySyncDefinitions",
    "codestar-connections:ListSyncConfigurations",
    "codestar-connections:RegisterAppCode",
    "codestar-connections:StartAppRegistrationHandshake",
    "codestar-connections:StartOAuthHandshake",
    "codestar-connections:UpdateSyncBlocker",
    "codestar-connections:UpdateSyncConfiguration",
    "codestar-notifications:DeleteTarget",
    "codestar-notifications:ListEventTypes",
    "codestar-notifications:ListNotificationRules",
    "codestar-notifications:ListTargets",
    "codewhisperer:GenerateRecommendations",
    "codewhisperer:ListProfiles",
    "cognito-identity:CreateIdentityPool",
    "cognito-identity:DeleteIdentities",
    "cognito-identity:DescribeIdentity",
    "cognito-identity:GetCredentialsForIdentity",
    "cognito-identity:GetId",
    "cognito-identity:GetOpenIdToken",
    "cognito-identity:ListIdentityPools",
    "cognito-identity:SetIdentityPoolRoles",
    "cognito-identity:SetPrincipalTagAttributeMap",
    "cognito-identity:UnlinkIdentity",
    "cognito-idp:AssociateSoftwareToken",
    "cognito-idp:ChangePassword",
    "cognito-idp:ConfirmDevice",
    "cognito-idp:ConfirmForgotPassword",
    "cognito-idp:ConfirmSignUp",
    "cognito-idp:CreateUserPool",
    "cognito-idp:DeleteUser",
    "cognito-idp:DeleteUserAttributes",
    "cognito-idp:DescribeUserPoolDomain",
    "cognito-idp:ForgetDevice",
    "cognito-idp:ForgotPassword",
    "cognito-idp:GetDevice",
    "cognito-idp:GetUser",
    "cognito-idp:GetUserAttributeVerificationCode",
    "cognito-idp:GlobalSignOut",
    "cognito-idp:InitiateAuth",
    "cognito-idp:ListDevices",
    "cognito-idp:ListUserPools",
    "cognito-idp:ResendConfirmationCode",
    "cognito-idp:RespondToAuthChallenge",
    "cognito-idp:RevokeToken",
    "cognito-idp:SetUserMFAPreference",
    "cognito-idp:SetUserSettings",
    "cognito-idp:SignUp",
    "cognito-idp:UpdateDeviceStatus",
    "cognito-idp:UpdateUserAttributes",
    "cognito-idp:VerifySoftwareToken",
    "cognito-idp:VerifyUserAttribute",
    "cognito-sync:QueryRecords",
    "comprehend:BatchDetectDominantLanguage",
    "comprehend:BatchDetectEntities",
    "comprehend:BatchDetectKeyPhrases",
    "comprehend:BatchDetectSentiment",
    "comprehend:BatchDetectSyntax",
    "comprehend:BatchDetectTargetedSentiment",
    "comprehend:ContainsPiiEntities",
    "comprehend:DetectDominantLanguage",
    "comprehend:DetectKeyPhrases",
    "comprehend:DetectPiiEntities",
    "comprehend:DetectSentiment",
    "comprehend:DetectSyntax",
    "comprehend:DetectTargetedSentiment",
    "comprehend:DetectToxicContent",
    "comprehend:ListDocumentClassificationJobs",
    "comprehend:ListDocumentClassifierSummaries",
    "comprehend:ListDocumentClassifiers",
    "comprehend:ListDominantLanguageDetectionJobs",
    "comprehend:ListEndpoints",
    "comprehend:ListEntitiesDetectionJobs",
    "comprehend:ListEntityRecognizerSummaries",
    "comprehend:ListEntityRecognizers",
    "comprehend:ListEventsDetectionJobs",
    "comprehend:ListFlywheels",
    "comprehend:ListKeyPhrasesDetectionJobs",
    "comprehend:ListPiiEntitiesDetectionJobs",
    "comprehend:ListSentimentDetectionJobs",
    "comprehend:ListTargetedSentimentDetectionJobs",
    "comprehend:ListTopicsDetectionJobs",
    "comprehendmedical:DescribeEntitiesDetectionV2Job",
    "comprehendmedical:DescribeICD10CMInferenceJob",
    "comprehendmedical:DescribePHIDetectionJob",
    "comprehendmedical:DescribeRxNormInferenceJob",
    "comprehendmedical:DescribeSNOMEDCTInferenceJob",
    "comprehendmedical:DetectEntitiesV2",
    "comprehendmedical:DetectPHI",
    "comprehendmedical:InferICD10CM",
    "comprehendmedical:InferRxNorm",
    "comprehendmedical:InferSNOMEDCT",
    "comprehendmedical:ListEntitiesDetectionV2Jobs",
    "comprehendmedical:ListICD10CMInferenceJobs",
    "comprehendmedical:ListPHIDetectionJobs",
    "comprehendmedical:ListRxNormInferenceJobs",
    "comprehendmedical:ListSNOMEDCTInferenceJobs",
    "comprehendmedical:StartEntitiesDetectionV2Job",
    "comprehendmedical:StartICD10CMInferenceJob",
    "comprehendmedical:StartPHIDetectionJob",
    "comprehendmedical:StartRxNormInferenceJob",
    "comprehendmedical:StartSNOMEDCTInferenceJob",
    "comprehendmedical:StopEntitiesDetectionV2Job",
    "comprehendmedical:StopICD10CMInferenceJob",
    "comprehendmedical:StopPHIDetectionJob",
    "comprehendmedical:StopRxNormInferenceJob",
    "comprehendmedical:StopSNOMEDCTInferenceJob",
    "compute-optimizer:DeleteRecommendationPreferences",
    "compute-optimizer:DescribeRecommendationExportJobs",
    "compute-optimizer:ExportAutoScalingGroupRecommendations",
    "compute-optimizer:ExportEBSVolumeRecommendations",
    "compute-optimizer:ExportEC2InstanceRecommendations",
    "compute-optimizer:ExportECSServiceRecommendations",
    "compute-optimizer:ExportIdleRecommendations",
    "compute-optimizer:ExportLambdaFunctionRecommendations",
    "compute-optimizer:ExportLicenseRecommendations",
    "compute-optimizer:ExportRDSDatabaseRecommendations",
    "compute-optimizer:GetAutoScalingGroupRecommendations",
    "compute-optimizer:GetEBSVolumeRecommendations",
    "compute-optimizer:GetEC2InstanceRecommendations",
    "compute-optimizer:GetEC2RecommendationProjectedMetrics",
    "compute-optimizer:GetECSServiceRecommendationProjectedMetrics",
    "compute-optimizer:GetECSServiceRecommendations",
    "compute-optimizer:GetEffectiveRecommendationPreferences",
    "compute-optimizer:GetEnrollmentStatus",
    "compute-optimizer:GetEnrollmentStatusesForOrganization",
    "compute-optimizer:GetIdleRecommendations",
    "compute-optimizer:GetLambdaFunctionRecommendations",
    "compute-optimizer:GetLicenseRecommendations",
    "compute-optimizer:GetRDSDatabaseRecommendationProjectedMetrics",
    "compute-optimizer:GetRDSDatabaseRecommendations",
    "compute-optimizer:GetRecommendationPreferences",
    "compute-optimizer:GetRecommendationSummaries",
    "compute-optimizer:PutRecommendationPreferences",
    "compute-optimizer:UpdateEnrollmentStatus",
    "config:BatchGetResourceConfig",
    "config:DeleteDeliveryChannel",
    "config:DeletePendingAggregationRequest",
    "config:DeleteRemediationExceptions",
    "config:DeleteResourceConfig",
    "config:DeleteRetentionConfiguration",
    "config:DeliverConfigSnapshot",
    "config:DescribeAggregationAuthorizations",
    "config:DescribeComplianceByConfigRule",
    "config:DescribeComplianceByResource",
    "config:DescribeConfigRuleEvaluationStatus",
    "config:DescribeConfigRules",
    "config:DescribeConfigurationAggregators",
    "config:DescribeConformancePackStatus",
    "config:DescribeConformancePacks",
    "config:DescribeDeliveryChannelStatus",
    "config:DescribeDeliveryChannels",
    "config:DescribeOrganizationConfigRuleStatuses",
    "config:DescribeOrganizationConfigRules",
    "config:DescribeOrganizationConformancePackStatuses",
    "config:DescribeOrganizationConformancePacks",
    "config:DescribePendingAggregationRequests",
    "config:DescribeRemediationExceptions",
    "config:DescribeRetentionConfigurations",
    "config:GetComplianceDetailsByResource",
    "config:GetComplianceSummaryByConfigRule",
    "config:GetComplianceSummaryByResourceType",
    "config:GetDiscoveredResourceCounts",
    "config:GetResourceConfigHistory",
    "config:GetResourceEvaluationSummary",
    "config:ListConfigurationRecorders",
    "config:ListConformancePackComplianceScores",
    "config:ListDiscoveredResources",
    "config:ListResourceEvaluations",
    "config:ListStoredQueries",
    "config:PutConfigurationRecorder",
    "config:PutDeliveryChannel",
    "config:PutEvaluations",
    "config:PutRemediationExceptions",
    "config:PutResourceConfig",
    "config:PutRetentionConfiguration",
    "config:PutServiceLinkedConfigurationRecorder",
    "config:SelectResourceConfig",
    "config:StartRemediationExecution",
    "config:StartResourceEvaluation",
    "connect:CreateInstance",
    "connect:ListInstances",
    "connect:SendChatIntegrationEvent",
    "connect:SendIntegrationEvent",
    "connect-campaigns:DeleteConnectInstanceConfig",
    "connect-campaigns:DeleteConnectInstanceIntegration",
    "connect-campaigns:DeleteInstanceOnboardingJob",
    "connect-campaigns:GetConnectInstanceConfig",
    "connect-campaigns:GetInstanceOnboardingJobStatus",
    "connect-campaigns:ListCampaigns",
    "connect-campaigns:ListConnectInstanceIntegrations",
    "connect-campaigns:PutConnectInstanceIntegration",
    "connect-campaigns:StartInstanceOnboardingJob",
    "consoleapp:ListDeviceIdentities",
    "consolidatedbilling:GetAccountBillingRole",
    "consolidatedbilling:ListLinkedAccounts",
    "controlcatalog:ListCommonControls",
    "controlcatalog:ListDomains",
    "controlcatalog:ListObjectives",
    "controltower:CreateLandingZone",
    "controltower:CreateManagedAccount",
    "controltower:DeregisterManagedAccount",
    "controltower:DeregisterOrganizationalUnit",
    "controltower:DescribeAccountFactoryConfig",
    "controltower:DescribeCoreService",
    "controltower:DescribeGuardrail",
    "controltower:DescribeGuardrailForTarget",
    "controltower:DescribeLandingZoneConfiguration",
    "controltower:DescribeManagedAccount",
    "controltower:DescribeManagedOrganizationalUnit",
    "controltower:DescribeRegisterOrganizationalUnitOperation",
    "controltower:DescribeSingleSignOn",
    "controltower:DisableGuardrail",
    "controltower:EnableBaseline",
    "controltower:EnableGuardrail",
    "controltower:GetAccountInfo",
    "controltower:GetAvailableUpdates",
    "controltower:GetBaselineOperation",
    "controltower:GetControlOperation",
    "controltower:GetGuardrailComplianceStatus",
    "controltower:GetHomeRegion",
    "controltower:GetLandingZoneDriftStatus",
    "controltower:GetLandingZoneOperation",
    "controltower:GetLandingZoneStatus",
    "controltower:ListBaselines",
    "controltower:ListControlOperations",
    "controltower:ListDirectoryGroups",
    "controltower:ListDriftDetails",
    "controltower:ListEnabledBaselines",
    "controltower:ListEnabledControls",
    "controltower:ListEnabledGuardrails",
    "controltower:ListExtendGovernancePrecheckDetails",
    "controltower:ListExternalConfigRuleCompliance",
    "controltower:ListGuardrailViolations",
    "controltower:ListGuardrails",
    "controltower:ListGuardrailsForTarget",
    "controltower:ListLandingZoneOperations",
    "controltower:ListLandingZones",
    "controltower:ListManagedAccounts",
    "controltower:ListManagedAccountsForGuardrail",
    "controltower:ListManagedAccountsForParent",
    "controltower:ListManagedOrganizationalUnits",
    "controltower:ListManagedOrganizationalUnitsForGuardrail",
    "controltower:ManageOrganizationalUnit",
    "controltower:PerformPreLaunchChecks",
    "controltower:SetupLandingZone",
    "controltower:UpdateAccountFactoryConfig",
    "cost-optimization-hub:GetPreferences",
    "cost-optimization-hub:GetRecommendation",
    "cost-optimization-hub:ListEnrollmentStatuses",
    "cost-optimization-hub:ListRecommendationSummaries",
    "cost-optimization-hub:ListRecommendations",
    "cost-optimization-hub:UpdateEnrollmentStatus",
    "cost-optimization-hub:UpdatePreferences",
    "cur:DescribeReportDefinitions",
    "cur:GetClassicReport",
    "cur:GetClassicReportPreferences",
    "cur:GetUsageReport",
    "cur:PutClassicReportPreferences",
    "cur:ValidateReportDestination",
    "customer-verification:CreateCustomerVerificationDetails",
    "customer-verification:CreateUploadUrls",
    "customer-verification:GetCustomerVerificationDetails",
    "customer-verification:GetCustomerVerificationEligibility",
    "customer-verification:UpdateCustomerVerificationDetails",
    "databrew:CreateDataset",
    "databrew:CreateProfileJob",
    "databrew:CreateProject",
    "databrew:CreateRecipe",
    "databrew:CreateRecipeJob",
    "databrew:CreateRuleset",
    "databrew:CreateSchedule",
    "databrew:ListDatasets",
    "databrew:ListJobs",
    "databrew:ListProjects",
    "databrew:ListRecipes",
    "databrew:ListRulesets",
    "databrew:ListSchedules",
    "dataexchange:CreateDataGrant",
    "dataexchange:CreateDataSet",
    "dataexchange:CreateEventAction",
    "dataexchange:CreateJob",
    "dataexchange:ListDataGrants",
    "dataexchange:ListDataSets",
    "dataexchange:ListEventActions",
    "dataexchange:ListJobs",
    "dataexchange:ListReceivedDataGrants",
    "datapipeline:CreatePipeline",
    "datapipeline:GetAccountLimits",
    "datapipeline:ListPipelines",
    "datapipeline:PollForTask",
    "datapipeline:PutAccountLimits",
    "datapipeline:ReportTaskRunnerHeartbeat",
    "datasync:CreateAgent",
    "datasync:CreateLocationAzureBlob",
    "datasync:CreateLocationEfs",
    "datasync:CreateLocationFsxLustre",
    "datasync:CreateLocationFsxOntap",
    "datasync:CreateLocationFsxOpenZfs",
    "datasync:CreateLocationFsxWindows",
    "datasync:CreateLocationHdfs",
    "datasync:CreateLocationNfs",
    "datasync:CreateLocationObjectStorage",
    "datasync:CreateLocationS3",
    "datasync:CreateLocationSmb",
    "datasync:ListAgents",
    "datasync:ListDiscoveryJobs",
    "datasync:ListLocations",
    "datasync:ListStorageSystems",
    "datasync:ListTaskExecutions",
    "datasync:ListTasks",
    "datazone:AcceptPredictions",
    "datazone:AcceptSubscriptionRequest",
    "datazone:AddEntityOwner",
    "datazone:AddPolicyGrant",
    "datazone:AssociateEnvironmentRole",
    "datazone:CancelMetadataGenerationRun",
    "datazone:CancelSubscription",
    "datazone:CreateAsset",
    "datazone:CreateAssetFilter",
    "datazone:CreateAssetRevision",
    "datazone:CreateAssetType",
    "datazone:CreateConnection",
    "datazone:CreateDataProduct",
    "datazone:CreateDataProductRevision",
    "datazone:CreateDataSource",
    "datazone:CreateDomain",
    "datazone:CreateDomainUnit",
    "datazone:CreateEnvironment",
    "datazone:CreateEnvironmentAction",
    "datazone:CreateEnvironmentBlueprint",
    "datazone:CreateEnvironmentProfile",
    "datazone:CreateFormType",
    "datazone:CreateGlossary",
    "datazone:CreateGlossaryTerm",
    "datazone:CreateGroupProfile",
    "datazone:CreateListingChangeSet",
    "datazone:CreateProject",
    "datazone:CreateProjectMembership",
    "datazone:CreateProjectProfile",
    "datazone:CreateRule",
    "datazone:CreateSubscriptionGrant",
    "datazone:CreateSubscriptionRequest",
    "datazone:CreateSubscriptionTarget",
    "datazone:CreateUserProfile",
    "datazone:DeleteAsset",
    "datazone:DeleteAssetFilter",
    "datazone:DeleteAssetType",
    "datazone:DeleteConnection",
    "datazone:DeleteDataProduct",
    "datazone:DeleteDataSource",
    "datazone:DeleteDomainSharingPolicy",
    "datazone:DeleteDomainUnit",
    "datazone:DeleteEnvironment",
    "datazone:DeleteEnvironmentAction",
    "datazone:DeleteEnvironmentBlueprint",
    "datazone:DeleteEnvironmentBlueprintConfiguration",
    "datazone:DeleteEnvironmentProfile",
    "datazone:DeleteFormType",
    "datazone:DeleteGlossary",
    "datazone:DeleteGlossaryTerm",
    "datazone:DeleteListing",
    "datazone:DeleteProject",
    "datazone:DeleteProjectMembership",
    "datazone:DeleteProjectProfile",
    "datazone:DeleteRule",
    "datazone:DeleteSubscriptionGrant",
    "datazone:DeleteSubscriptionRequest",
    "datazone:DeleteSubscriptionTarget",
    "datazone:DeleteTimeSeriesDataPoints",
    "datazone:DisassociateEnvironmentRole",
    "datazone:GetAsset",
    "datazone:GetAssetFilter",
    "datazone:GetAssetType",
    "datazone:GetConnection",
    "datazone:GetDataProduct",
    "datazone:GetDataSource",
    "datazone:GetDataSourceRun",
    "datazone:GetDomainExecutionRoleCredentials",
    "datazone:GetDomainSharingPolicy",
    "datazone:GetDomainUnit",
    "datazone:GetEnvironment",
    "datazone:GetEnvironmentAction",
    "datazone:GetEnvironmentActionLink",
    "datazone:GetEnvironmentBlueprint",
    "datazone:GetEnvironmentBlueprintConfiguration",
    "datazone:GetEnvironmentCredentials",
    "datazone:GetEnvironmentProfile",
    "datazone:GetFormType",
    "datazone:GetGlossary",
    "datazone:GetGlossaryTerm",
    "datazone:GetGroupProfile",
    "datazone:GetIamPortalLoginUrl",
    "datazone:GetJobRun",
    "datazone:GetLineageEvent",
    "datazone:GetLineageNode",
    "datazone:GetListing",
    "datazone:GetMetadataGenerationRun",
    "datazone:GetProject",
    "datazone:GetProjectProfile",
    "datazone:GetRule",
    "datazone:GetSubscription",
    "datazone:GetSubscriptionEligibility",
    "datazone:GetSubscriptionGrant",
    "datazone:GetSubscriptionRequestDetails",
    "datazone:GetSubscriptionTarget",
    "datazone:GetTimeSeriesDataPoint",
    "datazone:GetUserProfile",
    "datazone:ListAccountEnvironments",
    "datazone:ListAssetFilters",
    "datazone:ListAssetRevisions",
    "datazone:ListConnections",
    "datazone:ListDataProductRevisions",
    "datazone:ListDataSourceRunActivities",
    "datazone:ListDataSourceRuns",
    "datazone:ListDataSources",
    "datazone:ListDomainUnitsForParent",
    "datazone:ListDomains",
    "datazone:ListEntityOwners",
    "datazone:ListEnvironmentActions",
    "datazone:ListEnvironmentBlueprintConfigurationSummaries",
    "datazone:ListEnvironmentBlueprintConfigurations",
    "datazone:ListEnvironmentBlueprints",
    "datazone:ListEnvironmentProfiles",
    "datazone:ListEnvironments",
    "datazone:ListGroupsForUser",
    "datazone:ListJobRuns",
    "datazone:ListLineageEvents",
    "datazone:ListLineageNodeHistory",
    "datazone:ListMetadataGenerationRuns",
    "datazone:ListNotifications",
    "datazone:ListPolicyGrants",
    "datazone:ListProjectMemberships",
    "datazone:ListProjectProfiles",
    "datazone:ListProjects",
    "datazone:ListRules",
    "datazone:ListSubscriptionGrants",
    "datazone:ListSubscriptionRequests",
    "datazone:ListSubscriptionTargets",
    "datazone:ListSubscriptions",
    "datazone:ListTimeSeriesDataPoints",
    "datazone:ListWarehouseMetadata",
    "datazone:PostLineageEvent",
    "datazone:PostTimeSeriesDataPoints",
    "datazone:ProvisionDomain",
    "datazone:PutDomainSharingPolicy",
    "datazone:PutEnvironmentBlueprintConfiguration",
    "datazone:RefreshToken",
    "datazone:RejectPredictions",
    "datazone:RejectSubscriptionRequest",
    "datazone:RemoveEntityOwner",
    "datazone:RemovePolicyGrant",
    "datazone:RevokeSubscription",
    "datazone:Search",
    "datazone:SearchGroupProfiles",
    "datazone:SearchListings",
    "datazone:SearchRules",
    "datazone:SearchTypes",
    "datazone:SearchUserProfiles",
    "datazone:SsoLogin",
    "datazone:SsoLogout",
    "datazone:StartDataSourceRun",
    "datazone:StartMetadataGenerationRun",
    "datazone:StopMetadataGenerationRun",
    "datazone:UpdateAssetFilter",
    "datazone:UpdateConnection",
    "datazone:UpdateDataSource",
    "datazone:UpdateDataSourceRunActivities",
    "datazone:UpdateDomainUnit",
    "datazone:UpdateEnvironment",
    "datazone:UpdateEnvironmentAction",
    "datazone:UpdateEnvironmentBlueprint",
    "datazone:UpdateEnvironmentConfiguration",
    "datazone:UpdateEnvironmentDeploymentStatus",
    "datazone:UpdateEnvironmentProfile",
    "datazone:UpdateGlossary",
    "datazone:UpdateGlossaryTerm",
    "datazone:UpdateGroupProfile",
    "datazone:UpdateProject",
    "datazone:UpdateProjectProfile",
    "datazone:UpdateRule",
    "datazone:UpdateSubscriptionGrantStatus",
    "datazone:UpdateSubscriptionRequest",
    "datazone:UpdateSubscriptionTarget",
    "datazone:UpdateUserProfile",
    "datazone:ValidatePassRole",
    "dax:CreateParameterGroup",
    "dax:CreateSubnetGroup",
    "dax:DeleteParameterGroup",
    "dax:DeleteSubnetGroup",
    "dax:DescribeDefaultParameters",
    "dax:DescribeEvents",
    "dax:DescribeParameterGroups",
    "dax:DescribeParameters",
    "dax:DescribeSubnetGroups",
    "dax:UpdateParameterGroup",
    "dax:UpdateSubnetGroup",
    "dbqms:CreateFavoriteQuery",
    "dbqms:CreateQueryHistory",
    "dbqms:CreateTab",
    "dbqms:DeleteFavoriteQueries",
    "dbqms:DeleteQueryHistory",
    "dbqms:DeleteTab",
    "dbqms:DescribeFavoriteQueries",
    "dbqms:DescribeQueryHistory",
    "dbqms:DescribeTabs",
    "dbqms:GetQueryString",
    "dbqms:UpdateFavoriteQuery",
    "dbqms:UpdateQueryHistory",
    "dbqms:UpdateTab",
    "deadline:ListAvailableMeteredProducts",
    "deepcomposer:AssociateCoupon",
    "deeplens:AssociateServiceRoleToAccount",
    "deeplens:CreateDeviceCertificates",
    "deeplens:CreateModel",
    "deeplens:CreateProject",
    "deeplens:GetAssociatedResources",
    "deeplens:GetDeploymentStatus",
    "deeplens:ImportProjectFromTemplate",
    "deeplens:ListDeployments",
    "deeplens:ListDevices",
    "deeplens:ListModels",
    "deeplens:ListProjects",
    "deeplens:RegisterDevice",
    "deepracer:AdminDescribeAccountKey",
    "deepracer:AdminGetAccountConfig",
    "deepracer:AdminListAssociatedResources",
    "deepracer:AdminListAssociatedUsers",
    "deepracer:AdminManageUser",
    "deepracer:AdminSetAccountConfig",
    "deepracer:AdminUpdateAccountKey",
    "deepracer:CreateCar",
    "deepracer:CreateLeaderboard",
    "deepracer:GetAccountConfig",
    "deepracer:GetAlias",
    "deepracer:GetCars",
    "deepracer:ImportModel",
    "deepracer:ListLeaderboards",
    "deepracer:ListModels",
    "deepracer:ListPrivateLeaderboards",
    "deepracer:ListSubscribedPrivateLeaderboards",
    "deepracer:ListTracks",
    "deepracer:MigrateModels",
    "deepracer:SetAlias",
    "deepracer:TestRewardFunction",
    "detective:BatchGetMembershipDatasources",
    "detective:CreateGraph",
    "detective:DisableOrganizationAdminAccount",
    "detective:EnableOrganizationAdminAccount",
    "detective:GetPricingInformation",
    "detective:ListGraphs",
    "detective:ListInvitations",
    "detective:ListOrganizationAdminAccount",
    "devicefarm:CreateInstanceProfile",
    "devicefarm:CreateProject",
    "devicefarm:CreateTestGridProject",
    "devicefarm:CreateVPCEConfiguration",
    "devicefarm:GetAccountSettings",
    "devicefarm:GetOfferingStatus",
    "devicefarm:ListDeviceInstances",
    "devicefarm:ListDevices",
    "devicefarm:ListInstanceProfiles",
    "devicefarm:ListOfferingPromotions",
    "devicefarm:ListOfferingTransactions",
    "devicefarm:ListOfferings",
    "devicefarm:ListProjects",
    "devicefarm:ListTestGridProjects",
    "devicefarm:ListVPCEConfigurations",
    "devicefarm:PurchaseOffering",
    "devicefarm:RenewOffering",
    "devops-guru:DeleteInsight",
    "devops-guru:DescribeAccountHealth",
    "devops-guru:DescribeAccountOverview",
    "devops-guru:DescribeAnomaly",
    "devops-guru:DescribeEventSourcesConfig",
    "devops-guru:DescribeFeedback",
    "devops-guru:DescribeInsight",
    "devops-guru:DescribeOrganizationHealth",
    "devops-guru:DescribeOrganizationOverview",
    "devops-guru:DescribeOrganizationResourceCollectionHealth",
    "devops-guru:DescribeResourceCollectionHealth",
    "devops-guru:DescribeServiceIntegration",
    "devops-guru:GetCostEstimation",
    "devops-guru:GetResourceCollection",
    "devops-guru:ListAnomaliesForInsight",
    "devops-guru:ListAnomalousLogGroups",
    "devops-guru:ListEvents",
    "devops-guru:ListInsights",
    "devops-guru:ListMonitoredResources",
    "devops-guru:ListNotificationChannels",
    "devops-guru:ListOrganizationInsights",
    "devops-guru:ListRecommendations",
    "devops-guru:PutFeedback",
    "devops-guru:SearchInsights",
    "devops-guru:SearchOrganizationInsights",
    "devops-guru:StartCostEstimation",
    "devops-guru:UpdateEventSourcesConfig",
    "devops-guru:UpdateResourceCollection",
    "devops-guru:UpdateServiceIntegration",
    "directconnect:ConfirmCustomerAgreement",
    "directconnect:CreateDirectConnectGateway",
    "directconnect:DeleteDirectConnectGatewayAssociationProposal",
    "directconnect:DescribeCustomerMetadata",
    "directconnect:DescribeLocations",
    "directconnect:DescribeVirtualGateways",
    "directconnect:UpdateDirectConnectGatewayAssociation",
    "discovery:AssociateConfigurationItemsToApplication",
    "discovery:BatchDeleteAgents",
    "discovery:BatchDeleteImportData",
    "discovery:CreateApplication",
    "discovery:CreateTags",
    "discovery:DeleteApplications",
    "discovery:DeleteTags",
    "discovery:DescribeAgents",
    "discovery:DescribeBatchDeleteConfigurationTask",
    "discovery:DescribeConfigurations",
    "discovery:DescribeContinuousExports",
    "discovery:DescribeExportConfigurations",
    "discovery:DescribeExportTasks",
    "discovery:DescribeImportTasks",
    "discovery:DescribeTags",
    "discovery:DisassociateConfigurationItemsFromApplication",
    "discovery:ExportConfigurations",
    "discovery:GetDiscoverySummary",
    "discovery:GetNetworkConnectionGraph",
    "discovery:ListConfigurations",
    "discovery:ListServerNeighbors",
    "discovery:StartBatchDeleteConfigurationTask",
    "discovery:StartContinuousExport",
    "discovery:StartDataCollectionByAgentIds",
    "discovery:StartExportTask",
    "discovery:StartImportTask",
    "discovery:StopContinuousExport",
    "discovery:StopDataCollectionByAgentIds",
    "discovery:UpdateApplication",
    "dlm:CreateLifecyclePolicy",
    "dlm:GetLifecyclePolicies",
    "dms:BatchStartRecommendations",
    "dms:CreateDataProvider",
    "dms:CreateEndpoint",
    "dms:CreateEventSubscription",
    "dms:CreateFleetAdvisorCollector",
    "dms:CreateInstanceProfile",
    "dms:CreateReplicationInstance",
    "dms:CreateReplicationSubnetGroup",
    "dms:DeleteFleetAdvisorCollector",
    "dms:DeleteFleetAdvisorDatabases",
    "dms:DescribeAccountAttributes",
    "dms:DescribeCertificates",
    "dms:DescribeConnections",
    "dms:DescribeDataMigrations",
    "dms:DescribeEndpointSettings",
    "dms:DescribeEndpointTypes",
    "dms:DescribeEndpoints",
    "dms:DescribeEngineVersions",
    "dms:DescribeEventCategories",
    "dms:DescribeEventSubscriptions",
    "dms:DescribeEvents",
    "dms:DescribeFleetAdvisorCollectors",
    "dms:DescribeFleetAdvisorDatabases",
    "dms:DescribeFleetAdvisorLsaAnalysis",
    "dms:DescribeFleetAdvisorSchemaObjectSummary",
    "dms:DescribeFleetAdvisorSchemas",
    "dms:DescribeOrderableReplicationInstances",
    "dms:DescribePendingMaintenanceActions",
    "dms:DescribeRecommendationLimitations",
    "dms:DescribeRecommendations",
    "dms:DescribeReplicationConfigs",
    "dms:DescribeReplicationInstances",
    "dms:DescribeReplicationSubnetGroups",
    "dms:DescribeReplicationTasks",
    "dms:DescribeReplications",
    "dms:ImportCertificate",
    "dms:ModifyEventSubscription",
    "dms:ModifyFleetAdvisorCollector",
    "dms:ModifyFleetAdvisorCollectorStatuses",
    "dms:ModifyReplicationSubnetGroup",
    "dms:RunFleetAdvisorLsaAnalysis",
    "dms:StartRecommendations",
    "dms:UpdateSubscriptionsToEventBridge",
    "dms:UploadFileMetadataList",
    "docdb-elastic:CreateCluster",
    "docdb-elastic:ListClusterSnapshots",
    "docdb-elastic:ListClusters",
    "docdb-elastic:ListPendingMaintenanceActions",
    "drs:BatchDeleteSnapshotRequestForDrs",
    "drs:CreateExtendedSourceServer",
    "drs:CreateLaunchConfigurationTemplate",
    "drs:CreateReplicationConfigurationTemplate",
    "drs:CreateSourceNetwork",
    "drs:CreateSourceServerForDrs",
    "drs:DescribeJobs",
    "drs:DescribeLaunchConfigurationTemplates",
    "drs:DescribeRecoveryInstances",
    "drs:DescribeReplicationConfigurationTemplates",
    "drs:DescribeReplicationServerAssociationsForDrs",
    "drs:DescribeSnapshotRequestsForDrs",
    "drs:DescribeSourceNetworks",
    "drs:DescribeSourceServers",
    "drs:GetAgentInstallationAssetsForDrs",
    "drs:GetChannelCommandsForDrs",
    "drs:InitializeService",
    "drs:ListExtensibleSourceServers",
    "drs:ListStagingAccounts",
    "drs:ListTagsForResource",
    "drs:SendChannelCommandResultForDrs",
    "drs:SendClientLogsForDrs",
    "drs:SendClientMetricsForDrs",
    "ds:CheckAlias",
    "ds:ConnectDirectory",
    "ds:CreateDirectory",
    "ds:CreateIdentityPoolDirectory",
    "ds:CreateMicrosoftAD",
    "ds:DescribeDirectories",
    "ds:DescribeSnapshots",
    "ds:DescribeTrusts",
    "ds:GetDirectoryLimits",
    "ds:ListLogSubscriptions",
    "dsql:ListClusters",
    "dynamodb:DescribeEndpoints",
    "dynamodb:DescribeLimits",
    "dynamodb:DescribeReservedCapacity",
    "dynamodb:DescribeReservedCapacityOfferings",
    "dynamodb:GetAbacStatus",
    "dynamodb:ListBackups",
    "dynamodb:ListContributorInsights",
    "dynamodb:ListExports",
    "dynamodb:ListGlobalTables",
    "dynamodb:ListImports",
    "dynamodb:ListStreams",
    "dynamodb:ListTables",
    "dynamodb:PurchaseReservedCapacityOfferings",
    "dynamodb:UpdateAbacStatus",
    "ec2:AcceptReservedInstancesExchangeQuote",
    "ec2:AdvertiseByoipCidr",
    "ec2:AssociateIpamByoasn",
    "ec2:AssociateTrunkInterface",
    "ec2:BundleInstance",
    "ec2:CancelBundleTask",
    "ec2:CancelConversionTask",
    "ec2:CancelReservedInstancesListing",
    "ec2:ConfirmProductInstance",
    "ec2:CreateDefaultSubnet",
    "ec2:CreateDefaultVpc",
    "ec2:CreateReservedInstancesListing",
    "ec2:CreateSpotDatafeedSubscription",
    "ec2:CreateSubnetCidrReservation",
    "ec2:DeleteQueuedReservedInstances",
    "ec2:DeleteSpotDatafeedSubscription",
    "ec2:DeleteSubnetCidrReservation",
    "ec2:DeprovisionByoipCidr",
    "ec2:DeregisterInstanceEventNotificationAttributes",
    "ec2:DescribeAccountAttributes",
    "ec2:DescribeAddressTransfers",
    "ec2:DescribeAddresses",
    "ec2:DescribeAddressesAttribute",
    "ec2:DescribeAggregateIdFormat",
    "ec2:DescribeAvailabilityZones",
    "ec2:DescribeAwsNetworkPerformanceMetricSubscriptions",
    "ec2:DescribeBundleTasks",
    "ec2:DescribeByoipCidrs",
    "ec2:DescribeCapacityBlockOfferings",
    "ec2:DescribeCapacityReservationBillingRequests",
    "ec2:DescribeCapacityReservationFleets",
    "ec2:DescribeCapacityReservations",
    "ec2:DescribeCarrierGateways",
    "ec2:DescribeClassicLinkInstances",
    "ec2:DescribeCoipPools",
    "ec2:DescribeConversionTasks",
    "ec2:DescribeCustomerGateways",
    "ec2:DescribeDeclarativePoliciesReports",
    "ec2:DescribeDhcpOptions",
    "ec2:DescribeEgressOnlyInternetGateways",
    "ec2:DescribeElasticGpus",
    "ec2:DescribeExportImageTasks",
    "ec2:DescribeExportTasks",
    "ec2:DescribeFastLaunchImages",
    "ec2:DescribeFastSnapshotRestores",
    "ec2:DescribeFleets",
    "ec2:DescribeFlowLogs",
    "ec2:DescribeFpgaImages",
    "ec2:DescribeHostReservationOfferings",
    "ec2:DescribeHostReservations",
    "ec2:DescribeHosts",
    "ec2:DescribeIamInstanceProfileAssociations",
    "ec2:DescribeIdFormat",
    "ec2:DescribeIdentityIdFormat",
    "ec2:DescribeImages",
    "ec2:DescribeImportImageTasks",
    "ec2:DescribeImportSnapshotTasks",
    "ec2:DescribeInstanceConnectEndpoints",
    "ec2:DescribeInstanceCreditSpecifications",
    "ec2:DescribeInstanceEventNotificationAttributes",
    "ec2:DescribeInstanceEventWindows",
    "ec2:DescribeInstanceImageMetadata",
    "ec2:DescribeInstanceStatus",
    "ec2:DescribeInstanceTopology",
    "ec2:DescribeInstanceTypeOfferings",
    "ec2:DescribeInstanceTypes",
    "ec2:DescribeInstances",
    "ec2:DescribeInternetGateways",
    "ec2:DescribeIpamByoasn",
    "ec2:DescribeIpamExternalResourceVerificationTokens",
    "ec2:DescribeIpamPools",
    "ec2:DescribeIpamResourceDiscoveries",
    "ec2:DescribeIpamResourceDiscoveryAssociations",
    "ec2:DescribeIpamScopes",
    "ec2:DescribeIpams",
    "ec2:DescribeIpv6Pools",
    "ec2:DescribeKeyPairs",
    "ec2:DescribeLaunchTemplateVersions",
    "ec2:DescribeLaunchTemplates",
    "ec2:DescribeLocalGatewayRouteTablePermissions",
    "ec2:DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
    "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
    "ec2:DescribeLocalGatewayRouteTables",
    "ec2:DescribeLocalGatewayVirtualInterfaceGroups",
    "ec2:DescribeLocalGatewayVirtualInterfaces",
    "ec2:DescribeLocalGateways",
    "ec2:DescribeLockedSnapshots",
    "ec2:DescribeMacHosts",
    "ec2:DescribeManagedPrefixLists",
    "ec2:DescribeMovingAddresses",
    "ec2:DescribeNatGateways",
    "ec2:DescribeNetworkAcls",
    "ec2:DescribeNetworkInsightsAccessScopeAnalyses",
    "ec2:DescribeNetworkInsightsAccessScopes",
    "ec2:DescribeNetworkInsightsAnalyses",
    "ec2:DescribeNetworkInsightsPaths",
    "ec2:DescribeNetworkInterfaceAttribute",
    "ec2:DescribeNetworkInterfacePermissions",
    "ec2:DescribeNetworkInterfaces",
    "ec2:DescribePlacementGroups",
    "ec2:DescribePrefixLists",
    "ec2:DescribePrincipalIdFormat",
    "ec2:DescribePublicIpv4Pools",
    "ec2:DescribeRegions",
    "ec2:DescribeReplaceRootVolumeTasks",
    "ec2:DescribeReservedInstances",
    "ec2:DescribeReservedInstancesListings",
    "ec2:DescribeReservedInstancesModifications",
    "ec2:DescribeReservedInstancesOfferings",
    "ec2:DescribeRouteTables",
    "ec2:DescribeScheduledInstanceAvailability",
    "ec2:DescribeScheduledInstances",
    "ec2:DescribeSecurityGroupRules",
    "ec2:DescribeSecurityGroupVpcAssociations",
    "ec2:DescribeSecurityGroups",
    "ec2:DescribeSnapshotTierStatus",
    "ec2:DescribeSnapshots",
    "ec2:DescribeSpotDatafeedSubscription",
    "ec2:DescribeSpotFleetRequests",
    "ec2:DescribeSpotInstanceRequests",
    "ec2:DescribeSpotPriceHistory",
    "ec2:DescribeStaleSecurityGroups",
    "ec2:DescribeStoreImageTasks",
    "ec2:DescribeSubnets",
    "ec2:DescribeTags",
    "ec2:DescribeTrafficMirrorFilterRules",
    "ec2:DescribeTrafficMirrorFilters",
    "ec2:DescribeTrafficMirrorSessions",
    "ec2:DescribeTrafficMirrorTargets",
    "ec2:DescribeTransitGatewayAttachments",
    "ec2:DescribeTransitGatewayConnectPeers",
    "ec2:DescribeTransitGatewayConnects",
    "ec2:DescribeTransitGatewayMulticastDomains",
    "ec2:DescribeTransitGatewayPeeringAttachments",
    "ec2:DescribeTransitGatewayPolicyTables",
    "ec2:DescribeTransitGatewayRouteTableAnnouncements",
    "ec2:DescribeTransitGatewayRouteTables",
    "ec2:DescribeTransitGatewayVpcAttachments",
    "ec2:DescribeTransitGateways",
    "ec2:DescribeTrunkInterfaceAssociations",
    "ec2:DescribeVerifiedAccessEndpoints",
    "ec2:DescribeVerifiedAccessGroups",
    "ec2:DescribeVerifiedAccessInstanceLoggingConfigurations",
    "ec2:DescribeVerifiedAccessInstanceWebAclAssociations",
    "ec2:DescribeVerifiedAccessInstances",
    "ec2:DescribeVerifiedAccessTrustProviders",
    "ec2:DescribeVolumeStatus",
    "ec2:DescribeVolumes",
    "ec2:DescribeVolumesModifications",
    "ec2:DescribeVpcBlockPublicAccessExclusions",
    "ec2:DescribeVpcBlockPublicAccessOptions",
    "ec2:DescribeVpcClassicLink",
    "ec2:DescribeVpcClassicLinkDnsSupport",
    "ec2:DescribeVpcEndpointConnectionNotifications",
    "ec2:DescribeVpcEndpointConnections",
    "ec2:DescribeVpcEndpointServiceConfigurations",
    "ec2:DescribeVpcEndpointServices",
    "ec2:DescribeVpcEndpoints",
    "ec2:DescribeVpcPeeringConnections",
    "ec2:DescribeVpcs",
    "ec2:DescribeVpnConnections",
    "ec2:DescribeVpnGateways",
    "ec2:DisableAllowedImagesSettings",
    "ec2:DisableAwsNetworkPerformanceMetricSubscription",
    "ec2:DisableEbsEncryptionByDefault",
    "ec2:DisableImageBlockPublicAccess",
    "ec2:DisableIpamOrganizationAdminAccount",
    "ec2:DisableSerialConsoleAccess",
    "ec2:DisableSnapshotBlockPublicAccess",
    "ec2:DisassociateIpamByoasn",
    "ec2:DisassociateTrunkInterface",
    "ec2:EnableAllowedImagesSettings",
    "ec2:EnableAwsNetworkPerformanceMetricSubscription",
    "ec2:EnableEbsEncryptionByDefault",
    "ec2:EnableImageBlockPublicAccess",
    "ec2:EnableIpamOrganizationAdminAccount",
    "ec2:EnableReachabilityAnalyzerOrganizationSharing",
    "ec2:EnableSerialConsoleAccess",
    "ec2:EnableSnapshotBlockPublicAccess",
    "ec2:ExportTransitGatewayRoutes",
    "ec2:GetAllowedImagesSettings",
    "ec2:GetAssociatedIpv6PoolCidrs",
    "ec2:GetAwsNetworkPerformanceData",
    "ec2:GetDefaultCreditSpecification",
    "ec2:GetEbsDefaultKmsKeyId",
    "ec2:GetEbsEncryptionByDefault",
    "ec2:GetHostReservationPurchasePreview",
    "ec2:GetImageBlockPublicAccessState",
    "ec2:GetInstanceMetadataDefaults",
    "ec2:GetInstanceTypesFromInstanceRequirements",
    "ec2:GetReservedInstancesExchangeQuote",
    "ec2:GetSerialConsoleAccessStatus",
    "ec2:GetSnapshotBlockPublicAccessState",
    "ec2:GetSpotPlacementScores",
    "ec2:GetSubnetCidrReservations",
    "ec2:GetTransitGatewayAttachmentPropagations",
    "ec2:GetTransitGatewayPrefixListReferences",
    "ec2:GetTransitGatewayRouteTableAssociations",
    "ec2:GetTransitGatewayRouteTablePropagations",
    "ec2:GetVpnConnectionDeviceTypes",
    "ec2:InjectApiError",
    "ec2:ListImagesInRecycleBin",
    "ec2:ListSnapshotsInRecycleBin",
    "ec2:ModifyAvailabilityZoneGroup",
    "ec2:ModifyDefaultCreditSpecification",
    "ec2:ModifyEbsDefaultKmsKeyId",
    "ec2:ModifyIdFormat",
    "ec2:ModifyIdentityIdFormat",
    "ec2:ModifyInstanceMetadataDefaults",
    "ec2:ModifyVpcBlockPublicAccessOptions",
    "ec2:MoveAddressToVpc",
    "ec2:ProvisionByoipCidr",
    "ec2:PurchaseReservedInstancesOffering",
    "ec2:PurchaseScheduledInstances",
    "ec2:RegisterInstanceEventNotificationAttributes",
    "ec2:ReplaceImageCriteriaInAllowedImagesSettings",
    "ec2:ResetEbsDefaultKmsKeyId",
    "ec2:RestoreAddressToClassic",
    "ec2:RunScheduledInstances",
    "ec2:StartDeclarativePoliciesReport",
    "ec2:WithdrawByoipCidr",
    "ec2messages:AcknowledgeMessage",
    "ec2messages:DeleteMessage",
    "ec2messages:FailMessage",
    "ec2messages:GetEndpoint",
    "ec2messages:GetMessages",
    "ec2messages:SendReply",
    "ecr:BatchImportUpstreamImage",
    "ecr:CreatePullThroughCacheRule",
    "ecr:CreateRepositoryCreationTemplate",
    "ecr:DeletePullThroughCacheRule",
    "ecr:DeleteRegistryPolicy",
    "ecr:DeleteRepositoryCreationTemplate",
    "ecr:DescribePullThroughCacheRules",
    "ecr:DescribeRegistry",
    "ecr:DescribeRepositoryCreationTemplates",
    "ecr:GetAccountSetting",
    "ecr:GetAuthorizationToken",
    "ecr:GetImageCopyStatus",
    "ecr:GetRegistryPolicy",
    "ecr:GetRegistryScanningConfiguration",
    "ecr:PutAccountSetting",
    "ecr:PutRegistryPolicy",
    "ecr:PutRegistryScanningConfiguration",
    "ecr:PutReplicationConfiguration",
    "ecr:UpdatePullThroughCacheRule",
    "ecr:UpdateRepositoryCreationTemplate",
    "ecr:ValidatePullThroughCacheRule",
    "ecr-public:GetAuthorizationToken",
    "ecs:CreateCapacityProvider",
    "ecs:CreateTaskSet",
    "ecs:DeleteAccountSetting",
    "ecs:DeregisterTaskDefinition",
    "ecs:DescribeTaskDefinition",
    "ecs:DiscoverPollEndpoint",
    "ecs:ListAccountSettings",
    "ecs:ListClusters",
    "ecs:ListServices",
    "ecs:ListServicesByNamespace",
    "ecs:ListTaskDefinitionFamilies",
    "ecs:ListTaskDefinitions",
    "ecs:PutAccountSetting",
    "ecs:PutAccountSettingDefault",
    "eks:CreateCluster",
    "eks:CreateEksAnywhereSubscription",
    "eks:DescribeAddonConfiguration",
    "eks:DescribeAddonVersions",
    "eks:DescribeClusterVersions",
    "eks:ListAccessPolicies",
    "eks:ListClusters",
    "eks:ListEksAnywhereSubscriptions",
    "eks:RegisterCluster",
    "elasticache:DescribeCacheEngineVersions",
    "elasticache:DescribeEngineDefaultParameters",
    "elasticache:DescribeEvents",
    "elasticache:DescribeReservedCacheNodesOfferings",
    "elasticache:DescribeServiceUpdates",
    "elasticbeanstalk:CheckDNSAvailability",
    "elasticbeanstalk:CreateStorageLocation",
    "elasticbeanstalk:DescribeAccountAttributes",
    "elasticbeanstalk:ListPlatformBranches",
    "elasticfilesystem:CreateFileSystem",
    "elasticfilesystem:DescribeAccountPreferences",
    "elasticfilesystem:PutAccountPreferences",
    "elasticloadbalancing:DescribeAccountLimits",
    "elasticloadbalancing:DescribeCapacityReservation",
    "elasticloadbalancing:DescribeInstanceHealth",
    "elasticloadbalancing:DescribeListenerAttributes",
    "elasticloadbalancing:DescribeListenerCertificates",
    "elasticloadbalancing:DescribeListeners",
    "elasticloadbalancing:DescribeLoadBalancerAttributes",
    "elasticloadbalancing:DescribeLoadBalancerPolicies",
    "elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
    "elasticloadbalancing:DescribeLoadBalancers",
    "elasticloadbalancing:DescribeRules",
    "elasticloadbalancing:DescribeSSLPolicies",
    "elasticloadbalancing:DescribeTags",
    "elasticloadbalancing:DescribeTargetGroupAttributes",
    "elasticloadbalancing:DescribeTargetGroups",
    "elasticloadbalancing:DescribeTargetHealth",
    "elasticloadbalancing:DescribeTrustStoreAssociations",
    "elasticloadbalancing:DescribeTrustStoreRevocations",
    "elasticloadbalancing:DescribeTrustStores",
    "elasticloadbalancing:SetWebAcl",
    "elasticmapreduce:CreateRepository",
    "elasticmapreduce:CreateSecurityConfiguration",
    "elasticmapreduce:CreateStudio",
    "elasticmapreduce:DeleteRepository",
    "elasticmapreduce:DeleteSecurityConfiguration",
    "elasticmapreduce:DescribeReleaseLabel",
    "elasticmapreduce:DescribeRepository",
    "elasticmapreduce:DescribeSecurityConfiguration",
    "elasticmapreduce:GetBlockPublicAccessConfiguration",
    "elasticmapreduce:LinkRepository",
    "elasticmapreduce:ListClusters",
    "elasticmapreduce:ListEditors",
    "elasticmapreduce:ListNotebookExecutions",
    "elasticmapreduce:ListReleaseLabels",
    "elasticmapreduce:ListRepositories",
    "elasticmapreduce:ListSecurityConfigurations",
    "elasticmapreduce:ListStudioSessionMappings",
    "elasticmapreduce:ListStudios",
    "elasticmapreduce:ListSupportedInstanceTypes",
    "elasticmapreduce:PutBlockPublicAccessConfiguration",
    "elasticmapreduce:RunJobFlow",
    "elasticmapreduce:UnlinkRepository",
    "elasticmapreduce:UpdateRepository",
    "elasticmapreduce:ViewEventsFromAllClustersInConsole",
    "elastictranscoder:CreatePipeline",
    "elastictranscoder:CreatePreset",
    "elastictranscoder:ListJobsByStatus",
    "elastictranscoder:ListPipelines",
    "elastictranscoder:ListPresets",
    "elastictranscoder:TestRole",
    "elemental-activations:CompleteAccountRegistration",
    "elemental-activations:CompleteFileUpload",
    "elemental-activations:ConfirmAccount",
    "elemental-activations:DownloadKickstart",
    "elemental-activations:DownloadSoftware",
    "elemental-activations:GenerateLicense",
    "elemental-activations:GenerateLicenses",
    "elemental-activations:GetArtifactGroupSoftwareVersions",
    "elemental-activations:GetAsset",
    "elemental-activations:GetAssets",
    "elemental-activations:GetProductAdvisories",
    "elemental-activations:GetSoftwareVersions",
    "elemental-activations:StartFileUpload",
    "elemental-appliances-software:CompleteUpload",
    "elemental-appliances-software:CreateOrderV1",
    "elemental-appliances-software:GetAvsCorrectAddress",
    "elemental-appliances-software:GetBillingAddresses",
    "elemental-appliances-software:GetDeliveryAddressesV2",
    "elemental-appliances-software:GetOrder",
    "elemental-appliances-software:GetOrdersV2",
    "elemental-appliances-software:GetTaxes",
    "elemental-appliances-software:ListQuotes",
    "elemental-appliances-software:StartUpload",
    "elemental-appliances-software:SubmitOrderV1",
    "elemental-support-cases:CheckCasePermission",
    "elemental-support-cases:CreateCase",
    "elemental-support-cases:GetCasePermission",
    "elemental-support-cases:GetCases",
    "elemental-support-cases:GetUICache",
    "elemental-support-content:Query",
    "emr-containers:CreateCertificate",
    "emr-containers:CreateJobTemplate",
    "emr-containers:CreateSecurityConfiguration",
    "emr-containers:CreateVirtualCluster",
    "emr-containers:ListJobTemplates",
    "emr-containers:ListSecurityConfigurations",
    "emr-containers:ListVirtualClusters",
    "emr-serverless:CreateApplication",
    "emr-serverless:ListApplications",
    "entityresolution:AddPolicyStatement",
    "entityresolution:CreateIdMappingWorkflow",
    "entityresolution:CreateIdNamespace",
    "entityresolution:CreateMatchingWorkflow",
    "entityresolution:CreateSchemaMapping",
    "entityresolution:DeletePolicyStatement",
    "entityresolution:GetPolicy",
    "entityresolution:ListIdMappingWorkflows",
    "entityresolution:ListIdNamespaces",
    "entityresolution:ListMatchingWorkflows",
    "entityresolution:ListSchemaMappings",
    "entityresolution:ListTagsForResource",
    "entityresolution:PutPolicy",
    "entityresolution:UseIdNamespace",
    "entityresolution:UseWorkflow",
    "es:AcceptInboundConnection",
    "es:AcceptInboundCrossClusterSearchConnection",
    "es:AuthorizeVpcEndpointAccess",
    "es:CreateApplication",
    "es:CreateElasticsearchServiceRole",
    "es:CreatePackage",
    "es:CreateServiceRole",
    "es:CreateVpcEndpoint",
    "es:DeleteElasticsearchServiceRole",
    "es:DeleteInboundConnection",
    "es:DeleteInboundCrossClusterSearchConnection",
    "es:DeleteOutboundConnection",
    "es:DeleteOutboundCrossClusterSearchConnection",
    "es:DeletePackage",
    "es:DeleteVpcEndpoint",
    "es:DescribeElasticsearchInstanceTypeLimits",
    "es:DescribeInboundConnections",
    "es:DescribeInboundCrossClusterSearchConnections",
    "es:DescribeInstanceTypeLimits",
    "es:DescribeOutboundConnections",
    "es:DescribeOutboundCrossClusterSearchConnections",
    "es:DescribePackages",
    "es:DescribeReservedElasticsearchInstanceOfferings",
    "es:DescribeReservedElasticsearchInstances",
    "es:DescribeReservedInstanceOfferings",
    "es:DescribeReservedInstances",
    "es:DescribeVpcEndpoints",
    "es:GetPackageVersionHistory",
    "es:ListDomainNames",
    "es:ListDomainsForPackage",
    "es:ListElasticsearchInstanceTypeDetails",
    "es:ListElasticsearchInstanceTypes",
    "es:ListElasticsearchVersions",
    "es:ListInstanceTypeDetails",
    "es:ListVersions",
    "es:ListVpcEndpointAccess",
    "es:ListVpcEndpoints",
    "es:ListVpcEndpointsForDomain",
    "es:PurchaseReservedElasticsearchInstanceOffering",
    "es:PurchaseReservedInstanceOffering",
    "es:RejectInboundConnection",
    "es:RejectInboundCrossClusterSearchConnection",
    "es:RevokeVpcEndpointAccess",
    "es:UpdatePackage",
    "es:UpdatePackageScope",
    "es:UpdateVpcEndpoint",
    "events:ListApiDestinations",
    "events:ListArchives",
    "events:ListConnections",
    "events:ListEndpoints",
    "events:ListEventBuses",
    "events:ListEventSources",
    "events:ListPartnerEventSources",
    "events:ListReplays",
    "events:ListRuleNamesByTarget",
    "events:ListRules",
    "events:PutPartnerEvents",
    "events:PutPermission",
    "events:RemovePermission",
    "events:TestEventPattern",
    "evidently:CreateExperiment",
    "evidently:CreateFeature",
    "evidently:CreateLaunch",
    "evidently:CreateProject",
    "evidently:CreateSegment",
    "evidently:ListExperiments",
    "evidently:ListFeatures",
    "evidently:ListLaunches",
    "evidently:ListProjects",
    "evidently:ListSegmentReferences",
    "evidently:ListSegments",
    "evidently:ListTagsForResource",
    "evidently:TestSegmentPattern",
    "finspace:CreateKxEnvironment",
    "finspace:ListKxEnvironments",
    "firehose:ListDeliveryStreams",
    "fis:GetTargetResourceType",
    "fis:ListActions",
    "fis:ListExperimentTemplates",
    "fis:ListExperiments",
    "fis:ListTargetResourceTypes",
    "fms:AssociateAdminAccount",
    "fms:AssociateThirdPartyFirewall",
    "fms:DeleteNotificationChannel",
    "fms:DisassociateAdminAccount",
    "fms:DisassociateThirdPartyFirewall",
    "fms:GetAdminAccount",
    "fms:GetAdminScope",
    "fms:GetNotificationChannel",
    "fms:GetThirdPartyFirewallAssociationStatus",
    "fms:ListAdminAccountsForOrganization",
    "fms:ListAdminsManagingAccount",
    "fms:ListAppsLists",
    "fms:ListDiscoveredResources",
    "fms:ListMemberAccounts",
    "fms:ListPolicies",
    "fms:ListProtocolsLists",
    "fms:ListResourceSets",
    "fms:ListThirdPartyFirewallFirewallPolicies",
    "fms:PutAdminAccount",
    "fms:PutNotificationChannel",
    "forecast:CreateAutoPredictor",
    "forecast:ListDatasetGroups",
    "forecast:ListDatasetImportJobs",
    "forecast:ListDatasets",
    "forecast:ListExplainabilities",
    "forecast:ListExplainabilityExports",
    "forecast:ListForecastExportJobs",
    "forecast:ListForecasts",
    "forecast:ListMonitors",
    "forecast:ListPredictorBacktestExportJobs",
    "forecast:ListPredictors",
    "forecast:ListWhatIfAnalyses",
    "forecast:ListWhatIfForecastExports",
    "forecast:ListWhatIfForecasts",
    "frauddetector:BatchCreateVariable",
    "frauddetector:CreateList",
    "frauddetector:CreateVariable",
    "frauddetector:GetKMSEncryptionKey",
    "frauddetector:PutKMSEncryptionKey",
    "freertos:CreateSubscription",
    "freertos:DescribeHardwarePlatform",
    "freertos:GetEmpPatchUrl",
    "freertos:GetSoftwareURL",
    "freertos:GetSoftwareURLForConfiguration",
    "freertos:GetSubscriptionBillingAmount",
    "freertos:ListFreeRTOSVersions",
    "freertos:ListHardwarePlatforms",
    "freertos:ListHardwareVendors",
    "freertos:ListSoftwareConfigurations",
    "freertos:ListSoftwarePatches",
    "freertos:ListSubscriptionEmails",
    "freertos:ListSubscriptions",
    "freertos:UpdateEmailRecipients",
    "freertos:VerifyEmail",
    "freetier:GetFreeTierAlertPreference",
    "freetier:GetFreeTierUsage",
    "freetier:PutFreeTierAlertPreference",
    "fsx:DescribeBackups",
    "fsx:DescribeDataRepositoryAssociations",
    "fsx:DescribeDataRepositoryTasks",
    "fsx:DescribeFileCaches",
    "fsx:DescribeFileSystems",
    "fsx:DescribeSharedVpcConfiguration",
    "fsx:DescribeSnapshots",
    "fsx:DescribeStorageVirtualMachines",
    "fsx:DescribeVolumes",
    "fsx:UpdateSharedVpcConfiguration",
    "gamelift:AcceptMatch",
    "gamelift:CreateAlias",
    "gamelift:CreateBuild",
    "gamelift:CreateContainerFleet",
    "gamelift:CreateContainerGroupDefinition",
    "gamelift:CreateFleet",
    "gamelift:CreateGameServerGroup",
    "gamelift:CreateGameSession",
    "gamelift:CreateGameSessionQueue",
    "gamelift:CreateLocation",
    "gamelift:CreateMatchmakingConfiguration",
    "gamelift:CreateMatchmakingRuleSet",
    "gamelift:CreatePlayerSession",
    "gamelift:CreatePlayerSessions",
    "gamelift:CreateScript",
    "gamelift:CreateVpcPeeringAuthorization",
    "gamelift:CreateVpcPeeringConnection",
    "gamelift:DeleteVpcPeeringAuthorization",
    "gamelift:DeleteVpcPeeringConnection",
    "gamelift:DescribeEC2InstanceLimits",
    "gamelift:DescribeFleetAttributes",
    "gamelift:DescribeFleetCapacity",
    "gamelift:DescribeFleetUtilization",
    "gamelift:DescribeGameSessionDetails",
    "gamelift:DescribeGameSessionPlacement",
    "gamelift:DescribeGameSessionQueues",
    "gamelift:DescribeGameSessions",
    "gamelift:DescribeMatchmaking",
    "gamelift:DescribeMatchmakingConfigurations",
    "gamelift:DescribeMatchmakingRuleSets",
    "gamelift:DescribePlayerSessions",
    "gamelift:DescribeVpcPeeringAuthorizations",
    "gamelift:DescribeVpcPeeringConnections",
    "gamelift:GetGameSessionLogUrl",
    "gamelift:ListAliases",
    "gamelift:ListBuilds",
    "gamelift:ListContainerFleets",
    "gamelift:ListContainerGroupDefinitions",
    "gamelift:ListFleetDeployments",
    "gamelift:ListFleets",
    "gamelift:ListGameServerGroups",
    "gamelift:ListLocations",
    "gamelift:ListScripts",
    "gamelift:SearchGameSessions",
    "gamelift:StartMatchBackfill",
    "gamelift:StartMatchmaking",
    "gamelift:StopGameSessionPlacement",
    "gamelift:StopMatchmaking",
    "gamelift:TerminateGameSession",
    "gamelift:UpdateGameSession",
    "gamelift:ValidateMatchmakingRuleSet",
    "gameliftstreams:CreateApplication",
    "gameliftstreams:CreateStreamGroup",
    "gameliftstreams:ListApplications",
    "gameliftstreams:ListStreamGroups",
    "gameliftstreams:ListStreamSessionsByAccount",
    "glacier:GetDataRetrievalPolicy",
    "glacier:ListProvisionedCapacity",
    "glacier:ListVaults",
    "glacier:PurchaseProvisionedCapacity",
    "glacier:SetDataRetrievalPolicy",
    "globalaccelerator:AdvertiseByoipCidr",
    "globalaccelerator:CreateAccelerator",
    "globalaccelerator:CreateCrossAccountAttachment",
    "globalaccelerator:CreateCustomRoutingAccelerator",
    "globalaccelerator:DeprovisionByoipCidr",
    "globalaccelerator:ListAccelerators",
    "globalaccelerator:ListByoipCidrs",
    "globalaccelerator:ListCrossAccountAttachments",
    "globalaccelerator:ListCrossAccountResourceAccounts",
    "globalaccelerator:ListCrossAccountResources",
    "globalaccelerator:ListCustomRoutingAccelerators",
    "globalaccelerator:ListCustomRoutingPortMappingsByDestination",
    "globalaccelerator:ProvisionByoipCidr",
    "globalaccelerator:WithdrawByoipCidr",
    "glue:BatchGetCustomEntityTypes",
    "glue:BatchGetStageFiles",
    "glue:CheckSchemaVersionValidity",
    "glue:CreateClassifier",
    "glue:CreateCrawler",
    "glue:CreateCustomEntityType",
    "glue:CreateDataQualityRuleset",
    "glue:CreateDevEndpoint",
    "glue:CreateInboundIntegration",
    "glue:CreateMLTransform",
    "glue:CreateScript",
    "glue:CreateSecurityConfiguration",
    "glue:DeleteClassifier",
    "glue:DeleteCustomEntityType",
    "glue:DeleteSecurityConfiguration",
    "glue:DeregisterDataPreview",
    "glue:DescribeConnectionType",
    "glue:DescribeInboundIntegrations",
    "glue:GetClassifier",
    "glue:GetClassifiers",
    "glue:GetColumnStatisticsTaskRun",
    "glue:GetColumnStatisticsTaskRuns",
    "glue:GetColumnStatisticsTaskSettings",
    "glue:GetCrawlerMetrics",
    "glue:GetCrawlers",
    "glue:GetCustomEntityType",
    "glue:GetDataPreviewStatement",
    "glue:GetDataflowGraph",
    "glue:GetDevEndpoints",
    "glue:GetEnvironment",
    "glue:GetExecutors",
    "glue:GetExecutorsThreads",
    "glue:GetGeneratedCode",
    "glue:GetJobBookmark",
    "glue:GetJobs",
    "glue:GetLogParsingStatus",
    "glue:GetMapping",
    "glue:GetNotebookInstanceStatus",
    "glue:GetPlan",
    "glue:GetQueries",
    "glue:GetQuery",
    "glue:GetRecipeAction",
    "glue:GetSecurityConfiguration",
    "glue:GetSecurityConfigurations",
    "glue:GetStage",
    "glue:GetStageAttempt",
    "glue:GetStageAttemptTaskList",
    "glue:GetStageAttemptTaskSummary",
    "glue:GetStageFiles",
    "glue:GetStages",
    "glue:GetStorage",
    "glue:GetStorageUnit",
    "glue:GetTriggers",
    "glue:GlueNotebookAuthorize",
    "glue:GlueNotebookRefreshCredentials",
    "glue:ListBlueprints",
    "glue:ListColumnStatisticsTaskRuns",
    "glue:ListConnectionTypes",
    "glue:ListCrawlers",
    "glue:ListCustomEntityTypes",
    "glue:ListDevEndpoints",
    "glue:ListJobs",
    "glue:ListRegistries",
    "glue:ListSessions",
    "glue:ListTriggers",
    "glue:ListUsageProfiles",
    "glue:ListWorkflows",
    "glue:RequestLogParsing",
    "glue:ResetJobBookmark",
    "glue:RunDataPreviewStatement",
    "glue:SendFeedback",
    "glue:SendRecipeAction",
    "glue:StartCompletion",
    "glue:StartCrawlerSchedule",
    "glue:StartNotebook",
    "glue:StopCrawlerSchedule",
    "glue:TerminateNotebook",
    "glue:TestConnection",
    "glue:UpdateClassifier",
    "glue:UpdateCrawlerSchedule",
    "glue:UseGlueStudio",
    "grafana:CreateWorkspace",
    "grafana:ListWorkspaces",
    "greengrass:AssociateServiceRoleToAccount",
    "greengrass:CreateConnectorDefinition",
    "greengrass:CreateCoreDefinition",
    "greengrass:CreateDeviceDefinition",
    "greengrass:CreateFunctionDefinition",
    "greengrass:CreateGroup",
    "greengrass:CreateLoggerDefinition",
    "greengrass:CreateResourceDefinition",
    "greengrass:CreateSoftwareUpdateJob",
    "greengrass:CreateSubscriptionDefinition",
    "greengrass:DisassociateServiceRoleFromAccount",
    "greengrass:GetServiceRoleForAccount",
    "greengrass:ListBulkDeployments",
    "greengrass:ListComponents",
    "greengrass:ListConnectorDefinitions",
    "greengrass:ListCoreDefinitions",
    "greengrass:ListCoreDevices",
    "greengrass:ListDeviceDefinitions",
    "greengrass:ListFunctionDefinitions",
    "greengrass:ListGroups",
    "greengrass:ListLoggerDefinitions",
    "greengrass:ListResourceDefinitions",
    "greengrass:ListSubscriptionDefinitions",
    "greengrass:StartBulkDeployment",
    "groundstation:CreateConfig",
    "groundstation:CreateDataflowEndpointGroup",
    "groundstation:CreateEphemeris",
    "groundstation:CreateMissionProfile",
    "groundstation:GetMinuteUsage",
    "groundstation:ListConfigs",
    "groundstation:ListContacts",
    "groundstation:ListDataflowEndpointGroups",
    "groundstation:ListEphemerides",
    "groundstation:ListGroundStations",
    "groundstation:ListMissionProfiles",
    "groundstation:ListSatellites",
    "groundstation:RegisterAgent",
    "groundstation:ReserveContact",
    "groundtruthlabeling:AssociatePatchToManifestJob",
    "groundtruthlabeling:CreateBatch",
    "groundtruthlabeling:CreateIntakeForm",
    "groundtruthlabeling:CreateProject",
    "groundtruthlabeling:CreateWorkflowDefinition",
    "groundtruthlabeling:DescribeConsoleJob",
    "groundtruthlabeling:GenerateLIDARPreviewTaskConfigJob",
    "groundtruthlabeling:GetBatch",
    "groundtruthlabeling:GetIntakeFormStatus",
    "groundtruthlabeling:ListBatches",
    "groundtruthlabeling:ListDatasetObjects",
    "groundtruthlabeling:ListProjects",
    "groundtruthlabeling:RunFilterOrSampleDatasetJob",
    "groundtruthlabeling:RunGenerateManifestByCrawlingJob",
    "groundtruthlabeling:RunGenerateManifestMetricsJob",
    "groundtruthlabeling:UpdateBatch",
    "guardduty:AcceptAdministratorInvitation",
    "guardduty:AcceptInvitation",
    "guardduty:ArchiveFindings",
    "guardduty:CreateDetector",
    "guardduty:CreateIPSet",
    "guardduty:CreateMalwareProtectionPlan",
    "guardduty:CreateMembers",
    "guardduty:CreatePublishingDestination",
    "guardduty:CreateSampleFindings",
    "guardduty:CreateThreatIntelSet",
    "guardduty:DeclineInvitations",
    "guardduty:DeleteInvitations",
    "guardduty:DeleteMembers",
    "guardduty:DescribeMalwareScans",
    "guardduty:DescribeOrganizationConfiguration",
    "guardduty:DisableOrganizationAdminAccount",
    "guardduty:DisassociateFromAdministratorAccount",
    "guardduty:DisassociateFromMasterAccount",
    "guardduty:DisassociateMembers",
    "guardduty:EnableOrganizationAdminAccount",
    "guardduty:GetAdministratorAccount",
    "guardduty:GetFindings",
    "guardduty:GetFindingsStatistics",
    "guardduty:GetInvitationsCount",
    "guardduty:GetMalwareScanSettings",
    "guardduty:GetMasterAccount",
    "guardduty:GetMemberDetectors",
    "guardduty:GetMembers",
    "guardduty:GetOrganizationStatistics",
    "guardduty:GetRemainingFreeTrialDays",
    "guardduty:GetUsageStatistics",
    "guardduty:InviteMembers",
    "guardduty:ListDetectors",
    "guardduty:ListFilters",
    "guardduty:ListFindings",
    "guardduty:ListIPSets",
    "guardduty:ListInvitations",
    "guardduty:ListMalwareProtectionPlans",
    "guardduty:ListMembers",
    "guardduty:ListOrganizationAdminAccounts",
    "guardduty:ListPublishingDestinations",
    "guardduty:ListThreatIntelSets",
    "guardduty:SendSecurityTelemetry",
    "guardduty:StartMalwareScan",
    "guardduty:StartMonitoringMembers",
    "guardduty:StopMonitoringMembers",
    "guardduty:UnarchiveFindings",
    "guardduty:UpdateFindingsFeedback",
    "guardduty:UpdateMalwareScanSettings",
    "guardduty:UpdateMemberDetectors",
    "guardduty:UpdateOrganizationConfiguration",
    "health:DescribeAffectedAccountsForOrganization",
    "health:DescribeAffectedEntitiesForOrganization",
    "health:DescribeEntityAggregates",
    "health:DescribeEntityAggregatesForOrganization",
    "health:DescribeEventAggregates",
    "health:DescribeEventDetailsForOrganization",
    "health:DescribeEventTypes",
    "health:DescribeEvents",
    "health:DescribeEventsForOrganization",
    "health:DescribeHealthServiceStatusForOrganization",
    "health:DisableHealthServiceAccessForOrganization",
    "health:EnableHealthServiceAccessForOrganization",
    "healthlake:CreateFHIRDatastore",
    "healthlake:ListFHIRDatastores",
    "honeycode:ApproveTeamAssociation",
    "honeycode:CreateTeam",
    "honeycode:CreateTenant",
    "honeycode:DeleteDomains",
    "honeycode:DeregisterGroups",
    "honeycode:DescribeTeam",
    "honeycode:ListDomains",
    "honeycode:ListGroups",
    "honeycode:ListTagsForResource",
    "honeycode:ListTeamAssociations",
    "honeycode:ListTenants",
    "honeycode:RegisterDomainForVerification",
    "honeycode:RegisterGroups",
    "honeycode:RejectTeamAssociation",
    "honeycode:RestartDomainVerification",
    "honeycode:TagResource",
    "honeycode:UntagResource",
    "honeycode:UpdateTeam",
    "iam:CreateAccountAlias",
    "iam:DeleteAccountAlias",
    "iam:DeleteAccountPasswordPolicy",
    "iam:DeleteCloudFrontPublicKey",
    "iam:DisableOrganizationsRootCredentialsManagement",
    "iam:DisableOrganizationsRootSessions",
    "iam:EnableOrganizationsRootCredentialsManagement",
    "iam:EnableOrganizationsRootSessions",
    "iam:GenerateCredentialReport",
    "iam:GetAccountAuthorizationDetails",
    "iam:GetAccountEmailAddress",
    "iam:GetAccountName",
    "iam:GetAccountPasswordPolicy",
    "iam:GetAccountSummary",
    "iam:GetCloudFrontPublicKey",
    "iam:GetContextKeysForCustomPolicy",
    "iam:GetCredentialReport",
    "iam:GetOrganizationsAccessReport",
    "iam:GetServiceLastAccessedDetails",
    "iam:GetServiceLastAccessedDetailsWithEntities",
    "iam:ListAccountAliases",
    "iam:ListCloudFrontPublicKeys",
    "iam:ListGroups",
    "iam:ListInstanceProfiles",
    "iam:ListOpenIDConnectProviders",
    "iam:ListOrganizationsFeatures",
    "iam:ListPolicies",
    "iam:ListRoles",
    "iam:ListSAMLProviders",
    "iam:ListSTSRegionalEndpointsStatus",
    "iam:ListServerCertificates",
    "iam:ListUsers",
    "iam:ListVirtualMFADevices",
    "iam:SetSTSRegionalEndpointStatus",
    "iam:SetSecurityTokenServicePreferences",
    "iam:SimulateCustomPolicy",
    "iam:UpdateAccountEmailAddress",
    "iam:UpdateAccountName",
    "iam:UpdateAccountPasswordPolicy",
    "iam:UpdateCloudFrontPublicKey",
    "iam:UploadCloudFrontPublicKey",
    "identity-sync:CreateSyncProfile",
    "identitystore-auth:BatchDeleteSession",
    "identitystore-auth:BatchGetSession",
    "identitystore-auth:ListSessions",
    "imagebuilder:ListComponents",
    "imagebuilder:ListContainerRecipes",
    "imagebuilder:ListDistributionConfigurations",
    "imagebuilder:ListImagePipelines",
    "imagebuilder:ListImageRecipes",
    "imagebuilder:ListImages",
    "imagebuilder:ListInfrastructureConfigurations",
    "imagebuilder:ListLifecyclePolicies",
    "imagebuilder:ListWaitingWorkflowSteps",
    "imagebuilder:ListWorkflows",
    "importexport:CancelJob",
    "importexport:CreateJob",
    "importexport:GetShippingLabel",
    "importexport:GetStatus",
    "importexport:ListJobs",
    "importexport:UpdateJob",
    "inspector:AddAttributesToFindings",
    "inspector:CreateAssessmentTarget",
    "inspector:CreateAssessmentTemplate",
    "inspector:CreateExclusionsPreview",
    "inspector:CreateResourceGroup",
    "inspector:DeleteAssessmentRun",
    "inspector:DeleteAssessmentTarget",
    "inspector:DeleteAssessmentTemplate",
    "inspector:DescribeAssessmentRuns",
    "inspector:DescribeAssessmentTargets",
    "inspector:DescribeAssessmentTemplates",
    "inspector:DescribeCrossAccountAccessRole",
    "inspector:DescribeExclusions",
    "inspector:DescribeFindings",
    "inspector:DescribeResourceGroups",
    "inspector:DescribeRulesPackages",
    "inspector:GetAssessmentReport",
    "inspector:GetExclusionsPreview",
    "inspector:GetTelemetryMetadata",
    "inspector:ListAssessmentRunAgents",
    "inspector:ListAssessmentRuns",
    "inspector:ListAssessmentTargets",
    "inspector:ListAssessmentTemplates",
    "inspector:ListEventSubscriptions",
    "inspector:ListExclusions",
    "inspector:ListFindings",
    "inspector:ListRulesPackages",
    "inspector:ListTagsForResource",
    "inspector:PreviewAgents",
    "inspector:RegisterCrossAccountAccessRole",
    "inspector:RemoveAttributesFromFindings",
    "inspector:SetTagsForResource",
    "inspector:StartAssessmentRun",
    "inspector:StopAssessmentRun",
    "inspector:SubscribeToEvent",
    "inspector:UnsubscribeFromEvent",
    "inspector:UpdateAssessmentTarget",
    "inspector-scan:ScanSbom",
    "inspector2:AssociateMember",
    "inspector2:BatchGetAccountStatus",
    "inspector2:BatchGetCodeSnippet",
    "inspector2:BatchGetFindingDetails",
    "inspector2:BatchGetFreeTrialInfo",
    "inspector2:BatchGetMemberEc2DeepInspectionStatus",
    "inspector2:BatchUpdateMemberEc2DeepInspectionStatus",
    "inspector2:CancelFindingsReport",
    "inspector2:CancelSbomExport",
    "inspector2:CreateFindingsReport",
    "inspector2:CreateSbomExport",
    "inspector2:DescribeOrganizationConfiguration",
    "inspector2:Disable",
    "inspector2:DisableDelegatedAdminAccount",
    "inspector2:DisassociateMember",
    "inspector2:Enable",
    "inspector2:EnableDelegatedAdminAccount",
    "inspector2:GetCisScanReport",
    "inspector2:GetCisScanResultDetails",
    "inspector2:GetConfiguration",
    "inspector2:GetDelegatedAdminAccount",
    "inspector2:GetEc2DeepInspectionConfiguration",
    "inspector2:GetEncryptionKey",
    "inspector2:GetFindingsReportStatus",
    "inspector2:GetMember",
    "inspector2:GetSbomExport",
    "inspector2:ListAccountPermissions",
    "inspector2:ListCisScanConfigurations",
    "inspector2:ListCisScanResultsAggregatedByChecks",
    "inspector2:ListCisScanResultsAggregatedByTargetResource",
    "inspector2:ListCisScans",
    "inspector2:ListCoverage",
    "inspector2:ListCoverageStatistics",
    "inspector2:ListDelegatedAdminAccounts",
    "inspector2:ListFilters",
    "inspector2:ListFindingAggregations",
    "inspector2:ListFindings",
    "inspector2:ListMembers",
    "inspector2:ListTagsForResource",
    "inspector2:ListUsageTotals",
    "inspector2:ResetEncryptionKey",
    "inspector2:SearchVulnerabilities",
    "inspector2:SendCisSessionHealth",
    "inspector2:SendCisSessionTelemetry",
    "inspector2:StartCisSession",
    "inspector2:StopCisSession",
    "inspector2:UpdateConfiguration",
    "inspector2:UpdateEc2DeepInspectionConfiguration",
    "inspector2:UpdateEncryptionKey",
    "inspector2:UpdateOrgEc2DeepInspectionConfiguration",
    "inspector2:UpdateOrganizationConfiguration",
    "internetmonitor:Link",
    "internetmonitor:ListInternetEvents",
    "internetmonitor:ListMonitors",
    "invoicing:BatchGetInvoiceProfile",
    "invoicing:CreateInvoiceUnit",
    "invoicing:GetInvoiceEmailDeliveryPreferences",
    "invoicing:GetInvoicePDF",
    "invoicing:ListInvoiceSummaries",
    "invoicing:ListInvoiceUnits",
    "invoicing:PutInvoiceEmailDeliveryPreferences",
    "iot:AttachThingPrincipal",
    "iot:CancelAuditMitigationActionsTask",
    "iot:CancelAuditTask",
    "iot:CancelDetectMitigationActionsTask",
    "iot:ClearDefaultAuthorizer",
    "iot:CreateAuditSuppression",
    "iot:CreateCertificateFromCsr",
    "iot:CreateKeysAndCertificate",
    "iot:CreateTopicRuleDestination",
    "iot:DeleteAccountAuditConfiguration",
    "iot:DeleteAuditSuppression",
    "iot:DeleteRegistrationCode",
    "iot:DeleteV2LoggingLevel",
    "iot:DescribeAccountAuditConfiguration",
    "iot:DescribeAuditFinding",
    "iot:DescribeAuditMitigationActionsTask",
    "iot:DescribeAuditSuppression",
    "iot:DescribeAuditTask",
    "iot:DescribeDefaultAuthorizer",
    "iot:DescribeDetectMitigationActionsTask",
    "iot:DescribeEndpoint",
    "iot:DescribeEventConfigurations",
    "iot:DescribeThingRegistrationTask",
    "iot:DetachThingPrincipal",
    "iot:GetIndexingConfiguration",
    "iot:GetLoggingOptions",
    "iot:GetPackageConfiguration",
    "iot:GetRegistrationCode",
    "iot:GetV2LoggingOptions",
    "iot:ListAttachedPolicies",
    "iot:ListAuditFindings",
    "iot:ListAuditMitigationActionsExecutions",
    "iot:ListAuditMitigationActionsTasks",
    "iot:ListAuditSuppressions",
    "iot:ListAuditTasks",
    "iot:ListAuthorizers",
    "iot:ListBillingGroups",
    "iot:ListCACertificates",
    "iot:ListCertificateProviders",
    "iot:ListCertificates",
    "iot:ListCertificatesByCA",
    "iot:ListCommands",
    "iot:ListCustomMetrics",
    "iot:ListDetectMitigationActionsTasks",
    "iot:ListDimensions",
    "iot:ListDomainConfigurations",
    "iot:ListFleetMetrics",
    "iot:ListIndices",
    "iot:ListJobTemplates",
    "iot:ListJobs",
    "iot:ListManagedJobTemplates",
    "iot:ListMitigationActions",
    "iot:ListOTAUpdates",
    "iot:ListOutgoingCertificates",
    "iot:ListPackageVersions",
    "iot:ListPackages",
    "iot:ListPolicies",
    "iot:ListPolicyPrincipals",
    "iot:ListPrincipalPolicies",
    "iot:ListPrincipalThings",
    "iot:ListProvisioningTemplates",
    "iot:ListRelatedResourcesForAuditFinding",
    "iot:ListRetainedMessages",
    "iot:ListRoleAliases",
    "iot:ListScheduledAudits",
    "iot:ListStreams",
    "iot:ListThingGroups",
    "iot:ListThingPrincipals",
    "iot:ListThingRegistrationTaskReports",
    "iot:ListThingRegistrationTasks",
    "iot:ListThingTypes",
    "iot:ListThings",
    "iot:ListTopicRuleDestinations",
    "iot:ListTopicRules",
    "iot:ListTunnels",
    "iot:ListV2LoggingLevels",
    "iot:OpenTunnel",
    "iot:PutVerificationStateOnViolation",
    "iot:RegisterCACertificate",
    "iot:RegisterCertificate",
    "iot:RegisterCertificateWithoutCA",
    "iot:RegisterThing",
    "iot:SetLoggingOptions",
    "iot:SetV2LoggingLevel",
    "iot:SetV2LoggingOptions",
    "iot:StartAuditMitigationActionsTask",
    "iot:StartOnDemandAuditTask",
    "iot:StartThingRegistrationTask",
    "iot:StopThingRegistrationTask",
    "iot:UpdateAccountAuditConfiguration",
    "iot:UpdateAuditSuppression",
    "iot:UpdateEventConfigurations",
    "iot:UpdateIndexingConfiguration",
    "iot:UpdatePackageConfiguration",
    "iot:ValidateSecurityProfileBehaviors",
    "iot-device-tester:CheckVersion",
    "iot-device-tester:DownloadTestSuite",
    "iot-device-tester:LatestIdt",
    "iot-device-tester:SendMetrics",
    "iot-device-tester:SupportedVersion",
    "iot1click:ClaimDevicesByClaimCode",
    "iot1click:ListDevices",
    "iot1click:ListProjects",
    "iotanalytics:DescribeLoggingOptions",
    "iotanalytics:ListChannels",
    "iotanalytics:ListDatasets",
    "iotanalytics:ListDatastores",
    "iotanalytics:ListPipelines",
    "iotanalytics:PutLoggingOptions",
    "iotanalytics:RunPipelineActivity",
    "iotdeviceadvisor:CreateSuiteDefinition",
    "iotdeviceadvisor:GetEndpoint",
    "iotdeviceadvisor:ListSuiteDefinitions",
    "iotdeviceadvisor:StartSuiteRun",
    "iotevents:DescribeDetectorModelAnalysis",
    "iotevents:DescribeLoggingOptions",
    "iotevents:GetDetectorModelAnalysisResults",
    "iotevents:ListAlarmModels",
    "iotevents:ListDetectorModels",
    "iotevents:ListInputRoutings",
    "iotevents:ListInputs",
    "iotevents:PutLoggingOptions",
    "iotevents:StartDetectorModelAnalysis",
    "iotfleethub:CreateApplication",
    "iotfleethub:ListApplications",
    "iotfleetwise:GetEncryptionConfiguration",
    "iotfleetwise:GetLoggingOptions",
    "iotfleetwise:GetRegisterAccountStatus",
    "iotfleetwise:ListCampaigns",
    "iotfleetwise:ListDecoderManifests",
    "iotfleetwise:ListFleets",
    "iotfleetwise:ListModelManifests",
    "iotfleetwise:ListSignalCatalogs",
    "iotfleetwise:ListStateTemplates",
    "iotfleetwise:ListVehicles",
    "iotfleetwise:PutEncryptionConfiguration",
    "iotfleetwise:PutLoggingOptions",
    "iotfleetwise:RegisterAccount",
    "iotmanagedintegrations:CreateCredentialLocker",
    "iotmanagedintegrations:CreateDestination",
    "iotmanagedintegrations:CreateEventLogConfiguration",
    "iotmanagedintegrations:CreateManagedThing",
    "iotmanagedintegrations:CreateNotificationConfiguration",
    "iotmanagedintegrations:CreateOtaTask",
    "iotmanagedintegrations:CreateOtaTaskConfiguration",
    "iotmanagedintegrations:CreateProvisioningProfile",
    "iotmanagedintegrations:DeleteDestination",
    "iotmanagedintegrations:DeleteEventLogConfiguration",
    "iotmanagedintegrations:DeleteNotificationConfiguration",
    "iotmanagedintegrations:DeleteOtaTaskConfiguration",
    "iotmanagedintegrations:GetCustomEndpoint",
    "iotmanagedintegrations:GetDefaultEncryptionConfiguration",
    "iotmanagedintegrations:GetDestination",
    "iotmanagedintegrations:GetDeviceDiscovery",
    "iotmanagedintegrations:GetEventLogConfiguration",
    "iotmanagedintegrations:GetHubConfiguration",
    "iotmanagedintegrations:GetNotificationConfiguration",
    "iotmanagedintegrations:GetOtaTaskConfiguration",
    "iotmanagedintegrations:GetRuntimeLogConfiguration",
    "iotmanagedintegrations:GetSchemaVersion",
    "iotmanagedintegrations:ListCredentialLockers",
    "iotmanagedintegrations:ListDestinations",
    "iotmanagedintegrations:ListEventLogConfigurations",
    "iotmanagedintegrations:ListManagedThings",
    "iotmanagedintegrations:ListNotificationConfigurations",
    "iotmanagedintegrations:ListOtaTaskConfigurations",
    "iotmanagedintegrations:ListOtaTasks",
    "iotmanagedintegrations:ListProvisioningProfiles",
    "iotmanagedintegrations:ListSchemaVersions",
    "iotmanagedintegrations:PutDefaultEncryptionConfiguration",
    "iotmanagedintegrations:PutHubConfiguration",
    "iotmanagedintegrations:PutRuntimeLogConfiguration",
    "iotmanagedintegrations:RegisterCustomEndpoint",
    "iotmanagedintegrations:ResetRuntimeLogConfiguration",
    "iotmanagedintegrations:SendManagedThingCommand",
    "iotmanagedintegrations:StartDeviceDiscovery",
    "iotmanagedintegrations:UpdateDestination",
    "iotmanagedintegrations:UpdateEventLogConfiguration",
    "iotmanagedintegrations:UpdateNotificationConfiguration",
    "iotsitewise:CreateAssetModel",
    "iotsitewise:CreateBulkImportJob",
    "iotsitewise:CreateDataset",
    "iotsitewise:CreateGateway",
    "iotsitewise:CreatePortal",
    "iotsitewise:DescribeBulkImportJob",
    "iotsitewise:DescribeDefaultEncryptionConfiguration",
    "iotsitewise:DescribeLoggingOptions",
    "iotsitewise:DescribeStorageConfiguration",
    "iotsitewise:EnableSiteWiseIntegration",
    "iotsitewise:ExecuteQuery",
    "iotsitewise:InvokeAssistant",
    "iotsitewise:ListAssetModels",
    "iotsitewise:ListBulkImportJobs",
    "iotsitewise:ListDatasets",
    "iotsitewise:ListGateways",
    "iotsitewise:ListPortals",
    "iotsitewise:PutDefaultEncryptionConfiguration",
    "iotsitewise:PutLoggingOptions",
    "iotsitewise:PutStorageConfiguration",
    "iottwinmaker:CreateMetadataTransferJob",
    "iottwinmaker:CreateWorkspace",
    "iottwinmaker:GetPricingPlan",
    "iottwinmaker:ListMetadataTransferJobs",
    "iottwinmaker:ListWorkspaces",
    "iottwinmaker:UpdatePricingPlan",
    "iotwireless:AssociateAwsAccountWithPartnerAccount",
    "iotwireless:CreateDestination",
    "iotwireless:CreateDeviceProfile",
    "iotwireless:CreateFuotaTask",
    "iotwireless:CreateMulticastGroup",
    "iotwireless:CreateServiceProfile",
    "iotwireless:CreateWirelessDevice",
    "iotwireless:CreateWirelessGateway",
    "iotwireless:CreateWirelessGatewayTaskDefinition",
    "iotwireless:DeleteQueuedMessages",
    "iotwireless:GetEventConfigurationByResourceTypes",
    "iotwireless:GetLogLevelsByResourceTypes",
    "iotwireless:GetMetricConfiguration",
    "iotwireless:GetMetrics",
    "iotwireless:GetPositionEstimate",
    "iotwireless:GetServiceEndpoint",
    "iotwireless:ListDestinations",
    "iotwireless:ListDeviceProfiles",
    "iotwireless:ListEventConfigurations",
    "iotwireless:ListFuotaTasks",
    "iotwireless:ListMulticastGroups",
    "iotwireless:ListNetworkAnalyzerConfigurations",
    "iotwireless:ListPartnerAccounts",
    "iotwireless:ListPositionConfigurations",
    "iotwireless:ListQueuedMessages",
    "iotwireless:ListServiceProfiles",
    "iotwireless:ListWirelessDeviceImportTasks",
    "iotwireless:ListWirelessDevices",
    "iotwireless:ListWirelessGatewayTaskDefinitions",
    "iotwireless:ListWirelessGateways",
    "iotwireless:ResetAllResourceLogLevels",
    "iotwireless:StartSingleWirelessDeviceImportTask",
    "iotwireless:UpdateEventConfigurationByResourceTypes",
    "iotwireless:UpdateLogLevelsByResourceTypes",
    "iotwireless:UpdateMetricConfiguration",
    "iq:CreateConversation",
    "iq:CreateExpert",
    "iq:CreateListing",
    "iq:CreateMilestoneProposal",
    "iq:CreatePaymentRequest",
    "iq:CreateProject",
    "iq:CreateRequest",
    "iq:CreateScheduledProposal",
    "iq:CreateSeller",
    "iq:CreateUpfrontProposal",
    "iq:InitiateCall",
    "iq:UploadAttachment",
    "ivs:ListEncoderConfigurations",
    "ivs:ListIngestConfigurations",
    "ivs:ListPlaybackRestrictionPolicies",
    "ivs:ListPublicKeys",
    "ivs:ListStorageConfigurations",
    "kafka:DescribeClusterOperation",
    "kafka:DescribeClusterOperationV2",
    "kafka:GetBootstrapBrokers",
    "kafka:GetCompatibleKafkaVersions",
    "kafka:ListClusters",
    "kafka:ListClustersV2",
    "kafka:ListConfigurations",
    "kafka:ListKafkaVersions",
    "kafka:ListReplicators",
    "kafka:ListVpcConnections",
    "kafkaconnect:CreateConnector",
    "kafkaconnect:CreateCustomPlugin",
    "kafkaconnect:CreateWorkerConfiguration",
    "kafkaconnect:ListConnectors",
    "kafkaconnect:ListCustomPlugins",
    "kafkaconnect:ListWorkerConfigurations",
    "kendra:CreateIndex",
    "kendra:ListIndices",
    "kendra-ranking:CreateRescoreExecutionPlan",
    "kendra-ranking:ListRescoreExecutionPlans",
    "kinesis:DescribeLimits",
    "kinesis:DisableEnhancedMonitoring",
    "kinesis:EnableEnhancedMonitoring",
    "kinesis:ListStreams",
    "kinesis:UpdateShardCount",
    "kinesis:UpdateStreamMode",
    "kinesisanalytics:CreateApplication",
    "kinesisanalytics:DiscoverInputSchema",
    "kinesisanalytics:ListApplications",
    "kinesisvideo:ListEdgeAgentConfigurations",
    "kinesisvideo:ListSignalingChannels",
    "kinesisvideo:ListStreams",
    "kms:ConnectCustomKeyStore",
    "kms:CreateCustomKeyStore",
    "kms:CreateKey",
    "kms:DeleteCustomKeyStore",
    "kms:DescribeCustomKeyStores",
    "kms:DisconnectCustomKeyStore",
    "kms:GenerateRandom",
    "kms:ListAliases",
    "kms:ListKeys",
    "kms:ListRetirableGrants",
    "kms:UpdateCustomKeyStore",
    "lakeformation:AddLFTagsToResource",
    "lakeformation:BatchGrantPermissions",
    "lakeformation:BatchRevokePermissions",
    "lakeformation:CancelTransaction",
    "lakeformation:CommitTransaction",
    "lakeformation:CreateDataCellsFilter",
    "lakeformation:CreateLFTag",
    "lakeformation:CreateLFTagExpression",
    "lakeformation:CreateLakeFormationIdentityCenterConfiguration",
    "lakeformation:CreateLakeFormationOptIn",
    "lakeformation:DeleteDataCellsFilter",
    "lakeformation:DeleteLFTag",
    "lakeformation:DeleteLFTagExpression",
    "lakeformation:DeleteLakeFormationIdentityCenterConfiguration",
    "lakeformation:DeleteLakeFormationOptIn",
    "lakeformation:DeleteObjectsOnCancel",
    "lakeformation:DeregisterResource",
    "lakeformation:DescribeLakeFormationIdentityCenterConfiguration",
    "lakeformation:DescribeResource",
    "lakeformation:DescribeTransaction",
    "lakeformation:ExtendTransaction",
    "lakeformation:GetDataAccess",
    "lakeformation:GetDataCellsFilter",
    "lakeformation:GetDataLakePrincipal",
    "lakeformation:GetDataLakeSettings",
    "lakeformation:GetEffectivePermissionsForPath",
    "lakeformation:GetLFTag",
    "lakeformation:GetLFTagExpression",
    "lakeformation:GetQueryState",
    "lakeformation:GetQueryStatistics",
    "lakeformation:GetResourceLFTags",
    "lakeformation:GetTableObjects",
    "lakeformation:GetWorkUnitResults",
    "lakeformation:GetWorkUnits",
    "lakeformation:GrantPermissions",
    "lakeformation:ListDataCellsFilter",
    "lakeformation:ListLFTagExpressions",
    "lakeformation:ListLFTags",
    "lakeformation:ListLakeFormationOptIns",
    "lakeformation:ListPermissions",
    "lakeformation:ListResources",
    "lakeformation:ListTableStorageOptimizers",
    "lakeformation:ListTransactions",
    "lakeformation:PutDataLakeSettings",
    "lakeformation:RegisterResource",
    "lakeformation:RemoveLFTagsFromResource",
    "lakeformation:RevokePermissions",
    "lakeformation:SearchDatabasesByLFTags",
    "lakeformation:SearchTablesByLFTags",
    "lakeformation:StartQueryPlanning",
    "lakeformation:StartTransaction",
    "lakeformation:UpdateDataCellsFilter",
    "lakeformation:UpdateLFTag",
    "lakeformation:UpdateLFTagExpression",
    "lakeformation:UpdateLakeFormationIdentityCenterConfiguration",
    "lakeformation:UpdateResource",
    "lakeformation:UpdateTableObjects",
    "lakeformation:UpdateTableStorageOptimizer",
    "lambda:CreateCodeSigningConfig",
    "lambda:CreateEventSourceMapping",
    "lambda:GetAccountSettings",
    "lambda:ListCodeSigningConfigs",
    "lambda:ListEventSourceMappings",
    "lambda:ListFunctions",
    "lambda:ListLayerVersions",
    "lambda:ListLayers",
    "launchwizard:CreateAdditionalNode",
    "launchwizard:CreateSettingsSet",
    "launchwizard:DeleteAdditionalNode",
    "launchwizard:DeleteApp",
    "launchwizard:DeleteSettingsSet",
    "launchwizard:DescribeAdditionalNode",
    "launchwizard:DescribeProvisionedApp",
    "launchwizard:DescribeProvisioningEvents",
    "launchwizard:DescribeSettingsSet",
    "launchwizard:GetInfrastructureSuggestion",
    "launchwizard:GetIpAddress",
    "launchwizard:GetResourceCostEstimate",
    "launchwizard:GetResourceRecommendation",
    "launchwizard:GetSettingsSet",
    "launchwizard:GetWorkload",
    "launchwizard:GetWorkloadAsset",
    "launchwizard:GetWorkloadAssets",
    "launchwizard:GetWorkloadDeploymentPattern",
    "launchwizard:ListAdditionalNodes",
    "launchwizard:ListAllowedResources",
    "launchwizard:ListDeploymentEvents",
    "launchwizard:ListDeployments",
    "launchwizard:ListProvisionedApps",
    "launchwizard:ListResourceCostEstimates",
    "launchwizard:ListSettingsSets",
    "launchwizard:ListWorkloadDeploymentOptions",
    "launchwizard:ListWorkloadDeploymentPatterns",
    "launchwizard:ListWorkloads",
    "launchwizard:PutSettingsSet",
    "launchwizard:StartProvisioning",
    "launchwizard:UpdateSettingsSet",
    "lex:CreateTestSet",
    "lex:CreateUploadUrl",
    "lex:GetBotAliases",
    "lex:GetBots",
    "lex:GetBuiltinIntent",
    "lex:GetBuiltinIntents",
    "lex:GetBuiltinSlotTypes",
    "lex:GetImport",
    "lex:GetIntents",
    "lex:GetMigration",
    "lex:GetMigrations",
    "lex:GetSlotTypes",
    "lex:ListBots",
    "lex:ListBuiltInIntents",
    "lex:ListBuiltInSlotTypes",
    "lex:ListExports",
    "lex:ListImports",
    "lex:ListTestExecutions",
    "lex:ListTestSets",
    "license-manager:CheckInLicense",
    "license-manager:CheckoutLicense",
    "license-manager:CreateLicense",
    "license-manager:CreateLicenseConfiguration",
    "license-manager:CreateLicenseConversionTaskForResource",
    "license-manager:CreateLicenseManagerReportGenerator",
    "license-manager:DeleteToken",
    "license-manager:ExtendLicenseConsumption",
    "license-manager:GetAccessToken",
    "license-manager:GetLicenseConversionTask",
    "license-manager:GetServiceSettings",
    "license-manager:ListDistributedGrants",
    "license-manager:ListLicenseConfigurations",
    "license-manager:ListLicenseConversionTasks",
    "license-manager:ListLicenseSpecificationsForResource",
    "license-manager:ListLicenses",
    "license-manager:ListReceivedGrants",
    "license-manager:ListReceivedGrantsForOrganization",
    "license-manager:ListReceivedLicenses",
    "license-manager:ListReceivedLicensesForOrganization",
    "license-manager:ListResourceInventory",
    "license-manager:ListTokens",
    "license-manager:UpdateServiceSettings",
    "license-manager-linux-subscriptions:GetServiceSettings",
    "license-manager-linux-subscriptions:ListLinuxSubscriptionInstances",
    "license-manager-linux-subscriptions:ListLinuxSubscriptions",
    "license-manager-linux-subscriptions:ListRegisteredSubscriptionProviders",
    "license-manager-linux-subscriptions:RegisterSubscriptionProvider",
    "license-manager-linux-subscriptions:UpdateServiceSettings",
    "license-manager-user-subscriptions:ListIdentityProviders",
    "license-manager-user-subscriptions:ListInstances",
    "license-manager-user-subscriptions:ListLicenseServerEndpoints",
    "license-manager-user-subscriptions:RegisterIdentityProvider",
    "lightsail:AllocateStaticIp",
    "lightsail:CopySnapshot",
    "lightsail:CreateBucket",
    "lightsail:CreateCertificate",
    "lightsail:CreateCloudFormationStack",
    "lightsail:CreateContactMethod",
    "lightsail:CreateContainerService",
    "lightsail:CreateContainerServiceRegistryLogin",
    "lightsail:CreateDisk",
    "lightsail:CreateDistribution",
    "lightsail:CreateDomain",
    "lightsail:CreateInstances",
    "lightsail:CreateKeyPair",
    "lightsail:CreateLoadBalancer",
    "lightsail:CreateRelationalDatabase",
    "lightsail:CreateRelationalDatabaseSnapshot",
    "lightsail:DeleteAutoSnapshot",
    "lightsail:DeleteContactMethod",
    "lightsail:DisableAddOn",
    "lightsail:DownloadDefaultKeyPair",
    "lightsail:EnableAddOn",
    "lightsail:GetActiveNames",
    "lightsail:GetAlarms",
    "lightsail:GetAutoSnapshots",
    "lightsail:GetBlueprints",
    "lightsail:GetBucketAccessKeys",
    "lightsail:GetBucketBundles",
    "lightsail:GetBucketMetricData",
    "lightsail:GetBuckets",
    "lightsail:GetBundles",
    "lightsail:GetCertificates",
    "lightsail:GetCloudFormationStackRecords",
    "lightsail:GetContactMethods",
    "lightsail:GetContainerAPIMetadata",
    "lightsail:GetContainerImages",
    "lightsail:GetContainerLog",
    "lightsail:GetContainerServiceDeployments",
    "lightsail:GetContainerServiceMetricData",
    "lightsail:GetContainerServicePowers",
    "lightsail:GetContainerServices",
    "lightsail:GetDisk",
    "lightsail:GetDiskSnapshot",
    "lightsail:GetDiskSnapshots",
    "lightsail:GetDisks",
    "lightsail:GetDistributionBundles",
    "lightsail:GetDistributionLatestCacheReset",
    "lightsail:GetDistributionMetricData",
    "lightsail:GetDistributions",
    "lightsail:GetDomain",
    "lightsail:GetDomains",
    "lightsail:GetExportSnapshotRecords",
    "lightsail:GetInstance",
    "lightsail:GetInstanceMetricData",
    "lightsail:GetInstancePortStates",
    "lightsail:GetInstanceSnapshot",
    "lightsail:GetInstanceSnapshots",
    "lightsail:GetInstanceState",
    "lightsail:GetInstances",
    "lightsail:GetKeyPair",
    "lightsail:GetKeyPairs",
    "lightsail:GetLoadBalancer",
    "lightsail:GetLoadBalancerMetricData",
    "lightsail:GetLoadBalancerTlsCertificates",
    "lightsail:GetLoadBalancerTlsPolicies",
    "lightsail:GetLoadBalancers",
    "lightsail:GetOperation",
    "lightsail:GetOperations",
    "lightsail:GetOperationsForResource",
    "lightsail:GetRegions",
    "lightsail:GetRelationalDatabase",
    "lightsail:GetRelationalDatabaseBlueprints",
    "lightsail:GetRelationalDatabaseBundles",
    "lightsail:GetRelationalDatabaseEvents",
    "lightsail:GetRelationalDatabaseLogEvents",
    "lightsail:GetRelationalDatabaseLogStreams",
    "lightsail:GetRelationalDatabaseMetricData",
    "lightsail:GetRelationalDatabaseParameters",
    "lightsail:GetRelationalDatabaseSnapshot",
    "lightsail:GetRelationalDatabaseSnapshots",
    "lightsail:GetRelationalDatabases",
    "lightsail:GetStaticIp",
    "lightsail:GetStaticIps",
    "lightsail:ImportKeyPair",
    "lightsail:IsVpcPeered",
    "lightsail:PeerVpc",
    "lightsail:SendContactMethodVerification",
    "lightsail:UnpeerVpc",
    "logs:CancelExportTask",
    "logs:CreateLogDelivery",
    "logs:DeleteAccountPolicy",
    "logs:DeleteIndexPolicy",
    "logs:DeleteIntegration",
    "logs:DeleteLogDelivery",
    "logs:DeleteQueryDefinition",
    "logs:DeleteResourcePolicy",
    "logs:DescribeAccountPolicies",
    "logs:DescribeConfigurationTemplates",
    "logs:DescribeDeliveries",
    "logs:DescribeDeliveryDestinations",
    "logs:DescribeDeliverySources",
    "logs:DescribeDestinations",
    "logs:DescribeExportTasks",
    "logs:DescribeFieldIndexes",
    "logs:DescribeIndexPolicies",
    "logs:DescribeLogGroups",
    "logs:DescribeQueries",
    "logs:DescribeQueryDefinitions",
    "logs:DescribeResourcePolicies",
    "logs:GetIntegration",
    "logs:GetLogDelivery",
    "logs:Link",
    "logs:ListEntitiesForLogGroup",
    "logs:ListIntegrations",
    "logs:ListLogDeliveries",
    "logs:ListLogGroupsForEntity",
    "logs:ListLogGroupsForQuery",
    "logs:PutAccountPolicy",
    "logs:PutIndexPolicy",
    "logs:PutIntegration",
    "logs:PutQueryDefinition",
    "logs:PutResourcePolicy",
    "logs:StopLiveTail",
    "logs:StopQuery",
    "logs:TestMetricFilter",
    "logs:TestTransformer",
    "logs:UpdateLogDelivery",
    "lookoutequipment:DescribeDataIngestionJob",
    "lookoutequipment:ListDatasets",
    "lookoutequipment:ListInferenceSchedulers",
    "lookoutequipment:ListModels",
    "lookoutequipment:ListRetrainingSchedulers",
    "lookoutmetrics:GetSampleData",
    "lookoutmetrics:ListAnomalyDetectors",
    "lookoutvision:CreateDataset",
    "lookoutvision:DeleteDataset",
    "lookoutvision:DescribeDataset",
    "lookoutvision:DescribeModelPackagingJob",
    "lookoutvision:DescribeTrialDetection",
    "lookoutvision:ListDatasetEntries",
    "lookoutvision:ListModelPackagingJobs",
    "lookoutvision:ListModels",
    "lookoutvision:ListProjects",
    "lookoutvision:ListTrialDetections",
    "lookoutvision:StartTrialDetection",
    "lookoutvision:UpdateDatasetEntries",
    "m2:CreateApplication",
    "m2:CreateEnvironment",
    "m2:GetSignedBluinsightsUrl",
    "m2:ListApplications",
    "m2:ListEngineVersions",
    "m2:ListEnvironments",
    "m2:ListTagsForResource",
    "machinelearning:DescribeBatchPredictions",
    "machinelearning:DescribeDataSources",
    "machinelearning:DescribeEvaluations",
    "machinelearning:DescribeMLModels",
    "macie2:AcceptInvitation",
    "macie2:BatchUpdateAutomatedDiscoveryAccounts",
    "macie2:CreateAllowList",
    "macie2:CreateInvitations",
    "macie2:CreateSampleFindings",
    "macie2:DeclineInvitations",
    "macie2:DeleteInvitations",
    "macie2:DescribeBuckets",
    "macie2:DescribeOrganizationConfiguration",
    "macie2:DisableMacie",
    "macie2:DisableOrganizationAdminAccount",
    "macie2:DisassociateFromAdministratorAccount",
    "macie2:DisassociateFromMasterAccount",
    "macie2:EnableMacie",
    "macie2:EnableOrganizationAdminAccount",
    "macie2:GetAdministratorAccount",
    "macie2:GetAutomatedDiscoveryConfiguration",
    "macie2:GetBucketStatistics",
    "macie2:GetClassificationExportConfiguration",
    "macie2:GetClassificationScope",
    "macie2:GetFindingStatistics",
    "macie2:GetFindings",
    "macie2:GetFindingsPublicationConfiguration",
    "macie2:GetInvitationsCount",
    "macie2:GetMacieSession",
    "macie2:GetMasterAccount",
    "macie2:GetResourceProfile",
    "macie2:GetRevealConfiguration",
    "macie2:GetSensitiveDataOccurrences",
    "macie2:GetSensitiveDataOccurrencesAvailability",
    "macie2:GetSensitivityInspectionTemplate",
    "macie2:GetUsageStatistics",
    "macie2:GetUsageTotals",
    "macie2:ListAllowLists",
    "macie2:ListAutomatedDiscoveryAccounts",
    "macie2:ListClassificationJobs",
    "macie2:ListClassificationScopes",
    "macie2:ListCustomDataIdentifiers",
    "macie2:ListFindings",
    "macie2:ListFindingsFilters",
    "macie2:ListInvitations",
    "macie2:ListManagedDataIdentifiers",
    "macie2:ListMembers",
    "macie2:ListOrganizationAdminAccounts",
    "macie2:ListResourceProfileArtifacts",
    "macie2:ListResourceProfileDetections",
    "macie2:ListSensitivityInspectionTemplates",
    "macie2:PutClassificationExportConfiguration",
    "macie2:PutFindingsPublicationConfiguration",
    "macie2:SearchResources",
    "macie2:TestCustomDataIdentifier",
    "macie2:UpdateAutomatedDiscoveryConfiguration",
    "macie2:UpdateClassificationScope",
    "macie2:UpdateMacieSession",
    "macie2:UpdateMemberSession",
    "macie2:UpdateOrganizationConfiguration",
    "macie2:UpdateResourceProfile",
    "macie2:UpdateResourceProfileDetections",
    "macie2:UpdateRevealConfiguration",
    "macie2:UpdateSensitivityInspectionTemplate",
    "managedblockchain:CreateAccessor",
    "managedblockchain:CreateNetwork",
    "managedblockchain:GET",
    "managedblockchain:Invoke",
    "managedblockchain:InvokeRpcBitcoinMainnet",
    "managedblockchain:InvokeRpcBitcoinTestnet",
    "managedblockchain:InvokeRpcPolygonMainnet",
    "managedblockchain:InvokeRpcPolygonMumbaiTestnet",
    "managedblockchain:ListAccessors",
    "managedblockchain:ListInvitations",
    "managedblockchain:ListNetworks",
    "managedblockchain:POST",
    "managedblockchain-query:BatchGetTokenBalance",
    "managedblockchain-query:GetAssetContract",
    "managedblockchain-query:GetTokenBalance",
    "managedblockchain-query:GetTransaction",
    "managedblockchain-query:ListAssetContracts",
    "managedblockchain-query:ListFilteredTransactionEvents",
    "managedblockchain-query:ListTokenBalances",
    "managedblockchain-query:ListTransactionEvents",
    "managedblockchain-query:ListTransactions",
    "marketplacecommerceanalytics:GenerateDataSet",
    "marketplacecommerceanalytics:StartSupportDataExport",
    "mechanicalturk:AcceptQualificationRequest",
    "mechanicalturk:ApproveAssignment",
    "mechanicalturk:AssociateQualificationWithWorker",
    "mechanicalturk:CreateAdditionalAssignmentsForHIT",
    "mechanicalturk:CreateHIT",
    "mechanicalturk:CreateHITType",
    "mechanicalturk:CreateHITWithHITType",
    "mechanicalturk:CreateQualificationType",
    "mechanicalturk:CreateWorkerBlock",
    "mechanicalturk:DeleteHIT",
    "mechanicalturk:DeleteQualificationType",
    "mechanicalturk:DeleteWorkerBlock",
    "mechanicalturk:DisassociateQualificationFromWorker",
    "mechanicalturk:GetAccountBalance",
    "mechanicalturk:GetAssignment",
    "mechanicalturk:GetFileUploadURL",
    "mechanicalturk:GetHIT",
    "mechanicalturk:GetQualificationScore",
    "mechanicalturk:GetQualificationType",
    "mechanicalturk:ListAssignmentsForHIT",
    "mechanicalturk:ListBonusPayments",
    "mechanicalturk:ListHITs",
    "mechanicalturk:ListHITsForQualificationType",
    "mechanicalturk:ListQualificationRequests",
    "mechanicalturk:ListQualificationTypes",
    "mechanicalturk:ListReviewPolicyResultsForHIT",
    "mechanicalturk:ListReviewableHITs",
    "mechanicalturk:ListWorkerBlocks",
    "mechanicalturk:ListWorkersWithQualificationType",
    "mechanicalturk:NotifyWorkers",
    "mechanicalturk:RejectAssignment",
    "mechanicalturk:RejectQualificationRequest",
    "mechanicalturk:SendBonus",
    "mechanicalturk:SendTestEventNotification",
    "mechanicalturk:UpdateExpirationForHIT",
    "mechanicalturk:UpdateHITReviewStatus",
    "mechanicalturk:UpdateHITTypeOfHIT",
    "mechanicalturk:UpdateNotificationSettings",
    "mechanicalturk:UpdateQualificationType",
    "mediaconnect:AddFlowMediaStreams",
    "mediaconnect:AddFlowOutputs",
    "mediaconnect:AddFlowSources",
    "mediaconnect:AddFlowVpcInterfaces",
    "mediaconnect:CreateFlow",
    "mediaconnect:DeleteFlow",
    "mediaconnect:DescribeFlow",
    "mediaconnect:DescribeFlowSourceMetadata",
    "mediaconnect:DescribeFlowSourceThumbnail",
    "mediaconnect:DescribeOffering",
    "mediaconnect:DescribeReservation",
    "mediaconnect:DiscoverGatewayPollEndpoint",
    "mediaconnect:GrantFlowEntitlements",
    "mediaconnect:ListEntitlements",
    "mediaconnect:ListFlows",
    "mediaconnect:ListGateways",
    "mediaconnect:ListOfferings",
    "mediaconnect:ListReservations",
    "mediaconnect:ListTagsForResource",
    "mediaconnect:PollGateway",
    "mediaconnect:PurchaseOffering",
    "mediaconnect:RemoveFlowMediaStream",
    "mediaconnect:RemoveFlowOutput",
    "mediaconnect:RemoveFlowSource",
    "mediaconnect:RemoveFlowVpcInterface",
    "mediaconnect:RevokeFlowEntitlement",
    "mediaconnect:StartFlow",
    "mediaconnect:StopFlow",
    "mediaconnect:SubmitGatewayStateChange",
    "mediaconnect:TagResource",
    "mediaconnect:UntagResource",
    "mediaconnect:UpdateFlow",
    "mediaconnect:UpdateFlowEntitlement",
    "mediaconnect:UpdateFlowMediaStream",
    "mediaconnect:UpdateFlowOutput",
    "mediaconnect:UpdateFlowSource",
    "mediaconvert:AssociateCertificate",
    "mediaconvert:CreatePreset",
    "mediaconvert:CreateQueue",
    "mediaconvert:DeletePolicy",
    "mediaconvert:DescribeEndpoints",
    "mediaconvert:DisassociateCertificate",
    "mediaconvert:GetPolicy",
    "mediaconvert:ListJobTemplates",
    "mediaconvert:ListPresets",
    "mediaconvert:ListQueues",
    "mediaconvert:ListVersions",
    "mediaconvert:PutPolicy",
    "mediaimport:CreateDatabaseBinarySnapshot",
    "medialive:BatchDelete",
    "medialive:BatchStart",
    "medialive:BatchStop",
    "medialive:DescribeAccountConfiguration",
    "medialive:ListChannelPlacementGroups",
    "medialive:ListChannels",
    "medialive:ListCloudWatchAlarmTemplateGroups",
    "medialive:ListCloudWatchAlarmTemplates",
    "medialive:ListClusters",
    "medialive:ListEventBridgeRuleTemplateGroups",
    "medialive:ListEventBridgeRuleTemplates",
    "medialive:ListInputDeviceTransfers",
    "medialive:ListInputDevices",
    "medialive:ListInputSecurityGroups",
    "medialive:ListInputs",
    "medialive:ListMultiplexPrograms",
    "medialive:ListMultiplexes",
    "medialive:ListNetworks",
    "medialive:ListNodes",
    "medialive:ListOfferings",
    "medialive:ListReservations",
    "medialive:ListSignalMaps",
    "medialive:ListVersions",
    "medialive:PollAnywhere",
    "medialive:SubmitAnywhereStateChange",
    "medialive:UpdateAccountConfiguration",
    "mediapackage:CreateChannel",
    "mediapackage:CreateHarvestJob",
    "mediapackage:CreateOriginEndpoint",
    "mediapackage:ListChannels",
    "mediapackage:ListHarvestJobs",
    "mediapackage:ListOriginEndpoints",
    "mediapackage-vod:CreateAsset",
    "mediapackage-vod:CreatePackagingConfiguration",
    "mediapackage-vod:CreatePackagingGroup",
    "mediapackage-vod:ListAssets",
    "mediapackage-vod:ListPackagingConfigurations",
    "mediapackage-vod:ListPackagingGroups",
    "mediapackagev2:ListChannelGroups",
    "mediastore:CreateContainer",
    "mediastore:ListContainers",
    "mediatailor:CreateChannel",
    "mediatailor:CreateLiveSource",
    "mediatailor:CreateProgram",
    "mediatailor:CreateSourceLocation",
    "mediatailor:CreateVodSource",
    "mediatailor:ListAlerts",
    "mediatailor:ListChannels",
    "mediatailor:ListLiveSources",
    "mediatailor:ListPlaybackConfigurations",
    "mediatailor:ListSourceLocations",
    "mediatailor:ListVodSources",
    "mediatailor:PutPlaybackConfiguration",
    "medical-imaging:CreateDatastore",
    "medical-imaging:ListDatastores",
    "memorydb:CreateParameterGroup",
    "memorydb:CreateSubnetGroup",
    "memorydb:CreateUser",
    "memorydb:DescribeEngineVersions",
    "memorydb:DescribeEvents",
    "memorydb:DescribeReservedNodesOfferings",
    "memorydb:DescribeServiceUpdates",
    "mgh:CreateAutomationRun",
    "mgh:CreateAutomationUnit",
    "mgh:CreateHomeRegionControl",
    "mgh:DeleteHomeRegionControl",
    "mgh:DescribeApplicationState",
    "mgh:DescribeHomeRegionControls",
    "mgh:GetHomeRegion",
    "mgh:ListApplicationStates",
    "mgh:ListAutomationRuns",
    "mgh:ListAutomationUnits",
    "mgh:ListConnections",
    "mgh:ListMigrationTasks",
    "mgh:ListProgressUpdateStreams",
    "mgh:ListTagsForResource",
    "mgh:NotifyApplicationState",
    "mgh:TagResource",
    "mgh:UntagResource",
    "mgn:BatchDeleteSnapshotRequestForMgn",
    "mgn:CreateApplication",
    "mgn:CreateConnector",
    "mgn:CreateLaunchConfigurationTemplate",
    "mgn:CreateNetworkMigrationDefinition",
    "mgn:CreateReplicationConfigurationTemplate",
    "mgn:CreateVcenterClientForMgn",
    "mgn:CreateWave",
    "mgn:DescribeJobs",
    "mgn:DescribeLaunchConfigurationTemplates",
    "mgn:DescribeReplicationConfigurationTemplates",
    "mgn:DescribeReplicationServerAssociationsForMgn",
    "mgn:DescribeSnapshotRequestsForMgn",
    "mgn:DescribeSourceServers",
    "mgn:DescribeVcenterClients",
    "mgn:GetAgentInstallationAssetsForMgn",
    "mgn:GetChannelCommandsForMgn",
    "mgn:InitializeService",
    "mgn:ListApplications",
    "mgn:ListConnectors",
    "mgn:ListExports",
    "mgn:ListImports",
    "mgn:ListManagedAccounts",
    "mgn:ListNetworkMigrationDefinitions",
    "mgn:ListTagsForResource",
    "mgn:ListWaves",
    "mgn:RegisterAgentForMgn",
    "mgn:SendChannelCommandResultForMgn",
    "mgn:SendClientLogsForMgn",
    "mgn:SendClientMetricsForMgn",
    "mgn:StartExport",
    "mgn:StartImport",
    "mgn:VerifyClientRoleForMgn",
    "migrationhub-orchestrator:CreateTemplate",
    "migrationhub-orchestrator:GetMessage",
    "migrationhub-orchestrator:ListPlugins",
    "migrationhub-orchestrator:ListTemplates",
    "migrationhub-orchestrator:ListWorkflows",
    "migrationhub-orchestrator:RegisterPlugin",
    "migrationhub-orchestrator:SendMessage",
    "migrationhub-strategy:GetAntiPattern",
    "migrationhub-strategy:GetApplicationComponentDetails",
    "migrationhub-strategy:GetApplicationComponentStrategies",
    "migrationhub-strategy:GetAssessment",
    "migrationhub-strategy:GetImportFileTask",
    "migrationhub-strategy:GetLatestAssessmentId",
    "migrationhub-strategy:GetMessage",
    "migrationhub-strategy:GetPortfolioPreferences",
    "migrationhub-strategy:GetPortfolioSummary",
    "migrationhub-strategy:GetRecommendationReportDetails",
    "migrationhub-strategy:GetServerDetails",
    "migrationhub-strategy:GetServerStrategies",
    "migrationhub-strategy:ListAnalyzableServers",
    "migrationhub-strategy:ListAntiPatterns",
    "migrationhub-strategy:ListApplicationComponents",
    "migrationhub-strategy:ListCollectors",
    "migrationhub-strategy:ListImportFileTask",
    "migrationhub-strategy:ListJarArtifacts",
    "migrationhub-strategy:ListServers",
    "migrationhub-strategy:PutLogData",
    "migrationhub-strategy:PutMetricData",
    "migrationhub-strategy:PutPortfolioPreferences",
    "migrationhub-strategy:RegisterCollector",
    "migrationhub-strategy:SendMessage",
    "migrationhub-strategy:StartAssessment",
    "migrationhub-strategy:StartImportFileTask",
    "migrationhub-strategy:StartRecommendationReportGeneration",
    "migrationhub-strategy:StopAssessment",
    "migrationhub-strategy:UpdateApplicationComponentConfig",
    "migrationhub-strategy:UpdateCollectorConfiguration",
    "migrationhub-strategy:UpdateServerConfig",
    "mobileanalytics:GetFinancialReports",
    "mobileanalytics:GetReports",
    "mobileanalytics:PutEvents",
    "monitron:CreateProject",
    "monitron:ListProjects",
    "mq:CreateBroker",
    "mq:CreateConfiguration",
    "mq:DescribeBrokerEngineTypes",
    "mq:DescribeBrokerInstanceOptions",
    "mq:ListBrokers",
    "mq:ListConfigurations",
    "network-firewall:ListRuleGroups",
    "networkflowmonitor:CreateScope",
    "networkflowmonitor:ListMonitors",
    "networkflowmonitor:ListScopes",
    "networkflowmonitor:Publish",
    "networkmanager:CreateGlobalNetwork",
    "networkmanager:ListCoreNetworks",
    "networkmanager:ListOrganizationServiceAccessStatus",
    "networkmanager:ListPeerings",
    "networkmanager:StartOrganizationServiceAccessUpdate",
    "networkmanager-chat:CancelMessageResponse",
    "networkmanager-chat:CreateConversation",
    "networkmanager-chat:DeleteConversation",
    "networkmanager-chat:ListConversationMessages",
    "networkmanager-chat:ListConversations",
    "networkmanager-chat:NotifyConversationIsActive",
    "networkmanager-chat:SendConversationMessage",
    "networkmonitor:CreateProbe",
    "networkmonitor:ListMonitors",
    "nimble:GetFeatureMap",
    "nimble:ListStudios",
    "notifications:CreateEventRule",
    "notifications:CreateNotificationConfiguration",
    "notifications:DeregisterNotificationHub",
    "notifications:DisableNotificationsAccessForOrganization",
    "notifications:EnableNotificationsAccessForOrganization",
    "notifications:GetFeatureOptInStatus",
    "notifications:GetNotificationsAccessForOrganization",
    "notifications:ListEventRules",
    "notifications:ListManagedNotificationChildEvents",
    "notifications:ListManagedNotificationConfigurations",
    "notifications:ListManagedNotificationEvents",
    "notifications:ListNotificationConfigurations",
    "notifications:ListNotificationEvents",
    "notifications:ListNotificationHubs",
    "notifications:ListTagsForResource",
    "notifications:PutFeatureOptInStatus",
    "notifications:RegisterNotificationHub",
    "notifications-contacts:CreateEmailContact",
    "notifications-contacts:ListEmailContacts",
    "notifications-contacts:ListTagsForResource",
    "oam:CreateSink",
    "oam:ListLinks",
    "oam:ListSinks",
    "observabilityadmin:GetTelemetryEvaluationStatus",
    "observabilityadmin:GetTelemetryEvaluationStatusForOrganization",
    "observabilityadmin:ListResourceTelemetry",
    "observabilityadmin:ListResourceTelemetryForOrganization",
    "observabilityadmin:StartTelemetryEvaluation",
    "observabilityadmin:StartTelemetryEvaluationForOrganization",
    "observabilityadmin:StopTelemetryEvaluation",
    "observabilityadmin:StopTelemetryEvaluationForOrganization",
    "omics:AcceptShare",
    "omics:CancelAnnotationImportJob",
    "omics:CancelVariantImportJob",
    "omics:CreateAnnotationStore",
    "omics:CreateReferenceStore",
    "omics:CreateRunCache",
    "omics:CreateRunGroup",
    "omics:CreateSequenceStore",
    "omics:CreateShare",
    "omics:CreateVariantStore",
    "omics:CreateWorkflow",
    "omics:DeleteShare",
    "omics:GetAnnotationImportJob",
    "omics:GetShare",
    "omics:GetVariantImportJob",
    "omics:ListAnnotationImportJobs",
    "omics:ListAnnotationStores",
    "omics:ListReferenceStores",
    "omics:ListRunCaches",
    "omics:ListRunGroups",
    "omics:ListRuns",
    "omics:ListSequenceStores",
    "omics:ListShares",
    "omics:ListTagsForResource",
    "omics:ListVariantImportJobs",
    "omics:ListVariantStores",
    "omics:ListWorkflows",
    "one:CreateDeviceConfigurationTemplate",
    "one:CreateDeviceInstance",
    "one:CreateSite",
    "one:ListDeviceConfigurationTemplates",
    "one:ListDeviceInstances",
    "one:ListSites",
    "one:ListUsers",
    "opsworks:CreateStack",
    "opsworks:CreateUserProfile",
    "opsworks:DeleteUserProfile",
    "opsworks:DescribeMyUserProfile",
    "opsworks:DescribeOperatingSystems",
    "opsworks:DescribeUserProfiles",
    "opsworks:UpdateMyUserProfile",
    "opsworks:UpdateUserProfile",
    "opsworks-cm:AssociateNode",
    "opsworks-cm:CreateBackup",
    "opsworks-cm:CreateServer",
    "opsworks-cm:DeleteBackup",
    "opsworks-cm:DeleteServer",
    "opsworks-cm:DescribeAccountAttributes",
    "opsworks-cm:DescribeBackups",
    "opsworks-cm:DescribeEvents",
    "opsworks-cm:DescribeNodeAssociationStatus",
    "opsworks-cm:DescribeServers",
    "opsworks-cm:DisassociateNode",
    "opsworks-cm:ExportServerEngineAttribute",
    "opsworks-cm:ListTagsForResource",
    "opsworks-cm:RestoreServer",
    "opsworks-cm:StartMaintenance",
    "opsworks-cm:TagResource",
    "opsworks-cm:UntagResource",
    "opsworks-cm:UpdateServer",
    "opsworks-cm:UpdateServerEngineAttributes",
    "organizations:CreateAccount",
    "organizations:CreateGovCloudAccount",
    "organizations:CreateOrganization",
    "organizations:CreatePolicy",
    "organizations:DeleteOrganization",
    "organizations:DeleteResourcePolicy",
    "organizations:DescribeCreateAccountStatus",
    "organizations:DescribeOrganization",
    "organizations:DescribeResourcePolicy",
    "organizations:DisableAWSServiceAccess",
    "organizations:EnableAWSServiceAccess",
    "organizations:EnableAllFeatures",
    "organizations:LeaveOrganization",
    "organizations:ListAWSServiceAccessForOrganization",
    "organizations:ListAccounts",
    "organizations:ListCreateAccountStatus",
    "organizations:ListDelegatedAdministrators",
    "organizations:ListHandshakesForAccount",
    "organizations:ListHandshakesForOrganization",
    "organizations:ListPolicies",
    "organizations:ListRoots",
    "osis:CreatePipeline",
    "osis:ListPipelineBlueprints",
    "osis:ListPipelines",
    "osis:ValidatePipeline",
    "outposts:CancelOrder",
    "outposts:CreatePrivateConnectivityConfig",
    "outposts:CreateSite",
    "outposts:GetCatalogItem",
    "outposts:GetConnection",
    "outposts:GetOrder",
    "outposts:GetPrivateConnectivityConfig",
    "outposts:ListAssets",
    "outposts:ListCapacityTasks",
    "outposts:ListCatalogItems",
    "outposts:ListOrders",
    "outposts:ListOutposts",
    "outposts:ListSites",
    "outposts:ListTagsForResource",
    "outposts:StartConnection",
    "panorama:CreateApplicationInstance",
    "panorama:CreateJobForDevices",
    "panorama:CreateNodeFromTemplateJob",
    "panorama:CreatePackage",
    "panorama:CreatePackageImportJob",
    "panorama:DescribeDeviceJob",
    "panorama:DescribeNode",
    "panorama:DescribeNodeFromTemplateJob",
    "panorama:DescribePackageImportJob",
    "panorama:DescribeSoftware",
    "panorama:GetWebSocketURL",
    "panorama:ListDevices",
    "panorama:ListNodeFromTemplateJobs",
    "panorama:ListNodes",
    "panorama:ListPackageImportJobs",
    "panorama:ListPackages",
    "panorama:ProvisionDevice",
    "partnercentral:CreateEngagement",
    "partnercentral:CreateEngagementInvitation",
    "partnercentral:CreateOpportunity",
    "partnercentral:CreateResourceSnapshotJob",
    "partnercentral:GetSellingSystemSettings",
    "partnercentral:ListEngagementByAcceptingInvitationTasks",
    "partnercentral:ListEngagementFromOpportunityTasks",
    "partnercentral:ListEngagementInvitations",
    "partnercentral:ListEngagements",
    "partnercentral:ListOpportunities",
    "partnercentral:ListResourceSnapshotJobs",
    "partnercentral:ListSolutions",
    "partnercentral:ListTagsForResource",
    "partnercentral:PutSellingSystemSettings",
    "partnercentral:StartEngagementByAcceptingInvitationTask",
    "partnercentral:StartEngagementFromOpportunityTask",
    "partnercentral:TagResource",
    "partnercentral:UntagResource",
    "partnercentral-account-management:AssociatePartnerAccount",
    "partnercentral-account-management:AssociatePartnerUser",
    "partnercentral-account-management:DisassociatePartnerUser",
    "payment-cryptography:CreateKey",
    "payment-cryptography:DecryptData",
    "payment-cryptography:EncryptData",
    "payment-cryptography:GenerateCardValidationData",
    "payment-cryptography:GenerateMac",
    "payment-cryptography:GeneratePinData",
    "payment-cryptography:GetParametersForExport",
    "payment-cryptography:GetParametersForImport",
    "payment-cryptography:ImportKey",
    "payment-cryptography:ListAliases",
    "payment-cryptography:ListKeys",
    "payment-cryptography:ReEncryptData",
    "payment-cryptography:TranslatePinData",
    "payment-cryptography:VerifyAuthRequestCryptogram",
    "payment-cryptography:VerifyCardValidationData",
    "payment-cryptography:VerifyMac",
    "payment-cryptography:VerifyPinData",
    "payments:AcceptFinancingApplicationTerms",
    "payments:CreateFinancingApplication",
    "payments:CreatePaymentInstrument",
    "payments:DeletePaymentInstrument",
    "payments:GetFinancingApplication",
    "payments:GetFinancingLine",
    "payments:GetFinancingLineWithdrawal",
    "payments:GetFinancingOption",
    "payments:GetPaymentStatus",
    "payments:ListFinancingApplications",
    "payments:ListFinancingLineWithdrawals",
    "payments:ListFinancingLines",
    "payments:ListPaymentInstruments",
    "payments:ListPaymentPreferences",
    "payments:ListPaymentProgramOptions",
    "payments:ListPaymentProgramStatus",
    "payments:MakePayment",
    "payments:UpdateFinancingApplication",
    "payments:UpdatePaymentInstrument",
    "payments:UpdatePaymentPreferences",
    "pca-connector-ad:CreateConnector",
    "pca-connector-ad:CreateDirectoryRegistration",
    "pca-connector-ad:ListConnectors",
    "pca-connector-ad:ListDirectoryRegistrations",
    "pca-connector-ad:ListTagsForResource",
    "pca-connector-scep:CreateChallenge",
    "pca-connector-scep:CreateConnector",
    "pca-connector-scep:ListChallengeMetadata",
    "pca-connector-scep:ListConnectors",
    "pca-connector-scep:ListTagsForResource",
    "pcs:CreateCluster",
    "pcs:ListClusters",
    "pcs:ListTagsForResource",
    "personalize:ListBatchInferenceJobs",
    "personalize:ListBatchSegmentJobs",
    "personalize:ListCampaigns",
    "personalize:ListDataDeletionJobs",
    "personalize:ListDataInsightsJobs",
    "personalize:ListDatasetExportJobs",
    "personalize:ListDatasetGroups",
    "personalize:ListDatasetImportJobs",
    "personalize:ListDatasets",
    "personalize:ListEventTrackers",
    "personalize:ListFilters",
    "personalize:ListMetricAttributionMetrics",
    "personalize:ListMetricAttributions",
    "personalize:ListRecipes",
    "personalize:ListRecommenders",
    "personalize:ListSchemas",
    "personalize:ListSolutionVersions",
    "personalize:ListSolutions",
    "personalize:ListTagsForResource",
    "personalize:PutActionInteractions",
    "personalize:PutEvents",
    "personalize:TagResource",
    "personalize:UntagResource",
    "pipes:ListPipes",
    "polly:DescribeVoices",
    "polly:GetSpeechSynthesisTask",
    "polly:ListLexicons",
    "polly:ListSpeechSynthesisTasks",
    "pricing:DescribeServices",
    "pricing:GetAttributeValues",
    "pricing:GetPriceListFileUrl",
    "pricing:GetProducts",
    "pricing:ListPriceLists",
    "private-networks:ListNetworks",
    "private-networks:ListTagsForResource",
    "private-networks:Ping",
    "profile:GetProfileObjectTypeTemplate",
    "profile:ListAccountIntegrations",
    "profile:ListDomains",
    "profile:ListProfileObjectTypeTemplates",
    "proton:CreateEnvironmentAccountConnection",
    "proton:CreateServiceSyncConfig",
    "proton:CreateTemplateSyncConfig",
    "proton:DeleteAccountRoles",
    "proton:DeleteServiceSyncConfig",
    "proton:DeleteTemplateSyncConfig",
    "proton:GetAccountRoles",
    "proton:GetAccountSettings",
    "proton:GetRepositorySyncStatus",
    "proton:GetResourceTemplateVersionStatusCounts",
    "proton:GetResourcesSummary",
    "proton:GetServiceInstanceSyncStatus",
    "proton:GetServiceSyncBlockerSummary",
    "proton:GetServiceSyncConfig",
    "proton:GetTemplateSyncConfig",
    "proton:GetTemplateSyncStatus",
    "proton:ListDeployments",
    "proton:ListEnvironmentAccountConnections",
    "proton:ListEnvironmentTemplates",
    "proton:ListEnvironments",
    "proton:ListRepositories",
    "proton:ListRepositorySyncDefinitions",
    "proton:ListServiceInstances",
    "proton:ListServiceTemplates",
    "proton:ListServices",
    "proton:UpdateAccountRoles",
    "proton:UpdateAccountSettings",
    "proton:UpdateServiceSyncBlocker",
    "proton:UpdateServiceSyncConfig",
    "proton:UpdateTemplateSyncConfig",
    "purchase-orders:GetConsoleActionSetEnforced",
    "purchase-orders:ListPurchaseOrders",
    "purchase-orders:UpdateConsoleActionSetEnforced",
    "q:AssociateConnectorResource",
    "q:CreateAuthGrant",
    "q:CreateOAuthAppConnection",
    "q:GenerateCodeFromCommands",
    "q:GetConnector",
    "q:GetConversation",
    "q:GetIdentityMetadata",
    "q:GetTroubleshootingResults",
    "q:ListConversations",
    "q:ListDashboardMetrics",
    "q:ListPluginProviders",
    "q:PassRequest",
    "q:RejectConnector",
    "q:SendEvent",
    "q:SendMessage",
    "q:StartConversation",
    "q:StartTroubleshootingAnalysis",
    "q:StartTroubleshootingResolutionExplanation",
    "q:UpdateAuthGrant",
    "q:UpdateOAuthAppConnection",
    "q:UpdateTroubleshootingCommandResult",
    "qbusiness:AddUserLicenses",
    "qbusiness:CreateApplication",
    "qbusiness:CreateLicense",
    "qbusiness:ListApplications",
    "qbusiness:ListPluginTypeActions",
    "qbusiness:ListPluginTypeMetadata",
    "qbusiness:ListUserLicenses",
    "qbusiness:RemoveUserLicenses",
    "qdeveloper:StartAgentSession",
    "qldb:ListJournalS3Exports",
    "qldb:ListLedgers",
    "quicksight:AccountConfigurations",
    "quicksight:CreateAccountCustomization",
    "quicksight:CreateAccountSubscription",
    "quicksight:CreateDataSource",
    "quicksight:CreateRoleMembership",
    "quicksight:CreateVPCConnection",
    "quicksight:DeleteBrandAssignment",
    "quicksight:DeleteCustomPermissions",
    "quicksight:DeleteDefaultQBusinessApplication",
    "quicksight:DeleteIdentityPropagationConfig",
    "quicksight:DeleteRoleCustomPermission",
    "quicksight:DeleteRoleMembership",
    "quicksight:DescribeAccountSettings",
    "quicksight:DescribeBrandAssignment",
    "quicksight:DescribeDashboardsQAConfiguration",
    "quicksight:DescribeDefaultQBusinessApplication",
    "quicksight:DescribeIpRestriction",
    "quicksight:DescribeKeyRegistration",
    "quicksight:DescribeQPersonalizationConfiguration",
    "quicksight:DescribeQuickSightQSearchConfiguration",
    "quicksight:DescribeRoleCustomPermission",
    "quicksight:GenerateEmbedUrlForRegisteredUserWithIdentity",
    "quicksight:GetAnonymousUserEmbedUrl",
    "quicksight:GetGroupMapping",
    "quicksight:GetSessionEmbedUrl",
    "quicksight:ListBrands",
    "quicksight:ListCustomPermissions",
    "quicksight:ListCustomerManagedKeys",
    "quicksight:ListDataSets",
    "quicksight:ListDataSources",
    "quicksight:ListIdentityPropagationConfigs",
    "quicksight:ListIngestions",
    "quicksight:ListKMSKeysForUser",
    "quicksight:ListNamespaces",
    "quicksight:ListRefreshSchedules",
    "quicksight:ListRoleMemberships",
    "quicksight:ListTopicRefreshSchedules",
    "quicksight:ListTopicReviewedAnswers",
    "quicksight:ListTopics",
    "quicksight:ListVPCConnections",
    "quicksight:RegisterCustomerManagedKey",
    "quicksight:RemoveCustomerManagedKey",
    "quicksight:ScopeDownPolicy",
    "quicksight:SearchDirectoryGroups",
    "quicksight:SetGroupMapping",
    "quicksight:StartDashboardSnapshotJobSchedule",
    "quicksight:Subscribe",
    "quicksight:Unsubscribe",
    "quicksight:UpdateAccountSettings",
    "quicksight:UpdateApplicationWithTokenExchangeGrant",
    "quicksight:UpdateBrandAssignment",
    "quicksight:UpdateDashboardsQAConfiguration",
    "quicksight:UpdateDefaultQBusinessApplication",
    "quicksight:UpdateIdentityPropagationConfig",
    "quicksight:UpdateIpRestriction",
    "quicksight:UpdateKeyRegistration",
    "quicksight:UpdatePublicSharingSettings",
    "quicksight:UpdateQPersonalizationConfiguration",
    "quicksight:UpdateQuickSightQSearchConfiguration",
    "quicksight:UpdateResourcePermissions",
    "quicksight:UpdateRoleCustomPermission",
    "quicksight:UpdateSPICECapacityConfiguration",
    "ram:CreatePermission",
    "ram:CreateResourceShare",
    "ram:EnableSharingWithAwsOrganization",
    "ram:GetResourcePolicies",
    "ram:GetResourceShareAssociations",
    "ram:GetResourceShareInvitations",
    "ram:GetResourceShares",
    "ram:ListPermissionVersions",
    "ram:ListPermissions",
    "ram:ListPrincipals",
    "ram:ListReplacePermissionAssociationsWork",
    "ram:ListResourceTypes",
    "ram:ListResources",
    "rbin:ListRules",
    "rds:CancelExportTask",
    "rds:CreateDBProxy",
    "rds:CrossRegionCommunication",
    "rds:DescribeAccountAttributes",
    "rds:DescribeCertificates",
    "rds:DescribeDBEngineVersions",
    "rds:DescribeDBRecommendations",
    "rds:DescribeEngineDefaultClusterParameters",
    "rds:DescribeEngineDefaultParameters",
    "rds:DescribeEventCategories",
    "rds:DescribeEvents",
    "rds:DescribeOptionGroupOptions",
    "rds:DescribeOrderableDBInstanceOptions",
    "rds:DescribeRecommendationGroups",
    "rds:DescribeRecommendations",
    "rds:DescribeReservedDBInstancesOfferings",
    "rds:DescribeSourceRegions",
    "rds:ModifyCertificates",
    "rds:ModifyDBRecommendation",
    "rds:ModifyRecommendation",
    "redshift:AcceptReservedNodeExchange",
    "redshift:AddPartner",
    "redshift:AuthorizeEndpointAccess",
    "redshift:CancelQuery",
    "redshift:CancelQuerySession",
    "redshift:CreateAuthenticationProfile",
    "redshift:CreateEndpointAccess",
    "redshift:CreateInboundIntegration",
    "redshift:CreateQev2IdcApplication",
    "redshift:CreateRedshiftIdcApplication",
    "redshift:CreateSavedQuery",
    "redshift:CreateScheduledAction",
    "redshift:DeleteAuthenticationProfile",
    "redshift:DeleteEndpointAccess",
    "redshift:DeletePartner",
    "redshift:DeleteSavedQueries",
    "redshift:DeleteScheduledAction",
    "redshift:DeregisterNamespace",
    "redshift:DescribeAccountAttributes",
    "redshift:DescribeAuthenticationProfiles",
    "redshift:DescribeClusterDbRevisions",
    "redshift:DescribeClusterParameterGroups",
    "redshift:DescribeClusterSecurityGroups",
    "redshift:DescribeClusterSnapshots",
    "redshift:DescribeClusterSubnetGroups",
    "redshift:DescribeClusterTracks",
    "redshift:DescribeClusterVersions",
    "redshift:DescribeClusters",
    "redshift:DescribeCustomDomainAssociations",
    "redshift:DescribeDataShares",
    "redshift:DescribeDataSharesForConsumer",
    "redshift:DescribeDataSharesForProducer",
    "redshift:DescribeDefaultClusterParameters",
    "redshift:DescribeEndpointAccess",
    "redshift:DescribeEndpointAuthorization",
    "redshift:DescribeEventCategories",
    "redshift:DescribeEventSubscriptions",
    "redshift:DescribeEvents",
    "redshift:DescribeHsmClientCertificates",
    "redshift:DescribeHsmConfigurations",
    "redshift:DescribeInboundIntegrations",
    "redshift:DescribeNodeConfigurationOptions",
    "redshift:DescribeOrderableClusterOptions",
    "redshift:DescribePartners",
    "redshift:DescribeQev2IdcApplications",
    "redshift:DescribeQuery",
    "redshift:DescribeRedshiftIdcApplications",
    "redshift:DescribeReservedNodeExchangeStatus",
    "redshift:DescribeReservedNodeOfferings",
    "redshift:DescribeReservedNodes",
    "redshift:DescribeSavedQueries",
    "redshift:DescribeScheduledActions",
    "redshift:DescribeSnapshotCopyGrants",
    "redshift:DescribeStorage",
    "redshift:DescribeTable",
    "redshift:DescribeTableRestoreStatus",
    "redshift:ExecuteQuery",
    "redshift:FetchResults",
    "redshift:GetReservedNodeExchangeConfigurationOptions",
    "redshift:GetReservedNodeExchangeOfferings",
    "redshift:ListDatabases",
    "redshift:ListRecommendations",
    "redshift:ListSavedQueries",
    "redshift:ListSchemas",
    "redshift:ListTables",
    "redshift:ModifyAuthenticationProfile",
    "redshift:ModifyClusterMaintenance",
    "redshift:ModifyEndpointAccess",
    "redshift:ModifySavedQuery",
    "redshift:ModifyScheduledAction",
    "redshift:PurchaseReservedNodeOffering",
    "redshift:RegisterNamespace",
    "redshift:RevokeEndpointAccess",
    "redshift:UpdatePartnerStatus",
    "redshift:ViewQueriesFromConsole",
    "redshift:ViewQueriesInConsole",
    "redshift-data:CancelStatement",
    "redshift-data:DescribeStatement",
    "redshift-data:GetStatementResult",
    "redshift-data:ListStatements",
    "redshift-serverless:CreateUsageLimit",
    "redshift-serverless:DeleteResourcePolicy",
    "redshift-serverless:DeleteScheduledAction",
    "redshift-serverless:DeleteSnapshotCopyConfiguration",
    "redshift-serverless:DeleteUsageLimit",
    "redshift-serverless:DescribeOneTimeCredit",
    "redshift-serverless:GetResourcePolicy",
    "redshift-serverless:GetScheduledAction",
    "redshift-serverless:GetTableRestoreStatus",
    "redshift-serverless:GetTrack",
    "redshift-serverless:GetUsageLimit",
    "redshift-serverless:ListCustomDomainAssociations",
    "redshift-serverless:ListManagedWorkgroups",
    "redshift-serverless:ListNamespaces",
    "redshift-serverless:ListScheduledActions",
    "redshift-serverless:ListTableRestoreStatus",
    "redshift-serverless:ListTracks",
    "redshift-serverless:ListUsageLimits",
    "redshift-serverless:ListWorkgroups",
    "redshift-serverless:PutResourcePolicy",
    "redshift-serverless:UpdateScheduledAction",
    "redshift-serverless:UpdateSnapshotCopyConfiguration",
    "redshift-serverless:UpdateUsageLimit",
    "refactor-spaces:CreateApplication",
    "refactor-spaces:CreateEnvironment",
    "refactor-spaces:CreateRoute",
    "refactor-spaces:CreateService",
    "refactor-spaces:DeleteResourcePolicy",
    "refactor-spaces:GetResourcePolicy",
    "refactor-spaces:ListEnvironments",
    "refactor-spaces:ListTagsForResource",
    "refactor-spaces:PutResourcePolicy",
    "rekognition:CompareFaces",
    "rekognition:CreateCollection",
    "rekognition:CreateFaceLivenessSession",
    "rekognition:DescribeProjects",
    "rekognition:DetectFaces",
    "rekognition:DetectLabels",
    "rekognition:DetectProtectiveEquipment",
    "rekognition:DetectText",
    "rekognition:GetCelebrityInfo",
    "rekognition:GetCelebrityRecognition",
    "rekognition:GetContentModeration",
    "rekognition:GetFaceDetection",
    "rekognition:GetFaceLivenessSessionResults",
    "rekognition:GetFaceSearch",
    "rekognition:GetLabelDetection",
    "rekognition:GetMediaAnalysisJob",
    "rekognition:GetPersonTracking",
    "rekognition:GetSegmentDetection",
    "rekognition:GetTextDetection",
    "rekognition:ListCollections",
    "rekognition:ListMediaAnalysisJobs",
    "rekognition:RecognizeCelebrities",
    "rekognition:StartCelebrityRecognition",
    "rekognition:StartContentModeration",
    "rekognition:StartFaceDetection",
    "rekognition:StartFaceLivenessSession",
    "rekognition:StartLabelDetection",
    "rekognition:StartPersonTracking",
    "rekognition:StartSegmentDetection",
    "rekognition:StartTextDetection",
    "repostspace:CreateSpace",
    "repostspace:ListSpaces",
    "resiliencehub:CreateApp",
    "resiliencehub:CreateResiliencyPolicy",
    "resiliencehub:DescribeMetricsExport",
    "resiliencehub:ListAppAssessments",
    "resiliencehub:ListApps",
    "resiliencehub:ListMetrics",
    "resiliencehub:ListResiliencyPolicies",
    "resiliencehub:ListSuggestedResiliencyPolicies",
    "resiliencehub:ListTagsForResource",
    "resiliencehub:StartMetricsExport",
    "resource-explorer:ListResourceTypes",
    "resource-explorer:ListResources",
    "resource-explorer:ListTags",
    "resource-explorer-2:AssociateDefaultView",
    "resource-explorer-2:BatchGetView",
    "resource-explorer-2:CreateIndex",
    "resource-explorer-2:CreateManagedView",
    "resource-explorer-2:CreateView",
    "resource-explorer-2:DisassociateDefaultView",
    "resource-explorer-2:GetAccountLevelServiceConfiguration",
    "resource-explorer-2:GetDefaultView",
    "resource-explorer-2:GetIndex",
    "resource-explorer-2:ListIndexes",
    "resource-explorer-2:ListIndexesForMembers",
    "resource-explorer-2:ListManagedViews",
    "resource-explorer-2:ListSupportedResourceTypes",
    "resource-explorer-2:ListViews",
    "resource-groups:CreateGroup",
    "resource-groups:GetAccountSettings",
    "resource-groups:ListGroups",
    "resource-groups:ListResourceTypes",
    "resource-groups:SearchResources",
    "resource-groups:UpdateAccountSettings",
    "rhelkb:GetRhelURL",
    "robomaker:BatchDeleteWorlds",
    "robomaker:BatchDescribeSimulationJob",
    "robomaker:CreateDeploymentJob",
    "robomaker:CreateFleet",
    "robomaker:CreateRobot",
    "robomaker:CreateRobotApplication",
    "robomaker:CreateSimulationApplication",
    "robomaker:CreateSimulationJob",
    "robomaker:CreateWorldTemplate",
    "robomaker:ListDeploymentJobs",
    "robomaker:ListFleets",
    "robomaker:ListRobotApplications",
    "robomaker:ListRobots",
    "robomaker:ListSimulationApplications",
    "robomaker:ListSimulationJobBatches",
    "robomaker:ListSimulationJobs",
    "robomaker:ListSupportedAvailabilityZones",
    "robomaker:ListWorldExportJobs",
    "robomaker:ListWorldGenerationJobs",
    "robomaker:ListWorldTemplates",
    "robomaker:ListWorlds",
    "robomaker:StartSimulationJobBatch",
    "robomaker:UpdateRobotDeployment",
    "rolesanywhere:CreateProfile",
    "rolesanywhere:CreateTrustAnchor",
    "rolesanywhere:ImportCrl",
    "rolesanywhere:ListCrls",
    "rolesanywhere:ListProfiles",
    "rolesanywhere:ListSubjects",
    "rolesanywhere:ListTagsForResource",
    "rolesanywhere:ListTrustAnchors",
    "route53:CreateCidrCollection",
    "route53:CreateHealthCheck",
    "route53:CreateHostedZone",
    "route53:CreateReusableDelegationSet",
    "route53:CreateTrafficPolicy",
    "route53:GetAccountLimit",
    "route53:GetCheckerIpRanges",
    "route53:GetGeoLocation",
    "route53:GetHealthCheckCount",
    "route53:GetHostedZoneCount",
    "route53:GetTrafficPolicyInstanceCount",
    "route53:ListCidrCollections",
    "route53:ListGeoLocations",
    "route53:ListHealthChecks",
    "route53:ListHostedZones",
    "route53:ListHostedZonesByName",
    "route53:ListHostedZonesByVPC",
    "route53:ListReusableDelegationSets",
    "route53:ListTrafficPolicies",
    "route53:ListTrafficPolicyInstances",
    "route53:TestDNSAnswer",
    "route53-recovery-cluster:ListRoutingControls",
    "route53-recovery-control-config:ListAssociatedRoute53HealthChecks",
    "route53-recovery-control-config:ListClusters",
    "route53-recovery-control-config:ListControlPanels",
    "route53-recovery-control-config:ListRoutingControls",
    "route53-recovery-control-config:ListTagsForResource",
    "route53-recovery-readiness:CreateCrossAccountAuthorization",
    "route53-recovery-readiness:DeleteCrossAccountAuthorization",
    "route53-recovery-readiness:ListCells",
    "route53-recovery-readiness:ListCrossAccountAuthorizations",
    "route53-recovery-readiness:ListReadinessChecks",
    "route53-recovery-readiness:ListRecoveryGroups",
    "route53-recovery-readiness:ListResourceSets",
    "route53-recovery-readiness:ListRules",
    "route53-recovery-readiness:ListTagsForResources",
    "route53domains:AcceptDomainTransferFromAnotherAwsAccount",
    "route53domains:AssociateDelegationSignerToDomain",
    "route53domains:CancelDomainTransferToAnotherAwsAccount",
    "route53domains:CheckDomainAvailability",
    "route53domains:CheckDomainTransferability",
    "route53domains:DeleteDomain",
    "route53domains:DeleteTagsForDomain",
    "route53domains:DisableDomainAutoRenew",
    "route53domains:DisableDomainTransferLock",
    "route53domains:DisassociateDelegationSignerFromDomain",
    "route53domains:EnableDomainAutoRenew",
    "route53domains:EnableDomainTransferLock",
    "route53domains:GetContactReachabilityStatus",
    "route53domains:GetDomainDetail",
    "route53domains:GetDomainSuggestions",
    "route53domains:GetOperationDetail",
    "route53domains:ListDomains",
    "route53domains:ListOperations",
    "route53domains:ListPrices",
    "route53domains:ListTagsForDomain",
    "route53domains:PushDomain",
    "route53domains:RegisterDomain",
    "route53domains:RejectDomainTransferFromAnotherAwsAccount",
    "route53domains:RenewDomain",
    "route53domains:ResendContactReachabilityEmail",
    "route53domains:ResendOperationAuthorization",
    "route53domains:RetrieveDomainAuthCode",
    "route53domains:TransferDomain",
    "route53domains:TransferDomainToAnotherAwsAccount",
    "route53domains:UpdateDomainContact",
    "route53domains:UpdateDomainContactPrivacy",
    "route53domains:UpdateDomainNameservers",
    "route53domains:UpdateTagsForDomain",
    "route53domains:ViewBilling",
    "route53profiles:AssociateProfile",
    "route53profiles:AssociateResourceToProfile",
    "route53profiles:CreateProfile",
    "route53profiles:DeleteProfile",
    "route53profiles:DisassociateProfile",
    "route53profiles:DisassociateResourceFromProfile",
    "route53profiles:GetProfile",
    "route53profiles:GetProfileAssociation",
    "route53profiles:GetProfileResourceAssociation",
    "route53profiles:ListProfileAssociations",
    "route53profiles:ListProfileResourceAssociations",
    "route53profiles:ListProfiles",
    "route53profiles:ListTagsForResource",
    "route53profiles:UpdateProfileResourceAssociation",
    "route53resolver:CreateResolverQueryLogConfig",
    "route53resolver:GetResolverQueryLogConfigAssociation",
    "route53resolver:ListFirewallConfigs",
    "route53resolver:ListFirewallDomainLists",
    "route53resolver:ListFirewallRuleGroupAssociations",
    "route53resolver:ListFirewallRuleGroups",
    "route53resolver:ListOutpostResolvers",
    "route53resolver:ListResolverEndpoints",
    "route53resolver:ListResolverQueryLogConfigAssociations",
    "route53resolver:ListResolverQueryLogConfigs",
    "route53resolver:ListResolverRuleAssociations",
    "route53resolver:ListResolverRules",
    "rum:ListAppMonitors",
    "rum:ListTagsForResource",
    "s3:CreateJob",
    "s3:CreateStorageLensGroup",
    "s3:GetAccessPoint",
    "s3:GetAccountPublicAccessBlock",
    "s3:ListAccessGrantsInstances",
    "s3:ListAccessPoints",
    "s3:ListAccessPointsForObjectLambda",
    "s3:ListAllMyBuckets",
    "s3:ListJobs",
    "s3:ListMultiRegionAccessPoints",
    "s3:ListStorageLensConfigurations",
    "s3:ListStorageLensGroups",
    "s3:PutAccessPointPublicAccessBlock",
    "s3:PutAccountPublicAccessBlock",
    "s3:PutStorageLensConfiguration",
    "s3-outposts:GetAccessPoint",
    "s3-outposts:ListAccessPoints",
    "s3-outposts:ListEndpoints",
    "s3-outposts:ListOutpostsWithS3",
    "s3-outposts:ListRegionalBuckets",
    "s3-outposts:ListSharedEndpoints",
    "s3express:ListAllMyDirectoryBuckets",
    "s3tables:ListTableBuckets",
    "sagemaker:CreateLineageGroupPolicy",
    "sagemaker:DeleteLineageGroupPolicy",
    "sagemaker:DeleteResourcePolicy",
    "sagemaker:DescribeLineageGroup",
    "sagemaker:DisableSagemakerServicecatalogPortfolio",
    "sagemaker:EnableSagemakerServicecatalogPortfolio",
    "sagemaker:GetLineageGroupPolicy",
    "sagemaker:GetResourcePolicy",
    "sagemaker:GetSagemakerServicecatalogPortfolioStatus",
    "sagemaker:GetSearchSuggestions",
    "sagemaker:ListActions",
    "sagemaker:ListAlgorithms",
    "sagemaker:ListAppImageConfigs",
    "sagemaker:ListApps",
    "sagemaker:ListArtifacts",
    "sagemaker:ListAssociations",
    "sagemaker:ListAutoMLJobs",
    "sagemaker:ListCandidatesForAutoMLJob",
    "sagemaker:ListClusterSchedulerConfigs",
    "sagemaker:ListClusters",
    "sagemaker:ListCodeRepositories",
    "sagemaker:ListCompilationJobs",
    "sagemaker:ListComputeQuotas",
    "sagemaker:ListContexts",
    "sagemaker:ListDataQualityJobDefinitions",
    "sagemaker:ListDeviceFleets",
    "sagemaker:ListDevices",
    "sagemaker:ListDomains",
    "sagemaker:ListEdgeDeploymentPlans",
    "sagemaker:ListEdgePackagingJobs",
    "sagemaker:ListEndpointConfigs",
    "sagemaker:ListEndpoints",
    "sagemaker:ListExperiments",
    "sagemaker:ListFeatureGroups",
    "sagemaker:ListFlowDefinitions",
    "sagemaker:ListHubs",
    "sagemaker:ListHumanLoops",
    "sagemaker:ListHumanTaskUis",
    "sagemaker:ListHyperParameterTuningJobs",
    "sagemaker:ListImages",
    "sagemaker:ListInferenceComponents",
    "sagemaker:ListInferenceExperiments",
    "sagemaker:ListInferenceRecommendationsJobSteps",
    "sagemaker:ListInferenceRecommendationsJobs",
    "sagemaker:ListLabelingJobs",
    "sagemaker:ListLineageGroups",
    "sagemaker:ListMlflowTrackingServers",
    "sagemaker:ListModelBiasJobDefinitions",
    "sagemaker:ListModelCards",
    "sagemaker:ListModelExplainabilityJobDefinitions",
    "sagemaker:ListModelMetadata",
    "sagemaker:ListModelPackageGroups",
    "sagemaker:ListModelQualityJobDefinitions",
    "sagemaker:ListModels",
    "sagemaker:ListMonitoringAlertHistory",
    "sagemaker:ListMonitoringAlerts",
    "sagemaker:ListMonitoringExecutions",
    "sagemaker:ListMonitoringSchedules",
    "sagemaker:ListNotebookInstanceLifecycleConfigs",
    "sagemaker:ListNotebookInstances",
    "sagemaker:ListOptimizationJobs",
    "sagemaker:ListPartnerApps",
    "sagemaker:ListPipelines",
    "sagemaker:ListProcessingJobs",
    "sagemaker:ListProjects",
    "sagemaker:ListResourceCatalogs",
    "sagemaker:ListSharedModelEvents",
    "sagemaker:ListSharedModels",
    "sagemaker:ListSpaces",
    "sagemaker:ListStageDevices",
    "sagemaker:ListStudioLifecycleConfigs",
    "sagemaker:ListSubscribedWorkteams",
    "sagemaker:ListTrainingJobs",
    "sagemaker:ListTrainingPlans",
    "sagemaker:ListTransformJobs",
    "sagemaker:ListTrialComponents",
    "sagemaker:ListTrials",
    "sagemaker:ListUserProfiles",
    "sagemaker:ListWorkforces",
    "sagemaker:ListWorkteams",
    "sagemaker:PutLineageGroupPolicy",
    "sagemaker:PutResourcePolicy",
    "sagemaker:QueryLineage",
    "sagemaker:RenderUiTemplate",
    "sagemaker:Search",
    "sagemaker:SearchTrainingPlanOfferings",
    "sagemaker-data-science-assistant:SendConversation",
    "sagemaker-geospatial:ListEarthObservationJobs",
    "sagemaker-geospatial:ListRasterDataCollections",
    "sagemaker-geospatial:ListVectorEnrichmentJobs",
    "sagemaker-geospatial:SearchRasterDataCollection",
    "sagemaker-groundtruth-synthetic:CreateProject",
    "sagemaker-groundtruth-synthetic:DeleteProject",
    "sagemaker-groundtruth-synthetic:GetAccountDetails",
    "sagemaker-groundtruth-synthetic:GetBatch",
    "sagemaker-groundtruth-synthetic:GetProject",
    "sagemaker-groundtruth-synthetic:ListBatchDataTransfers",
    "sagemaker-groundtruth-synthetic:ListBatchSummaries",
    "sagemaker-groundtruth-synthetic:ListProjectDataTransfers",
    "sagemaker-groundtruth-synthetic:ListProjectSummaries",
    "sagemaker-groundtruth-synthetic:StartBatchDataTransfer",
    "sagemaker-groundtruth-synthetic:StartProjectDataTransfer",
    "sagemaker-groundtruth-synthetic:UpdateBatch",
    "sagemaker-mlflow:AccessUI",
    "savingsplans:CreateSavingsPlan",
    "savingsplans:DescribeSavingsPlansOfferingRates",
    "savingsplans:DescribeSavingsPlansOfferings",
    "scheduler:ListScheduleGroups",
    "scheduler:ListSchedules",
    "schemas:CreateDiscoverer",
    "schemas:GetDiscoveredSchema",
    "sdb:ListDomains",
    "secretsmanager:BatchGetSecretValue",
    "secretsmanager:GetRandomPassword",
    "secretsmanager:ListSecrets",
    "security-ir:CreateCase",
    "security-ir:CreateMembership",
    "security-ir:ListCases",
    "security-ir:ListMemberships",
    "securityhub:BatchGetConfigurationPolicyAssociations",
    "securityhub:BatchGetSecurityControls",
    "securityhub:BatchGetStandardsControlAssociations",
    "securityhub:BatchUpdateStandardsControlAssociations",
    "securityhub:CreateAutomationRule",
    "securityhub:CreateConfigurationPolicy",
    "securityhub:CreateFindingAggregator",
    "securityhub:GetConfigurationPolicyAssociation",
    "securityhub:GetSecurityControlDefinition",
    "securityhub:ListAutomationRules",
    "securityhub:ListConfigurationPolicies",
    "securityhub:ListConfigurationPolicyAssociations",
    "securityhub:ListFindingAggregators",
    "securityhub:ListSecurityControlDefinitions",
    "securityhub:ListStandardsControlAssociations",
    "securityhub:UpdateSecurityControl",
    "securitylake:CreateDataLakeExceptionSubscription",
    "securitylake:CreateSubscriber",
    "securitylake:DeleteDataLakeExceptionSubscription",
    "securitylake:DeregisterDataLakeDelegatedAdministrator",
    "securitylake:GetDataLakeExceptionSubscription",
    "securitylake:ListDataLakeExceptions",
    "securitylake:ListDataLakes",
    "securitylake:ListLogSources",
    "securitylake:ListSubscribers",
    "securitylake:RegisterDataLakeDelegatedAdministrator",
    "securitylake:UpdateDataLakeExceptionSubscription",
    "serverlessrepo:CreateApplication",
    "serverlessrepo:ListApplications",
    "serverlessrepo:SearchApplications",
    "servicecatalog:AssociateBudgetWithResource",
    "servicecatalog:AssociateProductWithPortfolio",
    "servicecatalog:BatchAssociateServiceActionWithProvisioningArtifact",
    "servicecatalog:BatchDisassociateServiceActionFromProvisioningArtifact",
    "servicecatalog:CopyProduct",
    "servicecatalog:CreateProvisionedProductPlan",
    "servicecatalog:CreateServiceAction",
    "servicecatalog:CreateTagOption",
    "servicecatalog:DeleteConstraint",
    "servicecatalog:DeleteProvisionedProductPlan",
    "servicecatalog:DeleteServiceAction",
    "servicecatalog:DeleteTagOption",
    "servicecatalog:DescribeConstraint",
    "servicecatalog:DescribeCopyProductStatus",
    "servicecatalog:DescribePortfolioShareStatus",
    "servicecatalog:DescribeProductView",
    "servicecatalog:DescribeProvisionedProduct",
    "servicecatalog:DescribeProvisionedProductPlan",
    "servicecatalog:DescribeRecord",
    "servicecatalog:DescribeServiceAction",
    "servicecatalog:DescribeServiceActionExecutionParameters",
    "servicecatalog:DescribeTagOption",
    "servicecatalog:DisableAWSOrganizationsAccess",
    "servicecatalog:DisassociateBudgetFromResource",
    "servicecatalog:DisassociateProductFromPortfolio",
    "servicecatalog:EnableAWSOrganizationsAccess",
    "servicecatalog:ExecuteProvisionedProductPlan",
    "servicecatalog:ExecuteProvisionedProductServiceAction",
    "servicecatalog:GetAWSOrganizationsAccessStatus",
    "servicecatalog:GetConfiguration",
    "servicecatalog:GetProvisionedProductOutputs",
    "servicecatalog:ListAcceptedPortfolioShares",
    "servicecatalog:ListApplications",
    "servicecatalog:ListAttributeGroups",
    "servicecatalog:ListBudgetsForResource",
    "servicecatalog:ListConstraintsForPortfolio",
    "servicecatalog:ListOrganizationPortfolioAccess",
    "servicecatalog:ListPortfolios",
    "servicecatalog:ListProvisionedProductPlans",
    "servicecatalog:ListProvisioningArtifactsForServiceAction",
    "servicecatalog:ListRecordHistory",
    "servicecatalog:ListResourcesForTagOption",
    "servicecatalog:ListServiceActions",
    "servicecatalog:ListStackInstancesForProvisionedProduct",
    "servicecatalog:ListTagOptions",
    "servicecatalog:NotifyProvisionProductEngineWorkflowResult",
    "servicecatalog:NotifyTerminateProvisionedProductEngineWorkflowResult",
    "servicecatalog:NotifyUpdateProvisionedProductEngineWorkflowResult",
    "servicecatalog:PutConfiguration",
    "servicecatalog:ScanProvisionedProducts",
    "servicecatalog:SearchProducts",
    "servicecatalog:SearchProductsAsAdmin",
    "servicecatalog:SearchProvisionedProducts",
    "servicecatalog:SyncResource",
    "servicecatalog:TerminateProvisionedProduct",
    "servicecatalog:UpdateConstraint",
    "servicecatalog:UpdateProvisionedProduct",
    "servicecatalog:UpdateProvisionedProductProperties",
    "servicecatalog:UpdateServiceAction",
    "servicecatalog:UpdateTagOption",
    "servicediscovery:CreateHttpNamespace",
    "servicediscovery:CreatePrivateDnsNamespace",
    "servicediscovery:CreatePublicDnsNamespace",
    "servicediscovery:DiscoverInstances",
    "servicediscovery:DiscoverInstancesRevision",
    "servicediscovery:GetInstance",
    "servicediscovery:GetInstancesHealthStatus",
    "servicediscovery:GetOperation",
    "servicediscovery:ListInstances",
    "servicediscovery:ListNamespaces",
    "servicediscovery:ListOperations",
    "servicediscovery:ListServices",
    "servicediscovery:ListTagsForResource",
    "servicediscovery:TagResource",
    "servicediscovery:UntagResource",
    "servicediscovery:UpdateInstanceCustomHealthStatus",
    "serviceextract:GetConfig",
    "servicequotas:AssociateServiceQuotaTemplate",
    "servicequotas:DeleteServiceQuotaIncreaseRequestFromTemplate",
    "servicequotas:DisassociateServiceQuotaTemplate",
    "servicequotas:GetAWSDefaultServiceQuota",
    "servicequotas:GetAssociationForServiceQuotaTemplate",
    "servicequotas:GetRequestedServiceQuotaChange",
    "servicequotas:GetServiceQuota",
    "servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
    "servicequotas:ListAWSDefaultServiceQuotas",
    "servicequotas:ListRequestedServiceQuotaChangeHistory",
    "servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
    "servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
    "servicequotas:ListServiceQuotas",
    "servicequotas:ListServices",
    "servicequotas:ListTagsForResource",
    "servicequotas:TagResource",
    "servicequotas:UntagResource",
    "ses:CloneReceiptRuleSet",
    "ses:CreateAddonInstance",
    "ses:CreateAddonSubscription",
    "ses:CreateAddressList",
    "ses:CreateArchive",
    "ses:CreateConfigurationSetTrackingOptions",
    "ses:CreateExportJob",
    "ses:CreateImportJob",
    "ses:CreateIngressPoint",
    "ses:CreateMultiRegionEndpoint",
    "ses:CreateReceiptFilter",
    "ses:CreateReceiptRule",
    "ses:CreateReceiptRuleSet",
    "ses:CreateRelay",
    "ses:CreateRuleSet",
    "ses:CreateTemplate",
    "ses:CreateTrafficPolicy",
    "ses:DeleteConfigurationSetTrackingOptions",
    "ses:DeleteIdentity",
    "ses:DeleteIdentityPolicy",
    "ses:DeleteReceiptFilter",
    "ses:DeleteReceiptRule",
    "ses:DeleteReceiptRuleSet",
    "ses:DeleteSuppressedDestination",
    "ses:DeleteTemplate",
    "ses:DeleteVerifiedEmailAddress",
    "ses:DescribeActiveReceiptRuleSet",
    "ses:DescribeConfigurationSet",
    "ses:DescribeReceiptRule",
    "ses:DescribeReceiptRuleSet",
    "ses:GetAccount",
    "ses:GetAccountSendingEnabled",
    "ses:GetBlacklistReports",
    "ses:GetDedicatedIp",
    "ses:GetDeliverabilityDashboardOptions",
    "ses:GetDomainDeliverabilityCampaign",
    "ses:GetIdentityDkimAttributes",
    "ses:GetIdentityMailFromDomainAttributes",
    "ses:GetIdentityNotificationAttributes",
    "ses:GetIdentityPolicies",
    "ses:GetIdentityVerificationAttributes",
    "ses:GetMessageInsights",
    "ses:GetSendQuota",
    "ses:GetSendStatistics",
    "ses:GetSuppressedDestination",
    "ses:GetTemplate",
    "ses:ListAddonInstances",
    "ses:ListAddonSubscriptions",
    "ses:ListAddressLists",
    "ses:ListArchiveExports",
    "ses:ListArchiveSearches",
    "ses:ListArchives",
    "ses:ListConfigurationSets",
    "ses:ListContactLists",
    "ses:ListCustomVerificationEmailTemplates",
    "ses:ListDedicatedIpPools",
    "ses:ListDeliverabilityTestReports",
    "ses:ListDomainDeliverabilityCampaigns",
    "ses:ListEmailIdentities",
    "ses:ListEmailTemplates",
    "ses:ListExportJobs",
    "ses:ListIdentities",
    "ses:ListIdentityPolicies",
    "ses:ListImportJobs",
    "ses:ListIngressPoints",
    "ses:ListMultiRegionEndpoints",
    "ses:ListReceiptFilters",
    "ses:ListReceiptRuleSets",
    "ses:ListRelays",
    "ses:ListRuleSets",
    "ses:ListSuppressedDestinations",
    "ses:ListTemplates",
    "ses:ListTrafficPolicies",
    "ses:ListVerifiedEmailAddresses",
    "ses:PutAccountDedicatedIpWarmupAttributes",
    "ses:PutAccountDetails",
    "ses:PutAccountSendingAttributes",
    "ses:PutAccountSuppressionAttributes",
    "ses:PutAccountVdmAttributes",
    "ses:PutDedicatedIpWarmupAttributes",
    "ses:PutDeliverabilityDashboardOption",
    "ses:PutIdentityPolicy",
    "ses:PutSuppressedDestination",
    "ses:ReorderReceiptRuleSet",
    "ses:SetActiveReceiptRuleSet",
    "ses:SetIdentityDkimEnabled",
    "ses:SetIdentityFeedbackForwardingEnabled",
    "ses:SetIdentityHeadersInNotificationsEnabled",
    "ses:SetIdentityMailFromDomain",
    "ses:SetIdentityNotificationTopic",
    "ses:SetReceiptRulePosition",
    "ses:TestRenderTemplate",
    "ses:UpdateAccountSendingEnabled",
    "ses:UpdateConfigurationSetReputationMetricsEnabled",
    "ses:UpdateConfigurationSetSendingEnabled",
    "ses:UpdateConfigurationSetTrackingOptions",
    "ses:UpdateReceiptRule",
    "ses:UpdateTemplate",
    "ses:VerifyDomainDkim",
    "ses:VerifyDomainIdentity",
    "ses:VerifyEmailAddress",
    "ses:VerifyEmailIdentity",
    "shield:AssociateDRTLogBucket",
    "shield:AssociateDRTRole",
    "shield:AssociateProactiveEngagementDetails",
    "shield:CreateProtection",
    "shield:CreateProtectionGroup",
    "shield:CreateSubscription",
    "shield:DeleteSubscription",
    "shield:DescribeAttackStatistics",
    "shield:DescribeDRTAccess",
    "shield:DescribeEmergencyContactSettings",
    "shield:DescribeSubscription",
    "shield:DisableApplicationLayerAutomaticResponse",
    "shield:DisableProactiveEngagement",
    "shield:DisassociateDRTLogBucket",
    "shield:DisassociateDRTRole",
    "shield:EnableApplicationLayerAutomaticResponse",
    "shield:EnableProactiveEngagement",
    "shield:GetSubscriptionState",
    "shield:ListAttacks",
    "shield:ListProtectionGroups",
    "shield:ListProtections",
    "shield:UpdateApplicationLayerAutomaticResponse",
    "shield:UpdateEmergencyContactSettings",
    "shield:UpdateSubscription",
    "signer:GetSigningPlatform",
    "signer:ListSigningJobs",
    "signer:ListSigningPlatforms",
    "signer:ListSigningProfiles",
    "signer:PutSigningProfile",
    "signin:CreateTrustedIdentityPropagationApplicationForConsole",
    "signin:ListTrustedIdentityPropagationApplicationsForConsole",
    "simspaceweaver:ListSimulations",
    "simspaceweaver:ListTagsForResource",
    "simspaceweaver:StartSimulation",
    "sms:CreateApp",
    "sms:CreateReplicationJob",
    "sms:DeleteApp",
    "sms:DeleteAppLaunchConfiguration",
    "sms:DeleteAppReplicationConfiguration",
    "sms:DeleteAppValidationConfiguration",
    "sms:DeleteReplicationJob",
    "sms:DeleteServerCatalog",
    "sms:DisassociateConnector",
    "sms:GenerateChangeSet",
    "sms:GenerateTemplate",
    "sms:GetApp",
    "sms:GetAppLaunchConfiguration",
    "sms:GetAppReplicationConfiguration",
    "sms:GetAppValidationConfiguration",
    "sms:GetAppValidationOutput",
    "sms:GetConnectors",
    "sms:GetMessages",
    "sms:GetReplicationJobs",
    "sms:GetReplicationRuns",
    "sms:GetServers",
    "sms:ImportAppCatalog",
    "sms:ImportServerCatalog",
    "sms:LaunchApp",
    "sms:ListApps",
    "sms:NotifyAppValidationOutput",
    "sms:PutAppLaunchConfiguration",
    "sms:PutAppReplicationConfiguration",
    "sms:PutAppValidationConfiguration",
    "sms:SendMessage",
    "sms:StartAppReplication",
    "sms:StartOnDemandAppReplication",
    "sms:StartOnDemandReplicationRun",
    "sms:StopAppReplication",
    "sms:TerminateApp",
    "sms:UpdateApp",
    "sms:UpdateReplicationJob",
    "sms-voice:CreateConfigurationSet",
    "sms-voice:CreateConfigurationSetEventDestination",
    "sms-voice:CreateOptOutList",
    "sms-voice:CreateProtectConfiguration",
    "sms-voice:CreateRegistration",
    "sms-voice:CreateRegistrationAttachment",
    "sms-voice:CreateVerifiedDestinationNumber",
    "sms-voice:DeleteAccountDefaultProtectConfiguration",
    "sms-voice:DeleteConfigurationSetEventDestination",
    "sms-voice:DeleteMediaMessageSpendLimitOverride",
    "sms-voice:DeleteTextMessageSpendLimitOverride",
    "sms-voice:DeleteVoiceMessageSpendLimitOverride",
    "sms-voice:DescribeAccountAttributes",
    "sms-voice:DescribeAccountLimits",
    "sms-voice:DescribeRegistrationFieldDefinitions",
    "sms-voice:DescribeRegistrationSectionDefinitions",
    "sms-voice:DescribeRegistrationTypeDefinitions",
    "sms-voice:DescribeSpendLimits",
    "sms-voice:GetConfigurationSetEventDestinations",
    "sms-voice:ListConfigurationSets",
    "sms-voice:RequestSenderId",
    "sms-voice:SetMediaMessageSpendLimitOverride",
    "sms-voice:SetTextMessageSpendLimitOverride",
    "sms-voice:SetVoiceMessageSpendLimitOverride",
    "sms-voice:UpdateConfigurationSetEventDestination",
    "snow-device-management:CreateTask",
    "snow-device-management:DescribeExecution",
    "snow-device-management:ListDevices",
    "snow-device-management:ListExecutions",
    "snow-device-management:ListTagsForResource",
    "snow-device-management:ListTasks",
    "snowball:CancelCluster",
    "snowball:CancelJob",
    "snowball:CreateAddress",
    "snowball:CreateCluster",
    "snowball:CreateJob",
    "snowball:CreateLongTermPricing",
    "snowball:CreateReturnShippingLabel",
    "snowball:DescribeAddress",
    "snowball:DescribeAddresses",
    "snowball:DescribeCluster",
    "snowball:DescribeJob",
    "snowball:DescribeReturnShippingLabel",
    "snowball:GetJobManifest",
    "snowball:GetJobUnlockCode",
    "snowball:GetSnowballUsage",
    "snowball:GetSoftwareUpdates",
    "snowball:ListClusterJobs",
    "snowball:ListClusters",
    "snowball:ListCompatibleImages",
    "snowball:ListJobs",
    "snowball:ListLongTermPricing",
    "snowball:ListPickupLocations",
    "snowball:ListServiceVersions",
    "snowball:UpdateCluster",
    "snowball:UpdateJob",
    "snowball:UpdateJobShipmentState",
    "snowball:UpdateLongTermPricing",
    "sns:CheckIfPhoneNumberIsOptedOut",
    "sns:CreatePlatformApplication",
    "sns:CreatePlatformEndpoint",
    "sns:CreateSMSSandboxPhoneNumber",
    "sns:DeleteEndpoint",
    "sns:DeletePlatformApplication",
    "sns:DeleteSMSSandboxPhoneNumber",
    "sns:GetEndpointAttributes",
    "sns:GetPlatformApplicationAttributes",
    "sns:GetSMSAttributes",
    "sns:GetSMSSandboxAccountStatus",
    "sns:GetSubscriptionAttributes",
    "sns:ListEndpointsByPlatformApplication",
    "sns:ListOriginationNumbers",
    "sns:ListPhoneNumbersOptedOut",
    "sns:ListPlatformApplications",
    "sns:ListSMSSandboxPhoneNumbers",
    "sns:ListSubscriptions",
    "sns:ListTopics",
    "sns:OptInPhoneNumber",
    "sns:SetEndpointAttributes",
    "sns:SetPlatformApplicationAttributes",
    "sns:SetSMSAttributes",
    "sns:SetSubscriptionAttributes",
    "sns:Unsubscribe",
    "sns:VerifySMSSandboxPhoneNumber",
    "social-messaging:AssociateWhatsAppBusinessAccount",
    "social-messaging:ListLinkedWhatsAppBusinessAccounts",
    "sqlworkbench:BatchDeleteFolder",
    "sqlworkbench:CreateAccount",
    "sqlworkbench:CreateFolder",
    "sqlworkbench:DeleteQCustomContext",
    "sqlworkbench:DeleteSqlGenerationContext",
    "sqlworkbench:DeleteTab",
    "sqlworkbench:GenerateSession",
    "sqlworkbench:GetAccountInfo",
    "sqlworkbench:GetAccountSettings",
    "sqlworkbench:GetAutocompletionMetadata",
    "sqlworkbench:GetAutocompletionResource",
    "sqlworkbench:GetQCustomContext",
    "sqlworkbench:GetQSqlPromptQuotas",
    "sqlworkbench:GetQSqlRecommendations",
    "sqlworkbench:GetQueryExecutionHistory",
    "sqlworkbench:GetSchemaInference",
    "sqlworkbench:GetSqlGenerationContext",
    "sqlworkbench:GetSqlRecommendations",
    "sqlworkbench:GetUserInfo",
    "sqlworkbench:GetUserWorkspaceSettings",
    "sqlworkbench:ListConnections",
    "sqlworkbench:ListDatabases",
    "sqlworkbench:ListFiles",
    "sqlworkbench:ListNotebooks",
    "sqlworkbench:ListQueryExecutionHistory",
    "sqlworkbench:ListRedshiftClusters",
    "sqlworkbench:ListSampleDatabases",
    "sqlworkbench:ListTabs",
    "sqlworkbench:ListTaggedResources",
    "sqlworkbench:PassAccountSettings",
    "sqlworkbench:PutQCustomContext",
    "sqlworkbench:PutSqlGenerationContext",
    "sqlworkbench:PutTab",
    "sqlworkbench:PutUserWorkspaceSettings",
    "sqlworkbench:UpdateAccountConnectionSettings",
    "sqlworkbench:UpdateAccountExportSettings",
    "sqlworkbench:UpdateAccountGeneralSettings",
    "sqlworkbench:UpdateAccountQSqlSettings",
    "sqlworkbench:UpdateFolder",
    "sqs:ListQueues",
    "ssm:CancelCommand",
    "ssm:CreateActivation",
    "ssm:CreateMaintenanceWindow",
    "ssm:CreateOpsItem",
    "ssm:CreateOpsMetadata",
    "ssm:CreatePatchBaseline",
    "ssm:DeleteActivation",
    "ssm:DeleteInventory",
    "ssm:DescribeActivations",
    "ssm:DescribeAutomationExecutions",
    "ssm:DescribeAvailablePatches",
    "ssm:DescribeInstanceInformation",
    "ssm:DescribeInstancePatchStatesForPatchGroup",
    "ssm:DescribeInstanceProperties",
    "ssm:DescribeInventoryDeletions",
    "ssm:DescribeMaintenanceWindowExecutionTaskInvocations",
    "ssm:DescribeMaintenanceWindowExecutionTasks",
    "ssm:DescribeMaintenanceWindowSchedule",
    "ssm:DescribeMaintenanceWindows",
    "ssm:DescribeMaintenanceWindowsForTarget",
    "ssm:DescribeOpsItems",
    "ssm:DescribeParameters",
    "ssm:DescribePatchBaselines",
    "ssm:DescribePatchGroupState",
    "ssm:DescribePatchGroups",
    "ssm:DescribePatchProperties",
    "ssm:DescribeSessions",
    "ssm:ExecuteAPI",
    "ssm:GetCommandInvocation",
    "ssm:GetDeployablePatchSnapshotForInstance",
    "ssm:GetExecutionPreview",
    "ssm:GetInventory",
    "ssm:GetInventorySchema",
    "ssm:GetMaintenanceWindowExecution",
    "ssm:GetMaintenanceWindowExecutionTask",
    "ssm:GetMaintenanceWindowExecutionTaskInvocation",
    "ssm:GetManifest",
    "ssm:GetPatchBaselineForPatchGroup",
    "ssm:ListAssociations",
    "ssm:ListCommandInvocations",
    "ssm:ListCommands",
    "ssm:ListComplianceItems",
    "ssm:ListComplianceSummaries",
    "ssm:ListDocuments",
    "ssm:ListInventoryEntries",
    "ssm:ListOpsItemEvents",
    "ssm:ListOpsItemRelatedItems",
    "ssm:ListOpsMetadata",
    "ssm:ListResourceComplianceSummaries",
    "ssm:ListResourceDataSync",
    "ssm:PutConfigurePackageResult",
    "ssm:PutInventory",
    "ssm:RegisterManagedInstance",
    "ssm:StartExecutionPreview",
    "ssm-contacts:ListContacts",
    "ssm-contacts:ListEngagements",
    "ssm-contacts:ListPreviewRotationShifts",
    "ssm-contacts:ListRotations",
    "ssm-guiconnect:CancelConnection",
    "ssm-guiconnect:GetConnection",
    "ssm-guiconnect:ListConnections",
    "ssm-guiconnect:StartConnection",
    "ssm-incidents:CreateReplicationSet",
    "ssm-incidents:CreateResponsePlan",
    "ssm-incidents:ListIncidentRecords",
    "ssm-incidents:ListReplicationSets",
    "ssm-incidents:ListResponsePlans",
    "ssm-quicksetup:GetServiceSettings",
    "ssm-quicksetup:ListConfigurationManagers",
    "ssm-quicksetup:ListQuickSetupTypes",
    "ssm-quicksetup:UpdateServiceSettings",
    "ssm-sap:BackupDatabase",
    "ssm-sap:DeleteResourcePermission",
    "ssm-sap:GetApplication",
    "ssm-sap:GetDatabase",
    "ssm-sap:GetOperation",
    "ssm-sap:GetResourcePermission",
    "ssm-sap:ListApplications",
    "ssm-sap:ListDatabases",
    "ssm-sap:ListOperationEvents",
    "ssm-sap:ListOperations",
    "ssm-sap:ListTagsForResource",
    "ssm-sap:PutResourcePermission",
    "ssm-sap:RegisterApplication",
    "ssm-sap:RestoreDatabase",
    "ssm-sap:UpdateHANABackupSettings",
    "ssmmessages:CreateControlChannel",
    "ssmmessages:CreateDataChannel",
    "ssmmessages:OpenControlChannel",
    "ssmmessages:OpenDataChannel",
    "sso:AssociateDirectory",
    "sso:AssociateProfile",
    "sso:CreateApplicationInstance",
    "sso:CreateApplicationInstanceCertificate",
    "sso:CreateManagedApplicationInstance",
    "sso:CreateProfile",
    "sso:CreateTrust",
    "sso:DeleteApplicationInstance",
    "sso:DeleteApplicationInstanceCertificate",
    "sso:DeleteManagedApplicationInstance",
    "sso:DeletePermissionsPolicy",
    "sso:DeleteProfile",
    "sso:DescribeDirectories",
    "sso:DescribePermissionsPolicies",
    "sso:DescribeRegisteredRegions",
    "sso:DescribeTrusts",
    "sso:DisassociateDirectory",
    "sso:DisassociateProfile",
    "sso:GetApplicationInstance",
    "sso:GetApplicationTemplate",
    "sso:GetManagedApplicationInstance",
    "sso:GetMfaDeviceManagementForDirectory",
    "sso:GetPermissionSet",
    "sso:GetPermissionsPolicy",
    "sso:GetProfile",
    "sso:GetSSOStatus",
    "sso:GetSharedSsoConfiguration",
    "sso:GetSsoConfiguration",
    "sso:GetTrust",
    "sso:ImportApplicationInstanceServiceProviderMetadata",
    "sso:ListApplicationInstanceCertificates",
    "sso:ListApplicationInstances",
    "sso:ListApplicationTemplates",
    "sso:ListApplications",
    "sso:ListDirectoryAssociations",
    "sso:ListInstances",
    "sso:ListProfileAssociations",
    "sso:ListProfiles",
    "sso:PutMfaDeviceManagementForDirectory",
    "sso:PutPermissionsPolicy",
    "sso:SearchGroups",
    "sso:SearchUsers",
    "sso:StartSSO",
    "sso:UpdateApplicationInstanceActiveCertificate",
    "sso:UpdateApplicationInstanceDisplayData",
    "sso:UpdateApplicationInstanceResponseConfiguration",
    "sso:UpdateApplicationInstanceResponseSchemaConfiguration",
    "sso:UpdateApplicationInstanceSecurityConfiguration",
    "sso:UpdateApplicationInstanceServiceProviderConfiguration",
    "sso:UpdateApplicationInstanceStatus",
    "sso:UpdateDirectoryAssociation",
    "sso:UpdateManagedApplicationInstanceStatus",
    "sso:UpdateProfile",
    "sso:UpdateSSOConfiguration",
    "sso:UpdateTrust",
    "sso-directory:AddMemberToGroup",
    "sso-directory:CompleteVirtualMfaDeviceRegistration",
    "sso-directory:CompleteWebAuthnDeviceRegistration",
    "sso-directory:CreateAlias",
    "sso-directory:CreateBearerToken",
    "sso-directory:CreateExternalIdPConfigurationForDirectory",
    "sso-directory:CreateGroup",
    "sso-directory:CreateProvisioningTenant",
    "sso-directory:CreateUser",
    "sso-directory:DeleteBearerToken",
    "sso-directory:DeleteExternalIdPCertificate",
    "sso-directory:DeleteExternalIdPConfigurationForDirectory",
    "sso-directory:DeleteGroup",
    "sso-directory:DeleteMfaDeviceForUser",
    "sso-directory:DeleteProvisioningTenant",
    "sso-directory:DeleteUser",
    "sso-directory:DescribeDirectory",
    "sso-directory:DescribeGroup",
    "sso-directory:DescribeGroups",
    "sso-directory:DescribeProvisioningTenant",
    "sso-directory:DescribeUser",
    "sso-directory:DescribeUserByUniqueAttribute",
    "sso-directory:DescribeUsers",
    "sso-directory:DisableExternalIdPConfigurationForDirectory",
    "sso-directory:DisableUser",
    "sso-directory:EnableExternalIdPConfigurationForDirectory",
    "sso-directory:EnableUser",
    "sso-directory:GetAWSSPConfigurationForDirectory",
    "sso-directory:GetGroupId",
    "sso-directory:GetUserId",
    "sso-directory:GetUserPoolInfo",
    "sso-directory:ImportExternalIdPCertificate",
    "sso-directory:IsMemberInGroup",
    "sso-directory:IsMemberInGroups",
    "sso-directory:ListBearerTokens",
    "sso-directory:ListExternalIdPCertificates",
    "sso-directory:ListExternalIdPConfigurationsForDirectory",
    "sso-directory:ListGroups",
    "sso-directory:ListGroupsForMember",
    "sso-directory:ListGroupsForUser",
    "sso-directory:ListMembersInGroup",
    "sso-directory:ListMfaDevicesForUser",
    "sso-directory:ListProvisioningTenants",
    "sso-directory:ListUsers",
    "sso-directory:RemoveMemberFromGroup",
    "sso-directory:SearchGroups",
    "sso-directory:SearchUsers",
    "sso-directory:StartVirtualMfaDeviceRegistration",
    "sso-directory:StartWebAuthnDeviceRegistration",
    "sso-directory:UpdateExternalIdPConfigurationForDirectory",
    "sso-directory:UpdateGroup",
    "sso-directory:UpdateGroupDisplayName",
    "sso-directory:UpdateMfaDeviceForUser",
    "sso-directory:UpdatePassword",
    "sso-directory:UpdateUser",
    "sso-directory:UpdateUserName",
    "sso-directory:VerifyEmail",
    "states:InvokeHTTPEndpoint",
    "states:ListActivities",
    "states:ListStateMachines",
    "states:RevealSecrets",
    "states:SendTaskFailure",
    "states:SendTaskHeartbeat",
    "states:SendTaskSuccess",
    "states:TestState",
    "states:ValidateStateMachineDefinition",
    "storagegateway:ActivateGateway",
    "storagegateway:CreateTapePool",
    "storagegateway:DeleteTapeArchive",
    "storagegateway:DescribeTapeArchives",
    "storagegateway:ListAutomaticTapeCreationPolicies",
    "storagegateway:ListCacheReports",
    "storagegateway:ListFileShares",
    "storagegateway:ListFileSystemAssociations",
    "storagegateway:ListGateways",
    "storagegateway:ListTapePools",
    "storagegateway:ListTapes",
    "storagegateway:ListVolumes",
    "sts:DecodeAuthorizationMessage",
    "sts:GetAccessKeyInfo",
    "sts:GetCallerIdentity",
    "sts:GetServiceBearerToken",
    "sts:GetSessionToken",
    "support:AddAttachmentsToSet",
    "support:AddCommunicationToCase",
    "support:CreateCase",
    "support:DescribeAttachment",
    "support:DescribeCaseAttributes",
    "support:DescribeCases",
    "support:DescribeCommunication",
    "support:DescribeCommunications",
    "support:DescribeCreateCaseOptions",
    "support:DescribeIssueTypes",
    "support:DescribeServices",
    "support:DescribeSeverityLevels",
    "support:DescribeSupportLevel",
    "support:DescribeSupportedLanguages",
    "support:DescribeTrustedAdvisorCheckRefreshStatuses",
    "support:DescribeTrustedAdvisorCheckResult",
    "support:DescribeTrustedAdvisorCheckSummaries",
    "support:DescribeTrustedAdvisorChecks",
    "support:GetInteraction",
    "support:InitiateCallForCase",
    "support:InitiateChatForCase",
    "support:PutCaseAttributes",
    "support:RateCaseCommunication",
    "support:RefreshTrustedAdvisorCheck",
    "support:ResolveCase",
    "support:SearchForCases",
    "support:StartInteraction",
    "supportapp:CreateSlackChannelConfiguration",
    "supportapp:DeleteAccountAlias",
    "supportapp:DeleteSlackChannelConfiguration",
    "supportapp:DeleteSlackWorkspaceConfiguration",
    "supportapp:DescribeSlackChannels",
    "supportapp:GetAccountAlias",
    "supportapp:GetSlackOauthParameters",
    "supportapp:ListSlackChannelConfigurations",
    "supportapp:ListSlackWorkspaceConfigurations",
    "supportapp:PutAccountAlias",
    "supportapp:RedeemSlackOauthCode",
    "supportapp:RegisterSlackWorkspaceForOrganization",
    "supportapp:UpdateSlackChannelConfiguration",
    "supportplans:CreateSupportPlanSchedule",
    "supportplans:GetSupportPlan",
    "supportplans:GetSupportPlanUpdateStatus",
    "supportplans:ListSupportPlanModifiers",
    "supportplans:StartSupportPlanUpdate",
    "supportrecommendations:GetSupportTroubleshootingResponse",
    "supportrecommendations:StartSupportTroubleshooting",
    "sustainability:GetCarbonFootprintSummary",
    "swf:ListDomains",
    "swf:RegisterDomain",
    "synthetics:CreateCanary",
    "synthetics:CreateGroup",
    "synthetics:DescribeCanaries",
    "synthetics:DescribeCanariesLastRun",
    "synthetics:DescribeRuntimeVersions",
    "synthetics:ListGroups",
    "tag:DescribeReportCreation",
    "tag:GetComplianceSummary",
    "tag:GetResources",
    "tag:GetTagKeys",
    "tag:GetTagValues",
    "tag:StartReportCreation",
    "tag:TagResources",
    "tag:UntagResources",
    "tax:BatchDeleteTaxRegistration",
    "tax:BatchPutTaxRegistration",
    "tax:DeleteSupplementalTaxRegistration",
    "tax:DeleteTaxRegistration",
    "tax:GetExemptions",
    "tax:GetTaxInfoReportingDocument",
    "tax:GetTaxInheritance",
    "tax:GetTaxInterview",
    "tax:GetTaxRegistration",
    "tax:GetTaxRegistrationDocument",
    "tax:ListSupplementalTaxRegistrations",
    "tax:ListTaxRegistrations",
    "tax:PutSupplementalTaxRegistration",
    "tax:PutTaxInheritance",
    "tax:PutTaxInterview",
    "tax:PutTaxRegistration",
    "tax:UpdateExemptions",
    "textract:AnalyzeDocument",
    "textract:AnalyzeExpense",
    "textract:AnalyzeID",
    "textract:CreateAdapter",
    "textract:DetectDocumentText",
    "textract:GetDocumentAnalysis",
    "textract:GetDocumentTextDetection",
    "textract:GetExpenseAnalysis",
    "textract:GetLendingAnalysis",
    "textract:GetLendingAnalysisSummary",
    "textract:ListAdapterVersions",
    "textract:ListAdapters",
    "textract:StartDocumentAnalysis",
    "textract:StartDocumentTextDetection",
    "textract:StartExpenseAnalysis",
    "textract:StartLendingAnalysis",
    "thinclient:CreateEnvironment",
    "thinclient:ListDevices",
    "thinclient:ListEnvironments",
    "thinclient:ListSoftwareSets",
    "timestream:CancelQuery",
    "timestream:CreateScheduledQuery",
    "timestream:DescribeAccountSettings",
    "timestream:DescribeBatchLoadTask",
    "timestream:DescribeEndpoints",
    "timestream:GetAwsBackupStatus",
    "timestream:GetAwsRestoreStatus",
    "timestream:ListBatchLoadTasks",
    "timestream:ListDatabases",
    "timestream:ListScheduledQueries",
    "timestream:ResumeBatchLoadTask",
    "timestream:SelectValues",
    "timestream:UpdateAccountSettings",
    "timestream-influxdb:CreateDbParameterGroup",
    "timestream-influxdb:ListDbClusters",
    "timestream-influxdb:ListDbInstances",
    "timestream-influxdb:ListDbParameterGroups",
    "tiros:CreateQuery",
    "tiros:ExtendQuery",
    "tiros:GetQueryAnswer",
    "tiros:GetQueryExplanation",
    "tiros:GetQueryExtensionAccounts",
    "tnb:ListTagsForResource",
    "transcribe:CreateCallAnalyticsCategory",
    "transcribe:CreateLanguageModel",
    "transcribe:CreateMedicalVocabulary",
    "transcribe:CreateVocabulary",
    "transcribe:CreateVocabularyFilter",
    "transcribe:GetMedicalScribeStream",
    "transcribe:ListCallAnalyticsCategories",
    "transcribe:ListCallAnalyticsJobs",
    "transcribe:ListLanguageModels",
    "transcribe:ListMedicalScribeJobs",
    "transcribe:ListMedicalTranscriptionJobs",
    "transcribe:ListMedicalVocabularies",
    "transcribe:ListTagsForResource",
    "transcribe:ListTranscriptionJobs",
    "transcribe:ListVocabularies",
    "transcribe:ListVocabularyFilters",
    "transcribe:StartCallAnalyticsJob",
    "transcribe:StartCallAnalyticsStreamTranscription",
    "transcribe:StartCallAnalyticsStreamTranscriptionWebSocket",
    "transcribe:StartMedicalScribeJob",
    "transcribe:StartMedicalScribeStream",
    "transcribe:StartMedicalStreamTranscription",
    "transcribe:StartMedicalStreamTranscriptionWebSocket",
    "transcribe:StartMedicalTranscriptionJob",
    "transcribe:StartStreamTranscription",
    "transcribe:StartStreamTranscriptionWebSocket",
    "transcribe:StartTranscriptionJob",
    "transcribe:TagResource",
    "transcribe:UntagResource",
    "transfer:CreateConnector",
    "transfer:CreateProfile",
    "transfer:CreateServer",
    "transfer:CreateWebApp",
    "transfer:CreateWorkflow",
    "transfer:DescribeSecurityPolicy",
    "transfer:ImportCertificate",
    "transfer:ListCertificates",
    "transfer:ListConnectors",
    "transfer:ListProfiles",
    "transfer:ListSecurityPolicies",
    "transfer:ListServers",
    "transfer:ListWebApps",
    "transfer:ListWorkflows",
    "transfer:UpdateAccess",
    "translate:DescribeTextTranslationJob",
    "translate:ListLanguages",
    "translate:ListParallelData",
    "translate:ListTerminologies",
    "translate:ListTextTranslationJobs",
    "translate:StopTextTranslationJob",
    "trustedadvisor:BatchUpdateRecommendationResourceExclusion",
    "trustedadvisor:CreateEngagement",
    "trustedadvisor:CreateEngagementAttachment",
    "trustedadvisor:CreateEngagementCommunication",
    "trustedadvisor:DeleteNotificationConfigurationForDelegatedAdmin",
    "trustedadvisor:DescribeAccount",
    "trustedadvisor:DescribeAccountAccess",
    "trustedadvisor:DescribeChecks",
    "trustedadvisor:DescribeNotificationConfigurations",
    "trustedadvisor:DescribeNotificationPreferences",
    "trustedadvisor:DescribeOrganization",
    "trustedadvisor:DescribeOrganizationAccounts",
    "trustedadvisor:DescribeReports",
    "trustedadvisor:DescribeRisk",
    "trustedadvisor:DescribeRiskResources",
    "trustedadvisor:DescribeRisks",
    "trustedadvisor:DescribeServiceMetadata",
    "trustedadvisor:DownloadRisk",
    "trustedadvisor:GenerateReport",
    "trustedadvisor:GetEngagement",
    "trustedadvisor:GetEngagementAttachment",
    "trustedadvisor:GetEngagementType",
    "trustedadvisor:GetOrganizationRecommendation",
    "trustedadvisor:GetRecommendation",
    "trustedadvisor:ListAccountsForParent",
    "trustedadvisor:ListChecks",
    "trustedadvisor:ListEngagementCommunications",
    "trustedadvisor:ListEngagementTypes",
    "trustedadvisor:ListEngagements",
    "trustedadvisor:ListOrganizationRecommendationAccounts",
    "trustedadvisor:ListOrganizationRecommendationResources",
    "trustedadvisor:ListOrganizationRecommendations",
    "trustedadvisor:ListOrganizationalUnitsForParent",
    "trustedadvisor:ListRecommendationResources",
    "trustedadvisor:ListRecommendations",
    "trustedadvisor:ListRoots",
    "trustedadvisor:SetAccountAccess",
    "trustedadvisor:SetOrganizationAccess",
    "trustedadvisor:UpdateEngagement",
    "trustedadvisor:UpdateEngagementStatus",
    "trustedadvisor:UpdateNotificationConfigurations",
    "trustedadvisor:UpdateNotificationPreferences",
    "trustedadvisor:UpdateOrganizationRecommendationLifecycle",
    "trustedadvisor:UpdateRecommendationLifecycle",
    "trustedadvisor:UpdateRiskStatus",
    "ts:ListExecutions",
    "ts:ListTools",
    "ts:StartExecution",
    "user-subscriptions:CreateClaim",
    "user-subscriptions:DeleteClaim",
    "user-subscriptions:ListApplicationClaims",
    "user-subscriptions:ListClaims",
    "user-subscriptions:ListUserSubscriptions",
    "user-subscriptions:UpdateClaim",
    "vendor-insights:CreateDataSource",
    "vendor-insights:CreateSecurityProfile",
    "vendor-insights:GetProfileAccessTerms",
    "vendor-insights:ListDataSources",
    "vendor-insights:ListEntitledSecurityProfiles",
    "vendor-insights:ListSecurityProfiles",
    "verified-access:AllowVerifiedAccess",
    "verifiedpermissions:CreatePolicyStore",
    "verifiedpermissions:ListPolicyStores",
    "voiceid:CreateDomain",
    "voiceid:DescribeComplianceConsent",
    "voiceid:ListDomains",
    "voiceid:RegisterComplianceConsent",
    "vpc-lattice:AssociateViaAWSService-EventsAndStates",
    "vpc-lattice:CreateServiceNetworkVpcEndpointAssociation",
    "vpc-lattice:ListAccessLogSubscriptions",
    "vpc-lattice:ListListeners",
    "vpc-lattice:ListResourceConfigurations",
    "vpc-lattice:ListResourceEndpointAssociations",
    "vpc-lattice:ListResourceGateways",
    "vpc-lattice:ListRules",
    "vpc-lattice:ListServiceNetworkResourceAssociations",
    "vpc-lattice:ListServiceNetworkServiceAssociations",
    "vpc-lattice:ListServiceNetworkVpcAssociations",
    "vpc-lattice:ListServiceNetworkVpcEndpointAssociations",
    "vpc-lattice:ListServiceNetworks",
    "vpc-lattice:ListServices",
    "vpc-lattice:ListTagsForResource",
    "vpc-lattice:ListTargetGroups",
    "vpce:AllowMultiRegion",
    "waf:GetChangeToken",
    "waf:GetChangeTokenStatus",
    "waf:ListActivatedRulesInRuleGroup",
    "waf:ListByteMatchSets",
    "waf:ListGeoMatchSets",
    "waf:ListIPSets",
    "waf:ListLoggingConfigurations",
    "waf:ListRateBasedRules",
    "waf:ListRegexMatchSets",
    "waf:ListRegexPatternSets",
    "waf:ListRuleGroups",
    "waf:ListRules",
    "waf:ListSizeConstraintSets",
    "waf:ListSqlInjectionMatchSets",
    "waf:ListSubscribedRuleGroups",
    "waf:ListWebACLs",
    "waf:ListXssMatchSets",
    "waf-regional:GetChangeToken",
    "waf-regional:GetChangeTokenStatus",
    "waf-regional:ListActivatedRulesInRuleGroup",
    "waf-regional:ListByteMatchSets",
    "waf-regional:ListGeoMatchSets",
    "waf-regional:ListIPSets",
    "waf-regional:ListLoggingConfigurations",
    "waf-regional:ListRateBasedRules",
    "waf-regional:ListRegexMatchSets",
    "waf-regional:ListRegexPatternSets",
    "waf-regional:ListRuleGroups",
    "waf-regional:ListRules",
    "waf-regional:ListSizeConstraintSets",
    "waf-regional:ListSqlInjectionMatchSets",
    "waf-regional:ListSubscribedRuleGroups",
    "waf-regional:ListWebACLs",
    "waf-regional:ListXssMatchSets",
    "wafv2:CheckCapacity",
    "wafv2:CreateAPIKey",
    "wafv2:DeleteAPIKey",
    "wafv2:DescribeAllManagedProducts",
    "wafv2:DescribeManagedProductsByVendor",
    "wafv2:DescribeManagedRuleGroup",
    "wafv2:GenerateMobileSdkReleaseUrl",
    "wafv2:GetDecryptedAPIKey",
    "wafv2:GetMobileSdkRelease",
    "wafv2:ListAPIKeys",
    "wafv2:ListAvailableManagedRuleGroupVersions",
    "wafv2:ListAvailableManagedRuleGroups",
    "wafv2:ListIPSets",
    "wafv2:ListLoggingConfigurations",
    "wafv2:ListManagedRuleSets",
    "wafv2:ListMobileSdkReleases",
    "wafv2:ListRegexPatternSets",
    "wafv2:ListRuleGroups",
    "wafv2:ListWebACLs",
    "wam:AuthenticatePackager",
    "wellarchitected:ConfigureIntegration",
    "wellarchitected:CreateProfile",
    "wellarchitected:CreateReviewTemplate",
    "wellarchitected:CreateWorkload",
    "wellarchitected:GetConsolidatedReport",
    "wellarchitected:GetGlobalSettings",
    "wellarchitected:GetProfileTemplate",
    "wellarchitected:ImportLens",
    "wellarchitected:ListLenses",
    "wellarchitected:ListNotifications",
    "wellarchitected:ListProfileNotifications",
    "wellarchitected:ListProfiles",
    "wellarchitected:ListReviewTemplates",
    "wellarchitected:ListShareInvitations",
    "wellarchitected:ListWorkloads",
    "wellarchitected:UpdateGlobalSettings",
    "wellarchitected:UpdateShareInvitation",
    "wickr:CreateNetwork",
    "wickr:DeleteNetwork",
    "wickr:ListNetworks",
    "wickr:ListTagsForResource",
    "wisdom:CreateAssistant",
    "wisdom:CreateKnowledgeBase",
    "wisdom:CreateQuickResponse",
    "wisdom:CreateSession",
    "wisdom:ListAssistantAssociations",
    "wisdom:ListAssistants",
    "wisdom:ListKnowledgeBases",
    "wisdom:ListTagsForResource",
    "wisdom:NotifyRecommendationsReceived",
    "wisdom:SearchSessions",
    "workdocs:AbortDocumentVersionUpload",
    "workdocs:ActivateUser",
    "workdocs:AddNotificationPermissions",
    "workdocs:AddResourcePermissions",
    "workdocs:AddUserToGroup",
    "workdocs:CheckAlias",
    "workdocs:CreateComment",
    "workdocs:CreateCustomMetadata",
    "workdocs:CreateFolder",
    "workdocs:CreateInstance",
    "workdocs:CreateLabels",
    "workdocs:CreateNotificationSubscription",
    "workdocs:CreateUser",
    "workdocs:DeactivateUser",
    "workdocs:DeleteComment",
    "workdocs:DeleteCustomMetadata",
    "workdocs:DeleteDocument",
    "workdocs:DeleteDocumentVersion",
    "workdocs:DeleteFolder",
    "workdocs:DeleteFolderContents",
    "workdocs:DeleteInstance",
    "workdocs:DeleteLabels",
    "workdocs:DeleteNotificationPermissions",
    "workdocs:DeleteNotificationSubscription",
    "workdocs:DeleteUser",
    "workdocs:DeregisterDirectory",
    "workdocs:DescribeActivities",
    "workdocs:DescribeAvailableDirectories",
    "workdocs:DescribeComments",
    "workdocs:DescribeDocumentVersions",
    "workdocs:DescribeFolderContents",
    "workdocs:DescribeGroups",
    "workdocs:DescribeInstanceExports",
    "workdocs:DescribeInstances",
    "workdocs:DescribeNotificationPermissions",
    "workdocs:DescribeNotificationSubscriptions",
    "workdocs:DescribeResourcePermissions",
    "workdocs:DescribeRootFolders",
    "workdocs:DescribeUsers",
    "workdocs:DownloadDocumentVersion",
    "workdocs:GetCurrentUser",
    "workdocs:GetDocument",
    "workdocs:GetDocumentPath",
    "workdocs:GetDocumentVersion",
    "workdocs:GetFolder",
    "workdocs:GetFolderPath",
    "workdocs:GetGroup",
    "workdocs:GetResources",
    "workdocs:InitiateDocumentVersionUpload",
    "workdocs:RegisterDirectory",
    "workdocs:RemoveAllResourcePermissions",
    "workdocs:RemoveResourcePermission",
    "workdocs:RestoreDocumentVersions",
    "workdocs:SearchResources",
    "workdocs:UpdateDocument",
    "workdocs:UpdateDocumentVersion",
    "workdocs:UpdateFolder",
    "workdocs:UpdateInstanceAlias",
    "workdocs:UpdateUser",
    "workdocs:UpdateUserAdministrativeSettings",
    "worklink:CreateFleet",
    "worklink:ListFleets",
    "workmail:CreateIdentityCenterApplication",
    "workmail:CreateOrganization",
    "workmail:DeleteIdentityCenterApplication",
    "workmail:ListOrganizations",
    "workspaces:AcceptAccountLinkInvitation",
    "workspaces:CreateAccountLinkInvitation",
    "workspaces:CreateConnectionAlias",
    "workspaces:CreateIpGroup",
    "workspaces:CreateTags",
    "workspaces:DeleteAccountLinkInvitation",
    "workspaces:DeleteTags",
    "workspaces:DescribeAccount",
    "workspaces:DescribeAccountModifications",
    "workspaces:DescribeApplications",
    "workspaces:DescribeConnectionAliases",
    "workspaces:DescribeTags",
    "workspaces:DescribeWorkspaceBundles",
    "workspaces:DescribeWorkspaceDirectories",
    "workspaces:DescribeWorkspaceImages",
    "workspaces:DescribeWorkspaces",
    "workspaces:DescribeWorkspacesConnectionStatus",
    "workspaces:DescribeWorkspacesPools",
    "workspaces:GetAccountLink",
    "workspaces:ImportWorkspaceImage",
    "workspaces:ListAccountLinks",
    "workspaces:ListAvailableManagementCidrRanges",
    "workspaces:ModifyAccount",
    "workspaces:RejectAccountLinkInvitation",
    "workspaces:TerminateWorkspacesPoolSession",
    "workspaces-web:CreateBrowserSettings",
    "workspaces-web:CreateDataProtectionSettings",
    "workspaces-web:CreateIpAccessSettings",
    "workspaces-web:CreateNetworkSettings",
    "workspaces-web:CreatePortal",
    "workspaces-web:CreateTrustStore",
    "workspaces-web:CreateUserAccessLoggingSettings",
    "workspaces-web:CreateUserSettings",
    "workspaces-web:ListBrowserSettings",
    "workspaces-web:ListDataProtectionSettings",
    "workspaces-web:ListIpAccessSettings",
    "workspaces-web:ListNetworkSettings",
    "workspaces-web:ListPortals",
    "workspaces-web:ListTagsForResource",
    "workspaces-web:ListTrustStoreCertificates",
    "workspaces-web:ListTrustStores",
    "workspaces-web:ListUserAccessLoggingSettings",
    "workspaces-web:ListUserSettings",
    "xray:BatchGetTraceSummaryById",
    "xray:BatchGetTraces",
    "xray:CancelTraceRetrieval",
    "xray:DeleteResourcePolicy",
    "xray:GetDistinctTraceGraphs",
    "xray:GetEncryptionConfig",
    "xray:GetGroups",
    "xray:GetIndexingRules",
    "xray:GetInsight",
    "xray:GetInsightEvents",
    "xray:GetInsightImpactGraph",
    "xray:GetInsightSummaries",
    "xray:GetRetrievedTracesGraph",
    "xray:GetSamplingRules",
    "xray:GetSamplingStatisticSummaries",
    "xray:GetSamplingTargets",
    "xray:GetServiceGraph",
    "xray:GetTimeSeriesServiceStatistics",
    "xray:GetTraceGraph",
    "xray:GetTraceSegmentDestination",
    "xray:GetTraceSummaries",
    "xray:Link",
    "xray:ListResourcePolicies",
    "xray:ListRetrievedTraces",
    "xray:PutEncryptionConfig",
    "xray:PutResourcePolicy",
    "xray:PutSpans",
    "xray:PutSpansForIndexing",
    "xray:PutTelemetryRecords",
    "xray:PutTraceSegments",
    "xray:StartTraceRetrieval",
    "xray:UpdateIndexingRule",
    "xray:UpdateTraceSegmentDestination"
   ]
  }
 },
 "if": {
  "properties": {
   "Action": {
    "else": {
     "contains": {
      "$ref": "#/definitions/resources_asterisk",
      "minContains": 1
     },
     "type": "array"
    },
    "if": {
     "type": "string"
    },
    "then": {
     "$ref": "#/definitions/resources_asterisk"
    }
   }
  },
  "required": [
   "Action"
  ]
 },
 "then": {
  "properties": {
   "Resource": {
    "else": {
     "contains": {
      "enum": [
       "*"
      ]
     },
     "minContains": 1,
     "type": "array"
    },
    "if": {
     "type": "string"
    },
    "then": {
     "const": "*"
    }
   }
  }
 },
 "type": "object"
}
