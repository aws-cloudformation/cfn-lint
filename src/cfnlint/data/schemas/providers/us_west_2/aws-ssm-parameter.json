{
 "additionalProperties": false,
 "createOnlyProperties": [
  "/properties/Name"
 ],
 "description": "The ``AWS::SSM::Parameter`` resource creates an SSM parameter in SYSlong Parameter Store.\n  To create an SSM parameter, you must have the IAMlong (IAM) permissions ``ssm:PutParameter`` and ``ssm:AddTagsToResource``. On stack creation, CFNlong adds the following three tags to the parameter: ``aws:cloudformation:stack-name``, ``aws:cloudformation:logical-id``, and ``aws:cloudformation:stack-id``, in addition to any custom tags you specify.\n To add, update, or remove tags during stack update, you must have IAM permissions for both ``ssm:AddTagsToResource`` and ``ssm:RemoveTagsFromResource``. For more information, see [Managing Access Using Policies](https://docs.aws.amazon.com/systems-manager/latest/userguide/security-iam.html#security_iam_access-manage) in the *User Guide*.\n  For information about valid values for parameters, see [Requirements and Constraints for Parameter Names](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-su-create.html#sysman-paramete",
 "handlers": {
  "create": {
   "permissions": [
    "ssm:PutParameter",
    "ssm:AddTagsToResource",
    "ssm:GetParameters"
   ],
   "timeoutInMinutes": 5
  },
  "delete": {
   "permissions": [
    "ssm:DeleteParameter"
   ]
  },
  "list": {
   "permissions": [
    "ssm:DescribeParameters"
   ]
  },
  "read": {
   "permissions": [
    "ssm:GetParameters"
   ]
  },
  "update": {
   "permissions": [
    "ssm:PutParameter",
    "ssm:AddTagsToResource",
    "ssm:RemoveTagsFromResource",
    "ssm:GetParameters"
   ],
   "timeoutInMinutes": 5
  }
 },
 "primaryIdentifier": [
  "/properties/Name"
 ],
 "properties": {
  "AllowedPattern": {
   "description": "A regular expression used to validate the parameter value. For example, for String types with values restricted to numbers, you can specify the following: ``AllowedPattern=^\\d+$``",
   "type": "string"
  },
  "DataType": {
   "description": "The data type of the parameter, such as ``text`` or ``aws:ec2:image``. The default is ``text``.",
   "enum": [
    "text",
    "aws:ec2:image"
   ],
   "type": "string"
  },
  "Description": {
   "description": "Information about the parameter.",
   "type": "string"
  },
  "Name": {
   "description": "The name of the parameter.\n The maximum length constraint listed below includes capacity for additional system attributes that aren't part of the name. The maximum length for a parameter name, including the full length of the parameter ARN, is 1011 characters. For example, the length of the following parameter name is 65 characters, not 20 characters: ``arn:aws:ssm:us-east-2:111222333444:parameter/ExampleParameterName``",
   "type": "string"
  },
  "Policies": {
   "description": "Information about the policies assigned to a parameter.\n  [Assigning parameter policies](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-policies.html) in the *User Guide*.",
   "type": "string"
  },
  "Tags": {
   "additionalProperties": false,
   "description": "Optional metadata that you assign to a resource in the form of an arbitrary set of tags (key-value pairs). Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag a SYS parameter to identify the type of resource to which it applies, the environment, or the type of configuration data referenced by the parameter.",
   "patternProperties": {
    "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$": {
     "type": "string"
    }
   },
   "type": "object"
  },
  "Tier": {
   "description": "The parameter tier.",
   "enum": [
    "Standard",
    "Advanced",
    "Intelligent-Tiering"
   ],
   "type": "string"
  },
  "Type": {
   "description": "The type of parameter.\n  Although ``SecureString`` is included in the list of valid values, CFNlong does *not* currently support creating a ``SecureString`` parameter type.",
   "enum": [
    "String",
    "StringList"
   ],
   "type": "string"
  },
  "Value": {
   "description": "The parameter value.\n  If type is ``StringList``, the system returns a comma-separated string with no spaces between commas in the ``Value`` field.",
   "type": "string"
  }
 },
 "required": [
  "Value",
  "Type"
 ],
 "tagging": {
  "cloudFormationSystemTags": true,
  "tagOnCreate": true,
  "tagProperty": "/properties/Tags",
  "tagUpdatable": true,
  "taggable": true
 },
 "typeName": "AWS::SSM::Parameter",
 "writeOnlyProperties": [
  "/properties/Tags",
  "/properties/Description",
  "/properties/Tier",
  "/properties/AllowedPattern",
  "/properties/Policies"
 ]
}
