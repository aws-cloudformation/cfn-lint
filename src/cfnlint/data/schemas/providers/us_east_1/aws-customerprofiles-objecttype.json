{
 "additionalProperties": false,
 "createOnlyProperties": [
  "/properties/DomainName",
  "/properties/ObjectTypeName"
 ],
 "definitions": {
  "FieldMap": {
   "additionalProperties": false,
   "properties": {
    "Name": {
     "maxLength": 64,
     "minLength": 1,
     "pattern": "^[a-zA-Z0-9_-]+$",
     "type": "string"
    },
    "ObjectTypeField": {
     "$ref": "#/definitions/ObjectTypeField"
    }
   },
   "type": "object"
  },
  "KeyMap": {
   "additionalProperties": false,
   "properties": {
    "Name": {
     "maxLength": 64,
     "minLength": 1,
     "pattern": "^[a-zA-Z0-9_-]+$",
     "type": "string"
    },
    "ObjectTypeKeyList": {
     "insertionOrder": false,
     "items": {
      "$ref": "#/definitions/ObjectTypeKey"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "ObjectTypeField": {
   "additionalProperties": false,
   "description": "Represents a field in a ProfileObjectType.",
   "properties": {
    "ContentType": {
     "description": "The content type of the field. Used for determining equality when searching.",
     "enum": [
      "STRING",
      "NUMBER",
      "PHONE_NUMBER",
      "EMAIL_ADDRESS",
      "NAME"
     ],
     "type": "string"
    },
    "Source": {
     "description": "A field of a ProfileObject. For example: _source.FirstName, where \"_source\" is a ProfileObjectType of a Zendesk user and \"FirstName\" is a field in that ObjectType.",
     "maxLength": 1000,
     "minLength": 1,
     "type": "string"
    },
    "Target": {
     "description": "The location of the data in the standard ProfileObject model. For example: _profile.Address.PostalCode.",
     "maxLength": 1000,
     "minLength": 1,
     "type": "string"
    }
   },
   "type": "object"
  },
  "ObjectTypeKey": {
   "additionalProperties": false,
   "description": "An object that defines the Key element of a ProfileObject. A Key is a special element that can be used to search for a customer profile.",
   "properties": {
    "FieldNames": {
     "description": "The reference for the key name of the fields map. ",
     "items": {
      "maxLength": 64,
      "minLength": 1,
      "pattern": "^[a-zA-Z0-9_-]+$",
      "type": "string"
     },
     "type": "array"
    },
    "StandardIdentifiers": {
     "description": "The types of keys that a ProfileObject can have. Each ProfileObject can have only 1 UNIQUE key but multiple PROFILE keys. PROFILE means that this key can be used to tie an object to a PROFILE. UNIQUE means that it can be used to uniquely identify an object. If a key a is marked as SECONDARY, it will be used to search for profiles after all other PROFILE keys have been searched. A LOOKUP_ONLY key is only used to match a profile but is not persisted to be used for searching of the profile. A NEW_ONLY key is only used if the profile does not already exist before the object is ingested, otherwise it is only used for matching objects to profiles.",
     "items": {
      "enum": [
       "PROFILE",
       "UNIQUE",
       "SECONDARY",
       "LOOKUP_ONLY",
       "NEW_ONLY"
      ],
      "type": "string"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "Tag": {
   "additionalProperties": false,
   "properties": {
    "Key": {
     "maxLength": 128,
     "minLength": 1,
     "pattern": "^(?!aws:)[a-zA-Z+-=._:/]+$",
     "type": "string"
    },
    "Value": {
     "maxLength": 256,
     "minLength": 0,
     "type": "string"
    }
   },
   "required": [
    "Key",
    "Value"
   ],
   "type": "object"
  }
 },
 "description": "An ObjectType resource of Amazon Connect Customer Profiles",
 "handlers": {
  "create": {
   "permissions": [
    "profile:GetProfileObjectType",
    "profile:PutProfileObjectType"
   ]
  },
  "delete": {
   "permissions": [
    "profile:DeleteProfileObjectType"
   ]
  },
  "list": {
   "permissions": [
    "profile:ListProfileObjectTypes"
   ]
  },
  "read": {
   "permissions": [
    "profile:GetProfileObjectType"
   ]
  },
  "update": {
   "permissions": [
    "profile:GetProfileObjectType",
    "profile:PutProfileObjectType",
    "profile:UntagResource",
    "profile:TagResource"
   ]
  }
 },
 "primaryIdentifier": [
  "/properties/DomainName",
  "/properties/ObjectTypeName"
 ],
 "properties": {
  "AllowProfileCreation": {
   "description": "Indicates whether a profile should be created when data is received.",
   "type": "boolean"
  },
  "CreatedAt": {
   "description": "The time of this integration got created.",
   "type": "string"
  },
  "Description": {
   "description": "Description of the profile object type.",
   "maxLength": 1000,
   "minLength": 1,
   "type": "string"
  },
  "DomainName": {
   "description": "The unique name of the domain.",
   "maxLength": 64,
   "minLength": 1,
   "pattern": "^[a-zA-Z0-9_-]+$",
   "type": "string"
  },
  "EncryptionKey": {
   "description": "The default encryption key",
   "maxLength": 255,
   "minLength": 0,
   "type": "string"
  },
  "ExpirationDays": {
   "description": "The default number of days until the data within the domain expires.",
   "maximum": 1098,
   "minimum": 1,
   "type": "integer"
  },
  "Fields": {
   "description": "A list of the name and ObjectType field.",
   "insertionOrder": false,
   "items": {
    "$ref": "#/definitions/FieldMap"
   },
   "type": "array"
  },
  "Keys": {
   "description": "A list of unique keys that can be used to map data to the profile.",
   "insertionOrder": false,
   "items": {
    "$ref": "#/definitions/KeyMap"
   },
   "type": "array"
  },
  "LastUpdatedAt": {
   "description": "The time of this integration got last updated at.",
   "type": "string"
  },
  "ObjectTypeName": {
   "description": "The name of the profile object type.",
   "maxLength": 255,
   "minLength": 1,
   "pattern": "^[a-zA-Z_][a-zA-Z_0-9-]*$",
   "type": "string"
  },
  "Tags": {
   "description": "The tags (keys and values) associated with the integration.",
   "items": {
    "$ref": "#/definitions/Tag"
   },
   "maxItems": 50,
   "minItems": 0,
   "type": "array"
  },
  "TemplateId": {
   "description": "A unique identifier for the object template.",
   "maxLength": 64,
   "minLength": 1,
   "pattern": "^[a-zA-Z0-9_-]+$",
   "type": "string"
  }
 },
 "readOnlyProperties": [
  "/properties/LastUpdatedAt",
  "/properties/CreatedAt"
 ],
 "required": [
  "DomainName"
 ],
 "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-customer-profiles.git",
 "typeName": "AWS::CustomerProfiles::ObjectType"
}
