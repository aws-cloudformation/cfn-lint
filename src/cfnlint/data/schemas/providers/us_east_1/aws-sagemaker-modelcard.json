{
 "additionalProperties": false,
 "createOnlyProperties": [
  "/properties/ModelCardName",
  "/properties/SecurityConfig"
 ],
 "definitions": {
  "AdditionalInformation": {
   "additionalProperties": false,
   "properties": {
    "CaveatsAndRecommendations": {
     "description": "Caveats and recommendations for people who might use this model in their applications.",
     "maxLength": 2048,
     "type": "string"
    },
    "CustomDetails": {
     "additionalProperties": false,
     "description": "customer details.",
     "patternProperties": {
      "[a-zA-Z_][a-zA-Z0-9_]*": {
       "maxLength": 1024,
       "type": "string"
      }
     },
     "type": "object"
    },
    "EthicalConsiderations": {
     "description": "Any ethical considerations that the author wants to provide.",
     "maxLength": 2048,
     "type": "string"
    }
   },
   "type": "object"
  },
  "AxisNameArray": {
   "insertionOrder": true,
   "items": {
    "maxLength": 63,
    "type": "string"
   },
   "type": "array"
  },
  "AxisNameString": {
   "maxLength": 63,
   "type": "string"
  },
  "BarChartMetric": {
   "additionalProperties": false,
   "properties": {
    "Name": {
     "pattern": ".{1,255}",
     "type": "string"
    },
    "Notes": {
     "maxLength": 1024,
     "type": "string"
    },
    "Type": {
     "enum": [
      "bar_chart"
     ],
     "type": "string"
    },
    "Value": {
     "anyOf": [
      {
       "insertionOrder": true,
       "items": {
        "type": "number"
       },
       "minItems": 1,
       "type": "array"
      }
     ]
    },
    "XAxisName": {
     "$ref": "#/definitions/AxisNameArray"
    },
    "YAxisName": {
     "$ref": "#/definitions/AxisNameString"
    }
   },
   "required": [
    "Name",
    "Type",
    "Value"
   ],
   "type": "object"
  },
  "BusinessDetails": {
   "additionalProperties": false,
   "description": "Business details.",
   "properties": {
    "BusinessProblem": {
     "description": "What business problem does the model solve?",
     "maxLength": 2048,
     "type": "string"
    },
    "BusinessStakeholders": {
     "description": "Business stakeholders.",
     "maxLength": 2048,
     "type": "string"
    },
    "LineOfBusiness": {
     "description": "Line of business.",
     "maxLength": 2048,
     "type": "string"
    }
   },
   "type": "object"
  },
  "Container": {
   "additionalProperties": false,
   "properties": {
    "Image": {
     "description": "Inference environment path. The Amazon EC2 Container Registry (Amazon ECR) path where inference code is stored.",
     "maxLength": 255,
     "type": "string"
    },
    "ModelDataUrl": {
     "description": "The Amazon S3 path where the model artifacts, which result from model training, are stored.",
     "maxLength": 1024,
     "type": "string"
    },
    "NearestModelName": {
     "description": "The name of a pre-trained machine learning benchmarked by Amazon SageMaker Inference Recommender model that matches your model.",
     "type": "string"
    }
   },
   "required": [
    "Image"
   ],
   "type": "object"
  },
  "Content": {
   "additionalProperties": false,
   "description": "The content of the model card.",
   "properties": {
    "AdditionalInformation": {
     "$ref": "#/definitions/AdditionalInformation"
    },
    "BusinessDetails": {
     "$ref": "#/definitions/BusinessDetails"
    },
    "EvaluationDetails": {
     "$ref": "#/definitions/EvaluationDetails"
    },
    "IntendedUses": {
     "$ref": "#/definitions/IntendedUses"
    },
    "ModelOverview": {
     "$ref": "#/definitions/ModelOverview"
    },
    "ModelPackageDetails": {
     "$ref": "#/definitions/ModelPackageDetails"
    },
    "TrainingDetails": {
     "$ref": "#/definitions/TrainingDetails"
    }
   },
   "type": "object"
  },
  "EvaluationDetail": {
   "additionalProperties": false,
   "description": "item of evaluation details",
   "properties": {
    "Datasets": {
     "insertionOrder": true,
     "items": {
      "maxLength": 1024,
      "type": "string"
     },
     "maxItems": 10,
     "type": "array"
    },
    "EvaluationJobArn": {
     "maxLength": 256,
     "type": "string"
    },
    "EvaluationObservation": {
     "maxLength": 2096,
     "type": "string"
    },
    "Metadata": {
     "additionalProperties": false,
     "description": "additional attributes associated with the evaluation results.",
     "patternProperties": {
      "[a-zA-Z_][a-zA-Z0-9_]*": {
       "maxLength": 1024,
       "type": "string"
      }
     },
     "type": "object"
    },
    "MetricGroups": {
     "default": [],
     "insertionOrder": true,
     "items": {
      "$ref": "#/definitions/MetricGroup"
     },
     "type": "array"
    },
    "Name": {
     "pattern": ".{1,63}",
     "type": "string"
    }
   },
   "required": [
    "Name"
   ],
   "type": "object"
  },
  "EvaluationDetails": {
   "default": [],
   "insertionOrder": true,
   "items": {
    "$ref": "#/definitions/EvaluationDetail"
   },
   "type": "array"
  },
  "InferenceSpecification": {
   "additionalProperties": false,
   "properties": {
    "Containers": {
     "description": "Contains inference related information which were used to create model package.",
     "insertionOrder": true,
     "items": {
      "$ref": "#/definitions/Container"
     },
     "maxItems": 15,
     "minItems": 1,
     "type": "array"
    }
   },
   "required": [
    "Containers"
   ],
   "type": "object"
  },
  "IntendedUses": {
   "additionalProperties": false,
   "description": "Intended usage of model.",
   "properties": {
    "ExplanationsForRiskRating": {
     "maxLength": 2048,
     "type": "string"
    },
    "FactorsAffectingModelEfficiency": {
     "maxLength": 2048,
     "type": "string"
    },
    "IntendedUses": {
     "description": "intended use cases.",
     "maxLength": 2048,
     "type": "string"
    },
    "PurposeOfModel": {
     "description": "Why the model was developed?",
     "maxLength": 2048,
     "type": "string"
    },
    "RiskRating": {
     "$ref": "#/definitions/RiskRating"
    }
   },
   "type": "object"
  },
  "LinearGraphMetric": {
   "additionalProperties": false,
   "description": "Linear graph metric.",
   "properties": {
    "Name": {
     "pattern": ".{1,255}",
     "type": "string"
    },
    "Notes": {
     "maxLength": 1024,
     "type": "string"
    },
    "Type": {
     "enum": [
      "linear_graph"
     ],
     "type": "string"
    },
    "Value": {
     "anyOf": [
      {
       "insertionOrder": true,
       "items": {
        "insertionOrder": true,
        "items": {
         "type": "number"
        },
        "maxItems": 2,
        "minItems": 2,
        "type": "array"
       },
       "minItems": 1,
       "type": "array"
      }
     ]
    },
    "XAxisName": {
     "$ref": "#/definitions/AxisNameString"
    },
    "YAxisName": {
     "$ref": "#/definitions/AxisNameString"
    }
   },
   "required": [
    "Name",
    "Type",
    "Value"
   ],
   "type": "object"
  },
  "MatrixMetric": {
   "additionalProperties": false,
   "properties": {
    "Name": {
     "pattern": ".{1,255}",
     "type": "string"
    },
    "Notes": {
     "maxLength": 1024,
     "type": "string"
    },
    "Type": {
     "enum": [
      "matrix"
     ],
     "type": "string"
    },
    "Value": {
     "anyOf": [
      {
       "insertionOrder": true,
       "items": {
        "insertionOrder": true,
        "items": {
         "type": "number"
        },
        "maxItems": 20,
        "minItems": 1,
        "type": "array"
       },
       "maxItems": 20,
       "minItems": 1,
       "type": "array"
      }
     ]
    },
    "XAxisName": {
     "$ref": "#/definitions/AxisNameArray"
    },
    "YAxisName": {
     "$ref": "#/definitions/AxisNameArray"
    }
   },
   "required": [
    "Name",
    "Type",
    "Value"
   ],
   "type": "object"
  },
  "MetricGroup": {
   "additionalProperties": false,
   "description": "item in metric groups",
   "properties": {
    "MetricData": {
     "insertionOrder": true,
     "items": {
      "anyOf": [
       {
        "$ref": "#/definitions/SimpleMetric"
       },
       {
        "$ref": "#/definitions/LinearGraphMetric"
       },
       {
        "$ref": "#/definitions/BarChartMetric"
       },
       {
        "$ref": "#/definitions/MatrixMetric"
       }
      ]
     },
     "type": "array"
    },
    "Name": {
     "pattern": ".{1,63}",
     "type": "string"
    }
   },
   "required": [
    "Name",
    "MetricData"
   ],
   "type": "object"
  },
  "ModelOverview": {
   "additionalProperties": false,
   "description": "Overview about the model.",
   "properties": {
    "AlgorithmType": {
     "description": "Algorithm used to solve the problem.",
     "maxLength": 1024,
     "type": "string"
    },
    "InferenceEnvironment": {
     "additionalProperties": false,
     "description": "Overview about the inference.",
     "properties": {
      "ContainerImage": {
       "description": "SageMaker inference image uri.",
       "insertionOrder": true,
       "items": {
        "maxLength": 1024,
        "type": "string"
       },
       "maxItems": 15,
       "type": "array"
      }
     },
     "type": "object"
    },
    "ModelArtifact": {
     "description": "Location of the model artifact.",
     "insertionOrder": true,
     "items": {
      "maxLength": 1024,
      "type": "string"
     },
     "maxItems": 15,
     "type": "array"
    },
    "ModelCreator": {
     "description": "Creator of model.",
     "maxLength": 1024,
     "type": "string"
    },
    "ModelDescription": {
     "description": "description of model.",
     "maxLength": 1024,
     "type": "string"
    },
    "ModelId": {
     "description": "SageMaker Model Arn or Non SageMaker Model id.",
     "maxLength": 1024,
     "type": "string"
    },
    "ModelName": {
     "description": "Name of the model.",
     "maxLength": 1024,
     "type": "string"
    },
    "ModelOwner": {
     "description": "Owner of model.",
     "maxLength": 1024,
     "type": "string"
    },
    "ModelVersion": {
     "description": "Version of the model.",
     "minimum": 1,
     "type": "number"
    },
    "ProblemType": {
     "description": "Problem being solved with the model.",
     "maxLength": 1024,
     "type": "string"
    }
   },
   "type": "object"
  },
  "ModelPackageCreator": {
   "additionalProperties": false,
   "properties": {
    "UserProfileName": {
     "description": "The name of the user's profile in Studio",
     "maxLength": 63,
     "type": "string"
    }
   },
   "type": "object"
  },
  "ModelPackageDetails": {
   "additionalProperties": false,
   "description": "Metadata information related to model package version",
   "properties": {
    "ApprovalDescription": {
     "description": "A description provided for the model approval",
     "maxLength": 1024,
     "type": "string"
    },
    "CreatedBy": {
     "$ref": "#/definitions/ModelPackageCreator",
     "description": "Information about the user who created model package."
    },
    "Domain": {
     "description": "The machine learning domain of the model package you specified. Common machine learning domains include computer vision and natural language processing.",
     "type": "string"
    },
    "InferenceSpecification": {
     "$ref": "#/definitions/InferenceSpecification",
     "description": "Details about inference jobs that can be run with models based on this model package."
    },
    "ModelApprovalStatus": {
     "description": "Current approval status of model package",
     "enum": [
      "Approved",
      "Rejected",
      "PendingManualApproval"
     ],
     "type": "string"
    },
    "ModelPackageArn": {
     "description": "The Amazon Resource Name (ARN) of the model package",
     "maxLength": 2048,
     "minLength": 1,
     "type": "string"
    },
    "ModelPackageDescription": {
     "description": "A brief summary of the model package",
     "maxLength": 1024,
     "type": "string"
    },
    "ModelPackageGroupName": {
     "description": "If the model is a versioned model, the name of the model group that the versioned model belongs to.",
     "maxLength": 63,
     "minLength": 1,
     "type": "string"
    },
    "ModelPackageName": {
     "description": "Name of the model package",
     "maxLength": 63,
     "minLength": 1,
     "type": "string"
    },
    "ModelPackageStatus": {
     "description": "Current status of model package",
     "enum": [
      "Pending",
      "InProgress",
      "Completed",
      "Failed",
      "Deleting"
     ],
     "type": "string"
    },
    "ModelPackageVersion": {
     "description": "Version of the model package",
     "minimum": 1.0,
     "type": "number"
    },
    "SourceAlgorithms": {
     "$ref": "#/definitions/SourceAlgorithms",
     "description": "A list of algorithms that were used to create a model package."
    },
    "Task": {
     "description": "The machine learning task you specified that your model package accomplishes. Common machine learning tasks include object detection and image classification.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "ObjectiveFunction": {
   "additionalProperties": false,
   "description": "the objective function the model will optimize for.",
   "properties": {
    "Function": {
     "additionalProperties": false,
     "description": "objective function that training job is optimized for.",
     "properties": {
      "Condition": {
       "maxLength": 63,
       "type": "string"
      },
      "Facet": {
       "maxLength": 63,
       "type": "string"
      },
      "Function": {
       "enum": [
        "Maximize",
        "Minimize"
       ],
       "type": "string"
      }
     },
     "type": "object"
    },
    "Notes": {
     "maxLength": 1024,
     "type": "string"
    }
   },
   "type": "object"
  },
  "RiskRating": {
   "description": "Risk rating of model.",
   "enum": [
    "High",
    "Medium",
    "Low",
    "Unknown"
   ],
   "type": "string"
  },
  "SecurityConfig": {
   "additionalProperties": false,
   "description": "An optional Key Management Service key to encrypt, decrypt, and re-encrypt model card content for regulated workloads with highly sensitive data.\n\n",
   "properties": {
    "KmsKeyId": {
     "description": "A Key Management Service key ID to use for encrypting a model card.",
     "maxLength": 2048,
     "pattern": ".*",
     "type": "string"
    }
   },
   "type": "object"
  },
  "SimpleMetric": {
   "additionalProperties": false,
   "description": "metric data",
   "properties": {
    "Name": {
     "pattern": ".{1,255}",
     "type": "string"
    },
    "Notes": {
     "maxLength": 1024,
     "type": "string"
    },
    "Type": {
     "enum": [
      "number",
      "string",
      "boolean"
     ],
     "type": "string"
    },
    "Value": {
     "anyOf": [
      {
       "type": "number"
      },
      {
       "maxLength": 63,
       "type": "string"
      },
      {
       "type": "boolean"
      }
     ]
    },
    "XAxisName": {
     "$ref": "#/definitions/AxisNameString"
    },
    "YAxisName": {
     "$ref": "#/definitions/AxisNameString"
    }
   },
   "required": [
    "Name",
    "Type",
    "Value"
   ],
   "type": "object"
  },
  "SourceAlgorithm": {
   "additionalProperties": false,
   "properties": {
    "AlgorithmName": {
     "description": "The name of an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your SageMaker account or an algorithm in AWS Marketplace that you are subscribed to.",
     "maxLength": 170,
     "type": "string"
    },
    "ModelDataUrl": {
     "description": "The Amazon S3 path where the model artifacts, which result from model training, are stored.",
     "maxLength": 1024,
     "type": "string"
    }
   },
   "required": [
    "AlgorithmName"
   ],
   "type": "object"
  },
  "SourceAlgorithms": {
   "insertionOrder": true,
   "items": {
    "$ref": "#/definitions/SourceAlgorithm"
   },
   "maxItems": 1,
   "minItems": 1,
   "type": "array"
  },
  "Tag": {
   "additionalProperties": false,
   "description": "A key-value pair to associate with a resource.",
   "properties": {
    "Key": {
     "description": "The tag key. Tag keys must be unique per resource.",
     "maxLength": 128,
     "minLength": 1,
     "type": "string"
    },
    "Value": {
     "description": "The tag value.",
     "maxLength": 256,
     "type": "string"
    }
   },
   "required": [
    "Key",
    "Value"
   ],
   "type": "object"
  },
  "TrainingDetails": {
   "additionalProperties": false,
   "description": "Overview about the training.",
   "properties": {
    "ObjectiveFunction": {
     "$ref": "#/definitions/ObjectiveFunction"
    },
    "TrainingJobDetails": {
     "additionalProperties": false,
     "properties": {
      "HyperParameters": {
       "insertionOrder": true,
       "items": {
        "$ref": "#/definitions/TrainingHyperParameter",
        "maxItems": 100
       },
       "type": "array"
      },
      "TrainingArn": {
       "description": "SageMaker Training job arn.",
       "maxLength": 1024,
       "type": "string"
      },
      "TrainingDatasets": {
       "description": "Location of the model datasets.",
       "insertionOrder": true,
       "items": {
        "maxLength": 1024,
        "type": "string"
       },
       "maxItems": 15,
       "type": "array"
      },
      "TrainingEnvironment": {
       "additionalProperties": false,
       "properties": {
        "ContainerImage": {
         "description": "SageMaker training image uri.",
         "insertionOrder": true,
         "items": {
          "maxLength": 1024,
          "type": "string"
         },
         "maxItems": 15,
         "type": "array"
        }
       },
       "type": "object"
      },
      "TrainingMetrics": {
       "insertionOrder": true,
       "items": {
        "$ref": "#/definitions/TrainingMetric",
        "maxItems": 50
       },
       "type": "array"
      },
      "UserProvidedHyperParameters": {
       "insertionOrder": true,
       "items": {
        "$ref": "#/definitions/TrainingHyperParameter",
        "maxItems": 100
       },
       "type": "array"
      },
      "UserProvidedTrainingMetrics": {
       "insertionOrder": true,
       "items": {
        "$ref": "#/definitions/TrainingMetric",
        "maxItems": 50
       },
       "type": "array"
      }
     },
     "type": "object"
    },
    "TrainingObservations": {
     "maxLength": 1024,
     "type": "string"
    }
   },
   "type": "object"
  },
  "TrainingHyperParameter": {
   "additionalProperties": false,
   "description": "training hyper parameter",
   "properties": {
    "Name": {
     "pattern": ".{1,255}",
     "type": "string"
    },
    "Value": {
     "pattern": ".{1,255}",
     "type": "string"
    }
   },
   "required": [
    "Name",
    "Value"
   ],
   "type": "object"
  },
  "TrainingMetric": {
   "additionalProperties": false,
   "description": "training metric data.",
   "properties": {
    "Name": {
     "pattern": ".{1,255}",
     "type": "string"
    },
    "Notes": {
     "maxLength": 1024,
     "type": "string"
    },
    "Value": {
     "type": "number"
    }
   },
   "required": [
    "Name",
    "Value"
   ],
   "type": "object"
  },
  "UserContext": {
   "additionalProperties": false,
   "description": "Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card.",
   "properties": {
    "DomainId": {
     "default": "UnsetValue",
     "description": "The domain associated with the user.",
     "type": "string"
    },
    "UserProfileArn": {
     "default": "UnsetValue",
     "description": "The Amazon Resource Name (ARN) of the user's profile.",
     "type": "string"
    },
    "UserProfileName": {
     "default": "UnsetValue",
     "description": "The name of the user's profile.",
     "type": "string"
    }
   },
   "type": "object"
  }
 },
 "description": "Resource Type definition for AWS::SageMaker::ModelCard.",
 "handlers": {
  "create": {
   "permissions": [
    "sagemaker:CreateModelCard",
    "kms:CreateGrant",
    "kms:DescribeKey",
    "kms:GenerateDataKey",
    "sagemaker:AddTags"
   ]
  },
  "delete": {
   "permissions": [
    "sagemaker:DescribeModelCard",
    "sagemaker:DeleteModelCard"
   ]
  },
  "list": {
   "permissions": [
    "sagemaker:ListModelCards",
    "sagemaker:ListModelCardVersions"
   ]
  },
  "read": {
   "permissions": [
    "sagemaker:DescribeModelCard",
    "kms:Decrypt",
    "sagemaker:ListTags"
   ]
  },
  "update": {
   "permissions": [
    "sagemaker:UpdateModelCard",
    "kms:GenerateDataKey",
    "sagemaker:ListTags",
    "sagemaker:AddTags",
    "sagemaker:DeleteTags"
   ]
  }
 },
 "primaryIdentifier": [
  "/properties/ModelCardName"
 ],
 "properties": {
  "Content": {
   "$ref": "#/definitions/Content"
  },
  "CreatedBy": {
   "$ref": "#/definitions/UserContext",
   "description": "Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card."
  },
  "CreationTime": {
   "description": "The date and time the model card was created.",
   "type": "string"
  },
  "LastModifiedBy": {
   "$ref": "#/definitions/UserContext",
   "description": "Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card."
  },
  "LastModifiedTime": {
   "description": "The date and time the model card was last modified.",
   "type": "string"
  },
  "ModelCardArn": {
   "description": "The Amazon Resource Name (ARN) of the successfully created model card.",
   "maxLength": 256,
   "minLength": 1,
   "pattern": "^arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]{9,16}:[0-9]{12}:model-card/[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$",
   "type": "string"
  },
  "ModelCardName": {
   "description": "The unique name of the model card.",
   "maxLength": 63,
   "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$",
   "type": "string"
  },
  "ModelCardProcessingStatus": {
   "default": "UnsetValue",
   "description": "The processing status of model card deletion. The ModelCardProcessingStatus updates throughout the different deletion steps.",
   "enum": [
    "UnsetValue",
    "DeleteInProgress",
    "DeletePending",
    "ContentDeleted",
    "ExportJobsDeleted",
    "DeleteCompleted",
    "DeleteFailed"
   ],
   "type": "string"
  },
  "ModelCardStatus": {
   "description": "The approval status of the model card within your organization. Different organizations might have different criteria for model card review and approval.",
   "enum": [
    "Draft",
    "PendingReview",
    "Approved",
    "Archived"
   ],
   "type": "string"
  },
  "ModelCardVersion": {
   "description": "A version of the model card.",
   "minimum": 1,
   "type": "integer"
  },
  "SecurityConfig": {
   "$ref": "#/definitions/SecurityConfig"
  },
  "Tags": {
   "description": "Key-value pairs used to manage metadata for model cards.",
   "insertionOrder": true,
   "items": {
    "$ref": "#/definitions/Tag"
   },
   "maxItems": 50,
   "minItems": 1,
   "type": "array"
  }
 },
 "readOnlyProperties": [
  "/properties/ModelCardArn",
  "/properties/ModelCardVersion",
  "/properties/CreatedBy/DomainId",
  "/properties/CreatedBy/UserProfileArn",
  "/properties/CreatedBy/UserProfileName",
  "/properties/LastModifiedBy/DomainId",
  "/properties/LastModifiedBy/UserProfileArn",
  "/properties/LastModifiedBy/UserProfileName",
  "/properties/CreationTime",
  "/properties/LastModifiedTime",
  "/properties/ModelCardProcessingStatus"
 ],
 "required": [
  "ModelCardName",
  "Content",
  "ModelCardStatus"
 ],
 "tagging": {
  "cloudFormationSystemTags": true,
  "tagOnCreate": true,
  "tagProperty": "/properties/Tags",
  "tagUpdatable": true,
  "taggable": true
 },
 "typeName": "AWS::SageMaker::ModelCard"
}
