{
 "additionalProperties": false,
 "createOnlyProperties": [
  "/properties/Id",
  "/properties/Tags"
 ],
 "definitions": {
  "HlsIngest": {
   "additionalProperties": false,
   "description": "An HTTP Live Streaming (HLS) ingest resource configuration.",
   "properties": {
    "ingestEndpoints": {
     "description": "A list of endpoints to which the source stream should be sent.",
     "items": {
      "$ref": "#/definitions/IngestEndpoint"
     },
     "type": "array"
    }
   },
   "type": "object"
  },
  "IngestEndpoint": {
   "additionalProperties": false,
   "description": "An endpoint for ingesting source content for a Channel.",
   "properties": {
    "Id": {
     "description": "The system generated unique identifier for the IngestEndpoint",
     "type": "string"
    },
    "Password": {
     "description": "The system generated password for ingest authentication.",
     "type": "string"
    },
    "Url": {
     "description": "The ingest URL to which the source stream should be sent.",
     "type": "string"
    },
    "Username": {
     "description": "The system generated username for ingest authentication.",
     "type": "string"
    }
   },
   "required": [
    "Id",
    "Username",
    "Password",
    "Url"
   ],
   "type": "object"
  },
  "LogConfiguration": {
   "additionalProperties": false,
   "properties": {
    "LogGroupName": {
     "description": "Sets a custom AWS CloudWatch log group name for access logs. If a log group name isn't specified, the defaults are used: /aws/MediaPackage/EgressAccessLogs for egress access logs and /aws/MediaPackage/IngressAccessLogs for ingress access logs.",
     "maxLength": 256,
     "minLength": 1,
     "pattern": "\\A^(\\/aws\\/MediaPackage\\/)[a-zA-Z0-9_-]+\\Z",
     "type": "string"
    }
   },
   "type": "object"
  },
  "Tag": {
   "additionalProperties": false,
   "properties": {
    "Key": {
     "type": "string"
    },
    "Value": {
     "type": "string"
    }
   },
   "required": [
    "Value",
    "Key"
   ],
   "type": "object"
  }
 },
 "description": "Resource schema for AWS::MediaPackage::Channel",
 "handlers": {
  "create": {
   "permissions": [
    "mediapackage:CreateChannel",
    "mediapackage:TagResource",
    "mediapackage:ConfigureLogs",
    "iam:CreateServiceLinkedRole"
   ]
  },
  "delete": {
   "permissions": [
    "mediapackage:DeleteChannel"
   ]
  },
  "list": {
   "permissions": [
    "mediapackage:ListChannels"
   ]
  },
  "read": {
   "permissions": [
    "mediapackage:DescribeChannel"
   ]
  },
  "update": {
   "permissions": [
    "mediapackage:UpdateChannel",
    "mediapackage:ConfigureLogs",
    "iam:CreateServiceLinkedRole"
   ]
  }
 },
 "primaryIdentifier": [
  "/properties/Id"
 ],
 "properties": {
  "Arn": {
   "description": "The Amazon Resource Name (ARN) assigned to the Channel.",
   "type": "string"
  },
  "Description": {
   "description": "A short text description of the Channel.",
   "type": "string"
  },
  "EgressAccessLogs": {
   "$ref": "#/definitions/LogConfiguration",
   "description": "The configuration parameters for egress access logging."
  },
  "HlsIngest": {
   "$ref": "#/definitions/HlsIngest",
   "description": "An HTTP Live Streaming (HLS) ingest resource configuration."
  },
  "Id": {
   "description": "The ID of the Channel.",
   "maxLength": 256,
   "minLength": 1,
   "pattern": "\\A[0-9a-zA-Z-_]+\\Z",
   "type": "string"
  },
  "IngressAccessLogs": {
   "$ref": "#/definitions/LogConfiguration",
   "description": "The configuration parameters for egress access logging."
  },
  "Tags": {
   "description": "A collection of tags associated with a resource",
   "items": {
    "$ref": "#/definitions/Tag"
   },
   "type": "array",
   "uniqueItems": true
  }
 },
 "readOnlyProperties": [
  "/properties/Arn",
  "/properties/HlsIngest/ingestEndpoints/*/Id",
  "/properties/HlsIngest/ingestEndpoints/*/Username",
  "/properties/HlsIngest/ingestEndpoints/*/Password",
  "/properties/HlsIngest/ingestEndpoints/*/Url"
 ],
 "required": [
  "Id"
 ],
 "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git",
 "typeName": "AWS::MediaPackage::Channel"
}
