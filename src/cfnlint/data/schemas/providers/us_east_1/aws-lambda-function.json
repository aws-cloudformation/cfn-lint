{
 "additionalProperties": false,
 "cfnLint": [
  "AWS::Lambda::Function/Properties"
 ],
 "createOnlyProperties": [
  "/properties/FunctionName"
 ],
 "definitions": {
  "Code": {
   "additionalProperties": false,
   "properties": {
    "ImageUri": {
     "type": "string"
    },
    "S3Bucket": {
     "maxLength": 63,
     "minLength": 3,
     "pattern": "^[0-9A-Za-z\\.\\-_]*(?<!\\.)$",
     "type": "string"
    },
    "S3Key": {
     "maxLength": 1024,
     "minLength": 1,
     "type": "string"
    },
    "S3ObjectVersion": {
     "maxLength": 1024,
     "minLength": 1,
     "type": "string"
    },
    "ZipFile": {
     "type": "string"
    }
   },
   "type": "object"
  },
  "DeadLetterConfig": {
   "additionalProperties": false,
   "properties": {
    "TargetArn": {
     "pattern": "^(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()$",
     "type": "string"
    }
   },
   "type": "object"
  },
  "Environment": {
   "additionalProperties": false,
   "properties": {
    "Variables": {
     "additionalProperties": false,
     "patternProperties": {
      "[a-zA-Z][a-zA-Z0-9_]+": {
       "type": [
        "string",
        "number",
        "integer",
        "object",
        "array",
        "boolean"
       ]
      }
     },
     "type": "object"
    }
   },
   "type": "object"
  },
  "EphemeralStorage": {
   "additionalProperties": false,
   "properties": {
    "Size": {
     "maximum": 10240,
     "minimum": 512,
     "type": "integer"
    }
   },
   "required": [
    "Size"
   ],
   "type": "object"
  },
  "FileSystemConfig": {
   "additionalProperties": false,
   "properties": {
    "Arn": {
     "maxLength": 200,
     "pattern": "^arn:aws[a-zA-Z-]*:elasticfilesystem:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1}:\\d{12}:access-point/fsap-[a-f0-9]{17}$",
     "type": "string"
    },
    "LocalMountPath": {
     "maxLength": 160,
     "pattern": "^/mnt/[a-zA-Z0-9-_.]+$",
     "type": "string"
    }
   },
   "required": [
    "Arn",
    "LocalMountPath"
   ],
   "type": "object"
  },
  "ImageConfig": {
   "additionalProperties": false,
   "properties": {
    "Command": {
     "items": {
      "type": "string"
     },
     "maxItems": 1500,
     "type": "array",
     "uniqueItems": true
    },
    "EntryPoint": {
     "items": {
      "type": "string"
     },
     "maxItems": 1500,
     "type": "array",
     "uniqueItems": true
    },
    "WorkingDirectory": {
     "type": "string"
    }
   },
   "type": "object"
  },
  "LoggingConfig": {
   "additionalProperties": false,
   "properties": {
    "ApplicationLogLevel": {
     "enum": [
      "TRACE",
      "DEBUG",
      "INFO",
      "WARN",
      "ERROR",
      "FATAL"
     ],
     "type": "string"
    },
    "LogFormat": {
     "enum": [
      "Text",
      "JSON"
     ],
     "type": "string"
    },
    "LogGroup": {
     "maxLength": 512,
     "minLength": 1,
     "pattern": "[\\.\\-_/#A-Za-z0-9]+",
     "type": "string"
    },
    "SystemLogLevel": {
     "enum": [
      "DEBUG",
      "INFO",
      "WARN"
     ],
     "type": "string"
    }
   },
   "type": "object"
  },
  "RuntimeManagementConfig": {
   "additionalProperties": false,
   "properties": {
    "RuntimeVersionArn": {
     "type": "string"
    },
    "UpdateRuntimeOn": {
     "enum": [
      "Auto",
      "FunctionUpdate",
      "Manual"
     ],
     "type": "string"
    }
   },
   "required": [
    "UpdateRuntimeOn"
   ],
   "type": "object"
  },
  "SnapStart": {
   "additionalProperties": false,
   "properties": {
    "ApplyOn": {
     "enum": [
      "PublishedVersions",
      "None"
     ],
     "type": "string"
    }
   },
   "required": [
    "ApplyOn"
   ],
   "type": "object"
  },
  "SnapStartResponse": {
   "additionalProperties": false,
   "properties": {
    "ApplyOn": {
     "enum": [
      "PublishedVersions",
      "None"
     ],
     "type": "string"
    },
    "OptimizationStatus": {
     "enum": [
      "On",
      "Off"
     ],
     "type": "string"
    }
   },
   "type": "object"
  },
  "Tag": {
   "additionalProperties": false,
   "properties": {
    "Key": {
     "maxLength": 128,
     "minLength": 1,
     "type": "string"
    },
    "Value": {
     "maxLength": 256,
     "minLength": 0,
     "type": "string"
    }
   },
   "required": [
    "Key"
   ],
   "type": "object"
  },
  "TracingConfig": {
   "additionalProperties": false,
   "properties": {
    "Mode": {
     "enum": [
      "Active",
      "PassThrough"
     ],
     "type": "string"
    }
   },
   "type": "object"
  },
  "VpcConfig": {
   "additionalProperties": false,
   "properties": {
    "Ipv6AllowedForDualStack": {
     "type": "boolean"
    },
    "SecurityGroupIds": {
     "items": {
      "type": "string"
     },
     "maxItems": 5,
     "type": "array",
     "uniqueItems": false
    },
    "SubnetIds": {
     "items": {
      "type": "string"
     },
     "maxItems": 16,
     "type": "array",
     "uniqueItems": false
    }
   },
   "type": "object"
  }
 },
 "handlers": {
  "create": {
   "permissions": [
    "lambda:CreateFunction",
    "lambda:GetFunction",
    "lambda:PutFunctionConcurrency",
    "iam:PassRole",
    "s3:GetObject",
    "s3:GetObjectVersion",
    "ec2:DescribeSecurityGroups",
    "ec2:DescribeSubnets",
    "ec2:DescribeVpcs",
    "elasticfilesystem:DescribeMountTargets",
    "kms:CreateGrant",
    "kms:Decrypt",
    "kms:Encrypt",
    "kms:GenerateDataKey",
    "lambda:GetCodeSigningConfig",
    "lambda:GetFunctionCodeSigningConfig",
    "lambda:GetLayerVersion",
    "lambda:GetRuntimeManagementConfig",
    "lambda:PutRuntimeManagementConfig",
    "lambda:TagResource",
    "lambda:GetPolicy",
    "lambda:AddPermission",
    "lambda:RemovePermission",
    "lambda:GetResourcePolicy",
    "lambda:PutResourcePolicy"
   ]
  },
  "delete": {
   "permissions": [
    "lambda:DeleteFunction",
    "lambda:GetFunction",
    "ec2:DescribeNetworkInterfaces"
   ]
  },
  "list": {
   "permissions": [
    "lambda:ListFunctions"
   ]
  },
  "read": {
   "permissions": [
    "lambda:GetFunction",
    "lambda:GetFunctionCodeSigningConfig"
   ]
  },
  "update": {
   "permissions": [
    "lambda:DeleteFunctionConcurrency",
    "lambda:GetFunction",
    "lambda:PutFunctionConcurrency",
    "lambda:ListTags",
    "lambda:TagResource",
    "lambda:UntagResource",
    "lambda:UpdateFunctionConfiguration",
    "lambda:UpdateFunctionCode",
    "iam:PassRole",
    "s3:GetObject",
    "s3:GetObjectVersion",
    "ec2:DescribeSecurityGroups",
    "ec2:DescribeSubnets",
    "ec2:DescribeVpcs",
    "elasticfilesystem:DescribeMountTargets",
    "kms:CreateGrant",
    "kms:Decrypt",
    "kms:GenerateDataKey",
    "lambda:GetRuntimeManagementConfig",
    "lambda:PutRuntimeManagementConfig",
    "lambda:PutFunctionCodeSigningConfig",
    "lambda:DeleteFunctionCodeSigningConfig",
    "lambda:GetCodeSigningConfig",
    "lambda:GetFunctionCodeSigningConfig",
    "lambda:GetPolicy",
    "lambda:AddPermission",
    "lambda:RemovePermission",
    "lambda:GetResourcePolicy",
    "lambda:PutResourcePolicy",
    "lambda:DeleteResourcePolicy"
   ]
  }
 },
 "primaryIdentifier": [
  "/properties/FunctionName"
 ],
 "properties": {
  "Architectures": {
   "items": {
    "enum": [
     "x86_64",
     "arm64"
    ],
    "type": "string"
   },
   "maxItems": 1,
   "minItems": 1,
   "type": "array",
   "uniqueItems": true
  },
  "Arn": {
   "type": "string"
  },
  "Code": {
   "$ref": "#/definitions/Code"
  },
  "CodeSigningConfigArn": {
   "pattern": "arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1}:\\d{12}:code-signing-config:csc-[a-z0-9]{17}",
   "type": "string"
  },
  "DeadLetterConfig": {
   "$ref": "#/definitions/DeadLetterConfig"
  },
  "Description": {
   "maxLength": 256,
   "minLength": 1,
   "type": "string"
  },
  "Environment": {
   "$ref": "#/definitions/Environment"
  },
  "EphemeralStorage": {
   "$ref": "#/definitions/EphemeralStorage"
  },
  "FileSystemConfigs": {
   "items": {
    "$ref": "#/definitions/FileSystemConfig"
   },
   "maxItems": 1,
   "type": "array"
  },
  "FunctionName": {
   "maxLength": 64,
   "minLength": 1,
   "type": "string"
  },
  "Handler": {
   "maxLength": 128,
   "minLength": 1,
   "pattern": "^[^\\s]+$",
   "type": "string"
  },
  "ImageConfig": {
   "$ref": "#/definitions/ImageConfig"
  },
  "KmsKeyArn": {
   "pattern": "^(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()$",
   "type": "string"
  },
  "Layers": {
   "items": {
    "type": "string"
   },
   "type": "array",
   "uniqueItems": false
  },
  "LoggingConfig": {
   "$ref": "#/definitions/LoggingConfig"
  },
  "MemorySize": {
   "maximum": 10240,
   "minimum": 128,
   "type": "integer"
  },
  "PackageType": {
   "enum": [
    "Image",
    "Zip"
   ],
   "type": "string"
  },
  "ReservedConcurrentExecutions": {
   "minimum": 0,
   "type": "integer"
  },
  "Role": {
   "pattern": "^arn:(aws[a-zA-Z-]*)?:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
   "type": "string"
  },
  "Runtime": {
   "cfnLint": "AWS::Lambda::Function/Properties/Runtime",
   "enum": [
    "nodejs",
    "nodejs4.3",
    "nodejs6.10",
    "nodejs8.10",
    "nodejs10.x",
    "nodejs12.x",
    "nodejs14.x",
    "nodejs16.x",
    "java8",
    "java8.al2",
    "java11",
    "python2.7",
    "python3.6",
    "python3.7",
    "python3.8",
    "python3.9",
    "dotnetcore1.0",
    "dotnetcore2.0",
    "dotnetcore2.1",
    "dotnetcore3.1",
    "dotnet6",
    "dotnet8",
    "nodejs4.3-edge",
    "go1.x",
    "ruby2.5",
    "ruby2.7",
    "provided",
    "provided.al2",
    "nodejs18.x",
    "python3.10",
    "java17",
    "ruby3.2",
    "python3.11",
    "nodejs20.x",
    "provided.al2023",
    "python3.12",
    "java21"
   ],
   "type": "string"
  },
  "RuntimeManagementConfig": {
   "$ref": "#/definitions/RuntimeManagementConfig"
  },
  "SnapStart": {
   "$ref": "#/definitions/SnapStart"
  },
  "SnapStartResponse": {
   "$ref": "#/definitions/SnapStartResponse"
  },
  "Tags": {
   "insertionOrder": false,
   "items": {
    "$ref": "#/definitions/Tag"
   },
   "type": "array",
   "uniqueItems": true
  },
  "Timeout": {
   "maximum": 900,
   "minimum": 1,
   "type": "integer"
  },
  "TracingConfig": {
   "$ref": "#/definitions/TracingConfig"
  },
  "VpcConfig": {
   "$ref": "#/definitions/VpcConfig"
  }
 },
 "readOnlyProperties": [
  "/properties/SnapStartResponse",
  "/properties/SnapStartResponse/ApplyOn",
  "/properties/SnapStartResponse/OptimizationStatus",
  "/properties/Arn"
 ],
 "required": [
  "Code",
  "Role"
 ],
 "tagging": {
  "cloudFormationSystemTags": true,
  "tagOnCreate": true,
  "tagProperty": "/properties/Tags",
  "tagUpdatable": true,
  "taggable": true
 },
 "typeName": "AWS::Lambda::Function",
 "writeOnlyProperties": [
  "/properties/SnapStart",
  "/properties/SnapStart/ApplyOn",
  "/properties/Code",
  "/properties/Code/ImageUri",
  "/properties/Code/S3Bucket",
  "/properties/Code/S3Key",
  "/properties/Code/S3ObjectVersion",
  "/properties/Code/ZipFile"
 ]
}
