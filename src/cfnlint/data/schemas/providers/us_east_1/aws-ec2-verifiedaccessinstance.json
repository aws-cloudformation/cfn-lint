{
 "additionalProperties": false,
 "definitions": {
  "Tag": {
   "additionalProperties": false,
   "description": "A key-value pair to associate with a resource.",
   "properties": {
    "Key": {
     "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
     "maxLength": 128,
     "minLength": 1,
     "type": "string"
    },
    "Value": {
     "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
     "maxLength": 256,
     "minLength": 0,
     "type": "string"
    }
   },
   "required": [
    "Key",
    "Value"
   ],
   "type": "object"
  },
  "VerifiedAccessLogs": {
   "additionalProperties": false,
   "description": "The configuration options for AWS Verified Access instances.",
   "properties": {
    "CloudWatchLogs": {
     "additionalProperties": false,
     "description": "Sends Verified Access logs to CloudWatch Logs.",
     "properties": {
      "Enabled": {
       "description": "Indicates whether logging is enabled.",
       "type": "boolean"
      },
      "LogGroup": {
       "description": "The ID of the CloudWatch Logs log group.",
       "type": "string"
      }
     },
     "type": "object"
    },
    "KinesisDataFirehose": {
     "additionalProperties": false,
     "description": "Sends Verified Access logs to Kinesis.",
     "properties": {
      "DeliveryStream": {
       "description": "The ID of the delivery stream.",
       "type": "string"
      },
      "Enabled": {
       "description": "Indicates whether logging is enabled.",
       "type": "boolean"
      }
     },
     "type": "object"
    },
    "S3": {
     "additionalProperties": false,
     "description": "Sends Verified Access logs to Amazon S3.",
     "properties": {
      "BucketName": {
       "description": "The bucket name.",
       "type": "string"
      },
      "BucketOwner": {
       "description": "The ID of the AWS account that owns the Amazon S3 bucket.",
       "type": "string"
      },
      "Enabled": {
       "description": "Indicates whether logging is enabled.",
       "type": "boolean"
      },
      "Prefix": {
       "description": "The bucket prefix.",
       "type": "string"
      }
     },
     "type": "object"
    }
   },
   "type": "object"
  },
  "VerifiedAccessTrustProvider": {
   "additionalProperties": false,
   "description": "A Verified Access Trust Provider.",
   "properties": {
    "Description": {
     "description": "The description of trust provider.",
     "type": "string"
    },
    "DeviceTrustProviderType": {
     "description": "The type of device-based trust provider.",
     "type": "string"
    },
    "TrustProviderType": {
     "description": "The type of trust provider (user- or device-based).",
     "type": "string"
    },
    "UserTrustProviderType": {
     "description": "The type of user-based trust provider.",
     "type": "string"
    },
    "VerifiedAccessTrustProviderId": {
     "description": "The ID of the trust provider.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "VerifiedAccessTrustProviderId": {
   "description": "The ID of the AWS Verified Access trust provider.",
   "type": "string"
  }
 },
 "description": "The AWS::EC2::VerifiedAccessInstance resource creates an AWS EC2 Verified Access Instance.",
 "handlers": {
  "create": {
   "permissions": [
    "ec2:CreateVerifiedAccessInstance",
    "ec2:AttachVerifiedAccessTrustProvider",
    "ec2:ModifyVerifiedAccessInstanceLoggingConfiguration",
    "ec2:DescribeVerifiedAccessInstances",
    "ec2:DescribeVerifiedAccessInstanceLoggingConfigurations",
    "ec2:CreateTags",
    "ec2:DescribeTags",
    "logs:CreateLogDelivery",
    "logs:GetLogDelivery",
    "logs:UpdateLogDelivery",
    "logs:PutDestination",
    "logs:DeleteLogDelivery",
    "logs:ListLogDeliveries",
    "logs:PutLogEvents",
    "logs:DescribeLogStreams",
    "s3:listBuckets",
    "s3:PutObject",
    "s3:GetBucketPolicy",
    "s3:PutBucketPolicy",
    "logs:DescribeLogGroups",
    "logs:PutResourcePolicy",
    "firehose:TagDeliveryStream",
    "logs:DescribeResourcePolicies",
    "iam:CreateServiceLinkedRole",
    "verified-access:AllowVerifiedAccess"
   ]
  },
  "delete": {
   "permissions": [
    "ec2:DeleteVerifiedAccessInstance",
    "ec2:DeleteTags",
    "ec2:DescribeVerifiedAccessInstances",
    "ec2:DescribeVerifiedAccessInstanceLoggingConfigurations",
    "ec2:DetachVerifiedAccessTrustProvider",
    "ec2:GetVerifiedAccessGroupPolicy",
    "ec2:DescribeTags",
    "logs:ListLogDeliveries",
    "logs:GetLogDelivery",
    "logs:DeleteLogDelivery"
   ]
  },
  "list": {
   "permissions": [
    "ec2:DescribeVerifiedAccessInstances",
    "ec2:DescribeTags",
    "logs:ListLogDeliveries",
    "logs:GetLogDelivery"
   ]
  },
  "read": {
   "permissions": [
    "ec2:DescribeVerifiedAccessInstances",
    "ec2:DescribeVerifiedAccessInstanceLoggingConfigurations",
    "ec2:DescribeTags",
    "logs:GetLogDelivery",
    "logs:ListLogDeliveries"
   ]
  },
  "update": {
   "permissions": [
    "ec2:ModifyVerifiedAccessInstance",
    "ec2:ModifyVerifiedAccessInstanceLoggingConfiguration",
    "ec2:DescribeVerifiedAccessInstances",
    "ec2:DescribeVerifiedAccessInstanceLoggingConfigurations",
    "ec2:DescribeTags",
    "ec2:AttachVerifiedAccessTrustProvider",
    "ec2:DetachVerifiedAccessTrustProvider",
    "ec2:DeleteTags",
    "ec2:CreateTags",
    "ec2:DescribeTags",
    "logs:CreateLogDelivery",
    "logs:GetLogDelivery",
    "logs:ListLogDeliveries",
    "logs:UpdateLogDelivery",
    "logs:DeleteLogDelivery",
    "logs:PutDestination",
    "logs:PutLogEvents",
    "logs:DescribeLogStreams",
    "s3:listBuckets",
    "s3:PutObject",
    "s3:GetBucketPolicy",
    "s3:PutBucketPolicy",
    "logs:DescribeLogGroups",
    "logs:PutResourcePolicy",
    "firehose:TagDeliveryStream",
    "iam:CreateServiceLinkedRole",
    "logs:DescribeResourcePolicies"
   ]
  }
 },
 "primaryIdentifier": [
  "/properties/VerifiedAccessInstanceId"
 ],
 "properties": {
  "CreationTime": {
   "description": "Time this Verified Access Instance was created.",
   "type": "string"
  },
  "Description": {
   "description": "A description for the AWS Verified Access instance.",
   "type": "string"
  },
  "LastUpdatedTime": {
   "description": "Time this Verified Access Instance was last updated.",
   "type": "string"
  },
  "LoggingConfigurations": {
   "$ref": "#/definitions/VerifiedAccessLogs",
   "description": "The configuration options for AWS Verified Access instances."
  },
  "Tags": {
   "description": "An array of key-value pairs to apply to this resource.",
   "insertionOrder": false,
   "items": {
    "$ref": "#/definitions/Tag"
   },
   "type": "array",
   "uniqueItems": true
  },
  "VerifiedAccessInstanceId": {
   "description": "The ID of the AWS Verified Access instance.",
   "type": "string"
  },
  "VerifiedAccessTrustProviderIds": {
   "description": "The IDs of the AWS Verified Access trust providers.",
   "insertionOrder": false,
   "items": {
    "$ref": "#/definitions/VerifiedAccessTrustProviderId"
   },
   "type": "array",
   "uniqueItems": true
  },
  "VerifiedAccessTrustProviders": {
   "description": "AWS Verified Access trust providers.",
   "insertionOrder": false,
   "items": {
    "$ref": "#/definitions/VerifiedAccessTrustProvider"
   },
   "type": "array",
   "uniqueItems": true
  }
 },
 "readOnlyProperties": [
  "/properties/VerifiedAccessInstanceId",
  "/properties/CreationTime",
  "/properties/LastUpdatedTime"
 ],
 "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-ec2-verified-access.aws-ec2-verifiedaccessinstance",
 "tagging": {
  "cloudFormationSystemTags": false,
  "tagOnCreate": true,
  "tagProperty": "/properties/Tags",
  "tagUpdatable": true,
  "taggable": true
 },
 "typeName": "AWS::EC2::VerifiedAccessInstance"
}
