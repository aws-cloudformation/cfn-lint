{
 "additionalProperties": false,
 "createOnlyProperties": [
  "/properties/LaunchTemplateName"
 ],
 "definitions": {
  "AcceleratorCount": {
   "additionalProperties": false,
   "description": "The minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferential chips) on an instance.",
   "properties": {
    "Max": {
     "description": "The maximum number of accelerators.",
     "type": "integer"
    },
    "Min": {
     "description": "The minimum number of accelerators.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "AcceleratorTotalMemoryMiB": {
   "additionalProperties": false,
   "description": "The minimum and maximum amount of total accelerator memory, in MiB.",
   "properties": {
    "Max": {
     "description": "The maximum amount of accelerator memory, in MiB.",
     "type": "integer"
    },
    "Min": {
     "description": "The minimum amount of accelerator memory, in MiB.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "BaselineEbsBandwidthMbps": {
   "additionalProperties": false,
   "description": "The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps.",
   "properties": {
    "Max": {
     "description": "The maximum baseline bandwidth, in Mbps.",
     "type": "integer"
    },
    "Min": {
     "description": "The minimum baseline bandwidth, in Mbps.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "BlockDeviceMapping": {
   "additionalProperties": false,
   "description": "Information about a block device mapping for an Amazon EC2 launch template.",
   "oneOf": [
    {
     "properties": {
      "Ebs": false,
      "NoDevice": false
     },
     "required": [
      "VirtualName"
     ],
     "type": "object"
    },
    {
     "properties": {
      "NoDevice": false,
      "VirtualName": false
     },
     "required": [
      "Ebs"
     ],
     "type": "object"
    },
    {
     "properties": {
      "Ebs": false,
      "VirtualName": false
     },
     "required": [
      "NoDevice"
     ],
     "type": "object"
    },
    {
     "maxProperties": 1,
     "minProperties": 1,
     "propertyNames": {
      "enum": [
       "Fn::Base64",
       "Fn::GetAtt",
       "Fn::GetAZs",
       "Fn::ImportValue",
       "Fn::Join",
       "Fn::Split",
       "Fn::FindInMap",
       "Fn::Select",
       "Ref",
       "Fn::If",
       "Fn::Contains",
       "Fn::Sub",
       "Fn::Cidr",
       "Fn::Length",
       "Fn::ToJsonString",
       "Fn::ForEach::[a-zA-Z0-9]+"
      ]
     },
     "type": "object"
    }
   ],
   "oneOfDescription": "Specify only one ['VirtualName', 'Ebs', 'NoDevice']",
   "properties": {
    "DeviceName": {
     "description": "The user data to make available to the instance.",
     "type": "string"
    },
    "Ebs": {
     "$ref": "#/definitions/Ebs"
    },
    "NoDevice": {
     "description": "To omit the device from the block device mapping, specify an empty string.",
     "type": "string"
    },
    "VirtualName": {
     "description": "The virtual device name (ephemeralN).",
     "type": "string"
    }
   },
   "type": "object"
  },
  "CapacityReservationSpecification": {
   "additionalProperties": false,
   "description": "Specifies an instance's Capacity Reservation targeting option.",
   "properties": {
    "CapacityReservationPreference": {
     "description": "Indicates the instance's Capacity Reservation preferences.",
     "type": "string"
    },
    "CapacityReservationTarget": {
     "$ref": "#/definitions/CapacityReservationTarget"
    }
   },
   "type": "object"
  },
  "CapacityReservationTarget": {
   "additionalProperties": false,
   "description": "Specifies a target Capacity Reservation.",
   "properties": {
    "CapacityReservationId": {
     "description": "The ID of the Capacity Reservation in which to run the instance.",
     "type": "string"
    },
    "CapacityReservationResourceGroupArn": {
     "description": "The ARN of the Capacity Reservation resource group in which to run the instance.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "ConnectionTrackingSpecification": {
   "additionalProperties": false,
   "description": "Allows customer to specify Connection Tracking options",
   "properties": {
    "TcpEstablishedTimeout": {
     "description": "Integer value for TCP Established Timeout",
     "type": "integer"
    },
    "UdpStreamTimeout": {
     "description": "Integer value for UDP Stream Timeout",
     "type": "integer"
    },
    "UdpTimeout": {
     "description": "Integer value for UDP Timeout",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "CpuOptions": {
   "additionalProperties": false,
   "description": "specifies the CPU options for an instance.",
   "properties": {
    "AmdSevSnp": {
     "description": "Indicates whether to enable the instance for AMD SEV-SNP. AMD SEV-SNP is supported with M6a, R6a, and C6a instance types only.",
     "enum": [
      "enabled",
      "disabled"
     ],
     "type": "string"
    },
    "CoreCount": {
     "description": "The number of CPU cores for the instance.",
     "type": "integer"
    },
    "ThreadsPerCore": {
     "description": "The number of threads per CPU core. To disable multithreading for the instance, specify a value of 1. Otherwise, specify the default value of 2.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "CreditSpecification": {
   "additionalProperties": false,
   "description": "The user data to make available to the instance.",
   "properties": {
    "CpuCredits": {
     "description": "The user data to make available to the instance.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "Ebs": {
   "additionalProperties": false,
   "description": "Parameters for a block device for an EBS volume in an Amazon EC2 launch template.",
   "properties": {
    "DeleteOnTermination": {
     "description": "Indicates whether the EBS volume is deleted on instance termination.",
     "type": "boolean"
    },
    "Encrypted": {
     "description": "Indicates whether the EBS volume is encrypted. Encrypted volumes can only be attached to instances that support Amazon EBS encryption. If you are creating a volume from a snapshot, you can't specify an encryption value.",
     "type": "boolean"
    },
    "Iops": {
     "description": "The number of I/O operations per second (IOPS).",
     "type": "integer"
    },
    "KmsKeyId": {
     "description": "The ARN of the symmetric AWS Key Management Service (AWS KMS) CMK used for encryption.",
     "type": "string"
    },
    "SnapshotId": {
     "description": "The ID of the snapshot.",
     "type": "string"
    },
    "Throughput": {
     "description": "The throughput to provision for a gp3 volume, with a maximum of 1,000 MiB/s.",
     "type": "integer"
    },
    "VolumeSize": {
     "description": "The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size.",
     "type": "integer"
    },
    "VolumeType": {
     "description": "The volume type.",
     "enum": [
      "standard",
      "io1",
      "io2",
      "gp2",
      "sc1",
      "st1",
      "gp3"
     ],
     "type": "string"
    }
   },
   "type": "object"
  },
  "ElasticGpuSpecification": {
   "additionalProperties": false,
   "description": "Specifies a specification for an Elastic GPU for launch template.",
   "properties": {
    "Type": {
     "description": "The type of Elastic Graphics accelerator.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "EnaSrdSpecification": {
   "additionalProperties": false,
   "description": "Allows customer to specify ENA-SRD options",
   "properties": {
    "EnaSrdEnabled": {
     "description": "Enables TCP ENA-SRD",
     "type": "boolean"
    },
    "EnaSrdUdpSpecification": {
     "$ref": "#/definitions/EnaSrdUdpSpecification"
    }
   },
   "type": "object"
  },
  "EnaSrdUdpSpecification": {
   "additionalProperties": false,
   "description": "Allows customer to specify ENA-SRD (UDP) options",
   "properties": {
    "EnaSrdUdpEnabled": {
     "description": "Enables UDP ENA-SRD",
     "type": "boolean"
    }
   },
   "type": "object"
  },
  "EnclaveOptions": {
   "additionalProperties": false,
   "description": "Indicates whether the instance is enabled for AWS Nitro Enclaves.",
   "properties": {
    "Enabled": {
     "description": "If this parameter is set to true, the instance is enabled for AWS Nitro Enclaves; otherwise, it is not enabled for AWS Nitro Enclaves.",
     "type": "boolean"
    }
   },
   "type": "object"
  },
  "HibernationOptions": {
   "additionalProperties": false,
   "description": "Specifies whether your instance is configured for hibernation.",
   "properties": {
    "Configured": {
     "description": "TIf you set this parameter to true, the instance is enabled for hibernation.",
     "type": "boolean"
    }
   },
   "type": "object"
  },
  "IamInstanceProfile": {
   "additionalProperties": false,
   "description": "Specifies an IAM instance profile, which is a container for an IAM role for your instance.",
   "properties": {
    "Arn": {
     "description": "The Amazon Resource Name (ARN) of the instance profile.",
     "type": "string"
    },
    "Name": {
     "description": "The name of the instance profile.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "InstanceMarketOptions": {
   "additionalProperties": false,
   "description": "The market (purchasing) option for the instances.",
   "properties": {
    "MarketType": {
     "description": "The market type.",
     "enum": [
      "spot",
      "capacity-block"
     ],
     "type": "string"
    },
    "SpotOptions": {
     "$ref": "#/definitions/SpotOptions"
    }
   },
   "type": "object"
  },
  "InstanceRequirements": {
   "additionalProperties": false,
   "description": "The attributes for the instance types.",
   "properties": {
    "AcceleratorCount": {
     "$ref": "#/definitions/AcceleratorCount"
    },
    "AcceleratorManufacturers": {
     "description": "Indicates whether instance types must have accelerators by specific manufacturers.",
     "items": {
      "type": "string"
     },
     "type": "array",
     "uniqueItems": false
    },
    "AcceleratorNames": {
     "description": "The accelerators that must be on the instance type.",
     "items": {
      "type": "string"
     },
     "type": "array",
     "uniqueItems": false
    },
    "AcceleratorTotalMemoryMiB": {
     "$ref": "#/definitions/AcceleratorTotalMemoryMiB"
    },
    "AcceleratorTypes": {
     "description": "The accelerator types that must be on the instance type.",
     "items": {
      "type": "string"
     },
     "type": "array",
     "uniqueItems": false
    },
    "AllowedInstanceTypes": {
     "description": "The instance types to apply your specified attributes against.",
     "items": {
      "type": "string"
     },
     "type": "array",
     "uniqueItems": false
    },
    "BareMetal": {
     "description": "Indicates whether bare metal instance types must be included, excluded, or required.",
     "type": "string"
    },
    "BaselineEbsBandwidthMbps": {
     "$ref": "#/definitions/BaselineEbsBandwidthMbps"
    },
    "BurstablePerformance": {
     "type": "string"
    },
    "CpuManufacturers": {
     "description": "The CPU manufacturers to include.",
     "items": {
      "type": "string"
     },
     "type": "array",
     "uniqueItems": false
    },
    "ExcludedInstanceTypes": {
     "description": "The instance types to exclude.",
     "items": {
      "description": "The user data to make available to the instance.",
      "type": "string"
     },
     "type": "array",
     "uniqueItems": false
    },
    "InstanceGenerations": {
     "description": "Indicates whether current or previous generation instance types are included.",
     "items": {
      "type": "string"
     },
     "type": "array",
     "uniqueItems": false
    },
    "LocalStorage": {
     "description": "The user data to make available to the instance.",
     "type": "string"
    },
    "LocalStorageTypes": {
     "description": "The type of local storage that is required.",
     "items": {
      "type": "string"
     },
     "type": "array",
     "uniqueItems": false
    },
    "MemoryGiBPerVCpu": {
     "$ref": "#/definitions/MemoryGiBPerVCpu"
    },
    "MemoryMiB": {
     "$ref": "#/definitions/MemoryMiB"
    },
    "NetworkBandwidthGbps": {
     "$ref": "#/definitions/NetworkBandwidthGbps"
    },
    "NetworkInterfaceCount": {
     "$ref": "#/definitions/NetworkInterfaceCount"
    },
    "OnDemandMaxPricePercentageOverLowestPrice": {
     "description": "The price protection threshold for On-Demand Instances.",
     "type": "integer"
    },
    "RequireHibernateSupport": {
     "description": "Indicates whether instance types must support hibernation for On-Demand Instances.",
     "type": "boolean"
    },
    "SpotMaxPricePercentageOverLowestPrice": {
     "description": "The price protection threshold for Spot Instances.",
     "type": "integer"
    },
    "TotalLocalStorageGB": {
     "$ref": "#/definitions/TotalLocalStorageGB"
    },
    "VCpuCount": {
     "$ref": "#/definitions/VCpuCount"
    }
   },
   "type": "object"
  },
  "Ipv4PrefixSpecification": {
   "additionalProperties": false,
   "description": "Specifies an IPv4 prefix for a network interface.",
   "properties": {
    "Ipv4Prefix": {
     "description": "The IPv4 prefix.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "Ipv6Add": {
   "additionalProperties": false,
   "description": "Specifies an IPv6 address.",
   "properties": {
    "Ipv6Address": {
     "type": "string"
    }
   },
   "type": "object"
  },
  "Ipv6PrefixSpecification": {
   "additionalProperties": false,
   "description": "Specifies an IPv6 prefix for a network interface.",
   "properties": {
    "Ipv6Prefix": {
     "type": "string"
    }
   },
   "type": "object"
  },
  "LaunchTemplateData": {
   "additionalProperties": false,
   "description": "The information for the launch template.",
   "oneOf": [
    {
     "properties": {
      "NetworkInterfaces": false,
      "SecurityGroupIds": false
     },
     "required": [
      "SecurityGroups"
     ],
     "type": "object"
    },
    {
     "properties": {
      "NetworkInterfaces": false,
      "SecurityGroups": false
     },
     "required": [
      "SecurityGroupIds"
     ],
     "type": "object"
    },
    {
     "properties": {
      "SecurityGroupIds": false,
      "SecurityGroups": false
     },
     "required": [
      "NetworkInterfaces"
     ],
     "type": "object"
    },
    {
     "maxProperties": 1,
     "minProperties": 1,
     "propertyNames": {
      "enum": [
       "Fn::Base64",
       "Fn::GetAtt",
       "Fn::GetAZs",
       "Fn::ImportValue",
       "Fn::Join",
       "Fn::Split",
       "Fn::FindInMap",
       "Fn::Select",
       "Ref",
       "Fn::If",
       "Fn::Contains",
       "Fn::Sub",
       "Fn::Cidr",
       "Fn::Length",
       "Fn::ToJsonString",
       "Fn::ForEach::[a-zA-Z0-9]+"
      ]
     },
     "type": "object"
    }
   ],
   "oneOfDescription": "Specify only one ['SecurityGroups', 'SecurityGroupIds', 'NetworkInterfaces']",
   "properties": {
    "BlockDeviceMappings": {
     "description": "The block device mapping.",
     "items": {
      "$ref": "#/definitions/BlockDeviceMapping"
     },
     "type": "array",
     "uniqueItems": false
    },
    "CapacityReservationSpecification": {
     "$ref": "#/definitions/CapacityReservationSpecification"
    },
    "CpuOptions": {
     "$ref": "#/definitions/CpuOptions"
    },
    "CreditSpecification": {
     "$ref": "#/definitions/CreditSpecification"
    },
    "DisableApiStop": {
     "description": "Indicates whether to enable the instance for stop protection.",
     "type": "boolean"
    },
    "DisableApiTermination": {
     "description": "If you set this parameter to true, you can't terminate the instance using the Amazon EC2 console, CLI, or API.",
     "type": "boolean"
    },
    "EbsOptimized": {
     "description": "Indicates whether the instance is optimized for Amazon EBS I/O.",
     "type": "boolean"
    },
    "ElasticGpuSpecifications": {
     "description": "An elastic GPU to associate with the instance.",
     "items": {
      "$ref": "#/definitions/ElasticGpuSpecification"
     },
     "type": "array",
     "uniqueItems": false
    },
    "ElasticInferenceAccelerators": {
     "description": "The elastic inference accelerator for the instance.",
     "items": {
      "$ref": "#/definitions/LaunchTemplateElasticInferenceAccelerator"
     },
     "type": "array",
     "uniqueItems": false
    },
    "EnclaveOptions": {
     "$ref": "#/definitions/EnclaveOptions"
    },
    "HibernationOptions": {
     "$ref": "#/definitions/HibernationOptions"
    },
    "IamInstanceProfile": {
     "$ref": "#/definitions/IamInstanceProfile"
    },
    "ImageId": {
     "description": "The ID of the AMI. Alternatively, you can specify a Systems Manager parameter, which will resolve to an AMI ID on launch.",
     "type": "string"
    },
    "InstanceInitiatedShutdownBehavior": {
     "description": "Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).",
     "enum": [
      "stop",
      "terminate"
     ],
     "type": "string"
    },
    "InstanceMarketOptions": {
     "$ref": "#/definitions/InstanceMarketOptions"
    },
    "InstanceRequirements": {
     "$ref": "#/definitions/InstanceRequirements"
    },
    "InstanceType": {
     "type": "string"
    },
    "KernelId": {
     "description": "The ID of the kernel.",
     "type": "string"
    },
    "KeyName": {
     "description": "The name of the EC2 key pair",
     "type": "string"
    },
    "LicenseSpecifications": {
     "description": "The license configurations.",
     "items": {
      "$ref": "#/definitions/LicenseSpecification"
     },
     "type": "array",
     "uniqueItems": false
    },
    "MaintenanceOptions": {
     "$ref": "#/definitions/MaintenanceOptions"
    },
    "MetadataOptions": {
     "$ref": "#/definitions/MetadataOptions"
    },
    "Monitoring": {
     "$ref": "#/definitions/Monitoring"
    },
    "NetworkInterfaces": {
     "description": "If you specify a network interface, you must specify any security groups and subnets as part of the network interface.",
     "items": {
      "$ref": "#/definitions/NetworkInterface"
     },
     "type": "array",
     "uniqueItems": false
    },
    "Placement": {
     "$ref": "#/definitions/Placement"
    },
    "PrivateDnsNameOptions": {
     "$ref": "#/definitions/PrivateDnsNameOptions"
    },
    "RamDiskId": {
     "type": "string"
    },
    "SecurityGroupIds": {
     "description": "One or more security group IDs. ",
     "items": {
      "type": "string"
     },
     "type": "array",
     "uniqueItems": false
    },
    "SecurityGroups": {
     "description": "One or more security group names.",
     "items": {
      "type": "string"
     },
     "type": "array",
     "uniqueItems": false
    },
    "TagSpecifications": {
     "description": "The tags to apply to the resources that are created during instance launch.",
     "items": {
      "$ref": "#/definitions/TagSpecification"
     },
     "type": "array",
     "uniqueItems": false
    },
    "UserData": {
     "description": "The user data to make available to the instance.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "LaunchTemplateElasticInferenceAccelerator": {
   "additionalProperties": false,
   "description": "Specifies an elastic inference accelerator.",
   "properties": {
    "Count": {
     "description": "The number of elastic inference accelerators to attach to the instance.",
     "type": "integer"
    },
    "Type": {
     "description": "The type of elastic inference accelerator.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "LaunchTemplateTagSpecification": {
   "additionalProperties": false,
   "description": "Specifies the tags to apply to the launch template during creation.",
   "properties": {
    "ResourceType": {
     "description": "The type of resource to tag.",
     "type": "string"
    },
    "Tags": {
     "description": "The tags for the resource.",
     "items": {
      "$ref": "#/definitions/Tag"
     },
     "type": "array",
     "uniqueItems": false
    }
   },
   "type": "object"
  },
  "LicenseSpecification": {
   "additionalProperties": false,
   "description": "Specifies a license configuration for an instance.",
   "properties": {
    "LicenseConfigurationArn": {
     "description": "The Amazon Resource Name (ARN) of the license configuration.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "MaintenanceOptions": {
   "additionalProperties": false,
   "description": "The maintenance options of your instance.",
   "properties": {
    "AutoRecovery": {
     "description": "Disables the automatic recovery behavior of your instance or sets it to default.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "MemoryGiBPerVCpu": {
   "additionalProperties": false,
   "description": "The minimum and maximum amount of memory per vCPU, in GiB.",
   "properties": {
    "Max": {
     "description": "The maximum amount of memory per vCPU, in GiB.",
     "type": "number"
    },
    "Min": {
     "description": "TThe minimum amount of memory per vCPU, in GiB.",
     "type": "number"
    }
   },
   "type": "object"
  },
  "MemoryMiB": {
   "additionalProperties": false,
   "description": "The minimum and maximum amount of memory, in MiB.",
   "properties": {
    "Max": {
     "description": "The maximum amount of memory, in MiB.",
     "type": "integer"
    },
    "Min": {
     "description": "The minimum amount of memory, in MiB.",
     "type": "integer"
    }
   },
   "type": "object"
  },
  "MetadataOptions": {
   "additionalProperties": false,
   "description": "The metadata options for the instance.",
   "properties": {
    "HttpEndpoint": {
     "description": "Enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is enabled.",
     "type": "string"
    },
    "HttpProtocolIpv6": {
     "description": "Enables or disables the IPv6 endpoint for the instance metadata service.",
     "type": "string"
    },
    "HttpPutResponseHopLimit": {
     "description": "The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.",
     "type": "integer"
    },
    "HttpTokens": {
     "description": "IMDSv2 uses token-backed sessions.",
     "type": "string"
    },
    "InstanceMetadataTags": {
     "description": "Set to enabled to allow access to instance tags from the instance metadata.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "Monitoring": {
   "additionalProperties": false,
   "description": "Specifies whether detailed monitoring is enabled for an instance.",
   "properties": {
    "Enabled": {
     "description": "Specify true to enable detailed monitoring.",
     "type": "boolean"
    }
   },
   "type": "object"
  },
  "NetworkBandwidthGbps": {
   "additionalProperties": false,
   "description": "The minimum and maximum amount of network bandwidth, in gigabits per second (Gbps).",
   "properties": {
    "Max": {
     "description": "The maximum amount of network bandwidth, in Gbps.",
     "type": "number"
    },
    "Min": {
     "description": "The minimum amount of network bandwidth, in Gbps.",
     "type": "number"
    }
   },
   "type": "object"
  },
  "NetworkInterface": {
   "additionalProperties": false,
   "description": "Specifies the parameters for a network interface.",
   "properties": {
    "AssociateCarrierIpAddress": {
     "description": "Indicates whether to associate a Carrier IP address with eth0 for a new network interface.",
     "type": "boolean"
    },
    "AssociatePublicIpAddress": {
     "description": "Associates a public IPv4 address with eth0 for a new network interface.",
     "type": "boolean"
    },
    "ConnectionTrackingSpecification": {
     "$ref": "#/definitions/ConnectionTrackingSpecification"
    },
    "DeleteOnTermination": {
     "description": "Indicates whether the network interface is deleted when the instance is terminated.",
     "type": "boolean"
    },
    "Description": {
     "description": "A description for the network interface.",
     "type": "string"
    },
    "DeviceIndex": {
     "description": "The device index for the network interface attachment.",
     "type": "integer"
    },
    "EnaSrdSpecification": {
     "$ref": "#/definitions/EnaSrdSpecification"
    },
    "Groups": {
     "description": "The IDs of one or more security groups.",
     "items": {
      "type": "string"
     },
     "type": "array",
     "uniqueItems": false
    },
    "InterfaceType": {
     "description": "The type of network interface.",
     "type": "string"
    },
    "Ipv4PrefixCount": {
     "description": "The number of IPv4 prefixes to be automatically assigned to the network interface.",
     "type": "integer"
    },
    "Ipv4Prefixes": {
     "description": "One or more IPv4 prefixes to be assigned to the network interface.",
     "items": {
      "$ref": "#/definitions/Ipv4PrefixSpecification"
     },
     "type": "array",
     "uniqueItems": false
    },
    "Ipv6AddressCount": {
     "description": "The number of IPv6 addresses to assign to a network interface.",
     "type": "integer"
    },
    "Ipv6Addresses": {
     "description": "One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet.",
     "items": {
      "$ref": "#/definitions/Ipv6Add"
     },
     "type": "array",
     "uniqueItems": false
    },
    "Ipv6PrefixCount": {
     "description": "The number of IPv6 prefixes to be automatically assigned to the network interface.",
     "type": "integer"
    },
    "Ipv6Prefixes": {
     "description": "One or more IPv6 prefixes to be assigned to the network interface.",
     "items": {
      "$ref": "#/definitions/Ipv6PrefixSpecification"
     },
     "type": "array",
     "uniqueItems": false
    },
    "NetworkCardIndex": {
     "description": "The index of the network card.",
     "type": "integer"
    },
    "NetworkInterfaceId": {
     "description": "The ID of the network interface.",
     "type": "string"
    },
    "PrimaryIpv6": {
     "description": "Enables the first IPv6 global unique address (GUA) on a dual stack or IPv6-only ENI immutable.",
     "type": "boolean"
    },
    "PrivateIpAddress": {
     "description": "The primary private IPv4 address of the network interface.",
     "type": "string"
    },
    "PrivateIpAddresses": {
     "description": "One or more private IPv4 addresses.",
     "items": {
      "$ref": "#/definitions/PrivateIpAdd"
     },
     "type": "array",
     "uniqueItems": false
    },
    "SecondaryPrivateIpAddressCount": {
     "description": "The number of secondary private IPv4 addresses to assign to a network interface.",
     "type": "integer"
    },
    "SubnetId": {
     "description": "The ID of the subnet for the network interface.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "NetworkInterfaceCount": {
   "additionalProperties": false,
   "description": "TThe minimum and maximum number of network interfaces.",
   "properties": {
    "Max": {
     "type": "integer"
    },
    "Min": {
     "type": "integer"
    }
   },
   "type": "object"
  },
  "Placement": {
   "additionalProperties": false,
   "description": "Specifies the placement of an instance.",
   "properties": {
    "Affinity": {
     "description": "The affinity setting for an instance on a Dedicated Host.",
     "type": "string"
    },
    "AvailabilityZone": {
     "awsType": "AvailabilityZone",
     "description": "The Availability Zone for the instance.",
     "type": "string"
    },
    "GroupId": {
     "description": "The Group Id of a placement group. You must specify the Placement Group Group Id to launch an instance in a shared placement group.",
     "type": "string"
    },
    "GroupName": {
     "description": "The name of the placement group for the instance.",
     "type": "string"
    },
    "HostId": {
     "description": "The ID of the Dedicated Host for the instance.",
     "type": "string"
    },
    "HostResourceGroupArn": {
     "description": "The ARN of the host resource group in which to launch the instances. If you specify a host resource group ARN, omit the Tenancy parameter or set it to host.",
     "type": "string"
    },
    "PartitionNumber": {
     "description": "The number of the partition the instance should launch in. Valid only if the placement group strategy is set to partition.",
     "type": "integer"
    },
    "SpreadDomain": {
     "description": "Reserved for future use.",
     "type": "string"
    },
    "Tenancy": {
     "description": "The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware.",
     "enum": [
      "default",
      "dedicated",
      "host"
     ],
     "type": "string"
    }
   },
   "type": "object"
  },
  "PrivateDnsNameOptions": {
   "additionalProperties": false,
   "description": "Describes the options for instance hostnames.",
   "properties": {
    "EnableResourceNameDnsAAAARecord": {
     "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.",
     "type": "boolean"
    },
    "EnableResourceNameDnsARecord": {
     "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records.",
     "type": "boolean"
    },
    "HostnameType": {
     "description": "The type of hostname for EC2 instances.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "PrivateIpAdd": {
   "additionalProperties": false,
   "description": "Specifies a secondary private IPv4 address for a network interface.",
   "properties": {
    "Primary": {
     "description": "Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.",
     "type": "boolean"
    },
    "PrivateIpAddress": {
     "description": "The private IPv4 address.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "SpotOptions": {
   "additionalProperties": false,
   "description": "Specifies options for Spot Instances.",
   "properties": {
    "BlockDurationMinutes": {
     "description": "Deprecated",
     "type": "integer"
    },
    "InstanceInterruptionBehavior": {
     "description": "The behavior when a Spot Instance is interrupted. The default is terminate.",
     "enum": [
      "hibernate",
      "stop",
      "terminate"
     ],
     "type": "string"
    },
    "MaxPrice": {
     "description": "The maximum hourly price you're willing to pay for the Spot Instances.",
     "type": "string"
    },
    "SpotInstanceType": {
     "description": "The Spot Instance request type.",
     "enum": [
      "one-time",
      "persistent"
     ],
     "type": "string"
    },
    "ValidUntil": {
     "description": "The end date of the request, in UTC format (YYYY-MM-DDTHH:MM:SSZ). Supported only for persistent requests.",
     "type": "string"
    }
   },
   "type": "object"
  },
  "Tag": {
   "additionalProperties": false,
   "description": "The user data to make available to the instance.",
   "properties": {
    "Key": {
     "type": "string"
    },
    "Value": {
     "type": "string"
    }
   },
   "required": [
    "Value",
    "Key"
   ],
   "type": "object"
  },
  "TagSpecification": {
   "additionalProperties": false,
   "description": "Specifies the tags to apply to a resource when the resource is created for the launch template.",
   "properties": {
    "ResourceType": {
     "description": "The type of resource to tag.",
     "enum": [
      "capacity-reservation",
      "client-vpn-endpoint",
      "customer-gateway",
      "carrier-gateway",
      "coip-pool",
      "dedicated-host",
      "dhcp-options",
      "egress-only-internet-gateway",
      "elastic-ip",
      "elastic-gpu",
      "export-image-task",
      "export-instance-task",
      "fleet",
      "fpga-image",
      "host-reservation",
      "image",
      "import-image-task",
      "import-snapshot-task",
      "instance",
      "instance-event-window",
      "internet-gateway",
      "ipam",
      "ipam-pool",
      "ipam-scope",
      "ipv4pool-ec2",
      "ipv6pool-ec2",
      "key-pair",
      "launch-template",
      "local-gateway",
      "local-gateway-route-table",
      "local-gateway-virtual-interface",
      "local-gateway-virtual-interface-group",
      "local-gateway-route-table-vpc-association",
      "local-gateway-route-table-virtual-interface-group-association",
      "natgateway",
      "network-acl",
      "network-interface",
      "network-insights-analysis",
      "network-insights-path",
      "network-insights-access-scope",
      "network-insights-access-scope-analysis",
      "placement-group",
      "prefix-list",
      "replace-root-volume-task",
      "reserved-instances",
      "route-table",
      "security-group",
      "security-group-rule",
      "snapshot",
      "spot-fleet-request",
      "spot-instances-request",
      "subnet",
      "subnet-cidr-reservation",
      "traffic-mirror-filter",
      "traffic-mirror-session",
      "traffic-mirror-target",
      "transit-gateway",
      "transit-gateway-attachment",
      "transit-gateway-connect-peer",
      "transit-gateway-multicast-domain",
      "transit-gateway-policy-table",
      "transit-gateway-route-table",
      "transit-gateway-route-table-announcement",
      "volume",
      "vpc",
      "vpc-endpoint",
      "vpc-endpoint-connection",
      "vpc-endpoint-service",
      "vpc-endpoint-service-permission",
      "vpc-peering-connection",
      "vpn-connection",
      "vpn-gateway",
      "vpc-flow-log",
      "capacity-reservation-fleet",
      "traffic-mirror-filter-rule",
      "vpc-endpoint-connection-device-type",
      "verified-access-instance",
      "verified-access-group",
      "verified-access-endpoint",
      "verified-access-policy",
      "verified-access-trust-provider",
      "vpn-connection-device-type",
      "vpc-block-public-access-exclusion",
      "ipam-resource-discovery",
      "ipam-resource-discovery-association",
      "instance-connect-endpoint"
     ],
     "type": "string"
    },
    "Tags": {
     "description": "The tags for the resource.",
     "items": {
      "$ref": "#/definitions/Tag"
     },
     "type": "array",
     "uniqueItems": false
    }
   },
   "type": "object"
  },
  "TotalLocalStorageGB": {
   "additionalProperties": false,
   "description": "The minimum and maximum amount of total local storage, in GB.",
   "properties": {
    "Max": {
     "type": "number"
    },
    "Min": {
     "type": "number"
    }
   },
   "type": "object"
  },
  "VCpuCount": {
   "additionalProperties": false,
   "description": "The minimum and maximum number of vCPUs.",
   "properties": {
    "Max": {
     "description": "The maximum number of vCPUs.",
     "type": "integer"
    },
    "Min": {
     "description": "The minimum number of vCPUs.",
     "type": "integer"
    }
   },
   "type": "object"
  }
 },
 "description": "Resource Type definition for AWS::EC2::LaunchTemplate",
 "handlers": {
  "create": {
   "permissions": [
    "ec2:CreateLaunchTemplate",
    "ec2:CreateTags"
   ]
  },
  "delete": {
   "permissions": [
    "ec2:DeleteLaunchTemplate",
    "ec2:DeleteTags",
    "ec2:DescribeLaunchTemplates"
   ]
  },
  "list": {
   "permissions": [
    "ec2:DescribeLaunchTemplates"
   ]
  },
  "read": {
   "permissions": [
    "ec2:DescribeLaunchTemplates"
   ]
  },
  "update": {
   "permissions": [
    "ec2:CreateLaunchTemplateVersion"
   ]
  }
 },
 "primaryIdentifier": [
  "/properties/LaunchTemplateId"
 ],
 "properties": {
  "DefaultVersionNumber": {
   "description": "The default version of the launch template",
   "type": "string"
  },
  "LatestVersionNumber": {
   "description": "The latest version of the launch template",
   "type": "string"
  },
  "LaunchTemplateData": {
   "$ref": "#/definitions/LaunchTemplateData"
  },
  "LaunchTemplateId": {
   "description": "LaunchTemplate ID generated by service",
   "type": "string"
  },
  "LaunchTemplateName": {
   "description": "A name for the launch template.",
   "type": "string"
  },
  "TagSpecifications": {
   "description": "The tags to apply to the launch template on creation.",
   "items": {
    "$ref": "#/definitions/LaunchTemplateTagSpecification"
   },
   "type": "array",
   "uniqueItems": false
  },
  "VersionDescription": {
   "description": "A description for the first version of the launch template.",
   "type": "string"
  }
 },
 "readOnlyProperties": [
  "/properties/DefaultVersionNumber",
  "/properties/LaunchTemplateId",
  "/properties/LatestVersionNumber"
 ],
 "required": [
  "LaunchTemplateData"
 ],
 "tagging": {
  "cloudFormationSystemTags": false,
  "tagOnCreate": false,
  "tagUpdatable": false,
  "taggable": false
 },
 "typeName": "AWS::EC2::LaunchTemplate",
 "writeOnlyProperties": [
  "/properties/LaunchTemplateData",
  "/properties/VersionDescription",
  "/properties/TagSpecifications"
 ]
}
