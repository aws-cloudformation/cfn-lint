AWSTemplateFormatVersion: 2010-09-09
Parameters:
  cidrBlock:
    Type: String
  count:
    Type: String
  count1:
    Type: Number
    MinValue: 0
    MaxValue: 3000
  maskSizeForIPv4:
    Type: String
  maskSizeForIPv6:
    Type: String
  maskSizeForIPv41:
    Type: Number
    MinValue: 0
    MaxValue: 750
Conditions:
  IsProd: !Equals [!Ref AWS::AccountId, '123456789012']
Resources:
  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AssignIpv6AddressOnCreation: true
      VpcId: !Ref VPC
      #Test Ipv4 CidrBlock
      CidrBlock: !Select [0, !Cidr [!Ref cidrBlock, "a", "/32"]]
      #Test Ipv6 CidrBlock
      Ipv6CidrBlock:
        !Select [
          0,
          !Cidr [
            !Select [0, !GetAtt VPC.Ipv6CidrBlocks],
            !Ref count,
            !Ref maskSizeForIPv6,
          ],
        ]
    DependsOn: Ipv6VPCCidrBlock
  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AssignIpv6AddressOnCreation: true
      VpcId: !Ref VPC
      #Test Ipv4 CidrBlock
      CidrBlock:
        !Select [1, !Cidr [!Ref cidrBlock, !Ref count1, !Ref maskSizeForIPv41]]
      #Test Ipv6 CidrBlock
      Ipv6CidrBlock:
        !Select [
          1,
          !Cidr [
            !FindInMap [0, !GetAtt VPC.Ipv6CidrBlocks],
            !Ref count,
            !Ref maskSizeForIPv6,
          ],
        ]
    DependsOn: Ipv6VPCCidrBlock
  Subnet3:
    Type: AWS::EC2::Subnet
    Properties:
      AssignIpv6AddressOnCreation: true
      VpcId: !Ref VPC
      #Test Ipv4 CidrBlock
      CidrBlock:
        !Select [0, !Cidr [!Ref cidrBlock, !Ref count, !Ref maskSizeForIPv4]]
      #Test Ipv6 CidrBlock
      Ipv6CidrBlock:
        !Select [
          0,
          !Cidr [
            !Select [0, !GetAtt VPC.Ipv6CidrBlocks],
            !Ref count,
            !Ref maskSizeForIPv6,
          ],
        ]
    DependsOn: Ipv6VPCCidrBlock
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref cidrBlock
  Ipv6VPCCidrBlock:
    Type: AWS::EC2::VPCCidrBlock
    Properties:
      AmazonProvidedIpv6CidrBlock: true
      VpcId: !Ref VPC
  SubnetWithConditions:
    Type: AWS::EC2::Subnet
    Properties:
      # /28 block #1 (VPC Allocation), inside /26 block #3, inside /24 block #3 (prod) or block #15 (non-prod)
      CidrBlock:
        Fn::Select:
          - 1
          - Fn::Cidr:
              - Fn::Select:
                  - 3
                  - Fn::Cidr:
                      - Fn::If:
                        - IsProd
                        - "a"
                        - "b"
                      - 4
                      - 6
              - 2
              - 4
      VpcId: "vpc-123456"
