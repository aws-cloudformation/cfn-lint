---
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Template with all the resources that are covered by the AllowedValues.
  Minimal configuration for each resource to be "valid", apart from the properties
  that are part of the AllowedValues check.
Parameters:
  Password:
    Type: String
    NoEcho: True
Resources:
  AmazonMQBroker:
    Type: "AWS::AmazonMQ::Broker"
    Properties:
      AutoMinorVersionUpgrade: false
      BrokerName: "myBroker"
      DeploymentMode: "production" # Invalid AllowedValue
      EngineType: "activemq" # Invalid AllowedValue
      EngineVersion: "ActiveMQ 5.10.8" # Invalid AllowedValue
      PubliclyAccessible: false
      HostInstanceType: "t2.micro" # Invalid AllowedValue
      Users:
        - ConsoleAccess: false
          Groups:
            - "group1"
          Password: !Ref "Password"
          Username: "user"
  AmazonMQConfiguration:
    Type: "AWS::AmazonMQ::Configuration"
    Properties:
      Data: ""
      EngineType: "ACTIVE_MQ" # Invalid AllowedValue
      EngineVersion: "ActiveMQ" # Invalid AllowedValue
      Name: "Configuration"
  ApiGatewayAuthorizer:
    Type: "AWS::ApiGateway::Authorizer"
    Properties:
      RestApiId: !Ref "ApiGatewayRestAPI"
      Type: "Cognito" # Invalid AllowedValue
  ApiGatewayResponse:
    Type: "AWS::ApiGateway::GatewayResponse"
    Properties:
      ResponseType: "200 OK" # Invalid AllowedValue
      RestApiId: !Ref "ApiGatewayRestAPI"
  ApiGatewayRestAPI:
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      ApiKeySourceType: "AUTHORISER" # Invalid AllowedValue
  ApiGatewayUsagePlanKey:
    Type: "AWS::ApiGateway::UsagePlanKey"
    Properties:
      KeyId: "ApiGatewayUsagePlanKey"
      KeyType: "random value" # Invalid AllowedValue
      UsagePlanId: "UsagePlanId"
  ApplicationAutoScalingPolicy:
    Type: "AWS::ApplicationAutoScaling::ScalingPolicy"
    Properties:
      PolicyName: "ApplicationAutoScalingPolicy"
      PolicyType: "SimpleScaling" # Invalid AllowedValue
      ScalingTargetId: ""
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 50.0
        PredefinedMetricSpecification:
          PredefinedMetricType: "DynamoDbReadCapacityUtilization" # Invalid AllowedValue
  AppSyncDataSource:
    Type: "AWS::AppSync::DataSource"
    Properties:
      ApiId: "ApiId"
      Name: "AppSyncDataSource"
      Type: "LAMBDA" # Invalid AllowedValue
  AppSyncGraphQLApi:
    Type: "AWS::AppSync::GraphQLApi"
    Properties:
      Name: "AppSyncGraphQLApi"
      AuthenticationType: "IAM" # Invalid AllowedValue
  AppSyncResolver:
    Type: "AWS::AppSync::Resolver"
    Properties:
      ApiId: "ApiId"
      FieldName: "field"
      Kind: "PIPELINES" # Invlid AllowedValue
      TypeName: "type"
  AutoScalingGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      HealthCheckType: "elb" # Invalid AlllowedValue
      LifecycleHookSpecificationList:
        - DefaultResult: " ABANDON" # Invalid AlllowedValue
          LifecycleHookName: "hook"
          LifecycleTransition: "autoscaling: EC2_INSTANCE_TERMINATING" # Invalid AllowedValue
      MaxSize: "1"
      MinSize: "1"
  AutoScalingLaunchConfiguration:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      BlockDeviceMappings:
        - DeviceName: /dev/sdm
          Ebs:
            VolumeType: "ssd" # Invalid AllowedValue
      ImageId: "ami-1234"
      InstanceType: "t2.4xlarge"
      PlacementTenancy: "Standard" # Invalid AllowedValue
  AutoScalingLifecycleHook:
    Type: "AWS::AutoScaling::LifecycleHook"
    Properties:
      DefaultResult: "ABORT" # Invalid AlllowedValue
      AutoScalingGroupName: !Ref "AutoScalingGroup"
      LifecycleTransition: "EC2_INSTANCE_LAUNCHING" # Invalid AllowedValue
  AutoScalingPolicy:
    Type: "AWS::AutoScaling::ScalingPolicy"
    Properties:
      AdjustmentType: "ChangeCapacity" # Invalid AllowedValue
      AutoScalingGroupName: !Ref "AutoScalingGroup"
      MetricAggregationType: "max" # Invalid AllowedValue
      PolicyType: "Simplescaling" # Invalid AllowedValue
      TargetTrackingConfiguration:
        CustomizedMetricSpecification:
          MetricName: "MetricName"
          Namespace: "Namespace"
          Statistic: "Sample Count" # Invalid AllowedValue
        PredefinedMetricSpecification:
          PredefinedMetricType: "MaxCount" # Invalid AllowedValue
        TargetValue: 10.5
  AutoScalingPlan:
    Type: "AWS::AutoScalingPlans::ScalingPlan"
    Properties:
      ApplicationSource:
        CloudFormationStackARN: "StackArn"
      ScalingInstructions:
        - MaxCapacity: 1
          MinCapacity: 1
          ResourceId: "ResourceId"
          ScalableDimension: "dynamodb:WriteCapacityUnits" # Invalid AllowedValues
          ServiceNamespace: "dynamoDB" # Invalid AllowedValues
          PredictiveScalingMaxCapacityBehavior: "SetForecastCapacityToMaxCapacity ok" # Invalid AllowedValue
          PredictiveScalingMode: "Forecast" # Invalid AllowedValue
          TargetTrackingConfigurations:
            - CustomizedScalingMetricSpecification:
                MetricName: "MetricName"
                Namespace: "Namespace"
                Statistic: "sample count" # Invalid AllowedValue
              PredefinedScalingMetricSpecification:
                PredefinedScalingMetricType: "RequestCountPerTarget" # Invalid AllowedValue
              TargetValue: 10.5
  DmsEndpoint:
    Type: "AWS::DMS::Endpoint"
    Properties:
      EndpointType: "random" # Invalid AllowedValue
      EngineName: "database" # Invalid AllowedValue
      SslMode: "ssl" # Valid AllowedValue
  GlueConnection:
    Type: "AWS::Glue::Connection"
    Properties:
      CatalogId: !Ref "AWS::AccountId"
      ConnectionInput:
        ConnectionProperties: "{}"
        ConnectionType: "FTP" # Invalid AllowedValue
  RecordSet:
    Type: "AWS::Route53::RecordSet"
    Properties:
      Name: "www.example.com"
      Type: "X" # AllowedValue
      ResourceRecords:
        - ''
  EC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: "ami-2f726546"
      InstanceType: "t1.micro"
      KeyName: ""
      BlockDeviceMappings:
        - DeviceName: "/dev/sdm"
          Ebs:
            VolumeType: "magnetic" # Invalid AllowedValue
  S3Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      AccelerateConfiguration:
        AccelerationStatus: "Disabled" # Inalid AllowedValue
      AccessControl: "PrivateRead" # Invalid AllowedValue
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "KMS" # Invalid AllowedValue
      NotificationConfiguration:
        TopicConfigurations:
          - Topic: "MyTopic"
            Event: "s3:ObjectCreated:Get" # Invalid AllowedValue
      VersioningConfiguration:
        Status: "disabled" # Invalid AllowedValue
      WebsiteConfiguration:
        IndexDocument: "index.html"
        RedirectAllRequestsTo:
          HostName: "example.com"
          Protocol: "tcp" # Invalid AllowedValue
  SecretManagerSecretTargetAttachment:
    Type: "AWS::SecretsManager::SecretTargetAttachment"
    Properties:
      SecretId: "SecretArn"
      TargetId: "RefToCluster"
      TargetType: "AWS::RDS:DBCluster" # Invalid AllowedValue
  SesReceiptRule:
    Type: "AWS::SES::ReceiptRule"
    Properties:
      Rule:
        TlsPolicy: "required" # Invalid AllowedValue
      RuleSetName: "SesReceiptRule"
  SnsSubscription:
    Type: "AWS::SNS::Subscription"
    Properties:
      Protocol: "mail" # Invalid AllowedValue
      TopicArn: "TopicArn"
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.0.0.0/8"
      InstanceTenancy: "Default" # Invalid AllowedValue
  WAFRule:
    Type: "AWS::WAFRegional::Rule"
    Properties:
      Name: "WAF Rule"
      MetricName: "MetricName"
      Predicates:
        - DataId: "DataId"
          Negated: false
          Type: "Bytematch" # Invalid AllowedValue
