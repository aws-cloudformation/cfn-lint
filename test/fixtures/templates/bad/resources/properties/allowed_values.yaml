---
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Template with all the resources that are covered by the AllowedValues.
  Minimal configuration for each resource to be "valid", apart from the properties
  that are part of the AllowedValues check.
Parameters:
  Password:
    Type: String
    NoEcho: True
  AutoScalingLaunchConfigurationVolume:
    Type: String
    Default: "ssd" # Invalid AllowedValue
    AllowedValues:
      - "io1"
      - "gp2"
      - "ssd" # Invalid AllowedValue
  ImageId:
    Type: "AWS::EC2::Image::Id"
Resources:
  AmazonMQBroker:
    Type: "AWS::AmazonMQ::Broker"
    Properties:
      AutoMinorVersionUpgrade: false
      BrokerName: "myBroker"
      DeploymentMode: "production" # Invalid AllowedValue
      EngineType: "activemq" # Invalid AllowedValue
      EngineVersion: "ActiveMQ 5.10.8" # Invalid AllowedValue
      PubliclyAccessible: false
      HostInstanceType: "t2.micro" # Invalid AllowedValue
      Users:
        - ConsoleAccess: false
          Groups:
            - "group1"
          Password: !Ref "Password"
          Username: "user"
  AmazonMQConfiguration:
    Type: "AWS::AmazonMQ::Configuration"
    Properties:
      Data: ""
      EngineType: "ACTIVE_MQ" # Invalid AllowedValue
      EngineVersion: "ActiveMQ" # Invalid AllowedValue
      Name: "Configuration"
  ApiGatewayAuthorizer:
    Type: "AWS::ApiGateway::Authorizer"
    Properties:
      RestApiId: !Ref "ApiGatewayRestAPI"
      Type: "Cognito" # Invalid AllowedValue
  ApiGatewayResponse:
    Type: "AWS::ApiGateway::GatewayResponse"
    Properties:
      ResponseType: "200 OK" # Invalid AllowedValue
      RestApiId: !Ref "ApiGatewayRestAPI"
  ApiGatewayRestAPI:
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      ApiKeySourceType: "AUTHORISER" # Invalid AllowedValue
  ApiGatewayUsagePlanKey:
    Type: "AWS::ApiGateway::UsagePlanKey"
    Properties:
      KeyId: "ApiGatewayUsagePlanKey"
      KeyType: "random value" # Invalid AllowedValue
      UsagePlanId: "UsagePlanId"
  ApplicationAutoScalingPolicy:
    Type: "AWS::ApplicationAutoScaling::ScalingPolicy"
    Properties:
      PolicyName: "ApplicationAutoScalingPolicy"
      PolicyType: "SimpleScaling" # Invalid AllowedValue
      ScalingTargetId: ""
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 50.0
        PredefinedMetricSpecification:
          PredefinedMetricType: "DynamoDbReadCapacityUtilization" # Invalid AllowedValue
  AppSyncDataSource:
    Type: "AWS::AppSync::DataSource"
    Properties:
      ApiId: "ApiId"
      Name: "AppSyncDataSource"
      Type: "LAMBDA" # Invalid AllowedValue
  AppSyncGraphQLApi:
    Type: "AWS::AppSync::GraphQLApi"
    Properties:
      Name: "AppSyncGraphQLApi"
      AuthenticationType: "IAM" # Invalid AllowedValue
  AppSyncResolver:
    Type: "AWS::AppSync::Resolver"
    Properties:
      ApiId: "ApiId"
      FieldName: "field"
      Kind: "PIPELINES" # Invlid AllowedValue
      TypeName: "type"
  AutoScalingGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      HealthCheckType: "elb" # Invalid AlllowedValue
      LaunchConfigurationName: "launch-configuration"
      LifecycleHookSpecificationList:
        - DefaultResult: " ABANDON" # Invalid AlllowedValue
          LifecycleHookName: "hook"
          LifecycleTransition: "autoscaling: EC2_INSTANCE_TERMINATING" # Invalid AllowedValue
      MaxSize: "1"
      MinSize: "1"
  AutoScalingLaunchConfiguration:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      BlockDeviceMappings:
        - DeviceName: /dev/sdm
          Ebs:
            VolumeType: !Ref "AutoScalingLaunchConfigurationVolume" # Invalid AllowedValue
      ImageId: !Ref "ImageId"
      InstanceType: "t2.16xlarge" # Invalid AllowedValue
      PlacementTenancy: "Standard" # Invalid AllowedValue
  AutoScalingLifecycleHook:
    Type: "AWS::AutoScaling::LifecycleHook"
    Properties:
      DefaultResult: "ABORT" # Invalid AlllowedValue
      AutoScalingGroupName: !Ref "AutoScalingGroup"
      LifecycleTransition: "EC2_INSTANCE_LAUNCHING" # Invalid AllowedValue
  AutoScalingPolicy:
    Type: "AWS::AutoScaling::ScalingPolicy"
    Properties:
      AdjustmentType: "ChangeCapacity" # Invalid AllowedValue
      AutoScalingGroupName: !Ref "AutoScalingGroup"
      MetricAggregationType: "max" # Invalid AllowedValue
      PolicyType: "Simplescaling" # Invalid AllowedValue
      TargetTrackingConfiguration:
        CustomizedMetricSpecification:
          MetricName: "MetricName"
          Namespace: "Namespace"
          Statistic: "Sample Count" # Invalid AllowedValue
        PredefinedMetricSpecification:
          PredefinedMetricType: "MaxCount" # Invalid AllowedValue
        TargetValue: 10.5
  AutoScalingPlan:
    Type: "AWS::AutoScalingPlans::ScalingPlan"
    Properties:
      ApplicationSource:
        CloudFormationStackARN: "StackArn"
      ScalingInstructions:
        - MaxCapacity: 1
          MinCapacity: 1
          ResourceId: "ResourceId"
          ScalableDimension: "dynamodb:WriteCapacityUnits" # Invalid AllowedValues
          ServiceNamespace: "dynamoDB" # Invalid AllowedValues
          PredictiveScalingMaxCapacityBehavior: "SetForecastCapacityToMaxCapacity ok" # Invalid AllowedValue
          PredictiveScalingMode: "Forecast" # Invalid AllowedValue
          TargetTrackingConfigurations:
            - CustomizedScalingMetricSpecification:
                MetricName: "MetricName"
                Namespace: "Namespace"
                Statistic: "sample count" # Invalid AllowedValue
              PredefinedScalingMetricSpecification:
                PredefinedScalingMetricType: "RequestCountPerTarget" # Invalid AllowedValue
              TargetValue: 10.5
  Budget:
    Type: "AWS::Budgets::Budget"
    Properties:
      Budget:
        BudgetType: "UTILIZATION" # Invalid AllowedValue
        TimeUnit: "month" # Invalid AllowedValue
      NotificationsWithSubscribers:
        - Subscribers:
          - SubscriptionType: "e-mail" # Invalid AllowedValue
            Address: "test@test.com"
          Notification:
            ThresholdType: "ACTUAL" # Invalid AllowedValue
            Threshold: 80
            NotificationType: "FORECAST" # Invalid AllowedValue
            ComparisonOperator: "GREATER" # Invalid AllowedValue
  Certificate:
    Type: "AWS::CertificateManager::Certificate"
    Properties:
      DomainName: "example.com"
      ValidationMethod: "Dns" # Invalid AllowedValue
  CloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        CustomErrorResponses:
          - ErrorCode: 200 # Invalid AllowedValue
            ResponseCode: 301 # Invalid AllowedValue
            ResponsePagePath: "/404-errors/403-forbidden.html"
        CacheBehaviors:
          - ForwardedValues:
              QueryString: False
            LambdaFunctionAssociations:
              - EventType: "viewerrequest" # Invalid AllowedValue
                LambdaFunctionARN: "LambdaArn"
            PathPattern: "images/*.jpg"
            TargetOriginId: "2"
            ViewerProtocolPolicy: "http" # Invalid AllowedValue
        DefaultCacheBehavior:
          ForwardedValues:
            QueryString: False
          TargetOriginId: "1"
          ViewerProtocolPolicy: "https" # Invalid AllowedValue
        Enabled: False
        HttpVersion: "http1.2" # Invalid AllowedValue
        PriceClass: "Cheap" # Invalid AllowedValue
        Origins:
          - DomainName: !GetAtt "S3Bucket.DomainName"
            Id: "1"
            S3OriginConfig:
              OriginAccessIdentity: "origin-access-identity/cloudfront/E15MNIMTCFKK4C"
          - Id: "2"
            DomainName: "example.com"
            CustomOriginConfig:
              HTTPSPort: 443
              OriginProtocolPolicy: "MatchViewer" # Invalid AllowedValue
              OriginSSLProtocols:
                - "TLSv1.3" # Invalid AllowedValue
        Restrictions:
          GeoRestriction:
            Locations:
              - "EN" # Invalid AllowedValue
            RestrictionType: "white-list" # Invalid AllowedValue
        ViewerCertificate:
          AcmCertificateArn: !Ref "Certificate"
          MinimumProtocolVersion: "TLSv1.2-2018" # Invalid AllowedValue
          SslSupportMethod: "sni" # Invalid AllowedValue
  CloudFrontStreamingDistribution:
    Type: "AWS::CloudFront::StreamingDistribution"
    Properties:
      StreamingDistributionConfig:
        Comment: "Mandatory comment"
        Enabled: False
        PriceClass: "PriceClassAll" # Invalid AllowedValue
        S3Origin:
          DomainName: !GetAtt "S3Bucket.DomainName"
          OriginAccessIdentity: "origin-access-identity/cloudfront/E15MNIMTCFKK4C"
        TrustedSigners:
          Enabled: False
      Tags:
        - Key: "Mandatory"
          Value: "Tag"
  CloudTrail:
    Type: "AWS::CloudTrail::Trail"
    Properties:
      EventSelectors:
        - ReadWriteType: "Read" # Invalid AllowedValue
          DataResources:
            - Type: "AWS::S3:Object" # Invalid AllowedValue
              Values:
                - "Arn1"
                - "Arn2"
      IsLogging: True
      S3BucketName: "MyBucket"
  CloudWatchAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ComparisonOperator: "GreaterThan" # Invalid AllowedValue
      EvaluationPeriods: 1
      Statistic: "Total" # Invalid AllowedValue
      Threshold: 0.0
      TreatMissingData: "not_breaching" # Invalid AllowedValue
      Unit: "Teraflops" # Invalid AllowedValue
  CloudWatchEventRule:
    Type: "AWS::Events::Rule"
    Properties:
      EventPattern: ""
      State: "SUSPENDED" # Invalid AllowedValue
  CloudWatchEventBusPolicy:
    Type: "AWS::Events::EventBusPolicy"
    Properties:
      Action: "events:GetEvents" # Invalid AllowedValue
      Condition:
        Type: "GreaterOrEquals" # Invalid AllowedValue
        Key: "aws:PrincipalOrg" # Invalid AllowedValue
        Value: "o-1234567890"
      Principal: "*"
      StatementId: "x"
  CodeBuildProject:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Artifacts:
        Packaging: "gzip" # Invalid AllowedValue
        Type: "codebuild" # Invalid AllowedValue
      Cache:
        Type: "CACHE" # Invalid AllowedValue
      Environment:
        ComputeType: "BUILD_GENERAL2_LARGE" # Invalid AllowedValue
        Image: "registry/repository:latest"
        ImagePullCredentialsType: "GITHUB" # Invalid AllowedValue
        Type: "Windows" # Invalid AllowedValue
      LogsConfig:
        CloudWatchLogs:
          Status: "SUSPENDED" # Invalid AllowedValue
        S3Logs:
          Status: "Disabled" # Invalid AllowedValue
      ServiceRole: ""
      Source:
        Type: "SOURCEFORGE" # Invalid AllowedValue
  CodeCommitRepository:
    Type: "AWS::CodeCommit::Repository"
    Properties:
      RepositoryName: "CodeCommitRepository"
      Triggers:
      - Name: "Trigger"
        Events:
          - "test" # Invalid AllowedValue
  CodeDeployApplication:
    Type: "AWS::CodeDeploy::Application"
    Properties:
      ApplicationName: "CodeDeployApplication"
      ComputePlatform: "EC2" # Invalid AllowedValue
  CodeDeployDeploymentConfig:
    Type: "AWS::CodeDeploy::DeploymentConfig"
    Properties:
      DeploymentConfigName: "CodeDeployDeploymentConfig"
      MinimumHealthyHosts:
        Type: "HOST_PERCENTAGE" # Invalid AllowedValue
        Value: 1
  CodeDeployDeploymentGroup:
    Type: "AWS::CodeDeploy::DeploymentGroup"
    Properties:
      ApplicationName: "CodeDeployDeploymentGroup"
      AutoRollbackConfiguration:
        Events:
          - "DEPLOYMENTFAILURE" # Invalid AllowedValue
          - "DEPLOYMENT_STOP_ALARM" # Invalid AllowedValue
      DeploymentStyle:
        DeploymentOption: "TRAFFIC_CONTROL" # Invalid AllowedValue
        DeploymentType: "IN PLACE" # Invalid AllowedValue
      ServiceRoleArn: "ServiceRoleArn"
      TriggerConfigurations:
        - TriggerEvents:
            - "DeploymentStart" # Invalid AllowedValue
  CodePipelineCustomActionType:
    Type: "AWS::CodePipeline::CustomActionType"
    Properties:
      Category: "Custom" # Invalid AllowedValue
      ConfigurationProperties:
        - Key: True
          Name: "My-Name"
          Required: True
          Secret: False
          Type: "string" # Invalid AllowedValue
      InputArtifactDetails:
        MaximumCount: 1
        MinimumCount: 1
      OutputArtifactDetails:
        MaximumCount: 1
        MinimumCount: 1
      Provider: "My-Build-Provider-Name"
      Version: "1a"
  CodePipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      ArtifactStore:
        Location: "S3Bucket"
        Type: "ec2" # Invalid AllowedValue
      RoleArn: "my-role-arn"
      Stages:
        - Name: "stage1"
          Actions:
            - Name: "action1"
              ActionTypeId:
                Category: "Testing" # Invalid AllowedValue
                Owner: "me" # Invalid AllowedValue
                Provider: "provider"
                Version: "latest"
          Blockers:
            - Name: "blocker1"
              Type: "blocker" # Invalid AllowedValue
  CodePipelineWebhook:
    Type: "AWS::CodePipeline::Webhook"
    Properties:
      Authentication: "GITHUB" # InValid AllowedValue
      AuthenticationConfiguration:
        SecretToken: "githubtoken"
      Filters:
        - JsonPath: ""
      TargetAction: "action1"
      TargetPipeline: ""
      TargetPipelineVersion: 1
  CognitoIdentityPool:
    Type: "AWS::Cognito::IdentityPool"
    Properties:
      AllowUnauthenticatedIdentities: False
      CognitoStreams:
        StreamingStatus: "SUSPENDED" # Invalid AllowedValue
  CognitoUserPool:
    Type: "AWS::Cognito::UserPool"
    Properties:
      AliasAttributes:
        - "phonenumber" # Invalid AllowedValue
      AutoVerifiedAttributes:
        - "e-mail" # Invalid AllowedValue
      MfaConfiguration: "MANDATORY" # Invalid AllowedValue
      Schema:
        - AttributeDataType: "String " # Invalid AllowedValue
      UsernameAttributes:
        - "phone" # Imvalid AllowedValue
  CognitoUserPoolClient:
    Type: "AWS::Cognito::UserPoolClient"
    Properties:
      ExplicitAuthFlows:
        - "CUSTOM_AUTHFLOW_ONLY" # Invalid AllowedValue
      UserPoolId: "pool1"
  CognitoUserPoolUser:
    Type: "AWS::Cognito::UserPoolUser"
    Properties:
      DesiredDeliveryMediums:
        - "MAIL" # Invalid AllowedValue
      MessageAction: "RESEND." # Invalid AllowedValue
      UserPoolId: "pool1"
  ConfigAggregationAuthorization:
    Type: "AWS::Config::AggregationAuthorization"
    Properties:
      AuthorizedAccountId: "123456789012"
      AuthorizedAwsRegion: "eu-west-12" # Invalid AllowedValue
  ConfigRule:
    Type: "AWS::Config::ConfigRule"
    Properties:
      MaximumExecutionFrequency: "OneHour" # Invalid AllowedValue
      Scope:
        ComplianceResourceTypes:
          - "AWS:CloudFront::StreamingDistribution" # Invalid AllowedValue
      Source:
        Owner: "Lambda" # Invalid AllowedValue
        SourceDetails:
          - EventSource: "aws.ec2" # Invalid AllowedValue
            MaximumExecutionFrequency: "24 Hours" # Invalid AllowedValue
            MessageType: "Schedulednotification" # Invalid AllowedValue
        SourceIdentifier: "arn:aws:lambda:us-east-2:123456789012:function:custom_rule_name"
  ConfigRecorder:
    Type: "AWS::Config::ConfigurationRecorder"
    Properties:
      RecordingGroup:
        ResourceTypes:
          - "AWS::DMS::Endpoint" # Invalid AllowedValue
      RoleARN: ""
  ConfigDeliveryChannel:
    Type: "AWS::Config::DeliveryChannel"
    Properties:
      ConfigSnapshotDeliveryProperties:
        DeliveryFrequency: "Minute" # Invalid AllowedValue
      S3BucketName: !Ref "S3Bucket"
  DmsEndpoint:
    Type: "AWS::DMS::Endpoint"
    Properties:
      EndpointType: "random" # Invalid AllowedValue
      EngineName: "database" # Invalid AllowedValue
      SslMode: "ssl" # Invalid AllowedValue
  EC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: "ami-2f726546"
      InstanceType: "t1.small" # Invalid AllowedValue
      KeyName: ""
      BlockDeviceMappings:
        - DeviceName: "/dev/sdm"
          Ebs:
            VolumeType: "magnetic" # Invalid AllowedValue
  GlueConnection:
    Type: "AWS::Glue::Connection"
    Properties:
      CatalogId: !Ref "AWS::AccountId"
      ConnectionInput:
        ConnectionProperties: "{}"
        ConnectionType: "FTP" # Invalid AllowedValue
  Route53HealthCheck:
    Type: "AWS::Route53::HealthCheck"
    Properties:
      HealthCheckConfig:
        InsufficientDataHealthStatus: "" # Invalid AllowedValue
        Type: "HTTP_MATCH" # Invalid AllowedValue
  Route53RecordSet:
    Type: "AWS::Route53::RecordSet"
    Properties:
      Failover: "primary" # Invalid AllowedValue
      GeoLocation:
        ContinentCode: "US" # Invalid AllowedValue
      HostedZoneName: "www.example.com"
      Name: "www.example.com"
      Type: "AA" # Invalid AllowedValue
      ResourceRecords:
        - '127.0.0.1'
  Route53RecordSetGroup:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      HostedZoneName: "www.example.com"
      RecordSets:
        - Failover: "Secondary" # Invalid AllowedValue
          GeoLocation:
            ContinentCode: "A" # Invalid AllowedValue
          Name: "www.example.com"
          Type: "ABC" # Invalid AllowedValue
          ResourceRecords:
            - 'www.example.com'
  Route53ResolverEndpoint:
    Type: "AWS::Route53Resolver::ResolverEndpoint"
    Properties:
      Direction: "left" # Invalid AlowedValue
      IpAddresses:
        - Ip: '127.0.0.1'
          SubnetId: "SubnetId"
      SecurityGroupIds:
        - "sg"
  Route53ResolverRule:
    Type: "AWS::Route53Resolver::ResolverRule"
    Properties:
      DomainName: "example.com"
      RuleType: "default" # Invalid AllowedValue
  S3Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      AccelerateConfiguration:
        AccelerationStatus: "Disabled" # Inalid AllowedValue
      AccessControl: "PrivateRead" # Invalid AllowedValue
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "KMS" # Invalid AllowedValue
      NotificationConfiguration:
        TopicConfigurations:
          - Topic: "MyTopic"
            Event: "s3:ObjectCreated:Get" # Invalid AllowedValue
      VersioningConfiguration:
        Status: "disabled" # Invalid AllowedValue
      WebsiteConfiguration:
        IndexDocument: "index.html"
        RedirectAllRequestsTo:
          HostName: "example.com"
          Protocol: "tcp" # Invalid AllowedValue
  SecretManagerSecretTargetAttachment:
    Type: "AWS::SecretsManager::SecretTargetAttachment"
    Properties:
      SecretId: "SecretArn"
      TargetId: "RefToCluster"
      TargetType: "AWS::RDS:DBCluster" # Invalid AllowedValue
  ServiceDiscoveryService:
    Type: "AWS::ServiceDiscovery::Service"
    Properties:
      HealthCheckConfig:
        Type: "SSH" # Invalid AllowedValue
      DnsConfig:
        DnsRecords:
          - Type: "CNAME" # Invalid AllowedValue
            TTL: "60"
  SesReceiptRule:
    Type: "AWS::SES::ReceiptRule"
    Properties:
      Rule:
        TlsPolicy: "required" # Invalid AllowedValue
      RuleSetName: "SesReceiptRule"
  SnsSubscription:
    Type: "AWS::SNS::Subscription"
    Properties:
      Protocol: "mail" # Invalid AllowedValue
      TopicArn: "TopicArn"
  Vpc:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.0.0.0/8"
      InstanceTenancy: "Default" # Invalid AllowedValue
  WAFRule:
    Type: "AWS::WAFRegional::Rule"
    Properties:
      Name: "WAF Rule"
      MetricName: "MetricName"
      Predicates:
        - DataId: "DataId"
          Negated: false
          Type: "Bytematch" # Invalid AllowedValue
  Workspace:
    Type: "AWS::WorkSpaces::Workspace"
    Properties:
      BundleId: "Workspace"
      DirectoryId: "DirectoryId"
      UserName: "test"
      WorkspaceProperties:
        ComputeTypeName: "DEFAULT" # Invalid AllowedValue
        RunningMode: "ALWAYS_OFF" # Invalid AllowedValue
