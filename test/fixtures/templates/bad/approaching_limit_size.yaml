AWSTemplateFormatVersion: "2010-09-09"
Description: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. In aliquet justo nibh, a venenatis justo suscipit et. Sed vulputate est non vulputate cursus. In et mollis nunc. Ut semper justo nec odio dignissim semper. Sed interdum elementum ante. Phasellus bibendum mattis ultrices. Nullam varius dui mi, ac fermentum ante sodales nec. Mauris id libero id turpis sollicitudin imperdiet. Praesent volutpat, elit ut malesuada ultricies, magna velit ullamcorper leo, sagittis pulvinar elit erat faucibus felis.

Morbi sagittis pretium ligula in tristique. Suspendisse odio lectus, condimentum eget egestas pharetra, elementum sit amet sapien. Nullam ipsum eros, ullamcorper ut mi nec, maximus sagittis lacus. In laoreet quam sit amet ante dictum efficitur. Praesent pellentesque purus sit amet nisl scelerisque feugiat. Phasellus feugiat, ex posuere pharetra eleifend, ipsum libero viverra est, sit amet sodales ipsum urna in quam. Donec sit amet pharetra nibh. Nulla eu fermentum leo, a venenatis urna."
Parameters:
  InstanceIP0:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP1:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP2:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP3:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP4:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP5:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP6:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP7:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP8:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP9:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP10:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP11:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP12:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP13:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP14:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP15:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP16:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP17:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP18:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP19:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP20:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP21:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP22:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP23:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP24:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP25:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP26:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP27:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP28:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP29:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP30:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP31:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP32:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP33:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP34:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP35:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP36:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP37:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP38:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP39:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP40:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP41:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP42:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP43:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP44:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP45:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP46:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP47:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP48:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP49:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP50:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP51:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP52:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP53:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP54:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP55:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP56:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP57:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP58:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
  InstanceIP59:
    Type: String
    Description: "Incredibly important IP address you must make sure is kept safe and warm at all times"
    Default: "0.0.0.0/0"
Mappings:
  AMIMap0:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap1:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap2:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap3:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap4:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap5:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap6:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap7:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap8:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap9:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap10:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap11:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap12:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap13:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap14:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap15:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap16:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap17:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap18:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap19:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap20:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap21:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap22:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap23:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap24:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap25:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap26:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap27:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap28:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap29:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap30:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap31:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap32:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap33:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap34:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap35:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap36:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap37:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap38:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap39:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap40:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap41:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap42:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap43:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap44:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap45:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap46:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap47:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap48:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap49:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap50:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap51:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap52:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap53:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap54:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap55:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap56:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap57:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap58:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap59:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap60:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap61:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap62:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap63:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap64:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap65:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap66:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap67:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap68:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap69:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap70:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap71:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap72:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap73:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap74:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap75:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap76:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap77:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap78:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap79:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap80:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap81:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap82:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap83:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap84:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap85:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap86:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap87:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap88:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap89:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap90:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap91:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap92:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap93:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap94:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap95:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap96:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap97:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap98:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
  AMIMap99:
    us-east-1:
      "32": "ami-6411e20d"
    us-west-1:
      "32": "ami-c9c7978c"
Resources:

  MagentoAMIWaitHandle:
    Type: AWS::CloudFormation::WaitConditionHandle
  MagentoAMIWaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    Properties:
      Handle: !Ref MagentoAMIWaitHandle
      Timeout: '3600'

  ServerInstance0:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap0, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance1:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap1, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance2:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap2, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance3:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap3, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance4:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap4, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance5:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap5, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance6:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap6, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance7:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap7, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance8:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap8, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance9:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap9, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance10:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap10, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance11:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap11, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance12:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap12, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance13:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap13, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance14:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap14, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance15:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap15, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance16:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap16, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance17:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap17, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance18:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap18, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance19:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap19, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance20:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap20, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance21:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap21, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance22:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap22, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance23:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap23, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance24:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap24, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance25:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap25, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance26:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap26, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance27:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap27, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance28:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap28, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance29:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap29, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance30:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap30, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance31:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap31, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance32:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap32, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance33:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap33, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance34:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap34, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance35:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap35, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance36:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap36, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance37:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap37, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance38:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap38, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance39:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap39, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance40:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap40, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance41:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap41, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance42:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap42, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance43:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap43, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance44:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap44, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance45:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap45, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance46:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap46, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance47:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap47, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance48:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap48, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance49:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap49, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance50:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap50, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance51:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap51, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance52:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap52, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance53:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap53, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance54:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap54, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance55:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap55, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance56:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap56, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance57:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap57, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance58:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap58, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance59:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap59, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance60:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap60, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance61:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap61, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance62:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap62, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance63:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap63, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance64:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap64, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance65:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap65, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance66:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap66, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance67:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap67, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance68:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap68, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance69:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap69, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance70:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap70, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance71:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap71, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance72:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap72, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance73:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap73, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance74:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap74, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance75:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap75, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance76:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap76, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance77:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap77, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance78:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap78, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance79:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap79, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance80:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap80, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance81:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap81, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance82:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap82, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance83:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap83, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance84:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap84, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance85:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap85, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance86:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap86, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance87:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap87, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance88:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap88, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance89:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap89, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance90:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap90, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance91:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap91, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance92:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap92, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance93:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap93, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance94:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap94, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance95:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap95, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance96:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap96, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance97:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap97, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance98:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap98, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance99:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap99, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance100:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap1, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance101:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap1, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance102:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap1, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance103:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap1, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance104:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap1, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance105:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap1, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance106:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap1, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance107:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap1, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance108:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap1, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance109:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap1, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

  ServerInstance110:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install a Magento web server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: NewIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = MagentoMainLogGroup
                log_stream_name = magento/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --region ${AWS::Region}
                runas=root
            /install_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/install_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /configure_magento.sh:
              source: !Sub https://quickstart-reference.s3.amazonaws.com/magento/latest/scripts/configure_magento.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /home/ec2-user/magento.tar.gz:
              source: 'magento.tar.gz'
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs


    Properties:

      ImageId: !FindInMap [AMIMap1, !Ref "AWS::Region", 32]
      InstanceType: t2.micro
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MagentoAMI  --region ${AWS::Region}
            chmod a+x install_magento.sh
            ./install_magento.sh /tmp/params.txt
            /opt/aws/bin/cfn-signal -e $? -d "`cat /home/ec2-user/adminuri`" -r "Build Process Complete" '${MagentoAMIWaitHandle}'
      Tags:
      - Key: Application
        Value: AWS Quick Start (Magento)
      - Key: Name
        Value: MagentoAMI (AWS Quick Start)

Outputs:
  InstanceID0:
    Value: !Ref InstanceIP0
    Description: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. In aliquet justo nibh, a venenatis justo suscipit et. Sed vulputate est non vulputate cursus. In et mollis nunc. Ut semper justo nec odio dignissim semper. Sed interdum elementum ante. Phasellus bibendum mattis ultrices. Nullam varius dui mi, ac fermentum ante sodales nec. Mauris id libero id turpis sollicitudin imperdiet. Praesent volutpat, elit ut malesuada ultricies, magna velit ullamcorper leo, sagittis pulvinar elit erat faucibus felis. Morbi sagittis pretium ligula in tristique. Suspendisse odio lectus, condimentum eget egestas pharetra, elementum sit amet sapien. Nullam ipsum eros, ullamcorper ut mi nec, maximus sagittis lacus. In laoreet quam sit amet ante dictum efficitur. Praesent pellentesque purus sit amet nisl scelerisque feugiat. Phasellus feugiat, ex posuere pharetra eleifend, ipsum libero viverra est, sit amet sodales ipsum urna in quam. Donec sit amet pharetra nibh. Nulla eu fermentum leo, a venenatis urna."
  InstanceID1:
    Value: !Ref InstanceIP1
    Description: "Instance IP of server 1"
  InstanceID2:
    Value: !Ref InstanceIP2
    Description: "Instance IP of server 2"
  InstanceID3:
    Value: !Ref InstanceIP3
    Description: "Instance IP of server 3"
  InstanceID4:
    Value: !Ref InstanceIP4
    Description: "Instance IP of server 4"
  InstanceID5:
    Value: !Ref InstanceIP5
    Description: "Instance IP of server 5"
  InstanceID6:
    Value: !Ref InstanceIP6
    Description: "Instance IP of server 6"
  InstanceID7:
    Value: !Ref InstanceIP7
    Description: "Instance IP of server 7"
  InstanceID8:
    Value: !Ref InstanceIP8
    Description: "Instance IP of server 8"
  InstanceID9:
    Value: !Ref InstanceIP9
    Description: "Instance IP of server 9"
  InstanceID10:
    Value: !Ref InstanceIP10
    Description: "Instance IP of server 10"
  InstanceID11:
    Value: !Ref InstanceIP11
    Description: "Instance IP of server 11"
  InstanceID12:
    Value: !Ref InstanceIP12
    Description: "Instance IP of server 12"
  InstanceID13:
    Value: !Ref InstanceIP13
    Description: "Instance IP of server 13"
  InstanceID14:
    Value: !Ref InstanceIP14
    Description: "Instance IP of server 14"
  InstanceID15:
    Value: !Ref InstanceIP15
    Description: "Instance IP of server 15"
  InstanceID16:
    Value: !Ref InstanceIP16
    Description: "Instance IP of server 16"
  InstanceID17:
    Value: !Ref InstanceIP17
    Description: "Instance IP of server 17"
  InstanceID18:
    Value: !Ref InstanceIP18
    Description: "Instance IP of server 18"
  InstanceID19:
    Value: !Ref InstanceIP19
    Description: "Instance IP of server 19"
  InstanceID20:
    Value: !Ref InstanceIP20
    Description: "Instance IP of server 20"
  InstanceID21:
    Value: !Ref InstanceIP21
    Description: "Instance IP of server 21"
  InstanceID22:
    Value: !Ref InstanceIP22
    Description: "Instance IP of server 22"
  InstanceID23:
    Value: !Ref InstanceIP23
    Description: "Instance IP of server 23"
  InstanceID24:
    Value: !Ref InstanceIP24
    Description: "Instance IP of server 24"
  InstanceID25:
    Value: !Ref InstanceIP25
    Description: "Instance IP of server 25"
  InstanceID26:
    Value: !Ref InstanceIP26
    Description: "Instance IP of server 26"
  InstanceID27:
    Value: !Ref InstanceIP27
    Description: "Instance IP of server 27"
  InstanceID28:
    Value: !Ref InstanceIP28
    Description: "Instance IP of server 28"
  InstanceID29:
    Value: !Ref InstanceIP29
    Description: "Instance IP of server 29"
  InstanceID30:
    Value: !Ref InstanceIP30
    Description: "Instance IP of server 30"
  InstanceID31:
    Value: !Ref InstanceIP31
    Description: "Instance IP of server 31"
  InstanceID32:
    Value: !Ref InstanceIP32
    Description: "Instance IP of server 32"
  InstanceID33:
    Value: !Ref InstanceIP33
    Description: "Instance IP of server 33"
  InstanceID34:
    Value: !Ref InstanceIP34
    Description: "Instance IP of server 34"
  InstanceID35:
    Value: !Ref InstanceIP35
    Description: "Instance IP of server 35"
  InstanceID36:
    Value: !Ref InstanceIP36
    Description: "Instance IP of server 36"
  InstanceID37:
    Value: !Ref InstanceIP37
    Description: "Instance IP of server 37"
  InstanceID38:
    Value: !Ref InstanceIP38
    Description: "Instance IP of server 38"
  InstanceID39:
    Value: !Ref InstanceIP39
    Description: "Instance IP of server 39"
  InstanceID40:
    Value: !Ref InstanceIP40
    Description: "Instance IP of server 40"
  InstanceID41:
    Value: !Ref InstanceIP41
    Description: "Instance IP of server 41"
  InstanceID42:
    Value: !Ref InstanceIP42
    Description: "Instance IP of server 42"
  InstanceID43:
    Value: !Ref InstanceIP43
    Description: "Instance IP of server 43"
  InstanceID44:
    Value: !Ref InstanceIP44
    Description: "Instance IP of server 44"
  InstanceID45:
    Value: !Ref InstanceIP45
    Description: "Instance IP of server 45"
  InstanceID46:
    Value: !Ref InstanceIP46
    Description: "Instance IP of server 46"
  InstanceID47:
    Value: !Ref InstanceIP47
    Description: "Instance IP of server 47"
  InstanceID48:
    Value: !Ref InstanceIP48
    Description: "Instance IP of server 48"
  InstanceID49:
    Value: !Ref InstanceIP49
    Description: "Instance IP of server 49"
  InstanceID50:
    Value: !Ref InstanceIP50
    Description: "Instance IP of server 50"
  InstanceID51:
    Value: !Ref InstanceIP51
    Description: "Instance IP of server 51"
  InstanceID52:
    Value: !Ref InstanceIP52
    Description: "Instance IP of server 52"
  InstanceID53:
    Value: !Ref InstanceIP53
    Description: "Instance IP of server 53"
  InstanceID54:
    Value: !Ref InstanceIP54
    Description: "Instance IP of server 54"
  InstanceID55:
    Value: !Ref InstanceIP55
    Description: "Instance IP of server 55"
  InstanceID56:
    Value: !Ref InstanceIP56
    Description: "Instance IP of server 56"
  InstanceID57:
    Value: !Ref InstanceIP57
    Description: "Instance IP of server 57"
  InstanceID58:
    Value: !Ref InstanceIP58
    Description: "Instance IP of server 58"
  InstanceID59:
    Value: !Ref InstanceIP59
    Description: "Instance IP of server 59"
