---
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Template with all the resources that are covered by the AllowedValues.
  Minimal configuration for each resource to be "valid". Properties that are part
  of the AllowedValues check are marked for transparancy
Parameters:
  Password:
    Type: String
    NoEcho: True
Resources:
  AmazonMQBroker:
    Type: "AWS::AmazonMQ::Broker"
    Properties:
      AutoMinorVersionUpgrade: false
      BrokerName: "myBroker"
      DeploymentMode: "SINGLE_INSTANCE" # Valid AllowedValue
      EngineType: "ACTIVEMQ" # Valid AllowedValue
      EngineVersion: "ActiveMQ 5.15.8" # Valid AllowedValue
      PubliclyAccessible: false
      HostInstanceType: "mq.t2.micro" # Valid AllowedValue
      Users:
        - ConsoleAccess: false
          Groups:
            - "group1"
          Password: !Ref "Password"
          Username: "user"
  AmazonMQConfiguration:
    Type: "AWS::AmazonMQ::Configuration"
    Properties:
      Data: ""
      EngineType: "ACTIVEMQ" # Valid AllowedValue
      EngineVersion: "ActiveMQ 5.15.8" # Valid AllowedValue
      Name: "Configuration"
  ApiGatewayAuthorizer:
    Type: "AWS::ApiGateway::Authorizer"
    Properties:
      RestApiId: !Ref "ApiGatewayRestAPI"
      Type: "COGNITO_USER_POOLS" # Valid AllowedValue
  ApiGatewayResponse:
    Type: "AWS::ApiGateway::GatewayResponse"
    Properties:
      ResponseType: "DEFAULT_5XX" # Valid AllowedValue
      RestApiId: !Ref "ApiGatewayRestAPI"
  ApiGatewayRestAPI:
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      ApiKeySourceType: "AUTHORIZER" # Valid AllowedValue
  ApiGatewayUsagePlanKey:
    Type: "AWS::ApiGateway::UsagePlanKey"
    Properties:
      KeyId: "ApiGatewayUsagePlanKey"
      KeyType: "API_KEY" # Valid AllowedValue
      UsagePlanId: "UsagePlanId"
  ApplicationAutoScalingPolicy:
    Type: "AWS::ApplicationAutoScaling::ScalingPolicy"
    Properties:
      PolicyName: "ApplicationAutoScalingPolicy"
      PolicyType: "StepScaling" # Valid AllowedValue
      ScalingTargetId: ""
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 50.0
        PredefinedMetricSpecification:
          PredefinedMetricType: "DynamoDBReadCapacityUtilization" # Valid AllowedValue
  AppSyncDataSource:
    Type: "AWS::AppSync::DataSource"
    Properties:
      ApiId: "ApiId"
      Name: "AppSyncDataSource"
      Type: "AWS_LAMBDA" # Valid AllowedValue
  AppSyncGraphQLApi:
    Type: "AWS::AppSync::GraphQLApi"
    Properties:
      Name: "AppSyncGraphQLApi"
      AuthenticationType: "AMAZON_COGNITO_USER_POOLS" # Valid AllowedValue
  AppSyncResolver:
    Type: "AWS::AppSync::Resolver"
    Properties:
      ApiId: "ApiId"
      FieldName: "field"
      Kind: "PIPELINE" # Valid AllowedValue
      TypeName: "type"
  AutoScalingGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      HealthCheckType: "ELB" # Valid AlllowedValue
      LifecycleHookSpecificationList:
        - DefaultResult: "ABANDON" # Valid AlllowedValue
          LifecycleHookName: "hook"
          LifecycleTransition: "autoscaling:EC2_INSTANCE_TERMINATING" # Valid AllowedValue
      MaxSize: "1"
      MinSize: "1"
  AutoScalingLaunchConfiguration:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      BlockDeviceMappings:
        - DeviceName: /dev/sdm
          Ebs:
            VolumeType: "gp2" # Valid AllowedValue
      ImageId: "ami-1234"
      InstanceType: "t2.small"
      PlacementTenancy: "default" # Valid AllowedValue
  AutoScalingLifecycleHook:
    Type: "AWS::AutoScaling::LifecycleHook"
    Properties:
      DefaultResult: "CONTINUE" # Valid AlllowedValue
      AutoScalingGroupName: !Ref "AutoScalingGroup"
      LifecycleTransition: "autoscaling:EC2_INSTANCE_LAUNCHING" # Valid AllowedValue
  AutoScalingPolicy:
    Type: "AWS::AutoScaling::ScalingPolicy"
    Properties:
      AdjustmentType: "ChangeInCapacity" # Valid AllowedValue
      AutoScalingGroupName: !Ref "AutoScalingGroup"
      MetricAggregationType: "Average" # Valid AllowedValue
      PolicyType: "SimpleScaling" # Valid AllowedValue
      TargetTrackingConfiguration:
        CustomizedMetricSpecification:
          MetricName: "MetricName"
          Namespace: "Namespace"
          Statistic: "SampleCount" # Valid AllowedValue
        PredefinedMetricSpecification:
          PredefinedMetricType: "ALBRequestCountPerTarget" # Valid AllowedValue
        TargetValue: 10.5
  AutoScalingPlan:
    Type: "AWS::AutoScalingPlans::ScalingPlan"
    Properties:
      ApplicationSource:
        CloudFormationStackARN: "StackArn"
      ScalingInstructions:
        - MaxCapacity: 1
          MinCapacity: 1
          ResourceId: "ResourceId"
          ScalableDimension: "dynamodb:index:WriteCapacityUnits" # Valid AllowedValues
          ServiceNamespace: "dynamodb" # Valid AllowedValues
          PredictiveScalingMaxCapacityBehavior: "SetForecastCapacityToMaxCapacity" # Valid AllowedValue
          PredictiveScalingMode: "ForecastOnly" # Valid AllowedValue
          TargetTrackingConfigurations:
            - CustomizedScalingMetricSpecification:
                MetricName: "MetricName"
                Namespace: "Namespace"
                Statistic: "SampleCount" # Valid AllowedValue
              PredefinedScalingMetricSpecification:
                PredefinedScalingMetricType: "ALBRequestCountPerTarget" # Valid AllowedValue
              TargetValue: 10.5
  DmsEndpoint:
    Type: "AWS::DMS::Endpoint"
    Properties:
      EndpointType: "source" # Valid AllowedValue
      EngineName: "mysql" # Valid AllowedValue
      SslMode: "verify-full" # Valid AllowedValue
  EC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: "ami-2f726546"
      InstanceType: "t1.micro"
      KeyName: ""
      BlockDeviceMappings:
        - DeviceName: "/dev/sdm"
          Ebs:
            VolumeType: "gp2" # Valid AllowedValue
  GlueConnection:
    Type: "AWS::Glue::Connection"
    Properties:
      CatalogId: !Ref "AWS::AccountId"
      ConnectionInput:
        ConnectionProperties: "{}"
        ConnectionType: "SFTP" # Valid AllowedValue
  RecordSet:
    Type: "AWS::Route53::RecordSet"
    Properties:
      Name: "www.example.com"
      Type: "A" # Valid AllowedValue
      ResourceRecords:
        - '127.0.0.1'
  S3Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: "BucketOwnerFullControl" # Valid AllowedValue
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "AES256" # Valid AllowedValue
      AccelerateConfiguration:
        AccelerationStatus: "Enabled" # Valid AllowedValue
      NotificationConfiguration:
        TopicConfigurations:
          - Topic: "MyTopic"
            Event: "s3:ObjectCreated:*" # Valid AllowedValue
      VersioningConfiguration:
        Status: "Enabled" # Valid AllowedValue
      WebsiteConfiguration:
        IndexDocument: "index.html"
        RedirectAllRequestsTo:
          HostName: "example.com"
          Protocol: "https" # Valid AllowedValue
  SecretManagerSecretTargetAttachment:
    Type: "AWS::SecretsManager::SecretTargetAttachment"
    Properties:
      SecretId: "SecretArn"
      TargetId: "RefToCluster"
      TargetType: "AWS::RDS::DBCluster" # Valid AllowedValue
  SesReceiptRule:
    Type: "AWS::SES::ReceiptRule"
    Properties:
      Rule:
        TlsPolicy: "Require" # Valid AllowedValue
      RuleSetName: "SesReceiptRule"
  SnsSubscription:
    Type: "AWS::SNS::Subscription"
    Properties:
      Protocol: "http" # Valid AllowedValue
      TopicArn: "TopicArn"
  Vpc:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.0.0.0/8"
      InstanceTenancy: "default" # Valid AllowedValue
  WAFRule:
    Type: "AWS::WAFRegional::Rule"
    Properties:
      Name: "WAF Rule"
      MetricName: "MetricName"
      Predicates:
        - DataId: "DataId"
          Negated: false
          Type: "ByteMatch" # Valid AllowedValue
