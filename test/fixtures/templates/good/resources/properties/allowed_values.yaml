---
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Template with all the resources that are covered by the AllowedValues.
  Minimal configuration for each resource to be "valid". Properties that are part
  of the AllowedValues check are marked for transparancy
Parameters:
  Password:
    Type: String
    NoEcho: True
  AutoScalingLaunchConfigurationVolume:
    Type: String
    Default: "standard"
    AllowedValues: # Valid AllowedValues
      - "io1"
      - "gp2"
      - "standard"
  ImageId:
    Type: "AWS::EC2::Image::Id"
Resources:
  AmazonMQBroker:
    Type: "AWS::AmazonMQ::Broker"
    Properties:
      AutoMinorVersionUpgrade: false
      BrokerName: "myBroker"
      DeploymentMode: "SINGLE_INSTANCE" # Valid AllowedValue
      EngineType: "ACTIVEMQ" # Valid AllowedValue
      EngineVersion: "5.15.8" # Valid AllowedValue
      PubliclyAccessible: false
      HostInstanceType: "mq.t2.micro" # Valid AllowedValue
      Users:
        - ConsoleAccess: false
          Groups:
            - "group1"
          Password: !Ref "Password"
          Username: "user"
  AmazonMQConfiguration:
    Type: "AWS::AmazonMQ::Configuration"
    Properties:
      Data: ""
      EngineType: "ACTIVEMQ" # Valid AllowedValue
      EngineVersion: "5.15.8" # Valid AllowedValue
      Name: "Configuration"
  ApiGatewayAuthorizer:
    Type: "AWS::ApiGateway::Authorizer"
    Properties:
      RestApiId: !Ref "ApiGatewayRestAPI"
      Type: "COGNITO_USER_POOLS" # Valid AllowedValue
  ApiGatewayResponse:
    Type: "AWS::ApiGateway::GatewayResponse"
    Properties:
      ResponseType: "DEFAULT_5XX" # Valid AllowedValue
      RestApiId: !Ref "ApiGatewayRestAPI"
  ApiGatewayRestAPI:
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      ApiKeySourceType: "AUTHORIZER" # Valid AllowedValue
  ApiGatewayUsagePlanKey:
    Type: "AWS::ApiGateway::UsagePlanKey"
    Properties:
      KeyId: "ApiGatewayUsagePlanKey"
      KeyType: "API_KEY" # Valid AllowedValue
      UsagePlanId: "UsagePlanId"
  ApplicationAutoScalingPolicy:
    Type: "AWS::ApplicationAutoScaling::ScalingPolicy"
    Properties:
      PolicyName: "ApplicationAutoScalingPolicy"
      PolicyType: "StepScaling" # Valid AllowedValue
      ScalingTargetId: ""
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 50.0
        PredefinedMetricSpecification:
          PredefinedMetricType: "DynamoDBReadCapacityUtilization" # Valid AllowedValue
  AppSyncDataSource:
    Type: "AWS::AppSync::DataSource"
    Properties:
      ApiId: "ApiId"
      Name: "AppSyncDataSource"
      Type: "AWS_LAMBDA" # Valid AllowedValue
  AppSyncGraphQLApi:
    Type: "AWS::AppSync::GraphQLApi"
    Properties:
      Name: "AppSyncGraphQLApi"
      AuthenticationType: "AMAZON_COGNITO_USER_POOLS" # Valid AllowedValue
  AppSyncResolver:
    Type: "AWS::AppSync::Resolver"
    Properties:
      ApiId: "ApiId"
      FieldName: "field"
      Kind: "PIPELINE" # Valid AllowedValue
      TypeName: "type"
  AutoScalingGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      HealthCheckType: "ELB" # Valid AlllowedValue
      LaunchConfigurationName: "launch-configuration"
      LifecycleHookSpecificationList:
        - DefaultResult: "ABANDON" # Valid AlllowedValue
          LifecycleHookName: "hook"
          LifecycleTransition: "autoscaling:EC2_INSTANCE_TERMINATING" # Valid AllowedValue
      MaxSize: "1"
      MinSize: "1"
  AutoScalingLaunchConfiguration:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      BlockDeviceMappings:
        - DeviceName: /dev/sdm
          Ebs:
            VolumeType: !Ref "AutoScalingLaunchConfigurationVolume" # Valid AllowedValue
      ImageId: !Ref "ImageId"
      InstanceType: "t2.small" # Valid AllowedValue
      PlacementTenancy: "default" # Valid AllowedValue
  AutoScalingLifecycleHook:
    Type: "AWS::AutoScaling::LifecycleHook"
    Properties:
      DefaultResult: "CONTINUE" # Valid AlllowedValue
      AutoScalingGroupName: !Ref "AutoScalingGroup"
      LifecycleTransition: "autoscaling:EC2_INSTANCE_LAUNCHING" # Valid AllowedValue
  AutoScalingPolicy:
    Type: "AWS::AutoScaling::ScalingPolicy"
    Properties:
      AdjustmentType: "ChangeInCapacity" # Valid AllowedValue
      AutoScalingGroupName: !Ref "AutoScalingGroup"
      MetricAggregationType: "Average" # Valid AllowedValue
      PolicyType: "SimpleScaling" # Valid AllowedValue
      TargetTrackingConfiguration:
        CustomizedMetricSpecification:
          MetricName: "MetricName"
          Namespace: "Namespace"
          Statistic: "SampleCount" # Valid AllowedValue
        PredefinedMetricSpecification:
          PredefinedMetricType: "ALBRequestCountPerTarget" # Valid AllowedValue
        TargetValue: 10.5
  AutoScalingPlan:
    Type: "AWS::AutoScalingPlans::ScalingPlan"
    Properties:
      ApplicationSource:
        CloudFormationStackARN: "StackArn"
      ScalingInstructions:
        - MaxCapacity: 1
          MinCapacity: 1
          ResourceId: "ResourceId"
          ScalableDimension: "dynamodb:index:WriteCapacityUnits" # Valid AllowedValues
          ServiceNamespace: "dynamodb" # Valid AllowedValues
          PredictiveScalingMaxCapacityBehavior: "SetForecastCapacityToMaxCapacity" # Valid AllowedValue
          PredictiveScalingMode: "ForecastOnly" # Valid AllowedValue
          TargetTrackingConfigurations:
            - CustomizedScalingMetricSpecification:
                MetricName: "MetricName"
                Namespace: "Namespace"
                Statistic: "SampleCount" # Valid AllowedValue
              PredefinedScalingMetricSpecification:
                PredefinedScalingMetricType: "ALBRequestCountPerTarget" # Valid AllowedValue
              TargetValue: 10.5
  Budget:
    Type: "AWS::Budgets::Budget"
    Properties:
      Budget:
        BudgetType: "RI_UTILIZATION" # Valid AllowedValue
        TimeUnit: "MONTHLY" # Valid AllowedValue
      NotificationsWithSubscribers:
        - Subscribers:
          - SubscriptionType: "EMAIL" #Valid AllowedValue
            Address: "test@test.com"
          Notification:
            ThresholdType: "PERCENTAGE" # Valid AllowedValue
            Threshold: 80
            NotificationType: "ACTUAL" # Valid AllowedValue
            ComparisonOperator: "GREATER_THAN" # Valid AllowedValue
  Certificate:
    Type: "AWS::CertificateManager::Certificate"
    Properties:
      DomainName: "example.com"
      ValidationMethod: "DNS" # Valid AllowedValue
  CloudTrail:
    Type: "AWS::CloudTrail::Trail"
    Properties:
      EventSelectors:
        - ReadWriteType: "All" # Valid AllowedValue
          DataResources:
            - Type: "AWS::S3::Object" # Valid AllowedValue
              Values:
                - "Arn1"
                - "Arn2"
      IsLogging: True
      S3BucketName: "MyBucket"
  CloudWatchAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ComparisonOperator: "GreaterThanOrEqualToThreshold" # Valid AllowedValue
      EvaluationPeriods: 1
      Statistic: "SampleCount" # Valid AllowedValue
      Threshold: 0.0
      TreatMissingData: "notBreaching" # Valid AllowedValue
      Unit: "Terabits/Second" # Valid AllowedValue
  CloudWatchEventRule:
    Type: "AWS::Events::Rule"
    Properties:
      EventPattern: ""
      State: "ENABLED" # Valid AllowedValue
  CloudWatchEventBusPolicy:
    Type: "AWS::Events::EventBusPolicy"
    Properties:
      Action: "events:PutEvents" # Valid AllowedValue
      Condition:
        Type: "StringEquals" # Valid AllowedValue
        Key: "aws:PrincipalOrgID" # Valid AllowedValue
        Value: "o-1234567890"
      Principal: "*"
      StatementId: "x"
  CodeBuildProject:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Artifacts:
        Packaging: "ZIP" # Valid AllowedValue
        Type: "CODEPIPELINE" # Valid AllowedValue
      Cache:
        Type: "NO_CACHE" # Valid AllowedValue
      Environment:
        ComputeType: "BUILD_GENERAL1_LARGE" # Valid AllowedValue
        Image: "registry/repository:latest"
        ImagePullCredentialsType: "CODEBUILD" # Valid AllowedValue
        Type: "LINUX_CONTAINER" # Valid AllowedValue
      LogsConfig:
        CloudWatchLogs:
          Status: "ENABLED" # Valid AllowedValue
        S3Logs:
          Status: "DISABLED" # Valid AllowedValue
      ServiceRole: ""
      Source:
        Type: "GITHUB_ENTERPRISE" # Valid AllowedValue
  CodeCommitRepository:
    Type: "AWS::CodeCommit::Repository"
    Properties:
      RepositoryName: "CodeCommitRepository"
      Triggers:
      - Name: "Trigger"
        Events:
          - "updateReference" # Valid AllowedValue
  CodeDeployApplication:
    Type: "AWS::CodeDeploy::Application"
    Properties:
      ApplicationName: "CodeDeployApplication"
      ComputePlatform: "Server" # Valid AllowedValue
  CodeDeployDeploymentConfig:
    Type: "AWS::CodeDeploy::DeploymentConfig"
    Properties:
      DeploymentConfigName: "CodeDeployDeploymentConfig"
      MinimumHealthyHosts:
        Type: "HOST_COUNT" # Valid AllowedValue
        Value: 1
  CodeDeployDeploymentGroup:
    Type: "AWS::CodeDeploy::DeploymentGroup"
    Properties:
      ApplicationName: "CodeDeployDeploymentGroup"
      AutoRollbackConfiguration:
        Events:
          - "DEPLOYMENT_FAILURE" # Valid AllowedValue
          - "DEPLOYMENT_STOP_ON_ALARM" # Valid AllowedValue
      DeploymentStyle:
        DeploymentOption: "WITH_TRAFFIC_CONTROL" # Valid AllowedValue
        DeploymentType: "IN_PLACE" # Valid AllowedValue
      ServiceRoleArn: "ServiceRoleArn"
      TriggerConfigurations:
        - TriggerEvents:
            - "DeploymentStart" # Valid AllowedValue
  CodePipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      ArtifactStore:
        Location: "S3Bucket"
        Type: "S3" # Valid AllowedValue
      RoleArn: "my-role-arn"
      Stages:
        - Name: "stage1"
          Actions:
            - Name: "action1"
              ActionTypeId:
                Category: "Source" # Valid AllowedValue
                Owner: "AWS" # Valid AllowedValue
                Provider: "provider"
                Version: "1"
          Blockers:
            - Name: "blocker1"
              Type: "Schedule" # Valid AllowedValue
        - Name: "stage2"
          Actions:
            - Name: "action2"
              ActionTypeId:
                Category: "Test" # Valid AllowedValue
                Owner: "AWS" # Valid AllowedValue
                Provider: "provider"
                Version: "1"
  CodePipelineCustomActionType:
    Type: "AWS::CodePipeline::CustomActionType"
    Properties:
      Category: "Test" # Valid AllowedValue
      ConfigurationProperties:
        - Key: True
          Name: "My-Name"
          Required: True
          Secret: False
          Type: "String" # Valid AllowedValue
      InputArtifactDetails:
        MaximumCount: 1
        MinimumCount: 1
      OutputArtifactDetails:
        MaximumCount: 1
        MinimumCount: 1
      Provider: "My-Build-Provider-Name"
      Version: "1a"
  CodePipelineWebhook:
    Type: "AWS::CodePipeline::Webhook"
    Properties:
      Authentication: "GITHUB_HMAC" # Valid AllowedValue
      AuthenticationConfiguration:
        SecretToken: "githubtoken"
      Filters:
        - JsonPath: ""
      TargetAction: "action1"
      TargetPipeline: ""
      TargetPipelineVersion: 1
  CognitoIdentityPool:
    Type: "AWS::Cognito::IdentityPool"
    Properties:
      AllowUnauthenticatedIdentities: False
      CognitoStreams:
        StreamingStatus: "ENABLED" # Valid AllowedValue
  CognitoUserPool:
    Type: "AWS::Cognito::UserPool"
    Properties:
      AliasAttributes:
        - "phone_number" # Valid AllowedValue
      AutoVerifiedAttributes:
        - "email" # Valid AllowedValue
      MfaConfiguration: "OPTIONAL" # Valid AllowedValue
      Schema:
        - AttributeDataType: "String" # Valid AllowedValue
      UsernameAttributes:
        - "phone_number" # Valid AllowedValue
  CognitoUserPoolClient:
    Type: "AWS::Cognito::UserPoolClient"
    Properties:
      ExplicitAuthFlows:
        - "CUSTOM_AUTH_FLOW_ONLY" # Valid AllowedValue
      UserPoolId: "pool1"
  CognitoUserPoolUser:
    Type: "AWS::Cognito::UserPoolUser"
    Properties:
      DesiredDeliveryMediums:
        - "SMS" # Valid AllowedValue
      MessageAction: "RESEND" # Valid AllowedValue
      UserPoolId: "pool1"
  ConfigAggregationAuthorization:
    Type: "AWS::Config::AggregationAuthorization"
    Properties:
      AuthorizedAccountId: "123456789012"
      AuthorizedAwsRegion: "eu-west-1" # Valid AllowedValue
  ConfigRule:
    Type: "AWS::Config::ConfigRule"
    Properties:
      MaximumExecutionFrequency: "One_Hour" # Valid AllowedValue
      Scope:
        ComplianceResourceTypes:
          - "AWS::CloudFront::StreamingDistribution" # Valid AllowedValue
      Source:
        Owner: "CUSTOM_LAMBDA" # Valid AllowedValue
        SourceDetails:
          - EventSource: "aws.config" # Valid AllowedValue
            MaximumExecutionFrequency: "TwentyFour_Hours" # Valid AllowedValue
            MessageType: "ConfigurationItemChangeNotification" # Valid AllowedValue
        SourceIdentifier: "arn:aws:lambda:us-east-2:123456789012:function:custom_rule_name"
  ConfigRecorder:
    Type: "AWS::Config::ConfigurationRecorder"
    Properties:
      RecordingGroup:
        ResourceTypes:
          - "AWS::CloudFront::Distribution" # Valid AllowedValue
      RoleARN: ""
  ConfigDeliveryChannel:
    Type: "AWS::Config::DeliveryChannel"
    Properties:
      ConfigSnapshotDeliveryProperties:
        DeliveryFrequency: "Six_Hours" # Valid AllowedValue
      S3BucketName: !Ref "S3Bucket"
  DmsEndpoint:
    Type: "AWS::DMS::Endpoint"
    Properties:
      EndpointType: "source" # Valid AllowedValue
      EngineName: "mysql" # Valid AllowedValue
      SslMode: "verify-full" # Valid AllowedValue
  EC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: "ami-2f726546"
      InstanceType: "t1.micro" # Valid AllowedValue
      KeyName: ""
      BlockDeviceMappings:
        - DeviceName: "/dev/sdm"
          Ebs:
            VolumeType: "gp2" # Valid AllowedValue
  GlueConnection:
    Type: "AWS::Glue::Connection"
    Properties:
      CatalogId: !Ref "AWS::AccountId"
      ConnectionInput:
        ConnectionProperties: "{}"
        ConnectionType: "SFTP" # Valid AllowedValue
  Route53HealthCheck:
    Type: "AWS::Route53::HealthCheck"
    Properties:
      HealthCheckConfig:
        InsufficientDataHealthStatus: "Healthy" # Valid AllowedValue
        Type: "CLOUDWATCH_METRIC"
  Route53RecordSet:
    Type: "AWS::Route53::RecordSet"
    Properties:
      Failover: "PRIMARY" # Valid AllowedValue
      GeoLocation:
        ContinentCode: "EU" # Valid AllowedValue
      HostedZoneName: "www.example.com"
      Name: "www.example.com"
      Type: "A" # Valid AllowedValue
      ResourceRecords:
        - '127.0.0.1'
  Route53RecordSetGroup:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      HostedZoneName: "www.example.com"
      RecordSets:
        - Failover: "SECONDARY" # Valid AllowedValue
          GeoLocation:
            ContinentCode: "AF" # Valid AllowedValue
          Name: "www.example.com"
          Type: "CNAME" # Valid AllowedValue
          ResourceRecords:
            - 'www.example.com'
  Route53ResolverEndpoint:
    Type: "AWS::Route53Resolver::ResolverEndpoint"
    Properties:
      Direction: "INBOUND" # Valid AlowedValue
      IpAddresses:
        - Ip: '127.0.0.1'
          SubnetId: "SubnetId"
      SecurityGroupIds:
        - "sg"
  Route53ResolverRule:
    Type: "AWS::Route53Resolver::ResolverRule"
    Properties:
      DomainName: "example.com"
      RuleType: "SYSTEM" # Valid AllowedValue
  S3Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: "BucketOwnerFullControl" # Valid AllowedValue
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "AES256" # Valid AllowedValue
      AccelerateConfiguration:
        AccelerationStatus: "Enabled" # Valid AllowedValue
      NotificationConfiguration:
        TopicConfigurations:
          - Topic: "MyTopic"
            Event: "s3:ObjectCreated:*" # Valid AllowedValue
      VersioningConfiguration:
        Status: "Enabled" # Valid AllowedValue
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: "example.com"
          Protocol: "https" # Valid AllowedValue
  SecretManagerSecretTargetAttachment:
    Type: "AWS::SecretsManager::SecretTargetAttachment"
    Properties:
      SecretId: "SecretArn"
      TargetId: "RefToCluster"
      TargetType: "AWS::RDS::DBCluster" # Valid AllowedValue
  SesReceiptRule:
    Type: "AWS::SES::ReceiptRule"
    Properties:
      Rule:
        TlsPolicy: "Require" # Valid AllowedValue
      RuleSetName: "SesReceiptRule"
  SnsSubscription:
    Type: "AWS::SNS::Subscription"
    Properties:
      Protocol: "http" # Valid AllowedValue
      TopicArn: "TopicArn"
  Vpc:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.0.0.0/16"
      InstanceTenancy: "default" # Valid AllowedValue
  WAFRule:
    Type: "AWS::WAFRegional::Rule"
    Properties:
      Name: "WAF Rule"
      MetricName: "MetricName"
      Predicates:
        - DataId: "DataId"
          Negated: false
          Type: "ByteMatch" # Valid AllowedValue
  Workspace:
    Type: "AWS::WorkSpaces::Workspace"
    Properties:
      BundleId: "Workspace"
      DirectoryId: "DirectoryId"
      UserName: "test"
      WorkspaceProperties:
        ComputeTypeName: "STANDARD" # Valid AllowedValue
        RunningMode: "ALWAYS_ON" # Valid AllowedValue
